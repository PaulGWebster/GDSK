ude"
        ],
        "test/cmp_protect_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/cmp_server_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/cmp_status_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/cmp_vfy_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/cmsapitest" => [
            "include",
            "apps/include"
        ],
        "test/conf_include_test" => [
            "include",
            "apps/include"
        ],
        "test/confdump" => [
            "include",
            "apps/include"
        ],
        "test/constant_time_test" => [
            "include",
            "apps/include"
        ],
        "test/context_internal_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/crltest" => [
            "include",
            "apps/include"
        ],
        "test/ct_test" => [
            "include",
            "apps/include"
        ],
        "test/ctype_internal_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/curve448_internal_test" => [
            ".",
            "include",
            "apps/include",
            "crypto/ec/curve448"
        ],
        "test/d2i_test" => [
            "include",
            "apps/include"
        ],
        "test/danetest" => [
            "include",
            "apps/include"
        ],
        "test/defltfips_test" => [
            "include",
            "apps/include"
        ],
        "test/destest" => [
            "include",
            "apps/include"
        ],
        "test/dhtest" => [
            "include",
            "apps/include"
        ],
        "test/drbgtest" => [
            "include",
            "apps/include",
            "providers/common/include"
        ],
        "test/dsa_no_digest_size_test" => [
            "include",
            "apps/include"
        ],
        "test/dsatest" => [
            "include",
            "apps/include"
        ],
        "test/dtls_mtu_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/dtlstest" => [
            "include",
            "apps/include"
        ],
        "test/dtlsv1listentest" => [
            "include",
            "apps/include"
        ],
        "test/ec_internal_test" => [
            "include",
            "crypto/ec",
            "apps/include"
        ],
        "test/ecdsatest" => [
            "include",
            "apps/include"
        ],
        "test/ecstresstest" => [
            "include",
            "apps/include"
        ],
        "test/ectest" => [
            "include",
            "apps/include"
        ],
        "test/endecode_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/endecoder_legacy_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/enginetest" => [
            "include",
            "apps/include"
        ],
        "test/errtest" => [
            "include",
            "apps/include"
        ],
        "test/evp_byname_test" => [
            "include",
            "apps/include"
        ],
        "test/evp_extra_test" => [
            "include",
            "apps/include",
            "providers/common/include",
            "providers/implementations/include"
        ],
        "test/evp_extra_test2" => [
            "include",
            "apps/include"
        ],
        "test/evp_fetch_prov_test" => [
            "include",
            "apps/include"
        ],
        "test/evp_kdf_test" => [
            "include",
            "apps/include"
        ],
        "test/evp_libctx_test" => [
            "include",
            "apps/include"
        ],
        "test/evp_pkey_ctx_new_from_name" => [
            "include",
            "apps/include"
        ],
        "test/evp_pkey_dparams_test" => [
            "include",
            "apps/include"
        ],
        "test/evp_pkey_provided_test" => [
            "include",
            "apps/include"
        ],
        "test/evp_test" => [
            "include",
            "apps/include"
        ],
        "test/exdatatest" => [
            "include",
            "apps/include"
        ],
        "test/exptest" => [
            "include",
            "apps/include"
        ],
        "test/ext_internal_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/fatalerrtest" => [
            "include",
            "apps/include"
        ],
        "test/ffc_internal_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/fips_version_test" => [
            "include",
            "apps/include"
        ],
        "test/gmdifftest" => [
            "include",
            "apps/include"
        ],
        "test/helpers/asynciotest-bin-ssltestlib.o" => [
            ".",
            "include"
        ],
        "test/helpers/cmp_asn_test-bin-cmp_testlib.o" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/helpers/cmp_client_test-bin-cmp_testlib.o" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/helpers/cmp_ctx_test-bin-cmp_testlib.o" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/helpers/cmp_hdr_test-bin-cmp_testlib.o" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/helpers/cmp_msg_test-bin-cmp_testlib.o" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/helpers/cmp_protect_test-bin-cmp_testlib.o" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/helpers/cmp_server_test-bin-cmp_testlib.o" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/helpers/cmp_status_test-bin-cmp_testlib.o" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/helpers/cmp_testlib.o" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/helpers/cmp_vfy_test-bin-cmp_testlib.o" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/helpers/dtls_mtu_test-bin-ssltestlib.o" => [
            ".",
            "include"
        ],
        "test/helpers/dtlstest-bin-ssltestlib.o" => [
            ".",
            "include"
        ],
        "test/helpers/fatalerrtest-bin-ssltestlib.o" => [
            ".",
            "include"
        ],
        "test/helpers/handshake.o" => [
            ".",
            "include"
        ],
        "test/helpers/pkcs12.o" => [
            ".",
            "include"
        ],
        "test/helpers/pkcs12_format_test-bin-pkcs12.o" => [
            ".",
            "include"
        ],
        "test/helpers/recordlentest-bin-ssltestlib.o" => [
            ".",
            "include"
        ],
        "test/helpers/servername_test-bin-ssltestlib.o" => [
            ".",
            "include"
        ],
        "test/helpers/ssl_test-bin-handshake.o" => [
            ".",
            "include"
        ],
        "test/helpers/ssl_test-bin-ssl_test_ctx.o" => [
            "include"
        ],
        "test/helpers/ssl_test_ctx.o" => [
            "include"
        ],
        "test/helpers/ssl_test_ctx_test-bin-ssl_test_ctx.o" => [
            "include"
        ],
        "test/helpers/sslapitest-bin-ssltestlib.o" => [
            ".",
            "include"
        ],
        "test/helpers/sslbuffertest-bin-ssltestlib.o" => [
            ".",
            "include"
        ],
        "test/helpers/sslcorrupttest-bin-ssltestlib.o" => [
            ".",
            "include"
        ],
        "test/helpers/ssltestlib.o" => [
            ".",
            "include"
        ],
        "test/helpers/tls13ccstest-bin-ssltestlib.o" => [
            ".",
            "include"
        ],
        "test/hexstr_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/hmactest" => [
            "include",
            "apps/include"
        ],
        "test/http_test" => [
            "include",
            "apps/include"
        ],
        "test/ideatest" => [
            "include",
            "apps/include"
        ],
        "test/igetest" => [
            "include",
            "apps/include"
        ],
        "test/keymgmt_internal_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/lhash_test" => [
            "include",
            "apps/include"
        ],
        "test/libtestutil.a" => [
            "include",
            "apps/include",
            "."
        ],
        "test/localetest" => [
            "include",
            "apps/include"
        ],
        "test/mdc2_internal_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/mdc2test" => [
            "include",
            "apps/include"
        ],
        "test/memleaktest" => [
            "include",
            "apps/include"
        ],
        "test/modes_internal_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/namemap_internal_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/nodefltctxtest" => [
            "include",
            "apps/include"
        ],
        "test/ocspapitest" => [
            "include",
            "apps/include"
        ],
        "test/ossl_store_test" => [
            "include",
            "apps/include"
        ],
        "test/p_minimal" => [
            "include",
            "."
        ],
        "test/p_test" => [
            "include",
            "."
        ],
        "test/packettest" => [
            "include",
            "apps/include"
        ],
        "test/param_build_test" => [
            "include",
            "apps/include"
        ],
        "test/params_api_test" => [
            "include",
            "apps/include"
        ],
        "test/params_conversion_test" => [
            "include",
            "apps/include"
        ],
        "test/params_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/pbelutest" => [
            "include",
            "apps/include"
        ],
        "test/pbetest" => [
            "include",
            "apps/include"
        ],
        "test/pem_read_depr_test" => [
            "include",
            "apps/include"
        ],
        "test/pemtest" => [
            "include",
            "apps/include"
        ],
        "test/pkcs12_format_test" => [
            "include",
            "apps/include"
        ],
        "test/pkcs7_test" => [
            "include",
            "apps/include"
        ],
        "test/pkey_meth_kdf_test" => [
            "include",
            "apps/include"
        ],
        "test/pkey_meth_test" => [
            "include",
            "apps/include"
        ],
        "test/poly1305_internal_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/property_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/prov_config_test" => [
            "include",
            "apps/include"
        ],
        "test/provfetchtest" => [
            "include",
            "apps/include"
        ],
        "test/provider_fallback_test" => [
            "include",
            "apps/include"
        ],
        "test/provider_internal_test" => [
            "include",
            "apps/include",
            "."
        ],
        "test/provider_pkey_test" => [
            "include",
            "apps/include"
        ],
        "test/provider_status_test" => [
            "include",
            "apps/include"
        ],
        "test/provider_test" => [
            "include",
            "apps/include",
            "."
        ],
        "test/punycode_test" => [
            "include",
            "apps/include"
        ],
        "test/rand_status_test" => [
            "include",
            "apps/include"
        ],
        "test/rand_test" => [
            "include",
            "apps/include"
        ],
        "test/rc2test" => [
            "include",
            "apps/include"
        ],
        "test/rc4test" => [
            "include",
            "apps/include"
        ],
        "test/rc5test" => [
            "include",
            "apps/include"
        ],
        "test/rdrand_sanitytest" => [
            "include",
            "apps/include"
        ],
        "test/recordlentest" => [
            "include",
            "apps/include"
        ],
        "test/rsa_complex" => [
            "include",
            "apps/include"
        ],
        "test/rsa_mp_test" => [
            "include",
            "apps/include"
        ],
        "test/rsa_sp800_56b_test" => [
            ".",
            "include",
            "crypto/rsa",
            "apps/include"
        ],
        "test/rsa_test" => [
            "include",
            "apps/include"
        ],
        "test/sanitytest" => [
            "include",
            "apps/include"
        ],
        "test/secmemtest" => [
            "include",
            "apps/include"
        ],
        "test/servername_test" => [
            "include",
            "apps/include"
        ],
        "test/sha_test" => [
            "include",
            "apps/include"
        ],
        "test/siphash_internal_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/sm2_internal_test" => [
            "include",
            "apps/include"
        ],
        "test/sm3_internal_test" => [
            "include",
            "apps/include"
        ],
        "test/sm4_internal_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/sparse_array_test" => [
            "include",
            "apps/include"
        ],
        "test/srptest" => [
            "include",
            "apps/include"
        ],
        "test/ssl_cert_table_internal_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/ssl_ctx_test" => [
            "include",
            "apps/include"
        ],
        "test/ssl_old_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/ssl_test" => [
            "include",
            "apps/include"
        ],
        "test/ssl_test_ctx_test" => [
            "include",
            "apps/include"
        ],
        "test/sslapitest" => [
            "include",
            "apps/include",
            "."
        ],
        "test/sslbuffertest" => [
            "include",
            "apps/include"
        ],
        "test/sslcorrupttest" => [
            "include",
            "apps/include"
        ],
        "test/stack_test" => [
            "include",
            "apps/include"
        ],
        "test/sysdefaulttest" => [
            "include",
            "apps/include"
        ],
        "test/test_test" => [
            "include",
            "apps/include"
        ],
        "test/threadstest" => [
            "include",
            "apps/include"
        ],
        "test/threadstest_fips" => [
            "include",
            "apps/include"
        ],
        "test/time_offset_test" => [
            "include",
            "apps/include"
        ],
        "test/tls13ccstest" => [
            "include",
            "apps/include"
        ],
        "test/tls13encryptiontest" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/trace_api_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/uitest" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/upcallstest" => [
            "include",
            "apps/include"
        ],
        "test/user_property_test" => [
            "include",
            "apps/include"
        ],
        "test/v3ext" => [
            "include",
            "apps/include"
        ],
        "test/v3nametest" => [
            "include",
            "apps/include"
        ],
        "test/verify_extra_test" => [
            "include",
            "apps/include"
        ],
        "test/versions" => [
            "include",
            "apps/include"
        ],
        "test/wpackettest" => [
            "include",
            "apps/include"
        ],
        "test/x509_check_cert_pkey_test" => [
            "include",
            "apps/include"
        ],
        "test/x509_dup_cert_test" => [
            "include",
            "apps/include"
        ],
        "test/x509_internal_test" => [
            ".",
            "include",
            "apps/include"
        ],
        "test/x509_time_test" => [
            "include",
            "apps/include"
        ],
        "test/x509aux" => [
            "include",
            "apps/include"
        ],
        "util/wrap.pl" => [
            "."
        ]
    },
    "ldadd" => {},
    "libraries" => [
        "apps/libapps.a",
        "libcrypto",
        "libssl",
        "providers/libcommon.a",
        "providers/libdefault.a",
        "providers/libfips.a",
        "providers/liblegacy.a",
        "test/libtestutil.a"
    ],
    "mandocs" => {
        "man1" => [
            "doc/man/man1/CA.pl.1",
            "doc/man/man1/openssl-asn1parse.1",
            "doc/man/man1/openssl-ca.1",
            "doc/man/man1/openssl-ciphers.1",
            "doc/man/man1/openssl-cmds.1",
            "doc/man/man1/openssl-cmp.1",
            "doc/man/man1/openssl-cms.1",
            "doc/man/man1/openssl-crl.1",
            "doc/man/man1/openssl-crl2pkcs7.1",
            "doc/man/man1/openssl-dgst.1",
            "doc/man/man1/openssl-dhparam.1",
            "doc/man/man1/openssl-dsa.1",
            "doc/man/man1/openssl-dsaparam.1",
            "doc/man/man1/openssl-ec.1",
            "doc/man/man1/openssl-ecparam.1",
            "doc/man/man1/openssl-enc.1",
            "doc/man/man1/openssl-engine.1",
            "doc/man/man1/openssl-errstr.1",
            "doc/man/man1/openssl-fipsinstall.1",
            "doc/man/man1/openssl-format-options.1",
            "doc/man/man1/openssl-gendsa.1",
            "doc/man/man1/openssl-genpkey.1",
            "doc/man/man1/openssl-genrsa.1",
            "doc/man/man1/openssl-info.1",
            "doc/man/man1/openssl-kdf.1",
            "doc/man/man1/openssl-list.1",
            "doc/man/man1/openssl-mac.1",
            "doc/man/man1/openssl-namedisplay-options.1",
            "doc/man/man1/openssl-nseq.1",
            "doc/man/man1/openssl-ocsp.1",
            "doc/man/man1/openssl-passphrase-options.1",
            "doc/man/man1/openssl-passwd.1",
            "doc/man/man1/openssl-pkcs12.1",
            "doc/man/man1/openssl-pkcs7.1",
            "doc/man/man1/openssl-pkcs8.1",
            "doc/man/man1/openssl-pkey.1",
            "doc/man/man1/openssl-pkeyparam.1",
            "doc/man/man1/openssl-pkeyutl.1",
            "doc/man/man1/openssl-prime.1",
            "doc/man/man1/openssl-rand.1",
            "doc/man/man1/openssl-rehash.1",
            "doc/man/man1/openssl-req.1",
            "doc/man/man1/openssl-rsa.1",
            "doc/man/man1/openssl-rsautl.1",
            "doc/man/man1/openssl-s_client.1",
            "doc/man/man1/openssl-s_server.1",
            "doc/man/man1/openssl-s_time.1",
            "doc/man/man1/openssl-sess_id.1",
            "doc/man/man1/openssl-smime.1",
            "doc/man/man1/openssl-speed.1",
            "doc/man/man1/openssl-spkac.1",
            "doc/man/man1/openssl-srp.1",
            "doc/man/man1/openssl-storeutl.1",
            "doc/man/man1/openssl-ts.1",
            "doc/man/man1/openssl-verification-options.1",
            "doc/man/man1/openssl-verify.1",
            "doc/man/man1/openssl-version.1",
            "doc/man/man1/openssl-x509.1",
            "doc/man/man1/openssl.1",
            "doc/man/man1/tsget.1"
        ],
        "man3" => [
            "doc/man/man3/ADMISSIONS.3",
            "doc/man/man3/ASN1_EXTERN_FUNCS.3",
            "doc/man/man3/ASN1_INTEGER_get_int64.3",
            "doc/man/man3/ASN1_INTEGER_new.3",
            "doc/man/man3/ASN1_ITEM_lookup.3",
            "doc/man/man3/ASN1_OBJECT_new.3",
            "doc/man/man3/ASN1_STRING_TABLE_add.3",
            "doc/man/man3/ASN1_STRING_length.3",
            "doc/man/man3/ASN1_STRING_new.3",
            "doc/man/man3/ASN1_STRING_print_ex.3",
            "doc/man/man3/ASN1_TIME_set.3",
            "doc/man/man3/ASN1_TYPE_get.3",
            "doc/man/man3/ASN1_aux_cb.3",
            "doc/man/man3/ASN1_generate_nconf.3",
            "doc/man/man3/ASN1_item_d2i_bio.3",
            "doc/man/man3/ASN1_item_new.3",
            "doc/man/man3/ASN1_item_sign.3",
            "doc/man/man3/ASYNC_WAIT_CTX_new.3",
            "doc/man/man3/ASYNC_start_job.3",
            "doc/man/man3/BF_encrypt.3",
            "doc/man/man3/BIO_ADDR.3",
            "doc/man/man3/BIO_ADDRINFO.3",
            "doc/man/man3/BIO_connect.3",
            "doc/man/man3/BIO_ctrl.3",
            "doc/man/man3/BIO_f_base64.3",
            "doc/man/man3/BIO_f_buffer.3",
            "doc/man/man3/BIO_f_cipher.3",
            "doc/man/man3/BIO_f_md.3",
            "doc/man/man3/BIO_f_null.3",
            "doc/man/man3/BIO_f_prefix.3",
            "doc/man/man3/BIO_f_readbuffer.3",
            "doc/man/man3/BIO_f_ssl.3",
            "doc/man/man3/BIO_find_type.3",
            "doc/man/man3/BIO_get_data.3",
            "doc/man/man3/BIO_get_ex_new_index.3",
            "doc/man/man3/BIO_meth_new.3",
            "doc/man/man3/BIO_new.3",
            "doc/man/man3/BIO_new_CMS.3",
            "doc/man/man3/BIO_parse_hostserv.3",
            "doc/man/man3/BIO_printf.3",
            "doc/man/man3/BIO_push.3",
            "doc/man/man3/BIO_read.3",
            "doc/man/man3/BIO_s_accept.3",
            "doc/man/man3/BIO_s_bio.3",
            "doc/man/man3/BIO_s_connect.3",
            "doc/man/man3/BIO_s_core.3",
            "doc/man/man3/BIO_s_datagram.3",
            "doc/man/man3/BIO_s_fd.3",
            "doc/man/man3/BIO_s_file.3",
            "doc/man/man3/BIO_s_mem.3",
            "doc/man/man3/BIO_s_null.3",
            "doc/man/man3/BIO_s_socket.3",
            "doc/man/man3/BIO_set_callback.3",
            "doc/man/man3/BIO_should_retry.3",
            "doc/man/man3/BIO_socket_wait.3",
            "doc/man/man3/BN_BLINDING_new.3",
            "doc/man/man3/BN_CTX_new.3",
            "doc/man/man3/BN_CTX_start.3",
            "doc/man/man3/BN_add.3",
            "doc/man/man3/BN_add_word.3",
            "doc/man/man3/BN_bn2bin.3",
            "doc/man/man3/BN_cmp.3",
            "doc/man/man3/BN_copy.3",
            "doc/man/man3/BN_generate_prime.3",
            "doc/man/man3/BN_mod_exp_mont.3",
            "doc/man/man3/BN_mod_inverse.3",
            "doc/man/man3/BN_mod_mul_montgomery.3",
            "doc/man/man3/BN_mod_mul_reciprocal.3",
            "doc/man/man3/BN_new.3",
            "doc/man/man3/BN_num_bytes.3",
            "doc/man/man3/BN_rand.3",
            "doc/man/man3/BN_security_bits.3",
            "doc/man/man3/BN_set_bit.3",
            "doc/man/man3/BN_swap.3",
            "doc/man/man3/BN_zero.3",
            "doc/man/man3/BUF_MEM_new.3",
            "doc/man/man3/CMS_EncryptedData_decrypt.3",
            "doc/man/man3/CMS_EncryptedData_encrypt.3",
            "doc/man/man3/CMS_EnvelopedData_create.3",
            "doc/man/man3/CMS_add0_cert.3",
            "doc/man/man3/CMS_add1_recipient_cert.3",
            "doc/man/man3/CMS_add1_signer.3",
            "doc/man/man3/CMS_compress.3",
            "doc/man/man3/CMS_data_create.3",
            "doc/man/man3/CMS_decrypt.3",
            "doc/man/man3/CMS_digest_create.3",
            "doc/man/man3/CMS_encrypt.3",
            "doc/man/man3/CMS_final.3",
            "doc/man/man3/CMS_get0_RecipientInfos.3",
            "doc/man/man3/CMS_get0_SignerInfos.3",
            "doc/man/man3/CMS_get0_type.3",
            "doc/man/man3/CMS_get1_ReceiptRequest.3",
            "doc/man/man3/CMS_sign.3",
            "doc/man/man3/CMS_sign_receipt.3",
            "doc/man/man3/CMS_signed_get_attr.3",
            "doc/man/man3/CMS_uncompress.3",
            "doc/man/man3/CMS_verify.3",
            "doc/man/man3/CMS_verify_receipt.3",
            "doc/man/man3/CONF_modules_free.3",
            "doc/man/man3/CONF_modules_load_file.3",
            "doc/man/man3/CRYPTO_THREAD_run_once.3",
            "doc/man/man3/CRYPTO_get_ex_new_index.3",
            "doc/man/man3/CRYPTO_memcmp.3",
            "doc/man/man3/CTLOG_STORE_get0_log_by_id.3",
            "doc/man/man3/CTLOG_STORE_new.3",
            "doc/man/man3/CTLOG_new.3",
            "doc/man/man3/CT_POLICY_EVAL_CTX_new.3",
            "doc/man/man3/DEFINE_STACK_OF.3",
            "doc/man/man3/DES_random_key.3",
            "doc/man/man3/DH_generate_key.3",
            "doc/man/man3/DH_generate_parameters.3",
            "doc/man/man3/DH_get0_pqg.3",
            "doc/man/man3/DH_get_1024_160.3",
            "doc/man/man3/DH_meth_new.3",
            "doc/man/man3/DH_new.3",
            "doc/man/man3/DH_new_by_nid.3",
            "doc/man/man3/DH_set_method.3",
            "doc/man/man3/DH_size.3",
            "doc/man/man3/DSA_SIG_new.3",
            "doc/man/man3/DSA_do_sign.3",
            "doc/man/man3/DSA_dup_DH.3",
            "doc/man/man3/DSA_generate_key.3",
            "doc/man/man3/DSA_generate_parameters.3",
            "doc/man/man3/DSA_get0_pqg.3",
            "doc/man/man3/DSA_meth_new.3",
            "doc/man/man3/DSA_new.3",
            "doc/man/man3/DSA_set_method.3",
            "doc/man/man3/DSA_sign.3",
            "doc/man/man3/DSA_size.3",
            "doc/man/man3/DTLS_get_data_mtu.3",
            "doc/man/man3/DTLS_set_timer_cb.3",
            "doc/man/man3/DTLSv1_listen.3",
            "doc/man/man3/ECDSA_SIG_new.3",
            "doc/man/man3/ECDSA_sign.3",
            "doc/man/man3/ECPKParameters_print.3",
            "doc/man/man3/EC_GFp_simple_method.3",
            "doc/man/man3/EC_GROUP_copy.3",
            "doc/man/man3/EC_GROUP_new.3",
            "doc/man/man3/EC_KEY_get_enc_flags.3",
            "doc/man/man3/EC_KEY_new.3",
            "doc/man/man3/EC_POINT_add.3",
            "doc/man/man3/EC_POINT_new.3",
            "doc/man/man3/ENGINE_add.3",
            "doc/man/man3/ERR_GET_LIB.3",
            "doc/man/man3/ERR_clear_error.3",
            "doc/man/man3/ERR_error_string.3",
            "doc/man/man3/ERR_get_error.3",
            "doc/man/man3/ERR_load_crypto_strings.3",
            "doc/man/man3/ERR_load_strings.3",
            "doc/man/man3/ERR_new.3",
            "doc/man/man3/ERR_print_errors.3",
            "doc/man/man3/ERR_put_error.3",
            "doc/man/man3/ERR_remove_state.3",
            "doc/man/man3/ERR_set_mark.3",
            "doc/man/man3/EVP_ASYM_CIPHER_free.3",
            "doc/man/man3/EVP_BytesToKey.3",
            "doc/man/man3/EVP_CIPHER_CTX_get_cipher_data.3",
            "doc/man/man3/EVP_CIPHER_CTX_get_original_iv.3",
            "doc/man/man3/EVP_CIPHER_meth_new.3",
            "doc/man/man3/EVP_DigestInit.3",
            "doc/man/man3/EVP_DigestSignInit.3",
            "doc/man/man3/EVP_DigestVerifyInit.3",
            "doc/man/man3/EVP_EncodeInit.3",
            "doc/man/man3/EVP_EncryptInit.3",
            "doc/man/man3/EVP_KDF.3",
            "doc/man/man3/EVP_KEM_free.3",
            "doc/man/man3/EVP_KEYEXCH_free.3",
            "doc/man/man3/EVP_KEYMGMT.3",
            "doc/man/man3/EVP_MAC.3",
            "doc/man/man3/EVP_MD_meth_new.3",
            "doc/man/man3/EVP_OpenInit.3",
            "doc/man/man3/EVP_PBE_CipherInit.3",
            "doc/man/man3/EVP_PKEY2PKCS8.3",
            "doc/man/man3/EVP_PKEY_ASN1_METHOD.3",
            "doc/man/man3/EVP_PKEY_CTX_ctrl.3",
            "doc/man/man3/EVP_PKEY_CTX_get0_libctx.3",
            "doc/man/man3/EVP_PKEY_CTX_get0_pkey.3",
            "doc/man/man3/EVP_PKEY_CTX_new.3",
            "doc/man/man3/EVP_PKEY_CTX_set1_pbe_pass.3",
            "doc/man/man3/EVP_PKEY_CTX_set_hkdf_md.3",
            "doc/man/man3/EVP_PKEY_CTX_set_params.3",
            "doc/man/man3/EVP_PKEY_CTX_set_rsa_pss_keygen_md.3",
            "doc/man/man3/EVP_PKEY_CTX_set_scrypt_N.3",
            "doc/man/man3/EVP_PKEY_CTX_set_tls1_prf_md.3",
            "doc/man/man3/EVP_PKEY_asn1_get_count.3",
            "doc/man/man3/EVP_PKEY_check.3",
            "doc/man/man3/EVP_PKEY_copy_parameters.3",
            "doc/man/man3/EVP_PKEY_decapsulate.3",
            "doc/man/man3/EVP_PKEY_decrypt.3",
            "doc/man/man3/EVP_PKEY_derive.3",
            "doc/man/man3/EVP_PKEY_digestsign_supports_digest.3",
            "doc/man/man3/EVP_PKEY_encapsulate.3",
            "doc/man/man3/EVP_PKEY_encrypt.3",
            "doc/man/man3/EVP_PKEY_fromdata.3",
            "doc/man/man3/EVP_PKEY_get_attr.3",
            "doc/man/man3/EVP_PKEY_get_default_digest_nid.3",
            "doc/man/man3/EVP_PKEY_get_field_type.3",
            "doc/man/man3/EVP_PKEY_get_group_name.3",
            "doc/man/man3/EVP_PKEY_get_size.3",
            "doc/man/man3/EVP_PKEY_gettable_params.3",
            "doc/man/man3/EVP_PKEY_is_a.3",
            "doc/man/man3/EVP_PKEY_keygen.3",
            "doc/man/man3/EVP_PKEY_meth_get_count.3",
            "doc/man/man3/EVP_PKEY_meth_new.3",
            "doc/man/man3/EVP_PKEY_new.3",
            "doc/man/man3/EVP_PKEY_print_private.3",
            "doc/man/man3/EVP_PKEY_set1_RSA.3",
            "doc/man/man3/EVP_PKEY_set1_encoded_public_key.3",
            "doc/man/man3/EVP_PKEY_set_type.3",
            "doc/man/man3/EVP_PKEY_settable_params.3",
            "doc/man/man3/EVP_PKEY_sign.3",
            "doc/man/man3/EVP_PKEY_todata.3",
            "doc/man/man3/EVP_PKEY_verify.3",
            "doc/man/man3/EVP_PKEY_verify_recover.3",
            "doc/man/man3/EVP_RAND.3",
            "doc/man/man3/EVP_SIGNATURE.3",
            "doc/man/man3/EVP_SealInit.3",
            "doc/man/man3/EVP_SignInit.3",
            "doc/man/man3/EVP_VerifyInit.3",
            "doc/man/man3/EVP_aes_128_gcm.3",
            "doc/man/man3/EVP_aria_128_gcm.3",
            "doc/man/man3/EVP_bf_cbc.3",
            "doc/man/man3/EVP_blake2b512.3",
            "doc/man/man3/EVP_camellia_128_ecb.3",
            "doc/man/man3/EVP_cast5_cbc.3",
            "doc/man/man3/EVP_chacha20.3",
            "doc/man/man3/EVP_des_cbc.3",
            "doc/man/man3/EVP_desx_cbc.3",
            "doc/man/man3/EVP_idea_cbc.3",
            "doc/man/man3/EVP_md2.3",
            "doc/man/man3/EVP_md4.3",
            "doc/man/man3/EVP_md5.3",
            "doc/man/man3/EVP_mdc2.3",
            "doc/man/man3/EVP_rc2_cbc.3",
            "doc/man/man3/EVP_rc4.3",
            "doc/man/man3/EVP_rc5_32_12_16_cbc.3",
            "doc/man/man3/EVP_ripemd160.3",
            "doc/man/man3/EVP_seed_cbc.3",
            "doc/man/man3/EVP_set_default_properties.3",
            "doc/man/man3/EVP_sha1.3",
            "doc/man/man3/EVP_sha224.3",
            "doc/man/man3/EVP_sha3_224.3",
            "doc/man/man3/EVP_sm3.3",
            "doc/man/man3/EVP_sm4_cbc.3",
            "doc/man/man3/EVP_whirlpool.3",
            "doc/man/man3/HMAC.3",
            "doc/man/man3/MD5.3",
            "doc/man/man3/MDC2_Init.3",
            "doc/man/man3/NCONF_new_ex.3",
            "doc/man/man3/OBJ_nid2obj.3",
            "doc/man/man3/OCSP_REQUEST_new.3",
            "doc/man/man3/OCSP_cert_to_id.3",
            "doc/man/man3/OCSP_request_add1_nonce.3",
            "doc/man/man3/OCSP_resp_find_status.3",
            "doc/man/man3/OCSP_response_status.3",
            "doc/man/man3/OCSP_sendreq_new.3",
            "doc/man/man3/OPENSSL_Applink.3",
            "doc/man/man3/OPENSSL_FILE.3",
            "doc/man/man3/OPENSSL_LH_COMPFUNC.3",
            "doc/man/man3/OPENSSL_LH_stats.3",
            "doc/man/man3/OPENSSL_config.3",
            "doc/man/man3/OPENSSL_fork_prepare.3",
            "doc/man/man3/OPENSSL_gmtime.3",
            "doc/man/man3/OPENSSL_hexchar2int.3",
            "doc/man/man3/OPENSSL_ia32cap.3",
            "doc/man/man3/OPENSSL_init_crypto.3",
            "doc/man/man3/OPENSSL_init_ssl.3",
            "doc/man/man3/OPENSSL_instrument_bus.3",
            "doc/man/man3/OPENSSL_load_builtin_modules.3",
            "doc/man/man3/OPENSSL_malloc.3",
            "doc/man/man3/OPENSSL_s390xcap.3",
            "doc/man/man3/OPENSSL_secure_malloc.3",
            "doc/man/man3/OPENSSL_strcasecmp.3",
            "doc/man/man3/OSSL_ALGORITHM.3",
            "doc/man/man3/OSSL_CALLBACK.3",
            "doc/man/man3/OSSL_CMP_CTX_new.3",
            "doc/man/man3/OSSL_CMP_HDR_get0_transactionID.3",
            "doc/man/man3/OSSL_CMP_ITAV_set0.3",
            "doc/man/man3/OSSL_CMP_MSG_get0_header.3",
            "doc/man/man3/OSSL_CMP_MSG_http_perform.3",
            "doc/man/man3/OSSL_CMP_SRV_CTX_new.3",
            "doc/man/man3/OSSL_CMP_STATUSINFO_new.3",
            "doc/man/man3/OSSL_CMP_exec_certreq.3",
            "doc/man/man3/OSSL_CMP_log_open.3",
            "doc/man/man3/OSSL_CMP_validate_msg.3",
            "doc/man/man3/OSSL_CORE_MAKE_FUNC.3",
            "doc/man/man3/OSSL_CRMF_MSG_get0_tmpl.3",
            "doc/man/man3/OSSL_CRMF_MSG_set0_validity.3",
            "doc/man/man3/OSSL_CRMF_MSG_set1_regCtrl_regToken.3",
            "doc/man/man3/OSSL_CRMF_MSG_set1_regInfo_certReq.3",
            "doc/man/man3/OSSL_CRMF_pbmp_new.3",
            "doc/man/man3/OSSL_DECODER.3",
            "doc/man/man3/OSSL_DECODER_CTX.3",
            "doc/man/man3/OSSL_DECODER_CTX_new_for_pkey.3",
            "doc/man/man3/OSSL_DECODER_from_bio.3",
            "doc/man/man3/OSSL_DISPATCH.3",
            "doc/man/man3/OSSL_ENCODER.3",
            "doc/man/man3/OSSL_ENCODER_CTX.3",
            "doc/man/man3/OSSL_ENCODER_CTX_new_for_pkey.3",
            "doc/man/man3/OSSL_ENCODER_to_bio.3",
            "doc/man/man3/OSSL_ESS_check_signing_certs.3",
            "doc/man/man3/OSSL_HTTP_REQ_CTX.3",
            "doc/man/man3/OSSL_HTTP_parse_url.3",
            "doc/man/man3/OSSL_HTTP_transfer.3",
            "doc/man/man3/OSSL_ITEM.3",
            "doc/man/man3/OSSL_LIB_CTX.3",
            "doc/man/man3/OSSL_PARAM.3",
            "doc/man/man3/OSSL_PARAM_BLD.3",
            "doc/man/man3/OSSL_PARAM_allocate_from_text.3",
            "doc/man/man3/OSSL_PARAM_dup.3",
            "doc/man/man3/OSSL_PARAM_int.3",
            "doc/man/man3/OSSL_PROVIDER.3",
            "doc/man/man3/OSSL_SELF_TEST_new.3",
            "doc/man/man3/OSSL_SELF_TEST_set_callback.3",
            "doc/man/man3/OSSL_STORE_INFO.3",
            "doc/man/man3/OSSL_STORE_LOADER.3",
            "doc/man/man3/OSSL_STORE_SEARCH.3",
            "doc/man/man3/OSSL_STORE_attach.3",
            "doc/man/man3/OSSL_STORE_expect.3",
            "doc/man/man3/OSSL_STORE_open.3",
            "doc/man/man3/OSSL_trace_enabled.3",
            "doc/man/man3/OSSL_trace_get_category_num.3",
            "doc/man/man3/OSSL_trace_set_channel.3",
            "doc/man/man3/OpenSSL_add_all_algorithms.3",
            "doc/man/man3/OpenSSL_version.3",
            "doc/man/man3/PEM_X509_INFO_read_bio_ex.3",
            "doc/man/man3/PEM_bytes_read_bio.3",
            "doc/man/man3/PEM_read.3",
            "doc/man/man3/PEM_read_CMS.3",
            "doc/man/man3/PEM_read_bio_PrivateKey.3",
            "doc/man/man3/PEM_read_bio_ex.3",
            "doc/man/man3/PEM_write_bio_CMS_stream.3",
            "doc/man/man3/PEM_write_bio_PKCS7_stream.3",
            "doc/man/man3/PKCS12_PBE_keyivgen.3",
            "doc/man/man3/PKCS12_SAFEBAG_create_cert.3",
            "doc/man/man3/PKCS12_SAFEBAG_get0_attrs.3",
            "doc/man/man3/PKCS12_SAFEBAG_get1_cert.3",
            "doc/man/man3/PKCS12_add1_attr_by_NID.3",
            "doc/man/man3/PKCS12_add_CSPName_asc.3",
            "doc/man/man3/PKCS12_add_cert.3",
            "doc/man/man3/PKCS12_add_friendlyname_asc.3",
            "doc/man/man3/PKCS12_add_localkeyid.3",
            "doc/man/man3/PKCS12_add_safe.3",
            "doc/man/man3/PKCS12_create.3",
            "doc/man/man3/PKCS12_decrypt_skey.3",
            "doc/man/man3/PKCS12_gen_mac.3",
            "doc/man/man3/PKCS12_get_friendlyname.3",
            "doc/man/man3/PKCS12_init.3",
            "doc/man/man3/PKCS12_item_decrypt_d2i.3",
            "doc/man/man3/PKCS12_key_gen_utf8_ex.3",
            "doc/man/man3/PKCS12_newpass.3",
            "doc/man/man3/PKCS12_pack_p7encdata.3",
            "doc/man/man3/PKCS12_parse.3",
            "doc/man/man3/PKCS5_PBE_keyivgen.3",
            "doc/man/man3/PKCS5_PBKDF2_HMAC.3",
            "doc/man/man3/PKCS7_decrypt.3",
            "doc/man/man3/PKCS7_encrypt.3",
            "doc/man/man3/PKCS7_get_octet_string.3",
            "doc/man/man3/PKCS7_sign.3",
            "doc/man/man3/PKCS7_sign_add_signer.3",
            "doc/man/man3/PKCS7_type_is_other.3",
            "doc/man/man3/PKCS7_verify.3",
            "doc/man/man3/PKCS8_encrypt.3",
            "doc/man/man3/PKCS8_pkey_add1_attr.3",
            "doc/man/man3/RAND_add.3",
            "doc/man/man3/RAND_bytes.3",
            "doc/man/man3/RAND_cleanup.3",
            "doc/man/man3/RAND_egd.3",
            "doc/man/man3/RAND_get0_primary.3",
            "doc/man/man3/RAND_load_file.3",
            "doc/man/man3/RAND_set_DRBG_type.3",
            "doc/man/man3/RAND_set_rand_method.3",
            "doc/man/man3/RC4_set_key.3",
            "doc/man/man3/RIPEMD160_Init.3",
            "doc/man/man3/RSA_blinding_on.3",
            "doc/man/man3/RSA_check_key.3",
            "doc/man/man3/RSA_generate_key.3",
            "doc/man/man3/RSA_get0_key.3",
            "doc/man/man3/RSA_meth_new.3",
            "doc/man/man3/RSA_new.3",
            "doc/man/man3/RSA_padding_add_PKCS1_type_1.3",
            "doc/man/man3/RSA_print.3",
            "doc/man/man3/RSA_private_encrypt.3",
            "doc/man/man3/RSA_public_encrypt.3",
            "doc/man/man3/RSA_set_method.3",
            "doc/man/man3/RSA_sign.3",
            "doc/man/man3/RSA_sign_ASN1_OCTET_STRING.3",
            "doc/man/man3/RSA_size.3",
            "doc/man/man3/SCT_new.3",
            "doc/man/man3/SCT_print.3",
            "doc/man/man3/SCT_validate.3",
            "doc/man/man3/SHA256_Init.3",
            "doc/man/man3/SMIME_read_ASN1.3",
            "doc/man/man3/SMIME_read_CMS.3",
            "doc/man/man3/SMIME_read_PKCS7.3",
            "doc/man/man3/SMIME_write_ASN1.3",
            "doc/man/man3/SMIME_write_CMS.3",
            "doc/man/man3/SMIME_write_PKCS7.3",
            "doc/man/man3/SRP_Calc_B.3",
            "doc/man/man3/SRP_VBASE_new.3",
            "doc/man/man3/SRP_create_verifier.3",
            "doc/man/man3/SRP_user_pwd_new.3",
            "doc/man/man3/SSL_CIPHER_get_name.3",
            "doc/man/man3/SSL_COMP_add_compression_method.3",
            "doc/man/man3/SSL_CONF_CTX_new.3",
            "doc/man/man3/SSL_CONF_CTX_set1_prefix.3",
            "doc/man/man3/SSL_CONF_CTX_set_flags.3",
            "doc/man/man3/SSL_CONF_CTX_set_ssl_ctx.3",
            "doc/man/man3/SSL_CONF_cmd.3",
            "doc/man/man3/SSL_CONF_cmd_argv.3",
            "doc/man/man3/SSL_CTX_add1_chain_cert.3",
            "doc/man/man3/SSL_CTX_add_extra_chain_cert.3",
            "doc/man/man3/SSL_CTX_add_session.3",
            "doc/man/man3/SSL_CTX_config.3",
            "doc/man/man3/SSL_CTX_ctrl.3",
            "doc/man/man3/SSL_CTX_dane_enable.3",
            "doc/man/man3/SSL_CTX_flush_sessions.3",
            "doc/man/man3/SSL_CTX_free.3",
            "doc/man/man3/SSL_CTX_get0_param.3",
            "doc/man/man3/SSL_CTX_get_verify_mode.3",
            "doc/man/man3/SSL_CTX_has_client_custom_ext.3",
            "doc/man/man3/SSL_CTX_load_verify_locations.3",
            "doc/man/man3/SSL_CTX_new.3",
            "doc/man/man3/SSL_CTX_sess_number.3",
            "doc/man/man3/SSL_CTX_sess_set_cache_size.3",
            "doc/man/man3/SSL_CTX_sess_set_get_cb.3",
            "doc/man/man3/SSL_CTX_sessions.3",
            "doc/man/man3/SSL_CTX_set0_CA_list.3",
            "doc/man/man3/SSL_CTX_set1_curves.3",
            "doc/man/man3/SSL_CTX_set1_sigalgs.3",
            "doc/man/man3/SSL_CTX_set1_verify_cert_store.3",
            "doc/man/man3/SSL_CTX_set_alpn_select_cb.3",
            "doc/man/man3/SSL_CTX_set_cert_cb.3",
            "doc/man/man3/SSL_CTX_set_cert_store.3",
            "doc/man/man3/SSL_CTX_set_cert_verify_callback.3",
            "doc/man/man3/SSL_CTX_set_cipher_list.3",
            "doc/man/man3/SSL_CTX_set_client_cert_cb.3",
            "doc/man/man3/SSL_CTX_set_client_hello_cb.3",
            "doc/man/man3/SSL_CTX_set_ct_validation_callback.3",
            "doc/man/man3/SSL_CTX_set_ctlog_list_file.3",
            "doc/man/man3/SSL_CTX_set_default_passwd_cb.3",
            "doc/man/man3/SSL_CTX_set_generate_session_id.3",
            "doc/man/man3/SSL_CTX_set_info_callback.3",
            "doc/man/man3/SSL_CTX_set_keylog_callback.3",
            "doc/man/man3/SSL_CTX_set_max_cert_list.3",
            "doc/man/man3/SSL_CTX_set_min_proto_version.3",
            "doc/man/man3/SSL_CTX_set_mode.3",
            "doc/man/man3/SSL_CTX_set_msg_callback.3",
            "doc/man/man3/SSL_CTX_set_num_tickets.3",
            "doc/man/man3/SSL_CTX_set_options.3",
            "doc/man/man3/SSL_CTX_set_psk_client_callback.3",
            "doc/man/man3/SSL_CTX_set_quic_method.3",
            "doc/man/man3/SSL_CTX_set_quiet_shutdown.3",
            "doc/man/man3/SSL_CTX_set_read_ahead.3",
            "doc/man/man3/SSL_CTX_set_record_padding_callback.3",
            "doc/man/man3/SSL_CTX_set_security_level.3",
            "doc/man/man3/SSL_CTX_set_session_cache_mode.3",
            "doc/man/man3/SSL_CTX_set_session_id_context.3",
            "doc/man/man3/SSL_CTX_set_session_ticket_cb.3",
            "doc/man/man3/SSL_CTX_set_split_send_fragment.3",
            "doc/man/man3/SSL_CTX_set_srp_password.3",
            "doc/man/man3/SSL_CTX_set_ssl_version.3",
            "doc/man/man3/SSL_CTX_set_stateless_cookie_generate_cb.3",
            "doc/man/man3/SSL_CTX_set_timeout.3",
            "doc/man/man3/SSL_CTX_set_tlsext_servername_callback.3",
            "doc/man/man3/SSL_CTX_set_tlsext_status_cb.3",
            "doc/man/man3/SSL_CTX_set_tlsext_ticket_key_cb.3",
            "doc/man/man3/SSL_CTX_set_tlsext_use_srtp.3",
            "doc/man/man3/SSL_CTX_set_tmp_dh_callback.3",
            "doc/man/man3/SSL_CTX_set_tmp_ecdh.3",
            "doc/man/man3/SSL_CTX_set_verify.3",
            "doc/man/man3/SSL_CTX_use_certificate.3",
            "doc/man/man3/SSL_CTX_use_psk_identity_hint.3",
            "doc/man/man3/SSL_CTX_use_serverinfo.3",
            "doc/man/man3/SSL_SESSION_free.3",
            "doc/man/man3/SSL_SESSION_get0_cipher.3",
            "doc/man/man3/SSL_SESSION_get0_hostname.3",
            "doc/man/man3/SSL_SESSION_get0_id_context.3",
            "doc/man/man3/SSL_SESSION_get0_peer.3",
            "doc/man/man3/SSL_SESSION_get_compress_id.3",
            "doc/man/man3/SSL_SESSION_get_protocol_version.3",
            "doc/man/man3/SSL_SESSION_get_time.3",
            "doc/man/man3/SSL_SESSION_has_ticket.3",
            "doc/man/man3/SSL_SESSION_is_resumable.3",
            "doc/man/man3/SSL_SESSION_print.3",
            "doc/man/man3/SSL_SESSION_set1_id.3",
            "doc/man/man3/SSL_accept.3",
            "doc/man/man3/SSL_alert_type_string.3",
            "doc/man/man3/SSL_alloc_buffers.3",
            "doc/man/man3/SSL_check_chain.3",
            "doc/man/man3/SSL_clear.3",
            "doc/man/man3/SSL_connect.3",
            "doc/man/man3/SSL_do_handshake.3",
            "doc/man/man3/SSL_export_keying_material.3",
            "doc/man/man3/SSL_extension_supported.3",
            "doc/man/man3/SSL_free.3",
            "doc/man/man3/SSL_get0_peer_scts.3",
            "doc/man/man3/SSL_get_SSL_CTX.3",
            "doc/man/man3/SSL_get_all_async_fds.3",
            "doc/man/man3/SSL_get_certificate.3",
            "doc/man/man3/SSL_get_ciphers.3",
            "doc/man/man3/SSL_get_client_random.3",
            "doc/man/man3/SSL_get_current_cipher.3",
            "doc/man/man3/SSL_get_default_timeout.3",
            "doc/man/man3/SSL_get_error.3",
            "doc/man/man3/SSL_get_extms_support.3",
            "doc/man/man3/SSL_get_fd.3",
            "doc/man/man3/SSL_get_peer_cert_chain.3",
            "doc/man/man3/SSL_get_peer_certificate.3",
            "doc/man/man3/SSL_get_peer_signature_nid.3",
            "doc/man/man3/SSL_get_peer_tmp_key.3",
            "doc/man/man3/SSL_get_psk_identity.3",
            "doc/man/man3/SSL_get_rbio.3",
            "doc/man/man3/SSL_get_session.3",
            "doc/man/man3/SSL_get_shared_sigalgs.3",
            "doc/man/man3/SSL_get_verify_result.3",
            "doc/man/man3/SSL_get_version.3",
            "doc/man/man3/SSL_group_to_name.3",
            "doc/man/man3/SSL_in_init.3",
            "doc/man/man3/SSL_key_update.3",
            "doc/man/man3/SSL_library_init.3",
            "doc/man/man3/SSL_load_client_CA_file.3",
            "doc/man/man3/SSL_new.3",
            "doc/man/man3/SSL_pending.3",
            "doc/man/man3/SSL_read.3",
            "doc/man/man3/SSL_read_early_data.3",
            "doc/man/man3/SSL_rstate_string.3",
            "doc/man/man3/SSL_session_reused.3",
            "doc/man/man3/SSL_set1_host.3",
            "doc/man/man3/SSL_set_async_callback.3",
            "doc/man/man3/SSL_set_bio.3",
            "doc/man/man3/SSL_set_connect_state.3",
            "doc/man/man3/SSL_set_fd.3",
            "doc/man/man3/SSL_set_retry_verify.3",
            "doc/man/man3/SSL_set_session.3",
            "doc/man/man3/SSL_set_shutdown.3",
            "doc/man/man3/SSL_set_verify_result.3",
            "doc/man/man3/SSL_shutdown.3",
            "doc/man/man3/SSL_state_string.3",
            "doc/man/man3/SSL_want.3",
            "doc/man/man3/SSL_write.3",
            "doc/man/man3/TS_RESP_CTX_new.3",
            "doc/man/man3/TS_VERIFY_CTX_set_certs.3",
            "doc/man/man3/UI_STRING.3",
            "doc/man/man3/UI_UTIL_read_pw.3",
            "doc/man/man3/UI_create_method.3",
            "doc/man/man3/UI_new.3",
            "doc/man/man3/X509V3_get_d2i.3",
            "doc/man/man3/X509V3_set_ctx.3",
            "doc/man/man3/X509_ALGOR_dup.3",
            "doc/man/man3/X509_ATTRIBUTE.3",
            "doc/man/man3/X509_CRL_get0_by_serial.3",
            "doc/man/man3/X509_EXTENSION_set_object.3",
            "doc/man/man3/X509_LOOKUP.3",
            "doc/man/man3/X509_LOOKUP_hash_dir.3",
            "doc/man/man3/X509_LOOKUP_meth_new.3",
            "doc/man/man3/X509_NAME_ENTRY_get_object.3",
            "doc/man/man3/X509_NAME_add_entry_by_txt.3",
            "doc/man/man3/X509_NAME_get0_der.3",
            "doc/man/man3/X509_NAME_get_index_by_NID.3",
            "doc/man/man3/X509_NAME_print_ex.3",
            "doc/man/man3/X509_PUBKEY_new.3",
            "doc/man/man3/X509_REQ_get_attr.3",
            "doc/man/man3/X509_REQ_get_extensions.3",
            "doc/man/man3/X509_SIG_get0.3",
            "doc/man/man3/X509_STORE_CTX_get_error.3",
            "doc/man/man3/X509_STORE_CTX_new.3",
            "doc/man/man3/X509_STORE_CTX_set_verify_cb.3",
            "doc/man/man3/X509_STORE_add_cert.3",
            "doc/man/man3/X509_STORE_get0_param.3",
            "doc/man/man3/X509_STORE_new.3",
            "doc/man/man3/X509_STORE_set_verify_cb_func.3",
            "doc/man/man3/X509_VERIFY_PARAM_set_flags.3",
            "doc/man/man3/X509_add_cert.3",
            "doc/man/man3/X509_check_ca.3",
            "doc/man/man3/X509_check_host.3",
            "doc/man/man3/X509_check_issued.3",
            "doc/man/man3/X509_check_private_key.3",
            "doc/man/man3/X509_check_purpose.3",
            "doc/man/man3/X509_cmp.3",
            "doc/man/man3/X509_cmp_time.3",
            "doc/man/man3/X509_digest.3",
            "doc/man/man3/X509_dup.3",
            "doc/man/man3/X509_get0_distinguishing_id.3",
            "doc/man/man3/X509_get0_notBefore.3",
            "doc/man/man3/X509_get0_signature.3",
            "doc/man/man3/X509_get0_uids.3",
            "doc/man/man3/X509_get_extension_flags.3",
            "doc/man/man3/X509_get_pubkey.3",
            "doc/man/man3/X509_get_serialNumber.3",
            "doc/man/man3/X509_get_subject_name.3",
            "doc/man/man3/X509_get_version.3",
            "doc/man/man3/X509_load_http.3",
            "doc/man/man3/X509_new.3",
            "doc/man/man3/X509_sign.3",
            "doc/man/man3/X509_verify.3",
            "doc/man/man3/X509_verify_cert.3",
            "doc/man/man3/X509v3_get_ext_by_NID.3",
            "doc/man/man3/b2i_PVK_bio_ex.3",
            "doc/man/man3/d2i_PKCS8PrivateKey_bio.3",
            "doc/man/man3/d2i_PrivateKey.3",
            "doc/man/man3/d2i_RSAPrivateKey.3",
            "doc/man/man3/d2i_SSL_SESSION.3",
            "doc/man/man3/d2i_X509.3",
            "doc/man/man3/i2d_CMS_bio_stream.3",
            "doc/man/man3/i2d_PKCS7_bio_stream.3",
            "doc/man/man3/i2d_re_X509_tbs.3",
            "doc/man/man3/o2i_SCT_LIST.3",
            "doc/man/man3/s2i_ASN1_IA5STRING.3"
        ],
        "man5" => [
            "doc/man/man5/config.5",
            "doc/man/man5/fips_config.5",
            "doc/man/man5/x509v3_config.5"
        ],
        "man7" => [
            "doc/man/man7/EVP_ASYM_CIPHER-RSA.7",
            "doc/man/man7/EVP_ASYM_CIPHER-SM2.7",
            "doc/man/man7/EVP_CIPHER-AES.7",
            "doc/man/man7/EVP_CIPHER-ARIA.7",
            "doc/man/man7/EVP_CIPHER-BLOWFISH.7",
            "doc/man/man7/EVP_CIPHER-CAMELLIA.7",
            "doc/man/man7/EVP_CIPHER-CAST.7",
            "doc/man/man7/EVP_CIPHER-CHACHA.7",
            "doc/man/man7/EVP_CIPHER-DES.7",
            "doc/man/man7/EVP_CIPHER-IDEA.7",
            "doc/man/man7/EVP_CIPHER-NULL.7",
            "doc/man/man7/EVP_CIPHER-RC2.7",
            "doc/man/man7/EVP_CIPHER-RC4.7",
            "doc/man/man7/EVP_CIPHER-RC5.7",
            "doc/man/man7/EVP_CIPHER-SEED.7",
            "doc/man/man7/EVP_CIPHER-SM4.7",
            "doc/man/man7/EVP_KDF-HKDF.7",
            "doc/man/man7/EVP_KDF-KB.7",
            "doc/man/man7/EVP_KDF-KRB5KDF.7",
            "doc/man/man7/EVP_KDF-PBKDF1.7",
            "doc/man/man7/EVP_KDF-PBKDF2.7",
            "doc/man/man7/EVP_KDF-PKCS12KDF.7",
            "doc/man/man7/EVP_KDF-SCRYPT.7",
            "doc/man/man7/EVP_KDF-SS.7",
            "doc/man/man7/EVP_KDF-SSHKDF.7",
            "doc/man/man7/EVP_KDF-TLS13_KDF.7",
            "doc/man/man7/EVP_KDF-TLS1_PRF.7",
            "doc/man/man7/EVP_KDF-X942-ASN1.7",
            "doc/man/man7/EVP_KDF-X942-CONCAT.7",
            "doc/man/man7/EVP_KDF-X963.7",
            "doc/man/man7/EVP_KEM-RSA.7",
            "doc/man/man7/EVP_KEYEXCH-DH.7",
            "doc/man/man7/EVP_KEYEXCH-ECDH.7",
            "doc/man/man7/EVP_KEYEXCH-X25519.7",
            "doc/man/man7/EVP_MAC-BLAKE2.7",
            "doc/man/man7/EVP_MAC-CMAC.7",
            "doc/man/man7/EVP_MAC-GMAC.7",
            "doc/man/man7/EVP_MAC-HMAC.7",
            "doc/man/man7/EVP_MAC-KMAC.7",
            "doc/man/man7/EVP_MAC-Poly1305.7",
            "doc/man/man7/EVP_MAC-Siphash.7",
            "doc/man/man7/EVP_MD-BLAKE2.7",
            "doc/man/man7/EVP_MD-MD2.7",
            "doc/man/man7/EVP_MD-MD4.7",
            "doc/man/man7/EVP_MD-MD5-SHA1.7",
            "doc/man/man7/EVP_MD-MD5.7",
            "doc/man/man7/EVP_MD-MDC2.7",
            "doc/man/man7/EVP_MD-NULL.7",
            "doc/man/man7/EVP_MD-RIPEMD160.7",
            "doc/man/man7/EVP_MD-SHA1.7",
            "doc/man/man7/EVP_MD-SHA2.7",
            "doc/man/man7/EVP_MD-SHA3.7",
            "doc/man/man7/EVP_MD-SHAKE.7",
            "doc/man/man7/EVP_MD-SM3.7",
            "doc/man/man7/EVP_MD-WHIRLPOOL.7",
            "doc/man/man7/EVP_MD-common.7",
            "doc/man/man7/EVP_PKEY-DH.7",
            "doc/man/man7/EVP_PKEY-DSA.7",
            "doc/man/man7/EVP_PKEY-EC.7",
            "doc/man/man7/EVP_PKEY-FFC.7",
            "doc/man/man7/EVP_PKEY-HMAC.7",
            "doc/man/man7/EVP_PKEY-RSA.7",
            "doc/man/man7/EVP_PKEY-SM2.7",
            "doc/man/man7/EVP_PKEY-X25519.7",
            "doc/man/man7/EVP_RAND-CTR-DRBG.7",
            "doc/man/man7/EVP_RAND-HASH-DRBG.7",
            "doc/man/man7/EVP_RAND-HMAC-DRBG.7",
            "doc/man/man7/EVP_RAND-SEED-SRC.7",
            "doc/man/man7/EVP_RAND-TEST-RAND.7",
            "doc/man/man7/EVP_RAND.7",
            "doc/man/man7/EVP_SIGNATURE-DSA.7",
            "doc/man/man7/EVP_SIGNATURE-ECDSA.7",
            "doc/man/man7/EVP_SIGNATURE-ED25519.7",
            "doc/man/man7/EVP_SIGNATURE-HMAC.7",
            "doc/man/man7/EVP_SIGNATURE-RSA.7",
            "doc/man/man7/OSSL_PROVIDER-FIPS.7",
            "doc/man/man7/OSSL_PROVIDER-base.7",
            "doc/man/man7/OSSL_PROVIDER-default.7",
            "doc/man/man7/OSSL_PROVIDER-legacy.7",
            "doc/man/man7/OSSL_PROVIDER-null.7",
            "doc/man/man7/RAND.7",
            "doc/man/man7/RSA-PSS.7",
            "doc/man/man7/X25519.7",
            "doc/man/man7/bio.7",
            "doc/man/man7/crypto.7",
            "doc/man/man7/ct.7",
            "doc/man/man7/des_modes.7",
            "doc/man/man7/evp.7",
            "doc/man/man7/fips_module.7",
            "doc/man/man7/life_cycle-cipher.7",
            "doc/man/man7/life_cycle-digest.7",
            "doc/man/man7/life_cycle-kdf.7",
            "doc/man/man7/life_cycle-mac.7",
            "doc/man/man7/life_cycle-pkey.7",
            "doc/man/man7/life_cycle-rand.7",
            "doc/man/man7/migration_guide.7",
            "doc/man/man7/openssl-core.h.7",
            "doc/man/man7/openssl-core_dispatch.h.7",
            "doc/man/man7/openssl-core_names.h.7",
            "doc/man/man7/openssl-env.7",
            "doc/man/man7/openssl-glossary.7",
            "doc/man/man7/openssl-threads.7",
            "doc/man/man7/openssl_user_macros.7",
            "doc/man/man7/ossl_store-file.7",
            "doc/man/man7/ossl_store.7",
            "doc/man/man7/passphrase-encoding.7",
            "doc/man/man7/property.7",
            "doc/man/man7/provider-asym_cipher.7",
            "doc/man/man7/provider-base.7",
            "doc/man/man7/provider-cipher.7",
            "doc/man/man7/provider-decoder.7",
            "doc/man/man7/provider-digest.7",
            "doc/man/man7/provider-encoder.7",
            "doc/man/man7/provider-kdf.7",
            "doc/man/man7/provider-kem.7",
            "doc/man/man7/provider-keyexch.7",
            "doc/man/man7/provider-keymgmt.7",
            "doc/man/man7/provider-mac.7",
            "doc/man/man7/provider-object.7",
            "doc/man/man7/provider-rand.7",
            "doc/man/man7/provider-signature.7",
            "doc/man/man7/provider-storemgmt.7",
            "doc/man/man7/provider.7",
            "doc/man/man7/proxy-certificates.7",
            "doc/man/man7/ssl.7",
            "doc/man/man7/x509.7"
        ]
    },
    "modules" => [
        "providers/fips",
        "providers/legacy",
        "test/p_minimal",
        "test/p_test"
    ],
    "programs" => [
        "apps/openssl",
        "fuzz/asn1-test",
        "fuzz/asn1parse-test",
        "fuzz/bignum-test",
        "fuzz/bndiv-test",
        "fuzz/client-test",
        "fuzz/cmp-test",
        "fuzz/cms-test",
        "fuzz/conf-test",
        "fuzz/crl-test",
        "fuzz/ct-test",
        "fuzz/server-test",
        "fuzz/x509-test",
        "test/aborttest",
        "test/acvp_test",
        "test/aesgcmtest",
        "test/afalgtest",
        "test/algorithmid_test",
        "test/asn1_decode_test",
        "test/asn1_dsa_internal_test",
        "test/asn1_encode_test",
        "test/asn1_internal_test",
        "test/asn1_stable_parse_test",
        "test/asn1_string_table_test",
        "test/asn1_time_test",
        "test/asynciotest",
        "test/asynctest",
        "test/bad_dtls_test",
        "test/bftest",
        "test/bio_callback_test",
        "test/bio_core_test",
        "test/bio_enc_test",
        "test/bio_memleak_test",
        "test/bio_prefix_text",
        "test/bio_readbuffer_test",
        "test/bioprinttest",
        "test/bn_internal_test",
        "test/bntest",
        "test/buildtest_c_aes",
        "test/buildtest_c_async",
        "test/buildtest_c_blowfish",
        "test/buildtest_c_bn",
        "test/buildtest_c_buffer",
        "test/buildtest_c_camellia",
        "test/buildtest_c_cast",
        "test/buildtest_c_cmac",
        "test/buildtest_c_cmp_util",
        "test/buildtest_c_conf_api",
        "test/buildtest_c_conftypes",
        "test/buildtest_c_core",
        "test/buildtest_c_core_dispatch",
        "test/buildtest_c_core_names",
        "test/buildtest_c_core_object",
        "test/buildtest_c_cryptoerr_legacy",
        "test/buildtest_c_decoder",
        "test/buildtest_c_des",
        "test/buildtest_c_dh",
        "test/buildtest_c_dsa",
        "test/buildtest_c_dtls1",
        "test/buildtest_c_e_os2",
        "test/buildtest_c_ebcdic",
        "test/buildtest_c_ec",
        "test/buildtest_c_ecdh",
        "test/buildtest_c_ecdsa",
        "test/buildtest_c_encoder",
        "test/buildtest_c_engine",
        "test/buildtest_c_evp",
        "test/buildtest_c_fips_names",
        "test/buildtest_c_hmac",
        "test/buildtest_c_http",
        "test/buildtest_c_idea",
        "test/buildtest_c_kdf",
        "test/buildtest_c_macros",
        "test/buildtest_c_md4",
        "test/buildtest_c_md5",
        "test/buildtest_c_mdc2",
        "test/buildtest_c_modes",
        "test/buildtest_c_obj_mac",
        "test/buildtest_c_objects",
        "test/buildtest_c_ossl_typ",
        "test/buildtest_c_param_build",
        "test/buildtest_c_params",
        "test/buildtest_c_pem",
        "test/buildtest_c_pem2",
        "test/buildtest_c_prov_ssl",
        "test/buildtest_c_provider",
        "test/buildtest_c_quic",
        "test/buildtest_c_rand",
        "test/buildtest_c_rc2",
        "test/buildtest_c_rc4",
        "test/buildtest_c_ripemd",
        "test/buildtest_c_rsa",
        "test/buildtest_c_seed",
        "test/buildtest_c_self_test",
        "test/buildtest_c_sha",
        "test/buildtest_c_srtp",
        "test/buildtest_c_ssl2",
        "test/buildtest_c_sslerr_legacy",
        "test/buildtest_c_stack",
        "test/buildtest_c_store",
        "test/buildtest_c_symhacks",
        "test/buildtest_c_tls1",
        "test/buildtest_c_ts",
        "test/buildtest_c_txt_db",
        "test/buildtest_c_types",
        "test/buildtest_c_whrlpool",
        "test/casttest",
        "test/chacha_internal_test",
        "test/cipher_overhead_test",
        "test/cipherbytes_test",
        "test/cipherlist_test",
        "test/ciphername_test",
        "test/clienthellotest",
        "test/cmactest",
        "test/cmp_asn_test",
        "test/cmp_client_test",
        "test/cmp_ctx_test",
        "test/cmp_hdr_test",
        "test/cmp_msg_test",
        "test/cmp_protect_test",
        "test/cmp_server_test",
        "test/cmp_status_test",
        "test/cmp_vfy_test",
        "test/cmsapitest",
        "test/conf_include_test",
        "test/confdump",
        "test/constant_time_test",
        "test/context_internal_test",
        "test/crltest",
        "test/ct_test",
        "test/ctype_internal_test",
        "test/curve448_internal_test",
        "test/d2i_test",
        "test/danetest",
        "test/defltfips_test",
        "test/destest",
        "test/dhtest",
        "test/drbgtest",
        "test/dsa_no_digest_size_test",
        "test/dsatest",
        "test/dtls_mtu_test",
        "test/dtlstest",
        "test/dtlsv1listentest",
        "test/ec_internal_test",
        "test/ecdsatest",
        "test/ecstresstest",
        "test/ectest",
        "test/endecode_test",
        "test/endecoder_legacy_test",
        "test/enginetest",
        "test/errtest",
        "test/evp_byname_test",
        "test/evp_extra_test",
        "test/evp_extra_test2",
        "test/evp_fetch_prov_test",
        "test/evp_kdf_test",
        "test/evp_libctx_test",
        "test/evp_pkey_ctx_new_from_name",
        "test/evp_pkey_dparams_test",
        "test/evp_pkey_provided_test",
        "test/evp_test",
        "test/exdatatest",
        "test/exptest",
        "test/ext_internal_test",
        "test/fatalerrtest",
        "test/ffc_internal_test",
        "test/fips_version_test",
        "test/gmdifftest",
        "test/hexstr_test",
        "test/hmactest",
        "test/http_test",
        "test/ideatest",
        "test/igetest",
        "test/keymgmt_internal_test",
        "test/lhash_test",
        "test/localetest",
        "test/mdc2_internal_test",
        "test/mdc2test",
        "test/memleaktest",
        "test/modes_internal_test",
        "test/namemap_internal_test",
        "test/nodefltctxtest",
        "test/ocspapitest",
        "test/ossl_store_test",
        "test/packettest",
        "test/param_build_test",
        "test/params_api_test",
        "test/params_conversion_test",
        "test/params_test",
        "test/pbelutest",
        "test/pbetest",
        "test/pem_read_depr_test",
        "test/pemtest",
        "test/pkcs12_format_test",
        "test/pkcs7_test",
        "test/pkey_meth_kdf_test",
        "test/pkey_meth_test",
        "test/poly1305_internal_test",
        "test/property_test",
        "test/prov_config_test",
        "test/provfetchtest",
        "test/provider_fallback_test",
        "test/provider_internal_test",
        "test/provider_pkey_test",
        "test/provider_status_test",
        "test/provider_test",
        "test/punycode_test",
        "test/rand_status_test",
        "test/rand_test",
        "test/rc2test",
        "test/rc4test",
        "test/rc5test",
        "test/rdrand_sanitytest",
        "test/recordlentest",
        "test/rsa_complex",
        "test/rsa_mp_test",
        "test/rsa_sp800_56b_test",
        "test/rsa_test",
        "test/sanitytest",
        "test/secmemtest",
        "test/servername_test",
        "test/sha_test",
        "test/siphash_internal_test",
        "test/sm2_internal_test",
        "test/sm3_internal_test",
        "test/sm4_internal_test",
        "test/sparse_array_test",
        "test/srptest",
        "test/ssl_cert_table_internal_test",
        "test/ssl_ctx_test",
        "test/ssl_old_test",
        "test/ssl_test",
        "test/ssl_test_ctx_test",
        "test/sslapitest",
        "test/sslbuffertest",
        "test/sslcorrupttest",
        "test/stack_test",
        "test/sysdefaulttest",
        "test/test_test",
        "test/threadstest",
        "test/threadstest_fips",
        "test/time_offset_test",
        "test/tls13ccstest",
        "test/tls13encryptiontest",
        "test/trace_api_test",
        "test/uitest",
        "test/upcallstest",
        "test/user_property_test",
        "test/v3ext",
        "test/v3nametest",
        "test/verify_extra_test",
        "test/versions",
        "test/wpackettest",
        "test/x509_check_cert_pkey_test",
        "test/x509_dup_cert_test",
        "test/x509_internal_test",
        "test/x509_time_test",
        "test/x509aux"
    ],
    "scripts" => [
        "apps/CA.pl",
        "apps/tsget.pl",
        "tools/c_rehash.pl",
        "util/wrap.pl"
    ],
    "shared_sources" => {},
    "sources" => {
        "apps/CA.pl" => [
            "apps/CA.pl.in"
        ],
        "apps/lib/cmp_client_test-bin-cmp_mock_srv.o" => [
            "apps/lib/cmp_mock_srv.c"
        ],
        "apps/lib/libapps-lib-app_libctx.o" => [
            "apps/lib/app_libctx.c"
        ],
        "apps/lib/libapps-lib-app_params.o" => [
            "apps/lib/app_params.c"
        ],
        "apps/lib/libapps-lib-app_provider.o" => [
            "apps/lib/app_provider.c"
        ],
        "apps/lib/libapps-lib-app_rand.o" => [
            "apps/lib/app_rand.c"
        ],
        "apps/lib/libapps-lib-app_x509.o" => [
            "apps/lib/app_x509.c"
        ],
        "apps/lib/libapps-lib-apps.o" => [
            "apps/lib/apps.c"
        ],
        "apps/lib/libapps-lib-apps_ui.o" => [
            "apps/lib/apps_ui.c"
        ],
        "apps/lib/libapps-lib-columns.o" => [
            "apps/lib/columns.c"
        ],
        "apps/lib/libapps-lib-engine.o" => [
            "apps/lib/engine.c"
        ],
        "apps/lib/libapps-lib-engine_loader.o" => [
            "apps/lib/engine_loader.c"
        ],
        "apps/lib/libapps-lib-fmt.o" => [
            "apps/lib/fmt.c"
        ],
        "apps/lib/libapps-lib-http_server.o" => [
            "apps/lib/http_server.c"
        ],
        "apps/lib/libapps-lib-names.o" => [
            "apps/lib/names.c"
        ],
        "apps/lib/libapps-lib-opt.o" => [
            "apps/lib/opt.c"
        ],
        "apps/lib/libapps-lib-s_cb.o" => [
            "apps/lib/s_cb.c"
        ],
        "apps/lib/libapps-lib-s_socket.o" => [
            "apps/lib/s_socket.c"
        ],
        "apps/lib/libapps-lib-tlssrp_depr.o" => [
            "apps/lib/tlssrp_depr.c"
        ],
        "apps/lib/libapps-lib-win32_init.o" => [
            "apps/lib/win32_init.c"
        ],
        "apps/lib/libtestutil-lib-opt.o" => [
            "apps/lib/opt.c"
        ],
        "apps/lib/libtestutil-lib-win32_init.o" => [
            "apps/lib/win32_init.c"
        ],
        "apps/lib/openssl-bin-cmp_mock_srv.o" => [
            "apps/lib/cmp_mock_srv.c"
        ],
        "apps/lib/uitest-bin-apps_ui.o" => [
            "apps/lib/apps_ui.c"
        ],
        "apps/libapps.a" => [
            "apps/lib/libapps-lib-app_libctx.o",
            "apps/lib/libapps-lib-app_params.o",
            "apps/lib/libapps-lib-app_provider.o",
            "apps/lib/libapps-lib-app_rand.o",
            "apps/lib/libapps-lib-app_x509.o",
            "apps/lib/libapps-lib-apps.o",
            "apps/lib/libapps-lib-apps_ui.o",
            "apps/lib/libapps-lib-columns.o",
            "apps/lib/libapps-lib-engine.o",
            "apps/lib/libapps-lib-engine_loader.o",
            "apps/lib/libapps-lib-fmt.o",
            "apps/lib/libapps-lib-http_server.o",
            "apps/lib/libapps-lib-names.o",
            "apps/lib/libapps-lib-opt.o",
            "apps/lib/libapps-lib-s_cb.o",
            "apps/lib/libapps-lib-s_socket.o",
            "apps/lib/libapps-lib-tlssrp_depr.o",
            "apps/lib/libapps-lib-win32_init.o"
        ],
        "apps/openssl" => [
            "apps/lib/openssl-bin-cmp_mock_srv.o",
            "apps/openssl-bin-asn1parse.o",
            "apps/openssl-bin-ca.o",
            "apps/openssl-bin-ciphers.o",
            "apps/openssl-bin-cmp.o",
            "apps/openssl-bin-cms.o",
            "apps/openssl-bin-crl.o",
            "apps/openssl-bin-crl2pkcs7.o",
            "apps/openssl-bin-dgst.o",
            "apps/openssl-bin-dhparam.o",
            "apps/openssl-bin-dsa.o",
            "apps/openssl-bin-dsaparam.o",
            "apps/openssl-bin-ec.o",
            "apps/openssl-bin-ecparam.o",
            "apps/openssl-bin-enc.o",
            "apps/openssl-bin-engine.o",
            "apps/openssl-bin-errstr.o",
            "apps/openssl-bin-fipsinstall.o",
            "apps/openssl-bin-gendsa.o",
            "apps/openssl-bin-genpkey.o",
            "apps/openssl-bin-genrsa.o",
            "apps/openssl-bin-info.o",
            "apps/openssl-bin-kdf.o",
            "apps/openssl-bin-list.o",
            "apps/openssl-bin-mac.o",
            "apps/openssl-bin-nseq.o",
            "apps/openssl-bin-ocsp.o",
            "apps/openssl-bin-openssl.o",
            "apps/openssl-bin-openssl.res",
            "apps/openssl-bin-passwd.o",
            "apps/openssl-bin-pkcs12.o",
            "apps/openssl-bin-pkcs7.o",
            "apps/openssl-bin-pkcs8.o",
            "apps/openssl-bin-pkey.o",
            "apps/openssl-bin-pkeyparam.o",
            "apps/openssl-bin-pkeyutl.o",
            "apps/openssl-bin-prime.o",
            "apps/openssl-bin-progs.o",
            "apps/openssl-bin-rand.o",
            "apps/openssl-bin-rehash.o",
            "apps/openssl-bin-req.o",
            "apps/openssl-bin-rsa.o",
            "apps/openssl-bin-rsautl.o",
            "apps/openssl-bin-s_client.o",
            "apps/openssl-bin-s_server.o",
            "apps/openssl-bin-s_time.o",
            "apps/openssl-bin-sess_id.o",
            "apps/openssl-bin-smime.o",
            "apps/openssl-bin-speed.o",
            "apps/openssl-bin-spkac.o",
            "apps/openssl-bin-srp.o",
            "apps/openssl-bin-storeutl.o",
            "apps/openssl-bin-ts.o",
            "apps/openssl-bin-verify.o",
            "apps/openssl-bin-version.o",
            "apps/openssl-bin-x509.o"
        ],
        "apps/openssl-bin-asn1parse.o" => [
            "apps/asn1parse.c"
        ],
        "apps/openssl-bin-ca.o" => [
            "apps/ca.c"
        ],
        "apps/openssl-bin-ciphers.o" => [
            "apps/ciphers.c"
        ],
        "apps/openssl-bin-cmp.o" => [
            "apps/cmp.c"
        ],
        "apps/openssl-bin-cms.o" => [
            "apps/cms.c"
        ],
        "apps/openssl-bin-crl.o" => [
            "apps/crl.c"
        ],
        "apps/openssl-bin-crl2pkcs7.o" => [
            "apps/crl2pkcs7.c"
        ],
        "apps/openssl-bin-dgst.o" => [
            "apps/dgst.c"
        ],
        "apps/openssl-bin-dhparam.o" => [
            "apps/dhparam.c"
        ],
        "apps/openssl-bin-dsa.o" => [
            "apps/dsa.c"
        ],
        "apps/openssl-bin-dsaparam.o" => [
            "apps/dsaparam.c"
        ],
        "apps/openssl-bin-ec.o" => [
            "apps/ec.c"
        ],
        "apps/openssl-bin-ecparam.o" => [
            "apps/ecparam.c"
        ],
        "apps/openssl-bin-enc.o" => [
            "apps/enc.c"
        ],
        "apps/openssl-bin-engine.o" => [
            "apps/engine.c"
        ],
        "apps/openssl-bin-errstr.o" => [
            "apps/errstr.c"
        ],
        "apps/openssl-bin-fipsinstall.o" => [
            "apps/fipsinstall.c"
        ],
        "apps/openssl-bin-gendsa.o" => [
            "apps/gendsa.c"
        ],
        "apps/openssl-bin-genpkey.o" => [
            "apps/genpkey.c"
        ],
        "apps/openssl-bin-genrsa.o" => [
            "apps/genrsa.c"
        ],
        "apps/openssl-bin-info.o" => [
            "apps/info.c"
        ],
        "apps/openssl-bin-kdf.o" => [
            "apps/kdf.c"
        ],
        "apps/openssl-bin-list.o" => [
            "apps/list.c"
        ],
        "apps/openssl-bin-mac.o" => [
            "apps/mac.c"
        ],
        "apps/openssl-bin-nseq.o" => [
            "apps/nseq.c"
        ],
        "apps/openssl-bin-ocsp.o" => [
            "apps/ocsp.c"
        ],
        "apps/openssl-bin-openssl.o" => [
            "apps/openssl.c"
        ],
        "apps/openssl-bin-openssl.res" => [
            "apps/openssl.rc"
        ],
        "apps/openssl-bin-passwd.o" => [
            "apps/passwd.c"
        ],
        "apps/openssl-bin-pkcs12.o" => [
            "apps/pkcs12.c"
        ],
        "apps/openssl-bin-pkcs7.o" => [
            "apps/pkcs7.c"
        ],
        "apps/openssl-bin-pkcs8.o" => [
            "apps/pkcs8.c"
        ],
        "apps/openssl-bin-pkey.o" => [
            "apps/pkey.c"
        ],
        "apps/openssl-bin-pkeyparam.o" => [
            "apps/pkeyparam.c"
        ],
        "apps/openssl-bin-pkeyutl.o" => [
            "apps/pkeyutl.c"
        ],
        "apps/openssl-bin-prime.o" => [
            "apps/prime.c"
        ],
        "apps/openssl-bin-progs.o" => [
            "apps/progs.c"
        ],
        "apps/openssl-bin-rand.o" => [
            "apps/rand.c"
        ],
        "apps/openssl-bin-rehash.o" => [
            "apps/rehash.c"
        ],
        "apps/openssl-bin-req.o" => [
            "apps/req.c"
        ],
        "apps/openssl-bin-rsa.o" => [
            "apps/rsa.c"
        ],
        "apps/openssl-bin-rsautl.o" => [
            "apps/rsautl.c"
        ],
        "apps/openssl-bin-s_client.o" => [
            "apps/s_client.c"
        ],
        "apps/openssl-bin-s_server.o" => [
            "apps/s_server.c"
        ],
        "apps/openssl-bin-s_time.o" => [
            "apps/s_time.c"
        ],
        "apps/openssl-bin-sess_id.o" => [
            "apps/sess_id.c"
        ],
        "apps/openssl-bin-smime.o" => [
            "apps/smime.c"
        ],
        "apps/openssl-bin-speed.o" => [
            "apps/speed.c"
        ],
        "apps/openssl-bin-spkac.o" => [
            "apps/spkac.c"
        ],
        "apps/openssl-bin-srp.o" => [
            "apps/srp.c"
        ],
        "apps/openssl-bin-storeutl.o" => [
            "apps/storeutl.c"
        ],
        "apps/openssl-bin-ts.o" => [
            "apps/ts.c"
        ],
        "apps/openssl-bin-verify.o" => [
            "apps/verify.c"
        ],
        "apps/openssl-bin-version.o" => [
            "apps/version.c"
        ],
        "apps/openssl-bin-x509.o" => [
            "apps/x509.c"
        ],
        "apps/tsget.pl" => [
            "apps/tsget.in"
        ],
        "crypto/aes/libcrypto-lib-aes-x86_64.o" => [
            "crypto/aes/aes-x86_64.s"
        ],
        "crypto/aes/libcrypto-lib-aes_cfb.o" => [
            "crypto/aes/aes_cfb.c"
        ],
        "crypto/aes/libcrypto-lib-aes_ecb.o" => [
            "crypto/aes/aes_ecb.c"
        ],
        "crypto/aes/libcrypto-lib-aes_ige.o" => [
            "crypto/aes/aes_ige.c"
        ],
        "crypto/aes/libcrypto-lib-aes_misc.o" => [
            "crypto/aes/aes_misc.c"
        ],
        "crypto/aes/libcrypto-lib-aes_ofb.o" => [
            "crypto/aes/aes_ofb.c"
        ],
        "crypto/aes/libcrypto-lib-aes_wrap.o" => [
            "crypto/aes/aes_wrap.c"
        ],
        "crypto/aes/libcrypto-lib-aesni-mb-x86_64.o" => [
            "crypto/aes/aesni-mb-x86_64.s"
        ],
        "crypto/aes/libcrypto-lib-aesni-sha1-x86_64.o" => [
            "crypto/aes/aesni-sha1-x86_64.s"
        ],
        "crypto/aes/libcrypto-lib-aesni-sha256-x86_64.o" => [
            "crypto/aes/aesni-sha256-x86_64.s"
        ],
        "crypto/aes/libcrypto-lib-aesni-x86_64.o" => [
            "crypto/aes/aesni-x86_64.s"
        ],
        "crypto/aes/libcrypto-lib-bsaes-x86_64.o" => [
            "crypto/aes/bsaes-x86_64.s"
        ],
        "crypto/aes/libcrypto-lib-vpaes-x86_64.o" => [
            "crypto/aes/vpaes-x86_64.s"
        ],
        "crypto/aes/libfips-lib-aes-x86_64.o" => [
            "crypto/aes/aes-x86_64.s"
        ],
        "crypto/aes/libfips-lib-aes_ecb.o" => [
            "crypto/aes/aes_ecb.c"
        ],
        "crypto/aes/libfips-lib-aes_misc.o" => [
            "crypto/aes/aes_misc.c"
        ],
        "crypto/aes/libfips-lib-aesni-mb-x86_64.o" => [
            "crypto/aes/aesni-mb-x86_64.s"
        ],
        "crypto/aes/libfips-lib-aesni-sha1-x86_64.o" => [
            "crypto/aes/aesni-sha1-x86_64.s"
        ],
        "crypto/aes/libfips-lib-aesni-sha256-x86_64.o" => [
            "crypto/aes/aesni-sha256-x86_64.s"
        ],
        "crypto/aes/libfips-lib-aesni-x86_64.o" => [
            "crypto/aes/aesni-x86_64.s"
        ],
        "crypto/aes/libfips-lib-bsaes-x86_64.o" => [
            "crypto/aes/bsaes-x86_64.s"
        ],
        "crypto/aes/libfips-lib-vpaes-x86_64.o" => [
            "crypto/aes/vpaes-x86_64.s"
        ],
        "crypto/aria/libcrypto-lib-aria.o" => [
            "crypto/aria/aria.c"
        ],
        "crypto/asn1/libcrypto-lib-a_bitstr.o" => [
            "crypto/asn1/a_bitstr.c"
        ],
        "crypto/asn1/libcrypto-lib-a_d2i_fp.o" => [
            "crypto/asn1/a_d2i_fp.c"
        ],
        "crypto/asn1/libcrypto-lib-a_digest.o" => [
            "crypto/asn1/a_digest.c"
        ],
        "crypto/asn1/libcrypto-lib-a_dup.o" => [
            "crypto/asn1/a_dup.c"
        ],
        "crypto/asn1/libcrypto-lib-a_gentm.o" => [
            "crypto/asn1/a_gentm.c"
        ],
        "crypto/asn1/libcrypto-lib-a_i2d_fp.o" => [
            "crypto/asn1/a_i2d_fp.c"
        ],
        "crypto/asn1/libcrypto-lib-a_int.o" => [
            "crypto/asn1/a_int.c"
        ],
        "crypto/asn1/libcrypto-lib-a_mbstr.o" => [
            "crypto/asn1/a_mbstr.c"
        ],
        "crypto/asn1/libcrypto-lib-a_object.o" => [
            "crypto/asn1/a_object.c"
        ],
        "crypto/asn1/libcrypto-lib-a_octet.o" => [
            "crypto/asn1/a_octet.c"
        ],
        "crypto/asn1/libcrypto-lib-a_print.o" => [
            "crypto/asn1/a_print.c"
        ],
        "crypto/asn1/libcrypto-lib-a_sign.o" => [
            "crypto/asn1/a_sign.c"
        ],
        "crypto/asn1/libcrypto-lib-a_strex.o" => [
            "crypto/asn1/a_strex.c"
        ],
        "crypto/asn1/libcrypto-lib-a_strnid.o" => [
            "crypto/asn1/a_strnid.c"
        ],
        "crypto/asn1/libcrypto-lib-a_time.o" => [
            "crypto/asn1/a_time.c"
        ],
        "crypto/asn1/libcrypto-lib-a_type.o" => [
            "crypto/asn1/a_type.c"
        ],
        "crypto/asn1/libcrypto-lib-a_utctm.o" => [
            "crypto/asn1/a_utctm.c"
        ],
        "crypto/asn1/libcrypto-lib-a_utf8.o" => [
            "crypto/asn1/a_utf8.c"
        ],
        "crypto/asn1/libcrypto-lib-a_verify.o" => [
            "crypto/asn1/a_verify.c"
        ],
        "crypto/asn1/libcrypto-lib-ameth_lib.o" => [
            "crypto/asn1/ameth_lib.c"
        ],
        "crypto/asn1/libcrypto-lib-asn1_err.o" => [
            "crypto/asn1/asn1_err.c"
        ],
        "crypto/asn1/libcrypto-lib-asn1_gen.o" => [
            "crypto/asn1/asn1_gen.c"
        ],
        "crypto/asn1/libcrypto-lib-asn1_item_list.o" => [
            "crypto/asn1/asn1_item_list.c"
        ],
        "crypto/asn1/libcrypto-lib-asn1_lib.o" => [
            "crypto/asn1/asn1_lib.c"
        ],
        "crypto/asn1/libcrypto-lib-asn1_parse.o" => [
            "crypto/asn1/asn1_parse.c"
        ],
        "crypto/asn1/libcrypto-lib-asn_mime.o" => [
            "crypto/asn1/asn_mime.c"
        ],
        "crypto/asn1/libcrypto-lib-asn_moid.o" => [
            "crypto/asn1/asn_moid.c"
        ],
        "crypto/asn1/libcrypto-lib-asn_mstbl.o" => [
            "crypto/asn1/asn_mstbl.c"
        ],
        "crypto/asn1/libcrypto-lib-asn_pack.o" => [
            "crypto/asn1/asn_pack.c"
        ],
        "crypto/asn1/libcrypto-lib-bio_asn1.o" => [
            "crypto/asn1/bio_asn1.c"
        ],
        "crypto/asn1/libcrypto-lib-bio_ndef.o" => [
            "crypto/asn1/bio_ndef.c"
        ],
        "crypto/asn1/libcrypto-lib-d2i_param.o" => [
            "crypto/asn1/d2i_param.c"
        ],
        "crypto/asn1/libcrypto-lib-d2i_pr.o" => [
            "crypto/asn1/d2i_pr.c"
        ],
        "crypto/asn1/libcrypto-lib-d2i_pu.o" => [
            "crypto/asn1/d2i_pu.c"
        ],
        "crypto/asn1/libcrypto-lib-evp_asn1.o" => [
            "crypto/asn1/evp_asn1.c"
        ],
        "crypto/asn1/libcrypto-lib-f_int.o" => [
            "crypto/asn1/f_int.c"
        ],
        "crypto/asn1/libcrypto-lib-f_string.o" => [
            "crypto/asn1/f_string.c"
        ],
        "crypto/asn1/libcrypto-lib-i2d_evp.o" => [
            "crypto/asn1/i2d_evp.c"
        ],
        "crypto/asn1/libcrypto-lib-n_pkey.o" => [
            "crypto/asn1/n_pkey.c"
        ],
        "crypto/asn1/libcrypto-lib-nsseq.o" => [
            "crypto/asn1/nsseq.c"
        ],
        "crypto/asn1/libcrypto-lib-p5_pbe.o" => [
            "crypto/asn1/p5_pbe.c"
        ],
        "crypto/asn1/libcrypto-lib-p5_pbev2.o" => [
            "crypto/asn1/p5_pbev2.c"
        ],
        "crypto/asn1/libcrypto-lib-p5_scrypt.o" => [
            "crypto/asn1/p5_scrypt.c"
        ],
        "crypto/asn1/libcrypto-lib-p8_pkey.o" => [
            "crypto/asn1/p8_pkey.c"
        ],
        "crypto/asn1/libcrypto-lib-t_bitst.o" => [
            "crypto/asn1/t_bitst.c"
        ],
        "crypto/asn1/libcrypto-lib-t_pkey.o" => [
            "crypto/asn1/t_pkey.c"
        ],
        "crypto/asn1/libcrypto-lib-t_spki.o" => [
            "crypto/asn1/t_spki.c"
        ],
        "crypto/asn1/libcrypto-lib-tasn_dec.o" => [
            "crypto/asn1/tasn_dec.c"
        ],
        "crypto/asn1/libcrypto-lib-tasn_enc.o" => [
            "crypto/asn1/tasn_enc.c"
        ],
        "crypto/asn1/libcrypto-lib-tasn_fre.o" => [
            "crypto/asn1/tasn_fre.c"
        ],
        "crypto/asn1/libcrypto-lib-tasn_new.o" => [
            "crypto/asn1/tasn_new.c"
        ],
        "crypto/asn1/libcrypto-lib-tasn_prn.o" => [
            "crypto/asn1/tasn_prn.c"
        ],
        "crypto/asn1/libcrypto-lib-tasn_scn.o" => [
            "crypto/asn1/tasn_scn.c"
        ],
        "crypto/asn1/libcrypto-lib-tasn_typ.o" => [
            "crypto/asn1/tasn_typ.c"
        ],
        "crypto/asn1/libcrypto-lib-tasn_utl.o" => [
            "crypto/asn1/tasn_utl.c"
        ],
        "crypto/asn1/libcrypto-lib-x_algor.o" => [
            "crypto/asn1/x_algor.c"
        ],
        "crypto/asn1/libcrypto-lib-x_bignum.o" => [
            "crypto/asn1/x_bignum.c"
        ],
        "crypto/asn1/libcrypto-lib-x_info.o" => [
            "crypto/asn1/x_info.c"
        ],
        "crypto/asn1/libcrypto-lib-x_int64.o" => [
            "crypto/asn1/x_int64.c"
        ],
        "crypto/asn1/libcrypto-lib-x_long.o" => [
            "crypto/asn1/x_long.c"
        ],
        "crypto/asn1/libcrypto-lib-x_pkey.o" => [
            "crypto/asn1/x_pkey.c"
        ],
        "crypto/asn1/libcrypto-lib-x_sig.o" => [
            "crypto/asn1/x_sig.c"
        ],
        "crypto/asn1/libcrypto-lib-x_spki.o" => [
            "crypto/asn1/x_spki.c"
        ],
        "crypto/asn1/libcrypto-lib-x_val.o" => [
            "crypto/asn1/x_val.c"
        ],
        "crypto/async/arch/libcrypto-lib-async_null.o" => [
            "crypto/async/arch/async_null.c"
        ],
        "crypto/async/arch/libcrypto-lib-async_posix.o" => [
            "crypto/async/arch/async_posix.c"
        ],
        "crypto/async/arch/libcrypto-lib-async_win.o" => [
            "crypto/async/arch/async_win.c"
        ],
        "crypto/async/libcrypto-lib-async.o" => [
            "crypto/async/async.c"
        ],
        "crypto/async/libcrypto-lib-async_err.o" => [
            "crypto/async/async_err.c"
        ],
        "crypto/async/libcrypto-lib-async_wait.o" => [
            "crypto/async/async_wait.c"
        ],
        "crypto/bf/libcrypto-lib-bf_cfb64.o" => [
            "crypto/bf/bf_cfb64.c"
        ],
        "crypto/bf/libcrypto-lib-bf_ecb.o" => [
            "crypto/bf/bf_ecb.c"
        ],
        "crypto/bf/libcrypto-lib-bf_enc.o" => [
            "crypto/bf/bf_enc.c"
        ],
        "crypto/bf/libcrypto-lib-bf_ofb64.o" => [
            "crypto/bf/bf_ofb64.c"
        ],
        "crypto/bf/libcrypto-lib-bf_skey.o" => [
            "crypto/bf/bf_skey.c"
        ],
        "crypto/bio/libcrypto-lib-bf_buff.o" => [
            "crypto/bio/bf_buff.c"
        ],
        "crypto/bio/libcrypto-lib-bf_lbuf.o" => [
            "crypto/bio/bf_lbuf.c"
        ],
        "crypto/bio/libcrypto-lib-bf_nbio.o" => [
            "crypto/bio/bf_nbio.c"
        ],
        "crypto/bio/libcrypto-lib-bf_null.o" => [
            "crypto/bio/bf_null.c"
        ],
        "crypto/bio/libcrypto-lib-bf_prefix.o" => [
            "crypto/bio/bf_prefix.c"
        ],
        "crypto/bio/libcrypto-lib-bf_readbuff.o" => [
            "crypto/bio/bf_readbuff.c"
        ],
        "crypto/bio/libcrypto-lib-bio_addr.o" => [
            "crypto/bio/bio_addr.c"
        ],
        "crypto/bio/libcrypto-lib-bio_cb.o" => [
            "crypto/bio/bio_cb.c"
        ],
        "crypto/bio/libcrypto-lib-bio_dump.o" => [
            "crypto/bio/bio_dump.c"
        ],
        "crypto/bio/libcrypto-lib-bio_err.o" => [
            "crypto/bio/bio_err.c"
        ],
        "crypto/bio/libcrypto-lib-bio_lib.o" => [
            "crypto/bio/bio_lib.c"
        ],
        "crypto/bio/libcrypto-lib-bio_meth.o" => [
            "crypto/bio/bio_meth.c"
        ],
        "crypto/bio/libcrypto-lib-bio_print.o" => [
            "crypto/bio/bio_print.c"
        ],
        "crypto/bio/libcrypto-lib-bio_sock.o" => [
            "crypto/bio/bio_sock.c"
        ],
        "crypto/bio/libcrypto-lib-bio_sock2.o" => [
            "crypto/bio/bio_sock2.c"
        ],
        "crypto/bio/libcrypto-lib-bss_acpt.o" => [
            "crypto/bio/bss_acpt.c"
        ],
        "crypto/bio/libcrypto-lib-bss_bio.o" => [
            "crypto/bio/bss_bio.c"
        ],
        "crypto/bio/libcrypto-lib-bss_conn.o" => [
            "crypto/bio/bss_conn.c"
        ],
        "crypto/bio/libcrypto-lib-bss_core.o" => [
            "crypto/bio/bss_core.c"
        ],
        "crypto/bio/libcrypto-lib-bss_dgram.o" => [
            "crypto/bio/bss_dgram.c"
        ],
        "crypto/bio/libcrypto-lib-bss_fd.o" => [
            "crypto/bio/bss_fd.c"
        ],
        "crypto/bio/libcrypto-lib-bss_file.o" => [
            "crypto/bio/bss_file.c"
        ],
        "crypto/bio/libcrypto-lib-bss_log.o" => [
            "crypto/bio/bss_log.c"
        ],
        "crypto/bio/libcrypto-lib-bss_mem.o" => [
            "crypto/bio/bss_mem.c"
        ],
        "crypto/bio/libcrypto-lib-bss_null.o" => [
            "crypto/bio/bss_null.c"
        ],
        "crypto/bio/libcrypto-lib-bss_sock.o" => [
            "crypto/bio/bss_sock.c"
        ],
        "crypto/bio/libcrypto-lib-ossl_core_bio.o" => [
            "crypto/bio/ossl_core_bio.c"
        ],
        "crypto/bn/libcrypto-lib-bn_add.o" => [
            "crypto/bn/bn_add.c"
        ],
        "crypto/bn/libcrypto-lib-bn_asm.o" => [
            "crypto/bn/bn_asm.c"
        ],
        "crypto/bn/libcrypto-lib-bn_blind.o" => [
            "crypto/bn/bn_blind.c"
        ],
        "crypto/bn/libcrypto-lib-bn_const.o" => [
            "crypto/bn/bn_const.c"
        ],
        "crypto/bn/libcrypto-lib-bn_conv.o" => [
            "crypto/bn/bn_conv.c"
        ],
        "crypto/bn/libcrypto-lib-bn_ctx.o" => [
            "crypto/bn/bn_ctx.c"
        ],
        "crypto/bn/libcrypto-lib-bn_depr.o" => [
            "crypto/bn/bn_depr.c"
        ],
        "crypto/bn/libcrypto-lib-bn_dh.o" => [
            "crypto/bn/bn_dh.c"
        ],
        "crypto/bn/libcrypto-lib-bn_div.o" => [
            "crypto/bn/bn_div.c"
        ],
        "crypto/bn/libcrypto-lib-bn_err.o" => [
            "crypto/bn/bn_err.c"
        ],
        "crypto/bn/libcrypto-lib-bn_exp.o" => [
            "crypto/bn/bn_exp.c"
        ],
        "crypto/bn/libcrypto-lib-bn_exp2.o" => [
            "crypto/bn/bn_exp2.c"
        ],
        "crypto/bn/libcrypto-lib-bn_gcd.o" => [
            "crypto/bn/bn_gcd.c"
        ],
        "crypto/bn/libcrypto-lib-bn_gf2m.o" => [
            "crypto/bn/bn_gf2m.c"
        ],
        "crypto/bn/libcrypto-lib-bn_intern.o" => [
            "crypto/bn/bn_intern.c"
        ],
        "crypto/bn/libcrypto-lib-bn_kron.o" => [
            "crypto/bn/bn_kron.c"
        ],
        "crypto/bn/libcrypto-lib-bn_lib.o" => [
            "crypto/bn/bn_lib.c"
        ],
        "crypto/bn/libcrypto-lib-bn_mod.o" => [
            "crypto/bn/bn_mod.c"
        ],
        "crypto/bn/libcrypto-lib-bn_mont.o" => [
            "crypto/bn/bn_mont.c"
        ],
        "crypto/bn/libcrypto-lib-bn_mpi.o" => [
            "crypto/bn/bn_mpi.c"
        ],
        "crypto/bn/libcrypto-lib-bn_mul.o" => [
            "crypto/bn/bn_mul.c"
        ],
        "crypto/bn/libcrypto-lib-bn_nist.o" => [
            "crypto/bn/bn_nist.c"
        ],
        "crypto/bn/libcrypto-lib-bn_prime.o" => [
            "crypto/bn/bn_prime.c"
        ],
        "crypto/bn/libcrypto-lib-bn_print.o" => [
            "crypto/bn/bn_print.c"
        ],
        "crypto/bn/libcrypto-lib-bn_rand.o" => [
            "crypto/bn/bn_rand.c"
        ],
        "crypto/bn/libcrypto-lib-bn_recp.o" => [
            "crypto/bn/bn_recp.c"
        ],
        "crypto/bn/libcrypto-lib-bn_rsa_fips186_4.o" => [
            "crypto/bn/bn_rsa_fips186_4.c"
        ],
        "crypto/bn/libcrypto-lib-bn_shift.o" => [
            "crypto/bn/bn_shift.c"
        ],
        "crypto/bn/libcrypto-lib-bn_sqr.o" => [
            "crypto/bn/bn_sqr.c"
        ],
        "crypto/bn/libcrypto-lib-bn_sqrt.o" => [
            "crypto/bn/bn_sqrt.c"
        ],
        "crypto/bn/libcrypto-lib-bn_srp.o" => [
            "crypto/bn/bn_srp.c"
        ],
        "crypto/bn/libcrypto-lib-bn_word.o" => [
            "crypto/bn/bn_word.c"
        ],
        "crypto/bn/libcrypto-lib-bn_x931p.o" => [
            "crypto/bn/bn_x931p.c"
        ],
        "crypto/bn/libcrypto-lib-rsaz-avx2.o" => [
            "crypto/bn/rsaz-avx2.s"
        ],
        "crypto/bn/libcrypto-lib-rsaz-avx512.o" => [
            "crypto/bn/rsaz-avx512.s"
        ],
        "crypto/bn/libcrypto-lib-rsaz-x86_64.o" => [
            "crypto/bn/rsaz-x86_64.s"
        ],
        "crypto/bn/libcrypto-lib-rsaz_exp.o" => [
            "crypto/bn/rsaz_exp.c"
        ],
        "crypto/bn/libcrypto-lib-rsaz_exp_x2.o" => [
            "crypto/bn/rsaz_exp_x2.c"
        ],
        "crypto/bn/libcrypto-lib-x86_64-gf2m.o" => [
            "crypto/bn/x86_64-gf2m.s"
        ],
        "crypto/bn/libcrypto-lib-x86_64-mont.o" => [
            "crypto/bn/x86_64-mont.s"
        ],
        "crypto/bn/libcrypto-lib-x86_64-mont5.o" => [
            "crypto/bn/x86_64-mont5.s"
        ],
        "crypto/bn/libfips-lib-bn_add.o" => [
            "crypto/bn/bn_add.c"
        ],
        "crypto/bn/libfips-lib-bn_asm.o" => [
            "crypto/bn/bn_asm.c"
        ],
        "crypto/bn/libfips-lib-bn_blind.o" => [
            "crypto/bn/bn_blind.c"
        ],
        "crypto/bn/libfips-lib-bn_const.o" => [
            "crypto/bn/bn_const.c"
        ],
        "crypto/bn/libfips-lib-bn_conv.o" => [
            "crypto/bn/bn_conv.c"
        ],
        "crypto/bn/libfips-lib-bn_ctx.o" => [
            "crypto/bn/bn_ctx.c"
        ],
        "crypto/bn/libfips-lib-bn_dh.o" => [
            "crypto/bn/bn_dh.c"
        ],
        "crypto/bn/libfips-lib-bn_div.o" => [
            "crypto/bn/bn_div.c"
        ],
        "crypto/bn/libfips-lib-bn_exp.o" => [
            "crypto/bn/bn_exp.c"
        ],
        "crypto/bn/libfips-lib-bn_exp2.o" => [
            "crypto/bn/bn_exp2.c"
        ],
        "crypto/bn/libfips-lib-bn_gcd.o" => [
            "crypto/bn/bn_gcd.c"
        ],
        "crypto/bn/libfips-lib-bn_gf2m.o" => [
            "crypto/bn/bn_gf2m.c"
        ],
        "crypto/bn/libfips-lib-bn_intern.o" => [
            "crypto/bn/bn_intern.c"
        ],
        "crypto/bn/libfips-lib-bn_kron.o" => [
            "crypto/bn/bn_kron.c"
        ],
        "crypto/bn/libfips-lib-bn_lib.o" => [
            "crypto/bn/bn_lib.c"
        ],
        "crypto/bn/libfips-lib-bn_mod.o" => [
            "crypto/bn/bn_mod.c"
        ],
        "crypto/bn/libfips-lib-bn_mont.o" => [
            "crypto/bn/bn_mont.c"
        ],
        "crypto/bn/libfips-lib-bn_mpi.o" => [
            "crypto/bn/bn_mpi.c"
        ],
        "crypto/bn/libfips-lib-bn_mul.o" => [
            "crypto/bn/bn_mul.c"
        ],
        "crypto/bn/libfips-lib-bn_nist.o" => [
            "crypto/bn/bn_nist.c"
        ],
        "crypto/bn/libfips-lib-bn_prime.o" => [
            "crypto/bn/bn_prime.c"
        ],
        "crypto/bn/libfips-lib-bn_rand.o" => [
            "crypto/bn/bn_rand.c"
        ],
        "crypto/bn/libfips-lib-bn_recp.o" => [
            "crypto/bn/bn_recp.c"
        ],
        "crypto/bn/libfips-lib-bn_rsa_fips186_4.o" => [
            "crypto/bn/bn_rsa_fips186_4.c"
        ],
        "crypto/bn/libfips-lib-bn_shift.o" => [
            "crypto/bn/bn_shift.c"
        ],
        "crypto/bn/libfips-lib-bn_sqr.o" => [
            "crypto/bn/bn_sqr.c"
        ],
        "crypto/bn/libfips-lib-bn_sqrt.o" => [
            "crypto/bn/bn_sqrt.c"
        ],
        "crypto/bn/libfips-lib-bn_word.o" => [
            "crypto/bn/bn_word.c"
        ],
        "crypto/bn/libfips-lib-rsaz-avx2.o" => [
            "crypto/bn/rsaz-avx2.s"
        ],
        "crypto/bn/libfips-lib-rsaz-avx512.o" => [
            "crypto/bn/rsaz-avx512.s"
        ],
        "crypto/bn/libfips-lib-rsaz-x86_64.o" => [
            "crypto/bn/rsaz-x86_64.s"
        ],
        "crypto/bn/libfips-lib-rsaz_exp.o" => [
            "crypto/bn/rsaz_exp.c"
        ],
        "crypto/bn/libfips-lib-rsaz_exp_x2.o" => [
            "crypto/bn/rsaz_exp_x2.c"
        ],
        "crypto/bn/libfips-lib-x86_64-gf2m.o" => [
            "crypto/bn/x86_64-gf2m.s"
        ],
        "crypto/bn/libfips-lib-x86_64-mont.o" => [
            "crypto/bn/x86_64-mont.s"
        ],
        "crypto/bn/libfips-lib-x86_64-mont5.o" => [
            "crypto/bn/x86_64-mont5.s"
        ],
        "crypto/buffer/libcrypto-lib-buf_err.o" => [
            "crypto/buffer/buf_err.c"
        ],
        "crypto/buffer/libcrypto-lib-buffer.o" => [
            "crypto/buffer/buffer.c"
        ],
        "crypto/buffer/libfips-lib-buffer.o" => [
            "crypto/buffer/buffer.c"
        ],
        "crypto/camellia/libcrypto-lib-cmll-x86_64.o" => [
            "crypto/camellia/cmll-x86_64.s"
        ],
        "crypto/camellia/libcrypto-lib-cmll_cfb.o" => [
            "crypto/camellia/cmll_cfb.c"
        ],
        "crypto/camellia/libcrypto-lib-cmll_ctr.o" => [
            "crypto/camellia/cmll_ctr.c"
        ],
        "crypto/camellia/libcrypto-lib-cmll_ecb.o" => [
            "crypto/camellia/cmll_ecb.c"
        ],
        "crypto/camellia/libcrypto-lib-cmll_misc.o" => [
            "crypto/camellia/cmll_misc.c"
        ],
        "crypto/camellia/libcrypto-lib-cmll_ofb.o" => [
            "crypto/camellia/cmll_ofb.c"
        ],
        "crypto/cast/libcrypto-lib-c_cfb64.o" => [
            "crypto/cast/c_cfb64.c"
        ],
        "crypto/cast/libcrypto-lib-c_ecb.o" => [
            "crypto/cast/c_ecb.c"
        ],
        "crypto/cast/libcrypto-lib-c_enc.o" => [
            "crypto/cast/c_enc.c"
        ],
        "crypto/cast/libcrypto-lib-c_ofb64.o" => [
            "crypto/cast/c_ofb64.c"
        ],
        "crypto/cast/libcrypto-lib-c_skey.o" => [
            "crypto/cast/c_skey.c"
        ],
        "crypto/chacha/libcrypto-lib-chacha-x86_64.o" => [
            "crypto/chacha/chacha-x86_64.s"
        ],
        "crypto/cmac/libcrypto-lib-cmac.o" => [
            "crypto/cmac/cmac.c"
        ],
        "crypto/cmac/libfips-lib-cmac.o" => [
            "crypto/cmac/cmac.c"
        ],
        "crypto/cmp/libcrypto-lib-cmp_asn.o" => [
            "crypto/cmp/cmp_asn.c"
        ],
        "crypto/cmp/libcrypto-lib-cmp_client.o" => [
            "crypto/cmp/cmp_client.c"
        ],
        "crypto/cmp/libcrypto-lib-cmp_ctx.o" => [
            "crypto/cmp/cmp_ctx.c"
        ],
        "crypto/cmp/libcrypto-lib-cmp_err.o" => [
            "crypto/cmp/cmp_err.c"
        ],
        "crypto/cmp/libcrypto-lib-cmp_hdr.o" => [
            "crypto/cmp/cmp_hdr.c"
        ],
        "crypto/cmp/libcrypto-lib-cmp_http.o" => [
            "crypto/cmp/cmp_http.c"
        ],
        "crypto/cmp/libcrypto-lib-cmp_msg.o" => [
            "crypto/cmp/cmp_msg.c"
        ],
        "crypto/cmp/libcrypto-lib-cmp_protect.o" => [
            "crypto/cmp/cmp_protect.c"
        ],
        "crypto/cmp/libcrypto-lib-cmp_server.o" => [
            "crypto/cmp/cmp_server.c"
        ],
        "crypto/cmp/libcrypto-lib-cmp_status.o" => [
            "crypto/cmp/cmp_status.c"
        ],
        "crypto/cmp/libcrypto-lib-cmp_util.o" => [
            "crypto/cmp/cmp_util.c"
        ],
        "crypto/cmp/libcrypto-lib-cmp_vfy.o" => [
            "crypto/cmp/cmp_vfy.c"
        ],
        "crypto/cms/libcrypto-lib-cms_asn1.o" => [
            "crypto/cms/cms_asn1.c"
        ],
        "crypto/cms/libcrypto-lib-cms_att.o" => [
            "crypto/cms/cms_att.c"
        ],
        "crypto/cms/libcrypto-lib-cms_cd.o" => [
            "crypto/cms/cms_cd.c"
        ],
        "crypto/cms/libcrypto-lib-cms_dd.o" => [
            "crypto/cms/cms_dd.c"
        ],
        "crypto/cms/libcrypto-lib-cms_dh.o" => [
            "crypto/cms/cms_dh.c"
        ],
        "crypto/cms/libcrypto-lib-cms_ec.o" => [
            "crypto/cms/cms_ec.c"
        ],
        "crypto/cms/libcrypto-lib-cms_enc.o" => [
            "crypto/cms/cms_enc.c"
        ],
        "crypto/cms/libcrypto-lib-cms_env.o" => [
            "crypto/cms/cms_env.c"
        ],
        "crypto/cms/libcrypto-lib-cms_err.o" => [
            "crypto/cms/cms_err.c"
        ],
        "crypto/cms/libcrypto-lib-cms_ess.o" => [
            "crypto/cms/cms_ess.c"
        ],
        "crypto/cms/libcrypto-lib-cms_io.o" => [
            "crypto/cms/cms_io.c"
        ],
        "crypto/cms/libcrypto-lib-cms_kari.o" => [
            "crypto/cms/cms_kari.c"
        ],
        "crypto/cms/libcrypto-lib-cms_lib.o" => [
            "crypto/cms/cms_lib.c"
        ],
        "crypto/cms/libcrypto-lib-cms_pwri.o" => [
            "crypto/cms/cms_pwri.c"
        ],
        "crypto/cms/libcrypto-lib-cms_rsa.o" => [
            "crypto/cms/cms_rsa.c"
        ],
        "crypto/cms/libcrypto-lib-cms_sd.o" => [
            "crypto/cms/cms_sd.c"
        ],
        "crypto/cms/libcrypto-lib-cms_smime.o" => [
            "crypto/cms/cms_smime.c"
        ],
        "crypto/conf/libcrypto-lib-conf_api.o" => [
            "crypto/conf/conf_api.c"
        ],
        "crypto/conf/libcrypto-lib-conf_def.o" => [
            "crypto/conf/conf_def.c"
        ],
        "crypto/conf/libcrypto-lib-conf_err.o" => [
            "crypto/conf/conf_err.c"
        ],
        "crypto/conf/libcrypto-lib-conf_lib.o" => [
            "crypto/conf/conf_lib.c"
        ],
        "crypto/conf/libcrypto-lib-conf_mall.o" => [
            "crypto/conf/conf_mall.c"
        ],
        "crypto/conf/libcrypto-lib-conf_mod.o" => [
            "crypto/conf/conf_mod.c"
        ],
        "crypto/conf/libcrypto-lib-conf_sap.o" => [
            "crypto/conf/conf_sap.c"
        ],
        "crypto/conf/libcrypto-lib-conf_ssl.o" => [
            "crypto/conf/conf_ssl.c"
        ],
        "crypto/crmf/libcrypto-lib-crmf_asn.o" => [
            "crypto/crmf/crmf_asn.c"
        ],
        "crypto/crmf/libcrypto-lib-crmf_err.o" => [
            "crypto/crmf/crmf_err.c"
        ],
        "crypto/crmf/libcrypto-lib-crmf_lib.o" => [
            "crypto/crmf/crmf_lib.c"
        ],
        "crypto/crmf/libcrypto-lib-crmf_pbm.o" => [
            "crypto/crmf/crmf_pbm.c"
        ],
        "crypto/ct/libcrypto-lib-ct_b64.o" => [
            "crypto/ct/ct_b64.c"
        ],
        "crypto/ct/libcrypto-lib-ct_err.o" => [
            "crypto/ct/ct_err.c"
        ],
        "crypto/ct/libcrypto-lib-ct_log.o" => [
            "crypto/ct/ct_log.c"
        ],
        "crypto/ct/libcrypto-lib-ct_oct.o" => [
            "crypto/ct/ct_oct.c"
        ],
        "crypto/ct/libcrypto-lib-ct_policy.o" => [
            "crypto/ct/ct_policy.c"
        ],
        "crypto/ct/libcrypto-lib-ct_prn.o" => [
            "crypto/ct/ct_prn.c"
        ],
        "crypto/ct/libcrypto-lib-ct_sct.o" => [
            "crypto/ct/ct_sct.c"
        ],
        "crypto/ct/libcrypto-lib-ct_sct_ctx.o" => [
            "crypto/ct/ct_sct_ctx.c"
        ],
        "crypto/ct/libcrypto-lib-ct_vfy.o" => [
            "crypto/ct/ct_vfy.c"
        ],
        "crypto/ct/libcrypto-lib-ct_x509v3.o" => [
            "crypto/ct/ct_x509v3.c"
        ],
        "crypto/des/libcrypto-lib-cbc_cksm.o" => [
            "crypto/des/cbc_cksm.c"
        ],
        "crypto/des/libcrypto-lib-cbc_enc.o" => [
            "crypto/des/cbc_enc.c"
        ],
        "crypto/des/libcrypto-lib-cfb64ede.o" => [
            "crypto/des/cfb64ede.c"
        ],
        "crypto/des/libcrypto-lib-cfb64enc.o" => [
            "crypto/des/cfb64enc.c"
        ],
        "crypto/des/libcrypto-lib-cfb_enc.o" => [
            "crypto/des/cfb_enc.c"
        ],
        "crypto/des/libcrypto-lib-des_enc.o" => [
            "crypto/des/des_enc.c"
        ],
        "crypto/des/libcrypto-lib-ecb3_enc.o" => [
            "crypto/des/ecb3_enc.c"
        ],
        "crypto/des/libcrypto-lib-ecb_enc.o" => [
            "crypto/des/ecb_enc.c"
        ],
        "crypto/des/libcrypto-lib-fcrypt.o" => [
            "crypto/des/fcrypt.c"
        ],
        "crypto/des/libcrypto-lib-fcrypt_b.o" => [
            "crypto/des/fcrypt_b.c"
        ],
        "crypto/des/libcrypto-lib-ofb64ede.o" => [
            "crypto/des/ofb64ede.c"
        ],
        "crypto/des/libcrypto-lib-ofb64enc.o" => [
            "crypto/des/ofb64enc.c"
        ],
        "crypto/des/libcrypto-lib-ofb_enc.o" => [
            "crypto/des/ofb_enc.c"
        ],
        "crypto/des/libcrypto-lib-pcbc_enc.o" => [
            "crypto/des/pcbc_enc.c"
        ],
        "crypto/des/libcrypto-lib-qud_cksm.o" => [
            "crypto/des/qud_cksm.c"
        ],
        "crypto/des/libcrypto-lib-rand_key.o" => [
            "crypto/des/rand_key.c"
        ],
        "crypto/des/libcrypto-lib-set_key.o" => [
            "crypto/des/set_key.c"
        ],
        "crypto/des/libcrypto-lib-str2key.o" => [
            "crypto/des/str2key.c"
        ],
        "crypto/des/libcrypto-lib-xcbc_enc.o" => [
            "crypto/des/xcbc_enc.c"
        ],
        "crypto/des/libfips-lib-des_enc.o" => [
            "crypto/des/des_enc.c"
        ],
        "crypto/des/libfips-lib-ecb3_enc.o" => [
            "crypto/des/ecb3_enc.c"
        ],
        "crypto/des/libfips-lib-fcrypt_b.o" => [
            "crypto/des/fcrypt_b.c"
        ],
        "crypto/des/libfips-lib-set_key.o" => [
            "crypto/des/set_key.c"
        ],
        "crypto/dh/libcrypto-lib-dh_ameth.o" => [
            "crypto/dh/dh_ameth.c"
        ],
        "crypto/dh/libcrypto-lib-dh_asn1.o" => [
            "crypto/dh/dh_asn1.c"
        ],
        "crypto/dh/libcrypto-lib-dh_backend.o" => [
            "crypto/dh/dh_backend.c"
        ],
        "crypto/dh/libcrypto-lib-dh_check.o" => [
            "crypto/dh/dh_check.c"
        ],
        "crypto/dh/libcrypto-lib-dh_depr.o" => [
            "crypto/dh/dh_depr.c"
        ],
        "crypto/dh/libcrypto-lib-dh_err.o" => [
            "crypto/dh/dh_err.c"
        ],
        "crypto/dh/libcrypto-lib-dh_gen.o" => [
            "crypto/dh/dh_gen.c"
        ],
        "crypto/dh/libcrypto-lib-dh_group_params.o" => [
            "crypto/dh/dh_group_params.c"
        ],
        "crypto/dh/libcrypto-lib-dh_kdf.o" => [
            "crypto/dh/dh_kdf.c"
        ],
        "crypto/dh/libcrypto-lib-dh_key.o" => [
            "crypto/dh/dh_key.c"
        ],
        "crypto/dh/libcrypto-lib-dh_lib.o" => [
            "crypto/dh/dh_lib.c"
        ],
        "crypto/dh/libcrypto-lib-dh_meth.o" => [
            "crypto/dh/dh_meth.c"
        ],
        "crypto/dh/libcrypto-lib-dh_pmeth.o" => [
            "crypto/dh/dh_pmeth.c"
        ],
        "crypto/dh/libcrypto-lib-dh_prn.o" => [
            "crypto/dh/dh_prn.c"
        ],
        "crypto/dh/libcrypto-lib-dh_rfc5114.o" => [
            "crypto/dh/dh_rfc5114.c"
        ],
        "crypto/dh/libfips-lib-dh_backend.o" => [
            "crypto/dh/dh_backend.c"
        ],
        "crypto/dh/libfips-lib-dh_check.o" => [
            "crypto/dh/dh_check.c"
        ],
        "crypto/dh/libfips-lib-dh_gen.o" => [
            "crypto/dh/dh_gen.c"
        ],
        "crypto/dh/libfips-lib-dh_group_params.o" => [
            "crypto/dh/dh_group_params.c"
        ],
        "crypto/dh/libfips-lib-dh_kdf.o" => [
            "crypto/dh/dh_kdf.c"
        ],
        "crypto/dh/libfips-lib-dh_key.o" => [
            "crypto/dh/dh_key.c"
        ],
        "crypto/dh/libfips-lib-dh_lib.o" => [
            "crypto/dh/dh_lib.c"
        ],
        "crypto/dsa/libcrypto-lib-dsa_ameth.o" => [
            "crypto/dsa/dsa_ameth.c"
        ],
        "crypto/dsa/libcrypto-lib-dsa_asn1.o" => [
            "crypto/dsa/dsa_asn1.c"
        ],
        "crypto/dsa/libcrypto-lib-dsa_backend.o" => [
            "crypto/dsa/dsa_backend.c"
        ],
        "crypto/dsa/libcrypto-lib-dsa_check.o" => [
            "crypto/dsa/dsa_check.c"
        ],
        "crypto/dsa/libcrypto-lib-dsa_depr.o" => [
            "crypto/dsa/dsa_depr.c"
        ],
        "crypto/dsa/libcrypto-lib-dsa_err.o" => [
            "crypto/dsa/dsa_err.c"
        ],
        "crypto/dsa/libcrypto-lib-dsa_gen.o" => [
            "crypto/dsa/dsa_gen.c"
        ],
        "crypto/dsa/libcrypto-lib-dsa_key.o" => [
            "crypto/dsa/dsa_key.c"
        ],
        "crypto/dsa/libcrypto-lib-dsa_lib.o" => [
            "crypto/dsa/dsa_lib.c"
        ],
        "crypto/dsa/libcrypto-lib-dsa_meth.o" => [
            "crypto/dsa/dsa_meth.c"
        ],
        "crypto/dsa/libcrypto-lib-dsa_ossl.o" => [
            "crypto/dsa/dsa_ossl.c"
        ],
        "crypto/dsa/libcrypto-lib-dsa_pmeth.o" => [
            "crypto/dsa/dsa_pmeth.c"
        ],
        "crypto/dsa/libcrypto-lib-dsa_prn.o" => [
            "crypto/dsa/dsa_prn.c"
        ],
        "crypto/dsa/libcrypto-lib-dsa_sign.o" => [
            "crypto/dsa/dsa_sign.c"
        ],
        "crypto/dsa/libcrypto-lib-dsa_vrf.o" => [
            "crypto/dsa/dsa_vrf.c"
        ],
        "crypto/dsa/libfips-lib-dsa_backend.o" => [
            "crypto/dsa/dsa_backend.c"
        ],
        "crypto/dsa/libfips-lib-dsa_check.o" => [
            "crypto/dsa/dsa_check.c"
        ],
        "crypto/dsa/libfips-lib-dsa_gen.o" => [
            "crypto/dsa/dsa_gen.c"
        ],
        "crypto/dsa/libfips-lib-dsa_key.o" => [
            "crypto/dsa/dsa_key.c"
        ],
        "crypto/dsa/libfips-lib-dsa_lib.o" => [
            "crypto/dsa/dsa_lib.c"
        ],
        "crypto/dsa/libfips-lib-dsa_ossl.o" => [
            "crypto/dsa/dsa_ossl.c"
        ],
        "crypto/dsa/libfips-lib-dsa_sign.o" => [
            "crypto/dsa/dsa_sign.c"
        ],
        "crypto/dsa/libfips-lib-dsa_vrf.o" => [
            "crypto/dsa/dsa_vrf.c"
        ],
        "crypto/dso/libcrypto-lib-dso_dl.o" => [
            "crypto/dso/dso_dl.c"
        ],
        "crypto/dso/libcrypto-lib-dso_dlfcn.o" => [
            "crypto/dso/dso_dlfcn.c"
        ],
        "crypto/dso/libcrypto-lib-dso_err.o" => [
            "crypto/dso/dso_err.c"
        ],
        "crypto/dso/libcrypto-lib-dso_lib.o" => [
            "crypto/dso/dso_lib.c"
        ],
        "crypto/dso/libcrypto-lib-dso_openssl.o" => [
            "crypto/dso/dso_openssl.c"
        ],
        "crypto/dso/libcrypto-lib-dso_vms.o" => [
            "crypto/dso/dso_vms.c"
        ],
        "crypto/dso/libcrypto-lib-dso_win32.o" => [
            "crypto/dso/dso_win32.c"
        ],
        "crypto/ec/curve448/arch_32/libcrypto-lib-f_impl32.o" => [
            "crypto/ec/curve448/arch_32/f_impl32.c"
        ],
        "crypto/ec/curve448/arch_32/libfips-lib-f_impl32.o" => [
            "crypto/ec/curve448/arch_32/f_impl32.c"
        ],
        "crypto/ec/curve448/arch_64/libcrypto-lib-f_impl64.o" => [
            "crypto/ec/curve448/arch_64/f_impl64.c"
        ],
        "crypto/ec/curve448/arch_64/libfips-lib-f_impl64.o" => [
            "crypto/ec/curve448/arch_64/f_impl64.c"
        ],
        "crypto/ec/curve448/libcrypto-lib-curve448.o" => [
            "crypto/ec/curve448/curve448.c"
        ],
        "crypto/ec/curve448/libcrypto-lib-curve448_tables.o" => [
            "crypto/ec/curve448/curve448_tables.c"
        ],
        "crypto/ec/curve448/libcrypto-lib-eddsa.o" => [
            "crypto/ec/curve448/eddsa.c"
        ],
        "crypto/ec/curve448/libcrypto-lib-f_generic.o" => [
            "crypto/ec/curve448/f_generic.c"
        ],
        "crypto/ec/curve448/libcrypto-lib-scalar.o" => [
            "crypto/ec/curve448/scalar.c"
        ],
        "crypto/ec/curve448/libfips-lib-curve448.o" => [
            "crypto/ec/curve448/curve448.c"
        ],
        "crypto/ec/curve448/libfips-lib-curve448_tables.o" => [
            "crypto/ec/curve448/curve448_tables.c"
        ],
        "crypto/ec/curve448/libfips-lib-eddsa.o" => [
            "crypto/ec/curve448/eddsa.c"
        ],
        "crypto/ec/curve448/libfips-lib-f_generic.o" => [
            "crypto/ec/curve448/f_generic.c"
        ],
        "crypto/ec/curve448/libfips-lib-scalar.o" => [
            "crypto/ec/curve448/scalar.c"
        ],
        "crypto/ec/libcrypto-lib-curve25519.o" => [
            "crypto/ec/curve25519.c"
        ],
        "crypto/ec/libcrypto-lib-ec2_oct.o" => [
            "crypto/ec/ec2_oct.c"
        ],
        "crypto/ec/libcrypto-lib-ec2_smpl.o" => [
            "crypto/ec/ec2_smpl.c"
        ],
        "crypto/ec/libcrypto-lib-ec_ameth.o" => [
            "crypto/ec/ec_ameth.c"
        ],
        "crypto/ec/libcrypto-lib-ec_asn1.o" => [
            "crypto/ec/ec_asn1.c"
        ],
        "crypto/ec/libcrypto-lib-ec_backend.o" => [
            "crypto/ec/ec_backend.c"
        ],
        "crypto/ec/libcrypto-lib-ec_check.o" => [
            "crypto/ec/ec_check.c"
        ],
        "crypto/ec/libcrypto-lib-ec_curve.o" => [
            "crypto/ec/ec_curve.c"
        ],
        "crypto/ec/libcrypto-lib-ec_cvt.o" => [
            "crypto/ec/ec_cvt.c"
        ],
        "crypto/ec/libcrypto-lib-ec_deprecated.o" => [
            "crypto/ec/ec_deprecated.c"
        ],
        "crypto/ec/libcrypto-lib-ec_err.o" => [
            "crypto/ec/ec_err.c"
        ],
        "crypto/ec/libcrypto-lib-ec_key.o" => [
            "crypto/ec/ec_key.c"
        ],
        "crypto/ec/libcrypto-lib-ec_kmeth.o" => [
            "crypto/ec/ec_kmeth.c"
        ],
        "crypto/ec/libcrypto-lib-ec_lib.o" => [
            "crypto/ec/ec_lib.c"
        ],
        "crypto/ec/libcrypto-lib-ec_mult.o" => [
            "crypto/ec/ec_mult.c"
        ],
        "crypto/ec/libcrypto-lib-ec_oct.o" => [
            "crypto/ec/ec_oct.c"
        ],
        "crypto/ec/libcrypto-lib-ec_pmeth.o" => [
            "crypto/ec/ec_pmeth.c"
        ],
        "crypto/ec/libcrypto-lib-ec_print.o" => [
            "crypto/ec/ec_print.c"
        ],
        "crypto/ec/libcrypto-lib-ecdh_kdf.o" => [
            "crypto/ec/ecdh_kdf.c"
        ],
        "crypto/ec/libcrypto-lib-ecdh_ossl.o" => [
            "crypto/ec/ecdh_ossl.c"
        ],
        "crypto/ec/libcrypto-lib-ecdsa_ossl.o" => [
            "crypto/ec/ecdsa_ossl.c"
        ],
        "crypto/ec/libcrypto-lib-ecdsa_sign.o" => [
            "crypto/ec/ecdsa_sign.c"
        ],
        "crypto/ec/libcrypto-lib-ecdsa_vrf.o" => [
            "crypto/ec/ecdsa_vrf.c"
        ],
        "crypto/ec/libcrypto-lib-eck_prn.o" => [
            "crypto/ec/eck_prn.c"
        ],
        "crypto/ec/libcrypto-lib-ecp_mont.o" => [
            "crypto/ec/ecp_mont.c"
        ],
        "crypto/ec/libcrypto-lib-ecp_nist.o" => [
            "crypto/ec/ecp_nist.c"
        ],
        "crypto/ec/libcrypto-lib-ecp_nistz256-x86_64.o" => [
            "crypto/ec/ecp_nistz256-x86_64.s"
        ],
        "crypto/ec/libcrypto-lib-ecp_nistz256.o" => [
            "crypto/ec/ecp_nistz256.c"
        ],
        "crypto/ec/libcrypto-lib-ecp_oct.o" => [
            "crypto/ec/ecp_oct.c"
        ],
        "crypto/ec/libcrypto-lib-ecp_smpl.o" => [
            "crypto/ec/ecp_smpl.c"
        ],
        "crypto/ec/libcrypto-lib-ecx_backend.o" => [
            "crypto/ec/ecx_backend.c"
        ],
        "crypto/ec/libcrypto-lib-ecx_key.o" => [
            "crypto/ec/ecx_key.c"
        ],
        "crypto/ec/libcrypto-lib-ecx_meth.o" => [
            "crypto/ec/ecx_meth.c"
        ],
        "crypto/ec/libcrypto-lib-x25519-x86_64.o" => [
            "crypto/ec/x25519-x86_64.s"
        ],
        "crypto/ec/libfips-lib-curve25519.o" => [
            "crypto/ec/curve25519.c"
        ],
        "crypto/ec/libfips-lib-ec2_oct.o" => [
            "crypto/ec/ec2_oct.c"
        ],
        "crypto/ec/libfips-lib-ec2_smpl.o" => [
            "crypto/ec/ec2_smpl.c"
        ],
        "crypto/ec/libfips-lib-ec_asn1.o" => [
            "crypto/ec/ec_asn1.c"
        ],
        "crypto/ec/libfips-lib-ec_backend.o" => [
            "crypto/ec/ec_backend.c"
        ],
        "crypto/ec/libfips-lib-ec_check.o" => [
            "crypto/ec/ec_check.c"
        ],
        "crypto/ec/libfips-lib-ec_curve.o" => [
            "crypto/ec/ec_curve.c"
        ],
        "crypto/ec/libfips-lib-ec_cvt.o" => [
            "crypto/ec/ec_cvt.c"
        ],
        "crypto/ec/libfips-lib-ec_key.o" => [
            "crypto/ec/ec_key.c"
        ],
        "crypto/ec/libfips-lib-ec_kmeth.o" => [
            "crypto/ec/ec_kmeth.c"
        ],
        "crypto/ec/libfips-lib-ec_lib.o" => [
            "crypto/ec/ec_lib.c"
        ],
        "crypto/ec/libfips-lib-ec_mult.o" => [
            "crypto/ec/ec_mult.c"
        ],
        "crypto/ec/libfips-lib-ec_oct.o" => [
            "crypto/ec/ec_oct.c"
        ],
        "crypto/ec/libfips-lib-ecdh_kdf.o" => [
            "crypto/ec/ecdh_kdf.c"
        ],
        "crypto/ec/libfips-lib-ecdh_ossl.o" => [
            "crypto/ec/ecdh_ossl.c"
        ],
        "crypto/ec/libfips-lib-ecdsa_ossl.o" => [
            "crypto/ec/ecdsa_ossl.c"
        ],
        "crypto/ec/libfips-lib-ecdsa_sign.o" => [
            "crypto/ec/ecdsa_sign.c"
        ],
        "crypto/ec/libfips-lib-ecdsa_vrf.o" => [
            "crypto/ec/ecdsa_vrf.c"
        ],
        "crypto/ec/libfips-lib-ecp_mont.o" => [
            "crypto/ec/ecp_mont.c"
        ],
        "crypto/ec/libfips-lib-ecp_nist.o" => [
            "crypto/ec/ecp_nist.c"
        ],
        "crypto/ec/libfips-lib-ecp_nistz256-x86_64.o" => [
            "crypto/ec/ecp_nistz256-x86_64.s"
        ],
        "crypto/ec/libfips-lib-ecp_nistz256.o" => [
            "crypto/ec/ecp_nistz256.c"
        ],
        "crypto/ec/libfips-lib-ecp_oct.o" => [
            "crypto/ec/ecp_oct.c"
        ],
        "crypto/ec/libfips-lib-ecp_smpl.o" => [
            "crypto/ec/ecp_smpl.c"
        ],
        "crypto/ec/libfips-lib-ecx_backend.o" => [
            "crypto/ec/ecx_backend.c"
        ],
        "crypto/ec/libfips-lib-ecx_key.o" => [
            "crypto/ec/ecx_key.c"
        ],
        "crypto/ec/libfips-lib-x25519-x86_64.o" => [
            "crypto/ec/x25519-x86_64.s"
        ],
        "crypto/encode_decode/libcrypto-lib-decoder_err.o" => [
            "crypto/encode_decode/decoder_err.c"
        ],
        "crypto/encode_decode/libcrypto-lib-decoder_lib.o" => [
            "crypto/encode_decode/decoder_lib.c"
        ],
        "crypto/encode_decode/libcrypto-lib-decoder_meth.o" => [
            "crypto/encode_decode/decoder_meth.c"
        ],
        "crypto/encode_decode/libcrypto-lib-decoder_pkey.o" => [
            "crypto/encode_decode/decoder_pkey.c"
        ],
        "crypto/encode_decode/libcrypto-lib-encoder_err.o" => [
            "crypto/encode_decode/encoder_err.c"
        ],
        "crypto/encode_decode/libcrypto-lib-encoder_lib.o" => [
            "crypto/encode_decode/encoder_lib.c"
        ],
        "crypto/encode_decode/libcrypto-lib-encoder_meth.o" => [
            "crypto/encode_decode/encoder_meth.c"
        ],
        "crypto/encode_decode/libcrypto-lib-encoder_pkey.o" => [
            "crypto/encode_decode/encoder_pkey.c"
        ],
        "crypto/engine/libcrypto-lib-eng_all.o" => [
            "crypto/engine/eng_all.c"
        ],
        "crypto/engine/libcrypto-lib-eng_cnf.o" => [
            "crypto/engine/eng_cnf.c"
        ],
        "crypto/engine/libcrypto-lib-eng_ctrl.o" => [
            "crypto/engine/eng_ctrl.c"
        ],
        "crypto/engine/libcrypto-lib-eng_dyn.o" => [
            "crypto/engine/eng_dyn.c"
        ],
        "crypto/engine/libcrypto-lib-eng_err.o" => [
            "crypto/engine/eng_err.c"
        ],
        "crypto/engine/libcrypto-lib-eng_fat.o" => [
            "crypto/engine/eng_fat.c"
        ],
        "crypto/engine/libcrypto-lib-eng_init.o" => [
            "crypto/engine/eng_init.c"
        ],
        "crypto/engine/libcrypto-lib-eng_lib.o" => [
            "crypto/engine/eng_lib.c"
        ],
        "crypto/engine/libcrypto-lib-eng_list.o" => [
            "crypto/engine/eng_list.c"
        ],
        "crypto/engine/libcrypto-lib-eng_openssl.o" => [
            "crypto/engine/eng_openssl.c"
        ],
        "crypto/engine/libcrypto-lib-eng_pkey.o" => [
            "crypto/engine/eng_pkey.c"
        ],
        "crypto/engine/libcrypto-lib-eng_rdrand.o" => [
            "crypto/engine/eng_rdrand.c"
        ],
        "crypto/engine/libcrypto-lib-eng_table.o" => [
            "crypto/engine/eng_table.c"
        ],
        "crypto/engine/libcrypto-lib-tb_asnmth.o" => [
            "crypto/engine/tb_asnmth.c"
        ],
        "crypto/engine/libcrypto-lib-tb_cipher.o" => [
            "crypto/engine/tb_cipher.c"
        ],
        "crypto/engine/libcrypto-lib-tb_dh.o" => [
            "crypto/engine/tb_dh.c"
        ],
        "crypto/engine/libcrypto-lib-tb_digest.o" => [
            "crypto/engine/tb_digest.c"
        ],
        "crypto/engine/libcrypto-lib-tb_dsa.o" => [
            "crypto/engine/tb_dsa.c"
        ],
        "crypto/engine/libcrypto-lib-tb_eckey.o" => [
            "crypto/engine/tb_eckey.c"
        ],
        "crypto/engine/libcrypto-lib-tb_pkmeth.o" => [
            "crypto/engine/tb_pkmeth.c"
        ],
        "crypto/engine/libcrypto-lib-tb_rand.o" => [
            "crypto/engine/tb_rand.c"
        ],
        "crypto/engine/libcrypto-lib-tb_rsa.o" => [
            "crypto/engine/tb_rsa.c"
        ],
        "crypto/err/libcrypto-lib-err.o" => [
            "crypto/err/err.c"
        ],
        "crypto/err/libcrypto-lib-err_all.o" => [
            "crypto/err/err_all.c"
        ],
        "crypto/err/libcrypto-lib-err_all_legacy.o" => [
            "crypto/err/err_all_legacy.c"
        ],
        "crypto/err/libcrypto-lib-err_blocks.o" => [
            "crypto/err/err_blocks.c"
        ],
        "crypto/err/libcrypto-lib-err_prn.o" => [
            "crypto/err/err_prn.c"
        ],
        "crypto/ess/libcrypto-lib-ess_asn1.o" => [
            "crypto/ess/ess_asn1.c"
        ],
        "crypto/ess/libcrypto-lib-ess_err.o" => [
            "crypto/ess/ess_err.c"
        ],
        "crypto/ess/libcrypto-lib-ess_lib.o" => [
            "crypto/ess/ess_lib.c"
        ],
        "crypto/evp/libcrypto-lib-asymcipher.o" => [
            "crypto/evp/asymcipher.c"
        ],
        "crypto/evp/libcrypto-lib-bio_b64.o" => [
            "crypto/evp/bio_b64.c"
        ],
        "crypto/evp/libcrypto-lib-bio_enc.o" => [
            "crypto/evp/bio_enc.c"
        ],
        "crypto/evp/libcrypto-lib-bio_md.o" => [
            "crypto/evp/bio_md.c"
        ],
        "crypto/evp/libcrypto-lib-bio_ok.o" => [
            "crypto/evp/bio_ok.c"
        ],
        "crypto/evp/libcrypto-lib-c_allc.o" => [
            "crypto/evp/c_allc.c"
        ],
        "crypto/evp/libcrypto-lib-c_alld.o" => [
            "crypto/evp/c_alld.c"
        ],
        "crypto/evp/libcrypto-lib-cmeth_lib.o" => [
            "crypto/evp/cmeth_lib.c"
        ],
        "crypto/evp/libcrypto-lib-ctrl_params_translate.o" => [
            "crypto/evp/ctrl_params_translate.c"
        ],
        "crypto/evp/libcrypto-lib-dh_ctrl.o" => [
            "crypto/evp/dh_ctrl.c"
        ],
        "crypto/evp/libcrypto-lib-dh_support.o" => [
            "crypto/evp/dh_support.c"
        ],
        "crypto/evp/libcrypto-lib-digest.o" => [
            "crypto/evp/digest.c"
        ],
        "crypto/evp/libcrypto-lib-dsa_ctrl.o" => [
            "crypto/evp/dsa_ctrl.c"
        ],
        "crypto/evp/libcrypto-lib-e_aes.o" => [
            "crypto/evp/e_aes.c"
        ],
        "crypto/evp/libcrypto-lib-e_aes_cbc_hmac_sha1.o" => [
            "crypto/evp/e_aes_cbc_hmac_sha1.c"
        ],
        "crypto/evp/libcrypto-lib-e_aes_cbc_hmac_sha256.o" => [
            "crypto/evp/e_aes_cbc_hmac_sha256.c"
        ],
        "crypto/evp/libcrypto-lib-e_aria.o" => [
            "crypto/evp/e_aria.c"
        ],
        "crypto/evp/libcrypto-lib-e_bf.o" => [
            "crypto/evp/e_bf.c"
        ],
        "crypto/evp/libcrypto-lib-e_camellia.o" => [
            "crypto/evp/e_camellia.c"
        ],
        "crypto/evp/libcrypto-lib-e_cast.o" => [
            "crypto/evp/e_cast.c"
        ],
        "crypto/evp/libcrypto-lib-e_chacha20_poly1305.o" => [
            "crypto/evp/e_chacha20_poly1305.c"
        ],
        "crypto/evp/libcrypto-lib-e_des.o" => [
            "crypto/evp/e_des.c"
        ],
        "crypto/evp/libcrypto-lib-e_des3.o" => [
            "crypto/evp/e_des3.c"
        ],
        "crypto/evp/libcrypto-lib-e_idea.o" => [
            "crypto/evp/e_idea.c"
        ],
        "crypto/evp/libcrypto-lib-e_null.o" => [
            "crypto/evp/e_null.c"
        ],
        "crypto/evp/libcrypto-lib-e_old.o" => [
            "crypto/evp/e_old.c"
        ],
        "crypto/evp/libcrypto-lib-e_rc2.o" => [
            "crypto/evp/e_rc2.c"
        ],
        "crypto/evp/libcrypto-lib-e_rc4.o" => [
            "crypto/evp/e_rc4.c"
        ],
        "crypto/evp/libcrypto-lib-e_rc4_hmac_md5.o" => [
            "crypto/evp/e_rc4_hmac_md5.c"
        ],
        "crypto/evp/libcrypto-lib-e_rc5.o" => [
            "crypto/evp/e_rc5.c"
        ],
        "crypto/evp/libcrypto-lib-e_seed.o" => [
            "crypto/evp/e_seed.c"
        ],
        "crypto/evp/libcrypto-lib-e_sm4.o" => [
            "crypto/evp/e_sm4.c"
        ],
        "crypto/evp/libcrypto-lib-e_xcbc_d.o" => [
            "crypto/evp/e_xcbc_d.c"
        ],
        "crypto/evp/libcrypto-lib-ec_ctrl.o" => [
            "crypto/evp/ec_ctrl.c"
        ],
        "crypto/evp/libcrypto-lib-ec_support.o" => [
            "crypto/evp/ec_support.c"
        ],
        "crypto/evp/libcrypto-lib-encode.o" => [
            "crypto/evp/encode.c"
        ],
        "crypto/evp/libcrypto-lib-evp_cnf.o" => [
            "crypto/evp/evp_cnf.c"
        ],
        "crypto/evp/libcrypto-lib-evp_enc.o" => [
            "crypto/evp/evp_enc.c"
        ],
        "crypto/evp/libcrypto-lib-evp_err.o" => [
            "crypto/evp/evp_err.c"
        ],
        "crypto/evp/libcrypto-lib-evp_fetch.o" => [
            "crypto/evp/evp_fetch.c"
        ],
        "crypto/evp/libcrypto-lib-evp_key.o" => [
            "crypto/evp/evp_key.c"
        ],
        "crypto/evp/libcrypto-lib-evp_lib.o" => [
            "crypto/evp/evp_lib.c"
        ],
        "crypto/evp/libcrypto-lib-evp_pbe.o" => [
            "crypto/evp/evp_pbe.c"
        ],
        "crypto/evp/libcrypto-lib-evp_pkey.o" => [
            "crypto/evp/evp_pkey.c"
        ],
        "crypto/evp/libcrypto-lib-evp_rand.o" => [
            "crypto/evp/evp_rand.c"
        ],
        "crypto/evp/libcrypto-lib-evp_utils.o" => [
            "crypto/evp/evp_utils.c"
        ],
        "crypto/evp/libcrypto-lib-exchange.o" => [
            "crypto/evp/exchange.c"
        ],
        "crypto/evp/libcrypto-lib-kdf_lib.o" => [
            "crypto/evp/kdf_lib.c"
        ],
        "crypto/evp/libcrypto-lib-kdf_meth.o" => [
            "crypto/evp/kdf_meth.c"
        ],
        "crypto/evp/libcrypto-lib-kem.o" => [
            "crypto/evp/kem.c"
        ],
        "crypto/evp/libcrypto-lib-keymgmt_lib.o" => [
            "crypto/evp/keymgmt_lib.c"
        ],
        "crypto/evp/libcrypto-lib-keymgmt_meth.o" => [
            "crypto/evp/keymgmt_meth.c"
        ],
        "crypto/evp/libcrypto-lib-legacy_blake2.o" => [
            "crypto/evp/legacy_blake2.c"
        ],
        "crypto/evp/libcrypto-lib-legacy_md4.o" => [
            "crypto/evp/legacy_md4.c"
        ],
        "crypto/evp/libcrypto-lib-legacy_md5.o" => [
            "crypto/evp/legacy_md5.c"
        ],
        "crypto/evp/libcrypto-lib-legacy_md5_sha1.o" => [
            "crypto/evp/legacy_md5_sha1.c"
        ],
        "crypto/evp/libcrypto-lib-legacy_mdc2.o" => [
            "crypto/evp/legacy_mdc2.c"
        ],
        "crypto/evp/libcrypto-lib-legacy_ripemd.o" => [
            "crypto/evp/legacy_ripemd.c"
        ],
        "crypto/evp/libcrypto-lib-legacy_sha.o" => [
            "crypto/evp/legacy_sha.c"
        ],
        "crypto/evp/libcrypto-lib-legacy_wp.o" => [
            "crypto/evp/legacy_wp.c"
        ],
        "crypto/evp/libcrypto-lib-m_null.o" => [
            "crypto/evp/m_null.c"
        ],
        "crypto/evp/libcrypto-lib-m_sigver.o" => [
            "crypto/evp/m_sigver.c"
        ],
        "crypto/evp/libcrypto-lib-mac_lib.o" => [
            "crypto/evp/mac_lib.c"
        ],
        "crypto/evp/libcrypto-lib-mac_meth.o" => [
            "crypto/evp/mac_meth.c"
        ],
        "crypto/evp/libcrypto-lib-names.o" => [
            "crypto/evp/names.c"
        ],
        "crypto/evp/libcrypto-lib-p5_crpt.o" => [
            "crypto/evp/p5_crpt.c"
        ],
        "crypto/evp/libcrypto-lib-p5_crpt2.o" => [
            "crypto/evp/p5_crpt2.c"
        ],
        "crypto/evp/libcrypto-lib-p_dec.o" => [
            "crypto/evp/p_dec.c"
        ],
        "crypto/evp/libcrypto-lib-p_enc.o" => [
            "crypto/evp/p_enc.c"
        ],
        "crypto/evp/libcrypto-lib-p_legacy.o" => [
            "crypto/evp/p_legacy.c"
        ],
        "crypto/evp/libcrypto-lib-p_lib.o" => [
            "crypto/evp/p_lib.c"
        ],
        "crypto/evp/libcrypto-lib-p_open.o" => [
            "crypto/evp/p_open.c"
        ],
        "crypto/evp/libcrypto-lib-p_seal.o" => [
            "crypto/evp/p_seal.c"
        ],
        "crypto/evp/libcrypto-lib-p_sign.o" => [
            "crypto/evp/p_sign.c"
        ],
        "crypto/evp/libcrypto-lib-p_verify.o" => [
            "crypto/evp/p_verify.c"
        ],
        "crypto/evp/libcrypto-lib-pbe_scrypt.o" => [
            "crypto/evp/pbe_scrypt.c"
        ],
        "crypto/evp/libcrypto-lib-pmeth_check.o" => [
            "crypto/evp/pmeth_check.c"
        ],
        "crypto/evp/libcrypto-lib-pmeth_gn.o" => [
            "crypto/evp/pmeth_gn.c"
        ],
        "crypto/evp/libcrypto-lib-pmeth_lib.o" => [
            "crypto/evp/pmeth_lib.c"
        ],
        "crypto/evp/libcrypto-lib-signature.o" => [
            "crypto/evp/signature.c"
        ],
        "crypto/evp/libfips-lib-asymcipher.o" => [
            "crypto/evp/asymcipher.c"
        ],
        "crypto/evp/libfips-lib-dh_support.o" => [
            "crypto/evp/dh_support.c"
        ],
        "crypto/evp/libfips-lib-digest.o" => [
            "crypto/evp/digest.c"
        ],
        "crypto/evp/libfips-lib-ec_support.o" => [
            "crypto/evp/ec_support.c"
        ],
        "crypto/evp/libfips-lib-evp_enc.o" => [
            "crypto/evp/evp_enc.c"
        ],
        "crypto/evp/libfips-lib-evp_fetch.o" => [
            "crypto/evp/evp_fetch.c"
        ],
        "crypto/evp/libfips-lib-evp_lib.o" => [
            "crypto/evp/evp_lib.c"
        ],
        "crypto/evp/libfips-lib-evp_rand.o" => [
            "crypto/evp/evp_rand.c"
        ],
        "crypto/evp/libfips-lib-evp_utils.o" => [
            "crypto/evp/evp_utils.c"
        ],
        "crypto/evp/libfips-lib-exchange.o" => [
            "crypto/evp/exchange.c"
        ],
        "crypto/evp/libfips-lib-kdf_lib.o" => [
            "crypto/evp/kdf_lib.c"
        ],
        "crypto/evp/libfips-lib-kdf_meth.o" => [
            "crypto/evp/kdf_meth.c"
        ],
        "crypto/evp/libfips-lib-kem.o" => [
            "crypto/evp/kem.c"
        ],
        "crypto/evp/libfips-lib-keymgmt_lib.o" => [
            "crypto/evp/keymgmt_lib.c"
        ],
        "crypto/evp/libfips-lib-keymgmt_meth.o" => [
            "crypto/evp/keymgmt_meth.c"
        ],
        "crypto/evp/libfips-lib-m_sigver.o" => [
            "crypto/evp/m_sigver.c"
        ],
        "crypto/evp/libfips-lib-mac_lib.o" => [
            "crypto/evp/mac_lib.c"
        ],
        "crypto/evp/libfips-lib-mac_meth.o" => [
            "crypto/evp/mac_meth.c"
        ],
        "crypto/evp/libfips-lib-p_lib.o" => [
            "crypto/evp/p_lib.c"
        ],
        "crypto/evp/libfips-lib-pmeth_check.o" => [
            "crypto/evp/pmeth_check.c"
        ],
        "crypto/evp/libfips-lib-pmeth_gn.o" => [
            "crypto/evp/pmeth_gn.c"
        ],
        "crypto/evp/libfips-lib-pmeth_lib.o" => [
            "crypto/evp/pmeth_lib.c"
        ],
        "crypto/evp/libfips-lib-signature.o" => [
            "crypto/evp/signature.c"
        ],
        "crypto/ffc/libcrypto-lib-ffc_backend.o" => [
            "crypto/ffc/ffc_backend.c"
        ],
        "crypto/ffc/libcrypto-lib-ffc_dh.o" => [
            "crypto/ffc/ffc_dh.c"
        ],
        "crypto/ffc/libcrypto-lib-ffc_key_generate.o" => [
            "crypto/ffc/ffc_key_generate.c"
        ],
        "crypto/ffc/libcrypto-lib-ffc_key_validate.o" => [
            "crypto/ffc/ffc_key_validate.c"
        ],
        "crypto/ffc/libcrypto-lib-ffc_params.o" => [
            "crypto/ffc/ffc_params.c"
        ],
        "crypto/ffc/libcrypto-lib-ffc_params_generate.o" => [
            "crypto/ffc/ffc_params_generate.c"
        ],
        "crypto/ffc/libcrypto-lib-ffc_params_validate.o" => [
            "crypto/ffc/ffc_params_validate.c"
        ],
        "crypto/ffc/libfips-lib-ffc_backend.o" => [
            "crypto/ffc/ffc_backend.c"
        ],
        "crypto/ffc/libfips-lib-ffc_dh.o" => [
            "crypto/ffc/ffc_dh.c"
        ],
        "crypto/ffc/libfips-lib-ffc_key_generate.o" => [
            "crypto/ffc/ffc_key_generate.c"
        ],
        "crypto/ffc/libfips-lib-ffc_key_validate.o" => [
            "crypto/ffc/ffc_key_validate.c"
        ],
        "crypto/ffc/libfips-lib-ffc_params.o" => [
            "crypto/ffc/ffc_params.c"
        ],
        "crypto/ffc/libfips-lib-ffc_params_generate.o" => [
            "crypto/ffc/ffc_params_generate.c"
        ],
        "crypto/ffc/libfips-lib-ffc_params_validate.o" => [
            "crypto/ffc/ffc_params_validate.c"
        ],
        "crypto/hmac/libcrypto-lib-hmac.o" => [
            "crypto/hmac/hmac.c"
        ],
        "crypto/hmac/libfips-lib-hmac.o" => [
            "crypto/hmac/hmac.c"
        ],
        "crypto/http/libcrypto-lib-http_client.o" => [
            "crypto/http/http_client.c"
        ],
        "crypto/http/libcrypto-lib-http_err.o" => [
            "crypto/http/http_err.c"
        ],
        "crypto/http/libcrypto-lib-http_lib.o" => [
            "crypto/http/http_lib.c"
        ],
        "crypto/idea/libcrypto-lib-i_cbc.o" => [
            "crypto/idea/i_cbc.c"
        ],
        "crypto/idea/libcrypto-lib-i_cfb64.o" => [
            "crypto/idea/i_cfb64.c"
        ],
        "crypto/idea/libcrypto-lib-i_ecb.o" => [
            "crypto/idea/i_ecb.c"
        ],
        "crypto/idea/libcrypto-lib-i_ofb64.o" => [
            "crypto/idea/i_ofb64.c"
        ],
        "crypto/idea/libcrypto-lib-i_skey.o" => [
            "crypto/idea/i_skey.c"
        ],
        "crypto/kdf/libcrypto-lib-kdf_err.o" => [
            "crypto/kdf/kdf_err.c"
        ],
        "crypto/lhash/libcrypto-lib-lh_stats.o" => [
            "crypto/lhash/lh_stats.c"
        ],
        "crypto/lhash/libcrypto-lib-lhash.o" => [
            "crypto/lhash/lhash.c"
        ],
        "crypto/lhash/libfips-lib-lhash.o" => [
            "crypto/lhash/lhash.c"
        ],
        "crypto/libcrypto-lib-asn1_dsa.o" => [
            "crypto/asn1_dsa.c"
        ],
        "crypto/libcrypto-lib-bsearch.o" => [
            "crypto/bsearch.c"
        ],
        "crypto/libcrypto-lib-context.o" => [
            "crypto/context.c"
        ],
        "crypto/libcrypto-lib-core_algorithm.o" => [
            "crypto/core_algorithm.c"
        ],
        "crypto/libcrypto-lib-core_fetch.o" => [
            "crypto/core_fetch.c"
        ],
        "crypto/libcrypto-lib-core_namemap.o" => [
            "crypto/core_namemap.c"
        ],
        "crypto/libcrypto-lib-cpt_err.o" => [
            "crypto/cpt_err.c"
        ],
        "crypto/libcrypto-lib-cpuid.o" => [
            "crypto/cpuid.c"
        ],
        "crypto/libcrypto-lib-cryptlib.o" => [
            "crypto/cryptlib.c"
        ],
        "crypto/libcrypto-lib-ctype.o" => [
            "crypto/ctype.c"
        ],
        "crypto/libcrypto-lib-cversion.o" => [
            "crypto/cversion.c"
        ],
        "crypto/libcrypto-lib-der_writer.o" => [
            "crypto/der_writer.c"
        ],
        "crypto/libcrypto-lib-ebcdic.o" => [
            "crypto/ebcdic.c"
        ],
        "crypto/libcrypto-lib-ex_data.o" => [
            "crypto/ex_data.c"
        ],
        "crypto/libcrypto-lib-getenv.o" => [
            "crypto/getenv.c"
        ],
        "crypto/libcrypto-lib-info.o" => [
            "crypto/info.c"
        ],
        "crypto/libcrypto-lib-init.o" => [
            "crypto/init.c"
        ],
        "crypto/libcrypto-lib-initthread.o" => [
            "crypto/initthread.c"
        ],
        "crypto/libcrypto-lib-mem.o" => [
            "crypto/mem.c"
        ],
        "crypto/libcrypto-lib-mem_sec.o" => [
            "crypto/mem_sec.c"
        ],
        "crypto/libcrypto-lib-o_dir.o" => [
            "crypto/o_dir.c"
        ],
        "crypto/libcrypto-lib-o_fopen.o" => [
            "crypto/o_fopen.c"
        ],
        "crypto/libcrypto-lib-o_init.o" => [
            "crypto/o_init.c"
        ],
        "crypto/libcrypto-lib-o_str.o" => [
            "crypto/o_str.c"
        ],
        "crypto/libcrypto-lib-o_time.o" => [
            "crypto/o_time.c"
        ],
        "crypto/libcrypto-lib-packet.o" => [
            "crypto/packet.c"
        ],
        "crypto/libcrypto-lib-param_build.o" => [
            "crypto/param_build.c"
        ],
        "crypto/libcrypto-lib-param_build_set.o" => [
            "crypto/param_build_set.c"
        ],
        "crypto/libcrypto-lib-params.o" => [
            "crypto/params.c"
        ],
        "crypto/libcrypto-lib-params_dup.o" => [
            "crypto/params_dup.c"
        ],
        "crypto/libcrypto-lib-params_from_text.o" => [
            "crypto/params_from_text.c"
        ],
        "crypto/libcrypto-lib-passphrase.o" => [
            "crypto/passphrase.c"
        ],
        "crypto/libcrypto-lib-provider.o" => [
            "crypto/provider.c"
        ],
        "crypto/libcrypto-lib-provider_child.o" => [
            "crypto/provider_child.c"
        ],
        "crypto/libcrypto-lib-provider_conf.o" => [
            "crypto/provider_conf.c"
        ],
        "crypto/libcrypto-lib-provider_core.o" => [
            "crypto/provider_core.c"
        ],
        "crypto/libcrypto-lib-provider_predefined.o" => [
            "crypto/provider_predefined.c"
        ],
        "crypto/libcrypto-lib-punycode.o" => [
            "crypto/punycode.c"
        ],
        "crypto/libcrypto-lib-self_test_core.o" => [
            "crypto/self_test_core.c"
        ],
        "crypto/libcrypto-lib-sparse_array.o" => [
            "crypto/sparse_array.c"
        ],
        "crypto/libcrypto-lib-threads_lib.o" => [
            "crypto/threads_lib.c"
        ],
        "crypto/libcrypto-lib-threads_none.o" => [
            "crypto/threads_none.c"
        ],
        "crypto/libcrypto-lib-threads_pthread.o" => [
            "crypto/threads_pthread.c"
        ],
        "crypto/libcrypto-lib-threads_win.o" => [
            "crypto/threads_win.c"
        ],
        "crypto/libcrypto-lib-trace.o" => [
            "crypto/trace.c"
        ],
        "crypto/libcrypto-lib-uid.o" => [
            "crypto/uid.c"
        ],
        "crypto/libcrypto-lib-x86_64cpuid.o" => [
            "crypto/x86_64cpuid.s"
        ],
        "crypto/libfips-lib-asn1_dsa.o" => [
            "crypto/asn1_dsa.c"
        ],
        "crypto/libfips-lib-bsearch.o" => [
            "crypto/bsearch.c"
        ],
        "crypto/libfips-lib-context.o" => [
            "crypto/context.c"
        ],
        "crypto/libfips-lib-core_algorithm.o" => [
            "crypto/core_algorithm.c"
        ],
        "crypto/libfips-lib-core_fetch.o" => [
            "crypto/core_fetch.c"
        ],
        "crypto/libfips-lib-core_namemap.o" => [
            "crypto/core_namemap.c"
        ],
        "crypto/libfips-lib-cpuid.o" => [
            "crypto/cpuid.c"
        ],
        "crypto/libfips-lib-cryptlib.o" => [
            "crypto/cryptlib.c"
        ],
        "crypto/libfips-lib-ctype.o" => [
            "crypto/ctype.c"
        ],
        "crypto/libfips-lib-der_writer.o" => [
            "crypto/der_writer.c"
        ],
        "crypto/libfips-lib-ex_data.o" => [
            "crypto/ex_data.c"
        ],
        "crypto/libfips-lib-initthread.o" => [
            "crypto/initthread.c"
        ],
        "crypto/libfips-lib-o_str.o" => [
            "crypto/o_str.c"
        ],
        "crypto/libfips-lib-packet.o" => [
            "crypto/packet.c"
        ],
        "crypto/libfips-lib-param_build.o" => [
            "crypto/param_build.c"
        ],
        "crypto/libfips-lib-param_build_set.o" => [
            "crypto/param_build_set.c"
        ],
        "crypto/libfips-lib-params.o" => [
            "crypto/params.c"
        ],
        "crypto/libfips-lib-params_dup.o" => [
            "crypto/params_dup.c"
        ],
        "crypto/libfips-lib-params_from_text.o" => [
            "crypto/params_from_text.c"
        ],
        "crypto/libfips-lib-provider_core.o" => [
            "crypto/provider_core.c"
        ],
        "crypto/libfips-lib-provider_predefined.o" => [
            "crypto/provider_predefined.c"
        ],
        "crypto/libfips-lib-self_test_core.o" => [
            "crypto/self_test_core.c"
        ],
        "crypto/libfips-lib-sparse_array.o" => [
            "crypto/sparse_array.c"
        ],
        "crypto/libfips-lib-threads_lib.o" => [
            "crypto/threads_lib.c"
        ],
        "crypto/libfips-lib-threads_none.o" => [
            "crypto/threads_none.c"
        ],
        "crypto/libfips-lib-threads_pthread.o" => [
            "crypto/threads_pthread.c"
        ],
        "crypto/libfips-lib-threads_win.o" => [
            "crypto/threads_win.c"
        ],
        "crypto/libfips-lib-x86_64cpuid.o" => [
            "crypto/x86_64cpuid.s"
        ],
        "crypto/md4/libcrypto-lib-md4_dgst.o" => [
            "crypto/md4/md4_dgst.c"
        ],
        "crypto/md4/libcrypto-lib-md4_one.o" => [
            "crypto/md4/md4_one.c"
        ],
        "crypto/md5/libcrypto-lib-md5-x86_64.o" => [
            "crypto/md5/md5-x86_64.s"
        ],
        "crypto/md5/libcrypto-lib-md5_dgst.o" => [
            "crypto/md5/md5_dgst.c"
        ],
        "crypto/md5/libcrypto-lib-md5_one.o" => [
            "crypto/md5/md5_one.c"
        ],
        "crypto/md5/libcrypto-lib-md5_sha1.o" => [
            "crypto/md5/md5_sha1.c"
        ],
        "crypto/mdc2/libcrypto-lib-mdc2_one.o" => [
            "crypto/mdc2/mdc2_one.c"
        ],
        "crypto/mdc2/libcrypto-lib-mdc2dgst.o" => [
            "crypto/mdc2/mdc2dgst.c"
        ],
        "crypto/modes/libcrypto-lib-aesni-gcm-x86_64.o" => [
            "crypto/modes/aesni-gcm-x86_64.s"
        ],
        "crypto/modes/libcrypto-lib-cbc128.o" => [
            "crypto/modes/cbc128.c"
        ],
        "crypto/modes/libcrypto-lib-ccm128.o" => [
            "crypto/modes/ccm128.c"
        ],
        "crypto/modes/libcrypto-lib-cfb128.o" => [
            "crypto/modes/cfb128.c"
        ],
        "crypto/modes/libcrypto-lib-ctr128.o" => [
            "crypto/modes/ctr128.c"
        ],
        "crypto/modes/libcrypto-lib-cts128.o" => [
            "crypto/modes/cts128.c"
        ],
        "crypto/modes/libcrypto-lib-gcm128.o" => [
            "crypto/modes/gcm128.c"
        ],
        "crypto/modes/libcrypto-lib-ghash-x86_64.o" => [
            "crypto/modes/ghash-x86_64.s"
        ],
        "crypto/modes/libcrypto-lib-ocb128.o" => [
            "crypto/modes/ocb128.c"
        ],
        "crypto/modes/libcrypto-lib-ofb128.o" => [
            "crypto/modes/ofb128.c"
        ],
        "crypto/modes/libcrypto-lib-siv128.o" => [
            "crypto/modes/siv128.c"
        ],
        "crypto/modes/libcrypto-lib-wrap128.o" => [
            "crypto/modes/wrap128.c"
        ],
        "crypto/modes/libcrypto-lib-xts128.o" => [
            "crypto/modes/xts128.c"
        ],
        "crypto/modes/libfips-lib-aesni-gcm-x86_64.o" => [
            "crypto/modes/aesni-gcm-x86_64.s"
        ],
        "crypto/modes/libfips-lib-cbc128.o" => [
            "crypto/modes/cbc128.c"
        ],
        "crypto/modes/libfips-lib-ccm128.o" => [
            "crypto/modes/ccm128.c"
        ],
        "crypto/modes/libfips-lib-cfb128.o" => [
            "crypto/modes/cfb128.c"
        ],
        "crypto/modes/libfips-lib-ctr128.o" => [
            "crypto/modes/ctr128.c"
        ],
        "crypto/modes/libfips-lib-gcm128.o" => [
            "crypto/modes/gcm128.c"
        ],
        "crypto/modes/libfips-lib-ghash-x86_64.o" => [
            "crypto/modes/ghash-x86_64.s"
        ],
        "crypto/modes/libfips-lib-ofb128.o" => [
            "crypto/modes/ofb128.c"
        ],
        "crypto/modes/libfips-lib-wrap128.o" => [
            "crypto/modes/wrap128.c"
        ],
        "crypto/modes/libfips-lib-xts128.o" => [
            "crypto/modes/xts128.c"
        ],
        "crypto/objects/libcrypto-lib-o_names.o" => [
            "crypto/objects/o_names.c"
        ],
        "crypto/objects/libcrypto-lib-obj_dat.o" => [
            "crypto/objects/obj_dat.c"
        ],
        "crypto/objects/libcrypto-lib-obj_err.o" => [
            "crypto/objects/obj_err.c"
        ],
        "crypto/objects/libcrypto-lib-obj_lib.o" => [
            "crypto/objects/obj_lib.c"
        ],
        "crypto/objects/libcrypto-lib-obj_xref.o" => [
            "crypto/objects/obj_xref.c"
        ],
        "crypto/ocsp/libcrypto-lib-ocsp_asn.o" => [
            "crypto/ocsp/ocsp_asn.c"
        ],
        "crypto/ocsp/libcrypto-lib-ocsp_cl.o" => [
            "crypto/ocsp/ocsp_cl.c"
        ],
        "crypto/ocsp/libcrypto-lib-ocsp_err.o" => [
            "crypto/ocsp/ocsp_err.c"
        ],
        "crypto/ocsp/libcrypto-lib-ocsp_ext.o" => [
            "crypto/ocsp/ocsp_ext.c"
        ],
        "crypto/ocsp/libcrypto-lib-ocsp_http.o" => [
            "crypto/ocsp/ocsp_http.c"
        ],
        "crypto/ocsp/libcrypto-lib-ocsp_lib.o" => [
            "crypto/ocsp/ocsp_lib.c"
        ],
        "crypto/ocsp/libcrypto-lib-ocsp_prn.o" => [
            "crypto/ocsp/ocsp_prn.c"
        ],
        "crypto/ocsp/libcrypto-lib-ocsp_srv.o" => [
            "crypto/ocsp/ocsp_srv.c"
        ],
        "crypto/ocsp/libcrypto-lib-ocsp_vfy.o" => [
            "crypto/ocsp/ocsp_vfy.c"
        ],
        "crypto/ocsp/libcrypto-lib-v3_ocsp.o" => [
            "crypto/ocsp/v3_ocsp.c"
        ],
        "crypto/pem/libcrypto-lib-pem_all.o" => [
            "crypto/pem/pem_all.c"
        ],
        "crypto/pem/libcrypto-lib-pem_err.o" => [
            "crypto/pem/pem_err.c"
        ],
        "crypto/pem/libcrypto-lib-pem_info.o" => [
            "crypto/pem/pem_info.c"
        ],
        "crypto/pem/libcrypto-lib-pem_lib.o" => [
            "crypto/pem/pem_lib.c"
        ],
        "crypto/pem/libcrypto-lib-pem_oth.o" => [
            "crypto/pem/pem_oth.c"
        ],
        "crypto/pem/libcrypto-lib-pem_pk8.o" => [
            "crypto/pem/pem_pk8.c"
        ],
        "crypto/pem/libcrypto-lib-pem_pkey.o" => [
            "crypto/pem/pem_pkey.c"
        ],
        "crypto/pem/libcrypto-lib-pem_sign.o" => [
            "crypto/pem/pem_sign.c"
        ],
        "crypto/pem/libcrypto-lib-pem_x509.o" => [
            "crypto/pem/pem_x509.c"
        ],
        "crypto/pem/libcrypto-lib-pem_xaux.o" => [
            "crypto/pem/pem_xaux.c"
        ],
        "crypto/pem/libcrypto-lib-pvkfmt.o" => [
            "crypto/pem/pvkfmt.c"
        ],
        "crypto/pkcs12/libcrypto-lib-p12_add.o" => [
            "crypto/pkcs12/p12_add.c"
        ],
        "crypto/pkcs12/libcrypto-lib-p12_asn.o" => [
            "crypto/pkcs12/p12_asn.c"
        ],
        "crypto/pkcs12/libcrypto-lib-p12_attr.o" => [
            "crypto/pkcs12/p12_attr.c"
        ],
        "crypto/pkcs12/libcrypto-lib-p12_crpt.o" => [
            "crypto/pkcs12/p12_crpt.c"
        ],
        "crypto/pkcs12/libcrypto-lib-p12_crt.o" => [
            "crypto/pkcs12/p12_crt.c"
        ],
        "crypto/pkcs12/libcrypto-lib-p12_decr.o" => [
            "crypto/pkcs12/p12_decr.c"
        ],
        "crypto/pkcs12/libcrypto-lib-p12_init.o" => [
            "crypto/pkcs12/p12_init.c"
        ],
        "crypto/pkcs12/libcrypto-lib-p12_key.o" => [
            "crypto/pkcs12/p12_key.c"
        ],
        "crypto/pkcs12/libcrypto-lib-p12_kiss.o" => [
            "crypto/pkcs12/p12_kiss.c"
        ],
        "crypto/pkcs12/libcrypto-lib-p12_mutl.o" => [
            "crypto/pkcs12/p12_mutl.c"
        ],
        "crypto/pkcs12/libcrypto-lib-p12_npas.o" => [
            "crypto/pkcs12/p12_npas.c"
        ],
        "crypto/pkcs12/libcrypto-lib-p12_p8d.o" => [
            "crypto/pkcs12/p12_p8d.c"
        ],
        "crypto/pkcs12/libcrypto-lib-p12_p8e.o" => [
            "crypto/pkcs12/p12_p8e.c"
        ],
        "crypto/pkcs12/libcrypto-lib-p12_sbag.o" => [
            "crypto/pkcs12/p12_sbag.c"
        ],
        "crypto/pkcs12/libcrypto-lib-p12_utl.o" => [
            "crypto/pkcs12/p12_utl.c"
        ],
        "crypto/pkcs12/libcrypto-lib-pk12err.o" => [
            "crypto/pkcs12/pk12err.c"
        ],
        "crypto/pkcs7/libcrypto-lib-bio_pk7.o" => [
            "crypto/pkcs7/bio_pk7.c"
        ],
        "crypto/pkcs7/libcrypto-lib-pk7_asn1.o" => [
            "crypto/pkcs7/pk7_asn1.c"
        ],
        "crypto/pkcs7/libcrypto-lib-pk7_attr.o" => [
            "crypto/pkcs7/pk7_attr.c"
        ],
        "crypto/pkcs7/libcrypto-lib-pk7_doit.o" => [
            "crypto/pkcs7/pk7_doit.c"
        ],
        "crypto/pkcs7/libcrypto-lib-pk7_lib.o" => [
            "crypto/pkcs7/pk7_lib.c"
        ],
        "crypto/pkcs7/libcrypto-lib-pk7_mime.o" => [
            "crypto/pkcs7/pk7_mime.c"
        ],
        "crypto/pkcs7/libcrypto-lib-pk7_smime.o" => [
            "crypto/pkcs7/pk7_smime.c"
        ],
        "crypto/pkcs7/libcrypto-lib-pkcs7err.o" => [
            "crypto/pkcs7/pkcs7err.c"
        ],
        "crypto/poly1305/libcrypto-lib-poly1305-x86_64.o" => [
            "crypto/poly1305/poly1305-x86_64.s"
        ],
        "crypto/poly1305/libcrypto-lib-poly1305.o" => [
            "crypto/poly1305/poly1305.c"
        ],
        "crypto/property/libcrypto-lib-defn_cache.o" => [
            "crypto/property/defn_cache.c"
        ],
        "crypto/property/libcrypto-lib-property.o" => [
            "crypto/property/property.c"
        ],
        "crypto/property/libcrypto-lib-property_err.o" => [
            "crypto/property/property_err.c"
        ],
        "crypto/property/libcrypto-lib-property_parse.o" => [
            "crypto/property/property_parse.c"
        ],
        "crypto/property/libcrypto-lib-property_query.o" => [
            "crypto/property/property_query.c"
        ],
        "crypto/property/libcrypto-lib-property_string.o" => [
            "crypto/property/property_string.c"
        ],
        "crypto/property/libfips-lib-defn_cache.o" => [
            "crypto/property/defn_cache.c"
        ],
        "crypto/property/libfips-lib-property.o" => [
            "crypto/property/property.c"
        ],
        "crypto/property/libfips-lib-property_parse.o" => [
            "crypto/property/property_parse.c"
        ],
        "crypto/property/libfips-lib-property_query.o" => [
            "crypto/property/property_query.c"
        ],
        "crypto/property/libfips-lib-property_string.o" => [
            "crypto/property/property_string.c"
        ],
        "crypto/rand/libcrypto-lib-prov_seed.o" => [
            "crypto/rand/prov_seed.c"
        ],
        "crypto/rand/libcrypto-lib-rand_deprecated.o" => [
            "crypto/rand/rand_deprecated.c"
        ],
        "crypto/rand/libcrypto-lib-rand_err.o" => [
            "crypto/rand/rand_err.c"
        ],
        "crypto/rand/libcrypto-lib-rand_lib.o" => [
            "crypto/rand/rand_lib.c"
        ],
        "crypto/rand/libcrypto-lib-rand_meth.o" => [
            "crypto/rand/rand_meth.c"
        ],
        "crypto/rand/libcrypto-lib-rand_pool.o" => [
            "crypto/rand/rand_pool.c"
        ],
        "crypto/rand/libcrypto-lib-randfile.o" => [
            "crypto/rand/randfile.c"
        ],
        "crypto/rand/libfips-lib-rand_lib.o" => [
            "crypto/rand/rand_lib.c"
        ],
        "crypto/rc2/libcrypto-lib-rc2_cbc.o" => [
            "crypto/rc2/rc2_cbc.c"
        ],
        "crypto/rc2/libcrypto-lib-rc2_ecb.o" => [
            "crypto/rc2/rc2_ecb.c"
        ],
        "crypto/rc2/libcrypto-lib-rc2_skey.o" => [
            "crypto/rc2/rc2_skey.c"
        ],
        "crypto/rc2/libcrypto-lib-rc2cfb64.o" => [
            "crypto/rc2/rc2cfb64.c"
        ],
        "crypto/rc2/libcrypto-lib-rc2ofb64.o" => [
            "crypto/rc2/rc2ofb64.c"
        ],
        "crypto/rc4/libcrypto-lib-rc4-md5-x86_64.o" => [
            "crypto/rc4/rc4-md5-x86_64.s"
        ],
        "crypto/rc4/libcrypto-lib-rc4-x86_64.o" => [
            "crypto/rc4/rc4-x86_64.s"
        ],
        "crypto/ripemd/libcrypto-lib-rmd_dgst.o" => [
            "crypto/ripemd/rmd_dgst.c"
        ],
        "crypto/ripemd/libcrypto-lib-rmd_one.o" => [
            "crypto/ripemd/rmd_one.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_ameth.o" => [
            "crypto/rsa/rsa_ameth.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_asn1.o" => [
            "crypto/rsa/rsa_asn1.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_backend.o" => [
            "crypto/rsa/rsa_backend.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_chk.o" => [
            "crypto/rsa/rsa_chk.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_crpt.o" => [
            "crypto/rsa/rsa_crpt.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_depr.o" => [
            "crypto/rsa/rsa_depr.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_err.o" => [
            "crypto/rsa/rsa_err.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_gen.o" => [
            "crypto/rsa/rsa_gen.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_lib.o" => [
            "crypto/rsa/rsa_lib.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_meth.o" => [
            "crypto/rsa/rsa_meth.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_mp.o" => [
            "crypto/rsa/rsa_mp.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_mp_names.o" => [
            "crypto/rsa/rsa_mp_names.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_none.o" => [
            "crypto/rsa/rsa_none.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_oaep.o" => [
            "crypto/rsa/rsa_oaep.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_ossl.o" => [
            "crypto/rsa/rsa_ossl.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_pk1.o" => [
            "crypto/rsa/rsa_pk1.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_pmeth.o" => [
            "crypto/rsa/rsa_pmeth.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_prn.o" => [
            "crypto/rsa/rsa_prn.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_pss.o" => [
            "crypto/rsa/rsa_pss.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_saos.o" => [
            "crypto/rsa/rsa_saos.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_schemes.o" => [
            "crypto/rsa/rsa_schemes.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_sign.o" => [
            "crypto/rsa/rsa_sign.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_sp800_56b_check.o" => [
            "crypto/rsa/rsa_sp800_56b_check.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_sp800_56b_gen.o" => [
            "crypto/rsa/rsa_sp800_56b_gen.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_x931.o" => [
            "crypto/rsa/rsa_x931.c"
        ],
        "crypto/rsa/libcrypto-lib-rsa_x931g.o" => [
            "crypto/rsa/rsa_x931g.c"
        ],
        "crypto/rsa/libfips-lib-rsa_acvp_test_params.o" => [
            "crypto/rsa/rsa_acvp_test_params.c"
        ],
        "crypto/rsa/libfips-lib-rsa_backend.o" => [
            "crypto/rsa/rsa_backend.c"
        ],
        "crypto/rsa/libfips-lib-rsa_chk.o" => [
            "crypto/rsa/rsa_chk.c"
        ],
        "crypto/rsa/libfips-lib-rsa_crpt.o" => [
            "crypto/rsa/rsa_crpt.c"
        ],
        "crypto/rsa/libfips-lib-rsa_gen.o" => [
            "crypto/rsa/rsa_gen.c"
        ],
        "crypto/rsa/libfips-lib-rsa_lib.o" => [
            "crypto/rsa/rsa_lib.c"
        ],
        "crypto/rsa/libfips-lib-rsa_mp_names.o" => [
            "crypto/rsa/rsa_mp_names.c"
        ],
        "crypto/rsa/libfips-lib-rsa_none.o" => [
            "crypto/rsa/rsa_none.c"
        ],
        "crypto/rsa/libfips-lib-rsa_oaep.o" => [
            "crypto/rsa/rsa_oaep.c"
        ],
        "crypto/rsa/libfips-lib-rsa_ossl.o" => [
            "crypto/rsa/rsa_ossl.c"
        ],
        "crypto/rsa/libfips-lib-rsa_pk1.o" => [
            "crypto/rsa/rsa_pk1.c"
        ],
        "crypto/rsa/libfips-lib-rsa_pss.o" => [
            "crypto/rsa/rsa_pss.c"
        ],
        "crypto/rsa/libfips-lib-rsa_schemes.o" => [
            "crypto/rsa/rsa_schemes.c"
        ],
        "crypto/rsa/libfips-lib-rsa_sign.o" => [
            "crypto/rsa/rsa_sign.c"
        ],
        "crypto/rsa/libfips-lib-rsa_sp800_56b_check.o" => [
            "crypto/rsa/rsa_sp800_56b_check.c"
        ],
        "crypto/rsa/libfips-lib-rsa_sp800_56b_gen.o" => [
            "crypto/rsa/rsa_sp800_56b_gen.c"
        ],
        "crypto/rsa/libfips-lib-rsa_x931.o" => [
            "crypto/rsa/rsa_x931.c"
        ],
        "crypto/seed/libcrypto-lib-seed.o" => [
            "crypto/seed/seed.c"
        ],
        "crypto/seed/libcrypto-lib-seed_cbc.o" => [
            "crypto/seed/seed_cbc.c"
        ],
        "crypto/seed/libcrypto-lib-seed_cfb.o" => [
            "crypto/seed/seed_cfb.c"
        ],
        "crypto/seed/libcrypto-lib-seed_ecb.o" => [
            "crypto/seed/seed_ecb.c"
        ],
        "crypto/seed/libcrypto-lib-seed_ofb.o" => [
            "crypto/seed/seed_ofb.c"
        ],
        "crypto/sha/libcrypto-lib-keccak1600-x86_64.o" => [
            "crypto/sha/keccak1600-x86_64.s"
        ],
        "crypto/sha/libcrypto-lib-sha1-mb-x86_64.o" => [
            "crypto/sha/sha1-mb-x86_64.s"
        ],
        "crypto/sha/libcrypto-lib-sha1-x86_64.o" => [
            "crypto/sha/sha1-x86_64.s"
        ],
        "crypto/sha/libcrypto-lib-sha1_one.o" => [
            "crypto/sha/sha1_one.c"
        ],
        "crypto/sha/libcrypto-lib-sha1dgst.o" => [
            "crypto/sha/sha1dgst.c"
        ],
        "crypto/sha/libcrypto-lib-sha256-mb-x86_64.o" => [
            "crypto/sha/sha256-mb-x86_64.s"
        ],
        "crypto/sha/libcrypto-lib-sha256-x86_64.o" => [
            "crypto/sha/sha256-x86_64.s"
        ],
        "crypto/sha/libcrypto-lib-sha256.o" => [
            "crypto/sha/sha256.c"
        ],
        "crypto/sha/libcrypto-lib-sha3.o" => [
            "crypto/sha/sha3.c"
        ],
        "crypto/sha/libcrypto-lib-sha512-x86_64.o" => [
            "crypto/sha/sha512-x86_64.s"
        ],
        "crypto/sha/libcrypto-lib-sha512.o" => [
            "crypto/sha/sha512.c"
        ],
        "crypto/sha/libfips-lib-keccak1600-x86_64.o" => [
            "crypto/sha/keccak1600-x86_64.s"
        ],
        "crypto/sha/libfips-lib-sha1-mb-x86_64.o" => [
            "crypto/sha/sha1-mb-x86_64.s"
        ],
        "crypto/sha/libfips-lib-sha1-x86_64.o" => [
            "crypto/sha/sha1-x86_64.s"
        ],
        "crypto/sha/libfips-lib-sha1dgst.o" => [
            "crypto/sha/sha1dgst.c"
        ],
        "crypto/sha/libfips-lib-sha256-mb-x86_64.o" => [
            "crypto/sha/sha256-mb-x86_64.s"
        ],
        "crypto/sha/libfips-lib-sha256-x86_64.o" => [
            "crypto/sha/sha256-x86_64.s"
        ],
        "crypto/sha/libfips-lib-sha256.o" => [
            "crypto/sha/sha256.c"
        ],
        "crypto/sha/libfips-lib-sha3.o" => [
            "crypto/sha/sha3.c"
        ],
        "crypto/sha/libfips-lib-sha512-x86_64.o" => [
            "crypto/sha/sha512-x86_64.s"
        ],
        "crypto/sha/libfips-lib-sha512.o" => [
            "crypto/sha/sha512.c"
        ],
        "crypto/siphash/libcrypto-lib-siphash.o" => [
            "crypto/siphash/siphash.c"
        ],
        "crypto/sm2/libcrypto-lib-sm2_crypt.o" => [
            "crypto/sm2/sm2_crypt.c"
        ],
        "crypto/sm2/libcrypto-lib-sm2_err.o" => [
            "crypto/sm2/sm2_err.c"
        ],
        "crypto/sm2/libcrypto-lib-sm2_key.o" => [
            "crypto/sm2/sm2_key.c"
        ],
        "crypto/sm2/libcrypto-lib-sm2_sign.o" => [
            "crypto/sm2/sm2_sign.c"
        ],
        "crypto/sm3/libcrypto-lib-legacy_sm3.o" => [
            "crypto/sm3/legacy_sm3.c"
        ],
        "crypto/sm3/libcrypto-lib-sm3.o" => [
            "crypto/sm3/sm3.c"
        ],
        "crypto/sm4/libcrypto-lib-sm4.o" => [
            "crypto/sm4/sm4.c"
        ],
        "crypto/srp/libcrypto-lib-srp_lib.o" => [
            "crypto/srp/srp_lib.c"
        ],
        "crypto/srp/libcrypto-lib-srp_vfy.o" => [
            "crypto/srp/srp_vfy.c"
        ],
        "crypto/stack/libcrypto-lib-stack.o" => [
            "crypto/stack/stack.c"
        ],
        "crypto/stack/libfips-lib-stack.o" => [
            "crypto/stack/stack.c"
        ],
        "crypto/store/libcrypto-lib-store_err.o" => [
            "crypto/store/store_err.c"
        ],
        "crypto/store/libcrypto-lib-store_init.o" => [
            "crypto/store/store_init.c"
        ],
        "crypto/store/libcrypto-lib-store_lib.o" => [
            "crypto/store/store_lib.c"
        ],
        "crypto/store/libcrypto-lib-store_meth.o" => [
            "crypto/store/store_meth.c"
        ],
        "crypto/store/libcrypto-lib-store_register.o" => [
            "crypto/store/store_register.c"
        ],
        "crypto/store/libcrypto-lib-store_result.o" => [
            "crypto/store/store_result.c"
        ],
        "crypto/store/libcrypto-lib-store_strings.o" => [
            "crypto/store/store_strings.c"
        ],
        "crypto/ts/libcrypto-lib-ts_asn1.o" => [
            "crypto/ts/ts_asn1.c"
        ],
        "crypto/ts/libcrypto-lib-ts_conf.o" => [
            "crypto/ts/ts_conf.c"
        ],
        "crypto/ts/libcrypto-lib-ts_err.o" => [
            "crypto/ts/ts_err.c"
        ],
        "crypto/ts/libcrypto-lib-ts_lib.o" => [
            "crypto/ts/ts_lib.c"
        ],
        "crypto/ts/libcrypto-lib-ts_req_print.o" => [
            "crypto/ts/ts_req_print.c"
        ],
        "crypto/ts/libcrypto-lib-ts_req_utils.o" => [
            "crypto/ts/ts_req_utils.c"
        ],
        "crypto/ts/libcrypto-lib-ts_rsp_print.o" => [
            "crypto/ts/ts_rsp_print.c"
        ],
        "crypto/ts/libcrypto-lib-ts_rsp_sign.o" => [
            "crypto/ts/ts_rsp_sign.c"
        ],
        "crypto/ts/libcrypto-lib-ts_rsp_utils.o" => [
            "crypto/ts/ts_rsp_utils.c"
        ],
        "crypto/ts/libcrypto-lib-ts_rsp_verify.o" => [
            "crypto/ts/ts_rsp_verify.c"
        ],
        "crypto/ts/libcrypto-lib-ts_verify_ctx.o" => [
            "crypto/ts/ts_verify_ctx.c"
        ],
        "crypto/txt_db/libcrypto-lib-txt_db.o" => [
            "crypto/txt_db/txt_db.c"
        ],
        "crypto/ui/libcrypto-lib-ui_err.o" => [
            "crypto/ui/ui_err.c"
        ],
        "crypto/ui/libcrypto-lib-ui_lib.o" => [
            "crypto/ui/ui_lib.c"
        ],
        "crypto/ui/libcrypto-lib-ui_null.o" => [
            "crypto/ui/ui_null.c"
        ],
        "crypto/ui/libcrypto-lib-ui_openssl.o" => [
            "crypto/ui/ui_openssl.c"
        ],
        "crypto/ui/libcrypto-lib-ui_util.o" => [
            "crypto/ui/ui_util.c"
        ],
        "crypto/whrlpool/libcrypto-lib-wp-x86_64.o" => [
            "crypto/whrlpool/wp-x86_64.s"
        ],
        "crypto/whrlpool/libcrypto-lib-wp_dgst.o" => [
            "crypto/whrlpool/wp_dgst.c"
        ],
        "crypto/x509/libcrypto-lib-by_dir.o" => [
            "crypto/x509/by_dir.c"
        ],
        "crypto/x509/libcrypto-lib-by_file.o" => [
            "crypto/x509/by_file.c"
        ],
        "crypto/x509/libcrypto-lib-by_store.o" => [
            "crypto/x509/by_store.c"
        ],
        "crypto/x509/libcrypto-lib-pcy_cache.o" => [
            "crypto/x509/pcy_cache.c"
        ],
        "crypto/x509/libcrypto-lib-pcy_data.o" => [
            "crypto/x509/pcy_data.c"
        ],
        "crypto/x509/libcrypto-lib-pcy_lib.o" => [
            "crypto/x509/pcy_lib.c"
        ],
        "crypto/x509/libcrypto-lib-pcy_map.o" => [
            "crypto/x509/pcy_map.c"
        ],
        "crypto/x509/libcrypto-lib-pcy_node.o" => [
            "crypto/x509/pcy_node.c"
        ],
        "crypto/x509/libcrypto-lib-pcy_tree.o" => [
            "crypto/x509/pcy_tree.c"
        ],
        "crypto/x509/libcrypto-lib-t_crl.o" => [
            "crypto/x509/t_crl.c"
        ],
        "crypto/x509/libcrypto-lib-t_req.o" => [
            "crypto/x509/t_req.c"
        ],
        "crypto/x509/libcrypto-lib-t_x509.o" => [
            "crypto/x509/t_x509.c"
        ],
        "crypto/x509/libcrypto-lib-v3_addr.o" => [
            "crypto/x509/v3_addr.c"
        ],
        "crypto/x509/libcrypto-lib-v3_admis.o" => [
            "crypto/x509/v3_admis.c"
        ],
        "crypto/x509/libcrypto-lib-v3_akeya.o" => [
            "crypto/x509/v3_akeya.c"
        ],
        "crypto/x509/libcrypto-lib-v3_akid.o" => [
            "crypto/x509/v3_akid.c"
        ],
        "crypto/x509/libcrypto-lib-v3_asid.o" => [
            "crypto/x509/v3_asid.c"
        ],
        "crypto/x509/libcrypto-lib-v3_bcons.o" => [
            "crypto/x509/v3_bcons.c"
        ],
        "crypto/x509/libcrypto-lib-v3_bitst.o" => [
            "crypto/x509/v3_bitst.c"
        ],
        "crypto/x509/libcrypto-lib-v3_conf.o" => [
            "crypto/x509/v3_conf.c"
        ],
        "crypto/x509/libcrypto-lib-v3_cpols.o" => [
            "crypto/x509/v3_cpols.c"
        ],
        "crypto/x509/libcrypto-lib-v3_crld.o" => [
            "crypto/x509/v3_crld.c"
        ],
        "crypto/x509/libcrypto-lib-v3_enum.o" => [
            "crypto/x509/v3_enum.c"
        ],
        "crypto/x509/libcrypto-lib-v3_extku.o" => [
            "crypto/x509/v3_extku.c"
        ],
        "crypto/x509/libcrypto-lib-v3_genn.o" => [
            "crypto/x509/v3_genn.c"
        ],
        "crypto/x509/libcrypto-lib-v3_ia5.o" => [
            "crypto/x509/v3_ia5.c"
        ],
        "crypto/x509/libcrypto-lib-v3_info.o" => [
            "crypto/x509/v3_info.c"
        ],
        "crypto/x509/libcrypto-lib-v3_int.o" => [
            "crypto/x509/v3_int.c"
        ],
        "crypto/x509/libcrypto-lib-v3_ist.o" => [
            "crypto/x509/v3_ist.c"
        ],
        "crypto/x509/libcrypto-lib-v3_lib.o" => [
            "crypto/x509/v3_lib.c"
        ],
        "crypto/x509/libcrypto-lib-v3_ncons.o" => [
            "crypto/x509/v3_ncons.c"
        ],
        "crypto/x509/libcrypto-lib-v3_pci.o" => [
            "crypto/x509/v3_pci.c"
        ],
        "crypto/x509/libcrypto-lib-v3_pcia.o" => [
            "crypto/x509/v3_pcia.c"
        ],
        "crypto/x509/libcrypto-lib-v3_pcons.o" => [
            "crypto/x509/v3_pcons.c"
        ],
        "crypto/x509/libcrypto-lib-v3_pku.o" => [
            "crypto/x509/v3_pku.c"
        ],
        "crypto/x509/libcrypto-lib-v3_pmaps.o" => [
            "crypto/x509/v3_pmaps.c"
        ],
        "crypto/x509/libcrypto-lib-v3_prn.o" => [
            "crypto/x509/v3_prn.c"
        ],
        "crypto/x509/libcrypto-lib-v3_purp.o" => [
            "crypto/x509/v3_purp.c"
        ],
        "crypto/x509/libcrypto-lib-v3_san.o" => [
            "crypto/x509/v3_san.c"
        ],
        "crypto/x509/libcrypto-lib-v3_skid.o" => [
            "crypto/x509/v3_skid.c"
        ],
        "crypto/x509/libcrypto-lib-v3_sxnet.o" => [
            "crypto/x509/v3_sxnet.c"
        ],
        "crypto/x509/libcrypto-lib-v3_tlsf.o" => [
            "crypto/x509/v3_tlsf.c"
        ],
        "crypto/x509/libcrypto-lib-v3_utf8.o" => [
            "crypto/x509/v3_utf8.c"
        ],
        "crypto/x509/libcrypto-lib-v3_utl.o" => [
            "crypto/x509/v3_utl.c"
        ],
        "crypto/x509/libcrypto-lib-v3err.o" => [
            "crypto/x509/v3err.c"
        ],
        "crypto/x509/libcrypto-lib-x509_att.o" => [
            "crypto/x509/x509_att.c"
        ],
        "crypto/x509/libcrypto-lib-x509_cmp.o" => [
            "crypto/x509/x509_cmp.c"
        ],
        "crypto/x509/libcrypto-lib-x509_d2.o" => [
            "crypto/x509/x509_d2.c"
        ],
        "crypto/x509/libcrypto-lib-x509_def.o" => [
            "crypto/x509/x509_def.c"
        ],
        "crypto/x509/libcrypto-lib-x509_err.o" => [
            "crypto/x509/x509_err.c"
        ],
        "crypto/x509/libcrypto-lib-x509_ext.o" => [
            "crypto/x509/x509_ext.c"
        ],
        "crypto/x509/libcrypto-lib-x509_lu.o" => [
            "crypto/x509/x509_lu.c"
        ],
        "crypto/x509/libcrypto-lib-x509_meth.o" => [
            "crypto/x509/x509_meth.c"
        ],
        "crypto/x509/libcrypto-lib-x509_obj.o" => [
            "crypto/x509/x509_obj.c"
        ],
        "crypto/x509/libcrypto-lib-x509_r2x.o" => [
            "crypto/x509/x509_r2x.c"
        ],
        "crypto/x509/libcrypto-lib-x509_req.o" => [
            "crypto/x509/x509_req.c"
        ],
        "crypto/x509/libcrypto-lib-x509_set.o" => [
            "crypto/x509/x509_set.c"
        ],
        "crypto/x509/libcrypto-lib-x509_trust.o" => [
            "crypto/x509/x509_trust.c"
        ],
        "crypto/x509/libcrypto-lib-x509_txt.o" => [
            "crypto/x509/x509_txt.c"
        ],
        "crypto/x509/libcrypto-lib-x509_v3.o" => [
            "crypto/x509/x509_v3.c"
        ],
        "crypto/x509/libcrypto-lib-x509_vfy.o" => [
            "crypto/x509/x509_vfy.c"
        ],
        "crypto/x509/libcrypto-lib-x509_vpm.o" => [
            "crypto/x509/x509_vpm.c"
        ],
        "crypto/x509/libcrypto-lib-x509cset.o" => [
            "crypto/x509/x509cset.c"
        ],
        "crypto/x509/libcrypto-lib-x509name.o" => [
            "crypto/x509/x509name.c"
        ],
        "crypto/x509/libcrypto-lib-x509rset.o" => [
            "crypto/x509/x509rset.c"
        ],
        "crypto/x509/libcrypto-lib-x509spki.o" => [
            "crypto/x509/x509spki.c"
        ],
        "crypto/x509/libcrypto-lib-x509type.o" => [
            "crypto/x509/x509type.c"
        ],
        "crypto/x509/libcrypto-lib-x_all.o" => [
            "crypto/x509/x_all.c"
        ],
        "crypto/x509/libcrypto-lib-x_attrib.o" => [
            "crypto/x509/x_attrib.c"
        ],
        "crypto/x509/libcrypto-lib-x_crl.o" => [
            "crypto/x509/x_crl.c"
        ],
        "crypto/x509/libcrypto-lib-x_exten.o" => [
            "crypto/x509/x_exten.c"
        ],
        "crypto/x509/libcrypto-lib-x_name.o" => [
            "crypto/x509/x_name.c"
        ],
        "crypto/x509/libcrypto-lib-x_pubkey.o" => [
            "crypto/x509/x_pubkey.c"
        ],
        "crypto/x509/libcrypto-lib-x_req.o" => [
            "crypto/x509/x_req.c"
        ],
        "crypto/x509/libcrypto-lib-x_x509.o" => [
            "crypto/x509/x_x509.c"
        ],
        "crypto/x509/libcrypto-lib-x_x509a.o" => [
            "crypto/x509/x_x509a.c"
        ],
        "engines/libcrypto-lib-e_capi.o" => [
            "engines/e_capi.c"
        ],
        "engines/libcrypto-lib-e_padlock-x86_64.o" => [
            "engines/e_padlock-x86_64.s"
        ],
        "engines/libcrypto-lib-e_padlock.o" => [
            "engines/e_padlock.c"
        ],
        "fuzz/asn1-test" => [
            "fuzz/asn1-test-bin-asn1.o",
            "fuzz/asn1-test-bin-fuzz_rand.o",
            "fuzz/asn1-test-bin-test-corpus.o"
        ],
        "fuzz/asn1-test-bin-asn1.o" => [
            "fuzz/asn1.c"
        ],
        "fuzz/asn1-test-bin-fuzz_rand.o" => [
            "fuzz/fuzz_rand.c"
        ],
        "fuzz/asn1-test-bin-test-corpus.o" => [
            "fuzz/test-corpus.c"
        ],
        "fuzz/asn1parse-test" => [
            "fuzz/asn1parse-test-bin-asn1parse.o",
            "fuzz/asn1parse-test-bin-test-corpus.o"
        ],
        "fuzz/asn1parse-test-bin-asn1parse.o" => [
            "fuzz/asn1parse.c"
        ],
        "fuzz/asn1parse-test-bin-test-corpus.o" => [
            "fuzz/test-corpus.c"
        ],
        "fuzz/bignum-test" => [
            "fuzz/bignum-test-bin-bignum.o",
            "fuzz/bignum-test-bin-test-corpus.o"
        ],
        "fuzz/bignum-test-bin-bignum.o" => [
            "fuzz/bignum.c"
        ],
        "fuzz/bignum-test-bin-test-corpus.o" => [
            "fuzz/test-corpus.c"
        ],
        "fuzz/bndiv-test" => [
            "fuzz/bndiv-test-bin-bndiv.o",
            "fuzz/bndiv-test-bin-test-corpus.o"
        ],
        "fuzz/bndiv-test-bin-bndiv.o" => [
            "fuzz/bndiv.c"
        ],
        "fuzz/bndiv-test-bin-test-corpus.o" => [
            "fuzz/test-corpus.c"
        ],
        "fuzz/client-test" => [
            "fuzz/client-test-bin-client.o",
            "fuzz/client-test-bin-fuzz_rand.o",
            "fuzz/client-test-bin-test-corpus.o"
        ],
        "fuzz/client-test-bin-client.o" => [
            "fuzz/client.c"
        ],
        "fuzz/client-test-bin-fuzz_rand.o" => [
            "fuzz/fuzz_rand.c"
        ],
        "fuzz/client-test-bin-test-corpus.o" => [
            "fuzz/test-corpus.c"
        ],
        "fuzz/cmp-test" => [
            "fuzz/cmp-test-bin-cmp.o",
            "fuzz/cmp-test-bin-fuzz_rand.o",
            "fuzz/cmp-test-bin-test-corpus.o"
        ],
        "fuzz/cmp-test-bin-cmp.o" => [
            "fuzz/cmp.c"
        ],
        "fuzz/cmp-test-bin-fuzz_rand.o" => [
            "fuzz/fuzz_rand.c"
        ],
        "fuzz/cmp-test-bin-test-corpus.o" => [
            "fuzz/test-corpus.c"
        ],
        "fuzz/cms-test" => [
            "fuzz/cms-test-bin-cms.o",
            "fuzz/cms-test-bin-test-corpus.o"
        ],
        "fuzz/cms-test-bin-cms.o" => [
            "fuzz/cms.c"
        ],
        "fuzz/cms-test-bin-test-corpus.o" => [
            "fuzz/test-corpus.c"
        ],
        "fuzz/conf-test" => [
            "fuzz/conf-test-bin-conf.o",
            "fuzz/conf-test-bin-test-corpus.o"
        ],
        "fuzz/conf-test-bin-conf.o" => [
            "fuzz/conf.c"
        ],
        "fuzz/conf-test-bin-test-corpus.o" => [
            "fuzz/test-corpus.c"
        ],
        "fuzz/crl-test" => [
            "fuzz/crl-test-bin-crl.o",
            "fuzz/crl-test-bin-test-corpus.o"
        ],
        "fuzz/crl-test-bin-crl.o" => [
            "fuzz/crl.c"
        ],
        "fuzz/crl-test-bin-test-corpus.o" => [
            "fuzz/test-corpus.c"
        ],
        "fuzz/ct-test" => [
            "fuzz/ct-test-bin-ct.o",
            "fuzz/ct-test-bin-test-corpus.o"
        ],
        "fuzz/ct-test-bin-ct.o" => [
            "fuzz/ct.c"
        ],
        "fuzz/ct-test-bin-test-corpus.o" => [
            "fuzz/test-corpus.c"
        ],
        "fuzz/server-test" => [
            "fuzz/server-test-bin-fuzz_rand.o",
            "fuzz/server-test-bin-server.o",
            "fuzz/server-test-bin-test-corpus.o"
        ],
        "fuzz/server-test-bin-fuzz_rand.o" => [
            "fuzz/fuzz_rand.c"
        ],
        "fuzz/server-test-bin-server.o" => [
            "fuzz/server.c"
        ],
        "fuzz/server-test-bin-test-corpus.o" => [
            "fuzz/test-corpus.c"
        ],
        "fuzz/x509-test" => [
            "fuzz/x509-test-bin-fuzz_rand.o",
            "fuzz/x509-test-bin-test-corpus.o",
            "fuzz/x509-test-bin-x509.o"
        ],
        "fuzz/x509-test-bin-fuzz_rand.o" => [
            "fuzz/fuzz_rand.c"
        ],
        "fuzz/x509-test-bin-test-corpus.o" => [
            "fuzz/test-corpus.c"
        ],
        "fuzz/x509-test-bin-x509.o" => [
            "fuzz/x509.c"
        ],
        "libcrypto" => [
            "crypto/aes/libcrypto-lib-aes-x86_64.o",
            "crypto/aes/libcrypto-lib-aes_cfb.o",
            "crypto/aes/libcrypto-lib-aes_ecb.o",
            "crypto/aes/libcrypto-lib-aes_ige.o",
            "crypto/aes/libcrypto-lib-aes_misc.o",
            "crypto/aes/libcrypto-lib-aes_ofb.o",
            "crypto/aes/libcrypto-lib-aes_wrap.o",
            "crypto/aes/libcrypto-lib-aesni-mb-x86_64.o",
            "crypto/aes/libcrypto-lib-aesni-sha1-x86_64.o",
            "crypto/aes/libcrypto-lib-aesni-sha256-x86_64.o",
            "crypto/aes/libcrypto-lib-aesni-x86_64.o",
            "crypto/aes/libcrypto-lib-bsaes-x86_64.o",
            "crypto/aes/libcrypto-lib-vpaes-x86_64.o",
            "crypto/aria/libcrypto-lib-aria.o",
            "crypto/asn1/libcrypto-lib-a_bitstr.o",
            "crypto/asn1/libcrypto-lib-a_d2i_fp.o",
            "crypto/asn1/libcrypto-lib-a_digest.o",
            "crypto/asn1/libcrypto-lib-a_dup.o",
            "crypto/asn1/libcrypto-lib-a_gentm.o",
            "crypto/asn1/libcrypto-lib-a_i2d_fp.o",
            "crypto/asn1/libcrypto-lib-a_int.o",
            "crypto/asn1/libcrypto-lib-a_mbstr.o",
            "crypto/asn1/libcrypto-lib-a_object.o",
            "crypto/asn1/libcrypto-lib-a_octet.o",
            "crypto/asn1/libcrypto-lib-a_print.o",
            "crypto/asn1/libcrypto-lib-a_sign.o",
            "crypto/asn1/libcrypto-lib-a_strex.o",
            "crypto/asn1/libcrypto-lib-a_strnid.o",
            "crypto/asn1/libcrypto-lib-a_time.o",
            "crypto/asn1/libcrypto-lib-a_type.o",
            "crypto/asn1/libcrypto-lib-a_utctm.o",
            "crypto/asn1/libcrypto-lib-a_utf8.o",
            "crypto/asn1/libcrypto-lib-a_verify.o",
            "crypto/asn1/libcrypto-lib-ameth_lib.o",
            "crypto/asn1/libcrypto-lib-asn1_err.o",
            "crypto/asn1/libcrypto-lib-asn1_gen.o",
            "crypto/asn1/libcrypto-lib-asn1_item_list.o",
            "crypto/asn1/libcrypto-lib-asn1_lib.o",
            "crypto/asn1/libcrypto-lib-asn1_parse.o",
            "crypto/asn1/libcrypto-lib-asn_mime.o",
            "crypto/asn1/libcrypto-lib-asn_moid.o",
            "crypto/asn1/libcrypto-lib-asn_mstbl.o",
            "crypto/asn1/libcrypto-lib-asn_pack.o",
            "crypto/asn1/libcrypto-lib-bio_asn1.o",
            "crypto/asn1/libcrypto-lib-bio_ndef.o",
            "crypto/asn1/libcrypto-lib-d2i_param.o",
            "crypto/asn1/libcrypto-lib-d2i_pr.o",
            "crypto/asn1/libcrypto-lib-d2i_pu.o",
            "crypto/asn1/libcrypto-lib-evp_asn1.o",
            "crypto/asn1/libcrypto-lib-f_int.o",
            "crypto/asn1/libcrypto-lib-f_string.o",
            "crypto/asn1/libcrypto-lib-i2d_evp.o",
            "crypto/asn1/libcrypto-lib-n_pkey.o",
            "crypto/asn1/libcrypto-lib-nsseq.o",
            "crypto/asn1/libcrypto-lib-p5_pbe.o",
            "crypto/asn1/libcrypto-lib-p5_pbev2.o",
            "crypto/asn1/libcrypto-lib-p5_scrypt.o",
            "crypto/asn1/libcrypto-lib-p8_pkey.o",
            "crypto/asn1/libcrypto-lib-t_bitst.o",
            "crypto/asn1/libcrypto-lib-t_pkey.o",
            "crypto/asn1/libcrypto-lib-t_spki.o",
            "crypto/asn1/libcrypto-lib-tasn_dec.o",
            "crypto/asn1/libcrypto-lib-tasn_enc.o",
            "crypto/asn1/libcrypto-lib-tasn_fre.o",
            "crypto/asn1/libcrypto-lib-tasn_new.o",
            "crypto/asn1/libcrypto-lib-tasn_prn.o",
            "crypto/asn1/libcrypto-lib-tasn_scn.o",
            "crypto/asn1/libcrypto-lib-tasn_typ.o",
            "crypto/asn1/libcrypto-lib-tasn_utl.o",
            "crypto/asn1/libcrypto-lib-x_algor.o",
            "crypto/asn1/libcrypto-lib-x_bignum.o",
            "crypto/asn1/libcrypto-lib-x_info.o",
            "crypto/asn1/libcrypto-lib-x_int64.o",
            "crypto/asn1/libcrypto-lib-x_long.o",
            "crypto/asn1/libcrypto-lib-x_pkey.o",
            "crypto/asn1/libcrypto-lib-x_sig.o",
            "crypto/asn1/libcrypto-lib-x_spki.o",
            "crypto/asn1/libcrypto-lib-x_val.o",
            "crypto/async/arch/libcrypto-lib-async_null.o",
            "crypto/async/arch/libcrypto-lib-async_posix.o",
            "crypto/async/arch/libcrypto-lib-async_win.o",
            "crypto/async/libcrypto-lib-async.o",
            "crypto/async/libcrypto-lib-async_err.o",
            "crypto/async/libcrypto-lib-async_wait.o",
            "crypto/bf/libcrypto-lib-bf_cfb64.o",
            "crypto/bf/libcrypto-lib-bf_ecb.o",
            "crypto/bf/libcrypto-lib-bf_enc.o",
            "crypto/bf/libcrypto-lib-bf_ofb64.o",
            "crypto/bf/libcrypto-lib-bf_skey.o",
            "crypto/bio/libcrypto-lib-bf_buff.o",
            "crypto/bio/libcrypto-lib-bf_lbuf.o",
            "crypto/bio/libcrypto-lib-bf_nbio.o",
            "crypto/bio/libcrypto-lib-bf_null.o",
            "crypto/bio/libcrypto-lib-bf_prefix.o",
            "crypto/bio/libcrypto-lib-bf_readbuff.o",
            "crypto/bio/libcrypto-lib-bio_addr.o",
            "crypto/bio/libcrypto-lib-bio_cb.o",
            "crypto/bio/libcrypto-lib-bio_dump.o",
            "crypto/bio/libcrypto-lib-bio_err.o",
            "crypto/bio/libcrypto-lib-bio_lib.o",
            "crypto/bio/libcrypto-lib-bio_meth.o",
            "crypto/bio/libcrypto-lib-bio_print.o",
            "crypto/bio/libcrypto-lib-bio_sock.o",
            "crypto/bio/libcrypto-lib-bio_sock2.o",
            "crypto/bio/libcrypto-lib-bss_acpt.o",
            "crypto/bio/libcrypto-lib-bss_bio.o",
            "crypto/bio/libcrypto-lib-bss_conn.o",
            "crypto/bio/libcrypto-lib-bss_core.o",
            "crypto/bio/libcrypto-lib-bss_dgram.o",
            "crypto/bio/libcrypto-lib-bss_fd.o",
            "crypto/bio/libcrypto-lib-bss_file.o",
            "crypto/bio/libcrypto-lib-bss_log.o",
            "crypto/bio/libcrypto-lib-bss_mem.o",
            "crypto/bio/libcrypto-lib-bss_null.o",
            "crypto/bio/libcrypto-lib-bss_sock.o",
            "crypto/bio/libcrypto-lib-ossl_core_bio.o",
            "crypto/bn/libcrypto-lib-bn_add.o",
            "crypto/bn/libcrypto-lib-bn_asm.o",
            "crypto/bn/libcrypto-lib-bn_blind.o",
            "crypto/bn/libcrypto-lib-bn_const.o",
            "crypto/bn/libcrypto-lib-bn_conv.o",
            "crypto/bn/libcrypto-lib-bn_ctx.o",
            "crypto/bn/libcrypto-lib-bn_depr.o",
            "crypto/bn/libcrypto-lib-bn_dh.o",
            "crypto/bn/libcrypto-lib-bn_div.o",
            "crypto/bn/libcrypto-lib-bn_err.o",
            "crypto/bn/libcrypto-lib-bn_exp.o",
            "crypto/bn/libcrypto-lib-bn_exp2.o",
            "crypto/bn/libcrypto-lib-bn_gcd.o",
            "crypto/bn/libcrypto-lib-bn_gf2m.o",
            "crypto/bn/libcrypto-lib-bn_intern.o",
            "crypto/bn/libcrypto-lib-bn_kron.o",
            "crypto/bn/libcrypto-lib-bn_lib.o",
            "crypto/bn/libcrypto-lib-bn_mod.o",
            "crypto/bn/libcrypto-lib-bn_mont.o",
            "crypto/bn/libcrypto-lib-bn_mpi.o",
            "crypto/bn/libcrypto-lib-bn_mul.o",
            "crypto/bn/libcrypto-lib-bn_nist.o",
            "crypto/bn/libcrypto-lib-bn_prime.o",
            "crypto/bn/libcrypto-lib-bn_print.o",
            "crypto/bn/libcrypto-lib-bn_rand.o",
            "crypto/bn/libcrypto-lib-bn_recp.o",
            "crypto/bn/libcrypto-lib-bn_rsa_fips186_4.o",
            "crypto/bn/libcrypto-lib-bn_shift.o",
            "crypto/bn/libcrypto-lib-bn_sqr.o",
            "crypto/bn/libcrypto-lib-bn_sqrt.o",
            "crypto/bn/libcrypto-lib-bn_srp.o",
            "crypto/bn/libcrypto-lib-bn_word.o",
            "crypto/bn/libcrypto-lib-bn_x931p.o",
            "crypto/bn/libcrypto-lib-rsaz-avx2.o",
            "crypto/bn/libcrypto-lib-rsaz-avx512.o",
            "crypto/bn/libcrypto-lib-rsaz-x86_64.o",
            "crypto/bn/libcrypto-lib-rsaz_exp.o",
            "crypto/bn/libcrypto-lib-rsaz_exp_x2.o",
            "crypto/bn/libcrypto-lib-x86_64-gf2m.o",
            "crypto/bn/libcrypto-lib-x86_64-mont.o",
            "crypto/bn/libcrypto-lib-x86_64-mont5.o",
            "crypto/buffer/libcrypto-lib-buf_err.o",
            "crypto/buffer/libcrypto-lib-buffer.o",
            "crypto/camellia/libcrypto-lib-cmll-x86_64.o",
            "crypto/camellia/libcrypto-lib-cmll_cfb.o",
            "crypto/camellia/libcrypto-lib-cmll_ctr.o",
            "crypto/camellia/libcrypto-lib-cmll_ecb.o",
            "crypto/camellia/libcrypto-lib-cmll_misc.o",
            "crypto/camellia/libcrypto-lib-cmll_ofb.o",
            "crypto/cast/libcrypto-lib-c_cfb64.o",
            "crypto/cast/libcrypto-lib-c_ecb.o",
            "crypto/cast/libcrypto-lib-c_enc.o",
            "crypto/cast/libcrypto-lib-c_ofb64.o",
            "crypto/cast/libcrypto-lib-c_skey.o",
            "crypto/chacha/libcrypto-lib-chacha-x86_64.o",
            "crypto/cmac/libcrypto-lib-cmac.o",
            "crypto/cmp/libcrypto-lib-cmp_asn.o",
            "crypto/cmp/libcrypto-lib-cmp_client.o",
            "crypto/cmp/libcrypto-lib-cmp_ctx.o",
            "crypto/cmp/libcrypto-lib-cmp_err.o",
            "crypto/cmp/libcrypto-lib-cmp_hdr.o",
            "crypto/cmp/libcrypto-lib-cmp_http.o",
            "crypto/cmp/libcrypto-lib-cmp_msg.o",
            "crypto/cmp/libcrypto-lib-cmp_protect.o",
            "crypto/cmp/libcrypto-lib-cmp_server.o",
            "crypto/cmp/libcrypto-lib-cmp_status.o",
            "crypto/cmp/libcrypto-lib-cmp_util.o",
            "crypto/cmp/libcrypto-lib-cmp_vfy.o",
            "crypto/cms/libcrypto-lib-cms_asn1.o",
            "crypto/cms/libcrypto-lib-cms_att.o",
            "crypto/cms/libcrypto-lib-cms_cd.o",
            "crypto/cms/libcrypto-lib-cms_dd.o",
            "crypto/cms/libcrypto-lib-cms_dh.o",
            "crypto/cms/libcrypto-lib-cms_ec.o",
            "crypto/cms/libcrypto-lib-cms_enc.o",
            "crypto/cms/libcrypto-lib-cms_env.o",
            "crypto/cms/libcrypto-lib-cms_err.o",
            "crypto/cms/libcrypto-lib-cms_ess.o",
            "crypto/cms/libcrypto-lib-cms_io.o",
            "crypto/cms/libcrypto-lib-cms_kari.o",
            "crypto/cms/libcrypto-lib-cms_lib.o",
            "crypto/cms/libcrypto-lib-cms_pwri.o",
            "crypto/cms/libcrypto-lib-cms_rsa.o",
            "crypto/cms/libcrypto-lib-cms_sd.o",
            "crypto/cms/libcrypto-lib-cms_smime.o",
            "crypto/conf/libcrypto-lib-conf_api.o",
            "crypto/conf/libcrypto-lib-conf_def.o",
            "crypto/conf/libcrypto-lib-conf_err.o",
            "crypto/conf/libcrypto-lib-conf_lib.o",
            "crypto/conf/libcrypto-lib-conf_mall.o",
            "crypto/conf/libcrypto-lib-conf_mod.o",
            "crypto/conf/libcrypto-lib-conf_sap.o",
            "crypto/conf/libcrypto-lib-conf_ssl.o",
            "crypto/crmf/libcrypto-lib-crmf_asn.o",
            "crypto/crmf/libcrypto-lib-crmf_err.o",
            "crypto/crmf/libcrypto-lib-crmf_lib.o",
            "crypto/crmf/libcrypto-lib-crmf_pbm.o",
            "crypto/ct/libcrypto-lib-ct_b64.o",
            "crypto/ct/libcrypto-lib-ct_err.o",
            "crypto/ct/libcrypto-lib-ct_log.o",
            "crypto/ct/libcrypto-lib-ct_oct.o",
            "crypto/ct/libcrypto-lib-ct_policy.o",
            "crypto/ct/libcrypto-lib-ct_prn.o",
            "crypto/ct/libcrypto-lib-ct_sct.o",
            "crypto/ct/libcrypto-lib-ct_sct_ctx.o",
            "crypto/ct/libcrypto-lib-ct_vfy.o",
            "crypto/ct/libcrypto-lib-ct_x509v3.o",
            "crypto/des/libcrypto-lib-cbc_cksm.o",
            "crypto/des/libcrypto-lib-cbc_enc.o",
            "crypto/des/libcrypto-lib-cfb64ede.o",
            "crypto/des/libcrypto-lib-cfb64enc.o",
            "crypto/des/libcrypto-lib-cfb_enc.o",
            "crypto/des/libcrypto-lib-des_enc.o",
            "crypto/des/libcrypto-lib-ecb3_enc.o",
            "crypto/des/libcrypto-lib-ecb_enc.o",
            "crypto/des/libcrypto-lib-fcrypt.o",
            "crypto/des/libcrypto-lib-fcrypt_b.o",
            "crypto/des/libcrypto-lib-ofb64ede.o",
            "crypto/des/libcrypto-lib-ofb64enc.o",
            "crypto/des/libcrypto-lib-ofb_enc.o",
            "crypto/des/libcrypto-lib-pcbc_enc.o",
            "crypto/des/libcrypto-lib-qud_cksm.o",
            "crypto/des/libcrypto-lib-rand_key.o",
            "crypto/des/libcrypto-lib-set_key.o",
            "crypto/des/libcrypto-lib-str2key.o",
            "crypto/des/libcrypto-lib-xcbc_enc.o",
            "crypto/dh/libcrypto-lib-dh_ameth.o",
            "crypto/dh/libcrypto-lib-dh_asn1.o",
            "crypto/dh/libcrypto-lib-dh_backend.o",
            "crypto/dh/libcrypto-lib-dh_check.o",
            "crypto/dh/libcrypto-lib-dh_depr.o",
            "crypto/dh/libcrypto-lib-dh_err.o",
            "crypto/dh/libcrypto-lib-dh_gen.o",
            "crypto/dh/libcrypto-lib-dh_group_params.o",
            "crypto/dh/libcrypto-lib-dh_kdf.o",
            "crypto/dh/libcrypto-lib-dh_key.o",
            "crypto/dh/libcrypto-lib-dh_lib.o",
            "crypto/dh/libcrypto-lib-dh_meth.o",
            "crypto/dh/libcrypto-lib-dh_pmeth.o",
            "crypto/dh/libcrypto-lib-dh_prn.o",
            "crypto/dh/libcrypto-lib-dh_rfc5114.o",
            "crypto/dsa/libcrypto-lib-dsa_ameth.o",
            "crypto/dsa/libcrypto-lib-dsa_asn1.o",
            "crypto/dsa/libcrypto-lib-dsa_backend.o",
            "crypto/dsa/libcrypto-lib-dsa_check.o",
            "crypto/dsa/libcrypto-lib-dsa_depr.o",
            "crypto/dsa/libcrypto-lib-dsa_err.o",
            "crypto/dsa/libcrypto-lib-dsa_gen.o",
            "crypto/dsa/libcrypto-lib-dsa_key.o",
            "crypto/dsa/libcrypto-lib-dsa_lib.o",
            "crypto/dsa/libcrypto-lib-dsa_meth.o",
            "crypto/dsa/libcrypto-lib-dsa_ossl.o",
            "crypto/dsa/libcrypto-lib-dsa_pmeth.o",
            "crypto/dsa/libcrypto-lib-dsa_prn.o",
            "crypto/dsa/libcrypto-lib-dsa_sign.o",
            "crypto/dsa/libcrypto-lib-dsa_vrf.o",
            "crypto/dso/libcrypto-lib-dso_dl.o",
            "crypto/dso/libcrypto-lib-dso_dlfcn.o",
            "crypto/dso/libcrypto-lib-dso_err.o",
            "crypto/dso/libcrypto-lib-dso_lib.o",
            "crypto/dso/libcrypto-lib-dso_openssl.o",
            "crypto/dso/libcrypto-lib-dso_vms.o",
            "crypto/dso/libcrypto-lib-dso_win32.o",
            "crypto/ec/curve448/arch_32/libcrypto-lib-f_impl32.o",
            "crypto/ec/curve448/arch_64/libcrypto-lib-f_impl64.o",
            "crypto/ec/curve448/libcrypto-lib-curve448.o",
            "crypto/ec/curve448/libcrypto-lib-curve448_tables.o",
            "crypto/ec/curve448/libcrypto-lib-eddsa.o",
            "crypto/ec/curve448/libcrypto-lib-f_generic.o",
            "crypto/ec/curve448/libcrypto-lib-scalar.o",
            "crypto/ec/libcrypto-lib-curve25519.o",
            "crypto/ec/libcrypto-lib-ec2_oct.o",
            "crypto/ec/libcrypto-lib-ec2_smpl.o",
            "crypto/ec/libcrypto-lib-ec_ameth.o",
            "crypto/ec/libcrypto-lib-ec_asn1.o",
            "crypto/ec/libcrypto-lib-ec_backend.o",
            "crypto/ec/libcrypto-lib-ec_check.o",
            "crypto/ec/libcrypto-lib-ec_curve.o",
            "crypto/ec/libcrypto-lib-ec_cvt.o",
            "crypto/ec/libcrypto-lib-ec_deprecated.o",
            "crypto/ec/libcrypto-lib-ec_err.o",
            "crypto/ec/libcrypto-lib-ec_key.o",
            "crypto/ec/libcrypto-lib-ec_kmeth.o",
            "crypto/ec/libcrypto-lib-ec_lib.o",
            "crypto/ec/libcrypto-lib-ec_mult.o",
            "crypto/ec/libcrypto-lib-ec_oct.o",
            "crypto/ec/libcrypto-lib-ec_pmeth.o",
            "crypto/ec/libcrypto-lib-ec_print.o",
            "crypto/ec/libcrypto-lib-ecdh_kdf.o",
            "crypto/ec/libcrypto-lib-ecdh_ossl.o",
            "crypto/ec/libcrypto-lib-ecdsa_ossl.o",
            "crypto/ec/libcrypto-lib-ecdsa_sign.o",
            "crypto/ec/libcrypto-lib-ecdsa_vrf.o",
            "crypto/ec/libcrypto-lib-eck_prn.o",
            "crypto/ec/libcrypto-lib-ecp_mont.o",
            "crypto/ec/libcrypto-lib-ecp_nist.o",
            "crypto/ec/libcrypto-lib-ecp_nistz256-x86_64.o",
            "crypto/ec/libcrypto-lib-ecp_nistz256.o",
            "crypto/ec/libcrypto-lib-ecp_oct.o",
            "crypto/ec/libcrypto-lib-ecp_smpl.o",
            "crypto/ec/libcrypto-lib-ecx_backend.o",
            "crypto/ec/libcrypto-lib-ecx_key.o",
            "crypto/ec/libcrypto-lib-ecx_meth.o",
            "crypto/ec/libcrypto-lib-x25519-x86_64.o",
            "crypto/encode_decode/libcrypto-lib-decoder_err.o",
            "crypto/encode_decode/libcrypto-lib-decoder_lib.o",
            "crypto/encode_decode/libcrypto-lib-decoder_meth.o",
            "crypto/encode_decode/libcrypto-lib-decoder_pkey.o",
            "crypto/encode_decode/libcrypto-lib-encoder_err.o",
            "crypto/encode_decode/libcrypto-lib-encoder_lib.o",
            "crypto/encode_decode/libcrypto-lib-encoder_meth.o",
            "crypto/encode_decode/libcrypto-lib-encoder_pkey.o",
            "crypto/engine/libcrypto-lib-eng_all.o",
            "crypto/engine/libcrypto-lib-eng_cnf.o",
            "crypto/engine/libcrypto-lib-eng_ctrl.o",
            "crypto/engine/libcrypto-lib-eng_dyn.o",
            "crypto/engine/libcrypto-lib-eng_err.o",
            "crypto/engine/libcrypto-lib-eng_fat.o",
            "crypto/engine/libcrypto-lib-eng_init.o",
            "crypto/engine/libcrypto-lib-eng_lib.o",
            "crypto/engine/libcrypto-lib-eng_list.o",
            "crypto/engine/libcrypto-lib-eng_openssl.o",
            "crypto/engine/libcrypto-lib-eng_pkey.o",
            "crypto/engine/libcrypto-lib-eng_rdrand.o",
            "crypto/engine/libcrypto-lib-eng_table.o",
            "crypto/engine/libcrypto-lib-tb_asnmth.o",
            "crypto/engine/libcrypto-lib-tb_cipher.o",
            "crypto/engine/libcrypto-lib-tb_dh.o",
            "crypto/engine/libcrypto-lib-tb_digest.o",
            "crypto/engine/libcrypto-lib-tb_dsa.o",
            "crypto/engine/libcrypto-lib-tb_eckey.o",
            "crypto/engine/libcrypto-lib-tb_pkmeth.o",
            "crypto/engine/libcrypto-lib-tb_rand.o",
            "crypto/engine/libcrypto-lib-tb_rsa.o",
            "crypto/err/libcrypto-lib-err.o",
            "crypto/err/libcrypto-lib-err_all.o",
            "crypto/err/libcrypto-lib-err_all_legacy.o",
            "crypto/err/libcrypto-lib-err_blocks.o",
            "crypto/err/libcrypto-lib-err_prn.o",
            "crypto/ess/libcrypto-lib-ess_asn1.o",
            "crypto/ess/libcrypto-lib-ess_err.o",
            "crypto/ess/libcrypto-lib-ess_lib.o",
            "crypto/evp/libcrypto-lib-asymcipher.o",
            "crypto/evp/libcrypto-lib-bio_b64.o",
            "crypto/evp/libcrypto-lib-bio_enc.o",
            "crypto/evp/libcrypto-lib-bio_md.o",
            "crypto/evp/libcrypto-lib-bio_ok.o",
            "crypto/evp/libcrypto-lib-c_allc.o",
            "crypto/evp/libcrypto-lib-c_alld.o",
            "crypto/evp/libcrypto-lib-cmeth_lib.o",
            "crypto/evp/libcrypto-lib-ctrl_params_translate.o",
            "crypto/evp/libcrypto-lib-dh_ctrl.o",
            "crypto/evp/libcrypto-lib-dh_support.o",
            "crypto/evp/libcrypto-lib-digest.o",
            "crypto/evp/libcrypto-lib-dsa_ctrl.o",
            "crypto/evp/libcrypto-lib-e_aes.o",
            "crypto/evp/libcrypto-lib-e_aes_cbc_hmac_sha1.o",
            "crypto/evp/libcrypto-lib-e_aes_cbc_hmac_sha256.o",
            "crypto/evp/libcrypto-lib-e_aria.o",
            "crypto/evp/libcrypto-lib-e_bf.o",
            "crypto/evp/libcrypto-lib-e_camellia.o",
            "crypto/evp/libcrypto-lib-e_cast.o",
            "crypto/evp/libcrypto-lib-e_chacha20_poly1305.o",
            "crypto/evp/libcrypto-lib-e_des.o",
            "crypto/evp/libcrypto-lib-e_des3.o",
            "crypto/evp/libcrypto-lib-e_idea.o",
            "crypto/evp/libcrypto-lib-e_null.o",
            "crypto/evp/libcrypto-lib-e_old.o",
            "crypto/evp/libcrypto-lib-e_rc2.o",
            "crypto/evp/libcrypto-lib-e_rc4.o",
            "crypto/evp/libcrypto-lib-e_rc4_hmac_md5.o",
            "crypto/evp/libcrypto-lib-e_rc5.o",
            "crypto/evp/libcrypto-lib-e_seed.o",
            "crypto/evp/libcrypto-lib-e_sm4.o",
            "crypto/evp/libcrypto-lib-e_xcbc_d.o",
            "crypto/evp/libcrypto-lib-ec_ctrl.o",
            "crypto/evp/libcrypto-lib-ec_support.o",
            "crypto/evp/libcrypto-lib-encode.o",
            "crypto/evp/libcrypto-lib-evp_cnf.o",
            "crypto/evp/libcrypto-lib-evp_enc.o",
            "crypto/evp/libcrypto-lib-evp_err.o",
            "crypto/evp/libcrypto-lib-evp_fetch.o",
            "crypto/evp/libcrypto-lib-evp_key.o",
            "crypto/evp/libcrypto-lib-evp_lib.o",
            "crypto/evp/libcrypto-lib-evp_pbe.o",
            "crypto/evp/libcrypto-lib-evp_pkey.o",
            "crypto/evp/libcrypto-lib-evp_rand.o",
            "crypto/evp/libcrypto-lib-evp_utils.o",
            "crypto/evp/libcrypto-lib-exchange.o",
            "crypto/evp/libcrypto-lib-kdf_lib.o",
            "crypto/evp/libcrypto-lib-kdf_meth.o",
            "crypto/evp/libcrypto-lib-kem.o",
            "crypto/evp/libcrypto-lib-keymgmt_lib.o",
            "crypto/evp/libcrypto-lib-keymgmt_meth.o",
            "crypto/evp/libcrypto-lib-legacy_blake2.o",
            "crypto/evp/libcrypto-lib-legacy_md4.o",
            "crypto/evp/libcrypto-lib-legacy_md5.o",
            "crypto/evp/libcrypto-lib-legacy_md5_sha1.o",
            "crypto/evp/libcrypto-lib-legacy_mdc2.o",
            "crypto/evp/libcrypto-lib-legacy_ripemd.o",
            "crypto/evp/libcrypto-lib-legacy_sha.o",
            "crypto/evp/libcrypto-lib-legacy_wp.o",
            "crypto/evp/libcrypto-lib-m_null.o",
            "crypto/evp/libcrypto-lib-m_sigver.o",
            "crypto/evp/libcrypto-lib-mac_lib.o",
            "crypto/evp/libcrypto-lib-mac_meth.o",
            "crypto/evp/libcrypto-lib-names.o",
            "crypto/evp/libcrypto-lib-p5_crpt.o",
            "crypto/evp/libcrypto-lib-p5_crpt2.o",
            "crypto/evp/libcrypto-lib-p_dec.o",
            "crypto/evp/libcrypto-lib-p_enc.o",
            "crypto/evp/libcrypto-lib-p_legacy.o",
            "crypto/evp/libcrypto-lib-p_lib.o",
            "crypto/evp/libcrypto-lib-p_open.o",
            "crypto/evp/libcrypto-lib-p_seal.o",
            "crypto/evp/libcrypto-lib-p_sign.o",
            "crypto/evp/libcrypto-lib-p_verify.o",
            "crypto/evp/libcrypto-lib-pbe_scrypt.o",
            "crypto/evp/libcrypto-lib-pmeth_check.o",
            "crypto/evp/libcrypto-lib-pmeth_gn.o",
            "crypto/evp/libcrypto-lib-pmeth_lib.o",
            "crypto/evp/libcrypto-lib-signature.o",
            "crypto/ffc/libcrypto-lib-ffc_backend.o",
            "crypto/ffc/libcrypto-lib-ffc_dh.o",
            "crypto/ffc/libcrypto-lib-ffc_key_generate.o",
            "crypto/ffc/libcrypto-lib-ffc_key_validate.o",
            "crypto/ffc/libcrypto-lib-ffc_params.o",
            "crypto/ffc/libcrypto-lib-ffc_params_generate.o",
            "crypto/ffc/libcrypto-lib-ffc_params_validate.o",
            "crypto/hmac/libcrypto-lib-hmac.o",
            "crypto/http/libcrypto-lib-http_client.o",
            "crypto/http/libcrypto-lib-http_err.o",
            "crypto/http/libcrypto-lib-http_lib.o",
            "crypto/idea/libcrypto-lib-i_cbc.o",
            "crypto/idea/libcrypto-lib-i_cfb64.o",
            "crypto/idea/libcrypto-lib-i_ecb.o",
            "crypto/idea/libcrypto-lib-i_ofb64.o",
            "crypto/idea/libcrypto-lib-i_skey.o",
            "crypto/kdf/libcrypto-lib-kdf_err.o",
            "crypto/lhash/libcrypto-lib-lh_stats.o",
            "crypto/lhash/libcrypto-lib-lhash.o",
            "crypto/libcrypto-lib-asn1_dsa.o",
            "crypto/libcrypto-lib-bsearch.o",
            "crypto/libcrypto-lib-context.o",
            "crypto/libcrypto-lib-core_algorithm.o",
            "crypto/libcrypto-lib-core_fetch.o",
            "crypto/libcrypto-lib-core_namemap.o",
            "crypto/libcrypto-lib-cpt_err.o",
            "crypto/libcrypto-lib-cpuid.o",
            "crypto/libcrypto-lib-cryptlib.o",
            "crypto/libcrypto-lib-ctype.o",
            "crypto/libcrypto-lib-cversion.o",
            "crypto/libcrypto-lib-der_writer.o",
            "crypto/libcrypto-lib-ebcdic.o",
            "crypto/libcrypto-lib-ex_data.o",
            "crypto/libcrypto-lib-getenv.o",
            "crypto/libcrypto-lib-info.o",
            "crypto/libcrypto-lib-init.o",
            "crypto/libcrypto-lib-initthread.o",
            "crypto/libcrypto-lib-mem.o",
            "crypto/libcrypto-lib-mem_sec.o",
            "crypto/libcrypto-lib-o_dir.o",
            "crypto/libcrypto-lib-o_fopen.o",
            "crypto/libcrypto-lib-o_init.o",
            "crypto/libcrypto-lib-o_str.o",
            "crypto/libcrypto-lib-o_time.o",
            "crypto/libcrypto-lib-packet.o",
            "crypto/libcrypto-lib-param_build.o",
            "crypto/libcrypto-lib-param_build_set.o",
            "crypto/libcrypto-lib-params.o",
            "crypto/libcrypto-lib-params_dup.o",
            "crypto/libcrypto-lib-params_from_text.o",
            "crypto/libcrypto-lib-passphrase.o",
            "crypto/libcrypto-lib-provider.o",
            "crypto/libcrypto-lib-provider_child.o",
            "crypto/libcrypto-lib-provider_conf.o",
            "crypto/libcrypto-lib-provider_core.o",
            "crypto/libcrypto-lib-provider_predefined.o",
            "crypto/libcrypto-lib-punycode.o",
            "crypto/libcrypto-lib-self_test_core.o",
            "crypto/libcrypto-lib-sparse_array.o",
            "crypto/libcrypto-lib-threads_lib.o",
            "crypto/libcrypto-lib-threads_none.o",
            "crypto/libcrypto-lib-threads_pthread.o",
            "crypto/libcrypto-lib-threads_win.o",
            "crypto/libcrypto-lib-trace.o",
            "crypto/libcrypto-lib-uid.o",
            "crypto/libcrypto-lib-x86_64cpuid.o",
            "crypto/md4/libcrypto-lib-md4_dgst.o",
            "crypto/md4/libcrypto-lib-md4_one.o",
            "crypto/md5/libcrypto-lib-md5-x86_64.o",
            "crypto/md5/libcrypto-lib-md5_dgst.o",
            "crypto/md5/libcrypto-lib-md5_one.o",
            "crypto/md5/libcrypto-lib-md5_sha1.o",
            "crypto/mdc2/libcrypto-lib-mdc2_one.o",
            "crypto/mdc2/libcrypto-lib-mdc2dgst.o",
            "crypto/modes/libcrypto-lib-aesni-gcm-x86_64.o",
            "crypto/modes/libcrypto-lib-cbc128.o",
            "crypto/modes/libcrypto-lib-ccm128.o",
            "crypto/modes/libcrypto-lib-cfb128.o",
            "crypto/modes/libcrypto-lib-ctr128.o",
            "crypto/modes/libcrypto-lib-cts128.o",
            "crypto/modes/libcrypto-lib-gcm128.o",
            "crypto/modes/libcrypto-lib-ghash-x86_64.o",
            "crypto/modes/libcrypto-lib-ocb128.o",
            "crypto/modes/libcrypto-lib-ofb128.o",
            "crypto/modes/libcrypto-lib-siv128.o",
            "crypto/modes/libcrypto-lib-wrap128.o",
            "crypto/modes/libcrypto-lib-xts128.o",
            "crypto/objects/libcrypto-lib-o_names.o",
            "crypto/objects/libcrypto-lib-obj_dat.o",
            "crypto/objects/libcrypto-lib-obj_err.o",
            "crypto/objects/libcrypto-lib-obj_lib.o",
            "crypto/objects/libcrypto-lib-obj_xref.o",
            "crypto/ocsp/libcrypto-lib-ocsp_asn.o",
            "crypto/ocsp/libcrypto-lib-ocsp_cl.o",
            "crypto/ocsp/libcrypto-lib-ocsp_err.o",
            "crypto/ocsp/libcrypto-lib-ocsp_ext.o",
            "crypto/ocsp/libcrypto-lib-ocsp_http.o",
            "crypto/ocsp/libcrypto-lib-ocsp_lib.o",
            "crypto/ocsp/libcrypto-lib-ocsp_prn.o",
            "crypto/ocsp/libcrypto-lib-ocsp_srv.o",
            "crypto/ocsp/libcrypto-lib-ocsp_vfy.o",
            "crypto/ocsp/libcrypto-lib-v3_ocsp.o",
            "crypto/pem/libcrypto-lib-pem_all.o",
            "crypto/pem/libcrypto-lib-pem_err.o",
            "crypto/pem/libcrypto-lib-pem_info.o",
            "crypto/pem/libcrypto-lib-pem_lib.o",
            "crypto/pem/libcrypto-lib-pem_oth.o",
            "crypto/pem/libcrypto-lib-pem_pk8.o",
            "crypto/pem/libcrypto-lib-pem_pkey.o",
            "crypto/pem/libcrypto-lib-pem_sign.o",
            "crypto/pem/libcrypto-lib-pem_x509.o",
            "crypto/pem/libcrypto-lib-pem_xaux.o",
            "crypto/pem/libcrypto-lib-pvkfmt.o",
            "crypto/pkcs12/libcrypto-lib-p12_add.o",
            "crypto/pkcs12/libcrypto-lib-p12_asn.o",
            "crypto/pkcs12/libcrypto-lib-p12_attr.o",
            "crypto/pkcs12/libcrypto-lib-p12_crpt.o",
            "crypto/pkcs12/libcrypto-lib-p12_crt.o",
            "crypto/pkcs12/libcrypto-lib-p12_decr.o",
            "crypto/pkcs12/libcrypto-lib-p12_init.o",
            "crypto/pkcs12/libcrypto-lib-p12_key.o",
            "crypto/pkcs12/libcrypto-lib-p12_kiss.o",
            "crypto/pkcs12/libcrypto-lib-p12_mutl.o",
            "crypto/pkcs12/libcrypto-lib-p12_npas.o",
            "crypto/pkcs12/libcrypto-lib-p12_p8d.o",
            "crypto/pkcs12/libcrypto-lib-p12_p8e.o",
            "crypto/pkcs12/libcrypto-lib-p12_sbag.o",
            "crypto/pkcs12/libcrypto-lib-p12_utl.o",
            "crypto/pkcs12/libcrypto-lib-pk12err.o",
            "crypto/pkcs7/libcrypto-lib-bio_pk7.o",
            "crypto/pkcs7/libcrypto-lib-pk7_asn1.o",
            "crypto/pkcs7/libcrypto-lib-pk7_attr.o",
            "crypto/pkcs7/libcrypto-lib-pk7_doit.o",
            "crypto/pkcs7/libcrypto-lib-pk7_lib.o",
            "crypto/pkcs7/libcrypto-lib-pk7_mime.o",
            "crypto/pkcs7/libcrypto-lib-pk7_smime.o",
            "crypto/pkcs7/libcrypto-lib-pkcs7err.o",
            "crypto/poly1305/libcrypto-lib-poly1305-x86_64.o",
            "crypto/poly1305/libcrypto-lib-poly1305.o",
            "crypto/property/libcrypto-lib-defn_cache.o",
            "crypto/property/libcrypto-lib-property.o",
            "crypto/property/libcrypto-lib-property_err.o",
            "crypto/property/libcrypto-lib-property_parse.o",
            "crypto/property/libcrypto-lib-property_query.o",
            "crypto/property/libcrypto-lib-property_string.o",
            "crypto/rand/libcrypto-lib-prov_seed.o",
            "crypto/rand/libcrypto-lib-rand_deprecated.o",
            "crypto/rand/libcrypto-lib-rand_err.o",
            "crypto/rand/libcrypto-lib-rand_lib.o",
            "crypto/rand/libcrypto-lib-rand_meth.o",
            "crypto/rand/libcrypto-lib-rand_pool.o",
            "crypto/rand/libcrypto-lib-randfile.o",
            "crypto/rc2/libcrypto-lib-rc2_cbc.o",
            "crypto/rc2/libcrypto-lib-rc2_ecb.o",
            "crypto/rc2/libcrypto-lib-rc2_skey.o",
            "crypto/rc2/libcrypto-lib-rc2cfb64.o",
            "crypto/rc2/libcrypto-lib-rc2ofb64.o",
            "crypto/rc4/libcrypto-lib-rc4-md5-x86_64.o",
            "crypto/rc4/libcrypto-lib-rc4-x86_64.o",
            "crypto/ripemd/libcrypto-lib-rmd_dgst.o",
            "crypto/ripemd/libcrypto-lib-rmd_one.o",
            "crypto/rsa/libcrypto-lib-rsa_ameth.o",
            "crypto/rsa/libcrypto-lib-rsa_asn1.o",
            "crypto/rsa/libcrypto-lib-rsa_backend.o",
            "crypto/rsa/libcrypto-lib-rsa_chk.o",
            "crypto/rsa/libcrypto-lib-rsa_crpt.o",
            "crypto/rsa/libcrypto-lib-rsa_depr.o",
            "crypto/rsa/libcrypto-lib-rsa_err.o",
            "crypto/rsa/libcrypto-lib-rsa_gen.o",
            "crypto/rsa/libcrypto-lib-rsa_lib.o",
            "crypto/rsa/libcrypto-lib-rsa_meth.o",
            "crypto/rsa/libcrypto-lib-rsa_mp.o",
            "crypto/rsa/libcrypto-lib-rsa_mp_names.o",
            "crypto/rsa/libcrypto-lib-rsa_none.o",
            "crypto/rsa/libcrypto-lib-rsa_oaep.o",
            "crypto/rsa/libcrypto-lib-rsa_ossl.o",
            "crypto/rsa/libcrypto-lib-rsa_pk1.o",
            "crypto/rsa/libcrypto-lib-rsa_pmeth.o",
            "crypto/rsa/libcrypto-lib-rsa_prn.o",
            "crypto/rsa/libcrypto-lib-rsa_pss.o",
            "crypto/rsa/libcrypto-lib-rsa_saos.o",
            "crypto/rsa/libcrypto-lib-rsa_schemes.o",
            "crypto/rsa/libcrypto-lib-rsa_sign.o",
            "crypto/rsa/libcrypto-lib-rsa_sp800_56b_check.o",
            "crypto/rsa/libcrypto-lib-rsa_sp800_56b_gen.o",
            "crypto/rsa/libcrypto-lib-rsa_x931.o",
            "crypto/rsa/libcrypto-lib-rsa_x931g.o",
            "crypto/seed/libcrypto-lib-seed.o",
            "crypto/seed/libcrypto-lib-seed_cbc.o",
            "crypto/seed/libcrypto-lib-seed_cfb.o",
            "crypto/seed/libcrypto-lib-seed_ecb.o",
            "crypto/seed/libcrypto-lib-seed_ofb.o",
            "crypto/sha/libcrypto-lib-keccak1600-x86_64.o",
            "crypto/sha/libcrypto-lib-sha1-mb-x86_64.o",
            "crypto/sha/libcrypto-lib-sha1-x86_64.o",
            "crypto/sha/libcrypto-lib-sha1_one.o",
            "crypto/sha/libcrypto-lib-sha1dgst.o",
            "crypto/sha/libcrypto-lib-sha256-mb-x86_64.o",
            "crypto/sha/libcrypto-lib-sha256-x86_64.o",
            "crypto/sha/libcrypto-lib-sha256.o",
            "crypto/sha/libcrypto-lib-sha3.o",
            "crypto/sha/libcrypto-lib-sha512-x86_64.o",
            "crypto/sha/libcrypto-lib-sha512.o",
            "crypto/siphash/libcrypto-lib-siphash.o",
            "crypto/sm2/libcrypto-lib-sm2_crypt.o",
            "crypto/sm2/libcrypto-lib-sm2_err.o",
            "crypto/sm2/libcrypto-lib-sm2_key.o",
            "crypto/sm2/libcrypto-lib-sm2_sign.o",
            "crypto/sm3/libcrypto-lib-legacy_sm3.o",
            "crypto/sm3/libcrypto-lib-sm3.o",
            "crypto/sm4/libcrypto-lib-sm4.o",
            "crypto/srp/libcrypto-lib-srp_lib.o",
            "crypto/srp/libcrypto-lib-srp_vfy.o",
            "crypto/stack/libcrypto-lib-stack.o",
            "crypto/store/libcrypto-lib-store_err.o",
            "crypto/store/libcrypto-lib-store_init.o",
            "crypto/store/libcrypto-lib-store_lib.o",
            "crypto/store/libcrypto-lib-store_meth.o",
            "crypto/store/libcrypto-lib-store_register.o",
            "crypto/store/libcrypto-lib-store_result.o",
            "crypto/store/libcrypto-lib-store_strings.o",
            "crypto/ts/libcrypto-lib-ts_asn1.o",
            "crypto/ts/libcrypto-lib-ts_conf.o",
            "crypto/ts/libcrypto-lib-ts_err.o",
            "crypto/ts/libcrypto-lib-ts_lib.o",
            "crypto/ts/libcrypto-lib-ts_req_print.o",
            "crypto/ts/libcrypto-lib-ts_req_utils.o",
            "crypto/ts/libcrypto-lib-ts_rsp_print.o",
            "crypto/ts/libcrypto-lib-ts_rsp_sign.o",
            "crypto/ts/libcrypto-lib-ts_rsp_utils.o",
            "crypto/ts/libcrypto-lib-ts_rsp_verify.o",
            "crypto/ts/libcrypto-lib-ts_verify_ctx.o",
            "crypto/txt_db/libcrypto-lib-txt_db.o",
            "crypto/ui/libcrypto-lib-ui_err.o",
            "crypto/ui/libcrypto-lib-ui_lib.o",
            "crypto/ui/libcrypto-lib-ui_null.o",
            "crypto/ui/libcrypto-lib-ui_openssl.o",
            "crypto/ui/libcrypto-lib-ui_util.o",
            "crypto/whrlpool/libcrypto-lib-wp-x86_64.o",
            "crypto/whrlpool/libcrypto-lib-wp_dgst.o",
            "crypto/x509/libcrypto-lib-by_dir.o",
            "crypto/x509/libcrypto-lib-by_file.o",
            "crypto/x509/libcrypto-lib-by_store.o",
            "crypto/x509/libcrypto-lib-pcy_cache.o",
            "crypto/x509/libcrypto-lib-pcy_data.o",
            "crypto/x509/libcrypto-lib-pcy_lib.o",
            "crypto/x509/libcrypto-lib-pcy_map.o",
            "crypto/x509/libcrypto-lib-pcy_node.o",
            "crypto/x509/libcrypto-lib-pcy_tree.o",
            "crypto/x509/libcrypto-lib-t_crl.o",
            "crypto/x509/libcrypto-lib-t_req.o",
            "crypto/x509/libcrypto-lib-t_x509.o",
            "crypto/x509/libcrypto-lib-v3_addr.o",
            "crypto/x509/libcrypto-lib-v3_admis.o",
            "crypto/x509/libcrypto-lib-v3_akeya.o",
            "crypto/x509/libcrypto-lib-v3_akid.o",
            "crypto/x509/libcrypto-lib-v3_asid.o",
            "crypto/x509/libcrypto-lib-v3_bcons.o",
            "crypto/x509/libcrypto-lib-v3_bitst.o",
            "crypto/x509/libcrypto-lib-v3_conf.o",
            "crypto/x509/libcrypto-lib-v3_cpols.o",
            "crypto/x509/libcrypto-lib-v3_crld.o",
            "crypto/x509/libcrypto-lib-v3_enum.o",
            "crypto/x509/libcrypto-lib-v3_extku.o",
            "crypto/x509/libcrypto-lib-v3_genn.o",
            "crypto/x509/libcrypto-lib-v3_ia5.o",
            "crypto/x509/libcrypto-lib-v3_info.o",
            "crypto/x509/libcrypto-lib-v3_int.o",
            "crypto/x509/libcrypto-lib-v3_ist.o",
            "crypto/x509/libcrypto-lib-v3_lib.o",
            "crypto/x509/libcrypto-lib-v3_ncons.o",
            "crypto/x509/libcrypto-lib-v3_pci.o",
            "crypto/x509/libcrypto-lib-v3_pcia.o",
            "crypto/x509/libcrypto-lib-v3_pcons.o",
            "crypto/x509/libcrypto-lib-v3_pku.o",
            "crypto/x509/libcrypto-lib-v3_pmaps.o",
            "crypto/x509/libcrypto-lib-v3_prn.o",
            "crypto/x509/libcrypto-lib-v3_purp.o",
            "crypto/x509/libcrypto-lib-v3_san.o",
            "crypto/x509/libcrypto-lib-v3_skid.o",
            "crypto/x509/libcrypto-lib-v3_sxnet.o",
            "crypto/x509/libcrypto-lib-v3_tlsf.o",
            "crypto/x509/libcrypto-lib-v3_utf8.o",
            "crypto/x509/libcrypto-lib-v3_utl.o",
            "crypto/x509/libcrypto-lib-v3err.o",
            "crypto/x509/libcrypto-lib-x509_att.o",
            "crypto/x509/libcrypto-lib-x509_cmp.o",
            "crypto/x509/libcrypto-lib-x509_d2.o",
            "crypto/x509/libcrypto-lib-x509_def.o",
            "crypto/x509/libcrypto-lib-x509_err.o",
            "crypto/x509/libcrypto-lib-x509_ext.o",
            "crypto/x509/libcrypto-lib-x509_lu.o",
            "crypto/x509/libcrypto-lib-x509_meth.o",
            "crypto/x509/libcrypto-lib-x509_obj.o",
            "crypto/x509/libcrypto-lib-x509_r2x.o",
            "crypto/x509/libcrypto-lib-x509_req.o",
            "crypto/x509/libcrypto-lib-x509_set.o",
            "crypto/x509/libcrypto-lib-x509_trust.o",
            "crypto/x509/libcrypto-lib-x509_txt.o",
            "crypto/x509/libcrypto-lib-x509_v3.o",
            "crypto/x509/libcrypto-lib-x509_vfy.o",
            "crypto/x509/libcrypto-lib-x509_vpm.o",
            "crypto/x509/libcrypto-lib-x509cset.o",
            "crypto/x509/libcrypto-lib-x509name.o",
            "crypto/x509/libcrypto-lib-x509rset.o",
            "crypto/x509/libcrypto-lib-x509spki.o",
            "crypto/x509/libcrypto-lib-x509type.o",
            "crypto/x509/libcrypto-lib-x_all.o",
            "crypto/x509/libcrypto-lib-x_attrib.o",
            "crypto/x509/libcrypto-lib-x_crl.o",
            "crypto/x509/libcrypto-lib-x_exten.o",
            "crypto/x509/libcrypto-lib-x_name.o",
            "crypto/x509/libcrypto-lib-x_pubkey.o",
            "crypto/x509/libcrypto-lib-x_req.o",
            "crypto/x509/libcrypto-lib-x_x509.o",
            "crypto/x509/libcrypto-lib-x_x509a.o",
            "engines/libcrypto-lib-e_capi.o",
            "engines/libcrypto-lib-e_padlock-x86_64.o",
            "engines/libcrypto-lib-e_padlock.o",
            "providers/libcrypto-lib-baseprov.o",
            "providers/libcrypto-lib-defltprov.o",
            "providers/libcrypto-lib-nullprov.o",
            "providers/libcrypto-lib-prov_running.o",
            "providers/libdefault.a"
        ],
        "libssl" => [
            "ssl/libssl-lib-bio_ssl.o",
            "ssl/libssl-lib-d1_lib.o",
            "ssl/libssl-lib-d1_msg.o",
            "ssl/libssl-lib-d1_srtp.o",
            "ssl/libssl-lib-methods.o",
            "ssl/libssl-lib-pqueue.o",
            "ssl/libssl-lib-s3_enc.o",
            "ssl/libssl-lib-s3_lib.o",
            "ssl/libssl-lib-s3_msg.o",
            "ssl/libssl-lib-ssl_asn1.o",
            "ssl/libssl-lib-ssl_cert.o",
            "ssl/libssl-lib-ssl_ciph.o",
            "ssl/libssl-lib-ssl_conf.o",
            "ssl/libssl-lib-ssl_err.o",
            "ssl/libssl-lib-ssl_err_legacy.o",
            "ssl/libssl-lib-ssl_init.o",
            "ssl/libssl-lib-ssl_lib.o",
            "ssl/libssl-lib-ssl_mcnf.o",
            "ssl/libssl-lib-ssl_quic.o",
            "ssl/libssl-lib-ssl_rsa.o",
            "ssl/libssl-lib-ssl_rsa_legacy.o",
            "ssl/libssl-lib-ssl_sess.o",
            "ssl/libssl-lib-ssl_stat.o",
            "ssl/libssl-lib-ssl_txt.o",
            "ssl/libssl-lib-ssl_utst.o",
            "ssl/libssl-lib-t1_enc.o",
            "ssl/libssl-lib-t1_lib.o",
            "ssl/libssl-lib-t1_trce.o",
            "ssl/libssl-lib-tls13_enc.o",
            "ssl/libssl-lib-tls_depr.o",
            "ssl/libssl-lib-tls_srp.o",
            "ssl/record/libssl-lib-dtls1_bitmap.o",
            "ssl/record/libssl-lib-rec_layer_d1.o",
            "ssl/record/libssl-lib-rec_layer_s3.o",
            "ssl/record/libssl-lib-ssl3_buffer.o",
            "ssl/record/libssl-lib-ssl3_record.o",
            "ssl/record/libssl-lib-ssl3_record_tls13.o",
            "ssl/statem/libssl-lib-extensions.o",
            "ssl/statem/libssl-lib-extensions_clnt.o",
            "ssl/statem/libssl-lib-extensions_cust.o",
            "ssl/statem/libssl-lib-extensions_srvr.o",
            "ssl/statem/libssl-lib-statem.o",
            "ssl/statem/libssl-lib-statem_clnt.o",
            "ssl/statem/libssl-lib-statem_dtls.o",
            "ssl/statem/libssl-lib-statem_lib.o",
            "ssl/statem/libssl-lib-statem_quic.o",
            "ssl/statem/libssl-lib-statem_srvr.o"
        ],
        "providers/common/der/libcommon-lib-der_digests_gen.o" => [
            "providers/common/der/der_digests_gen.c"
        ],
        "providers/common/der/libcommon-lib-der_dsa_gen.o" => [
            "providers/common/der/der_dsa_gen.c"
        ],
        "providers/common/der/libcommon-lib-der_dsa_key.o" => [
            "providers/common/der/der_dsa_key.c"
        ],
        "providers/common/der/libcommon-lib-der_dsa_sig.o" => [
            "providers/common/der/der_dsa_sig.c"
        ],
        "providers/common/der/libcommon-lib-der_ec_gen.o" => [
            "providers/common/der/der_ec_gen.c"
        ],
        "providers/common/der/libcommon-lib-der_ec_key.o" => [
            "providers/common/der/der_ec_key.c"
        ],
        "providers/common/der/libcommon-lib-der_ec_sig.o" => [
            "providers/common/der/der_ec_sig.c"
        ],
        "providers/common/der/libcommon-lib-der_ecx_gen.o" => [
            "providers/common/der/der_ecx_gen.c"
        ],
        "providers/common/der/libcommon-lib-der_ecx_key.o" => [
            "providers/common/der/der_ecx_key.c"
        ],
        "providers/common/der/libcommon-lib-der_rsa_gen.o" => [
            "providers/common/der/der_rsa_gen.c"
        ],
        "providers/common/der/libcommon-lib-der_rsa_key.o" => [
            "providers/common/der/der_rsa_key.c"
        ],
        "providers/common/der/libcommon-lib-der_wrap_gen.o" => [
            "providers/common/der/der_wrap_gen.c"
        ],
        "providers/common/der/libdefault-lib-der_rsa_sig.o" => [
            "providers/common/der/der_rsa_sig.c"
        ],
        "providers/common/der/libdefault-lib-der_sm2_gen.o" => [
            "providers/common/der/der_sm2_gen.c"
        ],
        "providers/common/der/libdefault-lib-der_sm2_key.o" => [
            "providers/common/der/der_sm2_key.c"
        ],
        "providers/common/der/libdefault-lib-der_sm2_sig.o" => [
            "providers/common/der/der_sm2_sig.c"
        ],
        "providers/common/der/libfips-lib-der_rsa_sig.o" => [
            "providers/common/der/der_rsa_sig.c"
        ],
        "providers/common/libcommon-lib-provider_ctx.o" => [
            "providers/common/provider_ctx.c"
        ],
        "providers/common/libcommon-lib-provider_err.o" => [
            "providers/common/provider_err.c"
        ],
        "providers/common/libdefault-lib-bio_prov.o" => [
            "providers/common/bio_prov.c"
        ],
        "providers/common/libdefault-lib-capabilities.o" => [
            "providers/common/capabilities.c"
        ],
        "providers/common/libdefault-lib-digest_to_nid.o" => [
            "providers/common/digest_to_nid.c"
        ],
        "providers/common/libdefault-lib-provider_seeding.o" => [
            "providers/common/provider_seeding.c"
        ],
        "providers/common/libdefault-lib-provider_util.o" => [
            "providers/common/provider_util.c"
        ],
        "providers/common/libdefault-lib-securitycheck.o" => [
            "providers/common/securitycheck.c"
        ],
        "providers/common/libdefault-lib-securitycheck_default.o" => [
            "providers/common/securitycheck_default.c"
        ],
        "providers/common/libfips-lib-bio_prov.o" => [
            "providers/common/bio_prov.c"
        ],
        "providers/common/libfips-lib-capabilities.o" => [
            "providers/common/capabilities.c"
        ],
        "providers/common/libfips-lib-digest_to_nid.o" => [
            "providers/common/digest_to_nid.c"
        ],
        "providers/common/libfips-lib-provider_seeding.o" => [
            "providers/common/provider_seeding.c"
        ],
        "providers/common/libfips-lib-provider_util.o" => [
            "providers/common/provider_util.c"
        ],
        "providers/common/libfips-lib-securitycheck.o" => [
            "providers/common/securitycheck.c"
        ],
        "providers/common/libfips-lib-securitycheck_fips.o" => [
            "providers/common/securitycheck_fips.c"
        ],
        "providers/evp_extra_test-bin-legacyprov.o" => [
            "providers/legacyprov.c"
        ],
        "providers/fips" => [
            "providers/fips-dso-fips.res",
            "providers/fips.ld",
            "providers/fips/fips-dso-fips_entry.o"
        ],
        "providers/fips-dso-fips.res" => [
            "providers/fips.rc"
        ],
        "providers/fips/fips-dso-fips_entry.o" => [
            "providers/fips/fips_entry.c"
        ],
        "providers/fips/libfips-lib-fipsprov.o" => [
            "providers/fips/fipsprov.c"
        ],
        "providers/fips/libfips-lib-self_test.o" => [
            "providers/fips/self_test.c"
        ],
        "providers/fips/libfips-lib-self_test_kats.o" => [
            "providers/fips/self_test_kats.c"
        ],
        "providers/implementations/asymciphers/libdefault-lib-rsa_enc.o" => [
            "providers/implementations/asymciphers/rsa_enc.c"
        ],
        "providers/implementations/asymciphers/libdefault-lib-sm2_enc.o" => [
            "providers/implementations/asymciphers/sm2_enc.c"
        ],
        "providers/implementations/asymciphers/libfips-lib-rsa_enc.o" => [
            "providers/implementations/asymciphers/rsa_enc.c"
        ],
        "providers/implementations/ciphers/libcommon-lib-ciphercommon.o" => [
            "providers/implementations/ciphers/ciphercommon.c"
        ],
        "providers/implementations/ciphers/libcommon-lib-ciphercommon_block.o" => [
            "providers/implementations/ciphers/ciphercommon_block.c"
        ],
        "providers/implementations/ciphers/libcommon-lib-ciphercommon_ccm.o" => [
            "providers/implementations/ciphers/ciphercommon_ccm.c"
        ],
        "providers/implementations/ciphers/libcommon-lib-ciphercommon_ccm_hw.o" => [
            "providers/implementations/ciphers/ciphercommon_ccm_hw.c"
        ],
        "providers/implementations/ciphers/libcommon-lib-ciphercommon_gcm.o" => [
            "providers/implementations/ciphers/ciphercommon_gcm.c"
        ],
        "providers/implementations/ciphers/libcommon-lib-ciphercommon_gcm_hw.o" => [
            "providers/implementations/ciphers/ciphercommon_gcm_hw.c"
        ],
        "providers/implementations/ciphers/libcommon-lib-ciphercommon_hw.o" => [
            "providers/implementations/ciphers/ciphercommon_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes.o" => [
            "providers/implementations/ciphers/cipher_aes.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_cbc_hmac_sha.o" => [
            "providers/implementations/ciphers/cipher_aes_cbc_hmac_sha.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_cbc_hmac_sha1_hw.o" => [
            "providers/implementations/ciphers/cipher_aes_cbc_hmac_sha1_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_cbc_hmac_sha256_hw.o" => [
            "providers/implementations/ciphers/cipher_aes_cbc_hmac_sha256_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_ccm.o" => [
            "providers/implementations/ciphers/cipher_aes_ccm.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_ccm_hw.o" => [
            "providers/implementations/ciphers/cipher_aes_ccm_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_gcm.o" => [
            "providers/implementations/ciphers/cipher_aes_gcm.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_gcm_hw.o" => [
            "providers/implementations/ciphers/cipher_aes_gcm_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_hw.o" => [
            "providers/implementations/ciphers/cipher_aes_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_ocb.o" => [
            "providers/implementations/ciphers/cipher_aes_ocb.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_ocb_hw.o" => [
            "providers/implementations/ciphers/cipher_aes_ocb_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_siv.o" => [
            "providers/implementations/ciphers/cipher_aes_siv.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_siv_hw.o" => [
            "providers/implementations/ciphers/cipher_aes_siv_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_wrp.o" => [
            "providers/implementations/ciphers/cipher_aes_wrp.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_xts.o" => [
            "providers/implementations/ciphers/cipher_aes_xts.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_xts_fips.o" => [
            "providers/implementations/ciphers/cipher_aes_xts_fips.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aes_xts_hw.o" => [
            "providers/implementations/ciphers/cipher_aes_xts_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aria.o" => [
            "providers/implementations/ciphers/cipher_aria.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aria_ccm.o" => [
            "providers/implementations/ciphers/cipher_aria_ccm.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aria_ccm_hw.o" => [
            "providers/implementations/ciphers/cipher_aria_ccm_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aria_gcm.o" => [
            "providers/implementations/ciphers/cipher_aria_gcm.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aria_gcm_hw.o" => [
            "providers/implementations/ciphers/cipher_aria_gcm_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_aria_hw.o" => [
            "providers/implementations/ciphers/cipher_aria_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_camellia.o" => [
            "providers/implementations/ciphers/cipher_camellia.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_camellia_hw.o" => [
            "providers/implementations/ciphers/cipher_camellia_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_chacha20.o" => [
            "providers/implementations/ciphers/cipher_chacha20.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_chacha20_hw.o" => [
            "providers/implementations/ciphers/cipher_chacha20_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_chacha20_poly1305.o" => [
            "providers/implementations/ciphers/cipher_chacha20_poly1305.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_chacha20_poly1305_hw.o" => [
            "providers/implementations/ciphers/cipher_chacha20_poly1305_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_cts.o" => [
            "providers/implementations/ciphers/cipher_cts.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_null.o" => [
            "providers/implementations/ciphers/cipher_null.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_sm4.o" => [
            "providers/implementations/ciphers/cipher_sm4.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_sm4_hw.o" => [
            "providers/implementations/ciphers/cipher_sm4_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_tdes.o" => [
            "providers/implementations/ciphers/cipher_tdes.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_tdes_common.o" => [
            "providers/implementations/ciphers/cipher_tdes_common.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_tdes_default.o" => [
            "providers/implementations/ciphers/cipher_tdes_default.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_tdes_default_hw.o" => [
            "providers/implementations/ciphers/cipher_tdes_default_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_tdes_hw.o" => [
            "providers/implementations/ciphers/cipher_tdes_hw.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_tdes_wrap.o" => [
            "providers/implementations/ciphers/cipher_tdes_wrap.c"
        ],
        "providers/implementations/ciphers/libdefault-lib-cipher_tdes_wrap_hw.o" => [
            "providers/implementations/ciphers/cipher_tdes_wrap_hw.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_aes.o" => [
            "providers/implementations/ciphers/cipher_aes.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_aes_cbc_hmac_sha.o" => [
            "providers/implementations/ciphers/cipher_aes_cbc_hmac_sha.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_aes_cbc_hmac_sha1_hw.o" => [
            "providers/implementations/ciphers/cipher_aes_cbc_hmac_sha1_hw.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_aes_cbc_hmac_sha256_hw.o" => [
            "providers/implementations/ciphers/cipher_aes_cbc_hmac_sha256_hw.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_aes_ccm.o" => [
            "providers/implementations/ciphers/cipher_aes_ccm.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_aes_ccm_hw.o" => [
            "providers/implementations/ciphers/cipher_aes_ccm_hw.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_aes_gcm.o" => [
            "providers/implementations/ciphers/cipher_aes_gcm.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_aes_gcm_hw.o" => [
            "providers/implementations/ciphers/cipher_aes_gcm_hw.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_aes_hw.o" => [
            "providers/implementations/ciphers/cipher_aes_hw.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_aes_ocb.o" => [
            "providers/implementations/ciphers/cipher_aes_ocb.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_aes_ocb_hw.o" => [
            "providers/implementations/ciphers/cipher_aes_ocb_hw.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_aes_wrp.o" => [
            "providers/implementations/ciphers/cipher_aes_wrp.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_aes_xts.o" => [
            "providers/implementations/ciphers/cipher_aes_xts.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_aes_xts_fips.o" => [
            "providers/implementations/ciphers/cipher_aes_xts_fips.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_aes_xts_hw.o" => [
            "providers/implementations/ciphers/cipher_aes_xts_hw.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_cts.o" => [
            "providers/implementations/ciphers/cipher_cts.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_tdes.o" => [
            "providers/implementations/ciphers/cipher_tdes.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_tdes_common.o" => [
            "providers/implementations/ciphers/cipher_tdes_common.c"
        ],
        "providers/implementations/ciphers/libfips-lib-cipher_tdes_hw.o" => [
            "providers/implementations/ciphers/cipher_tdes_hw.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_blowfish.o" => [
            "providers/implementations/ciphers/cipher_blowfish.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_blowfish_hw.o" => [
            "providers/implementations/ciphers/cipher_blowfish_hw.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_cast5.o" => [
            "providers/implementations/ciphers/cipher_cast5.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_cast5_hw.o" => [
            "providers/implementations/ciphers/cipher_cast5_hw.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_des.o" => [
            "providers/implementations/ciphers/cipher_des.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_des_hw.o" => [
            "providers/implementations/ciphers/cipher_des_hw.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_desx.o" => [
            "providers/implementations/ciphers/cipher_desx.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_desx_hw.o" => [
            "providers/implementations/ciphers/cipher_desx_hw.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_idea.o" => [
            "providers/implementations/ciphers/cipher_idea.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_idea_hw.o" => [
            "providers/implementations/ciphers/cipher_idea_hw.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_rc2.o" => [
            "providers/implementations/ciphers/cipher_rc2.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_rc2_hw.o" => [
            "providers/implementations/ciphers/cipher_rc2_hw.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_rc4.o" => [
            "providers/implementations/ciphers/cipher_rc4.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_rc4_hmac_md5.o" => [
            "providers/implementations/ciphers/cipher_rc4_hmac_md5.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_rc4_hmac_md5_hw.o" => [
            "providers/implementations/ciphers/cipher_rc4_hmac_md5_hw.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_rc4_hw.o" => [
            "providers/implementations/ciphers/cipher_rc4_hw.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_seed.o" => [
            "providers/implementations/ciphers/cipher_seed.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_seed_hw.o" => [
            "providers/implementations/ciphers/cipher_seed_hw.c"
        ],
        "providers/implementations/ciphers/liblegacy-lib-cipher_tdes_common.o" => [
            "providers/implementations/ciphers/cipher_tdes_common.c"
        ],
        "providers/implementations/digests/libcommon-lib-digestcommon.o" => [
            "providers/implementations/digests/digestcommon.c"
        ],
        "providers/implementations/digests/libdefault-lib-blake2_prov.o" => [
            "providers/implementations/digests/blake2_prov.c"
        ],
        "providers/implementations/digests/libdefault-lib-blake2b_prov.o" => [
            "providers/implementations/digests/blake2b_prov.c"
        ],
        "providers/implementations/digests/libdefault-lib-blake2s_prov.o" => [
            "providers/implementations/digests/blake2s_prov.c"
        ],
        "providers/implementations/digests/libdefault-lib-md5_prov.o" => [
            "providers/implementations/digests/md5_prov.c"
        ],
        "providers/implementations/digests/libdefault-lib-md5_sha1_prov.o" => [
            "providers/implementations/digests/md5_sha1_prov.c"
        ],
        "providers/implementations/digests/libdefault-lib-null_prov.o" => [
            "providers/implementations/digests/null_prov.c"
        ],
        "providers/implementations/digests/libdefault-lib-ripemd_prov.o" => [
            "providers/implementations/digests/ripemd_prov.c"
        ],
        "providers/implementations/digests/libdefault-lib-sha2_prov.o" => [
            "providers/implementations/digests/sha2_prov.c"
        ],
        "providers/implementations/digests/libdefault-lib-sha3_prov.o" => [
            "providers/implementations/digests/sha3_prov.c"
        ],
        "providers/implementations/digests/libdefault-lib-sm3_prov.o" => [
            "providers/implementations/digests/sm3_prov.c"
        ],
        "providers/implementations/digests/libfips-lib-sha2_prov.o" => [
            "providers/implementations/digests/sha2_prov.c"
        ],
        "providers/implementations/digests/libfips-lib-sha3_prov.o" => [
            "providers/implementations/digests/sha3_prov.c"
        ],
        "providers/implementations/digests/liblegacy-lib-md4_prov.o" => [
            "providers/implementations/digests/md4_prov.c"
        ],
        "providers/implementations/digests/liblegacy-lib-mdc2_prov.o" => [
            "providers/implementations/digests/mdc2_prov.c"
        ],
        "providers/implementations/digests/liblegacy-lib-ripemd_prov.o" => [
            "providers/implementations/digests/ripemd_prov.c"
        ],
        "providers/implementations/digests/liblegacy-lib-wp_prov.o" => [
            "providers/implementations/digests/wp_prov.c"
        ],
        "providers/implementations/encode_decode/libdefault-lib-decode_der2key.o" => [
            "providers/implementations/encode_decode/decode_der2key.c"
        ],
        "providers/implementations/encode_decode/libdefault-lib-decode_epki2pki.o" => [
            "providers/implementations/encode_decode/decode_epki2pki.c"
        ],
        "providers/implementations/encode_decode/libdefault-lib-decode_msblob2key.o" => [
            "providers/implementations/encode_decode/decode_msblob2key.c"
        ],
        "providers/implementations/encode_decode/libdefault-lib-decode_pem2der.o" => [
            "providers/implementations/encode_decode/decode_pem2der.c"
        ],
        "providers/implementations/encode_decode/libdefault-lib-decode_pvk2key.o" => [
            "providers/implementations/encode_decode/decode_pvk2key.c"
        ],
        "providers/implementations/encode_decode/libdefault-lib-decode_spki2typespki.o" => [
            "providers/implementations/encode_decode/decode_spki2typespki.c"
        ],
        "providers/implementations/encode_decode/libdefault-lib-encode_key2any.o" => [
            "providers/implementations/encode_decode/encode_key2any.c"
        ],
        "providers/implementations/encode_decode/libdefault-lib-encode_key2blob.o" => [
            "providers/implementations/encode_decode/encode_key2blob.c"
        ],
        "providers/implementations/encode_decode/libdefault-lib-encode_key2ms.o" => [
            "providers/implementations/encode_decode/encode_key2ms.c"
        ],
        "providers/implementations/encode_decode/libdefault-lib-encode_key2text.o" => [
            "providers/implementations/encode_decode/encode_key2text.c"
        ],
        "providers/implementations/encode_decode/libdefault-lib-endecoder_common.o" => [
            "providers/implementations/encode_decode/endecoder_common.c"
        ],
        "providers/implementations/exchange/libdefault-lib-dh_exch.o" => [
            "providers/implementations/exchange/dh_exch.c"
        ],
        "providers/implementations/exchange/libdefault-lib-ecdh_exch.o" => [
            "providers/implementations/exchange/ecdh_exch.c"
        ],
        "providers/implementations/exchange/libdefault-lib-ecx_exch.o" => [
            "providers/implementations/exchange/ecx_exch.c"
        ],
        "providers/implementations/exchange/libdefault-lib-kdf_exch.o" => [
            "providers/implementations/exchange/kdf_exch.c"
        ],
        "providers/implementations/exchange/libfips-lib-dh_exch.o" => [
            "providers/implementations/exchange/dh_exch.c"
        ],
        "providers/implementations/exchange/libfips-lib-ecdh_exch.o" => [
            "providers/implementations/exchange/ecdh_exch.c"
        ],
        "providers/implementations/exchange/libfips-lib-ecx_exch.o" => [
            "providers/implementations/exchange/ecx_exch.c"
        ],
        "providers/implementations/exchange/libfips-lib-kdf_exch.o" => [
            "providers/implementations/exchange/kdf_exch.c"
        ],
        "providers/implementations/kdfs/libdefault-lib-hkdf.o" => [
            "providers/implementations/kdfs/hkdf.c"
        ],
        "providers/implementations/kdfs/libdefault-lib-kbkdf.o" => [
            "providers/implementations/kdfs/kbkdf.c"
        ],
        "providers/implementations/kdfs/libdefault-lib-krb5kdf.o" => [
            "providers/implementations/kdfs/krb5kdf.c"
        ],
        "providers/implementations/kdfs/libdefault-lib-pbkdf2.o" => [
            "providers/implementations/kdfs/pbkdf2.c"
        ],
        "providers/implementations/kdfs/libdefault-lib-pbkdf2_fips.o" => [
            "providers/implementations/kdfs/pbkdf2_fips.c"
        ],
        "providers/implementations/kdfs/libdefault-lib-pkcs12kdf.o" => [
            "providers/implementations/kdfs/pkcs12kdf.c"
        ],
        "providers/implementations/kdfs/libdefault-lib-scrypt.o" => [
            "providers/implementations/kdfs/scrypt.c"
        ],
        "providers/implementations/kdfs/libdefault-lib-sshkdf.o" => [
            "providers/implementations/kdfs/sshkdf.c"
        ],
        "providers/implementations/kdfs/libdefault-lib-sskdf.o" => [
            "providers/implementations/kdfs/sskdf.c"
        ],
        "providers/implementations/kdfs/libdefault-lib-tls1_prf.o" => [
            "providers/implementations/kdfs/tls1_prf.c"
        ],
        "providers/implementations/kdfs/libdefault-lib-x942kdf.o" => [
            "providers/implementations/kdfs/x942kdf.c"
        ],
        "providers/implementations/kdfs/libfips-lib-hkdf.o" => [
            "providers/implementations/kdfs/hkdf.c"
        ],
        "providers/implementations/kdfs/libfips-lib-kbkdf.o" => [
            "providers/implementations/kdfs/kbkdf.c"
        ],
        "providers/implementations/kdfs/libfips-lib-pbkdf2.o" => [
            "providers/implementations/kdfs/pbkdf2.c"
        ],
        "providers/implementations/kdfs/libfips-lib-pbkdf2_fips.o" => [
            "providers/implementations/kdfs/pbkdf2_fips.c"
        ],
        "providers/implementations/kdfs/libfips-lib-sshkdf.o" => [
            "providers/implementations/kdfs/sshkdf.c"
        ],
        "providers/implementations/kdfs/libfips-lib-sskdf.o" => [
            "providers/implementations/kdfs/sskdf.c"
        ],
        "providers/implementations/kdfs/libfips-lib-tls1_prf.o" => [
            "providers/implementations/kdfs/tls1_prf.c"
        ],
        "providers/implementations/kdfs/libfips-lib-x942kdf.o" => [
            "providers/implementations/kdfs/x942kdf.c"
        ],
        "providers/implementations/kdfs/liblegacy-lib-pbkdf1.o" => [
            "providers/implementations/kdfs/pbkdf1.c"
        ],
        "providers/implementations/kem/libdefault-lib-rsa_kem.o" => [
            "providers/implementations/kem/rsa_kem.c"
        ],
        "providers/implementations/kem/libfips-lib-rsa_kem.o" => [
            "providers/implementations/kem/rsa_kem.c"
        ],
        "providers/implementations/keymgmt/libdefault-lib-dh_kmgmt.o" => [
            "providers/implementations/keymgmt/dh_kmgmt.c"
        ],
        "providers/implementations/keymgmt/libdefault-lib-dsa_kmgmt.o" => [
            "providers/implementations/keymgmt/dsa_kmgmt.c"
        ],
        "providers/implementations/keymgmt/libdefault-lib-ec_kmgmt.o" => [
            "providers/implementations/keymgmt/ec_kmgmt.c"
        ],
        "providers/implementations/keymgmt/libdefault-lib-ecx_kmgmt.o" => [
            "providers/implementations/keymgmt/ecx_kmgmt.c"
        ],
        "providers/implementations/keymgmt/libdefault-lib-kdf_legacy_kmgmt.o" => [
            "providers/implementations/keymgmt/kdf_legacy_kmgmt.c"
        ],
        "providers/implementations/keymgmt/libdefault-lib-mac_legacy_kmgmt.o" => [
            "providers/implementations/keymgmt/mac_legacy_kmgmt.c"
        ],
        "providers/implementations/keymgmt/libdefault-lib-rsa_kmgmt.o" => [
            "providers/implementations/keymgmt/rsa_kmgmt.c"
        ],
        "providers/implementations/keymgmt/libfips-lib-dh_kmgmt.o" => [
            "providers/implementations/keymgmt/dh_kmgmt.c"
        ],
        "providers/implementations/keymgmt/libfips-lib-dsa_kmgmt.o" => [
            "providers/implementations/keymgmt/dsa_kmgmt.c"
        ],
        "providers/implementations/keymgmt/libfips-lib-ec_kmgmt.o" => [
            "providers/implementations/keymgmt/ec_kmgmt.c"
        ],
        "providers/implementations/keymgmt/libfips-lib-ecx_kmgmt.o" => [
            "providers/implementations/keymgmt/ecx_kmgmt.c"
        ],
        "providers/implementations/keymgmt/libfips-lib-kdf_legacy_kmgmt.o" => [
            "providers/implementations/keymgmt/kdf_legacy_kmgmt.c"
        ],
        "providers/implementations/keymgmt/libfips-lib-mac_legacy_kmgmt.o" => [
            "providers/implementations/keymgmt/mac_legacy_kmgmt.c"
        ],
        "providers/implementations/keymgmt/libfips-lib-rsa_kmgmt.o" => [
            "providers/implementations/keymgmt/rsa_kmgmt.c"
        ],
        "providers/implementations/macs/libdefault-lib-blake2b_mac.o" => [
            "providers/implementations/macs/blake2b_mac.c"
        ],
        "providers/implementations/macs/libdefault-lib-blake2s_mac.o" => [
            "providers/implementations/macs/blake2s_mac.c"
        ],
        "providers/implementations/macs/libdefault-lib-cmac_prov.o" => [
            "providers/implementations/macs/cmac_prov.c"
        ],
        "providers/implementations/macs/libdefault-lib-gmac_prov.o" => [
            "providers/implementations/macs/gmac_prov.c"
        ],
        "providers/implementations/macs/libdefault-lib-hmac_prov.o" => [
            "providers/implementations/macs/hmac_prov.c"
        ],
        "providers/implementations/macs/libdefault-lib-kmac_prov.o" => [
            "providers/implementations/macs/kmac_prov.c"
        ],
        "providers/implementations/macs/libdefault-lib-poly1305_prov.o" => [
            "providers/implementations/macs/poly1305_prov.c"
        ],
        "providers/implementations/macs/libdefault-lib-siphash_prov.o" => [
            "providers/implementations/macs/siphash_prov.c"
        ],
        "providers/implementations/macs/libfips-lib-cmac_prov.o" => [
            "providers/implementations/macs/cmac_prov.c"
        ],
        "providers/implementations/macs/libfips-lib-gmac_prov.o" => [
            "providers/implementations/macs/gmac_prov.c"
        ],
        "providers/implementations/macs/libfips-lib-hmac_prov.o" => [
            "providers/implementations/macs/hmac_prov.c"
        ],
        "providers/implementations/macs/libfips-lib-kmac_prov.o" => [
            "providers/implementations/macs/kmac_prov.c"
        ],
        "providers/implementations/rands/libdefault-lib-crngt.o" => [
            "providers/implementations/rands/crngt.c"
        ],
        "providers/implementations/rands/libdefault-lib-drbg.o" => [
            "providers/implementations/rands/drbg.c"
        ],
        "providers/implementations/rands/libdefault-lib-drbg_ctr.o" => [
            "providers/implementations/rands/drbg_ctr.c"
        ],
        "providers/implementations/rands/libdefault-lib-drbg_hash.o" => [
            "providers/implementations/rands/drbg_hash.c"
        ],
        "providers/implementations/rands/libdefault-lib-drbg_hmac.o" => [
            "providers/implementations/rands/drbg_hmac.c"
        ],
        "providers/implementations/rands/libdefault-lib-seed_src.o" => [
            "providers/implementations/rands/seed_src.c"
        ],
        "providers/implementations/rands/libdefault-lib-test_rng.o" => [
            "providers/implementations/rands/test_rng.c"
        ],
        "providers/implementations/rands/libfips-lib-crngt.o" => [
            "providers/implementations/rands/crngt.c"
        ],
        "providers/implementations/rands/libfips-lib-drbg.o" => [
            "providers/implementations/rands/drbg.c"
        ],
        "providers/implementations/rands/libfips-lib-drbg_ctr.o" => [
            "providers/implementations/rands/drbg_ctr.c"
        ],
        "providers/implementations/rands/libfips-lib-drbg_hash.o" => [
            "providers/implementations/rands/drbg_hash.c"
        ],
        "providers/implementations/rands/libfips-lib-drbg_hmac.o" => [
            "providers/implementations/rands/drbg_hmac.c"
        ],
        "providers/implementations/rands/libfips-lib-test_rng.o" => [
            "providers/implementations/rands/test_rng.c"
        ],
        "providers/implementations/rands/seeding/libdefault-lib-rand_cpu_x86.o" => [
            "providers/implementations/rands/seeding/rand_cpu_x86.c"
        ],
        "providers/implementations/rands/seeding/libdefault-lib-rand_tsc.o" => [
            "providers/implementations/rands/seeding/rand_tsc.c"
        ],
        "providers/implementations/rands/seeding/libdefault-lib-rand_unix.o" => [
            "providers/implementations/rands/seeding/rand_unix.c"
        ],
        "providers/implementations/rands/seeding/libdefault-lib-rand_win.o" => [
            "providers/implementations/rands/seeding/rand_win.c"
        ],
        "providers/implementations/signature/libdefault-lib-dsa_sig.o" => [
            "providers/implementations/signature/dsa_sig.c"
        ],
        "providers/implementations/signature/libdefault-lib-ecdsa_sig.o" => [
            "providers/implementations/signature/ecdsa_sig.c"
        ],
        "providers/implementations/signature/libdefault-lib-eddsa_sig.o" => [
            "providers/implementations/signature/eddsa_sig.c"
        ],
        "providers/implementations/signature/libdefault-lib-mac_legacy_sig.o" => [
            "providers/implementations/signature/mac_legacy_sig.c"
        ],
        "providers/implementations/signature/libdefault-lib-rsa_sig.o" => [
            "providers/implementations/signature/rsa_sig.c"
        ],
        "providers/implementations/signature/libdefault-lib-sm2_sig.o" => [
            "providers/implementations/signature/sm2_sig.c"
        ],
        "providers/implementations/signature/libfips-lib-dsa_sig.o" => [
            "providers/implementations/signature/dsa_sig.c"
        ],
        "providers/implementations/signature/libfips-lib-ecdsa_sig.o" => [
            "providers/implementations/signature/ecdsa_sig.c"
        ],
        "providers/implementations/signature/libfips-lib-eddsa_sig.o" => [
            "providers/implementations/signature/eddsa_sig.c"
        ],
        "providers/implementations/signature/libfips-lib-mac_legacy_sig.o" => [
            "providers/implementations/signature/mac_legacy_sig.c"
        ],
        "providers/implementations/signature/libfips-lib-rsa_sig.o" => [
            "providers/implementations/signature/rsa_sig.c"
        ],
        "providers/implementations/storemgmt/libdefault-lib-file_store.o" => [
            "providers/implementations/storemgmt/file_store.c"
        ],
        "providers/implementations/storemgmt/libdefault-lib-file_store_any2obj.o" => [
            "providers/implementations/storemgmt/file_store_any2obj.c"
        ],
        "providers/legacy" => [
            "providers/legacy-dso-legacy.res",
            "providers/legacy-dso-legacyprov.o",
            "providers/legacy.ld"
        ],
        "providers/legacy-dso-legacy.res" => [
            "providers/legacy.rc"
        ],
        "providers/legacy-dso-legacyprov.o" => [
            "providers/legacyprov.c"
        ],
        "providers/libcommon.a" => [
            "providers/common/der/libcommon-lib-der_digests_gen.o",
            "providers/common/der/libcommon-lib-der_dsa_gen.o",
            "providers/common/der/libcommon-lib-der_dsa_key.o",
            "providers/common/der/libcommon-lib-der_dsa_sig.o",
            "providers/common/der/libcommon-lib-der_ec_gen.o",
            "providers/common/der/libcommon-lib-der_ec_key.o",
            "providers/common/der/libcommon-lib-der_ec_sig.o",
            "providers/common/der/libcommon-lib-der_ecx_gen.o",
            "providers/common/der/libcommon-lib-der_ecx_key.o",
            "providers/common/der/libcommon-lib-der_rsa_gen.o",
            "providers/common/der/libcommon-lib-der_rsa_key.o",
            "providers/common/der/libcommon-lib-der_wrap_gen.o",
            "providers/common/libcommon-lib-provider_ctx.o",
            "providers/common/libcommon-lib-provider_err.o",
            "providers/implementations/ciphers/libcommon-lib-ciphercommon.o",
            "providers/implementations/ciphers/libcommon-lib-ciphercommon_block.o",
            "providers/implementations/ciphers/libcommon-lib-ciphercommon_ccm.o",
            "providers/implementations/ciphers/libcommon-lib-ciphercommon_ccm_hw.o",
            "providers/implementations/ciphers/libcommon-lib-ciphercommon_gcm.o",
            "providers/implementations/ciphers/libcommon-lib-ciphercommon_gcm_hw.o",
            "providers/implementations/ciphers/libcommon-lib-ciphercommon_hw.o",
            "providers/implementations/digests/libcommon-lib-digestcommon.o",
            "ssl/record/libcommon-lib-tls_pad.o"
        ],
        "providers/libcrypto-lib-baseprov.o" => [
            "providers/baseprov.c"
        ],
        "providers/libcrypto-lib-defltprov.o" => [
            "providers/defltprov.c"
        ],
        "providers/libcrypto-lib-nullprov.o" => [
            "providers/nullprov.c"
        ],
        "providers/libcrypto-lib-prov_running.o" => [
            "providers/prov_running.c"
        ],
        "providers/libdefault.a" => [
            "providers/common/der/libdefault-lib-der_rsa_sig.o",
            "providers/common/der/libdefault-lib-der_sm2_gen.o",
            "providers/common/der/libdefault-lib-der_sm2_key.o",
            "providers/common/der/libdefault-lib-der_sm2_sig.o",
            "providers/common/libdefault-lib-bio_prov.o",
            "providers/common/libdefault-lib-capabilities.o",
            "providers/common/libdefault-lib-digest_to_nid.o",
            "providers/common/libdefault-lib-provider_seeding.o",
            "providers/common/libdefault-lib-provider_util.o",
            "providers/common/libdefault-lib-securitycheck.o",
            "providers/common/libdefault-lib-securitycheck_default.o",
            "providers/implementations/asymciphers/libdefault-lib-rsa_enc.o",
            "providers/implementations/asymciphers/libdefault-lib-sm2_enc.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_cbc_hmac_sha.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_cbc_hmac_sha1_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_cbc_hmac_sha256_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_ccm.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_ccm_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_gcm.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_gcm_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_ocb.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_ocb_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_siv.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_siv_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_wrp.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_xts.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_xts_fips.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aes_xts_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aria.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aria_ccm.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aria_ccm_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aria_gcm.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aria_gcm_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_aria_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_camellia.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_camellia_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_chacha20.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_chacha20_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_chacha20_poly1305.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_chacha20_poly1305_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_cts.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_null.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_sm4.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_sm4_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_tdes.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_tdes_common.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_tdes_default.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_tdes_default_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_tdes_hw.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_tdes_wrap.o",
            "providers/implementations/ciphers/libdefault-lib-cipher_tdes_wrap_hw.o",
            "providers/implementations/digests/libdefault-lib-blake2_prov.o",
            "providers/implementations/digests/libdefault-lib-blake2b_prov.o",
            "providers/implementations/digests/libdefault-lib-blake2s_prov.o",
            "providers/implementations/digests/libdefault-lib-md5_prov.o",
            "providers/implementations/digests/libdefault-lib-md5_sha1_prov.o",
            "providers/implementations/digests/libdefault-lib-null_prov.o",
            "providers/implementations/digests/libdefault-lib-ripemd_prov.o",
            "providers/implementations/digests/libdefault-lib-sha2_prov.o",
            "providers/implementations/digests/libdefault-lib-sha3_prov.o",
            "providers/implementations/digests/libdefault-lib-sm3_prov.o",
            "providers/implementations/encode_decode/libdefault-lib-decode_der2key.o",
            "providers/implementations/encode_decode/libdefault-lib-decode_epki2pki.o",
            "providers/implementations/encode_decode/libdefault-lib-decode_msblob2key.o",
            "providers/implementations/encode_decode/libdefault-lib-decode_pem2der.o",
            "providers/implementations/encode_decode/libdefault-lib-decode_pvk2key.o",
            "providers/implementations/encode_decode/libdefault-lib-decode_spki2typespki.o",
            "providers/implementations/encode_decode/libdefault-lib-encode_key2any.o",
            "providers/implementations/encode_decode/libdefault-lib-encode_key2blob.o",
            "providers/implementations/encode_decode/libdefault-lib-encode_key2ms.o",
            "providers/implementations/encode_decode/libdefault-lib-encode_key2text.o",
            "providers/implementations/encode_decode/libdefault-lib-endecoder_common.o",
            "providers/implementations/exchange/libdefault-lib-dh_exch.o",
            "providers/implementations/exchange/libdefault-lib-ecdh_exch.o",
            "providers/implementations/exchange/libdefault-lib-ecx_exch.o",
            "providers/implementations/exchange/libdefault-lib-kdf_exch.o",
            "providers/implementations/kdfs/libdefault-lib-hkdf.o",
            "providers/implementations/kdfs/libdefault-lib-kbkdf.o",
            "providers/implementations/kdfs/libdefault-lib-krb5kdf.o",
            "providers/implementations/kdfs/libdefault-lib-pbkdf2.o",
            "providers/implementations/kdfs/libdefault-lib-pbkdf2_fips.o",
            "providers/implementations/kdfs/libdefault-lib-pkcs12kdf.o",
            "providers/implementations/kdfs/libdefault-lib-scrypt.o",
            "providers/implementations/kdfs/libdefault-lib-sshkdf.o",
            "providers/implementations/kdfs/libdefault-lib-sskdf.o",
            "providers/implementations/kdfs/libdefault-lib-tls1_prf.o",
            "providers/implementations/kdfs/libdefault-lib-x942kdf.o",
            "providers/implementations/kem/libdefault-lib-rsa_kem.o",
            "providers/implementations/keymgmt/libdefault-lib-dh_kmgmt.o",
            "providers/implementations/keymgmt/libdefault-lib-dsa_kmgmt.o",
            "providers/implementations/keymgmt/libdefault-lib-ec_kmgmt.o",
            "providers/implementations/keymgmt/libdefault-lib-ecx_kmgmt.o",
            "providers/implementations/keymgmt/libdefault-lib-kdf_legacy_kmgmt.o",
            "providers/implementations/keymgmt/libdefault-lib-mac_legacy_kmgmt.o",
            "providers/implementations/keymgmt/libdefault-lib-rsa_kmgmt.o",
            "providers/implementations/macs/libdefault-lib-blake2b_mac.o",
            "providers/implementations/macs/libdefault-lib-blake2s_mac.o",
            "providers/implementations/macs/libdefault-lib-cmac_prov.o",
            "providers/implementations/macs/libdefault-lib-gmac_prov.o",
            "providers/implementations/macs/libdefault-lib-hmac_prov.o",
            "providers/implementations/macs/libdefault-lib-kmac_prov.o",
            "providers/implementations/macs/libdefault-lib-poly1305_prov.o",
            "providers/implementations/macs/libdefault-lib-siphash_prov.o",
            "providers/implementations/rands/libdefault-lib-crngt.o",
            "providers/implementations/rands/libdefault-lib-drbg.o",
            "providers/implementations/rands/libdefault-lib-drbg_ctr.o",
            "providers/implementations/rands/libdefault-lib-drbg_hash.o",
            "providers/implementations/rands/libdefault-lib-drbg_hmac.o",
            "providers/implementations/rands/libdefault-lib-seed_src.o",
            "providers/implementations/rands/libdefault-lib-test_rng.o",
            "providers/implementations/rands/seeding/libdefault-lib-rand_cpu_x86.o",
            "providers/implementations/rands/seeding/libdefault-lib-rand_tsc.o",
            "providers/implementations/rands/seeding/libdefault-lib-rand_unix.o",
            "providers/implementations/rands/seeding/libdefault-lib-rand_win.o",
            "providers/implementations/signature/libdefault-lib-dsa_sig.o",
            "providers/implementations/signature/libdefault-lib-ecdsa_sig.o",
            "providers/implementations/signature/libdefault-lib-eddsa_sig.o",
            "providers/implementations/signature/libdefault-lib-mac_legacy_sig.o",
            "providers/implementations/signature/libdefault-lib-rsa_sig.o",
            "providers/implementations/signature/libdefault-lib-sm2_sig.o",
            "providers/implementations/storemgmt/libdefault-lib-file_store.o",
            "providers/implementations/storemgmt/libdefault-lib-file_store_any2obj.o",
            "ssl/libdefault-lib-s3_cbc.o"
        ],
        "providers/libfips.a" => [
            "crypto/aes/libfips-lib-aes-x86_64.o",
            "crypto/aes/libfips-lib-aes_ecb.o",
            "crypto/aes/libfips-lib-aes_misc.o",
            "crypto/aes/libfips-lib-aesni-mb-x86_64.o",
            "crypto/aes/libfips-lib-aesni-sha1-x86_64.o",
            "crypto/aes/libfips-lib-aesni-sha256-x86_64.o",
            "crypto/aes/libfips-lib-aesni-x86_64.o",
            "crypto/aes/libfips-lib-bsaes-x86_64.o",
            "crypto/aes/libfips-lib-vpaes-x86_64.o",
            "crypto/bn/libfips-lib-bn_add.o",
            "crypto/bn/libfips-lib-bn_asm.o",
            "crypto/bn/libfips-lib-bn_blind.o",
            "crypto/bn/libfips-lib-bn_const.o",
            "crypto/bn/libfips-lib-bn_conv.o",
            "crypto/bn/libfips-lib-bn_ctx.o",
            "crypto/bn/libfips-lib-bn_dh.o",
            "crypto/bn/libfips-lib-bn_div.o",
            "crypto/bn/libfips-lib-bn_exp.o",
            "crypto/bn/libfips-lib-bn_exp2.o",
            "crypto/bn/libfips-lib-bn_gcd.o",
            "crypto/bn/libfips-lib-bn_gf2m.o",
            "crypto/bn/libfips-lib-bn_intern.o",
            "crypto/bn/libfips-lib-bn_kron.o",
            "crypto/bn/libfips-lib-bn_lib.o",
            "crypto/bn/libfips-lib-bn_mod.o",
            "crypto/bn/libfips-lib-bn_mont.o",
            "crypto/bn/libfips-lib-bn_mpi.o",
            "crypto/bn/libfips-lib-bn_mul.o",
            "crypto/bn/libfips-lib-bn_nist.o",
            "crypto/bn/libfips-lib-bn_prime.o",
            "crypto/bn/libfips-lib-bn_rand.o",
            "crypto/bn/libfips-lib-bn_recp.o",
            "crypto/bn/libfips-lib-bn_rsa_fips186_4.o",
            "crypto/bn/libfips-lib-bn_shift.o",
            "crypto/bn/libfips-lib-bn_sqr.o",
            "crypto/bn/libfips-lib-bn_sqrt.o",
            "crypto/bn/libfips-lib-bn_word.o",
            "crypto/bn/libfips-lib-rsaz-avx2.o",
            "crypto/bn/libfips-lib-rsaz-avx512.o",
            "crypto/bn/libfips-lib-rsaz-x86_64.o",
            "crypto/bn/libfips-lib-rsaz_exp.o",
            "crypto/bn/libfips-lib-rsaz_exp_x2.o",
            "crypto/bn/libfips-lib-x86_64-gf2m.o",
            "crypto/bn/libfips-lib-x86_64-mont.o",
            "crypto/bn/libfips-lib-x86_64-mont5.o",
            "crypto/buffer/libfips-lib-buffer.o",
            "crypto/cmac/libfips-lib-cmac.o",
            "crypto/des/libfips-lib-des_enc.o",
            "crypto/des/libfips-lib-ecb3_enc.o",
            "crypto/des/libfips-lib-fcrypt_b.o",
            "crypto/des/libfips-lib-set_key.o",
            "crypto/dh/libfips-lib-dh_backend.o",
            "crypto/dh/libfips-lib-dh_check.o",
            "crypto/dh/libfips-lib-dh_gen.o",
            "crypto/dh/libfips-lib-dh_group_params.o",
            "crypto/dh/libfips-lib-dh_kdf.o",
            "crypto/dh/libfips-lib-dh_key.o",
            "crypto/dh/libfips-lib-dh_lib.o",
            "crypto/dsa/libfips-lib-dsa_backend.o",
            "crypto/dsa/libfips-lib-dsa_check.o",
            "crypto/dsa/libfips-lib-dsa_gen.o",
            "crypto/dsa/libfips-lib-dsa_key.o",
            "crypto/dsa/libfips-lib-dsa_lib.o",
            "crypto/dsa/libfips-lib-dsa_ossl.o",
            "crypto/dsa/libfips-lib-dsa_sign.o",
            "crypto/dsa/libfips-lib-dsa_vrf.o",
            "crypto/ec/curve448/arch_32/libfips-lib-f_impl32.o",
            "crypto/ec/curve448/arch_64/libfips-lib-f_impl64.o",
            "crypto/ec/curve448/libfips-lib-curve448.o",
            "crypto/ec/curve448/libfips-lib-curve448_tables.o",
            "crypto/ec/curve448/libfips-lib-eddsa.o",
            "crypto/ec/curve448/libfips-lib-f_generic.o",
            "crypto/ec/curve448/libfips-lib-scalar.o",
            "crypto/ec/libfips-lib-curve25519.o",
            "crypto/ec/libfips-lib-ec2_oct.o",
            "crypto/ec/libfips-lib-ec2_smpl.o",
            "crypto/ec/libfips-lib-ec_asn1.o",
            "crypto/ec/libfips-lib-ec_backend.o",
            "crypto/ec/libfips-lib-ec_check.o",
            "crypto/ec/libfips-lib-ec_curve.o",
            "crypto/ec/libfips-lib-ec_cvt.o",
            "crypto/ec/libfips-lib-ec_key.o",
            "crypto/ec/libfips-lib-ec_kmeth.o",
            "crypto/ec/libfips-lib-ec_lib.o",
            "crypto/ec/libfips-lib-ec_mult.o",
            "crypto/ec/libfips-lib-ec_oct.o",
            "crypto/ec/libfips-lib-ecdh_kdf.o",
            "crypto/ec/libfips-lib-ecdh_ossl.o",
            "crypto/ec/libfips-lib-ecdsa_ossl.o",
            "crypto/ec/libfips-lib-ecdsa_sign.o",
            "crypto/ec/libfips-lib-ecdsa_vrf.o",
            "crypto/ec/libfips-lib-ecp_mont.o",
            "crypto/ec/libfips-lib-ecp_nist.o",
            "crypto/ec/libfips-lib-ecp_nistz256-x86_64.o",
            "crypto/ec/libfips-lib-ecp_nistz256.o",
            "crypto/ec/libfips-lib-ecp_oct.o",
            "crypto/ec/libfips-lib-ecp_smpl.o",
            "crypto/ec/libfips-lib-ecx_backend.o",
            "crypto/ec/libfips-lib-ecx_key.o",
            "crypto/ec/libfips-lib-x25519-x86_64.o",
            "crypto/evp/libfips-lib-asymcipher.o",
            "crypto/evp/libfips-lib-dh_support.o",
            "crypto/evp/libfips-lib-digest.o",
            "crypto/evp/libfips-lib-ec_support.o",
            "crypto/evp/libfips-lib-evp_enc.o",
            "crypto/evp/libfips-lib-evp_fetch.o",
            "crypto/evp/libfips-lib-evp_lib.o",
            "crypto/evp/libfips-lib-evp_rand.o",
            "crypto/evp/libfips-lib-evp_utils.o",
            "crypto/evp/libfips-lib-exchange.o",
            "crypto/evp/libfips-lib-kdf_lib.o",
            "crypto/evp/libfips-lib-kdf_meth.o",
            "crypto/evp/libfips-lib-kem.o",
            "crypto/evp/libfips-lib-keymgmt_lib.o",
            "crypto/evp/libfips-lib-keymgmt_meth.o",
            "crypto/evp/libfips-lib-m_sigver.o",
            "crypto/evp/libfips-lib-mac_lib.o",
            "crypto/evp/libfips-lib-mac_meth.o",
            "crypto/evp/libfips-lib-p_lib.o",
            "crypto/evp/libfips-lib-pmeth_check.o",
            "crypto/evp/libfips-lib-pmeth_gn.o",
            "crypto/evp/libfips-lib-pmeth_lib.o",
            "crypto/evp/libfips-lib-signature.o",
            "crypto/ffc/libfips-lib-ffc_backend.o",
            "crypto/ffc/libfips-lib-ffc_dh.o",
            "crypto/ffc/libfips-lib-ffc_key_generate.o",
            "crypto/ffc/libfips-lib-ffc_key_validate.o",
            "crypto/ffc/libfips-lib-ffc_params.o",
            "crypto/ffc/libfips-lib-ffc_params_generate.o",
            "crypto/ffc/libfips-lib-ffc_params_validate.o",
            "crypto/hmac/libfips-lib-hmac.o",
            "crypto/lhash/libfips-lib-lhash.o",
            "crypto/libfips-lib-asn1_dsa.o",
            "crypto/libfips-lib-bsearch.o",
            "crypto/libfips-lib-context.o",
            "crypto/libfips-lib-core_algorithm.o",
            "crypto/libfips-lib-core_fetch.o",
            "crypto/libfips-lib-core_namemap.o",
            "crypto/libfips-lib-cpuid.o",
            "crypto/libfips-lib-cryptlib.o",
            "crypto/libfips-lib-ctype.o",
            "crypto/libfips-lib-der_writer.o",
            "crypto/libfips-lib-ex_data.o",
            "crypto/libfips-lib-initthread.o",
            "crypto/libfips-lib-o_str.o",
            "crypto/libfips-lib-packet.o",
            "crypto/libfips-lib-param_build.o",
            "crypto/libfips-lib-param_build_set.o",
            "crypto/libfips-lib-params.o",
            "crypto/libfips-lib-params_dup.o",
            "crypto/libfips-lib-params_from_text.o",
            "crypto/libfips-lib-provider_core.o",
            "crypto/libfips-lib-provider_predefined.o",
            "crypto/libfips-lib-self_test_core.o",
            "crypto/libfips-lib-sparse_array.o",
            "crypto/libfips-lib-threads_lib.o",
            "crypto/libfips-lib-threads_none.o",
            "crypto/libfips-lib-threads_pthread.o",
            "crypto/libfips-lib-threads_win.o",
            "crypto/libfips-lib-x86_64cpuid.o",
            "crypto/modes/libfips-lib-aesni-gcm-x86_64.o",
            "crypto/modes/libfips-lib-cbc128.o",
            "crypto/modes/libfips-lib-ccm128.o",
            "crypto/modes/libfips-lib-cfb128.o",
            "crypto/modes/libfips-lib-ctr128.o",
            "crypto/modes/libfips-lib-gcm128.o",
            "crypto/modes/libfips-lib-ghash-x86_64.o",
            "crypto/modes/libfips-lib-ofb128.o",
            "crypto/modes/libfips-lib-wrap128.o",
            "crypto/modes/libfips-lib-xts128.o",
            "crypto/property/libfips-lib-defn_cache.o",
            "crypto/property/libfips-lib-property.o",
            "crypto/property/libfips-lib-property_parse.o",
            "crypto/property/libfips-lib-property_query.o",
            "crypto/property/libfips-lib-property_string.o",
            "crypto/rand/libfips-lib-rand_lib.o",
            "crypto/rsa/libfips-lib-rsa_acvp_test_params.o",
            "crypto/rsa/libfips-lib-rsa_backend.o",
            "crypto/rsa/libfips-lib-rsa_chk.o",
            "crypto/rsa/libfips-lib-rsa_crpt.o",
            "crypto/rsa/libfips-lib-rsa_gen.o",
            "crypto/rsa/libfips-lib-rsa_lib.o",
            "crypto/rsa/libfips-lib-rsa_mp_names.o",
            "crypto/rsa/libfips-lib-rsa_none.o",
            "crypto/rsa/libfips-lib-rsa_oaep.o",
            "crypto/rsa/libfips-lib-rsa_ossl.o",
            "crypto/rsa/libfips-lib-rsa_pk1.o",
            "crypto/rsa/libfips-lib-rsa_pss.o",
            "crypto/rsa/libfips-lib-rsa_schemes.o",
            "crypto/rsa/libfips-lib-rsa_sign.o",
            "crypto/rsa/libfips-lib-rsa_sp800_56b_check.o",
            "crypto/rsa/libfips-lib-rsa_sp800_56b_gen.o",
            "crypto/rsa/libfips-lib-rsa_x931.o",
            "crypto/sha/libfips-lib-keccak1600-x86_64.o",
            "crypto/sha/libfips-lib-sha1-mb-x86_64.o",
            "crypto/sha/libfips-lib-sha1-x86_64.o",
            "crypto/sha/libfips-lib-sha1dgst.o",
            "crypto/sha/libfips-lib-sha256-mb-x86_64.o",
            "crypto/sha/libfips-lib-sha256-x86_64.o",
            "crypto/sha/libfips-lib-sha256.o",
            "crypto/sha/libfips-lib-sha3.o",
            "crypto/sha/libfips-lib-sha512-x86_64.o",
            "crypto/sha/libfips-lib-sha512.o",
            "crypto/stack/libfips-lib-stack.o",
            "providers/common/der/libfips-lib-der_rsa_sig.o",
            "providers/common/libfips-lib-bio_prov.o",
            "providers/common/libfips-lib-capabilities.o",
            "providers/common/libfips-lib-digest_to_nid.o",
            "providers/common/libfips-lib-provider_seeding.o",
            "providers/common/libfips-lib-provider_util.o",
            "providers/common/libfips-lib-securitycheck.o",
            "providers/common/libfips-lib-securitycheck_fips.o",
            "providers/fips/libfips-lib-fipsprov.o",
            "providers/fips/libfips-lib-self_test.o",
            "providers/fips/libfips-lib-self_test_kats.o",
            "providers/implementations/asymciphers/libfips-lib-rsa_enc.o",
            "providers/implementations/ciphers/libfips-lib-cipher_aes.o",
            "providers/implementations/ciphers/libfips-lib-cipher_aes_cbc_hmac_sha.o",
            "providers/implementations/ciphers/libfips-lib-cipher_aes_cbc_hmac_sha1_hw.o",
            "providers/implementations/ciphers/libfips-lib-cipher_aes_cbc_hmac_sha256_hw.o",
            "providers/implementations/ciphers/libfips-lib-cipher_aes_ccm.o",
            "providers/implementations/ciphers/libfips-lib-cipher_aes_ccm_hw.o",
            "providers/implementations/ciphers/libfips-lib-cipher_aes_gcm.o",
            "providers/implementations/ciphers/libfips-lib-cipher_aes_gcm_hw.o",
            "providers/implementations/ciphers/libfips-lib-cipher_aes_hw.o",
            "providers/implementations/ciphers/libfips-lib-cipher_aes_ocb.o",
            "providers/implementations/ciphers/libfips-lib-cipher_aes_ocb_hw.o",
            "providers/implementations/ciphers/libfips-lib-cipher_aes_wrp.o",
            "providers/implementations/ciphers/libfips-lib-cipher_aes_xts.o",
            "providers/implementations/ciphers/libfips-lib-cipher_aes_xts_fips.o",
            "providers/implementations/ciphers/libfips-lib-cipher_aes_xts_hw.o",
            "providers/implementations/ciphers/libfips-lib-cipher_cts.o",
            "providers/implementations/ciphers/libfips-lib-cipher_tdes.o",
            "providers/implementations/ciphers/libfips-lib-cipher_tdes_common.o",
            "providers/implementations/ciphers/libfips-lib-cipher_tdes_hw.o",
            "providers/implementations/digests/libfips-lib-sha2_prov.o",
            "providers/implementations/digests/libfips-lib-sha3_prov.o",
            "providers/implementations/exchange/libfips-lib-dh_exch.o",
            "providers/implementations/exchange/libfips-lib-ecdh_exch.o",
            "providers/implementations/exchange/libfips-lib-ecx_exch.o",
            "providers/implementations/exchange/libfips-lib-kdf_exch.o",
            "providers/implementations/kdfs/libfips-lib-hkdf.o",
            "providers/implementations/kdfs/libfips-lib-kbkdf.o",
            "providers/implementations/kdfs/libfips-lib-pbkdf2.o",
            "providers/implementations/kdfs/libfips-lib-pbkdf2_fips.o",
            "providers/implementations/kdfs/libfips-lib-sshkdf.o",
            "providers/implementations/kdfs/libfips-lib-sskdf.o",
            "providers/implementations/kdfs/libfips-lib-tls1_prf.o",
            "providers/implementations/kdfs/libfips-lib-x942kdf.o",
            "providers/implementations/kem/libfips-lib-rsa_kem.o",
            "providers/implementations/keymgmt/libfips-lib-dh_kmgmt.o",
            "providers/implementations/keymgmt/libfips-lib-dsa_kmgmt.o",
            "providers/implementations/keymgmt/libfips-lib-ec_kmgmt.o",
            "providers/implementations/keymgmt/libfips-lib-ecx_kmgmt.o",
            "providers/implementations/keymgmt/libfips-lib-kdf_legacy_kmgmt.o",
            "providers/implementations/keymgmt/libfips-lib-mac_legacy_kmgmt.o",
            "providers/implementations/keymgmt/libfips-lib-rsa_kmgmt.o",
            "providers/implementations/macs/libfips-lib-cmac_prov.o",
            "providers/implementations/macs/libfips-lib-gmac_prov.o",
            "providers/implementations/macs/libfips-lib-hmac_prov.o",
            "providers/implementations/macs/libfips-lib-kmac_prov.o",
            "providers/implementations/rands/libfips-lib-crngt.o",
            "providers/implementations/rands/libfips-lib-drbg.o",
            "providers/implementations/rands/libfips-lib-drbg_ctr.o",
            "providers/implementations/rands/libfips-lib-drbg_hash.o",
            "providers/implementations/rands/libfips-lib-drbg_hmac.o",
            "providers/implementations/rands/libfips-lib-test_rng.o",
            "providers/implementations/signature/libfips-lib-dsa_sig.o",
            "providers/implementations/signature/libfips-lib-ecdsa_sig.o",
            "providers/implementations/signature/libfips-lib-eddsa_sig.o",
            "providers/implementations/signature/libfips-lib-mac_legacy_sig.o",
            "providers/implementations/signature/libfips-lib-rsa_sig.o",
            "providers/libcommon.a",
            "ssl/libfips-lib-s3_cbc.o"
        ],
        "providers/liblegacy-lib-prov_running.o" => [
            "providers/prov_running.c"
        ],
        "providers/liblegacy.a" => [
            "providers/implementations/ciphers/liblegacy-lib-cipher_blowfish.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_blowfish_hw.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_cast5.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_cast5_hw.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_des.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_des_hw.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_desx.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_desx_hw.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_idea.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_idea_hw.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_rc2.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_rc2_hw.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_rc4.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_rc4_hmac_md5.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_rc4_hmac_md5_hw.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_rc4_hw.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_seed.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_seed_hw.o",
            "providers/implementations/ciphers/liblegacy-lib-cipher_tdes_common.o",
            "providers/implementations/digests/liblegacy-lib-md4_prov.o",
            "providers/implementations/digests/liblegacy-lib-mdc2_prov.o",
            "providers/implementations/digests/liblegacy-lib-ripemd_prov.o",
            "providers/implementations/digests/liblegacy-lib-wp_prov.o",
            "providers/implementations/kdfs/liblegacy-lib-pbkdf1.o",
            "providers/liblegacy-lib-prov_running.o"
        ],
        "ssl/libdefault-lib-s3_cbc.o" => [
            "ssl/s3_cbc.c"
        ],
        "ssl/libfips-lib-s3_cbc.o" => [
            "ssl/s3_cbc.c"
        ],
        "ssl/libssl-lib-bio_ssl.o" => [
            "ssl/bio_ssl.c"
        ],
        "ssl/libssl-lib-d1_lib.o" => [
            "ssl/d1_lib.c"
        ],
        "ssl/libssl-lib-d1_msg.o" => [
            "ssl/d1_msg.c"
        ],
        "ssl/libssl-lib-d1_srtp.o" => [
            "ssl/d1_srtp.c"
        ],
        "ssl/libssl-lib-methods.o" => [
            "ssl/methods.c"
        ],
        "ssl/libssl-lib-pqueue.o" => [
            "ssl/pqueue.c"
        ],
        "ssl/libssl-lib-s3_enc.o" => [
            "ssl/s3_enc.c"
        ],
        "ssl/libssl-lib-s3_lib.o" => [
            "ssl/s3_lib.c"
        ],
        "ssl/libssl-lib-s3_msg.o" => [
            "ssl/s3_msg.c"
        ],
        "ssl/libssl-lib-ssl_asn1.o" => [
            "ssl/ssl_asn1.c"
        ],
        "ssl/libssl-lib-ssl_cert.o" => [
            "ssl/ssl_cert.c"
        ],
        "ssl/libssl-lib-ssl_ciph.o" => [
            "ssl/ssl_ciph.c"
        ],
        "ssl/libssl-lib-ssl_conf.o" => [
            "ssl/ssl_conf.c"
        ],
        "ssl/libssl-lib-ssl_err.o" => [
            "ssl/ssl_err.c"
        ],
        "ssl/libssl-lib-ssl_err_legacy.o" => [
            "ssl/ssl_err_legacy.c"
        ],
        "ssl/libssl-lib-ssl_init.o" => [
            "ssl/ssl_init.c"
        ],
        "ssl/libssl-lib-ssl_lib.o" => [
            "ssl/ssl_lib.c"
        ],
        "ssl/libssl-lib-ssl_mcnf.o" => [
            "ssl/ssl_mcnf.c"
        ],
        "ssl/libssl-lib-ssl_quic.o" => [
            "ssl/ssl_quic.c"
        ],
        "ssl/libssl-lib-ssl_rsa.o" => [
            "ssl/ssl_rsa.c"
        ],
        "ssl/libssl-lib-ssl_rsa_legacy.o" => [
            "ssl/ssl_rsa_legacy.c"
        ],
        "ssl/libssl-lib-ssl_sess.o" => [
            "ssl/ssl_sess.c"
        ],
        "ssl/libssl-lib-ssl_stat.o" => [
            "ssl/ssl_stat.c"
        ],
        "ssl/libssl-lib-ssl_txt.o" => [
            "ssl/ssl_txt.c"
        ],
        "ssl/libssl-lib-ssl_utst.o" => [
            "ssl/ssl_utst.c"
        ],
        "ssl/libssl-lib-t1_enc.o" => [
            "ssl/t1_enc.c"
        ],
        "ssl/libssl-lib-t1_lib.o" => [
            "ssl/t1_lib.c"
        ],
        "ssl/libssl-lib-t1_trce.o" => [
            "ssl/t1_trce.c"
        ],
        "ssl/libssl-lib-tls13_enc.o" => [
            "ssl/tls13_enc.c"
        ],
        "ssl/libssl-lib-tls_depr.o" => [
            "ssl/tls_depr.c"
        ],
        "ssl/libssl-lib-tls_srp.o" => [
            "ssl/tls_srp.c"
        ],
        "ssl/record/libcommon-lib-tls_pad.o" => [
            "ssl/record/tls_pad.c"
        ],
        "ssl/record/libssl-lib-dtls1_bitmap.o" => [
            "ssl/record/dtls1_bitmap.c"
        ],
        "ssl/record/libssl-lib-rec_layer_d1.o" => [
            "ssl/record/rec_layer_d1.c"
        ],
        "ssl/record/libssl-lib-rec_layer_s3.o" => [
            "ssl/record/rec_layer_s3.c"
        ],
        "ssl/record/libssl-lib-ssl3_buffer.o" => [
            "ssl/record/ssl3_buffer.c"
        ],
        "ssl/record/libssl-lib-ssl3_record.o" => [
            "ssl/record/ssl3_record.c"
        ],
        "ssl/record/libssl-lib-ssl3_record_tls13.o" => [
            "ssl/record/ssl3_record_tls13.c"
        ],
        "ssl/statem/libssl-lib-extensions.o" => [
            "ssl/statem/extensions.c"
        ],
        "ssl/statem/libssl-lib-extensions_clnt.o" => [
            "ssl/statem/extensions_clnt.c"
        ],
        "ssl/statem/libssl-lib-extensions_cust.o" => [
            "ssl/statem/extensions_cust.c"
        ],
        "ssl/statem/libssl-lib-extensions_srvr.o" => [
            "ssl/statem/extensions_srvr.c"
        ],
        "ssl/statem/libssl-lib-statem.o" => [
            "ssl/statem/statem.c"
        ],
        "ssl/statem/libssl-lib-statem_clnt.o" => [
            "ssl/statem/statem_clnt.c"
        ],
        "ssl/statem/libssl-lib-statem_dtls.o" => [
            "ssl/statem/statem_dtls.c"
        ],
        "ssl/statem/libssl-lib-statem_lib.o" => [
            "ssl/statem/statem_lib.c"
        ],
        "ssl/statem/libssl-lib-statem_quic.o" => [
            "ssl/statem/statem_quic.c"
        ],
        "ssl/statem/libssl-lib-statem_srvr.o" => [
            "ssl/statem/statem_srvr.c"
        ],
        "test/aborttest" => [
            "test/aborttest-bin-aborttest.o"
        ],
        "test/aborttest-bin-aborttest.o" => [
            "test/aborttest.c"
        ],
        "test/acvp_test" => [
            "test/acvp_test-bin-acvp_test.o"
        ],
        "test/acvp_test-bin-acvp_test.o" => [
            "test/acvp_test.c"
        ],
        "test/aesgcmtest" => [
            "test/aesgcmtest-bin-aesgcmtest.o"
        ],
        "test/aesgcmtest-bin-aesgcmtest.o" => [
            "test/aesgcmtest.c"
        ],
        "test/afalgtest" => [
            "test/afalgtest-bin-afalgtest.o"
        ],
        "test/afalgtest-bin-afalgtest.o" => [
            "test/afalgtest.c"
        ],
        "test/algorithmid_test" => [
            "test/algorithmid_test-bin-algorithmid_test.o"
        ],
        "test/algorithmid_test-bin-algorithmid_test.o" => [
            "test/algorithmid_test.c"
        ],
        "test/asn1_decode_test" => [
            "test/asn1_decode_test-bin-asn1_decode_test.o"
        ],
        "test/asn1_decode_test-bin-asn1_decode_test.o" => [
            "test/asn1_decode_test.c"
        ],
        "test/asn1_dsa_internal_test" => [
            "test/asn1_dsa_internal_test-bin-asn1_dsa_internal_test.o"
        ],
        "test/asn1_dsa_internal_test-bin-asn1_dsa_internal_test.o" => [
            "test/asn1_dsa_internal_test.c"
        ],
        "test/asn1_encode_test" => [
            "test/asn1_encode_test-bin-asn1_encode_test.o"
        ],
        "test/asn1_encode_test-bin-asn1_encode_test.o" => [
            "test/asn1_encode_test.c"
        ],
        "test/asn1_internal_test" => [
            "test/asn1_internal_test-bin-asn1_internal_test.o"
        ],
        "test/asn1_internal_test-bin-asn1_internal_test.o" => [
            "test/asn1_internal_test.c"
        ],
        "test/asn1_stable_parse_test" => [
            "test/asn1_stable_parse_test-bin-asn1_stable_parse_test.o"
        ],
        "test/asn1_stable_parse_test-bin-asn1_stable_parse_test.o" => [
            "test/asn1_stable_parse_test.c"
        ],
        "test/asn1_string_table_test" => [
            "test/asn1_string_table_test-bin-asn1_string_table_test.o"
        ],
        "test/asn1_string_table_test-bin-asn1_string_table_test.o" => [
            "test/asn1_string_table_test.c"
        ],
        "test/asn1_time_test" => [
            "test/asn1_time_test-bin-asn1_time_test.o"
        ],
        "test/asn1_time_test-bin-asn1_time_test.o" => [
            "test/asn1_time_test.c"
        ],
        "test/asynciotest" => [
            "test/asynciotest-bin-asynciotest.o",
            "test/helpers/asynciotest-bin-ssltestlib.o"
        ],
        "test/asynciotest-bin-asynciotest.o" => [
            "test/asynciotest.c"
        ],
        "test/asynctest" => [
            "test/asynctest-bin-asynctest.o"
        ],
        "test/asynctest-bin-asynctest.o" => [
            "test/asynctest.c"
        ],
        "test/bad_dtls_test" => [
            "test/bad_dtls_test-bin-bad_dtls_test.o"
        ],
        "test/bad_dtls_test-bin-bad_dtls_test.o" => [
            "test/bad_dtls_test.c"
        ],
        "test/bftest" => [
            "test/bftest-bin-bftest.o"
        ],
        "test/bftest-bin-bftest.o" => [
            "test/bftest.c"
        ],
        "test/bio_callback_test" => [
            "test/bio_callback_test-bin-bio_callback_test.o"
        ],
        "test/bio_callback_test-bin-bio_callback_test.o" => [
            "test/bio_callback_test.c"
        ],
        "test/bio_core_test" => [
            "test/bio_core_test-bin-bio_core_test.o"
        ],
        "test/bio_core_test-bin-bio_core_test.o" => [
            "test/bio_core_test.c"
        ],
        "test/bio_enc_test" => [
            "test/bio_enc_test-bin-bio_enc_test.o"
        ],
        "test/bio_enc_test-bin-bio_enc_test.o" => [
            "test/bio_enc_test.c"
        ],
        "test/bio_memleak_test" => [
            "test/bio_memleak_test-bin-bio_memleak_test.o"
        ],
        "test/bio_memleak_test-bin-bio_memleak_test.o" => [
            "test/bio_memleak_test.c"
        ],
        "test/bio_prefix_text" => [
            "test/bio_prefix_text-bin-bio_prefix_text.o"
        ],
        "test/bio_prefix_text-bin-bio_prefix_text.o" => [
            "test/bio_prefix_text.c"
        ],
        "test/bio_readbuffer_test" => [
            "test/bio_readbuffer_test-bin-bio_readbuffer_test.o"
        ],
        "test/bio_readbuffer_test-bin-bio_readbuffer_test.o" => [
            "test/bio_readbuffer_test.c"
        ],
        "test/bioprinttest" => [
            "test/bioprinttest-bin-bioprinttest.o"
        ],
        "test/bioprinttest-bin-bioprinttest.o" => [
            "test/bioprinttest.c"
        ],
        "test/bn_internal_test" => [
            "test/bn_internal_test-bin-bn_internal_test.o"
        ],
        "test/bn_internal_test-bin-bn_internal_test.o" => [
            "test/bn_internal_test.c"
        ],
        "test/bntest" => [
            "test/bntest-bin-bntest.o"
        ],
        "test/bntest-bin-bntest.o" => [
            "test/bntest.c"
        ],
        "test/buildtest_c_aes" => [
            "test/buildtest_c_aes-bin-buildtest_aes.o"
        ],
        "test/buildtest_c_aes-bin-buildtest_aes.o" => [
            "test/buildtest_aes.c"
        ],
        "test/buildtest_c_async" => [
            "test/buildtest_c_async-bin-buildtest_async.o"
        ],
        "test/buildtest_c_async-bin-buildtest_async.o" => [
            "test/buildtest_async.c"
        ],
        "test/buildtest_c_blowfish" => [
            "test/buildtest_c_blowfish-bin-buildtest_blowfish.o"
        ],
        "test/buildtest_c_blowfish-bin-buildtest_blowfish.o" => [
            "test/buildtest_blowfish.c"
        ],
        "test/buildtest_c_bn" => [
            "test/buildtest_c_bn-bin-buildtest_bn.o"
        ],
        "test/buildtest_c_bn-bin-buildtest_bn.o" => [
            "test/buildtest_bn.c"
        ],
        "test/buildtest_c_buffer" => [
            "test/buildtest_c_buffer-bin-buildtest_buffer.o"
        ],
        "test/buildtest_c_buffer-bin-buildtest_buffer.o" => [
            "test/buildtest_buffer.c"
        ],
        "test/buildtest_c_camellia" => [
            "test/buildtest_c_camellia-bin-buildtest_camellia.o"
        ],
        "test/buildtest_c_camellia-bin-buildtest_camellia.o" => [
            "test/buildtest_camellia.c"
        ],
        "test/buildtest_c_cast" => [
            "test/buildtest_c_cast-bin-buildtest_cast.o"
        ],
        "test/buildtest_c_cast-bin-buildtest_cast.o" => [
            "test/buildtest_cast.c"
        ],
        "test/buildtest_c_cmac" => [
            "test/buildtest_c_cmac-bin-buildtest_cmac.o"
        ],
        "test/buildtest_c_cmac-bin-buildtest_cmac.o" => [
            "test/buildtest_cmac.c"
        ],
        "test/buildtest_c_cmp_util" => [
            "test/buildtest_c_cmp_util-bin-buildtest_cmp_util.o"
        ],
        "test/buildtest_c_cmp_util-bin-buildtest_cmp_util.o" => [
            "test/buildtest_cmp_util.c"
        ],
        "test/buildtest_c_conf_api" => [
            "test/buildtest_c_conf_api-bin-buildtest_conf_api.o"
        ],
        "test/buildtest_c_conf_api-bin-buildtest_conf_api.o" => [
            "test/buildtest_conf_api.c"
        ],
        "test/buildtest_c_conftypes" => [
            "test/buildtest_c_conftypes-bin-buildtest_conftypes.o"
        ],
        "test/buildtest_c_conftypes-bin-buildtest_conftypes.o" => [
            "test/buildtest_conftypes.c"
        ],
        "test/buildtest_c_core" => [
            "test/buildtest_c_core-bin-buildtest_core.o"
        ],
        "test/buildtest_c_core-bin-buildtest_core.o" => [
            "test/buildtest_core.c"
        ],
        "test/buildtest_c_core_dispatch" => [
            "test/buildtest_c_core_dispatch-bin-buildtest_core_dispatch.o"
        ],
        "test/buildtest_c_core_dispatch-bin-buildtest_core_dispatch.o" => [
            "test/buildtest_core_dispatch.c"
        ],
        "test/buildtest_c_core_names" => [
            "test/buildtest_c_core_names-bin-buildtest_core_names.o"
        ],
        "test/buildtest_c_core_names-bin-buildtest_core_names.o" => [
            "test/buildtest_core_names.c"
        ],
        "test/buildtest_c_core_object" => [
            "test/buildtest_c_core_object-bin-buildtest_core_object.o"
        ],
        "test/buildtest_c_core_object-bin-buildtest_core_object.o" => [
            "test/buildtest_core_object.c"
        ],
        "test/buildtest_c_cryptoerr_legacy" => [
            "test/buildtest_c_cryptoerr_legacy-bin-buildtest_cryptoerr_legacy.o"
        ],
        "test/buildtest_c_cryptoerr_legacy-bin-buildtest_cryptoerr_legacy.o" => [
            "test/buildtest_cryptoerr_legacy.c"
        ],
        "test/buildtest_c_decoder" => [
            "test/buildtest_c_decoder-bin-buildtest_decoder.o"
        ],
        "test/buildtest_c_decoder-bin-buildtest_decoder.o" => [
            "test/buildtest_decoder.c"
        ],
        "test/buildtest_c_des" => [
            "test/buildtest_c_des-bin-buildtest_des.o"
        ],
        "test/buildtest_c_des-bin-buildtest_des.o" => [
            "test/buildtest_des.c"
        ],
        "test/buildtest_c_dh" => [
            "test/buildtest_c_dh-bin-buildtest_dh.o"
        ],
        "test/buildtest_c_dh-bin-buildtest_dh.o" => [
            "test/buildtest_dh.c"
        ],
        "test/buildtest_c_dsa" => [
            "test/buildtest_c_dsa-bin-buildtest_dsa.o"
        ],
        "test/buildtest_c_dsa-bin-buildtest_dsa.o" => [
            "test/buildtest_dsa.c"
        ],
        "test/buildtest_c_dtls1" => [
            "test/buildtest_c_dtls1-bin-buildtest_dtls1.o"
        ],
        "test/buildtest_c_dtls1-bin-buildtest_dtls1.o" => [
            "test/buildtest_dtls1.c"
        ],
        "test/buildtest_c_e_os2" => [
            "test/buildtest_c_e_os2-bin-buildtest_e_os2.o"
        ],
        "test/buildtest_c_e_os2-bin-buildtest_e_os2.o" => [
            "test/buildtest_e_os2.c"
        ],
        "test/buildtest_c_ebcdic" => [
            "test/buildtest_c_ebcdic-bin-buildtest_ebcdic.o"
        ],
        "test/buildtest_c_ebcdic-bin-buildtest_ebcdic.o" => [
            "test/buildtest_ebcdic.c"
        ],
        "test/buildtest_c_ec" => [
            "test/buildtest_c_ec-bin-buildtest_ec.o"
        ],
        "test/buildtest_c_ec-bin-buildtest_ec.o" => [
            "test/buildtest_ec.c"
        ],
        "test/buildtest_c_ecdh" => [
            "test/buildtest_c_ecdh-bin-buildtest_ecdh.o"
        ],
        "test/buildtest_c_ecdh-bin-buildtest_ecdh.o" => [
            "test/buildtest_ecdh.c"
        ],
        "test/buildtest_c_ecdsa" => [
            "test/buildtest_c_ecdsa-bin-buildtest_ecdsa.o"
        ],
        "test/buildtest_c_ecdsa-bin-buildtest_ecdsa.o" => [
            "test/buildtest_ecdsa.c"
        ],
        "test/buildtest_c_encoder" => [
            "test/buildtest_c_encoder-bin-buildtest_encoder.o"
        ],
        "test/buildtest_c_encoder-bin-buildtest_encoder.o" => [
            "test/buildtest_encoder.c"
        ],
        "test/buildtest_c_engine" => [
            "test/buildtest_c_engine-bin-buildtest_engine.o"
        ],
        "test/buildtest_c_engine-bin-buildtest_engine.o" => [
            "test/buildtest_engine.c"
        ],
        "test/buildtest_c_evp" => [
            "test/buildtest_c_evp-bin-buildtest_evp.o"
        ],
        "test/buildtest_c_evp-bin-buildtest_evp.o" => [
            "test/buildtest_evp.c"
        ],
        "test/buildtest_c_fips_names" => [
            "test/buildtest_c_fips_names-bin-buildtest_fips_names.o"
        ],
        "test/buildtest_c_fips_names-bin-buildtest_fips_names.o" => [
            "test/buildtest_fips_names.c"
        ],
        "test/buildtest_c_hmac" => [
            "test/buildtest_c_hmac-bin-buildtest_hmac.o"
        ],
        "test/buildtest_c_hmac-bin-buildtest_hmac.o" => [
            "test/buildtest_hmac.c"
        ],
        "test/buildtest_c_http" => [
            "test/buildtest_c_http-bin-buildtest_http.o"
        ],
        "test/buildtest_c_http-bin-buildtest_http.o" => [
            "test/buildtest_http.c"
        ],
        "test/buildtest_c_idea" => [
            "test/buildtest_c_idea-bin-buildtest_idea.o"
        ],
        "test/buildtest_c_idea-bin-buildtest_idea.o" => [
            "test/buildtest_idea.c"
        ],
        "test/buildtest_c_kdf" => [
            "test/buildtest_c_kdf-bin-buildtest_kdf.o"
        ],
        "test/buildtest_c_kdf-bin-buildtest_kdf.o" => [
            "test/buildtest_kdf.c"
        ],
        "test/buildtest_c_macros" => [
            "test/buildtest_c_macros-bin-buildtest_macros.o"
        ],
        "test/buildtest_c_macros-bin-buildtest_macros.o" => [
            "test/buildtest_macros.c"
        ],
        "test/buildtest_c_md4" => [
            "test/buildtest_c_md4-bin-buildtest_md4.o"
        ],
        "test/buildtest_c_md4-bin-buildtest_md4.o" => [
            "test/buildtest_md4.c"
        ],
        "test/buildtest_c_md5" => [
            "test/buildtest_c_md5-bin-buildtest_md5.o"
        ],
        "test/buildtest_c_md5-bin-buildtest_md5.o" => [
            "test/buildtest_md5.c"
        ],
        "test/buildtest_c_mdc2" => [
            "test/buildtest_c_mdc2-bin-buildtest_mdc2.o"
        ],
        "test/buildtest_c_mdc2-bin-buildtest_mdc2.o" => [
            "test/buildtest_mdc2.c"
        ],
        "test/buildtest_c_modes" => [
            "test/buildtest_c_modes-bin-buildtest_modes.o"
        ],
        "test/buildtest_c_modes-bin-buildtest_modes.o" => [
            "test/buildtest_modes.c"
        ],
        "test/buildtest_c_obj_mac" => [
            "test/buildtest_c_obj_mac-bin-buildtest_obj_mac.o"
        ],
        "test/buildtest_c_obj_mac-bin-buildtest_obj_mac.o" => [
            "test/buildtest_obj_mac.c"
        ],
        "test/buildtest_c_objects" => [
            "test/buildtest_c_objects-bin-buildtest_objects.o"
        ],
        "test/buildtest_c_objects-bin-buildtest_objects.o" => [
            "test/buildtest_objects.c"
        ],
        "test/buildtest_c_ossl_typ" => [
            "test/buildtest_c_ossl_typ-bin-buildtest_ossl_typ.o"
        ],
        "test/buildtest_c_ossl_typ-bin-buildtest_ossl_typ.o" => [
            "test/buildtest_ossl_typ.c"
        ],
        "test/buildtest_c_param_build" => [
            "test/buildtest_c_param_build-bin-buildtest_param_build.o"
        ],
        "test/buildtest_c_param_build-bin-buildtest_param_build.o" => [
            "test/buildtest_param_build.c"
        ],
        "test/buildtest_c_params" => [
            "test/buildtest_c_params-bin-buildtest_params.o"
        ],
        "test/buildtest_c_params-bin-buildtest_params.o" => [
            "test/buildtest_params.c"
        ],
        "test/buildtest_c_pem" => [
            "test/buildtest_c_pem-bin-buildtest_pem.o"
        ],
        "test/buildtest_c_pem-bin-buildtest_pem.o" => [
            "test/buildtest_pem.c"
        ],
        "test/buildtest_c_pem2" => [
            "test/buildtest_c_pem2-bin-buildtest_pem2.o"
        ],
        "test/buildtest_c_pem2-bin-buildtest_pem2.o" => [
            "test/buildtest_pem2.c"
        ],
        "test/buildtest_c_prov_ssl" => [
            "test/buildtest_c_prov_ssl-bin-buildtest_prov_ssl.o"
        ],
        "test/buildtest_c_prov_ssl-bin-buildtest_prov_ssl.o" => [
            "test/buildtest_prov_ssl.c"
        ],
        "test/buildtest_c_provider" => [
            "test/buildtest_c_provider-bin-buildtest_provider.o"
        ],
        "test/buildtest_c_provider-bin-buildtest_provider.o" => [
            "test/buildtest_provider.c"
        ],
        "test/buildtest_c_quic" => [
            "test/buildtest_c_quic-bin-buildtest_quic.o"
        ],
        "test/buildtest_c_quic-bin-buildtest_quic.o" => [
            "test/buildtest_quic.c"
        ],
        "test/buildtest_c_rand" => [
            "test/buildtest_c_rand-bin-buildtest_rand.o"
        ],
        "test/buildtest_c_rand-bin-buildtest_rand.o" => [
            "test/buildtest_rand.c"
        ],
        "test/buildtest_c_rc2" => [
            "test/buildtest_c_rc2-bin-buildtest_rc2.o"
        ],
        "test/buildtest_c_rc2-bin-buildtest_rc2.o" => [
            "test/buildtest_rc2.c"
        ],
        "test/buildtest_c_rc4" => [
            "test/buildtest_c_rc4-bin-buildtest_rc4.o"
        ],
        "test/buildtest_c_rc4-bin-buildtest_rc4.o" => [
            "test/buildtest_rc4.c"
        ],
        "test/buildtest_c_ripemd" => [
            "test/buildtest_c_ripemd-bin-buildtest_ripemd.o"
        ],
        "test/buildtest_c_ripemd-bin-buildtest_ripemd.o" => [
            "test/buildtest_ripemd.c"
        ],
        "test/buildtest_c_rsa" => [
            "test/buildtest_c_rsa-bin-buildtest_rsa.o"
        ],
        "test/buildtest_c_rsa-bin-buildtest_rsa.o" => [
            "test/buildtest_rsa.c"
        ],
        "test/buildtest_c_seed" => [
            "test/buildtest_c_seed-bin-buildtest_seed.o"
        ],
        "test/buildtest_c_seed-bin-buildtest_seed.o" => [
            "test/buildtest_seed.c"
        ],
        "test/buildtest_c_self_test" => [
            "test/buildtest_c_self_test-bin-buildtest_self_test.o"
        ],
        "test/buildtest_c_self_test-bin-buildtest_self_test.o" => [
            "test/buildtest_self_test.c"
        ],
        "test/buildtest_c_sha" => [
            "test/buildtest_c_sha-bin-buildtest_sha.o"
        ],
        "test/buildtest_c_sha-bin-buildtest_sha.o" => [
            "test/buildtest_sha.c"
        ],
        "test/buildtest_c_srtp" => [
            "test/buildtest_c_srtp-bin-buildtest_srtp.o"
        ],
        "test/buildtest_c_srtp-bin-buildtest_srtp.o" => [
            "test/buildtest_srtp.c"
        ],
        "test/buildtest_c_ssl2" => [
            "test/buildtest_c_ssl2-bin-buildtest_ssl2.o"
        ],
        "test/buildtest_c_ssl2-bin-buildtest_ssl2.o" => [
            "test/buildtest_ssl2.c"
        ],
        "test/buildtest_c_sslerr_legacy" => [
            "test/buildtest_c_sslerr_legacy-bin-buildtest_sslerr_legacy.o"
        ],
        "test/buildtest_c_sslerr_legacy-bin-buildtest_sslerr_legacy.o" => [
            "test/buildtest_sslerr_legacy.c"
        ],
        "test/buildtest_c_stack" => [
            "test/buildtest_c_stack-bin-buildtest_stack.o"
        ],
        "test/buildtest_c_stack-bin-buildtest_stack.o" => [
            "test/buildtest_stack.c"
        ],
        "test/buildtest_c_store" => [
            "test/buildtest_c_store-bin-buildtest_store.o"
        ],
        "test/buildtest_c_store-bin-buildtest_store.o" => [
            "test/buildtest_store.c"
        ],
        "test/buildtest_c_symhacks" => [
            "test/buildtest_c_symhacks-bin-buildtest_symhacks.o"
        ],
        "test/buildtest_c_symhacks-bin-buildtest_symhacks.o" => [
            "test/buildtest_symhacks.c"
        ],
        "test/buildtest_c_tls1" => [
            "test/buildtest_c_tls1-bin-buildtest_tls1.o"
        ],
        "test/buildtest_c_tls1-bin-buildtest_tls1.o" => [
            "test/buildtest_tls1.c"
        ],
        "test/buildtest_c_ts" => [
            "test/buildtest_c_ts-bin-buildtest_ts.o"
        ],
        "test/buildtest_c_ts-bin-buildtest_ts.o" => [
            "test/buildtest_ts.c"
        ],
        "test/buildtest_c_txt_db" => [
            "test/buildtest_c_txt_db-bin-buildtest_txt_db.o"
        ],
        "test/buildtest_c_txt_db-bin-buildtest_txt_db.o" => [
            "test/buildtest_txt_db.c"
        ],
        "test/buildtest_c_types" => [
            "test/buildtest_c_types-bin-buildtest_types.o"
        ],
        "test/buildtest_c_types-bin-buildtest_types.o" => [
            "test/buildtest_types.c"
        ],
        "test/buildtest_c_whrlpool" => [
            "test/buildtest_c_whrlpool-bin-buildtest_whrlpool.o"
        ],
        "test/buildtest_c_whrlpool-bin-buildtest_whrlpool.o" => [
            "test/buildtest_whrlpool.c"
        ],
        "test/casttest" => [
            "test/casttest-bin-casttest.o"
        ],
        "test/casttest-bin-casttest.o" => [
            "test/casttest.c"
        ],
        "test/chacha_internal_test" => [
            "test/chacha_internal_test-bin-chacha_internal_test.o"
        ],
        "test/chacha_internal_test-bin-chacha_internal_test.o" => [
            "test/chacha_internal_test.c"
        ],
        "test/cipher_overhead_test" => [
            "test/cipher_overhead_test-bin-cipher_overhead_test.o"
        ],
        "test/cipher_overhead_test-bin-cipher_overhead_test.o" => [
            "test/cipher_overhead_test.c"
        ],
        "test/cipherbytes_test" => [
            "test/cipherbytes_test-bin-cipherbytes_test.o"
        ],
        "test/cipherbytes_test-bin-cipherbytes_test.o" => [
            "test/cipherbytes_test.c"
        ],
        "test/cipherlist_test" => [
            "test/cipherlist_test-bin-cipherlist_test.o"
        ],
        "test/cipherlist_test-bin-cipherlist_test.o" => [
            "test/cipherlist_test.c"
        ],
        "test/ciphername_test" => [
            "test/ciphername_test-bin-ciphername_test.o"
        ],
        "test/ciphername_test-bin-ciphername_test.o" => [
            "test/ciphername_test.c"
        ],
        "test/clienthellotest" => [
            "test/clienthellotest-bin-clienthellotest.o"
        ],
        "test/clienthellotest-bin-clienthellotest.o" => [
            "test/clienthellotest.c"
        ],
        "test/cmactest" => [
            "test/cmactest-bin-cmactest.o"
        ],
        "test/cmactest-bin-cmactest.o" => [
            "test/cmactest.c"
        ],
        "test/cmp_asn_test" => [
            "test/cmp_asn_test-bin-cmp_asn_test.o",
            "test/helpers/cmp_asn_test-bin-cmp_testlib.o"
        ],
        "test/cmp_asn_test-bin-cmp_asn_test.o" => [
            "test/cmp_asn_test.c"
        ],
        "test/cmp_client_test" => [
            "apps/lib/cmp_client_test-bin-cmp_mock_srv.o",
            "test/cmp_client_test-bin-cmp_client_test.o",
            "test/helpers/cmp_client_test-bin-cmp_testlib.o"
        ],
        "test/cmp_client_test-bin-cmp_client_test.o" => [
            "test/cmp_client_test.c"
        ],
        "test/cmp_ctx_test" => [
            "test/cmp_ctx_test-bin-cmp_ctx_test.o",
            "test/helpers/cmp_ctx_test-bin-cmp_testlib.o"
        ],
        "test/cmp_ctx_test-bin-cmp_ctx_test.o" => [
            "test/cmp_ctx_test.c"
        ],
        "test/cmp_hdr_test" => [
            "test/cmp_hdr_test-bin-cmp_hdr_test.o",
            "test/helpers/cmp_hdr_test-bin-cmp_testlib.o"
        ],
        "test/cmp_hdr_test-bin-cmp_hdr_test.o" => [
            "test/cmp_hdr_test.c"
        ],
        "test/cmp_msg_test" => [
            "test/cmp_msg_test-bin-cmp_msg_test.o",
            "test/helpers/cmp_msg_test-bin-cmp_testlib.o"
        ],
        "test/cmp_msg_test-bin-cmp_msg_test.o" => [
            "test/cmp_msg_test.c"
        ],
        "test/cmp_protect_test" => [
            "test/cmp_protect_test-bin-cmp_protect_test.o",
            "test/helpers/cmp_protect_test-bin-cmp_testlib.o"
        ],
        "test/cmp_protect_test-bin-cmp_protect_test.o" => [
            "test/cmp_protect_test.c"
        ],
        "test/cmp_server_test" => [
            "test/cmp_server_test-bin-cmp_server_test.o",
            "test/helpers/cmp_server_test-bin-cmp_testlib.o"
        ],
        "test/cmp_server_test-bin-cmp_server_test.o" => [
            "test/cmp_server_test.c"
        ],
        "test/cmp_status_test" => [
            "test/cmp_status_test-bin-cmp_status_test.o",
            "test/helpers/cmp_status_test-bin-cmp_testlib.o"
        ],
        "test/cmp_status_test-bin-cmp_status_test.o" => [
            "test/cmp_status_test.c"
        ],
        "test/cmp_vfy_test" => [
            "test/cmp_vfy_test-bin-cmp_vfy_test.o",
            "test/helpers/cmp_vfy_test-bin-cmp_testlib.o"
        ],
        "test/cmp_vfy_test-bin-cmp_vfy_test.o" => [
            "test/cmp_vfy_test.c"
        ],
        "test/cmsapitest" => [
            "test/cmsapitest-bin-cmsapitest.o"
        ],
        "test/cmsapitest-bin-cmsapitest.o" => [
            "test/cmsapitest.c"
        ],
        "test/conf_include_test" => [
            "test/conf_include_test-bin-conf_include_test.o"
        ],
        "test/conf_include_test-bin-conf_include_test.o" => [
            "test/conf_include_test.c"
        ],
        "test/confdump" => [
            "test/confdump-bin-confdump.o"
        ],
        "test/confdump-bin-confdump.o" => [
            "test/confdump.c"
        ],
        "test/constant_time_test" => [
            "test/constant_time_test-bin-constant_time_test.o"
        ],
        "test/constant_time_test-bin-constant_time_test.o" => [
            "test/constant_time_test.c"
        ],
        "test/context_internal_test" => [
            "test/context_internal_test-bin-context_internal_test.o"
        ],
        "test/context_internal_test-bin-context_internal_test.o" => [
            "test/context_internal_test.c"
        ],
        "test/crltest" => [
            "test/crltest-bin-crltest.o"
        ],
        "test/crltest-bin-crltest.o" => [
            "test/crltest.c"
        ],
        "test/ct_test" => [
            "test/ct_test-bin-ct_test.o"
        ],
        "test/ct_test-bin-ct_test.o" => [
            "test/ct_test.c"
        ],
        "test/ctype_internal_test" => [
            "test/ctype_internal_test-bin-ctype_internal_test.o"
        ],
        "test/ctype_internal_test-bin-ctype_internal_test.o" => [
            "test/ctype_internal_test.c"
        ],
        "test/curve448_internal_test" => [
            "test/curve448_internal_test-bin-curve448_internal_test.o"
        ],
        "test/curve448_internal_test-bin-curve448_internal_test.o" => [
            "test/curve448_internal_test.c"
        ],
        "test/d2i_test" => [
            "test/d2i_test-bin-d2i_test.o"
        ],
        "test/d2i_test-bin-d2i_test.o" => [
            "test/d2i_test.c"
        ],
        "test/danetest" => [
            "test/danetest-bin-danetest.o"
        ],
        "test/danetest-bin-danetest.o" => [
            "test/danetest.c"
        ],
        "test/defltfips_test" => [
            "test/defltfips_test-bin-defltfips_test.o"
        ],
        "test/defltfips_test-bin-defltfips_test.o" => [
            "test/defltfips_test.c"
        ],
        "test/destest" => [
            "test/destest-bin-destest.o"
        ],
        "test/destest-bin-destest.o" => [
            "test/destest.c"
        ],
        "test/dhtest" => [
            "test/dhtest-bin-dhtest.o"
        ],
        "test/dhtest-bin-dhtest.o" => [
            "test/dhtest.c"
        ],
        "test/drbgtest" => [
            "test/drbgtest-bin-drbgtest.o"
        ],
        "test/drbgtest-bin-drbgtest.o" => [
            "test/drbgtest.c"
        ],
        "test/dsa_no_digest_size_test" => [
            "test/dsa_no_digest_size_test-bin-dsa_no_digest_size_test.o"
        ],
        "test/dsa_no_digest_size_test-bin-dsa_no_digest_size_test.o" => [
            "test/dsa_no_digest_size_test.c"
        ],
        "test/dsatest" => [
            "test/dsatest-bin-dsatest.o"
        ],
        "test/dsatest-bin-dsatest.o" => [
            "test/dsatest.c"
        ],
        "test/dtls_mtu_test" => [
            "test/dtls_mtu_test-bin-dtls_mtu_test.o",
            "test/helpers/dtls_mtu_test-bin-ssltestlib.o"
        ],
        "test/dtls_mtu_test-bin-dtls_mtu_test.o" => [
            "test/dtls_mtu_test.c"
        ],
        "test/dtlstest" => [
            "test/dtlstest-bin-dtlstest.o",
            "test/helpers/dtlstest-bin-ssltestlib.o"
        ],
        "test/dtlstest-bin-dtlstest.o" => [
            "test/dtlstest.c"
        ],
        "test/dtlsv1listentest" => [
            "test/dtlsv1listentest-bin-dtlsv1listentest.o"
        ],
        "test/dtlsv1listentest-bin-dtlsv1listentest.o" => [
            "test/dtlsv1listentest.c"
        ],
        "test/ec_internal_test" => [
            "test/ec_internal_test-bin-ec_internal_test.o"
        ],
        "test/ec_internal_test-bin-ec_internal_test.o" => [
            "test/ec_internal_test.c"
        ],
        "test/ecdsatest" => [
            "test/ecdsatest-bin-ecdsatest.o"
        ],
        "test/ecdsatest-bin-ecdsatest.o" => [
            "test/ecdsatest.c"
        ],
        "test/ecstresstest" => [
            "test/ecstresstest-bin-ecstresstest.o"
        ],
        "test/ecstresstest-bin-ecstresstest.o" => [
            "test/ecstresstest.c"
        ],
        "test/ectest" => [
            "test/ectest-bin-ectest.o"
        ],
        "test/ectest-bin-ectest.o" => [
            "test/ectest.c"
        ],
        "test/endecode_test" => [
            "test/endecode_test-bin-endecode_test.o",
            "test/helpers/endecode_test-bin-predefined_dhparams.o"
        ],
        "test/endecode_test-bin-endecode_test.o" => [
            "test/endecode_test.c"
        ],
        "test/endecoder_legacy_test" => [
            "test/endecoder_legacy_test-bin-endecoder_legacy_test.o"
        ],
        "test/endecoder_legacy_test-bin-endecoder_legacy_test.o" => [
            "test/endecoder_legacy_test.c"
        ],
        "test/enginetest" => [
            "test/enginetest-bin-enginetest.o"
        ],
        "test/enginetest-bin-enginetest.o" => [
            "test/enginetest.c"
        ],
        "test/errtest" => [
            "test/errtest-bin-errtest.o"
        ],
        "test/errtest-bin-errtest.o" => [
            "test/errtest.c"
        ],
        "test/evp_byname_test" => [
            "test/evp_byname_test-bin-evp_byname_test.o"
        ],
        "test/evp_byname_test-bin-evp_byname_test.o" => [
            "test/evp_byname_test.c"
        ],
        "test/evp_extra_test" => [
            "providers/evp_extra_test-bin-legacyprov.o",
            "test/evp_extra_test-bin-evp_extra_test.o"
        ],
        "test/evp_extra_test-bin-evp_extra_test.o" => [
            "test/evp_extra_test.c"
        ],
        "test/evp_extra_test2" => [
            "test/evp_extra_test2-bin-evp_extra_test2.o"
        ],
        "test/evp_extra_test2-bin-evp_extra_test2.o" => [
            "test/evp_extra_test2.c"
        ],
        "test/evp_fetch_prov_test" => [
            "test/evp_fetch_prov_test-bin-evp_fetch_prov_test.o"
        ],
        "test/evp_fetch_prov_test-bin-evp_fetch_prov_test.o" => [
            "test/evp_fetch_prov_test.c"
        ],
        "test/evp_kdf_test" => [
            "test/evp_kdf_test-bin-evp_kdf_test.o"
        ],
        "test/evp_kdf_test-bin-evp_kdf_test.o" => [
            "test/evp_kdf_test.c"
        ],
        "test/evp_libctx_test" => [
            "test/evp_libctx_test-bin-evp_libctx_test.o"
        ],
        "test/evp_libctx_test-bin-evp_libctx_test.o" => [
            "test/evp_libctx_test.c"
        ],
        "test/evp_pkey_ctx_new_from_name" => [
            "test/evp_pkey_ctx_new_from_name-bin-evp_pkey_ctx_new_from_name.o"
        ],
        "test/evp_pkey_ctx_new_from_name-bin-evp_pkey_ctx_new_from_name.o" => [
            "test/evp_pkey_ctx_new_from_name.c"
        ],
        "test/evp_pkey_dparams_test" => [
            "test/evp_pkey_dparams_test-bin-evp_pkey_dparams_test.o"
        ],
        "test/evp_pkey_dparams_test-bin-evp_pkey_dparams_test.o" => [
            "test/evp_pkey_dparams_test.c"
        ],
        "test/evp_pkey_provided_test" => [
            "test/evp_pkey_provided_test-bin-evp_pkey_provided_test.o"
        ],
        "test/evp_pkey_provided_test-bin-evp_pkey_provided_test.o" => [
            "test/evp_pkey_provided_test.c"
        ],
        "test/evp_test" => [
            "test/evp_test-bin-evp_test.o"
        ],
        "test/evp_test-bin-evp_test.o" => [
            "test/evp_test.c"
        ],
        "test/exdatatest" => [
            "test/exdatatest-bin-exdatatest.o"
        ],
        "test/exdatatest-bin-exdatatest.o" => [
            "test/exdatatest.c"
        ],
        "test/exptest" => [
            "test/exptest-bin-exptest.o"
        ],
        "test/exptest-bin-exptest.o" => [
            "test/exptest.c"
        ],
        "test/ext_internal_test" => [
            "test/ext_internal_test-bin-ext_internal_test.o"
        ],
        "test/ext_internal_test-bin-ext_internal_test.o" => [
            "test/ext_internal_test.c"
        ],
        "test/fatalerrtest" => [
            "test/fatalerrtest-bin-fatalerrtest.o",
            "test/helpers/fatalerrtest-bin-ssltestlib.o"
        ],
        "test/fatalerrtest-bin-fatalerrtest.o" => [
            "test/fatalerrtest.c"
        ],
        "test/ffc_internal_test" => [
            "test/ffc_internal_test-bin-ffc_internal_test.o"
        ],
        "test/ffc_internal_test-bin-ffc_internal_test.o" => [
            "test/ffc_internal_test.c"
        ],
        "test/fips_version_test" => [
            "test/fips_version_test-bin-fips_version_test.o"
        ],
        "test/fips_version_test-bin-fips_version_test.o" => [
            "test/fips_version_test.c"
        ],
        "test/gmdifftest" => [
            "test/gmdifftest-bin-gmdifftest.o"
        ],
        "test/gmdifftest-bin-gmdifftest.o" => [
            "test/gmdifftest.c"
        ],
        "test/helpers/asynciotest-bin-ssltestlib.o" => [
            "test/helpers/ssltestlib.c"
        ],
        "test/helpers/cmp_asn_test-bin-cmp_testlib.o" => [
            "test/helpers/cmp_testlib.c"
        ],
        "test/helpers/cmp_client_test-bin-cmp_testlib.o" => [
            "test/helpers/cmp_testlib.c"
        ],
        "test/helpers/cmp_ctx_test-bin-cmp_testlib.o" => [
            "test/helpers/cmp_testlib.c"
        ],
        "test/helpers/cmp_hdr_test-bin-cmp_testlib.o" => [
            "test/helpers/cmp_testlib.c"
        ],
        "test/helpers/cmp_msg_test-bin-cmp_testlib.o" => [
            "test/helpers/cmp_testlib.c"
        ],
        "test/helpers/cmp_protect_test-bin-cmp_testlib.o" => [
            "test/helpers/cmp_testlib.c"
        ],
        "test/helpers/cmp_server_test-bin-cmp_testlib.o" => [
            "test/helpers/cmp_testlib.c"
        ],
        "test/helpers/cmp_status_test-bin-cmp_testlib.o" => [
            "test/helpers/cmp_testlib.c"
        ],
        "test/helpers/cmp_vfy_test-bin-cmp_testlib.o" => [
            "test/helpers/cmp_testlib.c"
        ],
        "test/helpers/dtls_mtu_test-bin-ssltestlib.o" => [
            "test/helpers/ssltestlib.c"
        ],
        "test/helpers/dtlstest-bin-ssltestlib.o" => [
            "test/helpers/ssltestlib.c"
        ],
        "test/helpers/endecode_test-bin-predefined_dhparams.o" => [
            "test/helpers/predefined_dhparams.c"
        ],
        "test/helpers/fatalerrtest-bin-ssltestlib.o" => [
            "test/helpers/ssltestlib.c"
        ],
        "test/helpers/pkcs12_format_test-bin-pkcs12.o" => [
            "test/helpers/pkcs12.c"
        ],
        "test/helpers/recordlentest-bin-ssltestlib.o" => [
            "test/helpers/ssltestlib.c"
        ],
        "test/helpers/servername_test-bin-ssltestlib.o" => [
            "test/helpers/ssltestlib.c"
        ],
        "test/helpers/ssl_old_test-bin-predefined_dhparams.o" => [
            "test/helpers/predefined_dhparams.c"
        ],
        "test/helpers/ssl_test-bin-handshake.o" => [
            "test/helpers/handshake.c"
        ],
        "test/helpers/ssl_test-bin-handshake_srp.o" => [
            "test/helpers/handshake_srp.c"
        ],
        "test/helpers/ssl_test-bin-ssl_test_ctx.o" => [
            "test/helpers/ssl_test_ctx.c"
        ],
        "test/helpers/ssl_test_ctx_test-bin-ssl_test_ctx.o" => [
            "test/helpers/ssl_test_ctx.c"
        ],
        "test/helpers/sslapitest-bin-ssltestlib.o" => [
            "test/helpers/ssltestlib.c"
        ],
        "test/helpers/sslbuffertest-bin-ssltestlib.o" => [
            "test/helpers/ssltestlib.c"
        ],
        "test/helpers/sslcorrupttest-bin-ssltestlib.o" => [
            "test/helpers/ssltestlib.c"
        ],
        "test/helpers/tls13ccstest-bin-ssltestlib.o" => [
            "test/helpers/ssltestlib.c"
        ],
        "test/hexstr_test" => [
            "test/hexstr_test-bin-hexstr_test.o"
        ],
        "test/hexstr_test-bin-hexstr_test.o" => [
            "test/hexstr_test.c"
        ],
        "test/hmactest" => [
            "test/hmactest-bin-hmactest.o"
        ],
        "test/hmactest-bin-hmactest.o" => [
            "test/hmactest.c"
        ],
        "test/http_test" => [
            "test/http_test-bin-http_test.o"
        ],
        "test/http_test-bin-http_test.o" => [
            "test/http_test.c"
        ],
        "test/ideatest" => [
            "test/ideatest-bin-ideatest.o"
        ],
        "test/ideatest-bin-ideatest.o" => [
            "test/ideatest.c"
        ],
        "test/igetest" => [
            "test/igetest-bin-igetest.o"
        ],
        "test/igetest-bin-igetest.o" => [
            "test/igetest.c"
        ],
        "test/keymgmt_internal_test" => [
            "test/keymgmt_internal_test-bin-keymgmt_internal_test.o"
        ],
        "test/keymgmt_internal_test-bin-keymgmt_internal_test.o" => [
            "test/keymgmt_internal_test.c"
        ],
        "test/lhash_test" => [
            "test/lhash_test-bin-lhash_test.o"
        ],
        "test/lhash_test-bin-lhash_test.o" => [
            "test/lhash_test.c"
        ],
        "test/libtestutil.a" => [
            "apps/lib/libtestutil-lib-opt.o",
            "apps/lib/libtestutil-lib-win32_init.o",
            "test/testutil/libtestutil-lib-apps_shims.o",
            "test/testutil/libtestutil-lib-basic_output.o",
            "test/testutil/libtestutil-lib-cb.o",
            "test/testutil/libtestutil-lib-driver.o",
            "test/testutil/libtestutil-lib-fake_random.o",
            "test/testutil/libtestutil-lib-format_output.o",
            "test/testutil/libtestutil-lib-load.o",
            "test/testutil/libtestutil-lib-main.o",
            "test/testutil/libtestutil-lib-options.o",
            "test/testutil/libtestutil-lib-output.o",
            "test/testutil/libtestutil-lib-provider.o",
            "test/testutil/libtestutil-lib-random.o",
            "test/testutil/libtestutil-lib-stanza.o",
            "test/testutil/libtestutil-lib-test_cleanup.o",
            "test/testutil/libtestutil-lib-test_options.o",
            "test/testutil/libtestutil-lib-tests.o",
            "test/testutil/libtestutil-lib-testutil_init.o"
        ],
        "test/localetest" => [
            "test/localetest-bin-localetest.o"
        ],
        "test/localetest-bin-localetest.o" => [
            "test/localetest.c"
        ],
        "test/mdc2_internal_test" => [
            "test/mdc2_internal_test-bin-mdc2_internal_test.o"
        ],
        "test/mdc2_internal_test-bin-mdc2_internal_test.o" => [
            "test/mdc2_internal_test.c"
        ],
        "test/mdc2test" => [
            "test/mdc2test-bin-mdc2test.o"
        ],
        "test/mdc2test-bin-mdc2test.o" => [
            "test/mdc2test.c"
        ],
        "test/memleaktest" => [
            "test/memleaktest-bin-memleaktest.o"
        ],
        "test/memleaktest-bin-memleaktest.o" => [
            "test/memleaktest.c"
        ],
        "test/modes_internal_test" => [
            "test/modes_internal_test-bin-modes_internal_test.o"
        ],
        "test/modes_internal_test-bin-modes_internal_test.o" => [
            "test/modes_internal_test.c"
        ],
        "test/namemap_internal_test" => [
            "test/namemap_internal_test-bin-namemap_internal_test.o"
        ],
        "test/namemap_internal_test-bin-namemap_internal_test.o" => [
            "test/namemap_internal_test.c"
        ],
        "test/nodefltctxtest" => [
            "test/nodefltctxtest-bin-nodefltctxtest.o"
        ],
        "test/nodefltctxtest-bin-nodefltctxtest.o" => [
            "test/nodefltctxtest.c"
        ],
        "test/ocspapitest" => [
            "test/ocspapitest-bin-ocspapitest.o"
        ],
        "test/ocspapitest-bin-ocspapitest.o" => [
            "test/ocspapitest.c"
        ],
        "test/ossl_store_test" => [
            "test/ossl_store_test-bin-ossl_store_test.o"
        ],
        "test/ossl_store_test-bin-ossl_store_test.o" => [
            "test/ossl_store_test.c"
        ],
        "test/p_minimal" => [
            "test/p_minimal-dso-p_minimal.o",
            "test/p_minimal.ld"
        ],
        "test/p_minimal-dso-p_minimal.o" => [
            "test/p_minimal.c"
        ],
        "test/p_test" => [
            "test/p_test-dso-p_test.o",
            "test/p_test.ld"
        ],
        "test/p_test-dso-p_test.o" => [
            "test/p_test.c"
        ],
        "test/packettest" => [
            "test/packettest-bin-packettest.o"
        ],
        "test/packettest-bin-packettest.o" => [
            "test/packettest.c"
        ],
        "test/param_build_test" => [
            "test/param_build_test-bin-param_build_test.o"
        ],
        "test/param_build_test-bin-param_build_test.o" => [
            "test/param_build_test.c"
        ],
        "test/params_api_test" => [
            "test/params_api_test-bin-params_api_test.o"
        ],
        "test/params_api_test-bin-params_api_test.o" => [
            "test/params_api_test.c"
        ],
        "test/params_conversion_test" => [
            "test/params_conversion_test-bin-params_conversion_test.o"
        ],
        "test/params_conversion_test-bin-params_conversion_test.o" => [
            "test/params_conversion_test.c"
        ],
        "test/params_test" => [
            "test/params_test-bin-params_test.o"
        ],
        "test/params_test-bin-params_test.o" => [
            "test/params_test.c"
        ],
        "test/pbelutest" => [
            "test/pbelutest-bin-pbelutest.o"
        ],
        "test/pbelutest-bin-pbelutest.o" => [
            "test/pbelutest.c"
        ],
        "test/pbetest" => [
            "test/pbetest-bin-pbetest.o"
        ],
        "test/pbetest-bin-pbetest.o" => [
            "test/pbetest.c"
        ],
        "test/pem_read_depr_test" => [
            "test/pem_read_depr_test-bin-pem_read_depr_test.o"
        ],
        "test/pem_read_depr_test-bin-pem_read_depr_test.o" => [
            "test/pem_read_depr_test.c"
        ],
        "test/pemtest" => [
            "test/pemtest-bin-pemtest.o"
        ],
        "test/pemtest-bin-pemtest.o" => [
            "test/pemtest.c"
        ],
        "test/pkcs12_format_test" => [
            "test/helpers/pkcs12_format_test-bin-pkcs12.o",
            "test/pkcs12_format_test-bin-pkcs12_format_test.o"
        ],
        "test/pkcs12_format_test-bin-pkcs12_format_test.o" => [
            "test/pkcs12_format_test.c"
        ],
        "test/pkcs7_test" => [
            "test/pkcs7_test-bin-pkcs7_test.o"
        ],
        "test/pkcs7_test-bin-pkcs7_test.o" => [
            "test/pkcs7_test.c"
        ],
        "test/pkey_meth_kdf_test" => [
            "test/pkey_meth_kdf_test-bin-pkey_meth_kdf_test.o"
        ],
        "test/pkey_meth_kdf_test-bin-pkey_meth_kdf_test.o" => [
            "test/pkey_meth_kdf_test.c"
        ],
        "test/pkey_meth_test" => [
            "test/pkey_meth_test-bin-pkey_meth_test.o"
        ],
        "test/pkey_meth_test-bin-pkey_meth_test.o" => [
            "test/pkey_meth_test.c"
        ],
        "test/poly1305_internal_test" => [
            "test/poly1305_internal_test-bin-poly1305_internal_test.o"
        ],
        "test/poly1305_internal_test-bin-poly1305_internal_test.o" => [
            "test/poly1305_internal_test.c"
        ],
        "test/property_test" => [
            "test/property_test-bin-property_test.o"
        ],
        "test/property_test-bin-property_test.o" => [
            "test/property_test.c"
        ],
        "test/prov_config_test" => [
            "test/prov_config_test-bin-prov_config_test.o"
        ],
        "test/prov_config_test-bin-prov_config_test.o" => [
            "test/prov_config_test.c"
        ],
        "test/provfetchtest" => [
            "test/provfetchtest-bin-provfetchtest.o"
        ],
        "test/provfetchtest-bin-provfetchtest.o" => [
            "test/provfetchtest.c"
        ],
        "test/provider_fallback_test" => [
            "test/provider_fallback_test-bin-provider_fallback_test.o"
        ],
        "test/provider_fallback_test-bin-provider_fallback_test.o" => [
            "test/provider_fallback_test.c"
        ],
        "test/provider_internal_test" => [
            "test/provider_internal_test-bin-p_test.o",
            "test/provider_internal_test-bin-provider_internal_test.o"
        ],
        "test/provider_internal_test-bin-p_test.o" => [
            "test/p_test.c"
        ],
        "test/provider_internal_test-bin-provider_internal_test.o" => [
            "test/provider_internal_test.c"
        ],
        "test/provider_pkey_test" => [
            "test/provider_pkey_test-bin-fake_rsaprov.o",
            "test/provider_pkey_test-bin-provider_pkey_test.o"
        ],
        "test/provider_pkey_test-bin-fake_rsaprov.o" => [
            "test/fake_rsaprov.c"
        ],
        "test/provider_pkey_test-bin-provider_pkey_test.o" => [
            "test/provider_pkey_test.c"
        ],
        "test/provider_status_test" => [
            "test/provider_status_test-bin-provider_status_test.o"
        ],
        "test/provider_status_test-bin-provider_status_test.o" => [
            "test/provider_status_test.c"
        ],
        "test/provider_test" => [
            "test/provider_test-bin-p_test.o",
            "test/provider_test-bin-provider_test.o"
        ],
        "test/provider_test-bin-p_test.o" => [
            "test/p_test.c"
        ],
        "test/provider_test-bin-provider_test.o" => [
            "test/provider_test.c"
        ],
        "test/punycode_test" => [
            "test/punycode_test-bin-punycode_test.o"
        ],
        "test/punycode_test-bin-punycode_test.o" => [
            "test/punycode_test.c"
        ],
        "test/rand_status_test" => [
            "test/rand_status_test-bin-rand_status_test.o"
        ],
        "test/rand_status_test-bin-rand_status_test.o" => [
            "test/rand_status_test.c"
        ],
        "test/rand_test" => [
            "test/rand_test-bin-rand_test.o"
        ],
        "test/rand_test-bin-rand_test.o" => [
            "test/rand_test.c"
        ],
        "test/rc2test" => [
            "test/rc2test-bin-rc2test.o"
        ],
        "test/rc2test-bin-rc2test.o" => [
            "test/rc2test.c"
        ],
        "test/rc4test" => [
            "test/rc4test-bin-rc4test.o"
        ],
        "test/rc4test-bin-rc4test.o" => [
            "test/rc4test.c"
        ],
        "test/rc5test" => [
            "test/rc5test-bin-rc5test.o"
        ],
        "test/rc5test-bin-rc5test.o" => [
            "test/rc5test.c"
        ],
        "test/rdrand_sanitytest" => [
            "test/rdrand_sanitytest-bin-rdrand_sanitytest.o"
        ],
        "test/rdrand_sanitytest-bin-rdrand_sanitytest.o" => [
            "test/rdrand_sanitytest.c"
        ],
        "test/recordlentest" => [
            "test/helpers/recordlentest-bin-ssltestlib.o",
            "test/recordlentest-bin-recordlentest.o"
        ],
        "test/recordlentest-bin-recordlentest.o" => [
            "test/recordlentest.c"
        ],
        "test/rsa_complex" => [
            "test/rsa_complex-bin-rsa_complex.o"
        ],
        "test/rsa_complex-bin-rsa_complex.o" => [
            "test/rsa_complex.c"
        ],
        "test/rsa_mp_test" => [
            "test/rsa_mp_test-bin-rsa_mp_test.o"
        ],
        "test/rsa_mp_test-bin-rsa_mp_test.o" => [
            "test/rsa_mp_test.c"
        ],
        "test/rsa_sp800_56b_test" => [
            "test/rsa_sp800_56b_test-bin-rsa_sp800_56b_test.o"
        ],
        "test/rsa_sp800_56b_test-bin-rsa_sp800_56b_test.o" => [
            "test/rsa_sp800_56b_test.c"
        ],
        "test/rsa_test" => [
            "test/rsa_test-bin-rsa_test.o"
        ],
        "test/rsa_test-bin-rsa_test.o" => [
            "test/rsa_test.c"
        ],
        "test/sanitytest" => [
            "test/sanitytest-bin-sanitytest.o"
        ],
        "test/sanitytest-bin-sanitytest.o" => [
            "test/sanitytest.c"
        ],
        "test/secmemtest" => [
            "test/secmemtest-bin-secmemtest.o"
        ],
        "test/secmemtest-bin-secmemtest.o" => [
            "test/secmemtest.c"
        ],
        "test/servername_test" => [
            "test/helpers/servername_test-bin-ssltestlib.o",
            "test/servername_test-bin-servername_test.o"
        ],
        "test/servername_test-bin-servername_test.o" => [
            "test/servername_test.c"
        ],
        "test/sha_test" => [
            "test/sha_test-bin-sha_test.o"
        ],
        "test/sha_test-bin-sha_test.o" => [
            "test/sha_test.c"
        ],
        "test/siphash_internal_test" => [
            "test/siphash_internal_test-bin-siphash_internal_test.o"
        ],
        "test/siphash_internal_test-bin-siphash_internal_test.o" => [
            "test/siphash_internal_test.c"
        ],
        "test/sm2_internal_test" => [
            "test/sm2_internal_test-bin-sm2_internal_test.o"
        ],
        "test/sm2_internal_test-bin-sm2_internal_test.o" => [
            "test/sm2_internal_test.c"
        ],
        "test/sm3_internal_test" => [
            "test/sm3_internal_test-bin-sm3_internal_test.o"
        ],
        "test/sm3_internal_test-bin-sm3_internal_test.o" => [
            "test/sm3_internal_test.c"
        ],
        "test/sm4_internal_test" => [
            "test/sm4_internal_test-bin-sm4_internal_test.o"
        ],
        "test/sm4_internal_test-bin-sm4_internal_test.o" => [
            "test/sm4_internal_test.c"
        ],
        "test/sparse_array_test" => [
            "test/sparse_array_test-bin-sparse_array_test.o"
        ],
        "test/sparse_array_test-bin-sparse_array_test.o" => [
            "test/sparse_array_test.c"
        ],
        "test/srptest" => [
            "test/srptest-bin-srptest.o"
        ],
        "test/srptest-bin-srptest.o" => [
            "test/srptest.c"
        ],
        "test/ssl_cert_table_internal_test" => [
            "test/ssl_cert_table_internal_test-bin-ssl_cert_table_internal_test.o"
        ],
        "test/ssl_cert_table_internal_test-bin-ssl_cert_table_internal_test.o" => [
            "test/ssl_cert_table_internal_test.c"
        ],
        "test/ssl_ctx_test" => [
            "test/ssl_ctx_test-bin-ssl_ctx_test.o"
        ],
        "test/ssl_ctx_test-bin-ssl_ctx_test.o" => [
            "test/ssl_ctx_test.c"
        ],
        "test/ssl_old_test" => [
            "test/helpers/ssl_old_test-bin-predefined_dhparams.o",
            "test/ssl_old_test-bin-ssl_old_test.o"
        ],
        "test/ssl_old_test-bin-ssl_old_test.o" => [
            "test/ssl_old_test.c"
        ],
        "test/ssl_test" => [
            "test/helpers/ssl_test-bin-handshake.o",
            "test/helpers/ssl_test-bin-handshake_srp.o",
            "test/helpers/ssl_test-bin-ssl_test_ctx.o",
            "test/ssl_test-bin-ssl_test.o"
        ],
        "test/ssl_test-bin-ssl_test.o" => [
            "test/ssl_test.c"
        ],
        "test/ssl_test_ctx_test" => [
            "test/helpers/ssl_test_ctx_test-bin-ssl_test_ctx.o",
            "test/ssl_test_ctx_test-bin-ssl_test_ctx_test.o"
        ],
        "test/ssl_test_ctx_test-bin-ssl_test_ctx_test.o" => [
            "test/ssl_test_ctx_test.c"
        ],
        "test/sslapitest" => [
            "test/helpers/sslapitest-bin-ssltestlib.o",
            "test/sslapitest-bin-filterprov.o",
            "test/sslapitest-bin-sslapitest.o",
            "test/sslapitest-bin-tls-provider.o"
        ],
        "test/sslapitest-bin-filterprov.o" => [
            "test/filterprov.c"
        ],
        "test/sslapitest-bin-sslapitest.o" => [
            "test/sslapitest.c"
        ],
        "test/sslapitest-bin-tls-provider.o" => [
            "test/tls-provider.c"
        ],
        "test/sslbuffertest" => [
            "test/helpers/sslbuffertest-bin-ssltestlib.o",
            "test/sslbuffertest-bin-sslbuffertest.o"
        ],
        "test/sslbuffertest-bin-sslbuffertest.o" => [
            "test/sslbuffertest.c"
        ],
        "test/sslcorrupttest" => [
            "test/helpers/sslcorrupttest-bin-ssltestlib.o",
            "test/sslcorrupttest-bin-sslcorrupttest.o"
        ],
        "test/sslcorrupttest-bin-sslcorrupttest.o" => [
            "test/sslcorrupttest.c"
        ],
        "test/stack_test" => [
            "test/stack_test-bin-stack_test.o"
        ],
        "test/stack_test-bin-stack_test.o" => [
            "test/stack_test.c"
        ],
        "test/sysdefaulttest" => [
            "test/sysdefaulttest-bin-sysdefaulttest.o"
        ],
        "test/sysdefaulttest-bin-sysdefaulttest.o" => [
            "test/sysdefaulttest.c"
        ],
        "test/test_test" => [
            "test/test_test-bin-test_test.o"
        ],
        "test/test_test-bin-test_test.o" => [
            "test/test_test.c"
        ],
        "test/testutil/libtestutil-lib-apps_shims.o" => [
            "test/testutil/apps_shims.c"
        ],
        "test/testutil/libtestutil-lib-basic_output.o" => [
            "test/testutil/basic_output.c"
        ],
        "test/testutil/libtestutil-lib-cb.o" => [
            "test/testutil/cb.c"
        ],
        "test/testutil/libtestutil-lib-driver.o" => [
            "test/testutil/driver.c"
        ],
        "test/testutil/libtestutil-lib-fake_random.o" => [
            "test/testutil/fake_random.c"
        ],
        "test/testutil/libtestutil-lib-format_output.o" => [
            "test/testutil/format_output.c"
        ],
        "test/testutil/libtestutil-lib-load.o" => [
            "test/testutil/load.c"
        ],
        "test/testutil/libtestutil-lib-main.o" => [
            "test/testutil/main.c"
        ],
        "test/testutil/libtestutil-lib-options.o" => [
            "test/testutil/options.c"
        ],
        "test/testutil/libtestutil-lib-output.o" => [
            "test/testutil/output.c"
        ],
        "test/testutil/libtestutil-lib-provider.o" => [
            "test/testutil/provider.c"
        ],
        "test/testutil/libtestutil-lib-random.o" => [
            "test/testutil/random.c"
        ],
        "test/testutil/libtestutil-lib-stanza.o" => [
            "test/testutil/stanza.c"
        ],
        "test/testutil/libtestutil-lib-test_cleanup.o" => [
            "test/testutil/test_cleanup.c"
        ],
        "test/testutil/libtestutil-lib-test_options.o" => [
            "test/testutil/test_options.c"
        ],
        "test/testutil/libtestutil-lib-tests.o" => [
            "test/testutil/tests.c"
        ],
        "test/testutil/libtestutil-lib-testutil_init.o" => [
            "test/testutil/testutil_init.c"
        ],
        "test/threadstest" => [
            "test/threadstest-bin-threadstest.o"
        ],
        "test/threadstest-bin-threadstest.o" => [
            "test/threadstest.c"
        ],
        "test/threadstest_fips" => [
            "test/threadstest_fips-bin-threadstest_fips.o"
        ],
        "test/threadstest_fips-bin-threadstest_fips.o" => [
            "test/threadstest_fips.c"
        ],
        "test/time_offset_test" => [
            "test/time_offset_test-bin-time_offset_test.o"
        ],
        "test/time_offset_test-bin-time_offset_test.o" => [
            "test/time_offset_test.c"
        ],
        "test/tls13ccstest" => [
            "test/helpers/tls13ccstest-bin-ssltestlib.o",
            "test/tls13ccstest-bin-tls13ccstest.o"
        ],
        "test/tls13ccstest-bin-tls13ccstest.o" => [
            "test/tls13ccstest.c"
        ],
        "test/tls13encryptiontest" => [
            "test/tls13encryptiontest-bin-tls13encryptiontest.o"
        ],
        "test/tls13encryptiontest-bin-tls13encryptiontest.o" => [
            "test/tls13encryptiontest.c"
        ],
        "test/trace_api_test" => [
            "test/trace_api_test-bin-trace_api_test.o"
        ],
        "test/trace_api_test-bin-trace_api_test.o" => [
            "test/trace_api_test.c"
        ],
        "test/uitest" => [
            "apps/lib/uitest-bin-apps_ui.o",
            "test/uitest-bin-uitest.o"
        ],
        "test/uitest-bin-uitest.o" => [
            "test/uitest.c"
        ],
        "test/upcallstest" => [
            "test/upcallstest-bin-upcallstest.o"
        ],
        "test/upcallstest-bin-upcallstest.o" => [
            "test/upcallstest.c"
        ],
        "test/user_property_test" => [
            "test/user_property_test-bin-user_property_test.o"
        ],
        "test/user_property_test-bin-user_property_test.o" => [
            "test/user_property_test.c"
        ],
        "test/v3ext" => [
            "test/v3ext-bin-v3ext.o"
        ],
        "test/v3ext-bin-v3ext.o" => [
            "test/v3ext.c"
        ],
        "test/v3nametest" => [
            "test/v3nametest-bin-v3nametest.o"
        ],
        "test/v3nametest-bin-v3nametest.o" => [
            "test/v3nametest.c"
        ],
        "test/verify_extra_test" => [
            "test/verify_extra_test-bin-verify_extra_test.o"
        ],
        "test/verify_extra_test-bin-verify_extra_test.o" => [
            "test/verify_extra_test.c"
        ],
        "test/versions" => [
            "test/versions-bin-versions.o"
        ],
        "test/versions-bin-versions.o" => [
            "test/versions.c"
        ],
        "test/wpackettest" => [
            "test/wpackettest-bin-wpackettest.o"
        ],
        "test/wpackettest-bin-wpackettest.o" => [
            "test/wpackettest.c"
        ],
        "test/x509_check_cert_pkey_test" => [
            "test/x509_check_cert_pkey_test-bin-x509_check_cert_pkey_test.o"
        ],
        "test/x509_check_cert_pkey_test-bin-x509_check_cert_pkey_test.o" => [
            "test/x509_check_cert_pkey_test.c"
        ],
        "test/x509_dup_cert_test" => [
            "test/x509_dup_cert_test-bin-x509_dup_cert_test.o"
        ],
        "test/x509_dup_cert_test-bin-x509_dup_cert_test.o" => [
            "test/x509_dup_cert_test.c"
        ],
        "test/x509_internal_test" => [
            "test/x509_internal_test-bin-x509_internal_test.o"
        ],
        "test/x509_internal_test-bin-x509_internal_test.o" => [
            "test/x509_internal_test.c"
        ],
        "test/x509_time_test" => [
            "test/x509_time_test-bin-x509_time_test.o"
        ],
        "test/x509_time_test-bin-x509_time_test.o" => [
            "test/x509_time_test.c"
        ],
        "test/x509aux" => [
            "test/x509aux-bin-x509aux.o"
        ],
        "test/x509aux-bin-x509aux.o" => [
            "test/x509aux.c"
        ],
        "tools/c_rehash.pl" => [
            "tools/c_rehash.in"
        ],
        "util/wrap.pl" => [
            "util/wrap.pl.in"
        ]
    },
    "targets" => [
        "build_modules_nodep"
    ]
);

# Unexported, only used by OpenSSL::Test::Utils::available_protocols()
our %available_protocols = (
    tls  => [
    "ssl3",
    "tls1",
    "tls1_1",
    "tls1_2",
    "tls1_3"
],
    dtls => [
    "dtls1",
    "dtls1_2"
],
);

# The following data is only used when this files is use as a script
my @makevars = (
    "AR",
    "ARFLAGS",
    "AS",
    "ASFLAGS",
    "CC",
    "CFLAGS",
    "CPP",
    "CPPDEFINES",
    "CPPFLAGS",
    "CPPINCLUDES",
    "CROSS_COMPILE",
    "CXX",
    "CXXFLAGS",
    "HASHBANGPERL",
    "LD",
    "LDFLAGS",
    "LDLIBS",
    "MT",
    "MTFLAGS",
    "PERL",
    "RANLIB",
    "RC",
    "RCFLAGS",
    "RM"
);
my %disabled_info = (
    "afalgeng" => {
        "macro" => "OPENSSL_NO_AFALGENG"
    },
    "asan" => {
        "macro" => "OPENSSL_NO_ASAN"
    },
    "comp" => {
        "macro" => "OPENSSL_NO_COMP",
        "skipped" => [
            "crypto/comp"
        ]
    },
    "crypto-mdebug" => {
        "macro" => "OPENSSL_NO_CRYPTO_MDEBUG"
    },
    "crypto-mdebug-backtrace" => {
        "macro" => "OPENSSL_NO_CRYPTO_MDEBUG_BACKTRACE"
    },
    "devcryptoeng" => {
        "macro" => "OPENSSL_NO_DEVCRYPTOENG"
    },
    "ec_nistp_64_gcc_128" => {
        "macro" => "OPENSSL_NO_EC_NISTP_64_GCC_128"
    },
    "egd" => {
        "macro" => "OPENSSL_NO_EGD"
    },
    "external-tests" => {
        "macro" => "OPENSSL_NO_EXTERNAL_TESTS"
    },
    "fuzz-afl" => {
        "macro" => "OPENSSL_NO_FUZZ_AFL"
    },
    "fuzz-libfuzzer" => {
        "macro" => "OPENSSL_NO_FUZZ_LIBFUZZER"
    },
    "ktls" => {
        "macro" => "OPENSSL_NO_KTLS"
    },
    "loadereng" => {
        "macro" => "OPENSSL_NO_LOADERENG"
    },
    "md2" => {
        "macro" => "OPENSSL_NO_MD2",
        "skipped" => [
            "crypto/md2"
        ]
    },
    "msan" => {
        "macro" => "OPENSSL_NO_MSAN"
    },
    "rc5" => {
        "macro" => "OPENSSL_NO_RC5",
        "skipped" => [
            "crypto/rc5"
        ]
    },
    "sctp" => {
        "macro" => "OPENSSL_NO_SCTP"
    },
    "ssl3" => {
        "macro" => "OPENSSL_NO_SSL3"
    },
    "ssl3-method" => {
        "macro" => "OPENSSL_NO_SSL3_METHOD"
    },
    "trace" => {
        "macro" => "OPENSSL_NO_TRACE"
    },
    "ubsan" => {
        "macro" => "OPENSSL_NO_UBSAN"
    },
    "unit-test" => {
        "macro" => "OPENSSL_NO_UNIT_TEST"
    },
    "uplink" => {
        "macro" => "OPENSSL_NO_UPLINK"
    },
    "weak-ssl-ciphers" => {
        "macro" => "OPENSSL_NO_WEAK_SSL_CIPHERS"
    }
);
my @user_crossable = qw( AR AS CC CXX CPP LD MT RANLIB RC );

# If run directly, we can give some answers, and even reconfigure
unless (caller) {
    use Getopt::Long;
    use File::Spec::Functions;
    use File::Basename;
    use File::Compare qw(compare_text);
    use File::Copy;
    use Pod::Usage;

    use lib '/home/runner/work/node/node/deps/openssl/openssl/util/perl';
    use OpenSSL::fallback '/home/runner/work/node/node/deps/openssl/openssl/external/perl/MODULES.txt';

    my $here = dirname($0);

    if (scalar @ARGV == 0) {
        # With no arguments, re-create the build file
        # We do that in two steps, where the first step emits perl
        # snipets.

        my $buildfile = $config{build_file};
        my $buildfile_template = "$buildfile.in";
        my @autowarntext = (
            'WARNING: do not edit!',
            "Generated by configdata.pm from "
            .join(", ", @{$config{build_file_templates}}),
            "via $buildfile_template"
        );
        my %gendata = (
            config => \%config,
            target => \%target,
            disabled => \%disabled,
            withargs => \%withargs,
            unified_info => \%unified_info,
            autowarntext => \@autowarntext,
            );

        use lib '.';
        use lib '/home/runner/work/node/node/deps/openssl/openssl/Configurations';
        use gentemplate;

        open my $buildfile_template_fh, ">$buildfile_template"
            or die "Trying to create $buildfile_template: $!";
        foreach (@{$config{build_file_templates}}) {
            copy($_, $buildfile_template_fh)
                or die "Trying to copy $_ into $buildfile_template: $!";
        }
        gentemplate(output => $buildfile_template_fh, %gendata);
        close $buildfile_template_fh;
        print 'Created ',$buildfile_template,"\n";

        use OpenSSL::Template;

        my $prepend = <<'_____';
use File::Spec::Functions;
use lib '/home/runner/work/node/node/deps/openssl/openssl/util/perl';
use lib '/home/runner/work/node/node/deps/openssl/openssl/Configurations';
use lib '.';
use platform;
_____

        my $tmpl;
        open BUILDFILE, ">$buildfile.new"
            or die "Trying to create $buildfile.new: $!";
        $tmpl = OpenSSL::Template->new(TYPE => 'FILE',
                                       SOURCE => $buildfile_template);
        $tmpl->fill_in(FILENAME => $_,
                       OUTPUT => \*BUILDFILE,
                       HASH => \%gendata,
                       PREPEND => $prepend,
                       # To ensure that global variables and functions
                       # defined in one template stick around for the
                       # next, making them combinable
                       PACKAGE => 'OpenSSL::safe')
            or die $Text::Template::ERROR;
        close BUILDFILE;
        rename("$buildfile.new", $buildfile)
            or die "Trying to rename $buildfile.new to $buildfile: $!";
        print 'Created ',$buildfile,"\n";

        my $configuration_h =
            catfile('include', 'openssl', 'configuration.h');
        my $configuration_h_in =
            catfile($config{sourcedir}, 'include', 'openssl', 'configuration.h.in');
        open CONFIGURATION_H, ">${configuration_h}.new"
            or die "Trying to create ${configuration_h}.new: $!";
        $tmpl = OpenSSL::Template->new(TYPE => 'FILE',
                                       SOURCE => $configuration_h_in);
        $tmpl->fill_in(FILENAME => $_,
                       OUTPUT => \*CONFIGURATION_H,
                       HASH => \%gendata,
                       PREPEND => $prepend,
                       # To ensure that global variables and functions
                       # defined in one template stick around for the
                       # next, making them combinable
                       PACKAGE => 'OpenSSL::safe')
            or die $Text::Template::ERROR;
        close CONFIGURATION_H;

        # When using stat() on Windows, we can get it to perform better by
        # avoid some data.  This doesn't affect the mtime field, so we're not
        # losing anything...
        ${^WIN32_SLOPPY_STAT} = 1;

        my $update_configuration_h = 0;
        if (-f $configuration_h) {
            my $configuration_h_mtime = (stat($configuration_h))[9];
            my $configuration_h_in_mtime = (stat($configuration_h_in))[9];

            # If configuration.h.in was updated after the last configuration.h,
            # or if configuration.h.new differs configuration.h, we update
            # configuration.h
            if ($configuration_h_mtime < $configuration_h_in_mtime
                || compare_text("${configuration_h}.new", $configuration_h) != 0) {
                $update_configuration_h = 1;
            } else {
                # If nothing has changed, let's just drop the new one and
                # pretend like nothing happened
                unlink "${configuration_h}.new"
            }
        } else {
            $update_configuration_h = 1;
        }

        if ($update_configuration_h) {
            rename("${configuration_h}.new", $configuration_h)
                or die "Trying to rename ${configuration_h}.new to $configuration_h: $!";
            print 'Created ',$configuration_h,"\n";
        }

        exit(0);
    }

    my $dump = undef;
    my $cmdline = undef;
    my $options = undef;
    my $target = undef;
    my $envvars = undef;
    my $makevars = undef;
    my $buildparams = undef;
    my $reconf = undef;
    my $verbose = undef;
    my $query = undef;
    my $help = undef;
    my $man = undef;
    GetOptions('dump|d'                 => \$dump,
               'command-line|c'         => \$cmdline,
               'options|o'              => \$options,
               'target|t'               => \$target,
               'environment|e'          => \$envvars,
               'make-variables|m'       => \$makevars,
               'build-parameters|b'     => \$buildparams,
               'reconfigure|reconf|r'   => \$reconf,
               'verbose|v'              => \$verbose,
               'query|q=s'              => \$query,
               'help'                   => \$help,
               'man'                    => \$man)
        or die "Errors in command line arguments\n";

    # We allow extra arguments with --query.  That allows constructs like
    # this:
    # ./configdata.pm --query 'get_sources(@ARGV)' file1 file2 file3
    if (!$query && scalar @ARGV > 0) {
        print STDERR <<"_____";
Unrecognised arguments.
For more information, do '$0 --help'
_____
        exit(2);
    }

    if ($help) {
        pod2usage(-exitval => 0,
                  -verbose => 1);
    }
    if ($man) {
        pod2usage(-exitval => 0,
                  -verbose => 2);
    }
    if ($dump || $cmdline) {
        print "\nCommand line (with current working directory = $here):\n\n";
        print '    ',join(' ',
                          $config{PERL},
                          catfile($config{sourcedir}, 'Configure'),
                          @{$config{perlargv}}), "\n";
        print "\nPerl information:\n\n";
        print '    ',$config{perl_cmd},"\n";
        print '    ',$config{perl_version},' for ',$config{perl_archname},"\n";
    }
    if ($dump || $options) {
        my $longest = 0;
        my $longest2 = 0;
        foreach my $what (@disablables) {
            $longest = length($what) if $longest < length($what);
            $longest2 = length($disabled{$what})
                if $disabled{$what} && $longest2 < length($disabled{$what});
        }
        print "\nEnabled features:\n\n";
        foreach my $what (@disablables) {
            print "    $what\n" unless $disabled{$what};
        }
        print "\nDisabled features:\n\n";
        foreach my $what (@disablables) {
            if ($disabled{$what}) {
                print "    $what", ' ' x ($longest - length($what) + 1),
                    "[$disabled{$what}]", ' ' x ($longest2 - length($disabled{$what}) + 1);
                print $disabled_info{$what}->{macro}
                    if $disabled_info{$what}->{macro};
                print ' (skip ',
                    join(', ', @{$disabled_info{$what}->{skipped}}),
                    ')'
                    if $disabled_info{$what}->{skipped};
                print "\n";
            }
        }
    }
    if ($dump || $target) {
        print "\nConfig target attributes:\n\n";
        foreach (sort keys %target) {
            next if $_ =~ m|^_| || $_ eq 'template';
            my $quotify = sub {
                map {
                    if (defined $_) {
                        (my $x = $_) =~ s|([\\\$\@"])|\\$1|g; "\"$x\""
                    } else {
                        "undef";
                    }
                } @_;
            };
            print '    ', $_, ' => ';
            if (ref($target{$_}) eq "ARRAY") {
                print '[ ', join(', ', $quotify->(@{$target{$_}})), " ],\n";
            } else {
                print $quotify->($target{$_}), ",\n"
            }
        }
    }
    if ($dump || $envvars) {
        print "\nRecorded environment:\n\n";
        foreach (sort keys %{$config{perlenv}}) {
            print '    ',$_,' = ',($config{perlenv}->{$_} || ''),"\n";
        }
    }
    if ($dump || $makevars) {
        print "\nMakevars:\n\n";
        foreach my $var (@makevars) {
            my $prefix = '';
            $prefix = $config{CROSS_COMPILE}
                if grep { $var eq $_ } @user_crossable;
            $prefix //= '';
            print '    ',$var,' ' x (16 - length $var),'= ',
                (ref $config{$var} eq 'ARRAY'
                 ? join(' ', @{$config{$var}})
                 : $prefix.$config{$var}),
                "\n"
                if defined $config{$var};
        }

        my @buildfile = ($config{builddir}, $config{build_file});
        unshift @buildfile, $here
            unless file_name_is_absolute($config{builddir});
        my $buildfile = canonpath(catdir(@buildfile));
        print <<"_____";

NOTE: These variables only represent the configuration view.  The build file
template may have processed these variables further, please have a look at the
build file for more exact data:
    $buildfile
_____
    }
    if ($dump || $buildparams) {
        my @buildfile = ($config{builddir}, $config{build_file});
        unshift @buildfile, $here
            unless file_name_is_absolute($config{builddir});
        print "\nbuild file:\n\n";
        print "    ", canonpath(catfile(@buildfile)),"\n";

        print "\nbuild file templates:\n\n";
        foreach (@{$config{build_file_templates}}) {
            my @tmpl = ($_);
            unshift @tmpl, $here
                unless file_name_is_absolute($config{sourcedir});
            print '    ',canonpath(catfile(@tmpl)),"\n";
        }
    }
    if ($reconf) {
        if ($verbose) {
            print 'Reconfiguring with: ', join(' ',@{$config{perlargv}}), "\n";
            foreach (sort keys %{$config{perlenv}}) {
                print '    ',$_,' = ',($config{perlenv}->{$_} || ""),"\n";
            }
        }

        chdir $here;
        exec $^X,catfile($config{sourcedir}, 'Configure'),'reconf';
    }
    if ($query) {
        use OpenSSL::Config::Query;

        my $confquery = OpenSSL::Config::Query->new(info => \%unified_info,
                                                    config => \%config);
        my $result = eval "\$confquery->$query";

        # We may need a result class with a printing function at some point.
        # Until then, we assume that we get a scalar, or a list or a hash table
        # with scalar values and simply print them in some orderly fashion.
        if (ref $result eq 'ARRAY') {
            print "$_\n" foreach @$result;
        } elsif (ref $result eq 'HASH') {
            print "$_ : \\\n  ", join(" \\\n  ", @{$result->{$_}}), "\n"
                foreach sort keys %$result;
        } elsif (ref $result eq 'SCALAR') {
            print "$$result\n";
        }
    }
}

1;

__END__

=head1 NAME

configdata.pm - configuration data for OpenSSL builds

=head1 SYNOPSIS

Interactive:

  perl configdata.pm [options]

As data bank module:

  use configdata;

=head1 DESCRIPTION

This module can be used in two modes, interactively and as a module containing
all the data recorded by OpenSSL's Configure script.

When used interactively, simply run it as any perl script.
If run with no arguments, it will rebuild the build file (Makefile or
corresponding).
With at least one option, it will instead get the information you ask for, or
re-run the configuration process.
See L</OPTIONS> below for more information.

When loaded as a module, you get a few databanks with useful information to
perform build related tasks.  The databanks are:

    %config             Configured things.
    %target             The OpenSSL config target with all inheritances
                        resolved.
    %disabled           The features that are disabled.
    @disablables        The list of features that can be disabled.
    %withargs           All data given through --with-THING options.
    %unified_info       All information that was computed from the build.info
                        files.

=head1 OPTIONS

=over 4

=item B<--help>

Print a brief help message and exit.

=item B<--man>

Print the manual page and exit.

=item B<--dump> | B<-d>

Print all relevant configuration data.  This is equivalent to B<--command-line>
B<--options> B<--target> B<--environment> B<--make-variables>
B<--build-parameters>.

=item B<--command-line> | B<-c>

Print the current configuration command line.

=item B<--options> | B<-o>

Print the features, both enabled and disabled, and display defined macro and
skipped directories where applicable.

=item B<--target> | B<-t>

Print the config attributes for this config target.

=item B<--environment> | B<-e>

Print the environment variables and their values at the time of configuration.

=item B<--make-variables> | B<-m>

Print the main make variables generated in the current configuration

=item B<--build-parameters> | B<-b>

Print the build parameters, i.e. build file and build file templates.

=item B<--reconfigure> | B<--reconf> | B<-r>

Re-run the configuration process.

=item B<--verbose> | B<-v>

Verbose output.

=back

=cut

EOF
                                                                                                                                                                                                                                                                                                                                       node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/                                    0000775 0000000 0000000 00000000000 14746647661 0024016 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/aes/                                0000775 0000000 0000000 00000000000 14746647661 0024566 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/aes/aes-x86_64.asm                  0000664 0000000 0000000 00000162675 14746647661 0027015 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        default	rel
%define XMMWORD
%define YMMWORD
%define ZMMWORD
section	.text code align=64


ALIGN	16
_x86_64_AES_encrypt:

	xor	eax,DWORD[r15]
	xor	ebx,DWORD[4+r15]
	xor	ecx,DWORD[8+r15]
	xor	edx,DWORD[12+r15]

	mov	r13d,DWORD[240+r15]
	sub	r13d,1
	jmp	NEAR $L$enc_loop
ALIGN	16
$L$enc_loop:

	movzx	esi,al
	movzx	edi,bl
	movzx	ebp,cl
	mov	r10d,DWORD[rsi*8+r14]
	mov	r11d,DWORD[rdi*8+r14]
	mov	r12d,DWORD[rbp*8+r14]

	movzx	esi,bh
	movzx	edi,ch
	movzx	ebp,dl
	xor	r10d,DWORD[3+rsi*8+r14]
	xor	r11d,DWORD[3+rdi*8+r14]
	mov	r8d,DWORD[rbp*8+r14]

	movzx	esi,dh
	shr	ecx,16
	movzx	ebp,ah
	xor	r12d,DWORD[3+rsi*8+r14]
	shr	edx,16
	xor	r8d,DWORD[3+rbp*8+r14]

	shr	ebx,16
	lea	r15,[16+r15]
	shr	eax,16

	movzx	esi,cl
	movzx	edi,dl
	movzx	ebp,al
	xor	r10d,DWORD[2+rsi*8+r14]
	xor	r11d,DWORD[2+rdi*8+r14]
	xor	r12d,DWORD[2+rbp*8+r14]

	movzx	esi,dh
	movzx	edi,ah
	movzx	ebp,bl
	xor	r10d,DWORD[1+rsi*8+r14]
	xor	r11d,DWORD[1+rdi*8+r14]
	xor	r8d,DWORD[2+rbp*8+r14]

	mov	edx,DWORD[12+r15]
	movzx	edi,bh
	movzx	ebp,ch
	mov	eax,DWORD[r15]
	xor	r12d,DWORD[1+rdi*8+r14]
	xor	r8d,DWORD[1+rbp*8+r14]

	mov	ebx,DWORD[4+r15]
	mov	ecx,DWORD[8+r15]
	xor	eax,r10d
	xor	ebx,r11d
	xor	ecx,r12d
	xor	edx,r8d
	sub	r13d,1
	jnz	NEAR $L$enc_loop
	movzx	esi,al
	movzx	edi,bl
	movzx	ebp,cl
	movzx	r10d,BYTE[2+rsi*8+r14]
	movzx	r11d,BYTE[2+rdi*8+r14]
	movzx	r12d,BYTE[2+rbp*8+r14]

	movzx	esi,dl
	movzx	edi,bh
	movzx	ebp,ch
	movzx	r8d,BYTE[2+rsi*8+r14]
	mov	edi,DWORD[rdi*8+r14]
	mov	ebp,DWORD[rbp*8+r14]

	and	edi,0x0000ff00
	and	ebp,0x0000ff00

	xor	r10d,edi
	xor	r11d,ebp
	shr	ecx,16

	movzx	esi,dh
	movzx	edi,ah
	shr	edx,16
	mov	esi,DWORD[rsi*8+r14]
	mov	edi,DWORD[rdi*8+r14]

	and	esi,0x0000ff00
	and	edi,0x0000ff00
	shr	ebx,16
	xor	r12d,esi
	xor	r8d,edi
	shr	eax,16

	movzx	esi,cl
	movzx	edi,dl
	movzx	ebp,al
	mov	esi,DWORD[rsi*8+r14]
	mov	edi,DWORD[rdi*8+r14]
	mov	ebp,DWORD[rbp*8+r14]

	and	esi,0x00ff0000
	and	edi,0x00ff0000
	and	ebp,0x00ff0000

	xor	r10d,esi
	xor	r11d,edi
	xor	r12d,ebp

	movzx	esi,bl
	movzx	edi,dh
	movzx	ebp,ah
	mov	esi,DWORD[rsi*8+r14]
	mov	edi,DWORD[2+rdi*8+r14]
	mov	ebp,DWORD[2+rbp*8+r14]

	and	esi,0x00ff0000
	and	edi,0xff000000
	and	ebp,0xff000000

	xor	r8d,esi
	xor	r10d,edi
	xor	r11d,ebp

	movzx	esi,bh
	movzx	edi,ch
	mov	edx,DWORD[((16+12))+r15]
	mov	esi,DWORD[2+rsi*8+r14]
	mov	edi,DWORD[2+rdi*8+r14]
	mov	eax,DWORD[((16+0))+r15]

	and	esi,0xff000000
	and	edi,0xff000000

	xor	r12d,esi
	xor	r8d,edi

	mov	ebx,DWORD[((16+4))+r15]
	mov	ecx,DWORD[((16+8))+r15]
	xor	eax,r10d
	xor	ebx,r11d
	xor	ecx,r12d
	xor	edx,r8d
DB	0xf3,0xc3



ALIGN	16
_x86_64_AES_encrypt_compact:

	lea	r8,[128+r14]
	mov	edi,DWORD[((0-128))+r8]
	mov	ebp,DWORD[((32-128))+r8]
	mov	r10d,DWORD[((64-128))+r8]
	mov	r11d,DWORD[((96-128))+r8]
	mov	edi,DWORD[((128-128))+r8]
	mov	ebp,DWORD[((160-128))+r8]
	mov	r10d,DWORD[((192-128))+r8]
	mov	r11d,DWORD[((224-128))+r8]
	jmp	NEAR $L$enc_loop_compact
ALIGN	16
$L$enc_loop_compact:
	xor	eax,DWORD[r15]
	xor	ebx,DWORD[4+r15]
	xor	ecx,DWORD[8+r15]
	xor	edx,DWORD[12+r15]
	lea	r15,[16+r15]
	movzx	r10d,al
	movzx	r11d,bl
	movzx	r12d,cl
	movzx	r8d,dl
	movzx	esi,bh
	movzx	edi,ch
	shr	ecx,16
	movzx	ebp,dh
	movzx	r10d,BYTE[r10*1+r14]
	movzx	r11d,BYTE[r11*1+r14]
	movzx	r12d,BYTE[r12*1+r14]
	movzx	r8d,BYTE[r8*1+r14]

	movzx	r9d,BYTE[rsi*1+r14]
	movzx	esi,ah
	movzx	r13d,BYTE[rdi*1+r14]
	movzx	edi,cl
	movzx	ebp,BYTE[rbp*1+r14]
	movzx	esi,BYTE[rsi*1+r14]

	shl	r9d,8
	shr	edx,16
	shl	r13d,8
	xor	r10d,r9d
	shr	eax,16
	movzx	r9d,dl
	shr	ebx,16
	xor	r11d,r13d
	shl	ebp,8
	movzx	r13d,al
	movzx	edi,BYTE[rdi*1+r14]
	xor	r12d,ebp

	shl	esi,8
	movzx	ebp,bl
	shl	edi,16
	xor	r8d,esi
	movzx	r9d,BYTE[r9*1+r14]
	movzx	esi,dh
	movzx	r13d,BYTE[r13*1+r14]
	xor	r10d,edi

	shr	ecx,8
	movzx	edi,ah
	shl	r9d,16
	shr	ebx,8
	shl	r13d,16
	xor	r11d,r9d
	movzx	ebp,BYTE[rbp*1+r14]
	movzx	esi,BYTE[rsi*1+r14]
	movzx	edi,BYTE[rdi*1+r14]
	movzx	edx,BYTE[rcx*1+r14]
	movzx	ecx,BYTE[rbx*1+r14]

	shl	ebp,16
	xor	r12d,r13d
	shl	esi,24
	xor	r8d,ebp
	shl	edi,24
	xor	r10d,esi
	shl	edx,24
	xor	r11d,edi
	shl	ecx,24
	mov	eax,r10d
	mov	ebx,r11d
	xor	ecx,r12d
	xor	edx,r8d
	cmp	r15,QWORD[16+rsp]
	je	NEAR $L$enc_compact_done
	mov	r10d,0x80808080
	mov	r11d,0x80808080
	and	r10d,eax
	and	r11d,ebx
	mov	esi,r10d
	mov	edi,r11d
	shr	r10d,7
	lea	r8d,[rax*1+rax]
	shr	r11d,7
	lea	r9d,[rbx*1+rbx]
	sub	esi,r10d
	sub	edi,r11d
	and	r8d,0xfefefefe
	and	r9d,0xfefefefe
	and	esi,0x1b1b1b1b
	and	edi,0x1b1b1b1b
	mov	r10d,eax
	mov	r11d,ebx
	xor	r8d,esi
	xor	r9d,edi

	xor	eax,r8d
	xor	ebx,r9d
	mov	r12d,0x80808080
	rol	eax,24
	mov	ebp,0x80808080
	rol	ebx,24
	and	r12d,ecx
	and	ebp,edx
	xor	eax,r8d
	xor	ebx,r9d
	mov	esi,r12d
	ror	r10d,16
	mov	edi,ebp
	ror	r11d,16
	lea	r8d,[rcx*1+rcx]
	shr	r12d,7
	xor	eax,r10d
	shr	ebp,7
	xor	ebx,r11d
	ror	r10d,8
	lea	r9d,[rdx*1+rdx]
	ror	r11d,8
	sub	esi,r12d
	sub	edi,ebp
	xor	eax,r10d
	xor	ebx,r11d

	and	r8d,0xfefefefe
	and	r9d,0xfefefefe
	and	esi,0x1b1b1b1b
	and	edi,0x1b1b1b1b
	mov	r12d,ecx
	mov	ebp,edx
	xor	r8d,esi
	xor	r9d,edi

	ror	r12d,16
	xor	ecx,r8d
	ror	ebp,16
	xor	edx,r9d
	rol	ecx,24
	mov	esi,DWORD[r14]
	rol	edx,24
	xor	ecx,r8d
	mov	edi,DWORD[64+r14]
	xor	edx,r9d
	mov	r8d,DWORD[128+r14]
	xor	ecx,r12d
	ror	r12d,8
	xor	edx,ebp
	ror	ebp,8
	xor	ecx,r12d
	mov	r9d,DWORD[192+r14]
	xor	edx,ebp
	jmp	NEAR $L$enc_loop_compact
ALIGN	16
$L$enc_compact_done:
	xor	eax,DWORD[r15]
	xor	ebx,DWORD[4+r15]
	xor	ecx,DWORD[8+r15]
	xor	edx,DWORD[12+r15]
DB	0xf3,0xc3


global	AES_encrypt

ALIGN	16
global	asm_AES_encrypt

asm_AES_encrypt:
AES_encrypt:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_AES_encrypt:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8



DB	243,15,30,250
	mov	rax,rsp

	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15



	lea	rcx,[((-63))+rdx]
	and	rsp,-64
	sub	rcx,rsp
	neg	rcx
	and	rcx,0x3c0
	sub	rsp,rcx
	sub	rsp,32

	mov	QWORD[16+rsp],rsi
	mov	QWORD[24+rsp],rax

$L$enc_prologue:

	mov	r15,rdx
	mov	r13d,DWORD[240+r15]

	mov	eax,DWORD[rdi]
	mov	ebx,DWORD[4+rdi]
	mov	ecx,DWORD[8+rdi]
	mov	edx,DWORD[12+rdi]

	shl	r13d,4
	lea	rbp,[r13*1+r15]
	mov	QWORD[rsp],r15
	mov	QWORD[8+rsp],rbp


	lea	r14,[(($L$AES_Te+2048))]
	lea	rbp,[768+rsp]
	sub	rbp,r14
	and	rbp,0x300
	lea	r14,[rbp*1+r14]

	call	_x86_64_AES_encrypt_compact

	mov	r9,QWORD[16+rsp]
	mov	rsi,QWORD[24+rsp]

	mov	DWORD[r9],eax
	mov	DWORD[4+r9],ebx
	mov	DWORD[8+r9],ecx
	mov	DWORD[12+r9],edx

	mov	r15,QWORD[((-48))+rsi]

	mov	r14,QWORD[((-40))+rsi]

	mov	r13,QWORD[((-32))+rsi]

	mov	r12,QWORD[((-24))+rsi]

	mov	rbp,QWORD[((-16))+rsi]

	mov	rbx,QWORD[((-8))+rsi]

	lea	rsp,[rsi]

$L$enc_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_AES_encrypt:

ALIGN	16
_x86_64_AES_decrypt:

	xor	eax,DWORD[r15]
	xor	ebx,DWORD[4+r15]
	xor	ecx,DWORD[8+r15]
	xor	edx,DWORD[12+r15]

	mov	r13d,DWORD[240+r15]
	sub	r13d,1
	jmp	NEAR $L$dec_loop
ALIGN	16
$L$dec_loop:

	movzx	esi,al
	movzx	edi,bl
	movzx	ebp,cl
	mov	r10d,DWORD[rsi*8+r14]
	mov	r11d,DWORD[rdi*8+r14]
	mov	r12d,DWORD[rbp*8+r14]

	movzx	esi,dh
	movzx	edi,ah
	movzx	ebp,dl
	xor	r10d,DWORD[3+rsi*8+r14]
	xor	r11d,DWORD[3+rdi*8+r14]
	mov	r8d,DWORD[rbp*8+r14]

	movzx	esi,bh
	shr	eax,16
	movzx	ebp,ch
	xor	r12d,DWORD[3+rsi*8+r14]
	shr	edx,16
	xor	r8d,DWORD[3+rbp*8+r14]

	shr	ebx,16
	lea	r15,[16+r15]
	shr	ecx,16

	movzx	esi,cl
	movzx	edi,dl
	movzx	ebp,al
	xor	r10d,DWORD[2+rsi*8+r14]
	xor	r11d,DWORD[2+rdi*8+r14]
	xor	r12d,DWORD[2+rbp*8+r14]

	movzx	esi,bh
	movzx	edi,ch
	movzx	ebp,bl
	xor	r10d,DWORD[1+rsi*8+r14]
	xor	r11d,DWORD[1+rdi*8+r14]
	xor	r8d,DWORD[2+rbp*8+r14]

	movzx	esi,dh
	mov	edx,DWORD[12+r15]
	movzx	ebp,ah
	xor	r12d,DWORD[1+rsi*8+r14]
	mov	eax,DWORD[r15]
	xor	r8d,DWORD[1+rbp*8+r14]

	xor	eax,r10d
	mov	ebx,DWORD[4+r15]
	mov	ecx,DWORD[8+r15]
	xor	ecx,r12d
	xor	ebx,r11d
	xor	edx,r8d
	sub	r13d,1
	jnz	NEAR $L$dec_loop
	lea	r14,[2048+r14]
	movzx	esi,al
	movzx	edi,bl
	movzx	ebp,cl
	movzx	r10d,BYTE[rsi*1+r14]
	movzx	r11d,BYTE[rdi*1+r14]
	movzx	r12d,BYTE[rbp*1+r14]

	movzx	esi,dl
	movzx	edi,dh
	movzx	ebp,ah
	movzx	r8d,BYTE[rsi*1+r14]
	movzx	edi,BYTE[rdi*1+r14]
	movzx	ebp,BYTE[rbp*1+r14]

	shl	edi,8
	shl	ebp,8

	xor	r10d,edi
	xor	r11d,ebp
	shr	edx,16

	movzx	esi,bh
	movzx	edi,ch
	shr	eax,16
	movzx	esi,BYTE[rsi*1+r14]
	movzx	edi,BYTE[rdi*1+r14]

	shl	esi,8
	shl	edi,8
	shr	ebx,16
	xor	r12d,esi
	xor	r8d,edi
	shr	ecx,16

	movzx	esi,cl
	movzx	edi,dl
	movzx	ebp,al
	movzx	esi,BYTE[rsi*1+r14]
	movzx	edi,BYTE[rdi*1+r14]
	movzx	ebp,BYTE[rbp*1+r14]

	shl	esi,16
	shl	edi,16
	shl	ebp,16

	xor	r10d,esi
	xor	r11d,edi
	xor	r12d,ebp

	movzx	esi,bl
	movzx	edi,bh
	movzx	ebp,ch
	movzx	esi,BYTE[rsi*1+r14]
	movzx	edi,BYTE[rdi*1+r14]
	movzx	ebp,BYTE[rbp*1+r14]

	shl	esi,16
	shl	edi,24
	shl	ebp,24

	xor	r8d,esi
	xor	r10d,edi
	xor	r11d,ebp

	movzx	esi,dh
	movzx	edi,ah
	mov	edx,DWORD[((16+12))+r15]
	movzx	esi,BYTE[rsi*1+r14]
	movzx	edi,BYTE[rdi*1+r14]
	mov	eax,DWORD[((16+0))+r15]

	shl	esi,24
	shl	edi,24

	xor	r12d,esi
	xor	r8d,edi

	mov	ebx,DWORD[((16+4))+r15]
	mov	ecx,DWORD[((16+8))+r15]
	lea	r14,[((-2048))+r14]
	xor	eax,r10d
	xor	ebx,r11d
	xor	ecx,r12d
	xor	edx,r8d
DB	0xf3,0xc3



ALIGN	16
_x86_64_AES_decrypt_compact:

	lea	r8,[128+r14]
	mov	edi,DWORD[((0-128))+r8]
	mov	ebp,DWORD[((32-128))+r8]
	mov	r10d,DWORD[((64-128))+r8]
	mov	r11d,DWORD[((96-128))+r8]
	mov	edi,DWORD[((128-128))+r8]
	mov	ebp,DWORD[((160-128))+r8]
	mov	r10d,DWORD[((192-128))+r8]
	mov	r11d,DWORD[((224-128))+r8]
	jmp	NEAR $L$dec_loop_compact

ALIGN	16
$L$dec_loop_compact:
	xor	eax,DWORD[r15]
	xor	ebx,DWORD[4+r15]
	xor	ecx,DWORD[8+r15]
	xor	edx,DWORD[12+r15]
	lea	r15,[16+r15]
	movzx	r10d,al
	movzx	r11d,bl
	movzx	r12d,cl
	movzx	r8d,dl
	movzx	esi,dh
	movzx	edi,ah
	shr	edx,16
	movzx	ebp,bh
	movzx	r10d,BYTE[r10*1+r14]
	movzx	r11d,BYTE[r11*1+r14]
	movzx	r12d,BYTE[r12*1+r14]
	movzx	r8d,BYTE[r8*1+r14]

	movzx	r9d,BYTE[rsi*1+r14]
	movzx	esi,ch
	movzx	r13d,BYTE[rdi*1+r14]
	movzx	ebp,BYTE[rbp*1+r14]
	movzx	esi,BYTE[rsi*1+r14]

	shr	ecx,16
	shl	r13d,8
	shl	r9d,8
	movzx	edi,cl
	shr	eax,16
	xor	r10d,r9d
	shr	ebx,16
	movzx	r9d,dl

	shl	ebp,8
	xor	r11d,r13d
	shl	esi,8
	movzx	r13d,al
	movzx	edi,BYTE[rdi*1+r14]
	xor	r12d,ebp
	movzx	ebp,bl

	shl	edi,16
	xor	r8d,esi
	movzx	r9d,BYTE[r9*1+r14]
	movzx	esi,bh
	movzx	ebp,BYTE[rbp*1+r14]
	xor	r10d,edi
	movzx	r13d,BYTE[r13*1+r14]
	movzx	edi,ch

	shl	ebp,16
	shl	r9d,16
	shl	r13d,16
	xor	r8d,ebp
	movzx	ebp,dh
	xor	r11d,r9d
	shr	eax,8
	xor	r12d,r13d

	movzx	esi,BYTE[rsi*1+r14]
	movzx	ebx,BYTE[rdi*1+r14]
	movzx	ecx,BYTE[rbp*1+r14]
	movzx	edx,BYTE[rax*1+r14]

	mov	eax,r10d
	shl	esi,24
	shl	ebx,24
	shl	ecx,24
	xor	eax,esi
	shl	edx,24
	xor	ebx,r11d
	xor	ecx,r12d
	xor	edx,r8d
	cmp	r15,QWORD[16+rsp]
	je	NEAR $L$dec_compact_done

	mov	rsi,QWORD[((256+0))+r14]
	shl	rbx,32
	shl	rdx,32
	mov	rdi,QWORD[((256+8))+r14]
	or	rax,rbx
	or	rcx,rdx
	mov	rbp,QWORD[((256+16))+r14]
	mov	r9,rsi
	mov	r12,rsi
	and	r9,rax
	and	r12,rcx
	mov	rbx,r9
	mov	rdx,r12
	shr	r9,7
	lea	r8,[rax*1+rax]
	shr	r12,7
	lea	r11,[rcx*1+rcx]
	sub	rbx,r9
	sub	rdx,r12
	and	r8,rdi
	and	r11,rdi
	and	rbx,rbp
	and	rdx,rbp
	xor	r8,rbx
	xor	r11,rdx
	mov	r10,rsi
	mov	r13,rsi

	and	r10,r8
	and	r13,r11
	mov	rbx,r10
	mov	rdx,r13
	shr	r10,7
	lea	r9,[r8*1+r8]
	shr	r13,7
	lea	r12,[r11*1+r11]
	sub	rbx,r10
	sub	rdx,r13
	and	r9,rdi
	and	r12,rdi
	and	rbx,rbp
	and	rdx,rbp
	xor	r9,rbx
	xor	r12,rdx
	mov	r10,rsi
	mov	r13,rsi

	and	r10,r9
	and	r13,r12
	mov	rbx,r10
	mov	rdx,r13
	shr	r10,7
	xor	r8,rax
	shr	r13,7
	xor	r11,rcx
	sub	rbx,r10
	sub	rdx,r13
	lea	r10,[r9*1+r9]
	lea	r13,[r12*1+r12]
	xor	r9,rax
	xor	r12,rcx
	and	r10,rdi
	and	r13,rdi
	and	rbx,rbp
	and	rdx,rbp
	xor	r10,rbx
	xor	r13,rdx

	xor	rax,r10
	xor	rcx,r13
	xor	r8,r10
	xor	r11,r13
	mov	rbx,rax
	mov	rdx,rcx
	xor	r9,r10
	shr	rbx,32
	xor	r12,r13
	shr	rdx,32
	xor	r10,r8
	rol	eax,8
	xor	r13,r11
	rol	ecx,8
	xor	r10,r9
	rol	ebx,8
	xor	r13,r12

	rol	edx,8
	xor	eax,r10d
	shr	r10,32
	xor	ecx,r13d
	shr	r13,32
	xor	ebx,r10d
	xor	edx,r13d

	mov	r10,r8
	rol	r8d,24
	mov	r13,r11
	rol	r11d,24
	shr	r10,32
	xor	eax,r8d
	shr	r13,32
	xor	ecx,r11d
	rol	r10d,24
	mov	r8,r9
	rol	r13d,24
	mov	r11,r12
	shr	r8,32
	xor	ebx,r10d
	shr	r11,32
	xor	edx,r13d

	mov	rsi,QWORD[r14]
	rol	r9d,16
	mov	rdi,QWORD[64+r14]
	rol	r12d,16
	mov	rbp,QWORD[128+r14]
	rol	r8d,16
	mov	r10,QWORD[192+r14]
	xor	eax,r9d
	rol	r11d,16
	xor	ecx,r12d
	mov	r13,QWORD[256+r14]
	xor	ebx,r8d
	xor	edx,r11d
	jmp	NEAR $L$dec_loop_compact
ALIGN	16
$L$dec_compact_done:
	xor	eax,DWORD[r15]
	xor	ebx,DWORD[4+r15]
	xor	ecx,DWORD[8+r15]
	xor	edx,DWORD[12+r15]
DB	0xf3,0xc3


global	AES_decrypt

ALIGN	16
global	asm_AES_decrypt

asm_AES_decrypt:
AES_decrypt:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_AES_decrypt:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8



DB	243,15,30,250
	mov	rax,rsp

	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15



	lea	rcx,[((-63))+rdx]
	and	rsp,-64
	sub	rcx,rsp
	neg	rcx
	and	rcx,0x3c0
	sub	rsp,rcx
	sub	rsp,32

	mov	QWORD[16+rsp],rsi
	mov	QWORD[24+rsp],rax

$L$dec_prologue:

	mov	r15,rdx
	mov	r13d,DWORD[240+r15]

	mov	eax,DWORD[rdi]
	mov	ebx,DWORD[4+rdi]
	mov	ecx,DWORD[8+rdi]
	mov	edx,DWORD[12+rdi]

	shl	r13d,4
	lea	rbp,[r13*1+r15]
	mov	QWORD[rsp],r15
	mov	QWORD[8+rsp],rbp


	lea	r14,[(($L$AES_Td+2048))]
	lea	rbp,[768+rsp]
	sub	rbp,r14
	and	rbp,0x300
	lea	r14,[rbp*1+r14]
	shr	rbp,3
	add	r14,rbp

	call	_x86_64_AES_decrypt_compact

	mov	r9,QWORD[16+rsp]
	mov	rsi,QWORD[24+rsp]

	mov	DWORD[r9],eax
	mov	DWORD[4+r9],ebx
	mov	DWORD[8+r9],ecx
	mov	DWORD[12+r9],edx

	mov	r15,QWORD[((-48))+rsi]

	mov	r14,QWORD[((-40))+rsi]

	mov	r13,QWORD[((-32))+rsi]

	mov	r12,QWORD[((-24))+rsi]

	mov	rbp,QWORD[((-16))+rsi]

	mov	rbx,QWORD[((-8))+rsi]

	lea	rsp,[rsi]

$L$dec_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_AES_decrypt:
global	AES_set_encrypt_key

ALIGN	16
AES_set_encrypt_key:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_AES_set_encrypt_key:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8



DB	243,15,30,250
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

	sub	rsp,8

$L$enc_key_prologue:

	call	_x86_64_AES_set_encrypt_key

	mov	rbp,QWORD[40+rsp]

	mov	rbx,QWORD[48+rsp]

	add	rsp,56

$L$enc_key_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_AES_set_encrypt_key:


ALIGN	16
_x86_64_AES_set_encrypt_key:

	mov	ecx,esi
	mov	rsi,rdi
	mov	rdi,rdx

	test	rsi,-1
	jz	NEAR $L$badpointer
	test	rdi,-1
	jz	NEAR $L$badpointer

	lea	rbp,[$L$AES_Te]
	lea	rbp,[((2048+128))+rbp]


	mov	eax,DWORD[((0-128))+rbp]
	mov	ebx,DWORD[((32-128))+rbp]
	mov	r8d,DWORD[((64-128))+rbp]
	mov	edx,DWORD[((96-128))+rbp]
	mov	eax,DWORD[((128-128))+rbp]
	mov	ebx,DWORD[((160-128))+rbp]
	mov	r8d,DWORD[((192-128))+rbp]
	mov	edx,DWORD[((224-128))+rbp]

	cmp	ecx,128
	je	NEAR $L$10rounds
	cmp	ecx,192
	je	NEAR $L$12rounds
	cmp	ecx,256
	je	NEAR $L$14rounds
	mov	rax,-2
	jmp	NEAR $L$exit

$L$10rounds:
	mov	rax,QWORD[rsi]
	mov	rdx,QWORD[8+rsi]
	mov	QWORD[rdi],rax
	mov	QWORD[8+rdi],rdx

	shr	rdx,32
	xor	ecx,ecx
	jmp	NEAR $L$10shortcut
ALIGN	4
$L$10loop:
	mov	eax,DWORD[rdi]
	mov	edx,DWORD[12+rdi]
$L$10shortcut:
	movzx	esi,dl
	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	movzx	esi,dh
	shl	ebx,24
	xor	eax,ebx

	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	shr	edx,16
	movzx	esi,dl
	xor	eax,ebx

	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	movzx	esi,dh
	shl	ebx,8
	xor	eax,ebx

	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	shl	ebx,16
	xor	eax,ebx

	xor	eax,DWORD[((1024-128))+rcx*4+rbp]
	mov	DWORD[16+rdi],eax
	xor	eax,DWORD[4+rdi]
	mov	DWORD[20+rdi],eax
	xor	eax,DWORD[8+rdi]
	mov	DWORD[24+rdi],eax
	xor	eax,DWORD[12+rdi]
	mov	DWORD[28+rdi],eax
	add	ecx,1
	lea	rdi,[16+rdi]
	cmp	ecx,10
	jl	NEAR $L$10loop

	mov	DWORD[80+rdi],10
	xor	rax,rax
	jmp	NEAR $L$exit

$L$12rounds:
	mov	rax,QWORD[rsi]
	mov	rbx,QWORD[8+rsi]
	mov	rdx,QWORD[16+rsi]
	mov	QWORD[rdi],rax
	mov	QWORD[8+rdi],rbx
	mov	QWORD[16+rdi],rdx

	shr	rdx,32
	xor	ecx,ecx
	jmp	NEAR $L$12shortcut
ALIGN	4
$L$12loop:
	mov	eax,DWORD[rdi]
	mov	edx,DWORD[20+rdi]
$L$12shortcut:
	movzx	esi,dl
	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	movzx	esi,dh
	shl	ebx,24
	xor	eax,ebx

	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	shr	edx,16
	movzx	esi,dl
	xor	eax,ebx

	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	movzx	esi,dh
	shl	ebx,8
	xor	eax,ebx

	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	shl	ebx,16
	xor	eax,ebx

	xor	eax,DWORD[((1024-128))+rcx*4+rbp]
	mov	DWORD[24+rdi],eax
	xor	eax,DWORD[4+rdi]
	mov	DWORD[28+rdi],eax
	xor	eax,DWORD[8+rdi]
	mov	DWORD[32+rdi],eax
	xor	eax,DWORD[12+rdi]
	mov	DWORD[36+rdi],eax

	cmp	ecx,7
	je	NEAR $L$12break
	add	ecx,1

	xor	eax,DWORD[16+rdi]
	mov	DWORD[40+rdi],eax
	xor	eax,DWORD[20+rdi]
	mov	DWORD[44+rdi],eax

	lea	rdi,[24+rdi]
	jmp	NEAR $L$12loop
$L$12break:
	mov	DWORD[72+rdi],12
	xor	rax,rax
	jmp	NEAR $L$exit

$L$14rounds:
	mov	rax,QWORD[rsi]
	mov	rbx,QWORD[8+rsi]
	mov	rcx,QWORD[16+rsi]
	mov	rdx,QWORD[24+rsi]
	mov	QWORD[rdi],rax
	mov	QWORD[8+rdi],rbx
	mov	QWORD[16+rdi],rcx
	mov	QWORD[24+rdi],rdx

	shr	rdx,32
	xor	ecx,ecx
	jmp	NEAR $L$14shortcut
ALIGN	4
$L$14loop:
	mov	eax,DWORD[rdi]
	mov	edx,DWORD[28+rdi]
$L$14shortcut:
	movzx	esi,dl
	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	movzx	esi,dh
	shl	ebx,24
	xor	eax,ebx

	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	shr	edx,16
	movzx	esi,dl
	xor	eax,ebx

	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	movzx	esi,dh
	shl	ebx,8
	xor	eax,ebx

	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	shl	ebx,16
	xor	eax,ebx

	xor	eax,DWORD[((1024-128))+rcx*4+rbp]
	mov	DWORD[32+rdi],eax
	xor	eax,DWORD[4+rdi]
	mov	DWORD[36+rdi],eax
	xor	eax,DWORD[8+rdi]
	mov	DWORD[40+rdi],eax
	xor	eax,DWORD[12+rdi]
	mov	DWORD[44+rdi],eax

	cmp	ecx,6
	je	NEAR $L$14break
	add	ecx,1

	mov	edx,eax
	mov	eax,DWORD[16+rdi]
	movzx	esi,dl
	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	movzx	esi,dh
	xor	eax,ebx

	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	shr	edx,16
	shl	ebx,8
	movzx	esi,dl
	xor	eax,ebx

	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	movzx	esi,dh
	shl	ebx,16
	xor	eax,ebx

	movzx	ebx,BYTE[((-128))+rsi*1+rbp]
	shl	ebx,24
	xor	eax,ebx

	mov	DWORD[48+rdi],eax
	xor	eax,DWORD[20+rdi]
	mov	DWORD[52+rdi],eax
	xor	eax,DWORD[24+rdi]
	mov	DWORD[56+rdi],eax
	xor	eax,DWORD[28+rdi]
	mov	DWORD[60+rdi],eax

	lea	rdi,[32+rdi]
	jmp	NEAR $L$14loop
$L$14break:
	mov	DWORD[48+rdi],14
	xor	rax,rax
	jmp	NEAR $L$exit

$L$badpointer:
	mov	rax,-1
$L$exit:
DB	0xf3,0xc3


global	AES_set_decrypt_key

ALIGN	16
AES_set_decrypt_key:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_AES_set_decrypt_key:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8



DB	243,15,30,250
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

	push	rdx

$L$dec_key_prologue:

	call	_x86_64_AES_set_encrypt_key
	mov	r8,QWORD[rsp]
	cmp	eax,0
	jne	NEAR $L$abort

	mov	r14d,DWORD[240+r8]
	xor	rdi,rdi
	lea	rcx,[r14*4+rdi]
	mov	rsi,r8
	lea	rdi,[rcx*4+r8]
ALIGN	4
$L$invert:
	mov	rax,QWORD[rsi]
	mov	rbx,QWORD[8+rsi]
	mov	rcx,QWORD[rdi]
	mov	rdx,QWORD[8+rdi]
	mov	QWORD[rdi],rax
	mov	QWORD[8+rdi],rbx
	mov	QWORD[rsi],rcx
	mov	QWORD[8+rsi],rdx
	lea	rsi,[16+rsi]
	lea	rdi,[((-16))+rdi]
	cmp	rdi,rsi
	jne	NEAR $L$invert

	lea	rax,[(($L$AES_Te+2048+1024))]

	mov	rsi,QWORD[40+rax]
	mov	rdi,QWORD[48+rax]
	mov	rbp,QWORD[56+rax]

	mov	r15,r8
	sub	r14d,1
ALIGN	4
$L$permute:
	lea	r15,[16+r15]
	mov	rax,QWORD[r15]
	mov	rcx,QWORD[8+r15]
	mov	r9,rsi
	mov	r12,rsi
	and	r9,rax
	and	r12,rcx
	mov	rbx,r9
	mov	rdx,r12
	shr	r9,7
	lea	r8,[rax*1+rax]
	shr	r12,7
	lea	r11,[rcx*1+rcx]
	sub	rbx,r9
	sub	rdx,r12
	and	r8,rdi
	and	r11,rdi
	and	rbx,rbp
	and	rdx,rbp
	xor	r8,rbx
	xor	r11,rdx
	mov	r10,rsi
	mov	r13,rsi

	and	r10,r8
	and	r13,r11
	mov	rbx,r10
	mov	rdx,r13
	shr	r10,7
	lea	r9,[r8*1+r8]
	shr	r13,7
	lea	r12,[r11*1+r11]
	sub	rbx,r10
	sub	rdx,r13
	and	r9,rdi
	and	r12,rdi
	and	rbx,rbp
	and	rdx,rbp
	xor	r9,rbx
	xor	r12,rdx
	mov	r10,rsi
	mov	r13,rsi

	and	r10,r9
	and	r13,r12
	mov	rbx,r10
	mov	rdx,r13
	shr	r10,7
	xor	r8,rax
	shr	r13,7
	xor	r11,rcx
	sub	rbx,r10
	sub	rdx,r13
	lea	r10,[r9*1+r9]
	lea	r13,[r12*1+r12]
	xor	r9,rax
	xor	r12,rcx
	and	r10,rdi
	and	r13,rdi
	and	rbx,rbp
	and	rdx,rbp
	xor	r10,rbx
	xor	r13,rdx

	xor	rax,r10
	xor	rcx,r13
	xor	r8,r10
	xor	r11,r13
	mov	rbx,rax
	mov	rdx,rcx
	xor	r9,r10
	shr	rbx,32
	xor	r12,r13
	shr	rdx,32
	xor	r10,r8
	rol	eax,8
	xor	r13,r11
	rol	ecx,8
	xor	r10,r9
	rol	ebx,8
	xor	r13,r12

	rol	edx,8
	xor	eax,r10d
	shr	r10,32
	xor	ecx,r13d
	shr	r13,32
	xor	ebx,r10d
	xor	edx,r13d

	mov	r10,r8
	rol	r8d,24
	mov	r13,r11
	rol	r11d,24
	shr	r10,32
	xor	eax,r8d
	shr	r13,32
	xor	ecx,r11d
	rol	r10d,24
	mov	r8,r9
	rol	r13d,24
	mov	r11,r12
	shr	r8,32
	xor	ebx,r10d
	shr	r11,32
	xor	edx,r13d


	rol	r9d,16

	rol	r12d,16

	rol	r8d,16

	xor	eax,r9d
	rol	r11d,16
	xor	ecx,r12d

	xor	ebx,r8d
	xor	edx,r11d
	mov	DWORD[r15],eax
	mov	DWORD[4+r15],ebx
	mov	DWORD[8+r15],ecx
	mov	DWORD[12+r15],edx
	sub	r14d,1
	jnz	NEAR $L$permute

	xor	rax,rax
$L$abort:
	mov	r15,QWORD[8+rsp]

	mov	r14,QWORD[16+rsp]

	mov	r13,QWORD[24+rsp]

	mov	r12,QWORD[32+rsp]

	mov	rbp,QWORD[40+rsp]

	mov	rbx,QWORD[48+rsp]

	add	rsp,56

$L$dec_key_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_AES_set_decrypt_key:
global	AES_cbc_encrypt

ALIGN	16
EXTERN	OPENSSL_ia32cap_P
global	asm_AES_cbc_encrypt

asm_AES_cbc_encrypt:
AES_cbc_encrypt:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_AES_cbc_encrypt:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



DB	243,15,30,250
	cmp	rdx,0
	je	NEAR $L$cbc_epilogue
	pushfq



	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

$L$cbc_prologue:

	cld
	mov	r9d,r9d

	lea	r14,[$L$AES_Te]
	lea	r10,[$L$AES_Td]
	cmp	r9,0
	cmove	r14,r10


	mov	r10d,DWORD[OPENSSL_ia32cap_P]
	cmp	rdx,512
	jb	NEAR $L$cbc_slow_prologue
	test	rdx,15
	jnz	NEAR $L$cbc_slow_prologue
	bt	r10d,28
	jc	NEAR $L$cbc_slow_prologue


	lea	r15,[((-88-248))+rsp]
	and	r15,-64


	mov	r10,r14
	lea	r11,[2304+r14]
	mov	r12,r15
	and	r10,0xFFF
	and	r11,0xFFF
	and	r12,0xFFF

	cmp	r12,r11
	jb	NEAR $L$cbc_te_break_out
	sub	r12,r11
	sub	r15,r12
	jmp	NEAR $L$cbc_te_ok
$L$cbc_te_break_out:
	sub	r12,r10
	and	r12,0xFFF
	add	r12,320
	sub	r15,r12
ALIGN	4
$L$cbc_te_ok:

	xchg	r15,rsp


	mov	QWORD[16+rsp],r15

$L$cbc_fast_body:
	mov	QWORD[24+rsp],rdi
	mov	QWORD[32+rsp],rsi
	mov	QWORD[40+rsp],rdx
	mov	QWORD[48+rsp],rcx
	mov	QWORD[56+rsp],r8
	mov	DWORD[((80+240))+rsp],0
	mov	rbp,r8
	mov	rbx,r9
	mov	r9,rsi
	mov	r8,rdi
	mov	r15,rcx

	mov	eax,DWORD[240+r15]

	mov	r10,r15
	sub	r10,r14
	and	r10,0xfff
	cmp	r10,2304
	jb	NEAR $L$cbc_do_ecopy
	cmp	r10,4096-248
	jb	NEAR $L$cbc_skip_ecopy
ALIGN	4
$L$cbc_do_ecopy:
	mov	rsi,r15
	lea	rdi,[80+rsp]
	lea	r15,[80+rsp]
	mov	ecx,240/8
	DD	0x90A548F3
	mov	DWORD[rdi],eax
$L$cbc_skip_ecopy:
	mov	QWORD[rsp],r15

	mov	ecx,18
ALIGN	4
$L$cbc_prefetch_te:
	mov	r10,QWORD[r14]
	mov	r11,QWORD[32+r14]
	mov	r12,QWORD[64+r14]
	mov	r13,QWORD[96+r14]
	lea	r14,[128+r14]
	sub	ecx,1
	jnz	NEAR $L$cbc_prefetch_te
	lea	r14,[((-2304))+r14]

	cmp	rbx,0
	je	NEAR $L$FAST_DECRYPT


	mov	eax,DWORD[rbp]
	mov	ebx,DWORD[4+rbp]
	mov	ecx,DWORD[8+rbp]
	mov	edx,DWORD[12+rbp]

ALIGN	4
$L$cbc_fast_enc_loop:
	xor	eax,DWORD[r8]
	xor	ebx,DWORD[4+r8]
	xor	ecx,DWORD[8+r8]
	xor	edx,DWORD[12+r8]
	mov	r15,QWORD[rsp]
	mov	QWORD[24+rsp],r8

	call	_x86_64_AES_encrypt

	mov	r8,QWORD[24+rsp]
	mov	r10,QWORD[40+rsp]
	mov	DWORD[r9],eax
	mov	DWORD[4+r9],ebx
	mov	DWORD[8+r9],ecx
	mov	DWORD[12+r9],edx

	lea	r8,[16+r8]
	lea	r9,[16+r9]
	sub	r10,16
	test	r10,-16
	mov	QWORD[40+rsp],r10
	jnz	NEAR $L$cbc_fast_enc_loop
	mov	rbp,QWORD[56+rsp]
	mov	DWORD[rbp],eax
	mov	DWORD[4+rbp],ebx
	mov	DWORD[8+rbp],ecx
	mov	DWORD[12+rbp],edx

	jmp	NEAR $L$cbc_fast_cleanup


ALIGN	16
$L$FAST_DECRYPT:
	cmp	r9,r8
	je	NEAR $L$cbc_fast_dec_in_place

	mov	QWORD[64+rsp],rbp
ALIGN	4
$L$cbc_fast_dec_loop:
	mov	eax,DWORD[r8]
	mov	ebx,DWORD[4+r8]
	mov	ecx,DWORD[8+r8]
	mov	edx,DWORD[12+r8]
	mov	r15,QWORD[rsp]
	mov	QWORD[24+rsp],r8

	call	_x86_64_AES_decrypt

	mov	rbp,QWORD[64+rsp]
	mov	r8,QWORD[24+rsp]
	mov	r10,QWORD[40+rsp]
	xor	eax,DWORD[rbp]
	xor	ebx,DWORD[4+rbp]
	xor	ecx,DWORD[8+rbp]
	xor	edx,DWORD[12+rbp]
	mov	rbp,r8

	sub	r10,16
	mov	QWORD[40+rsp],r10
	mov	QWORD[64+rsp],rbp

	mov	DWORD[r9],eax
	mov	DWORD[4+r9],ebx
	mov	DWORD[8+r9],ecx
	mov	DWORD[12+r9],edx

	lea	r8,[16+r8]
	lea	r9,[16+r9]
	jnz	NEAR $L$cbc_fast_dec_loop
	mov	r12,QWORD[56+rsp]
	mov	r10,QWORD[rbp]
	mov	r11,QWORD[8+rbp]
	mov	QWORD[r12],r10
	mov	QWORD[8+r12],r11
	jmp	NEAR $L$cbc_fast_cleanup

ALIGN	16
$L$cbc_fast_dec_in_place:
	mov	r10,QWORD[rbp]
	mov	r11,QWORD[8+rbp]
	mov	QWORD[((0+64))+rsp],r10
	mov	QWORD[((8+64))+rsp],r11
ALIGN	4
$L$cbc_fast_dec_in_place_loop:
	mov	eax,DWORD[r8]
	mov	ebx,DWORD[4+r8]
	mov	ecx,DWORD[8+r8]
	mov	edx,DWORD[12+r8]
	mov	r15,QWORD[rsp]
	mov	QWORD[24+rsp],r8

	call	_x86_64_AES_decrypt

	mov	r8,QWORD[24+rsp]
	mov	r10,QWORD[40+rsp]
	xor	eax,DWORD[((0+64))+rsp]
	xor	ebx,DWORD[((4+64))+rsp]
	xor	ecx,DWORD[((8+64))+rsp]
	xor	edx,DWORD[((12+64))+rsp]

	mov	r11,QWORD[r8]
	mov	r12,QWORD[8+r8]
	sub	r10,16
	jz	NEAR $L$cbc_fast_dec_in_place_done

	mov	QWORD[((0+64))+rsp],r11
	mov	QWORD[((8+64))+rsp],r12

	mov	DWORD[r9],eax
	mov	DWORD[4+r9],ebx
	mov	DWORD[8+r9],ecx
	mov	DWORD[12+r9],edx

	lea	r8,[16+r8]
	lea	r9,[16+r9]
	mov	QWORD[40+rsp],r10
	jmp	NEAR $L$cbc_fast_dec_in_place_loop
$L$cbc_fast_dec_in_place_done:
	mov	rdi,QWORD[56+rsp]
	mov	QWORD[rdi],r11
	mov	QWORD[8+rdi],r12

	mov	DWORD[r9],eax
	mov	DWORD[4+r9],ebx
	mov	DWORD[8+r9],ecx
	mov	DWORD[12+r9],edx

ALIGN	4
$L$cbc_fast_cleanup:
	cmp	DWORD[((80+240))+rsp],0
	lea	rdi,[80+rsp]
	je	NEAR $L$cbc_exit
	mov	ecx,240/8
	xor	rax,rax
	DD	0x90AB48F3

	jmp	NEAR $L$cbc_exit


ALIGN	16
$L$cbc_slow_prologue:


	lea	rbp,[((-88))+rsp]
	and	rbp,-64

	lea	r10,[((-88-63))+rcx]
	sub	r10,rbp
	neg	r10
	and	r10,0x3c0
	sub	rbp,r10

	xchg	rbp,rsp


	mov	QWORD[16+rsp],rbp

$L$cbc_slow_body:




	mov	QWORD[56+rsp],r8
	mov	rbp,r8
	mov	rbx,r9
	mov	r9,rsi
	mov	r8,rdi
	mov	r15,rcx
	mov	r10,rdx

	mov	eax,DWORD[240+r15]
	mov	QWORD[rsp],r15
	shl	eax,4
	lea	rax,[rax*1+r15]
	mov	QWORD[8+rsp],rax


	lea	r14,[2048+r14]
	lea	rax,[((768-8))+rsp]
	sub	rax,r14
	and	rax,0x300
	lea	r14,[rax*1+r14]

	cmp	rbx,0
	je	NEAR $L$SLOW_DECRYPT


	test	r10,-16
	mov	eax,DWORD[rbp]
	mov	ebx,DWORD[4+rbp]
	mov	ecx,DWORD[8+rbp]
	mov	edx,DWORD[12+rbp]
	jz	NEAR $L$cbc_slow_enc_tail

ALIGN	4
$L$cbc_slow_enc_loop:
	xor	eax,DWORD[r8]
	xor	ebx,DWORD[4+r8]
	xor	ecx,DWORD[8+r8]
	xor	edx,DWORD[12+r8]
	mov	r15,QWORD[rsp]
	mov	QWORD[24+rsp],r8
	mov	QWORD[32+rsp],r9
	mov	QWORD[40+rsp],r10

	call	_x86_64_AES_encrypt_compact

	mov	r8,QWORD[24+rsp]
	mov	r9,QWORD[32+rsp]
	mov	r10,QWORD[40+rsp]
	mov	DWORD[r9],eax
	mov	DWORD[4+r9],ebx
	mov	DWORD[8+r9],ecx
	mov	DWORD[12+r9],edx

	lea	r8,[16+r8]
	lea	r9,[16+r9]
	sub	r10,16
	test	r10,-16
	jnz	NEAR $L$cbc_slow_enc_loop
	test	r10,15
	jnz	NEAR $L$cbc_slow_enc_tail
	mov	rbp,QWORD[56+rsp]
	mov	DWORD[rbp],eax
	mov	DWORD[4+rbp],ebx
	mov	DWORD[8+rbp],ecx
	mov	DWORD[12+rbp],edx

	jmp	NEAR $L$cbc_exit

ALIGN	4
$L$cbc_slow_enc_tail:
	mov	r11,rax
	mov	r12,rcx
	mov	rcx,r10
	mov	rsi,r8
	mov	rdi,r9
	DD	0x9066A4F3
	mov	rcx,16
	sub	rcx,r10
	xor	rax,rax
	DD	0x9066AAF3
	mov	r8,r9
	mov	r10,16
	mov	rax,r11
	mov	rcx,r12
	jmp	NEAR $L$cbc_slow_enc_loop

ALIGN	16
$L$SLOW_DECRYPT:
	shr	rax,3
	add	r14,rax

	mov	r11,QWORD[rbp]
	mov	r12,QWORD[8+rbp]
	mov	QWORD[((0+64))+rsp],r11
	mov	QWORD[((8+64))+rsp],r12

ALIGN	4
$L$cbc_slow_dec_loop:
	mov	eax,DWORD[r8]
	mov	ebx,DWORD[4+r8]
	mov	ecx,DWORD[8+r8]
	mov	edx,DWORD[12+r8]
	mov	r15,QWORD[rsp]
	mov	QWORD[24+rsp],r8
	mov	QWORD[32+rsp],r9
	mov	QWORD[40+rsp],r10

	call	_x86_64_AES_decrypt_compact

	mov	r8,QWORD[24+rsp]
	mov	r9,QWORD[32+rsp]
	mov	r10,QWORD[40+rsp]
	xor	eax,DWORD[((0+64))+rsp]
	xor	ebx,DWORD[((4+64))+rsp]
	xor	ecx,DWORD[((8+64))+rsp]
	xor	edx,DWORD[((12+64))+rsp]

	mov	r11,QWORD[r8]
	mov	r12,QWORD[8+r8]
	sub	r10,16
	jc	NEAR $L$cbc_slow_dec_partial
	jz	NEAR $L$cbc_slow_dec_done

	mov	QWORD[((0+64))+rsp],r11
	mov	QWORD[((8+64))+rsp],r12

	mov	DWORD[r9],eax
	mov	DWORD[4+r9],ebx
	mov	DWORD[8+r9],ecx
	mov	DWORD[12+r9],edx

	lea	r8,[16+r8]
	lea	r9,[16+r9]
	jmp	NEAR $L$cbc_slow_dec_loop
$L$cbc_slow_dec_done:
	mov	rdi,QWORD[56+rsp]
	mov	QWORD[rdi],r11
	mov	QWORD[8+rdi],r12

	mov	DWORD[r9],eax
	mov	DWORD[4+r9],ebx
	mov	DWORD[8+r9],ecx
	mov	DWORD[12+r9],edx

	jmp	NEAR $L$cbc_exit

ALIGN	4
$L$cbc_slow_dec_partial:
	mov	rdi,QWORD[56+rsp]
	mov	QWORD[rdi],r11
	mov	QWORD[8+rdi],r12

	mov	DWORD[((0+64))+rsp],eax
	mov	DWORD[((4+64))+rsp],ebx
	mov	DWORD[((8+64))+rsp],ecx
	mov	DWORD[((12+64))+rsp],edx

	mov	rdi,r9
	lea	rsi,[64+rsp]
	lea	rcx,[16+r10]
	DD	0x9066A4F3
	jmp	NEAR $L$cbc_exit

ALIGN	16
$L$cbc_exit:
	mov	rsi,QWORD[16+rsp]

	mov	r15,QWORD[rsi]

	mov	r14,QWORD[8+rsi]

	mov	r13,QWORD[16+rsi]

	mov	r12,QWORD[24+rsi]

	mov	rbp,QWORD[32+rsi]

	mov	rbx,QWORD[40+rsi]

	lea	rsp,[48+rsi]

$L$cbc_popfq:
	popfq



$L$cbc_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_AES_cbc_encrypt:
ALIGN	64
$L$AES_Te:
	DD	0xa56363c6,0xa56363c6
	DD	0x847c7cf8,0x847c7cf8
	DD	0x997777ee,0x997777ee
	DD	0x8d7b7bf6,0x8d7b7bf6
	DD	0x0df2f2ff,0x0df2f2ff
	DD	0xbd6b6bd6,0xbd6b6bd6
	DD	0xb16f6fde,0xb16f6fde
	DD	0x54c5c591,0x54c5c591
	DD	0x50303060,0x50303060
	DD	0x03010102,0x03010102
	DD	0xa96767ce,0xa96767ce
	DD	0x7d2b2b56,0x7d2b2b56
	DD	0x19fefee7,0x19fefee7
	DD	0x62d7d7b5,0x62d7d7b5
	DD	0xe6abab4d,0xe6abab4d
	DD	0x9a7676ec,0x9a7676ec
	DD	0x45caca8f,0x45caca8f
	DD	0x9d82821f,0x9d82821f
	DD	0x40c9c989,0x40c9c989
	DD	0x877d7dfa,0x877d7dfa
	DD	0x15fafaef,0x15fafaef
	DD	0xeb5959b2,0xeb5959b2
	DD	0xc947478e,0xc947478e
	DD	0x0bf0f0fb,0x0bf0f0fb
	DD	0xecadad41,0xecadad41
	DD	0x67d4d4b3,0x67d4d4b3
	DD	0xfda2a25f,0xfda2a25f
	DD	0xeaafaf45,0xeaafaf45
	DD	0xbf9c9c23,0xbf9c9c23
	DD	0xf7a4a453,0xf7a4a453
	DD	0x967272e4,0x967272e4
	DD	0x5bc0c09b,0x5bc0c09b
	DD	0xc2b7b775,0xc2b7b775
	DD	0x1cfdfde1,0x1cfdfde1
	DD	0xae93933d,0xae93933d
	DD	0x6a26264c,0x6a26264c
	DD	0x5a36366c,0x5a36366c
	DD	0x413f3f7e,0x413f3f7e
	DD	0x02f7f7f5,0x02f7f7f5
	DD	0x4fcccc83,0x4fcccc83
	DD	0x5c343468,0x5c343468
	DD	0xf4a5a551,0xf4a5a551
	DD	0x34e5e5d1,0x34e5e5d1
	DD	0x08f1f1f9,0x08f1f1f9
	DD	0x937171e2,0x937171e2
	DD	0x73d8d8ab,0x73d8d8ab
	DD	0x53313162,0x53313162
	DD	0x3f15152a,0x3f15152a
	DD	0x0c040408,0x0c040408
	DD	0x52c7c795,0x52c7c795
	DD	0x65232346,0x65232346
	DD	0x5ec3c39d,0x5ec3c39d
	DD	0x28181830,0x28181830
	DD	0xa1969637,0xa1969637
	DD	0x0f05050a,0x0f05050a
	DD	0xb59a9a2f,0xb59a9a2f
	DD	0x0907070e,0x0907070e
	DD	0x36121224,0x36121224
	DD	0x9b80801b,0x9b80801b
	DD	0x3de2e2df,0x3de2e2df
	DD	0x26ebebcd,0x26ebebcd
	DD	0x6927274e,0x6927274e
	DD	0xcdb2b27f,0xcdb2b27f
	DD	0x9f7575ea,0x9f7575ea
	DD	0x1b090912,0x1b090912
	DD	0x9e83831d,0x9e83831d
	DD	0x742c2c58,0x742c2c58
	DD	0x2e1a1a34,0x2e1a1a34
	DD	0x2d1b1b36,0x2d1b1b36
	DD	0xb26e6edc,0xb26e6edc
	DD	0xee5a5ab4,0xee5a5ab4
	DD	0xfba0a05b,0xfba0a05b
	DD	0xf65252a4,0xf65252a4
	DD	0x4d3b3b76,0x4d3b3b76
	DD	0x61d6d6b7,0x61d6d6b7
	DD	0xceb3b37d,0xceb3b37d
	DD	0x7b292952,0x7b292952
	DD	0x3ee3e3dd,0x3ee3e3dd
	DD	0x712f2f5e,0x712f2f5e
	DD	0x97848413,0x97848413
	DD	0xf55353a6,0xf55353a6
	DD	0x68d1d1b9,0x68d1d1b9
	DD	0x00000000,0x00000000
	DD	0x2cededc1,0x2cededc1
	DD	0x60202040,0x60202040
	DD	0x1ffcfce3,0x1ffcfce3
	DD	0xc8b1b179,0xc8b1b179
	DD	0xed5b5bb6,0xed5b5bb6
	DD	0xbe6a6ad4,0xbe6a6ad4
	DD	0x46cbcb8d,0x46cbcb8d
	DD	0xd9bebe67,0xd9bebe67
	DD	0x4b393972,0x4b393972
	DD	0xde4a4a94,0xde4a4a94
	DD	0xd44c4c98,0xd44c4c98
	DD	0xe85858b0,0xe85858b0
	DD	0x4acfcf85,0x4acfcf85
	DD	0x6bd0d0bb,0x6bd0d0bb
	DD	0x2aefefc5,0x2aefefc5
	DD	0xe5aaaa4f,0xe5aaaa4f
	DD	0x16fbfbed,0x16fbfbed
	DD	0xc5434386,0xc5434386
	DD	0xd74d4d9a,0xd74d4d9a
	DD	0x55333366,0x55333366
	DD	0x94858511,0x94858511
	DD	0xcf45458a,0xcf45458a
	DD	0x10f9f9e9,0x10f9f9e9
	DD	0x06020204,0x06020204
	DD	0x817f7ffe,0x817f7ffe
	DD	0xf05050a0,0xf05050a0
	DD	0x443c3c78,0x443c3c78
	DD	0xba9f9f25,0xba9f9f25
	DD	0xe3a8a84b,0xe3a8a84b
	DD	0xf35151a2,0xf35151a2
	DD	0xfea3a35d,0xfea3a35d
	DD	0xc0404080,0xc0404080
	DD	0x8a8f8f05,0x8a8f8f05
	DD	0xad92923f,0xad92923f
	DD	0xbc9d9d21,0xbc9d9d21
	DD	0x48383870,0x48383870
	DD	0x04f5f5f1,0x04f5f5f1
	DD	0xdfbcbc63,0xdfbcbc63
	DD	0xc1b6b677,0xc1b6b677
	DD	0x75dadaaf,0x75dadaaf
	DD	0x63212142,0x63212142
	DD	0x30101020,0x30101020
	DD	0x1affffe5,0x1affffe5
	DD	0x0ef3f3fd,0x0ef3f3fd
	DD	0x6dd2d2bf,0x6dd2d2bf
	DD	0x4ccdcd81,0x4ccdcd81
	DD	0x140c0c18,0x140c0c18
	DD	0x35131326,0x35131326
	DD	0x2fececc3,0x2fececc3
	DD	0xe15f5fbe,0xe15f5fbe
	DD	0xa2979735,0xa2979735
	DD	0xcc444488,0xcc444488
	DD	0x3917172e,0x3917172e
	DD	0x57c4c493,0x57c4c493
	DD	0xf2a7a755,0xf2a7a755
	DD	0x827e7efc,0x827e7efc
	DD	0x473d3d7a,0x473d3d7a
	DD	0xac6464c8,0xac6464c8
	DD	0xe75d5dba,0xe75d5dba
	DD	0x2b191932,0x2b191932
	DD	0x957373e6,0x957373e6
	DD	0xa06060c0,0xa06060c0
	DD	0x98818119,0x98818119
	DD	0xd14f4f9e,0xd14f4f9e
	DD	0x7fdcdca3,0x7fdcdca3
	DD	0x66222244,0x66222244
	DD	0x7e2a2a54,0x7e2a2a54
	DD	0xab90903b,0xab90903b
	DD	0x8388880b,0x8388880b
	DD	0xca46468c,0xca46468c
	DD	0x29eeeec7,0x29eeeec7
	DD	0xd3b8b86b,0xd3b8b86b
	DD	0x3c141428,0x3c141428
	DD	0x79dedea7,0x79dedea7
	DD	0xe25e5ebc,0xe25e5ebc
	DD	0x1d0b0b16,0x1d0b0b16
	DD	0x76dbdbad,0x76dbdbad
	DD	0x3be0e0db,0x3be0e0db
	DD	0x56323264,0x56323264
	DD	0x4e3a3a74,0x4e3a3a74
	DD	0x1e0a0a14,0x1e0a0a14
	DD	0xdb494992,0xdb494992
	DD	0x0a06060c,0x0a06060c
	DD	0x6c242448,0x6c242448
	DD	0xe45c5cb8,0xe45c5cb8
	DD	0x5dc2c29f,0x5dc2c29f
	DD	0x6ed3d3bd,0x6ed3d3bd
	DD	0xefacac43,0xefacac43
	DD	0xa66262c4,0xa66262c4
	DD	0xa8919139,0xa8919139
	DD	0xa4959531,0xa4959531
	DD	0x37e4e4d3,0x37e4e4d3
	DD	0x8b7979f2,0x8b7979f2
	DD	0x32e7e7d5,0x32e7e7d5
	DD	0x43c8c88b,0x43c8c88b
	DD	0x5937376e,0x5937376e
	DD	0xb76d6dda,0xb76d6dda
	DD	0x8c8d8d01,0x8c8d8d01
	DD	0x64d5d5b1,0x64d5d5b1
	DD	0xd24e4e9c,0xd24e4e9c
	DD	0xe0a9a949,0xe0a9a949
	DD	0xb46c6cd8,0xb46c6cd8
	DD	0xfa5656ac,0xfa5656ac
	DD	0x07f4f4f3,0x07f4f4f3
	DD	0x25eaeacf,0x25eaeacf
	DD	0xaf6565ca,0xaf6565ca
	DD	0x8e7a7af4,0x8e7a7af4
	DD	0xe9aeae47,0xe9aeae47
	DD	0x18080810,0x18080810
	DD	0xd5baba6f,0xd5baba6f
	DD	0x887878f0,0x887878f0
	DD	0x6f25254a,0x6f25254a
	DD	0x722e2e5c,0x722e2e5c
	DD	0x241c1c38,0x241c1c38
	DD	0xf1a6a657,0xf1a6a657
	DD	0xc7b4b473,0xc7b4b473
	DD	0x51c6c697,0x51c6c697
	DD	0x23e8e8cb,0x23e8e8cb
	DD	0x7cdddda1,0x7cdddda1
	DD	0x9c7474e8,0x9c7474e8
	DD	0x211f1f3e,0x211f1f3e
	DD	0xdd4b4b96,0xdd4b4b96
	DD	0xdcbdbd61,0xdcbdbd61
	DD	0x868b8b0d,0x868b8b0d
	DD	0x858a8a0f,0x858a8a0f
	DD	0x907070e0,0x907070e0
	DD	0x423e3e7c,0x423e3e7c
	DD	0xc4b5b571,0xc4b5b571
	DD	0xaa6666cc,0xaa6666cc
	DD	0xd8484890,0xd8484890
	DD	0x05030306,0x05030306
	DD	0x01f6f6f7,0x01f6f6f7
	DD	0x120e0e1c,0x120e0e1c
	DD	0xa36161c2,0xa36161c2
	DD	0x5f35356a,0x5f35356a
	DD	0xf95757ae,0xf95757ae
	DD	0xd0b9b969,0xd0b9b969
	DD	0x91868617,0x91868617
	DD	0x58c1c199,0x58c1c199
	DD	0x271d1d3a,0x271d1d3a
	DD	0xb99e9e27,0xb99e9e27
	DD	0x38e1e1d9,0x38e1e1d9
	DD	0x13f8f8eb,0x13f8f8eb
	DD	0xb398982b,0xb398982b
	DD	0x33111122,0x33111122
	DD	0xbb6969d2,0xbb6969d2
	DD	0x70d9d9a9,0x70d9d9a9
	DD	0x898e8e07,0x898e8e07
	DD	0xa7949433,0xa7949433
	DD	0xb69b9b2d,0xb69b9b2d
	DD	0x221e1e3c,0x221e1e3c
	DD	0x92878715,0x92878715
	DD	0x20e9e9c9,0x20e9e9c9
	DD	0x49cece87,0x49cece87
	DD	0xff5555aa,0xff5555aa
	DD	0x78282850,0x78282850
	DD	0x7adfdfa5,0x7adfdfa5
	DD	0x8f8c8c03,0x8f8c8c03
	DD	0xf8a1a159,0xf8a1a159
	DD	0x80898909,0x80898909
	DD	0x170d0d1a,0x170d0d1a
	DD	0xdabfbf65,0xdabfbf65
	DD	0x31e6e6d7,0x31e6e6d7
	DD	0xc6424284,0xc6424284
	DD	0xb86868d0,0xb86868d0
	DD	0xc3414182,0xc3414182
	DD	0xb0999929,0xb0999929
	DD	0x772d2d5a,0x772d2d5a
	DD	0x110f0f1e,0x110f0f1e
	DD	0xcbb0b07b,0xcbb0b07b
	DD	0xfc5454a8,0xfc5454a8
	DD	0xd6bbbb6d,0xd6bbbb6d
	DD	0x3a16162c,0x3a16162c
DB	0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5
DB	0x30,0x01,0x67,0x2b,0xfe,0xd7,0xab,0x76
DB	0xca,0x82,0xc9,0x7d,0xfa,0x59,0x47,0xf0
DB	0xad,0xd4,0xa2,0xaf,0x9c,0xa4,0x72,0xc0
DB	0xb7,0xfd,0x93,0x26,0x36,0x3f,0xf7,0xcc
DB	0x34,0xa5,0xe5,0xf1,0x71,0xd8,0x31,0x15
DB	0x04,0xc7,0x23,0xc3,0x18,0x96,0x05,0x9a
DB	0x07,0x12,0x80,0xe2,0xeb,0x27,0xb2,0x75
DB	0x09,0x83,0x2c,0x1a,0x1b,0x6e,0x5a,0xa0
DB	0x52,0x3b,0xd6,0xb3,0x29,0xe3,0x2f,0x84
DB	0x53,0xd1,0x00,0xed,0x20,0xfc,0xb1,0x5b
DB	0x6a,0xcb,0xbe,0x39,0x4a,0x4c,0x58,0xcf
DB	0xd0,0xef,0xaa,0xfb,0x43,0x4d,0x33,0x85
DB	0x45,0xf9,0x02,0x7f,0x50,0x3c,0x9f,0xa8
DB	0x51,0xa3,0x40,0x8f,0x92,0x9d,0x38,0xf5
DB	0xbc,0xb6,0xda,0x21,0x10,0xff,0xf3,0xd2
DB	0xcd,0x0c,0x13,0xec,0x5f,0x97,0x44,0x17
DB	0xc4,0xa7,0x7e,0x3d,0x64,0x5d,0x19,0x73
DB	0x60,0x81,0x4f,0xdc,0x22,0x2a,0x90,0x88
DB	0x46,0xee,0xb8,0x14,0xde,0x5e,0x0b,0xdb
DB	0xe0,0x32,0x3a,0x0a,0x49,0x06,0x24,0x5c
DB	0xc2,0xd3,0xac,0x62,0x91,0x95,0xe4,0x79
DB	0xe7,0xc8,0x37,0x6d,0x8d,0xd5,0x4e,0xa9
DB	0x6c,0x56,0xf4,0xea,0x65,0x7a,0xae,0x08
DB	0xba,0x78,0x25,0x2e,0x1c,0xa6,0xb4,0xc6
DB	0xe8,0xdd,0x74,0x1f,0x4b,0xbd,0x8b,0x8a
DB	0x70,0x3e,0xb5,0x66,0x48,0x03,0xf6,0x0e
DB	0x61,0x35,0x57,0xb9,0x86,0xc1,0x1d,0x9e
DB	0xe1,0xf8,0x98,0x11,0x69,0xd9,0x8e,0x94
DB	0x9b,0x1e,0x87,0xe9,0xce,0x55,0x28,0xdf
DB	0x8c,0xa1,0x89,0x0d,0xbf,0xe6,0x42,0x68
DB	0x41,0x99,0x2d,0x0f,0xb0,0x54,0xbb,0x16
DB	0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5
DB	0x30,0x01,0x67,0x2b,0xfe,0xd7,0xab,0x76
DB	0xca,0x82,0xc9,0x7d,0xfa,0x59,0x47,0xf0
DB	0xad,0xd4,0xa2,0xaf,0x9c,0xa4,0x72,0xc0
DB	0xb7,0xfd,0x93,0x26,0x36,0x3f,0xf7,0xcc
DB	0x34,0xa5,0xe5,0xf1,0x71,0xd8,0x31,0x15
DB	0x04,0xc7,0x23,0xc3,0x18,0x96,0x05,0x9a
DB	0x07,0x12,0x80,0xe2,0xeb,0x27,0xb2,0x75
DB	0x09,0x83,0x2c,0x1a,0x1b,0x6e,0x5a,0xa0
DB	0x52,0x3b,0xd6,0xb3,0x29,0xe3,0x2f,0x84
DB	0x53,0xd1,0x00,0xed,0x20,0xfc,0xb1,0x5b
DB	0x6a,0xcb,0xbe,0x39,0x4a,0x4c,0x58,0xcf
DB	0xd0,0xef,0xaa,0xfb,0x43,0x4d,0x33,0x85
DB	0x45,0xf9,0x02,0x7f,0x50,0x3c,0x9f,0xa8
DB	0x51,0xa3,0x40,0x8f,0x92,0x9d,0x38,0xf5
DB	0xbc,0xb6,0xda,0x21,0x10,0xff,0xf3,0xd2
DB	0xcd,0x0c,0x13,0xec,0x5f,0x97,0x44,0x17
DB	0xc4,0xa7,0x7e,0x3d,0x64,0x5d,0x19,0x73
DB	0x60,0x81,0x4f,0xdc,0x22,0x2a,0x90,0x88
DB	0x46,0xee,0xb8,0x14,0xde,0x5e,0x0b,0xdb
DB	0xe0,0x32,0x3a,0x0a,0x49,0x06,0x24,0x5c
DB	0xc2,0xd3,0xac,0x62,0x91,0x95,0xe4,0x79
DB	0xe7,0xc8,0x37,0x6d,0x8d,0xd5,0x4e,0xa9
DB	0x6c,0x56,0xf4,0xea,0x65,0x7a,0xae,0x08
DB	0xba,0x78,0x25,0x2e,0x1c,0xa6,0xb4,0xc6
DB	0xe8,0xdd,0x74,0x1f,0x4b,0xbd,0x8b,0x8a
DB	0x70,0x3e,0xb5,0x66,0x48,0x03,0xf6,0x0e
DB	0x61,0x35,0x57,0xb9,0x86,0xc1,0x1d,0x9e
DB	0xe1,0xf8,0x98,0x11,0x69,0xd9,0x8e,0x94
DB	0x9b,0x1e,0x87,0xe9,0xce,0x55,0x28,0xdf
DB	0x8c,0xa1,0x89,0x0d,0xbf,0xe6,0x42,0x68
DB	0x41,0x99,0x2d,0x0f,0xb0,0x54,0xbb,0x16
DB	0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5
DB	0x30,0x01,0x67,0x2b,0xfe,0xd7,0xab,0x76
DB	0xca,0x82,0xc9,0x7d,0xfa,0x59,0x47,0xf0
DB	0xad,0xd4,0xa2,0xaf,0x9c,0xa4,0x72,0xc0
DB	0xb7,0xfd,0x93,0x26,0x36,0x3f,0xf7,0xcc
DB	0x34,0xa5,0xe5,0xf1,0x71,0xd8,0x31,0x15
DB	0x04,0xc7,0x23,0xc3,0x18,0x96,0x05,0x9a
DB	0x07,0x12,0x80,0xe2,0xeb,0x27,0xb2,0x75
DB	0x09,0x83,0x2c,0x1a,0x1b,0x6e,0x5a,0xa0
DB	0x52,0x3b,0xd6,0xb3,0x29,0xe3,0x2f,0x84
DB	0x53,0xd1,0x00,0xed,0x20,0xfc,0xb1,0x5b
DB	0x6a,0xcb,0xbe,0x39,0x4a,0x4c,0x58,0xcf
DB	0xd0,0xef,0xaa,0xfb,0x43,0x4d,0x33,0x85
DB	0x45,0xf9,0x02,0x7f,0x50,0x3c,0x9f,0xa8
DB	0x51,0xa3,0x40,0x8f,0x92,0x9d,0x38,0xf5
DB	0xbc,0xb6,0xda,0x21,0x10,0xff,0xf3,0xd2
DB	0xcd,0x0c,0x13,0xec,0x5f,0x97,0x44,0x17
DB	0xc4,0xa7,0x7e,0x3d,0x64,0x5d,0x19,0x73
DB	0x60,0x81,0x4f,0xdc,0x22,0x2a,0x90,0x88
DB	0x46,0xee,0xb8,0x14,0xde,0x5e,0x0b,0xdb
DB	0xe0,0x32,0x3a,0x0a,0x49,0x06,0x24,0x5c
DB	0xc2,0xd3,0xac,0x62,0x91,0x95,0xe4,0x79
DB	0xe7,0xc8,0x37,0x6d,0x8d,0xd5,0x4e,0xa9
DB	0x6c,0x56,0xf4,0xea,0x65,0x7a,0xae,0x08
DB	0xba,0x78,0x25,0x2e,0x1c,0xa6,0xb4,0xc6
DB	0xe8,0xdd,0x74,0x1f,0x4b,0xbd,0x8b,0x8a
DB	0x70,0x3e,0xb5,0x66,0x48,0x03,0xf6,0x0e
DB	0x61,0x35,0x57,0xb9,0x86,0xc1,0x1d,0x9e
DB	0xe1,0xf8,0x98,0x11,0x69,0xd9,0x8e,0x94
DB	0x9b,0x1e,0x87,0xe9,0xce,0x55,0x28,0xdf
DB	0x8c,0xa1,0x89,0x0d,0xbf,0xe6,0x42,0x68
DB	0x41,0x99,0x2d,0x0f,0xb0,0x54,0xbb,0x16
DB	0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5
DB	0x30,0x01,0x67,0x2b,0xfe,0xd7,0xab,0x76
DB	0xca,0x82,0xc9,0x7d,0xfa,0x59,0x47,0xf0
DB	0xad,0xd4,0xa2,0xaf,0x9c,0xa4,0x72,0xc0
DB	0xb7,0xfd,0x93,0x26,0x36,0x3f,0xf7,0xcc
DB	0x34,0xa5,0xe5,0xf1,0x71,0xd8,0x31,0x15
DB	0x04,0xc7,0x23,0xc3,0x18,0x96,0x05,0x9a
DB	0x07,0x12,0x80,0xe2,0xeb,0x27,0xb2,0x75
DB	0x09,0x83,0x2c,0x1a,0x1b,0x6e,0x5a,0xa0
DB	0x52,0x3b,0xd6,0xb3,0x29,0xe3,0x2f,0x84
DB	0x53,0xd1,0x00,0xed,0x20,0xfc,0xb1,0x5b
DB	0x6a,0xcb,0xbe,0x39,0x4a,0x4c,0x58,0xcf
DB	0xd0,0xef,0xaa,0xfb,0x43,0x4d,0x33,0x85
DB	0x45,0xf9,0x02,0x7f,0x50,0x3c,0x9f,0xa8
DB	0x51,0xa3,0x40,0x8f,0x92,0x9d,0x38,0xf5
DB	0xbc,0xb6,0xda,0x21,0x10,0xff,0xf3,0xd2
DB	0xcd,0x0c,0x13,0xec,0x5f,0x97,0x44,0x17
DB	0xc4,0xa7,0x7e,0x3d,0x64,0x5d,0x19,0x73
DB	0x60,0x81,0x4f,0xdc,0x22,0x2a,0x90,0x88
DB	0x46,0xee,0xb8,0x14,0xde,0x5e,0x0b,0xdb
DB	0xe0,0x32,0x3a,0x0a,0x49,0x06,0x24,0x5c
DB	0xc2,0xd3,0xac,0x62,0x91,0x95,0xe4,0x79
DB	0xe7,0xc8,0x37,0x6d,0x8d,0xd5,0x4e,0xa9
DB	0x6c,0x56,0xf4,0xea,0x65,0x7a,0xae,0x08
DB	0xba,0x78,0x25,0x2e,0x1c,0xa6,0xb4,0xc6
DB	0xe8,0xdd,0x74,0x1f,0x4b,0xbd,0x8b,0x8a
DB	0x70,0x3e,0xb5,0x66,0x48,0x03,0xf6,0x0e
DB	0x61,0x35,0x57,0xb9,0x86,0xc1,0x1d,0x9e
DB	0xe1,0xf8,0x98,0x11,0x69,0xd9,0x8e,0x94
DB	0x9b,0x1e,0x87,0xe9,0xce,0x55,0x28,0xdf
DB	0x8c,0xa1,0x89,0x0d,0xbf,0xe6,0x42,0x68
DB	0x41,0x99,0x2d,0x0f,0xb0,0x54,0xbb,0x16
	DD	0x00000001,0x00000002,0x00000004,0x00000008
	DD	0x00000010,0x00000020,0x00000040,0x00000080
	DD	0x0000001b,0x00000036,0x80808080,0x80808080
	DD	0xfefefefe,0xfefefefe,0x1b1b1b1b,0x1b1b1b1b
ALIGN	64
$L$AES_Td:
	DD	0x50a7f451,0x50a7f451
	DD	0x5365417e,0x5365417e
	DD	0xc3a4171a,0xc3a4171a
	DD	0x965e273a,0x965e273a
	DD	0xcb6bab3b,0xcb6bab3b
	DD	0xf1459d1f,0xf1459d1f
	DD	0xab58faac,0xab58faac
	DD	0x9303e34b,0x9303e34b
	DD	0x55fa3020,0x55fa3020
	DD	0xf66d76ad,0xf66d76ad
	DD	0x9176cc88,0x9176cc88
	DD	0x254c02f5,0x254c02f5
	DD	0xfcd7e54f,0xfcd7e54f
	DD	0xd7cb2ac5,0xd7cb2ac5
	DD	0x80443526,0x80443526
	DD	0x8fa362b5,0x8fa362b5
	DD	0x495ab1de,0x495ab1de
	DD	0x671bba25,0x671bba25
	DD	0x980eea45,0x980eea45
	DD	0xe1c0fe5d,0xe1c0fe5d
	DD	0x02752fc3,0x02752fc3
	DD	0x12f04c81,0x12f04c81
	DD	0xa397468d,0xa397468d
	DD	0xc6f9d36b,0xc6f9d36b
	DD	0xe75f8f03,0xe75f8f03
	DD	0x959c9215,0x959c9215
	DD	0xeb7a6dbf,0xeb7a6dbf
	DD	0xda595295,0xda595295
	DD	0x2d83bed4,0x2d83bed4
	DD	0xd3217458,0xd3217458
	DD	0x2969e049,0x2969e049
	DD	0x44c8c98e,0x44c8c98e
	DD	0x6a89c275,0x6a89c275
	DD	0x78798ef4,0x78798ef4
	DD	0x6b3e5899,0x6b3e5899
	DD	0xdd71b927,0xdd71b927
	DD	0xb64fe1be,0xb64fe1be
	DD	0x17ad88f0,0x17ad88f0
	DD	0x66ac20c9,0x66ac20c9
	DD	0xb43ace7d,0xb43ace7d
	DD	0x184adf63,0x184adf63
	DD	0x82311ae5,0x82311ae5
	DD	0x60335197,0x60335197
	DD	0x457f5362,0x457f5362
	DD	0xe07764b1,0xe07764b1
	DD	0x84ae6bbb,0x84ae6bbb
	DD	0x1ca081fe,0x1ca081fe
	DD	0x942b08f9,0x942b08f9
	DD	0x58684870,0x58684870
	DD	0x19fd458f,0x19fd458f
	DD	0x876cde94,0x876cde94
	DD	0xb7f87b52,0xb7f87b52
	DD	0x23d373ab,0x23d373ab
	DD	0xe2024b72,0xe2024b72
	DD	0x578f1fe3,0x578f1fe3
	DD	0x2aab5566,0x2aab5566
	DD	0x0728ebb2,0x0728ebb2
	DD	0x03c2b52f,0x03c2b52f
	DD	0x9a7bc586,0x9a7bc586
	DD	0xa50837d3,0xa50837d3
	DD	0xf2872830,0xf2872830
	DD	0xb2a5bf23,0xb2a5bf23
	DD	0xba6a0302,0xba6a0302
	DD	0x5c8216ed,0x5c8216ed
	DD	0x2b1ccf8a,0x2b1ccf8a
	DD	0x92b479a7,0x92b479a7
	DD	0xf0f207f3,0xf0f207f3
	DD	0xa1e2694e,0xa1e2694e
	DD	0xcdf4da65,0xcdf4da65
	DD	0xd5be0506,0xd5be0506
	DD	0x1f6234d1,0x1f6234d1
	DD	0x8afea6c4,0x8afea6c4
	DD	0x9d532e34,0x9d532e34
	DD	0xa055f3a2,0xa055f3a2
	DD	0x32e18a05,0x32e18a05
	DD	0x75ebf6a4,0x75ebf6a4
	DD	0x39ec830b,0x39ec830b
	DD	0xaaef6040,0xaaef6040
	DD	0x069f715e,0x069f715e
	DD	0x51106ebd,0x51106ebd
	DD	0xf98a213e,0xf98a213e
	DD	0x3d06dd96,0x3d06dd96
	DD	0xae053edd,0xae053edd
	DD	0x46bde64d,0x46bde64d
	DD	0xb58d5491,0xb58d5491
	DD	0x055dc471,0x055dc471
	DD	0x6fd40604,0x6fd40604
	DD	0xff155060,0xff155060
	DD	0x24fb9819,0x24fb9819
	DD	0x97e9bdd6,0x97e9bdd6
	DD	0xcc434089,0xcc434089
	DD	0x779ed967,0x779ed967
	DD	0xbd42e8b0,0xbd42e8b0
	DD	0x888b8907,0x888b8907
	DD	0x385b19e7,0x385b19e7
	DD	0xdbeec879,0xdbeec879
	DD	0x470a7ca1,0x470a7ca1
	DD	0xe90f427c,0xe90f427c
	DD	0xc91e84f8,0xc91e84f8
	DD	0x00000000,0x00000000
	DD	0x83868009,0x83868009
	DD	0x48ed2b32,0x48ed2b32
	DD	0xac70111e,0xac70111e
	DD	0x4e725a6c,0x4e725a6c
	DD	0xfbff0efd,0xfbff0efd
	DD	0x5638850f,0x5638850f
	DD	0x1ed5ae3d,0x1ed5ae3d
	DD	0x27392d36,0x27392d36
	DD	0x64d90f0a,0x64d90f0a
	DD	0x21a65c68,0x21a65c68
	DD	0xd1545b9b,0xd1545b9b
	DD	0x3a2e3624,0x3a2e3624
	DD	0xb1670a0c,0xb1670a0c
	DD	0x0fe75793,0x0fe75793
	DD	0xd296eeb4,0xd296eeb4
	DD	0x9e919b1b,0x9e919b1b
	DD	0x4fc5c080,0x4fc5c080
	DD	0xa220dc61,0xa220dc61
	DD	0x694b775a,0x694b775a
	DD	0x161a121c,0x161a121c
	DD	0x0aba93e2,0x0aba93e2
	DD	0xe52aa0c0,0xe52aa0c0
	DD	0x43e0223c,0x43e0223c
	DD	0x1d171b12,0x1d171b12
	DD	0x0b0d090e,0x0b0d090e
	DD	0xadc78bf2,0xadc78bf2
	DD	0xb9a8b62d,0xb9a8b62d
	DD	0xc8a91e14,0xc8a91e14
	DD	0x8519f157,0x8519f157
	DD	0x4c0775af,0x4c0775af
	DD	0xbbdd99ee,0xbbdd99ee
	DD	0xfd607fa3,0xfd607fa3
	DD	0x9f2601f7,0x9f2601f7
	DD	0xbcf5725c,0xbcf5725c
	DD	0xc53b6644,0xc53b6644
	DD	0x347efb5b,0x347efb5b
	DD	0x7629438b,0x7629438b
	DD	0xdcc623cb,0xdcc623cb
	DD	0x68fcedb6,0x68fcedb6
	DD	0x63f1e4b8,0x63f1e4b8
	DD	0xcadc31d7,0xcadc31d7
	DD	0x10856342,0x10856342
	DD	0x40229713,0x40229713
	DD	0x2011c684,0x2011c684
	DD	0x7d244a85,0x7d244a85
	DD	0xf83dbbd2,0xf83dbbd2
	DD	0x1132f9ae,0x1132f9ae
	DD	0x6da129c7,0x6da129c7
	DD	0x4b2f9e1d,0x4b2f9e1d
	DD	0xf330b2dc,0xf330b2dc
	DD	0xec52860d,0xec52860d
	DD	0xd0e3c177,0xd0e3c177
	DD	0x6c16b32b,0x6c16b32b
	DD	0x99b970a9,0x99b970a9
	DD	0xfa489411,0xfa489411
	DD	0x2264e947,0x2264e947
	DD	0xc48cfca8,0xc48cfca8
	DD	0x1a3ff0a0,0x1a3ff0a0
	DD	0xd82c7d56,0xd82c7d56
	DD	0xef903322,0xef903322
	DD	0xc74e4987,0xc74e4987
	DD	0xc1d138d9,0xc1d138d9
	DD	0xfea2ca8c,0xfea2ca8c
	DD	0x360bd498,0x360bd498
	DD	0xcf81f5a6,0xcf81f5a6
	DD	0x28de7aa5,0x28de7aa5
	DD	0x268eb7da,0x268eb7da
	DD	0xa4bfad3f,0xa4bfad3f
	DD	0xe49d3a2c,0xe49d3a2c
	DD	0x0d927850,0x0d927850
	DD	0x9bcc5f6a,0x9bcc5f6a
	DD	0x62467e54,0x62467e54
	DD	0xc2138df6,0xc2138df6
	DD	0xe8b8d890,0xe8b8d890
	DD	0x5ef7392e,0x5ef7392e
	DD	0xf5afc382,0xf5afc382
	DD	0xbe805d9f,0xbe805d9f
	DD	0x7c93d069,0x7c93d069
	DD	0xa92dd56f,0xa92dd56f
	DD	0xb31225cf,0xb31225cf
	DD	0x3b99acc8,0x3b99acc8
	DD	0xa77d1810,0xa77d1810
	DD	0x6e639ce8,0x6e639ce8
	DD	0x7bbb3bdb,0x7bbb3bdb
	DD	0x097826cd,0x097826cd
	DD	0xf418596e,0xf418596e
	DD	0x01b79aec,0x01b79aec
	DD	0xa89a4f83,0xa89a4f83
	DD	0x656e95e6,0x656e95e6
	DD	0x7ee6ffaa,0x7ee6ffaa
	DD	0x08cfbc21,0x08cfbc21
	DD	0xe6e815ef,0xe6e815ef
	DD	0xd99be7ba,0xd99be7ba
	DD	0xce366f4a,0xce366f4a
	DD	0xd4099fea,0xd4099fea
	DD	0xd67cb029,0xd67cb029
	DD	0xafb2a431,0xafb2a431
	DD	0x31233f2a,0x31233f2a
	DD	0x3094a5c6,0x3094a5c6
	DD	0xc066a235,0xc066a235
	DD	0x37bc4e74,0x37bc4e74
	DD	0xa6ca82fc,0xa6ca82fc
	DD	0xb0d090e0,0xb0d090e0
	DD	0x15d8a733,0x15d8a733
	DD	0x4a9804f1,0x4a9804f1
	DD	0xf7daec41,0xf7daec41
	DD	0x0e50cd7f,0x0e50cd7f
	DD	0x2ff69117,0x2ff69117
	DD	0x8dd64d76,0x8dd64d76
	DD	0x4db0ef43,0x4db0ef43
	DD	0x544daacc,0x544daacc
	DD	0xdf0496e4,0xdf0496e4
	DD	0xe3b5d19e,0xe3b5d19e
	DD	0x1b886a4c,0x1b886a4c
	DD	0xb81f2cc1,0xb81f2cc1
	DD	0x7f516546,0x7f516546
	DD	0x04ea5e9d,0x04ea5e9d
	DD	0x5d358c01,0x5d358c01
	DD	0x737487fa,0x737487fa
	DD	0x2e410bfb,0x2e410bfb
	DD	0x5a1d67b3,0x5a1d67b3
	DD	0x52d2db92,0x52d2db92
	DD	0x335610e9,0x335610e9
	DD	0x1347d66d,0x1347d66d
	DD	0x8c61d79a,0x8c61d79a
	DD	0x7a0ca137,0x7a0ca137
	DD	0x8e14f859,0x8e14f859
	DD	0x893c13eb,0x893c13eb
	DD	0xee27a9ce,0xee27a9ce
	DD	0x35c961b7,0x35c961b7
	DD	0xede51ce1,0xede51ce1
	DD	0x3cb1477a,0x3cb1477a
	DD	0x59dfd29c,0x59dfd29c
	DD	0x3f73f255,0x3f73f255
	DD	0x79ce1418,0x79ce1418
	DD	0xbf37c773,0xbf37c773
	DD	0xeacdf753,0xeacdf753
	DD	0x5baafd5f,0x5baafd5f
	DD	0x146f3ddf,0x146f3ddf
	DD	0x86db4478,0x86db4478
	DD	0x81f3afca,0x81f3afca
	DD	0x3ec468b9,0x3ec468b9
	DD	0x2c342438,0x2c342438
	DD	0x5f40a3c2,0x5f40a3c2
	DD	0x72c31d16,0x72c31d16
	DD	0x0c25e2bc,0x0c25e2bc
	DD	0x8b493c28,0x8b493c28
	DD	0x41950dff,0x41950dff
	DD	0x7101a839,0x7101a839
	DD	0xdeb30c08,0xdeb30c08
	DD	0x9ce4b4d8,0x9ce4b4d8
	DD	0x90c15664,0x90c15664
	DD	0x6184cb7b,0x6184cb7b
	DD	0x70b632d5,0x70b632d5
	DD	0x745c6c48,0x745c6c48
	DD	0x4257b8d0,0x4257b8d0
DB	0x52,0x09,0x6a,0xd5,0x30,0x36,0xa5,0x38
DB	0xbf,0x40,0xa3,0x9e,0x81,0xf3,0xd7,0xfb
DB	0x7c,0xe3,0x39,0x82,0x9b,0x2f,0xff,0x87
DB	0x34,0x8e,0x43,0x44,0xc4,0xde,0xe9,0xcb
DB	0x54,0x7b,0x94,0x32,0xa6,0xc2,0x23,0x3d
DB	0xee,0x4c,0x95,0x0b,0x42,0xfa,0xc3,0x4e
DB	0x08,0x2e,0xa1,0x66,0x28,0xd9,0x24,0xb2
DB	0x76,0x5b,0xa2,0x49,0x6d,0x8b,0xd1,0x25
DB	0x72,0xf8,0xf6,0x64,0x86,0x68,0x98,0x16
DB	0xd4,0xa4,0x5c,0xcc,0x5d,0x65,0xb6,0x92
DB	0x6c,0x70,0x48,0x50,0xfd,0xed,0xb9,0xda
DB	0x5e,0x15,0x46,0x57,0xa7,0x8d,0x9d,0x84
DB	0x90,0xd8,0xab,0x00,0x8c,0xbc,0xd3,0x0a
DB	0xf7,0xe4,0x58,0x05,0xb8,0xb3,0x45,0x06
DB	0xd0,0x2c,0x1e,0x8f,0xca,0x3f,0x0f,0x02
DB	0xc1,0xaf,0xbd,0x03,0x01,0x13,0x8a,0x6b
DB	0x3a,0x91,0x11,0x41,0x4f,0x67,0xdc,0xea
DB	0x97,0xf2,0xcf,0xce,0xf0,0xb4,0xe6,0x73
DB	0x96,0xac,0x74,0x22,0xe7,0xad,0x35,0x85
DB	0xe2,0xf9,0x37,0xe8,0x1c,0x75,0xdf,0x6e
DB	0x47,0xf1,0x1a,0x71,0x1d,0x29,0xc5,0x89
DB	0x6f,0xb7,0x62,0x0e,0xaa,0x18,0xbe,0x1b
DB	0xfc,0x56,0x3e,0x4b,0xc6,0xd2,0x79,0x20
DB	0x9a,0xdb,0xc0,0xfe,0x78,0xcd,0x5a,0xf4
DB	0x1f,0xdd,0xa8,0x33,0x88,0x07,0xc7,0x31
DB	0xb1,0x12,0x10,0x59,0x27,0x80,0xec,0x5f
DB	0x60,0x51,0x7f,0xa9,0x19,0xb5,0x4a,0x0d
DB	0x2d,0xe5,0x7a,0x9f,0x93,0xc9,0x9c,0xef
DB	0xa0,0xe0,0x3b,0x4d,0xae,0x2a,0xf5,0xb0
DB	0xc8,0xeb,0xbb,0x3c,0x83,0x53,0x99,0x61
DB	0x17,0x2b,0x04,0x7e,0xba,0x77,0xd6,0x26
DB	0xe1,0x69,0x14,0x63,0x55,0x21,0x0c,0x7d
	DD	0x80808080,0x80808080,0xfefefefe,0xfefefefe
	DD	0x1b1b1b1b,0x1b1b1b1b,0,0
DB	0x52,0x09,0x6a,0xd5,0x30,0x36,0xa5,0x38
DB	0xbf,0x40,0xa3,0x9e,0x81,0xf3,0xd7,0xfb
DB	0x7c,0xe3,0x39,0x82,0x9b,0x2f,0xff,0x87
DB	0x34,0x8e,0x43,0x44,0xc4,0xde,0xe9,0xcb
DB	0x54,0x7b,0x94,0x32,0xa6,0xc2,0x23,0x3d
DB	0xee,0x4c,0x95,0x0b,0x42,0xfa,0xc3,0x4e
DB	0x08,0x2e,0xa1,0x66,0x28,0xd9,0x24,0xb2
DB	0x76,0x5b,0xa2,0x49,0x6d,0x8b,0xd1,0x25
DB	0x72,0xf8,0xf6,0x64,0x86,0x68,0x98,0x16
DB	0xd4,0xa4,0x5c,0xcc,0x5d,0x65,0xb6,0x92
DB	0x6c,0x70,0x48,0x50,0xfd,0xed,0xb9,0xda
DB	0x5e,0x15,0x46,0x57,0xa7,0x8d,0x9d,0x84
DB	0x90,0xd8,0xab,0x00,0x8c,0xbc,0xd3,0x0a
DB	0xf7,0xe4,0x58,0x05,0xb8,0xb3,0x45,0x06
DB	0xd0,0x2c,0x1e,0x8f,0xca,0x3f,0x0f,0x02
DB	0xc1,0xaf,0xbd,0x03,0x01,0x13,0x8a,0x6b
DB	0x3a,0x91,0x11,0x41,0x4f,0x67,0xdc,0xea
DB	0x97,0xf2,0xcf,0xce,0xf0,0xb4,0xe6,0x73
DB	0x96,0xac,0x74,0x22,0xe7,0xad,0x35,0x85
DB	0xe2,0xf9,0x37,0xe8,0x1c,0x75,0xdf,0x6e
DB	0x47,0xf1,0x1a,0x71,0x1d,0x29,0xc5,0x89
DB	0x6f,0xb7,0x62,0x0e,0xaa,0x18,0xbe,0x1b
DB	0xfc,0x56,0x3e,0x4b,0xc6,0xd2,0x79,0x20
DB	0x9a,0xdb,0xc0,0xfe,0x78,0xcd,0x5a,0xf4
DB	0x1f,0xdd,0xa8,0x33,0x88,0x07,0xc7,0x31
DB	0xb1,0x12,0x10,0x59,0x27,0x80,0xec,0x5f
DB	0x60,0x51,0x7f,0xa9,0x19,0xb5,0x4a,0x0d
DB	0x2d,0xe5,0x7a,0x9f,0x93,0xc9,0x9c,0xef
DB	0xa0,0xe0,0x3b,0x4d,0xae,0x2a,0xf5,0xb0
DB	0xc8,0xeb,0xbb,0x3c,0x83,0x53,0x99,0x61
DB	0x17,0x2b,0x04,0x7e,0xba,0x77,0xd6,0x26
DB	0xe1,0x69,0x14,0x63,0x55,0x21,0x0c,0x7d
	DD	0x80808080,0x80808080,0xfefefefe,0xfefefefe
	DD	0x1b1b1b1b,0x1b1b1b1b,0,0
DB	0x52,0x09,0x6a,0xd5,0x30,0x36,0xa5,0x38
DB	0xbf,0x40,0xa3,0x9e,0x81,0xf3,0xd7,0xfb
DB	0x7c,0xe3,0x39,0x82,0x9b,0x2f,0xff,0x87
DB	0x34,0x8e,0x43,0x44,0xc4,0xde,0xe9,0xcb
DB	0x54,0x7b,0x94,0x32,0xa6,0xc2,0x23,0x3d
DB	0xee,0x4c,0x95,0x0b,0x42,0xfa,0xc3,0x4e
DB	0x08,0x2e,0xa1,0x66,0x28,0xd9,0x24,0xb2
DB	0x76,0x5b,0xa2,0x49,0x6d,0x8b,0xd1,0x25
DB	0x72,0xf8,0xf6,0x64,0x86,0x68,0x98,0x16
DB	0xd4,0xa4,0x5c,0xcc,0x5d,0x65,0xb6,0x92
DB	0x6c,0x70,0x48,0x50,0xfd,0xed,0xb9,0xda
DB	0x5e,0x15,0x46,0x57,0xa7,0x8d,0x9d,0x84
DB	0x90,0xd8,0xab,0x00,0x8c,0xbc,0xd3,0x0a
DB	0xf7,0xe4,0x58,0x05,0xb8,0xb3,0x45,0x06
DB	0xd0,0x2c,0x1e,0x8f,0xca,0x3f,0x0f,0x02
DB	0xc1,0xaf,0xbd,0x03,0x01,0x13,0x8a,0x6b
DB	0x3a,0x91,0x11,0x41,0x4f,0x67,0xdc,0xea
DB	0x97,0xf2,0xcf,0xce,0xf0,0xb4,0xe6,0x73
DB	0x96,0xac,0x74,0x22,0xe7,0xad,0x35,0x85
DB	0xe2,0xf9,0x37,0xe8,0x1c,0x75,0xdf,0x6e
DB	0x47,0xf1,0x1a,0x71,0x1d,0x29,0xc5,0x89
DB	0x6f,0xb7,0x62,0x0e,0xaa,0x18,0xbe,0x1b
DB	0xfc,0x56,0x3e,0x4b,0xc6,0xd2,0x79,0x20
DB	0x9a,0xdb,0xc0,0xfe,0x78,0xcd,0x5a,0xf4
DB	0x1f,0xdd,0xa8,0x33,0x88,0x07,0xc7,0x31
DB	0xb1,0x12,0x10,0x59,0x27,0x80,0xec,0x5f
DB	0x60,0x51,0x7f,0xa9,0x19,0xb5,0x4a,0x0d
DB	0x2d,0xe5,0x7a,0x9f,0x93,0xc9,0x9c,0xef
DB	0xa0,0xe0,0x3b,0x4d,0xae,0x2a,0xf5,0xb0
DB	0xc8,0xeb,0xbb,0x3c,0x83,0x53,0x99,0x61
DB	0x17,0x2b,0x04,0x7e,0xba,0x77,0xd6,0x26
DB	0xe1,0x69,0x14,0x63,0x55,0x21,0x0c,0x7d
	DD	0x80808080,0x80808080,0xfefefefe,0xfefefefe
	DD	0x1b1b1b1b,0x1b1b1b1b,0,0
DB	0x52,0x09,0x6a,0xd5,0x30,0x36,0xa5,0x38
DB	0xbf,0x40,0xa3,0x9e,0x81,0xf3,0xd7,0xfb
DB	0x7c,0xe3,0x39,0x82,0x9b,0x2f,0xff,0x87
DB	0x34,0x8e,0x43,0x44,0xc4,0xde,0xe9,0xcb
DB	0x54,0x7b,0x94,0x32,0xa6,0xc2,0x23,0x3d
DB	0xee,0x4c,0x95,0x0b,0x42,0xfa,0xc3,0x4e
DB	0x08,0x2e,0xa1,0x66,0x28,0xd9,0x24,0xb2
DB	0x76,0x5b,0xa2,0x49,0x6d,0x8b,0xd1,0x25
DB	0x72,0xf8,0xf6,0x64,0x86,0x68,0x98,0x16
DB	0xd4,0xa4,0x5c,0xcc,0x5d,0x65,0xb6,0x92
DB	0x6c,0x70,0x48,0x50,0xfd,0xed,0xb9,0xda
DB	0x5e,0x15,0x46,0x57,0xa7,0x8d,0x9d,0x84
DB	0x90,0xd8,0xab,0x00,0x8c,0xbc,0xd3,0x0a
DB	0xf7,0xe4,0x58,0x05,0xb8,0xb3,0x45,0x06
DB	0xd0,0x2c,0x1e,0x8f,0xca,0x3f,0x0f,0x02
DB	0xc1,0xaf,0xbd,0x03,0x01,0x13,0x8a,0x6b
DB	0x3a,0x91,0x11,0x41,0x4f,0x67,0xdc,0xea
DB	0x97,0xf2,0xcf,0xce,0xf0,0xb4,0xe6,0x73
DB	0x96,0xac,0x74,0x22,0xe7,0xad,0x35,0x85
DB	0xe2,0xf9,0x37,0xe8,0x1c,0x75,0xdf,0x6e
DB	0x47,0xf1,0x1a,0x71,0x1d,0x29,0xc5,0x89
DB	0x6f,0xb7,0x62,0x0e,0xaa,0x18,0xbe,0x1b
DB	0xfc,0x56,0x3e,0x4b,0xc6,0xd2,0x79,0x20
DB	0x9a,0xdb,0xc0,0xfe,0x78,0xcd,0x5a,0xf4
DB	0x1f,0xdd,0xa8,0x33,0x88,0x07,0xc7,0x31
DB	0xb1,0x12,0x10,0x59,0x27,0x80,0xec,0x5f
DB	0x60,0x51,0x7f,0xa9,0x19,0xb5,0x4a,0x0d
DB	0x2d,0xe5,0x7a,0x9f,0x93,0xc9,0x9c,0xef
DB	0xa0,0xe0,0x3b,0x4d,0xae,0x2a,0xf5,0xb0
DB	0xc8,0xeb,0xbb,0x3c,0x83,0x53,0x99,0x61
DB	0x17,0x2b,0x04,0x7e,0xba,0x77,0xd6,0x26
DB	0xe1,0x69,0x14,0x63,0x55,0x21,0x0c,0x7d
	DD	0x80808080,0x80808080,0xfefefefe,0xfefefefe
	DD	0x1b1b1b1b,0x1b1b1b1b,0,0
DB	65,69,83,32,102,111,114,32,120,56,54,95,54,52,44,32
DB	67,82,89,80,84,79,71,65,77,83,32,98,121,32,60,97
DB	112,112,114,111,64,111,112,101,110,115,115,108,46,111,114,103
DB	62,0
ALIGN	64
EXTERN	__imp_RtlVirtualUnwind

ALIGN	16
block_se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$in_block_prologue

	mov	rax,QWORD[152+r8]

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$in_block_prologue

	mov	rax,QWORD[24+rax]

	mov	rbx,QWORD[((-8))+rax]
	mov	rbp,QWORD[((-16))+rax]
	mov	r12,QWORD[((-24))+rax]
	mov	r13,QWORD[((-32))+rax]
	mov	r14,QWORD[((-40))+rax]
	mov	r15,QWORD[((-48))+rax]
	mov	QWORD[144+r8],rbx
	mov	QWORD[160+r8],rbp
	mov	QWORD[216+r8],r12
	mov	QWORD[224+r8],r13
	mov	QWORD[232+r8],r14
	mov	QWORD[240+r8],r15

$L$in_block_prologue:
	mov	rdi,QWORD[8+rax]
	mov	rsi,QWORD[16+rax]
	mov	QWORD[152+r8],rax
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi

	jmp	NEAR $L$common_seh_exit



ALIGN	16
key_se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$in_key_prologue

	mov	rax,QWORD[152+r8]

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$in_key_prologue

	lea	rax,[56+rax]

	mov	rbx,QWORD[((-8))+rax]
	mov	rbp,QWORD[((-16))+rax]
	mov	r12,QWORD[((-24))+rax]
	mov	r13,QWORD[((-32))+rax]
	mov	r14,QWORD[((-40))+rax]
	mov	r15,QWORD[((-48))+rax]
	mov	QWORD[144+r8],rbx
	mov	QWORD[160+r8],rbp
	mov	QWORD[216+r8],r12
	mov	QWORD[224+r8],r13
	mov	QWORD[232+r8],r14
	mov	QWORD[240+r8],r15

$L$in_key_prologue:
	mov	rdi,QWORD[8+rax]
	mov	rsi,QWORD[16+rax]
	mov	QWORD[152+r8],rax
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi

	jmp	NEAR $L$common_seh_exit



ALIGN	16
cbc_se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	lea	r10,[$L$cbc_prologue]
	cmp	rbx,r10
	jb	NEAR $L$in_cbc_prologue

	lea	r10,[$L$cbc_fast_body]
	cmp	rbx,r10
	jb	NEAR $L$in_cbc_frame_setup

	lea	r10,[$L$cbc_slow_prologue]
	cmp	rbx,r10
	jb	NEAR $L$in_cbc_body

	lea	r10,[$L$cbc_slow_body]
	cmp	rbx,r10
	jb	NEAR $L$in_cbc_frame_setup

$L$in_cbc_body:
	mov	rax,QWORD[152+r8]

	lea	r10,[$L$cbc_epilogue]
	cmp	rbx,r10
	jae	NEAR $L$in_cbc_prologue

	lea	rax,[8+rax]

	lea	r10,[$L$cbc_popfq]
	cmp	rbx,r10
	jae	NEAR $L$in_cbc_prologue

	mov	rax,QWORD[8+rax]
	lea	rax,[56+rax]

$L$in_cbc_frame_setup:
	mov	rbx,QWORD[((-16))+rax]
	mov	rbp,QWORD[((-24))+rax]
	mov	r12,QWORD[((-32))+rax]
	mov	r13,QWORD[((-40))+rax]
	mov	r14,QWORD[((-48))+rax]
	mov	r15,QWORD[((-56))+rax]
	mov	QWORD[144+r8],rbx
	mov	QWORD[160+r8],rbp
	mov	QWORD[216+r8],r12
	mov	QWORD[224+r8],r13
	mov	QWORD[232+r8],r14
	mov	QWORD[240+r8],r15

$L$in_cbc_prologue:
	mov	rdi,QWORD[8+rax]
	mov	rsi,QWORD[16+rax]
	mov	QWORD[152+r8],rax
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi

$L$common_seh_exit:

	mov	rdi,QWORD[40+r9]
	mov	rsi,r8
	mov	ecx,154
	DD	0xa548f3fc

	mov	rsi,r9
	xor	rcx,rcx
	mov	rdx,QWORD[8+rsi]
	mov	r8,QWORD[rsi]
	mov	r9,QWORD[16+rsi]
	mov	r10,QWORD[40+rsi]
	lea	r11,[56+rsi]
	lea	r12,[24+rsi]
	mov	QWORD[32+rsp],r10
	mov	QWORD[40+rsp],r11
	mov	QWORD[48+rsp],r12
	mov	QWORD[56+rsp],rcx
	call	QWORD[__imp_RtlVirtualUnwind]

	mov	eax,1
	add	rsp,64
	popfq
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	pop	rbx
	pop	rdi
	pop	rsi
	DB	0F3h,0C3h		;repret


section	.pdata rdata align=4
ALIGN	4
	DD	$L$SEH_begin_AES_encrypt wrt ..imagebase
	DD	$L$SEH_end_AES_encrypt wrt ..imagebase
	DD	$L$SEH_info_AES_encrypt wrt ..imagebase

	DD	$L$SEH_begin_AES_decrypt wrt ..imagebase
	DD	$L$SEH_end_AES_decrypt wrt ..imagebase
	DD	$L$SEH_info_AES_decrypt wrt ..imagebase

	DD	$L$SEH_begin_AES_set_encrypt_key wrt ..imagebase
	DD	$L$SEH_end_AES_set_encrypt_key wrt ..imagebase
	DD	$L$SEH_info_AES_set_encrypt_key wrt ..imagebase

	DD	$L$SEH_begin_AES_set_decrypt_key wrt ..imagebase
	DD	$L$SEH_end_AES_set_decrypt_key wrt ..imagebase
	DD	$L$SEH_info_AES_set_decrypt_key wrt ..imagebase

	DD	$L$SEH_begin_AES_cbc_encrypt wrt ..imagebase
	DD	$L$SEH_end_AES_cbc_encrypt wrt ..imagebase
	DD	$L$SEH_info_AES_cbc_encrypt wrt ..imagebase

section	.xdata rdata align=8
ALIGN	8
$L$SEH_info_AES_encrypt:
DB	9,0,0,0
	DD	block_se_handler wrt ..imagebase
	DD	$L$enc_prologue wrt ..imagebase,$L$enc_epilogue wrt ..imagebase
$L$SEH_info_AES_decrypt:
DB	9,0,0,0
	DD	block_se_handler wrt ..imagebase
	DD	$L$dec_prologue wrt ..imagebase,$L$dec_epilogue wrt ..imagebase
$L$SEH_info_AES_set_encrypt_key:
DB	9,0,0,0
	DD	key_se_handler wrt ..imagebase
	DD	$L$enc_key_prologue wrt ..imagebase,$L$enc_key_epilogue wrt ..imagebase
$L$SEH_info_AES_set_decrypt_key:
DB	9,0,0,0
	DD	key_se_handler wrt ..imagebase
	DD	$L$dec_key_prologue wrt ..imagebase,$L$dec_key_epilogue wrt ..imagebase
$L$SEH_info_AES_cbc_encrypt:
DB	9,0,0,0
	DD	cbc_se_handler wrt ..imagebase
                                                                   node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/aes/aesni-mb-x86_64.asm             0000664 0000000 0000000 00000107645 14746647661 0027734 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        default	rel
%define XMMWORD
%define YMMWORD
%define ZMMWORD
section	.text code align=64


EXTERN	OPENSSL_ia32cap_P

global	aesni_multi_cbc_encrypt

ALIGN	32
aesni_multi_cbc_encrypt:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_multi_cbc_encrypt:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8



	cmp	edx,2
	jb	NEAR $L$enc_non_avx
	mov	ecx,DWORD[((OPENSSL_ia32cap_P+4))]
	test	ecx,268435456
	jnz	NEAR _avx_cbc_enc_shortcut
	jmp	NEAR $L$enc_non_avx
ALIGN	16
$L$enc_non_avx:
	mov	rax,rsp

	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

	lea	rsp,[((-168))+rsp]
	movaps	XMMWORD[rsp],xmm6
	movaps	XMMWORD[16+rsp],xmm7
	movaps	XMMWORD[32+rsp],xmm8
	movaps	XMMWORD[48+rsp],xmm9
	movaps	XMMWORD[64+rsp],xmm10
	movaps	XMMWORD[80+rsp],xmm11
	movaps	XMMWORD[96+rsp],xmm12
	movaps	XMMWORD[(-104)+rax],xmm13
	movaps	XMMWORD[(-88)+rax],xmm14
	movaps	XMMWORD[(-72)+rax],xmm15






	sub	rsp,48
	and	rsp,-64
	mov	QWORD[16+rsp],rax


$L$enc4x_body:
	movdqu	xmm12,XMMWORD[rsi]
	lea	rsi,[120+rsi]
	lea	rdi,[80+rdi]

$L$enc4x_loop_grande:
	mov	DWORD[24+rsp],edx
	xor	edx,edx

	mov	ecx,DWORD[((-64))+rdi]
	mov	r8,QWORD[((-80))+rdi]
	cmp	ecx,edx
	mov	r12,QWORD[((-72))+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	movdqu	xmm2,XMMWORD[((-56))+rdi]
	mov	DWORD[32+rsp],ecx
	cmovle	r8,rsp

	mov	ecx,DWORD[((-24))+rdi]
	mov	r9,QWORD[((-40))+rdi]
	cmp	ecx,edx
	mov	r13,QWORD[((-32))+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	movdqu	xmm3,XMMWORD[((-16))+rdi]
	mov	DWORD[36+rsp],ecx
	cmovle	r9,rsp

	mov	ecx,DWORD[16+rdi]
	mov	r10,QWORD[rdi]
	cmp	ecx,edx
	mov	r14,QWORD[8+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	movdqu	xmm4,XMMWORD[24+rdi]
	mov	DWORD[40+rsp],ecx
	cmovle	r10,rsp

	mov	ecx,DWORD[56+rdi]
	mov	r11,QWORD[40+rdi]
	cmp	ecx,edx
	mov	r15,QWORD[48+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	movdqu	xmm5,XMMWORD[64+rdi]
	mov	DWORD[44+rsp],ecx
	cmovle	r11,rsp
	test	edx,edx
	jz	NEAR $L$enc4x_done

	movups	xmm1,XMMWORD[((16-120))+rsi]
	pxor	xmm2,xmm12
	movups	xmm0,XMMWORD[((32-120))+rsi]
	pxor	xmm3,xmm12
	mov	eax,DWORD[((240-120))+rsi]
	pxor	xmm4,xmm12
	movdqu	xmm6,XMMWORD[r8]
	pxor	xmm5,xmm12
	movdqu	xmm7,XMMWORD[r9]
	pxor	xmm2,xmm6
	movdqu	xmm8,XMMWORD[r10]
	pxor	xmm3,xmm7
	movdqu	xmm9,XMMWORD[r11]
	pxor	xmm4,xmm8
	pxor	xmm5,xmm9
	movdqa	xmm10,XMMWORD[32+rsp]
	xor	rbx,rbx
	jmp	NEAR $L$oop_enc4x

ALIGN	32
$L$oop_enc4x:
	add	rbx,16
	lea	rbp,[16+rsp]
	mov	ecx,1
	sub	rbp,rbx

DB	102,15,56,220,209
	prefetcht0	[31+rbx*1+r8]
	prefetcht0	[31+rbx*1+r9]
DB	102,15,56,220,217
	prefetcht0	[31+rbx*1+r10]
	prefetcht0	[31+rbx*1+r10]
DB	102,15,56,220,225
DB	102,15,56,220,233
	movups	xmm1,XMMWORD[((48-120))+rsi]
	cmp	ecx,DWORD[32+rsp]
DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
	cmovge	r8,rbp
	cmovg	r12,rbp
DB	102,15,56,220,232
	movups	xmm0,XMMWORD[((-56))+rsi]
	cmp	ecx,DWORD[36+rsp]
DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
	cmovge	r9,rbp
	cmovg	r13,rbp
DB	102,15,56,220,233
	movups	xmm1,XMMWORD[((-40))+rsi]
	cmp	ecx,DWORD[40+rsp]
DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
	cmovge	r10,rbp
	cmovg	r14,rbp
DB	102,15,56,220,232
	movups	xmm0,XMMWORD[((-24))+rsi]
	cmp	ecx,DWORD[44+rsp]
DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
	cmovge	r11,rbp
	cmovg	r15,rbp
DB	102,15,56,220,233
	movups	xmm1,XMMWORD[((-8))+rsi]
	movdqa	xmm11,xmm10
DB	102,15,56,220,208
	prefetcht0	[15+rbx*1+r12]
	prefetcht0	[15+rbx*1+r13]
DB	102,15,56,220,216
	prefetcht0	[15+rbx*1+r14]
	prefetcht0	[15+rbx*1+r15]
DB	102,15,56,220,224
DB	102,15,56,220,232
	movups	xmm0,XMMWORD[((128-120))+rsi]
	pxor	xmm12,xmm12

DB	102,15,56,220,209
	pcmpgtd	xmm11,xmm12
	movdqu	xmm12,XMMWORD[((-120))+rsi]
DB	102,15,56,220,217
	paddd	xmm10,xmm11
	movdqa	XMMWORD[32+rsp],xmm10
DB	102,15,56,220,225
DB	102,15,56,220,233
	movups	xmm1,XMMWORD[((144-120))+rsi]

	cmp	eax,11

DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
DB	102,15,56,220,232
	movups	xmm0,XMMWORD[((160-120))+rsi]

	jb	NEAR $L$enc4x_tail

DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
	movups	xmm1,XMMWORD[((176-120))+rsi]

DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
DB	102,15,56,220,232
	movups	xmm0,XMMWORD[((192-120))+rsi]

	je	NEAR $L$enc4x_tail

DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
	movups	xmm1,XMMWORD[((208-120))+rsi]

DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
DB	102,15,56,220,232
	movups	xmm0,XMMWORD[((224-120))+rsi]
	jmp	NEAR $L$enc4x_tail

ALIGN	32
$L$enc4x_tail:
DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
	movdqu	xmm6,XMMWORD[rbx*1+r8]
	movdqu	xmm1,XMMWORD[((16-120))+rsi]

DB	102,15,56,221,208
	movdqu	xmm7,XMMWORD[rbx*1+r9]
	pxor	xmm6,xmm12
DB	102,15,56,221,216
	movdqu	xmm8,XMMWORD[rbx*1+r10]
	pxor	xmm7,xmm12
DB	102,15,56,221,224
	movdqu	xmm9,XMMWORD[rbx*1+r11]
	pxor	xmm8,xmm12
DB	102,15,56,221,232
	movdqu	xmm0,XMMWORD[((32-120))+rsi]
	pxor	xmm9,xmm12

	movups	XMMWORD[(-16)+rbx*1+r12],xmm2
	pxor	xmm2,xmm6
	movups	XMMWORD[(-16)+rbx*1+r13],xmm3
	pxor	xmm3,xmm7
	movups	XMMWORD[(-16)+rbx*1+r14],xmm4
	pxor	xmm4,xmm8
	movups	XMMWORD[(-16)+rbx*1+r15],xmm5
	pxor	xmm5,xmm9

	dec	edx
	jnz	NEAR $L$oop_enc4x

	mov	rax,QWORD[16+rsp]

	mov	edx,DWORD[24+rsp]











	lea	rdi,[160+rdi]
	dec	edx
	jnz	NEAR $L$enc4x_loop_grande

$L$enc4x_done:
	movaps	xmm6,XMMWORD[((-216))+rax]
	movaps	xmm7,XMMWORD[((-200))+rax]
	movaps	xmm8,XMMWORD[((-184))+rax]
	movaps	xmm9,XMMWORD[((-168))+rax]
	movaps	xmm10,XMMWORD[((-152))+rax]
	movaps	xmm11,XMMWORD[((-136))+rax]
	movaps	xmm12,XMMWORD[((-120))+rax]



	mov	r15,QWORD[((-48))+rax]

	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbp,QWORD[((-16))+rax]

	mov	rbx,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$enc4x_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_multi_cbc_encrypt:

global	aesni_multi_cbc_decrypt

ALIGN	32
aesni_multi_cbc_decrypt:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_multi_cbc_decrypt:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8



	cmp	edx,2
	jb	NEAR $L$dec_non_avx
	mov	ecx,DWORD[((OPENSSL_ia32cap_P+4))]
	test	ecx,268435456
	jnz	NEAR _avx_cbc_dec_shortcut
	jmp	NEAR $L$dec_non_avx
ALIGN	16
$L$dec_non_avx:
	mov	rax,rsp

	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

	lea	rsp,[((-168))+rsp]
	movaps	XMMWORD[rsp],xmm6
	movaps	XMMWORD[16+rsp],xmm7
	movaps	XMMWORD[32+rsp],xmm8
	movaps	XMMWORD[48+rsp],xmm9
	movaps	XMMWORD[64+rsp],xmm10
	movaps	XMMWORD[80+rsp],xmm11
	movaps	XMMWORD[96+rsp],xmm12
	movaps	XMMWORD[(-104)+rax],xmm13
	movaps	XMMWORD[(-88)+rax],xmm14
	movaps	XMMWORD[(-72)+rax],xmm15






	sub	rsp,48
	and	rsp,-64
	mov	QWORD[16+rsp],rax


$L$dec4x_body:
	movdqu	xmm12,XMMWORD[rsi]
	lea	rsi,[120+rsi]
	lea	rdi,[80+rdi]

$L$dec4x_loop_grande:
	mov	DWORD[24+rsp],edx
	xor	edx,edx

	mov	ecx,DWORD[((-64))+rdi]
	mov	r8,QWORD[((-80))+rdi]
	cmp	ecx,edx
	mov	r12,QWORD[((-72))+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	movdqu	xmm6,XMMWORD[((-56))+rdi]
	mov	DWORD[32+rsp],ecx
	cmovle	r8,rsp

	mov	ecx,DWORD[((-24))+rdi]
	mov	r9,QWORD[((-40))+rdi]
	cmp	ecx,edx
	mov	r13,QWORD[((-32))+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	movdqu	xmm7,XMMWORD[((-16))+rdi]
	mov	DWORD[36+rsp],ecx
	cmovle	r9,rsp

	mov	ecx,DWORD[16+rdi]
	mov	r10,QWORD[rdi]
	cmp	ecx,edx
	mov	r14,QWORD[8+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	movdqu	xmm8,XMMWORD[24+rdi]
	mov	DWORD[40+rsp],ecx
	cmovle	r10,rsp

	mov	ecx,DWORD[56+rdi]
	mov	r11,QWORD[40+rdi]
	cmp	ecx,edx
	mov	r15,QWORD[48+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	movdqu	xmm9,XMMWORD[64+rdi]
	mov	DWORD[44+rsp],ecx
	cmovle	r11,rsp
	test	edx,edx
	jz	NEAR $L$dec4x_done

	movups	xmm1,XMMWORD[((16-120))+rsi]
	movups	xmm0,XMMWORD[((32-120))+rsi]
	mov	eax,DWORD[((240-120))+rsi]
	movdqu	xmm2,XMMWORD[r8]
	movdqu	xmm3,XMMWORD[r9]
	pxor	xmm2,xmm12
	movdqu	xmm4,XMMWORD[r10]
	pxor	xmm3,xmm12
	movdqu	xmm5,XMMWORD[r11]
	pxor	xmm4,xmm12
	pxor	xmm5,xmm12
	movdqa	xmm10,XMMWORD[32+rsp]
	xor	rbx,rbx
	jmp	NEAR $L$oop_dec4x

ALIGN	32
$L$oop_dec4x:
	add	rbx,16
	lea	rbp,[16+rsp]
	mov	ecx,1
	sub	rbp,rbx

DB	102,15,56,222,209
	prefetcht0	[31+rbx*1+r8]
	prefetcht0	[31+rbx*1+r9]
DB	102,15,56,222,217
	prefetcht0	[31+rbx*1+r10]
	prefetcht0	[31+rbx*1+r11]
DB	102,15,56,222,225
DB	102,15,56,222,233
	movups	xmm1,XMMWORD[((48-120))+rsi]
	cmp	ecx,DWORD[32+rsp]
DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
	cmovge	r8,rbp
	cmovg	r12,rbp
DB	102,15,56,222,232
	movups	xmm0,XMMWORD[((-56))+rsi]
	cmp	ecx,DWORD[36+rsp]
DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
	cmovge	r9,rbp
	cmovg	r13,rbp
DB	102,15,56,222,233
	movups	xmm1,XMMWORD[((-40))+rsi]
	cmp	ecx,DWORD[40+rsp]
DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
	cmovge	r10,rbp
	cmovg	r14,rbp
DB	102,15,56,222,232
	movups	xmm0,XMMWORD[((-24))+rsi]
	cmp	ecx,DWORD[44+rsp]
DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
	cmovge	r11,rbp
	cmovg	r15,rbp
DB	102,15,56,222,233
	movups	xmm1,XMMWORD[((-8))+rsi]
	movdqa	xmm11,xmm10
DB	102,15,56,222,208
	prefetcht0	[15+rbx*1+r12]
	prefetcht0	[15+rbx*1+r13]
DB	102,15,56,222,216
	prefetcht0	[15+rbx*1+r14]
	prefetcht0	[15+rbx*1+r15]
DB	102,15,56,222,224
DB	102,15,56,222,232
	movups	xmm0,XMMWORD[((128-120))+rsi]
	pxor	xmm12,xmm12

DB	102,15,56,222,209
	pcmpgtd	xmm11,xmm12
	movdqu	xmm12,XMMWORD[((-120))+rsi]
DB	102,15,56,222,217
	paddd	xmm10,xmm11
	movdqa	XMMWORD[32+rsp],xmm10
DB	102,15,56,222,225
DB	102,15,56,222,233
	movups	xmm1,XMMWORD[((144-120))+rsi]

	cmp	eax,11

DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
	movups	xmm0,XMMWORD[((160-120))+rsi]

	jb	NEAR $L$dec4x_tail

DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
	movups	xmm1,XMMWORD[((176-120))+rsi]

DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
	movups	xmm0,XMMWORD[((192-120))+rsi]

	je	NEAR $L$dec4x_tail

DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
	movups	xmm1,XMMWORD[((208-120))+rsi]

DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
	movups	xmm0,XMMWORD[((224-120))+rsi]
	jmp	NEAR $L$dec4x_tail

ALIGN	32
$L$dec4x_tail:
DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
	pxor	xmm6,xmm0
	pxor	xmm7,xmm0
DB	102,15,56,222,233
	movdqu	xmm1,XMMWORD[((16-120))+rsi]
	pxor	xmm8,xmm0
	pxor	xmm9,xmm0
	movdqu	xmm0,XMMWORD[((32-120))+rsi]

DB	102,15,56,223,214
DB	102,15,56,223,223
	movdqu	xmm6,XMMWORD[((-16))+rbx*1+r8]
	movdqu	xmm7,XMMWORD[((-16))+rbx*1+r9]
DB	102,65,15,56,223,224
DB	102,65,15,56,223,233
	movdqu	xmm8,XMMWORD[((-16))+rbx*1+r10]
	movdqu	xmm9,XMMWORD[((-16))+rbx*1+r11]

	movups	XMMWORD[(-16)+rbx*1+r12],xmm2
	movdqu	xmm2,XMMWORD[rbx*1+r8]
	movups	XMMWORD[(-16)+rbx*1+r13],xmm3
	movdqu	xmm3,XMMWORD[rbx*1+r9]
	pxor	xmm2,xmm12
	movups	XMMWORD[(-16)+rbx*1+r14],xmm4
	movdqu	xmm4,XMMWORD[rbx*1+r10]
	pxor	xmm3,xmm12
	movups	XMMWORD[(-16)+rbx*1+r15],xmm5
	movdqu	xmm5,XMMWORD[rbx*1+r11]
	pxor	xmm4,xmm12
	pxor	xmm5,xmm12

	dec	edx
	jnz	NEAR $L$oop_dec4x

	mov	rax,QWORD[16+rsp]

	mov	edx,DWORD[24+rsp]

	lea	rdi,[160+rdi]
	dec	edx
	jnz	NEAR $L$dec4x_loop_grande

$L$dec4x_done:
	movaps	xmm6,XMMWORD[((-216))+rax]
	movaps	xmm7,XMMWORD[((-200))+rax]
	movaps	xmm8,XMMWORD[((-184))+rax]
	movaps	xmm9,XMMWORD[((-168))+rax]
	movaps	xmm10,XMMWORD[((-152))+rax]
	movaps	xmm11,XMMWORD[((-136))+rax]
	movaps	xmm12,XMMWORD[((-120))+rax]



	mov	r15,QWORD[((-48))+rax]

	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbp,QWORD[((-16))+rax]

	mov	rbx,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$dec4x_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_multi_cbc_decrypt:

ALIGN	32
aesni_multi_cbc_encrypt_avx:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_multi_cbc_encrypt_avx:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8



_avx_cbc_enc_shortcut:
	mov	rax,rsp

	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

	lea	rsp,[((-168))+rsp]
	movaps	XMMWORD[rsp],xmm6
	movaps	XMMWORD[16+rsp],xmm7
	movaps	XMMWORD[32+rsp],xmm8
	movaps	XMMWORD[48+rsp],xmm9
	movaps	XMMWORD[64+rsp],xmm10
	movaps	XMMWORD[80+rsp],xmm11
	movaps	XMMWORD[(-120)+rax],xmm12
	movaps	XMMWORD[(-104)+rax],xmm13
	movaps	XMMWORD[(-88)+rax],xmm14
	movaps	XMMWORD[(-72)+rax],xmm15








	sub	rsp,192
	and	rsp,-128
	mov	QWORD[16+rsp],rax


$L$enc8x_body:
	vzeroupper
	vmovdqu	xmm15,XMMWORD[rsi]
	lea	rsi,[120+rsi]
	lea	rdi,[160+rdi]
	shr	edx,1

$L$enc8x_loop_grande:

	xor	edx,edx

	mov	ecx,DWORD[((-144))+rdi]

	mov	r8,QWORD[((-160))+rdi]
	cmp	ecx,edx

	mov	rbx,QWORD[((-152))+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm2,XMMWORD[((-136))+rdi]
	mov	DWORD[32+rsp],ecx
	cmovle	r8,rsp
	sub	rbx,r8
	mov	QWORD[64+rsp],rbx

	mov	ecx,DWORD[((-104))+rdi]

	mov	r9,QWORD[((-120))+rdi]
	cmp	ecx,edx

	mov	rbp,QWORD[((-112))+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm3,XMMWORD[((-96))+rdi]
	mov	DWORD[36+rsp],ecx
	cmovle	r9,rsp
	sub	rbp,r9
	mov	QWORD[72+rsp],rbp

	mov	ecx,DWORD[((-64))+rdi]

	mov	r10,QWORD[((-80))+rdi]
	cmp	ecx,edx

	mov	rbp,QWORD[((-72))+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm4,XMMWORD[((-56))+rdi]
	mov	DWORD[40+rsp],ecx
	cmovle	r10,rsp
	sub	rbp,r10
	mov	QWORD[80+rsp],rbp

	mov	ecx,DWORD[((-24))+rdi]

	mov	r11,QWORD[((-40))+rdi]
	cmp	ecx,edx

	mov	rbp,QWORD[((-32))+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm5,XMMWORD[((-16))+rdi]
	mov	DWORD[44+rsp],ecx
	cmovle	r11,rsp
	sub	rbp,r11
	mov	QWORD[88+rsp],rbp

	mov	ecx,DWORD[16+rdi]

	mov	r12,QWORD[rdi]
	cmp	ecx,edx

	mov	rbp,QWORD[8+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm6,XMMWORD[24+rdi]
	mov	DWORD[48+rsp],ecx
	cmovle	r12,rsp
	sub	rbp,r12
	mov	QWORD[96+rsp],rbp

	mov	ecx,DWORD[56+rdi]

	mov	r13,QWORD[40+rdi]
	cmp	ecx,edx

	mov	rbp,QWORD[48+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm7,XMMWORD[64+rdi]
	mov	DWORD[52+rsp],ecx
	cmovle	r13,rsp
	sub	rbp,r13
	mov	QWORD[104+rsp],rbp

	mov	ecx,DWORD[96+rdi]

	mov	r14,QWORD[80+rdi]
	cmp	ecx,edx

	mov	rbp,QWORD[88+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm8,XMMWORD[104+rdi]
	mov	DWORD[56+rsp],ecx
	cmovle	r14,rsp
	sub	rbp,r14
	mov	QWORD[112+rsp],rbp

	mov	ecx,DWORD[136+rdi]

	mov	r15,QWORD[120+rdi]
	cmp	ecx,edx

	mov	rbp,QWORD[128+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm9,XMMWORD[144+rdi]
	mov	DWORD[60+rsp],ecx
	cmovle	r15,rsp
	sub	rbp,r15
	mov	QWORD[120+rsp],rbp
	test	edx,edx
	jz	NEAR $L$enc8x_done

	vmovups	xmm1,XMMWORD[((16-120))+rsi]
	vmovups	xmm0,XMMWORD[((32-120))+rsi]
	mov	eax,DWORD[((240-120))+rsi]

	vpxor	xmm10,xmm15,XMMWORD[r8]
	lea	rbp,[128+rsp]
	vpxor	xmm11,xmm15,XMMWORD[r9]
	vpxor	xmm12,xmm15,XMMWORD[r10]
	vpxor	xmm13,xmm15,XMMWORD[r11]
	vpxor	xmm2,xmm2,xmm10
	vpxor	xmm10,xmm15,XMMWORD[r12]
	vpxor	xmm3,xmm3,xmm11
	vpxor	xmm11,xmm15,XMMWORD[r13]
	vpxor	xmm4,xmm4,xmm12
	vpxor	xmm12,xmm15,XMMWORD[r14]
	vpxor	xmm5,xmm5,xmm13
	vpxor	xmm13,xmm15,XMMWORD[r15]
	vpxor	xmm6,xmm6,xmm10
	mov	ecx,1
	vpxor	xmm7,xmm7,xmm11
	vpxor	xmm8,xmm8,xmm12
	vpxor	xmm9,xmm9,xmm13
	jmp	NEAR $L$oop_enc8x

ALIGN	32
$L$oop_enc8x:
	vaesenc	xmm2,xmm2,xmm1
	cmp	ecx,DWORD[((32+0))+rsp]
	vaesenc	xmm3,xmm3,xmm1
	prefetcht0	[31+r8]
	vaesenc	xmm4,xmm4,xmm1
	vaesenc	xmm5,xmm5,xmm1
	lea	rbx,[rbx*1+r8]
	cmovge	r8,rsp
	vaesenc	xmm6,xmm6,xmm1
	cmovg	rbx,rsp
	vaesenc	xmm7,xmm7,xmm1
	sub	rbx,r8
	vaesenc	xmm8,xmm8,xmm1
	vpxor	xmm10,xmm15,XMMWORD[16+r8]
	mov	QWORD[((64+0))+rsp],rbx
	vaesenc	xmm9,xmm9,xmm1
	vmovups	xmm1,XMMWORD[((-72))+rsi]
	lea	r8,[16+rbx*1+r8]
	vmovdqu	XMMWORD[rbp],xmm10
	vaesenc	xmm2,xmm2,xmm0
	cmp	ecx,DWORD[((32+4))+rsp]
	mov	rbx,QWORD[((64+8))+rsp]
	vaesenc	xmm3,xmm3,xmm0
	prefetcht0	[31+r9]
	vaesenc	xmm4,xmm4,xmm0
	vaesenc	xmm5,xmm5,xmm0
	lea	rbx,[rbx*1+r9]
	cmovge	r9,rsp
	vaesenc	xmm6,xmm6,xmm0
	cmovg	rbx,rsp
	vaesenc	xmm7,xmm7,xmm0
	sub	rbx,r9
	vaesenc	xmm8,xmm8,xmm0
	vpxor	xmm11,xmm15,XMMWORD[16+r9]
	mov	QWORD[((64+8))+rsp],rbx
	vaesenc	xmm9,xmm9,xmm0
	vmovups	xmm0,XMMWORD[((-56))+rsi]
	lea	r9,[16+rbx*1+r9]
	vmovdqu	XMMWORD[16+rbp],xmm11
	vaesenc	xmm2,xmm2,xmm1
	cmp	ecx,DWORD[((32+8))+rsp]
	mov	rbx,QWORD[((64+16))+rsp]
	vaesenc	xmm3,xmm3,xmm1
	prefetcht0	[31+r10]
	vaesenc	xmm4,xmm4,xmm1
	prefetcht0	[15+r8]
	vaesenc	xmm5,xmm5,xmm1
	lea	rbx,[rbx*1+r10]
	cmovge	r10,rsp
	vaesenc	xmm6,xmm6,xmm1
	cmovg	rbx,rsp
	vaesenc	xmm7,xmm7,xmm1
	sub	rbx,r10
	vaesenc	xmm8,xmm8,xmm1
	vpxor	xmm12,xmm15,XMMWORD[16+r10]
	mov	QWORD[((64+16))+rsp],rbx
	vaesenc	xmm9,xmm9,xmm1
	vmovups	xmm1,XMMWORD[((-40))+rsi]
	lea	r10,[16+rbx*1+r10]
	vmovdqu	XMMWORD[32+rbp],xmm12
	vaesenc	xmm2,xmm2,xmm0
	cmp	ecx,DWORD[((32+12))+rsp]
	mov	rbx,QWORD[((64+24))+rsp]
	vaesenc	xmm3,xmm3,xmm0
	prefetcht0	[31+r11]
	vaesenc	xmm4,xmm4,xmm0
	prefetcht0	[15+r9]
	vaesenc	xmm5,xmm5,xmm0
	lea	rbx,[rbx*1+r11]
	cmovge	r11,rsp
	vaesenc	xmm6,xmm6,xmm0
	cmovg	rbx,rsp
	vaesenc	xmm7,xmm7,xmm0
	sub	rbx,r11
	vaesenc	xmm8,xmm8,xmm0
	vpxor	xmm13,xmm15,XMMWORD[16+r11]
	mov	QWORD[((64+24))+rsp],rbx
	vaesenc	xmm9,xmm9,xmm0
	vmovups	xmm0,XMMWORD[((-24))+rsi]
	lea	r11,[16+rbx*1+r11]
	vmovdqu	XMMWORD[48+rbp],xmm13
	vaesenc	xmm2,xmm2,xmm1
	cmp	ecx,DWORD[((32+16))+rsp]
	mov	rbx,QWORD[((64+32))+rsp]
	vaesenc	xmm3,xmm3,xmm1
	prefetcht0	[31+r12]
	vaesenc	xmm4,xmm4,xmm1
	prefetcht0	[15+r10]
	vaesenc	xmm5,xmm5,xmm1
	lea	rbx,[rbx*1+r12]
	cmovge	r12,rsp
	vaesenc	xmm6,xmm6,xmm1
	cmovg	rbx,rsp
	vaesenc	xmm7,xmm7,xmm1
	sub	rbx,r12
	vaesenc	xmm8,xmm8,xmm1
	vpxor	xmm10,xmm15,XMMWORD[16+r12]
	mov	QWORD[((64+32))+rsp],rbx
	vaesenc	xmm9,xmm9,xmm1
	vmovups	xmm1,XMMWORD[((-8))+rsi]
	lea	r12,[16+rbx*1+r12]
	vaesenc	xmm2,xmm2,xmm0
	cmp	ecx,DWORD[((32+20))+rsp]
	mov	rbx,QWORD[((64+40))+rsp]
	vaesenc	xmm3,xmm3,xmm0
	prefetcht0	[31+r13]
	vaesenc	xmm4,xmm4,xmm0
	prefetcht0	[15+r11]
	vaesenc	xmm5,xmm5,xmm0
	lea	rbx,[r13*1+rbx]
	cmovge	r13,rsp
	vaesenc	xmm6,xmm6,xmm0
	cmovg	rbx,rsp
	vaesenc	xmm7,xmm7,xmm0
	sub	rbx,r13
	vaesenc	xmm8,xmm8,xmm0
	vpxor	xmm11,xmm15,XMMWORD[16+r13]
	mov	QWORD[((64+40))+rsp],rbx
	vaesenc	xmm9,xmm9,xmm0
	vmovups	xmm0,XMMWORD[8+rsi]
	lea	r13,[16+rbx*1+r13]
	vaesenc	xmm2,xmm2,xmm1
	cmp	ecx,DWORD[((32+24))+rsp]
	mov	rbx,QWORD[((64+48))+rsp]
	vaesenc	xmm3,xmm3,xmm1
	prefetcht0	[31+r14]
	vaesenc	xmm4,xmm4,xmm1
	prefetcht0	[15+r12]
	vaesenc	xmm5,xmm5,xmm1
	lea	rbx,[rbx*1+r14]
	cmovge	r14,rsp
	vaesenc	xmm6,xmm6,xmm1
	cmovg	rbx,rsp
	vaesenc	xmm7,xmm7,xmm1
	sub	rbx,r14
	vaesenc	xmm8,xmm8,xmm1
	vpxor	xmm12,xmm15,XMMWORD[16+r14]
	mov	QWORD[((64+48))+rsp],rbx
	vaesenc	xmm9,xmm9,xmm1
	vmovups	xmm1,XMMWORD[24+rsi]
	lea	r14,[16+rbx*1+r14]
	vaesenc	xmm2,xmm2,xmm0
	cmp	ecx,DWORD[((32+28))+rsp]
	mov	rbx,QWORD[((64+56))+rsp]
	vaesenc	xmm3,xmm3,xmm0
	prefetcht0	[31+r15]
	vaesenc	xmm4,xmm4,xmm0
	prefetcht0	[15+r13]
	vaesenc	xmm5,xmm5,xmm0
	lea	rbx,[rbx*1+r15]
	cmovge	r15,rsp
	vaesenc	xmm6,xmm6,xmm0
	cmovg	rbx,rsp
	vaesenc	xmm7,xmm7,xmm0
	sub	rbx,r15
	vaesenc	xmm8,xmm8,xmm0
	vpxor	xmm13,xmm15,XMMWORD[16+r15]
	mov	QWORD[((64+56))+rsp],rbx
	vaesenc	xmm9,xmm9,xmm0
	vmovups	xmm0,XMMWORD[40+rsi]
	lea	r15,[16+rbx*1+r15]
	vmovdqu	xmm14,XMMWORD[32+rsp]
	prefetcht0	[15+r14]
	prefetcht0	[15+r15]
	cmp	eax,11
	jb	NEAR $L$enc8x_tail

	vaesenc	xmm2,xmm2,xmm1
	vaesenc	xmm3,xmm3,xmm1
	vaesenc	xmm4,xmm4,xmm1
	vaesenc	xmm5,xmm5,xmm1
	vaesenc	xmm6,xmm6,xmm1
	vaesenc	xmm7,xmm7,xmm1
	vaesenc	xmm8,xmm8,xmm1
	vaesenc	xmm9,xmm9,xmm1
	vmovups	xmm1,XMMWORD[((176-120))+rsi]

	vaesenc	xmm2,xmm2,xmm0
	vaesenc	xmm3,xmm3,xmm0
	vaesenc	xmm4,xmm4,xmm0
	vaesenc	xmm5,xmm5,xmm0
	vaesenc	xmm6,xmm6,xmm0
	vaesenc	xmm7,xmm7,xmm0
	vaesenc	xmm8,xmm8,xmm0
	vaesenc	xmm9,xmm9,xmm0
	vmovups	xmm0,XMMWORD[((192-120))+rsi]
	je	NEAR $L$enc8x_tail

	vaesenc	xmm2,xmm2,xmm1
	vaesenc	xmm3,xmm3,xmm1
	vaesenc	xmm4,xmm4,xmm1
	vaesenc	xmm5,xmm5,xmm1
	vaesenc	xmm6,xmm6,xmm1
	vaesenc	xmm7,xmm7,xmm1
	vaesenc	xmm8,xmm8,xmm1
	vaesenc	xmm9,xmm9,xmm1
	vmovups	xmm1,XMMWORD[((208-120))+rsi]

	vaesenc	xmm2,xmm2,xmm0
	vaesenc	xmm3,xmm3,xmm0
	vaesenc	xmm4,xmm4,xmm0
	vaesenc	xmm5,xmm5,xmm0
	vaesenc	xmm6,xmm6,xmm0
	vaesenc	xmm7,xmm7,xmm0
	vaesenc	xmm8,xmm8,xmm0
	vaesenc	xmm9,xmm9,xmm0
	vmovups	xmm0,XMMWORD[((224-120))+rsi]

$L$enc8x_tail:
	vaesenc	xmm2,xmm2,xmm1
	vpxor	xmm15,xmm15,xmm15
	vaesenc	xmm3,xmm3,xmm1
	vaesenc	xmm4,xmm4,xmm1
	vpcmpgtd	xmm15,xmm14,xmm15
	vaesenc	xmm5,xmm5,xmm1
	vaesenc	xmm6,xmm6,xmm1
	vpaddd	xmm15,xmm15,xmm14
	vmovdqu	xmm14,XMMWORD[48+rsp]
	vaesenc	xmm7,xmm7,xmm1
	mov	rbx,QWORD[64+rsp]
	vaesenc	xmm8,xmm8,xmm1
	vaesenc	xmm9,xmm9,xmm1
	vmovups	xmm1,XMMWORD[((16-120))+rsi]

	vaesenclast	xmm2,xmm2,xmm0
	vmovdqa	XMMWORD[32+rsp],xmm15
	vpxor	xmm15,xmm15,xmm15
	vaesenclast	xmm3,xmm3,xmm0
	vaesenclast	xmm4,xmm4,xmm0
	vpcmpgtd	xmm15,xmm14,xmm15
	vaesenclast	xmm5,xmm5,xmm0
	vaesenclast	xmm6,xmm6,xmm0
	vpaddd	xmm14,xmm14,xmm15
	vmovdqu	xmm15,XMMWORD[((-120))+rsi]
	vaesenclast	xmm7,xmm7,xmm0
	vaesenclast	xmm8,xmm8,xmm0
	vmovdqa	XMMWORD[48+rsp],xmm14
	vaesenclast	xmm9,xmm9,xmm0
	vmovups	xmm0,XMMWORD[((32-120))+rsi]

	vmovups	XMMWORD[(-16)+r8],xmm2
	sub	r8,rbx
	vpxor	xmm2,xmm2,XMMWORD[rbp]
	vmovups	XMMWORD[(-16)+r9],xmm3
	sub	r9,QWORD[72+rsp]
	vpxor	xmm3,xmm3,XMMWORD[16+rbp]
	vmovups	XMMWORD[(-16)+r10],xmm4
	sub	r10,QWORD[80+rsp]
	vpxor	xmm4,xmm4,XMMWORD[32+rbp]
	vmovups	XMMWORD[(-16)+r11],xmm5
	sub	r11,QWORD[88+rsp]
	vpxor	xmm5,xmm5,XMMWORD[48+rbp]
	vmovups	XMMWORD[(-16)+r12],xmm6
	sub	r12,QWORD[96+rsp]
	vpxor	xmm6,xmm6,xmm10
	vmovups	XMMWORD[(-16)+r13],xmm7
	sub	r13,QWORD[104+rsp]
	vpxor	xmm7,xmm7,xmm11
	vmovups	XMMWORD[(-16)+r14],xmm8
	sub	r14,QWORD[112+rsp]
	vpxor	xmm8,xmm8,xmm12
	vmovups	XMMWORD[(-16)+r15],xmm9
	sub	r15,QWORD[120+rsp]
	vpxor	xmm9,xmm9,xmm13

	dec	edx
	jnz	NEAR $L$oop_enc8x

	mov	rax,QWORD[16+rsp]






$L$enc8x_done:
	vzeroupper
	movaps	xmm6,XMMWORD[((-216))+rax]
	movaps	xmm7,XMMWORD[((-200))+rax]
	movaps	xmm8,XMMWORD[((-184))+rax]
	movaps	xmm9,XMMWORD[((-168))+rax]
	movaps	xmm10,XMMWORD[((-152))+rax]
	movaps	xmm11,XMMWORD[((-136))+rax]
	movaps	xmm12,XMMWORD[((-120))+rax]
	movaps	xmm13,XMMWORD[((-104))+rax]
	movaps	xmm14,XMMWORD[((-88))+rax]
	movaps	xmm15,XMMWORD[((-72))+rax]
	mov	r15,QWORD[((-48))+rax]

	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbp,QWORD[((-16))+rax]

	mov	rbx,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$enc8x_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_multi_cbc_encrypt_avx:


ALIGN	32
aesni_multi_cbc_decrypt_avx:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_multi_cbc_decrypt_avx:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8



_avx_cbc_dec_shortcut:
	mov	rax,rsp

	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

	lea	rsp,[((-168))+rsp]
	movaps	XMMWORD[rsp],xmm6
	movaps	XMMWORD[16+rsp],xmm7
	movaps	XMMWORD[32+rsp],xmm8
	movaps	XMMWORD[48+rsp],xmm9
	movaps	XMMWORD[64+rsp],xmm10
	movaps	XMMWORD[80+rsp],xmm11
	movaps	XMMWORD[(-120)+rax],xmm12
	movaps	XMMWORD[(-104)+rax],xmm13
	movaps	XMMWORD[(-88)+rax],xmm14
	movaps	XMMWORD[(-72)+rax],xmm15









	sub	rsp,256
	and	rsp,-256
	sub	rsp,192
	mov	QWORD[16+rsp],rax


$L$dec8x_body:
	vzeroupper
	vmovdqu	xmm15,XMMWORD[rsi]
	lea	rsi,[120+rsi]
	lea	rdi,[160+rdi]
	shr	edx,1

$L$dec8x_loop_grande:

	xor	edx,edx

	mov	ecx,DWORD[((-144))+rdi]

	mov	r8,QWORD[((-160))+rdi]
	cmp	ecx,edx

	mov	rbx,QWORD[((-152))+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm2,XMMWORD[((-136))+rdi]
	mov	DWORD[32+rsp],ecx
	cmovle	r8,rsp
	sub	rbx,r8
	mov	QWORD[64+rsp],rbx
	vmovdqu	XMMWORD[192+rsp],xmm2

	mov	ecx,DWORD[((-104))+rdi]

	mov	r9,QWORD[((-120))+rdi]
	cmp	ecx,edx

	mov	rbp,QWORD[((-112))+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm3,XMMWORD[((-96))+rdi]
	mov	DWORD[36+rsp],ecx
	cmovle	r9,rsp
	sub	rbp,r9
	mov	QWORD[72+rsp],rbp
	vmovdqu	XMMWORD[208+rsp],xmm3

	mov	ecx,DWORD[((-64))+rdi]

	mov	r10,QWORD[((-80))+rdi]
	cmp	ecx,edx

	mov	rbp,QWORD[((-72))+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm4,XMMWORD[((-56))+rdi]
	mov	DWORD[40+rsp],ecx
	cmovle	r10,rsp
	sub	rbp,r10
	mov	QWORD[80+rsp],rbp
	vmovdqu	XMMWORD[224+rsp],xmm4

	mov	ecx,DWORD[((-24))+rdi]

	mov	r11,QWORD[((-40))+rdi]
	cmp	ecx,edx

	mov	rbp,QWORD[((-32))+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm5,XMMWORD[((-16))+rdi]
	mov	DWORD[44+rsp],ecx
	cmovle	r11,rsp
	sub	rbp,r11
	mov	QWORD[88+rsp],rbp
	vmovdqu	XMMWORD[240+rsp],xmm5

	mov	ecx,DWORD[16+rdi]

	mov	r12,QWORD[rdi]
	cmp	ecx,edx

	mov	rbp,QWORD[8+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm6,XMMWORD[24+rdi]
	mov	DWORD[48+rsp],ecx
	cmovle	r12,rsp
	sub	rbp,r12
	mov	QWORD[96+rsp],rbp
	vmovdqu	XMMWORD[256+rsp],xmm6

	mov	ecx,DWORD[56+rdi]

	mov	r13,QWORD[40+rdi]
	cmp	ecx,edx

	mov	rbp,QWORD[48+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm7,XMMWORD[64+rdi]
	mov	DWORD[52+rsp],ecx
	cmovle	r13,rsp
	sub	rbp,r13
	mov	QWORD[104+rsp],rbp
	vmovdqu	XMMWORD[272+rsp],xmm7

	mov	ecx,DWORD[96+rdi]

	mov	r14,QWORD[80+rdi]
	cmp	ecx,edx

	mov	rbp,QWORD[88+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm8,XMMWORD[104+rdi]
	mov	DWORD[56+rsp],ecx
	cmovle	r14,rsp
	sub	rbp,r14
	mov	QWORD[112+rsp],rbp
	vmovdqu	XMMWORD[288+rsp],xmm8

	mov	ecx,DWORD[136+rdi]

	mov	r15,QWORD[120+rdi]
	cmp	ecx,edx

	mov	rbp,QWORD[128+rdi]
	cmovg	edx,ecx
	test	ecx,ecx

	vmovdqu	xmm9,XMMWORD[144+rdi]
	mov	DWORD[60+rsp],ecx
	cmovle	r15,rsp
	sub	rbp,r15
	mov	QWORD[120+rsp],rbp
	vmovdqu	XMMWORD[304+rsp],xmm9
	test	edx,edx
	jz	NEAR $L$dec8x_done

	vmovups	xmm1,XMMWORD[((16-120))+rsi]
	vmovups	xmm0,XMMWORD[((32-120))+rsi]
	mov	eax,DWORD[((240-120))+rsi]
	lea	rbp,[((192+128))+rsp]

	vmovdqu	xmm2,XMMWORD[r8]
	vmovdqu	xmm3,XMMWORD[r9]
	vmovdqu	xmm4,XMMWORD[r10]
	vmovdqu	xmm5,XMMWORD[r11]
	vmovdqu	xmm6,XMMWORD[r12]
	vmovdqu	xmm7,XMMWORD[r13]
	vmovdqu	xmm8,XMMWORD[r14]
	vmovdqu	xmm9,XMMWORD[r15]
	vmovdqu	XMMWORD[rbp],xmm2
	vpxor	xmm2,xmm2,xmm15
	vmovdqu	XMMWORD[16+rbp],xmm3
	vpxor	xmm3,xmm3,xmm15
	vmovdqu	XMMWORD[32+rbp],xmm4
	vpxor	xmm4,xmm4,xmm15
	vmovdqu	XMMWORD[48+rbp],xmm5
	vpxor	xmm5,xmm5,xmm15
	vmovdqu	XMMWORD[64+rbp],xmm6
	vpxor	xmm6,xmm6,xmm15
	vmovdqu	XMMWORD[80+rbp],xmm7
	vpxor	xmm7,xmm7,xmm15
	vmovdqu	XMMWORD[96+rbp],xmm8
	vpxor	xmm8,xmm8,xmm15
	vmovdqu	XMMWORD[112+rbp],xmm9
	vpxor	xmm9,xmm9,xmm15
	xor	rbp,0x80
	mov	ecx,1
	jmp	NEAR $L$oop_dec8x

ALIGN	32
$L$oop_dec8x:
	vaesdec	xmm2,xmm2,xmm1
	cmp	ecx,DWORD[((32+0))+rsp]
	vaesdec	xmm3,xmm3,xmm1
	prefetcht0	[31+r8]
	vaesdec	xmm4,xmm4,xmm1
	vaesdec	xmm5,xmm5,xmm1
	lea	rbx,[rbx*1+r8]
	cmovge	r8,rsp
	vaesdec	xmm6,xmm6,xmm1
	cmovg	rbx,rsp
	vaesdec	xmm7,xmm7,xmm1
	sub	rbx,r8
	vaesdec	xmm8,xmm8,xmm1
	vmovdqu	xmm10,XMMWORD[16+r8]
	mov	QWORD[((64+0))+rsp],rbx
	vaesdec	xmm9,xmm9,xmm1
	vmovups	xmm1,XMMWORD[((-72))+rsi]
	lea	r8,[16+rbx*1+r8]
	vmovdqu	XMMWORD[128+rsp],xmm10
	vaesdec	xmm2,xmm2,xmm0
	cmp	ecx,DWORD[((32+4))+rsp]
	mov	rbx,QWORD[((64+8))+rsp]
	vaesdec	xmm3,xmm3,xmm0
	prefetcht0	[31+r9]
	vaesdec	xmm4,xmm4,xmm0
	vaesdec	xmm5,xmm5,xmm0
	lea	rbx,[rbx*1+r9]
	cmovge	r9,rsp
	vaesdec	xmm6,xmm6,xmm0
	cmovg	rbx,rsp
	vaesdec	xmm7,xmm7,xmm0
	sub	rbx,r9
	vaesdec	xmm8,xmm8,xmm0
	vmovdqu	xmm11,XMMWORD[16+r9]
	mov	QWORD[((64+8))+rsp],rbx
	vaesdec	xmm9,xmm9,xmm0
	vmovups	xmm0,XMMWORD[((-56))+rsi]
	lea	r9,[16+rbx*1+r9]
	vmovdqu	XMMWORD[144+rsp],xmm11
	vaesdec	xmm2,xmm2,xmm1
	cmp	ecx,DWORD[((32+8))+rsp]
	mov	rbx,QWORD[((64+16))+rsp]
	vaesdec	xmm3,xmm3,xmm1
	prefetcht0	[31+r10]
	vaesdec	xmm4,xmm4,xmm1
	prefetcht0	[15+r8]
	vaesdec	xmm5,xmm5,xmm1
	lea	rbx,[rbx*1+r10]
	cmovge	r10,rsp
	vaesdec	xmm6,xmm6,xmm1
	cmovg	rbx,rsp
	vaesdec	xmm7,xmm7,xmm1
	sub	rbx,r10
	vaesdec	xmm8,xmm8,xmm1
	vmovdqu	xmm12,XMMWORD[16+r10]
	mov	QWORD[((64+16))+rsp],rbx
	vaesdec	xmm9,xmm9,xmm1
	vmovups	xmm1,XMMWORD[((-40))+rsi]
	lea	r10,[16+rbx*1+r10]
	vmovdqu	XMMWORD[160+rsp],xmm12
	vaesdec	xmm2,xmm2,xmm0
	cmp	ecx,DWORD[((32+12))+rsp]
	mov	rbx,QWORD[((64+24))+rsp]
	vaesdec	xmm3,xmm3,xmm0
	prefetcht0	[31+r11]
	vaesdec	xmm4,xmm4,xmm0
	prefetcht0	[15+r9]
	vaesdec	xmm5,xmm5,xmm0
	lea	rbx,[rbx*1+r11]
	cmovge	r11,rsp
	vaesdec	xmm6,xmm6,xmm0
	cmovg	rbx,rsp
	vaesdec	xmm7,xmm7,xmm0
	sub	rbx,r11
	vaesdec	xmm8,xmm8,xmm0
	vmovdqu	xmm13,XMMWORD[16+r11]
	mov	QWORD[((64+24))+rsp],rbx
	vaesdec	xmm9,xmm9,xmm0
	vmovups	xmm0,XMMWORD[((-24))+rsi]
	lea	r11,[16+rbx*1+r11]
	vmovdqu	XMMWORD[176+rsp],xmm13
	vaesdec	xmm2,xmm2,xmm1
	cmp	ecx,DWORD[((32+16))+rsp]
	mov	rbx,QWORD[((64+32))+rsp]
	vaesdec	xmm3,xmm3,xmm1
	prefetcht0	[31+r12]
	vaesdec	xmm4,xmm4,xmm1
	prefetcht0	[15+r10]
	vaesdec	xmm5,xmm5,xmm1
	lea	rbx,[rbx*1+r12]
	cmovge	r12,rsp
	vaesdec	xmm6,xmm6,xmm1
	cmovg	rbx,rsp
	vaesdec	xmm7,xmm7,xmm1
	sub	rbx,r12
	vaesdec	xmm8,xmm8,xmm1
	vmovdqu	xmm10,XMMWORD[16+r12]
	mov	QWORD[((64+32))+rsp],rbx
	vaesdec	xmm9,xmm9,xmm1
	vmovups	xmm1,XMMWORD[((-8))+rsi]
	lea	r12,[16+rbx*1+r12]
	vaesdec	xmm2,xmm2,xmm0
	cmp	ecx,DWORD[((32+20))+rsp]
	mov	rbx,QWORD[((64+40))+rsp]
	vaesdec	xmm3,xmm3,xmm0
	prefetcht0	[31+r13]
	vaesdec	xmm4,xmm4,xmm0
	prefetcht0	[15+r11]
	vaesdec	xmm5,xmm5,xmm0
	lea	rbx,[r13*1+rbx]
	cmovge	r13,rsp
	vaesdec	xmm6,xmm6,xmm0
	cmovg	rbx,rsp
	vaesdec	xmm7,xmm7,xmm0
	sub	rbx,r13
	vaesdec	xmm8,xmm8,xmm0
	vmovdqu	xmm11,XMMWORD[16+r13]
	mov	QWORD[((64+40))+rsp],rbx
	vaesdec	xmm9,xmm9,xmm0
	vmovups	xmm0,XMMWORD[8+rsi]
	lea	r13,[16+rbx*1+r13]
	vaesdec	xmm2,xmm2,xmm1
	cmp	ecx,DWORD[((32+24))+rsp]
	mov	rbx,QWORD[((64+48))+rsp]
	vaesdec	xmm3,xmm3,xmm1
	prefetcht0	[31+r14]
	vaesdec	xmm4,xmm4,xmm1
	prefetcht0	[15+r12]
	vaesdec	xmm5,xmm5,xmm1
	lea	rbx,[rbx*1+r14]
	cmovge	r14,rsp
	vaesdec	xmm6,xmm6,xmm1
	cmovg	rbx,rsp
	vaesdec	xmm7,xmm7,xmm1
	sub	rbx,r14
	vaesdec	xmm8,xmm8,xmm1
	vmovdqu	xmm12,XMMWORD[16+r14]
	mov	QWORD[((64+48))+rsp],rbx
	vaesdec	xmm9,xmm9,xmm1
	vmovups	xmm1,XMMWORD[24+rsi]
	lea	r14,[16+rbx*1+r14]
	vaesdec	xmm2,xmm2,xmm0
	cmp	ecx,DWORD[((32+28))+rsp]
	mov	rbx,QWORD[((64+56))+rsp]
	vaesdec	xmm3,xmm3,xmm0
	prefetcht0	[31+r15]
	vaesdec	xmm4,xmm4,xmm0
	prefetcht0	[15+r13]
	vaesdec	xmm5,xmm5,xmm0
	lea	rbx,[rbx*1+r15]
	cmovge	r15,rsp
	vaesdec	xmm6,xmm6,xmm0
	cmovg	rbx,rsp
	vaesdec	xmm7,xmm7,xmm0
	sub	rbx,r15
	vaesdec	xmm8,xmm8,xmm0
	vmovdqu	xmm13,XMMWORD[16+r15]
	mov	QWORD[((64+56))+rsp],rbx
	vaesdec	xmm9,xmm9,xmm0
	vmovups	xmm0,XMMWORD[40+rsi]
	lea	r15,[16+rbx*1+r15]
	vmovdqu	xmm14,XMMWORD[32+rsp]
	prefetcht0	[15+r14]
	prefetcht0	[15+r15]
	cmp	eax,11
	jb	NEAR $L$dec8x_tail

	vaesdec	xmm2,xmm2,xmm1
	vaesdec	xmm3,xmm3,xmm1
	vaesdec	xmm4,xmm4,xmm1
	vaesdec	xmm5,xmm5,xmm1
	vaesdec	xmm6,xmm6,xmm1
	vaesdec	xmm7,xmm7,xmm1
	vaesdec	xmm8,xmm8,xmm1
	vaesdec	xmm9,xmm9,xmm1
	vmovups	xmm1,XMMWORD[((176-120))+rsi]

	vaesdec	xmm2,xmm2,xmm0
	vaesdec	xmm3,xmm3,xmm0
	vaesdec	xmm4,xmm4,xmm0
	vaesdec	xmm5,xmm5,xmm0
	vaesdec	xmm6,xmm6,xmm0
	vaesdec	xmm7,xmm7,xmm0
	vaesdec	xmm8,xmm8,xmm0
	vaesdec	xmm9,xmm9,xmm0
	vmovups	xmm0,XMMWORD[((192-120))+rsi]
	je	NEAR $L$dec8x_tail

	vaesdec	xmm2,xmm2,xmm1
	vaesdec	xmm3,xmm3,xmm1
	vaesdec	xmm4,xmm4,xmm1
	vaesdec	xmm5,xmm5,xmm1
	vaesdec	xmm6,xmm6,xmm1
	vaesdec	xmm7,xmm7,xmm1
	vaesdec	xmm8,xmm8,xmm1
	vaesdec	xmm9,xmm9,xmm1
	vmovups	xmm1,XMMWORD[((208-120))+rsi]

	vaesdec	xmm2,xmm2,xmm0
	vaesdec	xmm3,xmm3,xmm0
	vaesdec	xmm4,xmm4,xmm0
	vaesdec	xmm5,xmm5,xmm0
	vaesdec	xmm6,xmm6,xmm0
	vaesdec	xmm7,xmm7,xmm0
	vaesdec	xmm8,xmm8,xmm0
	vaesdec	xmm9,xmm9,xmm0
	vmovups	xmm0,XMMWORD[((224-120))+rsi]

$L$dec8x_tail:
	vaesdec	xmm2,xmm2,xmm1
	vpxor	xmm15,xmm15,xmm15
	vaesdec	xmm3,xmm3,xmm1
	vaesdec	xmm4,xmm4,xmm1
	vpcmpgtd	xmm15,xmm14,xmm15
	vaesdec	xmm5,xmm5,xmm1
	vaesdec	xmm6,xmm6,xmm1
	vpaddd	xmm15,xmm15,xmm14
	vmovdqu	xmm14,XMMWORD[48+rsp]
	vaesdec	xmm7,xmm7,xmm1
	mov	rbx,QWORD[64+rsp]
	vaesdec	xmm8,xmm8,xmm1
	vaesdec	xmm9,xmm9,xmm1
	vmovups	xmm1,XMMWORD[((16-120))+rsi]

	vaesdeclast	xmm2,xmm2,xmm0
	vmovdqa	XMMWORD[32+rsp],xmm15
	vpxor	xmm15,xmm15,xmm15
	vaesdeclast	xmm3,xmm3,xmm0
	vpxor	xmm2,xmm2,XMMWORD[rbp]
	vaesdeclast	xmm4,xmm4,xmm0
	vpxor	xmm3,xmm3,XMMWORD[16+rbp]
	vpcmpgtd	xmm15,xmm14,xmm15
	vaesdeclast	xmm5,xmm5,xmm0
	vpxor	xmm4,xmm4,XMMWORD[32+rbp]
	vaesdeclast	xmm6,xmm6,xmm0
	vpxor	xmm5,xmm5,XMMWORD[48+rbp]
	vpaddd	xmm14,xmm14,xmm15
	vmovdqu	xmm15,XMMWORD[((-120))+rsi]
	vaesdeclast	xmm7,xmm7,xmm0
	vpxor	xmm6,xmm6,XMMWORD[64+rbp]
	vaesdeclast	xmm8,xmm8,xmm0
	vpxor	xmm7,xmm7,XMMWORD[80+rbp]
	vmovdqa	XMMWORD[48+rsp],xmm14
	vaesdeclast	xmm9,xmm9,xmm0
	vpxor	xmm8,xmm8,XMMWORD[96+rbp]
	vmovups	xmm0,XMMWORD[((32-120))+rsi]

	vmovups	XMMWORD[(-16)+r8],xmm2
	sub	r8,rbx
	vmovdqu	xmm2,XMMWORD[((128+0))+rsp]
	vpxor	xmm9,xmm9,XMMWORD[112+rbp]
	vmovups	XMMWORD[(-16)+r9],xmm3
	sub	r9,QWORD[72+rsp]
	vmovdqu	XMMWORD[rbp],xmm2
	vpxor	xmm2,xmm2,xmm15
	vmovdqu	xmm3,XMMWORD[((128+16))+rsp]
	vmovups	XMMWORD[(-16)+r10],xmm4
	sub	r10,QWORD[80+rsp]
	vmovdqu	XMMWORD[16+rbp],xmm3
	vpxor	xmm3,xmm3,xmm15
	vmovdqu	xmm4,XMMWORD[((128+32))+rsp]
	vmovups	XMMWORD[(-16)+r11],xmm5
	sub	r11,QWORD[88+rsp]
	vmovdqu	XMMWORD[32+rbp],xmm4
	vpxor	xmm4,xmm4,xmm15
	vmovdqu	xmm5,XMMWORD[((128+48))+rsp]
	vmovups	XMMWORD[(-16)+r12],xmm6
	sub	r12,QWORD[96+rsp]
	vmovdqu	XMMWORD[48+rbp],xmm5
	vpxor	xmm5,xmm5,xmm15
	vmovdqu	XMMWORD[64+rbp],xmm10
	vpxor	xmm6,xmm15,xmm10
	vmovups	XMMWORD[(-16)+r13],xmm7
	sub	r13,QWORD[104+rsp]
	vmovdqu	XMMWORD[80+rbp],xmm11
	vpxor	xmm7,xmm15,xmm11
	vmovups	XMMWORD[(-16)+r14],xmm8
	sub	r14,QWORD[112+rsp]
	vmovdqu	XMMWORD[96+rbp],xmm12
	vpxor	xmm8,xmm15,xmm12
	vmovups	XMMWORD[(-16)+r15],xmm9
	sub	r15,QWORD[120+rsp]
	vmovdqu	XMMWORD[112+rbp],xmm13
	vpxor	xmm9,xmm15,xmm13

	xor	rbp,128
	dec	edx
	jnz	NEAR $L$oop_dec8x

	mov	rax,QWORD[16+rsp]






$L$dec8x_done:
	vzeroupper
	movaps	xmm6,XMMWORD[((-216))+rax]
	movaps	xmm7,XMMWORD[((-200))+rax]
	movaps	xmm8,XMMWORD[((-184))+rax]
	movaps	xmm9,XMMWORD[((-168))+rax]
	movaps	xmm10,XMMWORD[((-152))+rax]
	movaps	xmm11,XMMWORD[((-136))+rax]
	movaps	xmm12,XMMWORD[((-120))+rax]
	movaps	xmm13,XMMWORD[((-104))+rax]
	movaps	xmm14,XMMWORD[((-88))+rax]
	movaps	xmm15,XMMWORD[((-72))+rax]
	mov	r15,QWORD[((-48))+rax]

	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbp,QWORD[((-16))+rax]

	mov	rbx,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$dec8x_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_multi_cbc_decrypt_avx:
EXTERN	__imp_RtlVirtualUnwind

ALIGN	16
se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$in_prologue

	mov	rax,QWORD[152+r8]

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$in_prologue

	mov	rax,QWORD[16+rax]

	mov	rbx,QWORD[((-8))+rax]
	mov	rbp,QWORD[((-16))+rax]
	mov	r12,QWORD[((-24))+rax]
	mov	r13,QWORD[((-32))+rax]
	mov	r14,QWORD[((-40))+rax]
	mov	r15,QWORD[((-48))+rax]
	mov	QWORD[144+r8],rbx
	mov	QWORD[160+r8],rbp
	mov	QWORD[216+r8],r12
	mov	QWORD[224+r8],r13
	mov	QWORD[232+r8],r14
	mov	QWORD[240+r8],r15

	lea	rsi,[((-56-160))+rax]
	lea	rdi,[512+r8]
	mov	ecx,20
	DD	0xa548f3fc

$L$in_prologue:
	mov	rdi,QWORD[8+rax]
	mov	rsi,QWORD[16+rax]
	mov	QWORD[152+r8],rax
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi

	mov	rdi,QWORD[40+r9]
	mov	rsi,r8
	mov	ecx,154
	DD	0xa548f3fc

	mov	rsi,r9
	xor	rcx,rcx
	mov	rdx,QWORD[8+rsi]
	mov	r8,QWORD[rsi]
	mov	r9,QWORD[16+rsi]
	mov	r10,QWORD[40+rsi]
	lea	r11,[56+rsi]
	lea	r12,[24+rsi]
	mov	QWORD[32+rsp],r10
	mov	QWORD[40+rsp],r11
	mov	QWORD[48+rsp],r12
	mov	QWORD[56+rsp],rcx
	call	QWORD[__imp_RtlVirtualUnwind]

	mov	eax,1
	add	rsp,64
	popfq
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	pop	rbx
	pop	rdi
	pop	rsi
	DB	0F3h,0C3h		;repret


section	.pdata rdata align=4
ALIGN	4
	DD	$L$SEH_begin_aesni_multi_cbc_encrypt wrt ..imagebase
	DD	$L$SEH_end_aesni_multi_cbc_encrypt wrt ..imagebase
	DD	$L$SEH_info_aesni_multi_cbc_encrypt wrt ..imagebase
	DD	$L$SEH_begin_aesni_multi_cbc_decrypt wrt ..imagebase
	DD	$L$SEH_end_aesni_multi_cbc_decrypt wrt ..imagebase
	DD	$L$SEH_info_aesni_multi_cbc_decrypt wrt ..imagebase
	DD	$L$SEH_begin_aesni_multi_cbc_encrypt_avx wrt ..imagebase
	DD	$L$SEH_end_aesni_multi_cbc_encrypt_avx wrt ..imagebase
	DD	$L$SEH_info_aesni_multi_cbc_encrypt_avx wrt ..imagebase
	DD	$L$SEH_begin_aesni_multi_cbc_decrypt_avx wrt ..imagebase
	DD	$L$SEH_end_aesni_multi_cbc_decrypt_avx wrt ..imagebase
	DD	$L$SEH_info_aesni_multi_cbc_decrypt_avx wrt ..imagebase
section	.xdata rdata align=8
ALIGN	8
$L$SEH_info_aesni_multi_cbc_encrypt:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$enc4x_body wrt ..imagebase,$L$enc4x_epilogue wrt ..imagebase
$L$SEH_info_aesni_multi_cbc_decrypt:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$dec4x_body wrt ..imagebase,$L$dec4x_epilogue wrt ..imagebase
$L$SEH_info_aesni_multi_cbc_encrypt_avx:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$enc8x_body wrt ..imagebase,$L$enc8x_epilogue wrt ..imagebase
$L$SEH_info_aesni_multi_cbc_decrypt_avx:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$dec8x_body wrt ..imagebase,$L$dec8x_epilogue wrt ..imagebase
                                                                                           node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/aes/aesni-sha1-x86_64.asm           0000664 0000000 0000000 00000163560 14746647661 0030170 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        default	rel
%define XMMWORD
%define YMMWORD
%define ZMMWORD
section	.text code align=64

EXTERN	OPENSSL_ia32cap_P

global	aesni_cbc_sha1_enc

ALIGN	32
aesni_cbc_sha1_enc:


	mov	r10d,DWORD[((OPENSSL_ia32cap_P+0))]
	mov	r11,QWORD[((OPENSSL_ia32cap_P+4))]
	bt	r11,61
	jc	NEAR aesni_cbc_sha1_enc_shaext
	and	r11d,268435456
	and	r10d,1073741824
	or	r10d,r11d
	cmp	r10d,1342177280
	je	NEAR aesni_cbc_sha1_enc_avx
	jmp	NEAR aesni_cbc_sha1_enc_ssse3
	DB	0F3h,0C3h		;repret



ALIGN	32
aesni_cbc_sha1_enc_ssse3:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_cbc_sha1_enc_ssse3:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



	mov	r10,QWORD[56+rsp]


	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

	lea	rsp,[((-264))+rsp]



	movaps	XMMWORD[(96+0)+rsp],xmm6
	movaps	XMMWORD[(96+16)+rsp],xmm7
	movaps	XMMWORD[(96+32)+rsp],xmm8
	movaps	XMMWORD[(96+48)+rsp],xmm9
	movaps	XMMWORD[(96+64)+rsp],xmm10
	movaps	XMMWORD[(96+80)+rsp],xmm11
	movaps	XMMWORD[(96+96)+rsp],xmm12
	movaps	XMMWORD[(96+112)+rsp],xmm13
	movaps	XMMWORD[(96+128)+rsp],xmm14
	movaps	XMMWORD[(96+144)+rsp],xmm15
$L$prologue_ssse3:
	mov	r12,rdi
	mov	r13,rsi
	mov	r14,rdx
	lea	r15,[112+rcx]
	movdqu	xmm2,XMMWORD[r8]
	mov	QWORD[88+rsp],r8
	shl	r14,6
	sub	r13,r12
	mov	r8d,DWORD[((240-112))+r15]
	add	r14,r10

	lea	r11,[K_XX_XX]
	mov	eax,DWORD[r9]
	mov	ebx,DWORD[4+r9]
	mov	ecx,DWORD[8+r9]
	mov	edx,DWORD[12+r9]
	mov	esi,ebx
	mov	ebp,DWORD[16+r9]
	mov	edi,ecx
	xor	edi,edx
	and	esi,edi

	movdqa	xmm3,XMMWORD[64+r11]
	movdqa	xmm13,XMMWORD[r11]
	movdqu	xmm4,XMMWORD[r10]
	movdqu	xmm5,XMMWORD[16+r10]
	movdqu	xmm6,XMMWORD[32+r10]
	movdqu	xmm7,XMMWORD[48+r10]
DB	102,15,56,0,227
DB	102,15,56,0,235
DB	102,15,56,0,243
	add	r10,64
	paddd	xmm4,xmm13
DB	102,15,56,0,251
	paddd	xmm5,xmm13
	paddd	xmm6,xmm13
	movdqa	XMMWORD[rsp],xmm4
	psubd	xmm4,xmm13
	movdqa	XMMWORD[16+rsp],xmm5
	psubd	xmm5,xmm13
	movdqa	XMMWORD[32+rsp],xmm6
	psubd	xmm6,xmm13
	movups	xmm15,XMMWORD[((-112))+r15]
	movups	xmm0,XMMWORD[((16-112))+r15]
	jmp	NEAR $L$oop_ssse3
ALIGN	32
$L$oop_ssse3:
	ror	ebx,2
	movups	xmm14,XMMWORD[r12]
	xorps	xmm14,xmm15
	xorps	xmm2,xmm14
	movups	xmm1,XMMWORD[((-80))+r15]
DB	102,15,56,220,208
	pshufd	xmm8,xmm4,238
	xor	esi,edx
	movdqa	xmm12,xmm7
	paddd	xmm13,xmm7
	mov	edi,eax
	add	ebp,DWORD[rsp]
	punpcklqdq	xmm8,xmm5
	xor	ebx,ecx
	rol	eax,5
	add	ebp,esi
	psrldq	xmm12,4
	and	edi,ebx
	xor	ebx,ecx
	pxor	xmm8,xmm4
	add	ebp,eax
	ror	eax,7
	pxor	xmm12,xmm6
	xor	edi,ecx
	mov	esi,ebp
	add	edx,DWORD[4+rsp]
	pxor	xmm8,xmm12
	xor	eax,ebx
	rol	ebp,5
	movdqa	XMMWORD[48+rsp],xmm13
	add	edx,edi
	movups	xmm0,XMMWORD[((-64))+r15]
DB	102,15,56,220,209
	and	esi,eax
	movdqa	xmm3,xmm8
	xor	eax,ebx
	add	edx,ebp
	ror	ebp,7
	movdqa	xmm12,xmm8
	xor	esi,ebx
	pslldq	xmm3,12
	paddd	xmm8,xmm8
	mov	edi,edx
	add	ecx,DWORD[8+rsp]
	psrld	xmm12,31
	xor	ebp,eax
	rol	edx,5
	add	ecx,esi
	movdqa	xmm13,xmm3
	and	edi,ebp
	xor	ebp,eax
	psrld	xmm3,30
	add	ecx,edx
	ror	edx,7
	por	xmm8,xmm12
	xor	edi,eax
	mov	esi,ecx
	add	ebx,DWORD[12+rsp]
	movups	xmm1,XMMWORD[((-48))+r15]
DB	102,15,56,220,208
	pslld	xmm13,2
	pxor	xmm8,xmm3
	xor	edx,ebp
	movdqa	xmm3,XMMWORD[r11]
	rol	ecx,5
	add	ebx,edi
	and	esi,edx
	pxor	xmm8,xmm13
	xor	edx,ebp
	add	ebx,ecx
	ror	ecx,7
	pshufd	xmm9,xmm5,238
	xor	esi,ebp
	movdqa	xmm13,xmm8
	paddd	xmm3,xmm8
	mov	edi,ebx
	add	eax,DWORD[16+rsp]
	punpcklqdq	xmm9,xmm6
	xor	ecx,edx
	rol	ebx,5
	add	eax,esi
	psrldq	xmm13,4
	and	edi,ecx
	xor	ecx,edx
	pxor	xmm9,xmm5
	add	eax,ebx
	ror	ebx,7
	movups	xmm0,XMMWORD[((-32))+r15]
DB	102,15,56,220,209
	pxor	xmm13,xmm7
	xor	edi,edx
	mov	esi,eax
	add	ebp,DWORD[20+rsp]
	pxor	xmm9,xmm13
	xor	ebx,ecx
	rol	eax,5
	movdqa	XMMWORD[rsp],xmm3
	add	ebp,edi
	and	esi,ebx
	movdqa	xmm12,xmm9
	xor	ebx,ecx
	add	ebp,eax
	ror	eax,7
	movdqa	xmm13,xmm9
	xor	esi,ecx
	pslldq	xmm12,12
	paddd	xmm9,xmm9
	mov	edi,ebp
	add	edx,DWORD[24+rsp]
	psrld	xmm13,31
	xor	eax,ebx
	rol	ebp,5
	add	edx,esi
	movups	xmm1,XMMWORD[((-16))+r15]
DB	102,15,56,220,208
	movdqa	xmm3,xmm12
	and	edi,eax
	xor	eax,ebx
	psrld	xmm12,30
	add	edx,ebp
	ror	ebp,7
	por	xmm9,xmm13
	xor	edi,ebx
	mov	esi,edx
	add	ecx,DWORD[28+rsp]
	pslld	xmm3,2
	pxor	xmm9,xmm12
	xor	ebp,eax
	movdqa	xmm12,XMMWORD[16+r11]
	rol	edx,5
	add	ecx,edi
	and	esi,ebp
	pxor	xmm9,xmm3
	xor	ebp,eax
	add	ecx,edx
	ror	edx,7
	pshufd	xmm10,xmm6,238
	xor	esi,eax
	movdqa	xmm3,xmm9
	paddd	xmm12,xmm9
	mov	edi,ecx
	add	ebx,DWORD[32+rsp]
	movups	xmm0,XMMWORD[r15]
DB	102,15,56,220,209
	punpcklqdq	xmm10,xmm7
	xor	edx,ebp
	rol	ecx,5
	add	ebx,esi
	psrldq	xmm3,4
	and	edi,edx
	xor	edx,ebp
	pxor	xmm10,xmm6
	add	ebx,ecx
	ror	ecx,7
	pxor	xmm3,xmm8
	xor	edi,ebp
	mov	esi,ebx
	add	eax,DWORD[36+rsp]
	pxor	xmm10,xmm3
	xor	ecx,edx
	rol	ebx,5
	movdqa	XMMWORD[16+rsp],xmm12
	add	eax,edi
	and	esi,ecx
	movdqa	xmm13,xmm10
	xor	ecx,edx
	add	eax,ebx
	ror	ebx,7
	movups	xmm1,XMMWORD[16+r15]
DB	102,15,56,220,208
	movdqa	xmm3,xmm10
	xor	esi,edx
	pslldq	xmm13,12
	paddd	xmm10,xmm10
	mov	edi,eax
	add	ebp,DWORD[40+rsp]
	psrld	xmm3,31
	xor	ebx,ecx
	rol	eax,5
	add	ebp,esi
	movdqa	xmm12,xmm13
	and	edi,ebx
	xor	ebx,ecx
	psrld	xmm13,30
	add	ebp,eax
	ror	eax,7
	por	xmm10,xmm3
	xor	edi,ecx
	mov	esi,ebp
	add	edx,DWORD[44+rsp]
	pslld	xmm12,2
	pxor	xmm10,xmm13
	xor	eax,ebx
	movdqa	xmm13,XMMWORD[16+r11]
	rol	ebp,5
	add	edx,edi
	movups	xmm0,XMMWORD[32+r15]
DB	102,15,56,220,209
	and	esi,eax
	pxor	xmm10,xmm12
	xor	eax,ebx
	add	edx,ebp
	ror	ebp,7
	pshufd	xmm11,xmm7,238
	xor	esi,ebx
	movdqa	xmm12,xmm10
	paddd	xmm13,xmm10
	mov	edi,edx
	add	ecx,DWORD[48+rsp]
	punpcklqdq	xmm11,xmm8
	xor	ebp,eax
	rol	edx,5
	add	ecx,esi
	psrldq	xmm12,4
	and	edi,ebp
	xor	ebp,eax
	pxor	xmm11,xmm7
	add	ecx,edx
	ror	edx,7
	pxor	xmm12,xmm9
	xor	edi,eax
	mov	esi,ecx
	add	ebx,DWORD[52+rsp]
	movups	xmm1,XMMWORD[48+r15]
DB	102,15,56,220,208
	pxor	xmm11,xmm12
	xor	edx,ebp
	rol	ecx,5
	movdqa	XMMWORD[32+rsp],xmm13
	add	ebx,edi
	and	esi,edx
	movdqa	xmm3,xmm11
	xor	edx,ebp
	add	ebx,ecx
	ror	ecx,7
	movdqa	xmm12,xmm11
	xor	esi,ebp
	pslldq	xmm3,12
	paddd	xmm11,xmm11
	mov	edi,ebx
	add	eax,DWORD[56+rsp]
	psrld	xmm12,31
	xor	ecx,edx
	rol	ebx,5
	add	eax,esi
	movdqa	xmm13,xmm3
	and	edi,ecx
	xor	ecx,edx
	psrld	xmm3,30
	add	eax,ebx
	ror	ebx,7
	cmp	r8d,11
	jb	NEAR $L$aesenclast1
	movups	xmm0,XMMWORD[64+r15]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[80+r15]
DB	102,15,56,220,208
	je	NEAR $L$aesenclast1
	movups	xmm0,XMMWORD[96+r15]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[112+r15]
DB	102,15,56,220,208
$L$aesenclast1:
DB	102,15,56,221,209
	movups	xmm0,XMMWORD[((16-112))+r15]
	por	xmm11,xmm12
	xor	edi,edx
	mov	esi,eax
	add	ebp,DWORD[60+rsp]
	pslld	xmm13,2
	pxor	xmm11,xmm3
	xor	ebx,ecx
	movdqa	xmm3,XMMWORD[16+r11]
	rol	eax,5
	add	ebp,edi
	and	esi,ebx
	pxor	xmm11,xmm13
	pshufd	xmm13,xmm10,238
	xor	ebx,ecx
	add	ebp,eax
	ror	eax,7
	pxor	xmm4,xmm8
	xor	esi,ecx
	mov	edi,ebp
	add	edx,DWORD[rsp]
	punpcklqdq	xmm13,xmm11
	xor	eax,ebx
	rol	ebp,5
	pxor	xmm4,xmm5
	add	edx,esi
	movups	xmm14,XMMWORD[16+r12]
	xorps	xmm14,xmm15
	movups	XMMWORD[r13*1+r12],xmm2
	xorps	xmm2,xmm14
	movups	xmm1,XMMWORD[((-80))+r15]
DB	102,15,56,220,208
	and	edi,eax
	movdqa	xmm12,xmm3
	xor	eax,ebx
	paddd	xmm3,xmm11
	add	edx,ebp
	pxor	xmm4,xmm13
	ror	ebp,7
	xor	edi,ebx
	mov	esi,edx
	add	ecx,DWORD[4+rsp]
	movdqa	xmm13,xmm4
	xor	ebp,eax
	rol	edx,5
	movdqa	XMMWORD[48+rsp],xmm3
	add	ecx,edi
	and	esi,ebp
	xor	ebp,eax
	pslld	xmm4,2
	add	ecx,edx
	ror	edx,7
	psrld	xmm13,30
	xor	esi,eax
	mov	edi,ecx
	add	ebx,DWORD[8+rsp]
	movups	xmm0,XMMWORD[((-64))+r15]
DB	102,15,56,220,209
	por	xmm4,xmm13
	xor	edx,ebp
	rol	ecx,5
	pshufd	xmm3,xmm11,238
	add	ebx,esi
	and	edi,edx
	xor	edx,ebp
	add	ebx,ecx
	add	eax,DWORD[12+rsp]
	xor	edi,ebp
	mov	esi,ebx
	rol	ebx,5
	add	eax,edi
	xor	esi,edx
	ror	ecx,7
	add	eax,ebx
	pxor	xmm5,xmm9
	add	ebp,DWORD[16+rsp]
	movups	xmm1,XMMWORD[((-48))+r15]
DB	102,15,56,220,208
	xor	esi,ecx
	punpcklqdq	xmm3,xmm4
	mov	edi,eax
	rol	eax,5
	pxor	xmm5,xmm6
	add	ebp,esi
	xor	edi,ecx
	movdqa	xmm13,xmm12
	ror	ebx,7
	paddd	xmm12,xmm4
	add	ebp,eax
	pxor	xmm5,xmm3
	add	edx,DWORD[20+rsp]
	xor	edi,ebx
	mov	esi,ebp
	rol	ebp,5
	movdqa	xmm3,xmm5
	add	edx,edi
	xor	esi,ebx
	movdqa	XMMWORD[rsp],xmm12
	ror	eax,7
	add	edx,ebp
	add	ecx,DWORD[24+rsp]
	pslld	xmm5,2
	xor	esi,eax
	mov	edi,edx
	psrld	xmm3,30
	rol	edx,5
	add	ecx,esi
	movups	xmm0,XMMWORD[((-32))+r15]
DB	102,15,56,220,209
	xor	edi,eax
	ror	ebp,7
	por	xmm5,xmm3
	add	ecx,edx
	add	ebx,DWORD[28+rsp]
	pshufd	xmm12,xmm4,238
	xor	edi,ebp
	mov	esi,ecx
	rol	ecx,5
	add	ebx,edi
	xor	esi,ebp
	ror	edx,7
	add	ebx,ecx
	pxor	xmm6,xmm10
	add	eax,DWORD[32+rsp]
	xor	esi,edx
	punpcklqdq	xmm12,xmm5
	mov	edi,ebx
	rol	ebx,5
	pxor	xmm6,xmm7
	add	eax,esi
	xor	edi,edx
	movdqa	xmm3,XMMWORD[32+r11]
	ror	ecx,7
	paddd	xmm13,xmm5
	add	eax,ebx
	pxor	xmm6,xmm12
	add	ebp,DWORD[36+rsp]
	movups	xmm1,XMMWORD[((-16))+r15]
DB	102,15,56,220,208
	xor	edi,ecx
	mov	esi,eax
	rol	eax,5
	movdqa	xmm12,xmm6
	add	ebp,edi
	xor	esi,ecx
	movdqa	XMMWORD[16+rsp],xmm13
	ror	ebx,7
	add	ebp,eax
	add	edx,DWORD[40+rsp]
	pslld	xmm6,2
	xor	esi,ebx
	mov	edi,ebp
	psrld	xmm12,30
	rol	ebp,5
	add	edx,esi
	xor	edi,ebx
	ror	eax,7
	por	xmm6,xmm12
	add	edx,ebp
	add	ecx,DWORD[44+rsp]
	pshufd	xmm13,xmm5,238
	xor	edi,eax
	mov	esi,edx
	rol	edx,5
	add	ecx,edi
	movups	xmm0,XMMWORD[r15]
DB	102,15,56,220,209
	xor	esi,eax
	ror	ebp,7
	add	ecx,edx
	pxor	xmm7,xmm11
	add	ebx,DWORD[48+rsp]
	xor	esi,ebp
	punpcklqdq	xmm13,xmm6
	mov	edi,ecx
	rol	ecx,5
	pxor	xmm7,xmm8
	add	ebx,esi
	xor	edi,ebp
	movdqa	xmm12,xmm3
	ror	edx,7
	paddd	xmm3,xmm6
	add	ebx,ecx
	pxor	xmm7,xmm13
	add	eax,DWORD[52+rsp]
	xor	edi,edx
	mov	esi,ebx
	rol	ebx,5
	movdqa	xmm13,xmm7
	add	eax,edi
	xor	esi,edx
	movdqa	XMMWORD[32+rsp],xmm3
	ror	ecx,7
	add	eax,ebx
	add	ebp,DWORD[56+rsp]
	movups	xmm1,XMMWORD[16+r15]
DB	102,15,56,220,208
	pslld	xmm7,2
	xor	esi,ecx
	mov	edi,eax
	psrld	xmm13,30
	rol	eax,5
	add	ebp,esi
	xor	edi,ecx
	ror	ebx,7
	por	xmm7,xmm13
	add	ebp,eax
	add	edx,DWORD[60+rsp]
	pshufd	xmm3,xmm6,238
	xor	edi,ebx
	mov	esi,ebp
	rol	ebp,5
	add	edx,edi
	xor	esi,ebx
	ror	eax,7
	add	edx,ebp
	pxor	xmm8,xmm4
	add	ecx,DWORD[rsp]
	xor	esi,eax
	punpcklqdq	xmm3,xmm7
	mov	edi,edx
	rol	edx,5
	pxor	xmm8,xmm9
	add	ecx,esi
	movups	xmm0,XMMWORD[32+r15]
DB	102,15,56,220,209
	xor	edi,eax
	movdqa	xmm13,xmm12
	ror	ebp,7
	paddd	xmm12,xmm7
	add	ecx,edx
	pxor	xmm8,xmm3
	add	ebx,DWORD[4+rsp]
	xor	edi,ebp
	mov	esi,ecx
	rol	ecx,5
	movdqa	xmm3,xmm8
	add	ebx,edi
	xor	esi,ebp
	movdqa	XMMWORD[48+rsp],xmm12
	ror	edx,7
	add	ebx,ecx
	add	eax,DWORD[8+rsp]
	pslld	xmm8,2
	xor	esi,edx
	mov	edi,ebx
	psrld	xmm3,30
	rol	ebx,5
	add	eax,esi
	xor	edi,edx
	ror	ecx,7
	por	xmm8,xmm3
	add	eax,ebx
	add	ebp,DWORD[12+rsp]
	movups	xmm1,XMMWORD[48+r15]
DB	102,15,56,220,208
	pshufd	xmm12,xmm7,238
	xor	edi,ecx
	mov	esi,eax
	rol	eax,5
	add	ebp,edi
	xor	esi,ecx
	ror	ebx,7
	add	ebp,eax
	pxor	xmm9,xmm5
	add	edx,DWORD[16+rsp]
	xor	esi,ebx
	punpcklqdq	xmm12,xmm8
	mov	edi,ebp
	rol	ebp,5
	pxor	xmm9,xmm10
	add	edx,esi
	xor	edi,ebx
	movdqa	xmm3,xmm13
	ror	eax,7
	paddd	xmm13,xmm8
	add	edx,ebp
	pxor	xmm9,xmm12
	add	ecx,DWORD[20+rsp]
	xor	edi,eax
	mov	esi,edx
	rol	edx,5
	movdqa	xmm12,xmm9
	add	ecx,edi
	cmp	r8d,11
	jb	NEAR $L$aesenclast2
	movups	xmm0,XMMWORD[64+r15]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[80+r15]
DB	102,15,56,220,208
	je	NEAR $L$aesenclast2
	movups	xmm0,XMMWORD[96+r15]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[112+r15]
DB	102,15,56,220,208
$L$aesenclast2:
DB	102,15,56,221,209
	movups	xmm0,XMMWORD[((16-112))+r15]
	xor	esi,eax
	movdqa	XMMWORD[rsp],xmm13
	ror	ebp,7
	add	ecx,edx
	add	ebx,DWORD[24+rsp]
	pslld	xmm9,2
	xor	esi,ebp
	mov	edi,ecx
	psrld	xmm12,30
	rol	ecx,5
	add	ebx,esi
	xor	edi,ebp
	ror	edx,7
	por	xmm9,xmm12
	add	ebx,ecx
	add	eax,DWORD[28+rsp]
	pshufd	xmm13,xmm8,238
	ror	ecx,7
	mov	esi,ebx
	xor	edi,edx
	rol	ebx,5
	add	eax,edi
	xor	esi,ecx
	xor	ecx,edx
	add	eax,ebx
	pxor	xmm10,xmm6
	add	ebp,DWORD[32+rsp]
	movups	xmm14,XMMWORD[32+r12]
	xorps	xmm14,xmm15
	movups	XMMWORD[16+r12*1+r13],xmm2
	xorps	xmm2,xmm14
	movups	xmm1,XMMWORD[((-80))+r15]
DB	102,15,56,220,208
	and	esi,ecx
	xor	ecx,edx
	ror	ebx,7
	punpcklqdq	xmm13,xmm9
	mov	edi,eax
	xor	esi,ecx
	pxor	xmm10,xmm11
	rol	eax,5
	add	ebp,esi
	movdqa	xmm12,xmm3
	xor	edi,ebx
	paddd	xmm3,xmm9
	xor	ebx,ecx
	pxor	xmm10,xmm13
	add	ebp,eax
	add	edx,DWORD[36+rsp]
	and	edi,ebx
	xor	ebx,ecx
	ror	eax,7
	movdqa	xmm13,xmm10
	mov	esi,ebp
	xor	edi,ebx
	movdqa	XMMWORD[16+rsp],xmm3
	rol	ebp,5
	add	edx,edi
	movups	xmm0,XMMWORD[((-64))+r15]
DB	102,15,56,220,209
	xor	esi,eax
	pslld	xmm10,2
	xor	eax,ebx
	add	edx,ebp
	psrld	xmm13,30
	add	ecx,DWORD[40+rsp]
	and	esi,eax
	xor	eax,ebx
	por	xmm10,xmm13
	ror	ebp,7
	mov	edi,edx
	xor	esi,eax
	rol	edx,5
	pshufd	xmm3,xmm9,238
	add	ecx,esi
	xor	edi,ebp
	xor	ebp,eax
	add	ecx,edx
	add	ebx,DWORD[44+rsp]
	and	edi,ebp
	xor	ebp,eax
	ror	edx,7
	movups	xmm1,XMMWORD[((-48))+r15]
DB	102,15,56,220,208
	mov	esi,ecx
	xor	edi,ebp
	rol	ecx,5
	add	ebx,edi
	xor	esi,edx
	xor	edx,ebp
	add	ebx,ecx
	pxor	xmm11,xmm7
	add	eax,DWORD[48+rsp]
	and	esi,edx
	xor	edx,ebp
	ror	ecx,7
	punpcklqdq	xmm3,xmm10
	mov	edi,ebx
	xor	esi,edx
	pxor	xmm11,xmm4
	rol	ebx,5
	add	eax,esi
	movdqa	xmm13,XMMWORD[48+r11]
	xor	edi,ecx
	paddd	xmm12,xmm10
	xor	ecx,edx
	pxor	xmm11,xmm3
	add	eax,ebx
	add	ebp,DWORD[52+rsp]
	movups	xmm0,XMMWORD[((-32))+r15]
DB	102,15,56,220,209
	and	edi,ecx
	xor	ecx,edx
	ror	ebx,7
	movdqa	xmm3,xmm11
	mov	esi,eax
	xor	edi,ecx
	movdqa	XMMWORD[32+rsp],xmm12
	rol	eax,5
	add	ebp,edi
	xor	esi,ebx
	pslld	xmm11,2
	xor	ebx,ecx
	add	ebp,eax
	psrld	xmm3,30
	add	edx,DWORD[56+rsp]
	and	esi,ebx
	xor	ebx,ecx
	por	xmm11,xmm3
	ror	eax,7
	mov	edi,ebp
	xor	esi,ebx
	rol	ebp,5
	pshufd	xmm12,xmm10,238
	add	edx,esi
	movups	xmm1,XMMWORD[((-16))+r15]
DB	102,15,56,220,208
	xor	edi,eax
	xor	eax,ebx
	add	edx,ebp
	add	ecx,DWORD[60+rsp]
	and	edi,eax
	xor	eax,ebx
	ror	ebp,7
	mov	esi,edx
	xor	edi,eax
	rol	edx,5
	add	ecx,edi
	xor	esi,ebp
	xor	ebp,eax
	add	ecx,edx
	pxor	xmm4,xmm8
	add	ebx,DWORD[rsp]
	and	esi,ebp
	xor	ebp,eax
	ror	edx,7
	movups	xmm0,XMMWORD[r15]
DB	102,15,56,220,209
	punpcklqdq	xmm12,xmm11
	mov	edi,ecx
	xor	esi,ebp
	pxor	xmm4,xmm5
	rol	ecx,5
	add	ebx,esi
	movdqa	xmm3,xmm13
	xor	edi,edx
	paddd	xmm13,xmm11
	xor	edx,ebp
	pxor	xmm4,xmm12
	add	ebx,ecx
	add	eax,DWORD[4+rsp]
	and	edi,edx
	xor	edx,ebp
	ror	ecx,7
	movdqa	xmm12,xmm4
	mov	esi,ebx
	xor	edi,edx
	movdqa	XMMWORD[48+rsp],xmm13
	rol	ebx,5
	add	eax,edi
	xor	esi,ecx
	pslld	xmm4,2
	xor	ecx,edx
	add	eax,ebx
	psrld	xmm12,30
	add	ebp,DWORD[8+rsp]
	movups	xmm1,XMMWORD[16+r15]
DB	102,15,56,220,208
	and	esi,ecx
	xor	ecx,edx
	por	xmm4,xmm12
	ror	ebx,7
	mov	edi,eax
	xor	esi,ecx
	rol	eax,5
	pshufd	xmm13,xmm11,238
	add	ebp,esi
	xor	edi,ebx
	xor	ebx,ecx
	add	ebp,eax
	add	edx,DWORD[12+rsp]
	and	edi,ebx
	xor	ebx,ecx
	ror	eax,7
	mov	esi,ebp
	xor	edi,ebx
	rol	ebp,5
	add	edx,edi
	movups	xmm0,XMMWORD[32+r15]
DB	102,15,56,220,209
	xor	esi,eax
	xor	eax,ebx
	add	edx,ebp
	pxor	xmm5,xmm9
	add	ecx,DWORD[16+rsp]
	and	esi,eax
	xor	eax,ebx
	ror	ebp,7
	punpcklqdq	xmm13,xmm4
	mov	edi,edx
	xor	esi,eax
	pxor	xmm5,xmm6
	rol	edx,5
	add	ecx,esi
	movdqa	xmm12,xmm3
	xor	edi,ebp
	paddd	xmm3,xmm4
	xor	ebp,eax
	pxor	xmm5,xmm13
	add	ecx,edx
	add	ebx,DWORD[20+rsp]
	and	edi,ebp
	xor	ebp,eax
	ror	edx,7
	movups	xmm1,XMMWORD[48+r15]
DB	102,15,56,220,208
	movdqa	xmm13,xmm5
	mov	esi,ecx
	xor	edi,ebp
	movdqa	XMMWORD[rsp],xmm3
	rol	ecx,5
	add	ebx,edi
	xor	esi,edx
	pslld	xmm5,2
	xor	edx,ebp
	add	ebx,ecx
	psrld	xmm13,30
	add	eax,DWORD[24+rsp]
	and	esi,edx
	xor	edx,ebp
	por	xmm5,xmm13
	ror	ecx,7
	mov	edi,ebx
	xor	esi,edx
	rol	ebx,5
	pshufd	xmm3,xmm4,238
	add	eax,esi
	xor	edi,ecx
	xor	ecx,edx
	add	eax,ebx
	add	ebp,DWORD[28+rsp]
	cmp	r8d,11
	jb	NEAR $L$aesenclast3
	movups	xmm0,XMMWORD[64+r15]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[80+r15]
DB	102,15,56,220,208
	je	NEAR $L$aesenclast3
	movups	xmm0,XMMWORD[96+r15]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[112+r15]
DB	102,15,56,220,208
$L$aesenclast3:
DB	102,15,56,221,209
	movups	xmm0,XMMWORD[((16-112))+r15]
	and	edi,ecx
	xor	ecx,edx
	ror	ebx,7
	mov	esi,eax
	xor	edi,ecx
	rol	eax,5
	add	ebp,edi
	xor	esi,ebx
	xor	ebx,ecx
	add	ebp,eax
	pxor	xmm6,xmm10
	add	edx,DWORD[32+rsp]
	and	esi,ebx
	xor	ebx,ecx
	ror	eax,7
	punpcklqdq	xmm3,xmm5
	mov	edi,ebp
	xor	esi,ebx
	pxor	xmm6,xmm7
	rol	ebp,5
	add	edx,esi
	movups	xmm14,XMMWORD[48+r12]
	xorps	xmm14,xmm15
	movups	XMMWORD[32+r12*1+r13],xmm2
	xorps	xmm2,xmm14
	movups	xmm1,XMMWORD[((-80))+r15]
DB	102,15,56,220,208
	movdqa	xmm13,xmm12
	xor	edi,eax
	paddd	xmm12,xmm5
	xor	eax,ebx
	pxor	xmm6,xmm3
	add	edx,ebp
	add	ecx,DWORD[36+rsp]
	and	edi,eax
	xor	eax,ebx
	ror	ebp,7
	movdqa	xmm3,xmm6
	mov	esi,edx
	xor	edi,eax
	movdqa	XMMWORD[16+rsp],xmm12
	rol	edx,5
	add	ecx,edi
	xor	esi,ebp
	pslld	xmm6,2
	xor	ebp,eax
	add	ecx,edx
	psrld	xmm3,30
	add	ebx,DWORD[40+rsp]
	and	esi,ebp
	xor	ebp,eax
	por	xmm6,xmm3
	ror	edx,7
	movups	xmm0,XMMWORD[((-64))+r15]
DB	102,15,56,220,209
	mov	edi,ecx
	xor	esi,ebp
	rol	ecx,5
	pshufd	xmm12,xmm5,238
	add	ebx,esi
	xor	edi,edx
	xor	edx,ebp
	add	ebx,ecx
	add	eax,DWORD[44+rsp]
	and	edi,edx
	xor	edx,ebp
	ror	ecx,7
	mov	esi,ebx
	xor	edi,edx
	rol	ebx,5
	add	eax,edi
	xor	esi,edx
	add	eax,ebx
	pxor	xmm7,xmm11
	add	ebp,DWORD[48+rsp]
	movups	xmm1,XMMWORD[((-48))+r15]
DB	102,15,56,220,208
	xor	esi,ecx
	punpcklqdq	xmm12,xmm6
	mov	edi,eax
	rol	eax,5
	pxor	xmm7,xmm8
	add	ebp,esi
	xor	edi,ecx
	movdqa	xmm3,xmm13
	ror	ebx,7
	paddd	xmm13,xmm6
	add	ebp,eax
	pxor	xmm7,xmm12
	add	edx,DWORD[52+rsp]
	xor	edi,ebx
	mov	esi,ebp
	rol	ebp,5
	movdqa	xmm12,xmm7
	add	edx,edi
	xor	esi,ebx
	movdqa	XMMWORD[32+rsp],xmm13
	ror	eax,7
	add	edx,ebp
	add	ecx,DWORD[56+rsp]
	pslld	xmm7,2
	xor	esi,eax
	mov	edi,edx
	psrld	xmm12,30
	rol	edx,5
	add	ecx,esi
	movups	xmm0,XMMWORD[((-32))+r15]
DB	102,15,56,220,209
	xor	edi,eax
	ror	ebp,7
	por	xmm7,xmm12
	add	ecx,edx
	add	ebx,DWORD[60+rsp]
	xor	edi,ebp
	mov	esi,ecx
	rol	ecx,5
	add	ebx,edi
	xor	esi,ebp
	ror	edx,7
	add	ebx,ecx
	add	eax,DWORD[rsp]
	xor	esi,edx
	mov	edi,ebx
	rol	ebx,5
	paddd	xmm3,xmm7
	add	eax,esi
	xor	edi,edx
	movdqa	XMMWORD[48+rsp],xmm3
	ror	ecx,7
	add	eax,ebx
	add	ebp,DWORD[4+rsp]
	movups	xmm1,XMMWORD[((-16))+r15]
DB	102,15,56,220,208
	xor	edi,ecx
	mov	esi,eax
	rol	eax,5
	add	ebp,edi
	xor	esi,ecx
	ror	ebx,7
	add	ebp,eax
	add	edx,DWORD[8+rsp]
	xor	esi,ebx
	mov	edi,ebp
	rol	ebp,5
	add	edx,esi
	xor	edi,ebx
	ror	eax,7
	add	edx,ebp
	add	ecx,DWORD[12+rsp]
	xor	edi,eax
	mov	esi,edx
	rol	edx,5
	add	ecx,edi
	movups	xmm0,XMMWORD[r15]
DB	102,15,56,220,209
	xor	esi,eax
	ror	ebp,7
	add	ecx,edx
	cmp	r10,r14
	je	NEAR $L$done_ssse3
	movdqa	xmm3,XMMWORD[64+r11]
	movdqa	xmm13,XMMWORD[r11]
	movdqu	xmm4,XMMWORD[r10]
	movdqu	xmm5,XMMWORD[16+r10]
	movdqu	xmm6,XMMWORD[32+r10]
	movdqu	xmm7,XMMWORD[48+r10]
DB	102,15,56,0,227
	add	r10,64
	add	ebx,DWORD[16+rsp]
	xor	esi,ebp
	mov	edi,ecx
DB	102,15,56,0,235
	rol	ecx,5
	add	ebx,esi
	xor	edi,ebp
	ror	edx,7
	paddd	xmm4,xmm13
	add	ebx,ecx
	add	eax,DWORD[20+rsp]
	xor	edi,edx
	mov	esi,ebx
	movdqa	XMMWORD[rsp],xmm4
	rol	ebx,5
	add	eax,edi
	xor	esi,edx
	ror	ecx,7
	psubd	xmm4,xmm13
	add	eax,ebx
	add	ebp,DWORD[24+rsp]
	movups	xmm1,XMMWORD[16+r15]
DB	102,15,56,220,208
	xor	esi,ecx
	mov	edi,eax
	rol	eax,5
	add	ebp,esi
	xor	edi,ecx
	ror	ebx,7
	add	ebp,eax
	add	edx,DWORD[28+rsp]
	xor	edi,ebx
	mov	esi,ebp
	rol	ebp,5
	add	edx,edi
	xor	esi,ebx
	ror	eax,7
	add	edx,ebp
	add	ecx,DWORD[32+rsp]
	xor	esi,eax
	mov	edi,edx
DB	102,15,56,0,243
	rol	edx,5
	add	ecx,esi
	movups	xmm0,XMMWORD[32+r15]
DB	102,15,56,220,209
	xor	edi,eax
	ror	ebp,7
	paddd	xmm5,xmm13
	add	ecx,edx
	add	ebx,DWORD[36+rsp]
	xor	edi,ebp
	mov	esi,ecx
	movdqa	XMMWORD[16+rsp],xmm5
	rol	ecx,5
	add	ebx,edi
	xor	esi,ebp
	ror	edx,7
	psubd	xmm5,xmm13
	add	ebx,ecx
	add	eax,DWORD[40+rsp]
	xor	esi,edx
	mov	edi,ebx
	rol	ebx,5
	add	eax,esi
	xor	edi,edx
	ror	ecx,7
	add	eax,ebx
	add	ebp,DWORD[44+rsp]
	movups	xmm1,XMMWORD[48+r15]
DB	102,15,56,220,208
	xor	edi,ecx
	mov	esi,eax
	rol	eax,5
	add	ebp,edi
	xor	esi,ecx
	ror	ebx,7
	add	ebp,eax
	add	edx,DWORD[48+rsp]
	xor	esi,ebx
	mov	edi,ebp
DB	102,15,56,0,251
	rol	ebp,5
	add	edx,esi
	xor	edi,ebx
	ror	eax,7
	paddd	xmm6,xmm13
	add	edx,ebp
	add	ecx,DWORD[52+rsp]
	xor	edi,eax
	mov	esi,edx
	movdqa	XMMWORD[32+rsp],xmm6
	rol	edx,5
	add	ecx,edi
	cmp	r8d,11
	jb	NEAR $L$aesenclast4
	movups	xmm0,XMMWORD[64+r15]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[80+r15]
DB	102,15,56,220,208
	je	NEAR $L$aesenclast4
	movups	xmm0,XMMWORD[96+r15]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[112+r15]
DB	102,15,56,220,208
$L$aesenclast4:
DB	102,15,56,221,209
	movups	xmm0,XMMWORD[((16-112))+r15]
	xor	esi,eax
	ror	ebp,7
	psubd	xmm6,xmm13
	add	ecx,edx
	add	ebx,DWORD[56+rsp]
	xor	esi,ebp
	mov	edi,ecx
	rol	ecx,5
	add	ebx,esi
	xor	edi,ebp
	ror	edx,7
	add	ebx,ecx
	add	eax,DWORD[60+rsp]
	xor	edi,edx
	mov	esi,ebx
	rol	ebx,5
	add	eax,edi
	ror	ecx,7
	add	eax,ebx
	movups	XMMWORD[48+r12*1+r13],xmm2
	lea	r12,[64+r12]

	add	eax,DWORD[r9]
	add	esi,DWORD[4+r9]
	add	ecx,DWORD[8+r9]
	add	edx,DWORD[12+r9]
	mov	DWORD[r9],eax
	add	ebp,DWORD[16+r9]
	mov	DWORD[4+r9],esi
	mov	ebx,esi
	mov	DWORD[8+r9],ecx
	mov	edi,ecx
	mov	DWORD[12+r9],edx
	xor	edi,edx
	mov	DWORD[16+r9],ebp
	and	esi,edi
	jmp	NEAR $L$oop_ssse3

$L$done_ssse3:
	add	ebx,DWORD[16+rsp]
	xor	esi,ebp
	mov	edi,ecx
	rol	ecx,5
	add	ebx,esi
	xor	edi,ebp
	ror	edx,7
	add	ebx,ecx
	add	eax,DWORD[20+rsp]
	xor	edi,edx
	mov	esi,ebx
	rol	ebx,5
	add	eax,edi
	xor	esi,edx
	ror	ecx,7
	add	eax,ebx
	add	ebp,DWORD[24+rsp]
	movups	xmm1,XMMWORD[16+r15]
DB	102,15,56,220,208
	xor	esi,ecx
	mov	edi,eax
	rol	eax,5
	add	ebp,esi
	xor	edi,ecx
	ror	ebx,7
	add	ebp,eax
	add	edx,DWORD[28+rsp]
	xor	edi,ebx
	mov	esi,ebp
	rol	ebp,5
	add	edx,edi
	xor	esi,ebx
	ror	eax,7
	add	edx,ebp
	add	ecx,DWORD[32+rsp]
	xor	esi,eax
	mov	edi,edx
	rol	edx,5
	add	ecx,esi
	movups	xmm0,XMMWORD[32+r15]
DB	102,15,56,220,209
	xor	edi,eax
	ror	ebp,7
	add	ecx,edx
	add	ebx,DWORD[36+rsp]
	xor	edi,ebp
	mov	esi,ecx
	rol	ecx,5
	add	ebx,edi
	xor	esi,ebp
	ror	edx,7
	add	ebx,ecx
	add	eax,DWORD[40+rsp]
	xor	esi,edx
	mov	edi,ebx
	rol	ebx,5
	add	eax,esi
	xor	edi,edx
	ror	ecx,7
	add	eax,ebx
	add	ebp,DWORD[44+rsp]
	movups	xmm1,XMMWORD[48+r15]
DB	102,15,56,220,208
	xor	edi,ecx
	mov	esi,eax
	rol	eax,5
	add	ebp,edi
	xor	esi,ecx
	ror	ebx,7
	add	ebp,eax
	add	edx,DWORD[48+rsp]
	xor	esi,ebx
	mov	edi,ebp
	rol	ebp,5
	add	edx,esi
	xor	edi,ebx
	ror	eax,7
	add	edx,ebp
	add	ecx,DWORD[52+rsp]
	xor	edi,eax
	mov	esi,edx
	rol	edx,5
	add	ecx,edi
	cmp	r8d,11
	jb	NEAR $L$aesenclast5
	movups	xmm0,XMMWORD[64+r15]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[80+r15]
DB	102,15,56,220,208
	je	NEAR $L$aesenclast5
	movups	xmm0,XMMWORD[96+r15]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[112+r15]
DB	102,15,56,220,208
$L$aesenclast5:
DB	102,15,56,221,209
	movups	xmm0,XMMWORD[((16-112))+r15]
	xor	esi,eax
	ror	ebp,7
	add	ecx,edx
	add	ebx,DWORD[56+rsp]
	xor	esi,ebp
	mov	edi,ecx
	rol	ecx,5
	add	ebx,esi
	xor	edi,ebp
	ror	edx,7
	add	ebx,ecx
	add	eax,DWORD[60+rsp]
	xor	edi,edx
	mov	esi,ebx
	rol	ebx,5
	add	eax,edi
	ror	ecx,7
	add	eax,ebx
	movups	XMMWORD[48+r12*1+r13],xmm2
	mov	r8,QWORD[88+rsp]

	add	eax,DWORD[r9]
	add	esi,DWORD[4+r9]
	add	ecx,DWORD[8+r9]
	mov	DWORD[r9],eax
	add	edx,DWORD[12+r9]
	mov	DWORD[4+r9],esi
	add	ebp,DWORD[16+r9]
	mov	DWORD[8+r9],ecx
	mov	DWORD[12+r9],edx
	mov	DWORD[16+r9],ebp
	movups	XMMWORD[r8],xmm2
	movaps	xmm6,XMMWORD[((96+0))+rsp]
	movaps	xmm7,XMMWORD[((96+16))+rsp]
	movaps	xmm8,XMMWORD[((96+32))+rsp]
	movaps	xmm9,XMMWORD[((96+48))+rsp]
	movaps	xmm10,XMMWORD[((96+64))+rsp]
	movaps	xmm11,XMMWORD[((96+80))+rsp]
	movaps	xmm12,XMMWORD[((96+96))+rsp]
	movaps	xmm13,XMMWORD[((96+112))+rsp]
	movaps	xmm14,XMMWORD[((96+128))+rsp]
	movaps	xmm15,XMMWORD[((96+144))+rsp]
	lea	rsi,[264+rsp]

	mov	r15,QWORD[rsi]

	mov	r14,QWORD[8+rsi]

	mov	r13,QWORD[16+rsi]

	mov	r12,QWORD[24+rsi]

	mov	rbp,QWORD[32+rsi]

	mov	rbx,QWORD[40+rsi]

	lea	rsp,[48+rsi]

$L$epilogue_ssse3:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_cbc_sha1_enc_ssse3:

ALIGN	32
aesni_cbc_sha1_enc_avx:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_cbc_sha1_enc_avx:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



	mov	r10,QWORD[56+rsp]


	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

	lea	rsp,[((-264))+rsp]



	movaps	XMMWORD[(96+0)+rsp],xmm6
	movaps	XMMWORD[(96+16)+rsp],xmm7
	movaps	XMMWORD[(96+32)+rsp],xmm8
	movaps	XMMWORD[(96+48)+rsp],xmm9
	movaps	XMMWORD[(96+64)+rsp],xmm10
	movaps	XMMWORD[(96+80)+rsp],xmm11
	movaps	XMMWORD[(96+96)+rsp],xmm12
	movaps	XMMWORD[(96+112)+rsp],xmm13
	movaps	XMMWORD[(96+128)+rsp],xmm14
	movaps	XMMWORD[(96+144)+rsp],xmm15
$L$prologue_avx:
	vzeroall
	mov	r12,rdi
	mov	r13,rsi
	mov	r14,rdx
	lea	r15,[112+rcx]
	vmovdqu	xmm12,XMMWORD[r8]
	mov	QWORD[88+rsp],r8
	shl	r14,6
	sub	r13,r12
	mov	r8d,DWORD[((240-112))+r15]
	add	r14,r10

	lea	r11,[K_XX_XX]
	mov	eax,DWORD[r9]
	mov	ebx,DWORD[4+r9]
	mov	ecx,DWORD[8+r9]
	mov	edx,DWORD[12+r9]
	mov	esi,ebx
	mov	ebp,DWORD[16+r9]
	mov	edi,ecx
	xor	edi,edx
	and	esi,edi

	vmovdqa	xmm6,XMMWORD[64+r11]
	vmovdqa	xmm10,XMMWORD[r11]
	vmovdqu	xmm0,XMMWORD[r10]
	vmovdqu	xmm1,XMMWORD[16+r10]
	vmovdqu	xmm2,XMMWORD[32+r10]
	vmovdqu	xmm3,XMMWORD[48+r10]
	vpshufb	xmm0,xmm0,xmm6
	add	r10,64
	vpshufb	xmm1,xmm1,xmm6
	vpshufb	xmm2,xmm2,xmm6
	vpshufb	xmm3,xmm3,xmm6
	vpaddd	xmm4,xmm0,xmm10
	vpaddd	xmm5,xmm1,xmm10
	vpaddd	xmm6,xmm2,xmm10
	vmovdqa	XMMWORD[rsp],xmm4
	vmovdqa	XMMWORD[16+rsp],xmm5
	vmovdqa	XMMWORD[32+rsp],xmm6
	vmovups	xmm15,XMMWORD[((-112))+r15]
	vmovups	xmm14,XMMWORD[((16-112))+r15]
	jmp	NEAR $L$oop_avx
ALIGN	32
$L$oop_avx:
	shrd	ebx,ebx,2
	vmovdqu	xmm13,XMMWORD[r12]
	vpxor	xmm13,xmm13,xmm15
	vpxor	xmm12,xmm12,xmm13
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[((-80))+r15]
	xor	esi,edx
	vpalignr	xmm4,xmm1,xmm0,8
	mov	edi,eax
	add	ebp,DWORD[rsp]
	vpaddd	xmm9,xmm10,xmm3
	xor	ebx,ecx
	shld	eax,eax,5
	vpsrldq	xmm8,xmm3,4
	add	ebp,esi
	and	edi,ebx
	vpxor	xmm4,xmm4,xmm0
	xor	ebx,ecx
	add	ebp,eax
	vpxor	xmm8,xmm8,xmm2
	shrd	eax,eax,7
	xor	edi,ecx
	mov	esi,ebp
	add	edx,DWORD[4+rsp]
	vpxor	xmm4,xmm4,xmm8
	xor	eax,ebx
	shld	ebp,ebp,5
	vmovdqa	XMMWORD[48+rsp],xmm9
	add	edx,edi
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[((-64))+r15]
	and	esi,eax
	vpsrld	xmm8,xmm4,31
	xor	eax,ebx
	add	edx,ebp
	shrd	ebp,ebp,7
	xor	esi,ebx
	vpslldq	xmm9,xmm4,12
	vpaddd	xmm4,xmm4,xmm4
	mov	edi,edx
	add	ecx,DWORD[8+rsp]
	xor	ebp,eax
	shld	edx,edx,5
	vpor	xmm4,xmm4,xmm8
	vpsrld	xmm8,xmm9,30
	add	ecx,esi
	and	edi,ebp
	xor	ebp,eax
	add	ecx,edx
	vpslld	xmm9,xmm9,2
	vpxor	xmm4,xmm4,xmm8
	shrd	edx,edx,7
	xor	edi,eax
	mov	esi,ecx
	add	ebx,DWORD[12+rsp]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[((-48))+r15]
	vpxor	xmm4,xmm4,xmm9
	xor	edx,ebp
	shld	ecx,ecx,5
	add	ebx,edi
	and	esi,edx
	xor	edx,ebp
	add	ebx,ecx
	shrd	ecx,ecx,7
	xor	esi,ebp
	vpalignr	xmm5,xmm2,xmm1,8
	mov	edi,ebx
	add	eax,DWORD[16+rsp]
	vpaddd	xmm9,xmm10,xmm4
	xor	ecx,edx
	shld	ebx,ebx,5
	vpsrldq	xmm8,xmm4,4
	add	eax,esi
	and	edi,ecx
	vpxor	xmm5,xmm5,xmm1
	xor	ecx,edx
	add	eax,ebx
	vpxor	xmm8,xmm8,xmm3
	shrd	ebx,ebx,7
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[((-32))+r15]
	xor	edi,edx
	mov	esi,eax
	add	ebp,DWORD[20+rsp]
	vpxor	xmm5,xmm5,xmm8
	xor	ebx,ecx
	shld	eax,eax,5
	vmovdqa	XMMWORD[rsp],xmm9
	add	ebp,edi
	and	esi,ebx
	vpsrld	xmm8,xmm5,31
	xor	ebx,ecx
	add	ebp,eax
	shrd	eax,eax,7
	xor	esi,ecx
	vpslldq	xmm9,xmm5,12
	vpaddd	xmm5,xmm5,xmm5
	mov	edi,ebp
	add	edx,DWORD[24+rsp]
	xor	eax,ebx
	shld	ebp,ebp,5
	vpor	xmm5,xmm5,xmm8
	vpsrld	xmm8,xmm9,30
	add	edx,esi
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[((-16))+r15]
	and	edi,eax
	xor	eax,ebx
	add	edx,ebp
	vpslld	xmm9,xmm9,2
	vpxor	xmm5,xmm5,xmm8
	shrd	ebp,ebp,7
	xor	edi,ebx
	mov	esi,edx
	add	ecx,DWORD[28+rsp]
	vpxor	xmm5,xmm5,xmm9
	xor	ebp,eax
	shld	edx,edx,5
	vmovdqa	xmm10,XMMWORD[16+r11]
	add	ecx,edi
	and	esi,ebp
	xor	ebp,eax
	add	ecx,edx
	shrd	edx,edx,7
	xor	esi,eax
	vpalignr	xmm6,xmm3,xmm2,8
	mov	edi,ecx
	add	ebx,DWORD[32+rsp]
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[r15]
	vpaddd	xmm9,xmm10,xmm5
	xor	edx,ebp
	shld	ecx,ecx,5
	vpsrldq	xmm8,xmm5,4
	add	ebx,esi
	and	edi,edx
	vpxor	xmm6,xmm6,xmm2
	xor	edx,ebp
	add	ebx,ecx
	vpxor	xmm8,xmm8,xmm4
	shrd	ecx,ecx,7
	xor	edi,ebp
	mov	esi,ebx
	add	eax,DWORD[36+rsp]
	vpxor	xmm6,xmm6,xmm8
	xor	ecx,edx
	shld	ebx,ebx,5
	vmovdqa	XMMWORD[16+rsp],xmm9
	add	eax,edi
	and	esi,ecx
	vpsrld	xmm8,xmm6,31
	xor	ecx,edx
	add	eax,ebx
	shrd	ebx,ebx,7
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[16+r15]
	xor	esi,edx
	vpslldq	xmm9,xmm6,12
	vpaddd	xmm6,xmm6,xmm6
	mov	edi,eax
	add	ebp,DWORD[40+rsp]
	xor	ebx,ecx
	shld	eax,eax,5
	vpor	xmm6,xmm6,xmm8
	vpsrld	xmm8,xmm9,30
	add	ebp,esi
	and	edi,ebx
	xor	ebx,ecx
	add	ebp,eax
	vpslld	xmm9,xmm9,2
	vpxor	xmm6,xmm6,xmm8
	shrd	eax,eax,7
	xor	edi,ecx
	mov	esi,ebp
	add	edx,DWORD[44+rsp]
	vpxor	xmm6,xmm6,xmm9
	xor	eax,ebx
	shld	ebp,ebp,5
	add	edx,edi
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[32+r15]
	and	esi,eax
	xor	eax,ebx
	add	edx,ebp
	shrd	ebp,ebp,7
	xor	esi,ebx
	vpalignr	xmm7,xmm4,xmm3,8
	mov	edi,edx
	add	ecx,DWORD[48+rsp]
	vpaddd	xmm9,xmm10,xmm6
	xor	ebp,eax
	shld	edx,edx,5
	vpsrldq	xmm8,xmm6,4
	add	ecx,esi
	and	edi,ebp
	vpxor	xmm7,xmm7,xmm3
	xor	ebp,eax
	add	ecx,edx
	vpxor	xmm8,xmm8,xmm5
	shrd	edx,edx,7
	xor	edi,eax
	mov	esi,ecx
	add	ebx,DWORD[52+rsp]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[48+r15]
	vpxor	xmm7,xmm7,xmm8
	xor	edx,ebp
	shld	ecx,ecx,5
	vmovdqa	XMMWORD[32+rsp],xmm9
	add	ebx,edi
	and	esi,edx
	vpsrld	xmm8,xmm7,31
	xor	edx,ebp
	add	ebx,ecx
	shrd	ecx,ecx,7
	xor	esi,ebp
	vpslldq	xmm9,xmm7,12
	vpaddd	xmm7,xmm7,xmm7
	mov	edi,ebx
	add	eax,DWORD[56+rsp]
	xor	ecx,edx
	shld	ebx,ebx,5
	vpor	xmm7,xmm7,xmm8
	vpsrld	xmm8,xmm9,30
	add	eax,esi
	and	edi,ecx
	xor	ecx,edx
	add	eax,ebx
	vpslld	xmm9,xmm9,2
	vpxor	xmm7,xmm7,xmm8
	shrd	ebx,ebx,7
	cmp	r8d,11
	jb	NEAR $L$vaesenclast6
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[64+r15]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[80+r15]
	je	NEAR $L$vaesenclast6
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[96+r15]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[112+r15]
$L$vaesenclast6:
	vaesenclast	xmm12,xmm12,xmm15
	vmovups	xmm15,XMMWORD[((-112))+r15]
	vmovups	xmm14,XMMWORD[((16-112))+r15]
	xor	edi,edx
	mov	esi,eax
	add	ebp,DWORD[60+rsp]
	vpxor	xmm7,xmm7,xmm9
	xor	ebx,ecx
	shld	eax,eax,5
	add	ebp,edi
	and	esi,ebx
	xor	ebx,ecx
	add	ebp,eax
	vpalignr	xmm8,xmm7,xmm6,8
	vpxor	xmm0,xmm0,xmm4
	shrd	eax,eax,7
	xor	esi,ecx
	mov	edi,ebp
	add	edx,DWORD[rsp]
	vpxor	xmm0,xmm0,xmm1
	xor	eax,ebx
	shld	ebp,ebp,5
	vpaddd	xmm9,xmm10,xmm7
	add	edx,esi
	vmovdqu	xmm13,XMMWORD[16+r12]
	vpxor	xmm13,xmm13,xmm15
	vmovups	XMMWORD[r13*1+r12],xmm12
	vpxor	xmm12,xmm12,xmm13
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[((-80))+r15]
	and	edi,eax
	vpxor	xmm0,xmm0,xmm8
	xor	eax,ebx
	add	edx,ebp
	shrd	ebp,ebp,7
	xor	edi,ebx
	vpsrld	xmm8,xmm0,30
	vmovdqa	XMMWORD[48+rsp],xmm9
	mov	esi,edx
	add	ecx,DWORD[4+rsp]
	xor	ebp,eax
	shld	edx,edx,5
	vpslld	xmm0,xmm0,2
	add	ecx,edi
	and	esi,ebp
	xor	ebp,eax
	add	ecx,edx
	shrd	edx,edx,7
	xor	esi,eax
	mov	edi,ecx
	add	ebx,DWORD[8+rsp]
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[((-64))+r15]
	vpor	xmm0,xmm0,xmm8
	xor	edx,ebp
	shld	ecx,ecx,5
	add	ebx,esi
	and	edi,edx
	xor	edx,ebp
	add	ebx,ecx
	add	eax,DWORD[12+rsp]
	xor	edi,ebp
	mov	esi,ebx
	shld	ebx,ebx,5
	add	eax,edi
	xor	esi,edx
	shrd	ecx,ecx,7
	add	eax,ebx
	vpalignr	xmm8,xmm0,xmm7,8
	vpxor	xmm1,xmm1,xmm5
	add	ebp,DWORD[16+rsp]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[((-48))+r15]
	xor	esi,ecx
	mov	edi,eax
	shld	eax,eax,5
	vpxor	xmm1,xmm1,xmm2
	add	ebp,esi
	xor	edi,ecx
	vpaddd	xmm9,xmm10,xmm0
	shrd	ebx,ebx,7
	add	ebp,eax
	vpxor	xmm1,xmm1,xmm8
	add	edx,DWORD[20+rsp]
	xor	edi,ebx
	mov	esi,ebp
	shld	ebp,ebp,5
	vpsrld	xmm8,xmm1,30
	vmovdqa	XMMWORD[rsp],xmm9
	add	edx,edi
	xor	esi,ebx
	shrd	eax,eax,7
	add	edx,ebp
	vpslld	xmm1,xmm1,2
	add	ecx,DWORD[24+rsp]
	xor	esi,eax
	mov	edi,edx
	shld	edx,edx,5
	add	ecx,esi
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[((-32))+r15]
	xor	edi,eax
	shrd	ebp,ebp,7
	add	ecx,edx
	vpor	xmm1,xmm1,xmm8
	add	ebx,DWORD[28+rsp]
	xor	edi,ebp
	mov	esi,ecx
	shld	ecx,ecx,5
	add	ebx,edi
	xor	esi,ebp
	shrd	edx,edx,7
	add	ebx,ecx
	vpalignr	xmm8,xmm1,xmm0,8
	vpxor	xmm2,xmm2,xmm6
	add	eax,DWORD[32+rsp]
	xor	esi,edx
	mov	edi,ebx
	shld	ebx,ebx,5
	vpxor	xmm2,xmm2,xmm3
	add	eax,esi
	xor	edi,edx
	vpaddd	xmm9,xmm10,xmm1
	vmovdqa	xmm10,XMMWORD[32+r11]
	shrd	ecx,ecx,7
	add	eax,ebx
	vpxor	xmm2,xmm2,xmm8
	add	ebp,DWORD[36+rsp]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[((-16))+r15]
	xor	edi,ecx
	mov	esi,eax
	shld	eax,eax,5
	vpsrld	xmm8,xmm2,30
	vmovdqa	XMMWORD[16+rsp],xmm9
	add	ebp,edi
	xor	esi,ecx
	shrd	ebx,ebx,7
	add	ebp,eax
	vpslld	xmm2,xmm2,2
	add	edx,DWORD[40+rsp]
	xor	esi,ebx
	mov	edi,ebp
	shld	ebp,ebp,5
	add	edx,esi
	xor	edi,ebx
	shrd	eax,eax,7
	add	edx,ebp
	vpor	xmm2,xmm2,xmm8
	add	ecx,DWORD[44+rsp]
	xor	edi,eax
	mov	esi,edx
	shld	edx,edx,5
	add	ecx,edi
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[r15]
	xor	esi,eax
	shrd	ebp,ebp,7
	add	ecx,edx
	vpalignr	xmm8,xmm2,xmm1,8
	vpxor	xmm3,xmm3,xmm7
	add	ebx,DWORD[48+rsp]
	xor	esi,ebp
	mov	edi,ecx
	shld	ecx,ecx,5
	vpxor	xmm3,xmm3,xmm4
	add	ebx,esi
	xor	edi,ebp
	vpaddd	xmm9,xmm10,xmm2
	shrd	edx,edx,7
	add	ebx,ecx
	vpxor	xmm3,xmm3,xmm8
	add	eax,DWORD[52+rsp]
	xor	edi,edx
	mov	esi,ebx
	shld	ebx,ebx,5
	vpsrld	xmm8,xmm3,30
	vmovdqa	XMMWORD[32+rsp],xmm9
	add	eax,edi
	xor	esi,edx
	shrd	ecx,ecx,7
	add	eax,ebx
	vpslld	xmm3,xmm3,2
	add	ebp,DWORD[56+rsp]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[16+r15]
	xor	esi,ecx
	mov	edi,eax
	shld	eax,eax,5
	add	ebp,esi
	xor	edi,ecx
	shrd	ebx,ebx,7
	add	ebp,eax
	vpor	xmm3,xmm3,xmm8
	add	edx,DWORD[60+rsp]
	xor	edi,ebx
	mov	esi,ebp
	shld	ebp,ebp,5
	add	edx,edi
	xor	esi,ebx
	shrd	eax,eax,7
	add	edx,ebp
	vpalignr	xmm8,xmm3,xmm2,8
	vpxor	xmm4,xmm4,xmm0
	add	ecx,DWORD[rsp]
	xor	esi,eax
	mov	edi,edx
	shld	edx,edx,5
	vpxor	xmm4,xmm4,xmm5
	add	ecx,esi
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[32+r15]
	xor	edi,eax
	vpaddd	xmm9,xmm10,xmm3
	shrd	ebp,ebp,7
	add	ecx,edx
	vpxor	xmm4,xmm4,xmm8
	add	ebx,DWORD[4+rsp]
	xor	edi,ebp
	mov	esi,ecx
	shld	ecx,ecx,5
	vpsrld	xmm8,xmm4,30
	vmovdqa	XMMWORD[48+rsp],xmm9
	add	ebx,edi
	xor	esi,ebp
	shrd	edx,edx,7
	add	ebx,ecx
	vpslld	xmm4,xmm4,2
	add	eax,DWORD[8+rsp]
	xor	esi,edx
	mov	edi,ebx
	shld	ebx,ebx,5
	add	eax,esi
	xor	edi,edx
	shrd	ecx,ecx,7
	add	eax,ebx
	vpor	xmm4,xmm4,xmm8
	add	ebp,DWORD[12+rsp]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[48+r15]
	xor	edi,ecx
	mov	esi,eax
	shld	eax,eax,5
	add	ebp,edi
	xor	esi,ecx
	shrd	ebx,ebx,7
	add	ebp,eax
	vpalignr	xmm8,xmm4,xmm3,8
	vpxor	xmm5,xmm5,xmm1
	add	edx,DWORD[16+rsp]
	xor	esi,ebx
	mov	edi,ebp
	shld	ebp,ebp,5
	vpxor	xmm5,xmm5,xmm6
	add	edx,esi
	xor	edi,ebx
	vpaddd	xmm9,xmm10,xmm4
	shrd	eax,eax,7
	add	edx,ebp
	vpxor	xmm5,xmm5,xmm8
	add	ecx,DWORD[20+rsp]
	xor	edi,eax
	mov	esi,edx
	shld	edx,edx,5
	vpsrld	xmm8,xmm5,30
	vmovdqa	XMMWORD[rsp],xmm9
	add	ecx,edi
	cmp	r8d,11
	jb	NEAR $L$vaesenclast7
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[64+r15]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[80+r15]
	je	NEAR $L$vaesenclast7
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[96+r15]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[112+r15]
$L$vaesenclast7:
	vaesenclast	xmm12,xmm12,xmm15
	vmovups	xmm15,XMMWORD[((-112))+r15]
	vmovups	xmm14,XMMWORD[((16-112))+r15]
	xor	esi,eax
	shrd	ebp,ebp,7
	add	ecx,edx
	vpslld	xmm5,xmm5,2
	add	ebx,DWORD[24+rsp]
	xor	esi,ebp
	mov	edi,ecx
	shld	ecx,ecx,5
	add	ebx,esi
	xor	edi,ebp
	shrd	edx,edx,7
	add	ebx,ecx
	vpor	xmm5,xmm5,xmm8
	add	eax,DWORD[28+rsp]
	shrd	ecx,ecx,7
	mov	esi,ebx
	xor	edi,edx
	shld	ebx,ebx,5
	add	eax,edi
	xor	esi,ecx
	xor	ecx,edx
	add	eax,ebx
	vpalignr	xmm8,xmm5,xmm4,8
	vpxor	xmm6,xmm6,xmm2
	add	ebp,DWORD[32+rsp]
	vmovdqu	xmm13,XMMWORD[32+r12]
	vpxor	xmm13,xmm13,xmm15
	vmovups	XMMWORD[16+r12*1+r13],xmm12
	vpxor	xmm12,xmm12,xmm13
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[((-80))+r15]
	and	esi,ecx
	xor	ecx,edx
	shrd	ebx,ebx,7
	vpxor	xmm6,xmm6,xmm7
	mov	edi,eax
	xor	esi,ecx
	vpaddd	xmm9,xmm10,xmm5
	shld	eax,eax,5
	add	ebp,esi
	vpxor	xmm6,xmm6,xmm8
	xor	edi,ebx
	xor	ebx,ecx
	add	ebp,eax
	add	edx,DWORD[36+rsp]
	vpsrld	xmm8,xmm6,30
	vmovdqa	XMMWORD[16+rsp],xmm9
	and	edi,ebx
	xor	ebx,ecx
	shrd	eax,eax,7
	mov	esi,ebp
	vpslld	xmm6,xmm6,2
	xor	edi,ebx
	shld	ebp,ebp,5
	add	edx,edi
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[((-64))+r15]
	xor	esi,eax
	xor	eax,ebx
	add	edx,ebp
	add	ecx,DWORD[40+rsp]
	and	esi,eax
	vpor	xmm6,xmm6,xmm8
	xor	eax,ebx
	shrd	ebp,ebp,7
	mov	edi,edx
	xor	esi,eax
	shld	edx,edx,5
	add	ecx,esi
	xor	edi,ebp
	xor	ebp,eax
	add	ecx,edx
	add	ebx,DWORD[44+rsp]
	and	edi,ebp
	xor	ebp,eax
	shrd	edx,edx,7
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[((-48))+r15]
	mov	esi,ecx
	xor	edi,ebp
	shld	ecx,ecx,5
	add	ebx,edi
	xor	esi,edx
	xor	edx,ebp
	add	ebx,ecx
	vpalignr	xmm8,xmm6,xmm5,8
	vpxor	xmm7,xmm7,xmm3
	add	eax,DWORD[48+rsp]
	and	esi,edx
	xor	edx,ebp
	shrd	ecx,ecx,7
	vpxor	xmm7,xmm7,xmm0
	mov	edi,ebx
	xor	esi,edx
	vpaddd	xmm9,xmm10,xmm6
	vmovdqa	xmm10,XMMWORD[48+r11]
	shld	ebx,ebx,5
	add	eax,esi
	vpxor	xmm7,xmm7,xmm8
	xor	edi,ecx
	xor	ecx,edx
	add	eax,ebx
	add	ebp,DWORD[52+rsp]
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[((-32))+r15]
	vpsrld	xmm8,xmm7,30
	vmovdqa	XMMWORD[32+rsp],xmm9
	and	edi,ecx
	xor	ecx,edx
	shrd	ebx,ebx,7
	mov	esi,eax
	vpslld	xmm7,xmm7,2
	xor	edi,ecx
	shld	eax,eax,5
	add	ebp,edi
	xor	esi,ebx
	xor	ebx,ecx
	add	ebp,eax
	add	edx,DWORD[56+rsp]
	and	esi,ebx
	vpor	xmm7,xmm7,xmm8
	xor	ebx,ecx
	shrd	eax,eax,7
	mov	edi,ebp
	xor	esi,ebx
	shld	ebp,ebp,5
	add	edx,esi
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[((-16))+r15]
	xor	edi,eax
	xor	eax,ebx
	add	edx,ebp
	add	ecx,DWORD[60+rsp]
	and	edi,eax
	xor	eax,ebx
	shrd	ebp,ebp,7
	mov	esi,edx
	xor	edi,eax
	shld	edx,edx,5
	add	ecx,edi
	xor	esi,ebp
	xor	ebp,eax
	add	ecx,edx
	vpalignr	xmm8,xmm7,xmm6,8
	vpxor	xmm0,xmm0,xmm4
	add	ebx,DWORD[rsp]
	and	esi,ebp
	xor	ebp,eax
	shrd	edx,edx,7
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[r15]
	vpxor	xmm0,xmm0,xmm1
	mov	edi,ecx
	xor	esi,ebp
	vpaddd	xmm9,xmm10,xmm7
	shld	ecx,ecx,5
	add	ebx,esi
	vpxor	xmm0,xmm0,xmm8
	xor	edi,edx
	xor	edx,ebp
	add	ebx,ecx
	add	eax,DWORD[4+rsp]
	vpsrld	xmm8,xmm0,30
	vmovdqa	XMMWORD[48+rsp],xmm9
	and	edi,edx
	xor	edx,ebp
	shrd	ecx,ecx,7
	mov	esi,ebx
	vpslld	xmm0,xmm0,2
	xor	edi,edx
	shld	ebx,ebx,5
	add	eax,edi
	xor	esi,ecx
	xor	ecx,edx
	add	eax,ebx
	add	ebp,DWORD[8+rsp]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[16+r15]
	and	esi,ecx
	vpor	xmm0,xmm0,xmm8
	xor	ecx,edx
	shrd	ebx,ebx,7
	mov	edi,eax
	xor	esi,ecx
	shld	eax,eax,5
	add	ebp,esi
	xor	edi,ebx
	xor	ebx,ecx
	add	ebp,eax
	add	edx,DWORD[12+rsp]
	and	edi,ebx
	xor	ebx,ecx
	shrd	eax,eax,7
	mov	esi,ebp
	xor	edi,ebx
	shld	ebp,ebp,5
	add	edx,edi
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[32+r15]
	xor	esi,eax
	xor	eax,ebx
	add	edx,ebp
	vpalignr	xmm8,xmm0,xmm7,8
	vpxor	xmm1,xmm1,xmm5
	add	ecx,DWORD[16+rsp]
	and	esi,eax
	xor	eax,ebx
	shrd	ebp,ebp,7
	vpxor	xmm1,xmm1,xmm2
	mov	edi,edx
	xor	esi,eax
	vpaddd	xmm9,xmm10,xmm0
	shld	edx,edx,5
	add	ecx,esi
	vpxor	xmm1,xmm1,xmm8
	xor	edi,ebp
	xor	ebp,eax
	add	ecx,edx
	add	ebx,DWORD[20+rsp]
	vpsrld	xmm8,xmm1,30
	vmovdqa	XMMWORD[rsp],xmm9
	and	edi,ebp
	xor	ebp,eax
	shrd	edx,edx,7
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[48+r15]
	mov	esi,ecx
	vpslld	xmm1,xmm1,2
	xor	edi,ebp
	shld	ecx,ecx,5
	add	ebx,edi
	xor	esi,edx
	xor	edx,ebp
	add	ebx,ecx
	add	eax,DWORD[24+rsp]
	and	esi,edx
	vpor	xmm1,xmm1,xmm8
	xor	edx,ebp
	shrd	ecx,ecx,7
	mov	edi,ebx
	xor	esi,edx
	shld	ebx,ebx,5
	add	eax,esi
	xor	edi,ecx
	xor	ecx,edx
	add	eax,ebx
	add	ebp,DWORD[28+rsp]
	cmp	r8d,11
	jb	NEAR $L$vaesenclast8
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[64+r15]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[80+r15]
	je	NEAR $L$vaesenclast8
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[96+r15]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[112+r15]
$L$vaesenclast8:
	vaesenclast	xmm12,xmm12,xmm15
	vmovups	xmm15,XMMWORD[((-112))+r15]
	vmovups	xmm14,XMMWORD[((16-112))+r15]
	and	edi,ecx
	xor	ecx,edx
	shrd	ebx,ebx,7
	mov	esi,eax
	xor	edi,ecx
	shld	eax,eax,5
	add	ebp,edi
	xor	esi,ebx
	xor	ebx,ecx
	add	ebp,eax
	vpalignr	xmm8,xmm1,xmm0,8
	vpxor	xmm2,xmm2,xmm6
	add	edx,DWORD[32+rsp]
	and	esi,ebx
	xor	ebx,ecx
	shrd	eax,eax,7
	vpxor	xmm2,xmm2,xmm3
	mov	edi,ebp
	xor	esi,ebx
	vpaddd	xmm9,xmm10,xmm1
	shld	ebp,ebp,5
	add	edx,esi
	vmovdqu	xmm13,XMMWORD[48+r12]
	vpxor	xmm13,xmm13,xmm15
	vmovups	XMMWORD[32+r12*1+r13],xmm12
	vpxor	xmm12,xmm12,xmm13
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[((-80))+r15]
	vpxor	xmm2,xmm2,xmm8
	xor	edi,eax
	xor	eax,ebx
	add	edx,ebp
	add	ecx,DWORD[36+rsp]
	vpsrld	xmm8,xmm2,30
	vmovdqa	XMMWORD[16+rsp],xmm9
	and	edi,eax
	xor	eax,ebx
	shrd	ebp,ebp,7
	mov	esi,edx
	vpslld	xmm2,xmm2,2
	xor	edi,eax
	shld	edx,edx,5
	add	ecx,edi
	xor	esi,ebp
	xor	ebp,eax
	add	ecx,edx
	add	ebx,DWORD[40+rsp]
	and	esi,ebp
	vpor	xmm2,xmm2,xmm8
	xor	ebp,eax
	shrd	edx,edx,7
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[((-64))+r15]
	mov	edi,ecx
	xor	esi,ebp
	shld	ecx,ecx,5
	add	ebx,esi
	xor	edi,edx
	xor	edx,ebp
	add	ebx,ecx
	add	eax,DWORD[44+rsp]
	and	edi,edx
	xor	edx,ebp
	shrd	ecx,ecx,7
	mov	esi,ebx
	xor	edi,edx
	shld	ebx,ebx,5
	add	eax,edi
	xor	esi,edx
	add	eax,ebx
	vpalignr	xmm8,xmm2,xmm1,8
	vpxor	xmm3,xmm3,xmm7
	add	ebp,DWORD[48+rsp]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[((-48))+r15]
	xor	esi,ecx
	mov	edi,eax
	shld	eax,eax,5
	vpxor	xmm3,xmm3,xmm4
	add	ebp,esi
	xor	edi,ecx
	vpaddd	xmm9,xmm10,xmm2
	shrd	ebx,ebx,7
	add	ebp,eax
	vpxor	xmm3,xmm3,xmm8
	add	edx,DWORD[52+rsp]
	xor	edi,ebx
	mov	esi,ebp
	shld	ebp,ebp,5
	vpsrld	xmm8,xmm3,30
	vmovdqa	XMMWORD[32+rsp],xmm9
	add	edx,edi
	xor	esi,ebx
	shrd	eax,eax,7
	add	edx,ebp
	vpslld	xmm3,xmm3,2
	add	ecx,DWORD[56+rsp]
	xor	esi,eax
	mov	edi,edx
	shld	edx,edx,5
	add	ecx,esi
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[((-32))+r15]
	xor	edi,eax
	shrd	ebp,ebp,7
	add	ecx,edx
	vpor	xmm3,xmm3,xmm8
	add	ebx,DWORD[60+rsp]
	xor	edi,ebp
	mov	esi,ecx
	shld	ecx,ecx,5
	add	ebx,edi
	xor	esi,ebp
	shrd	edx,edx,7
	add	ebx,ecx
	add	eax,DWORD[rsp]
	vpaddd	xmm9,xmm10,xmm3
	xor	esi,edx
	mov	edi,ebx
	shld	ebx,ebx,5
	add	eax,esi
	vmovdqa	XMMWORD[48+rsp],xmm9
	xor	edi,edx
	shrd	ecx,ecx,7
	add	eax,ebx
	add	ebp,DWORD[4+rsp]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[((-16))+r15]
	xor	edi,ecx
	mov	esi,eax
	shld	eax,eax,5
	add	ebp,edi
	xor	esi,ecx
	shrd	ebx,ebx,7
	add	ebp,eax
	add	edx,DWORD[8+rsp]
	xor	esi,ebx
	mov	edi,ebp
	shld	ebp,ebp,5
	add	edx,esi
	xor	edi,ebx
	shrd	eax,eax,7
	add	edx,ebp
	add	ecx,DWORD[12+rsp]
	xor	edi,eax
	mov	esi,edx
	shld	edx,edx,5
	add	ecx,edi
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[r15]
	xor	esi,eax
	shrd	ebp,ebp,7
	add	ecx,edx
	cmp	r10,r14
	je	NEAR $L$done_avx
	vmovdqa	xmm9,XMMWORD[64+r11]
	vmovdqa	xmm10,XMMWORD[r11]
	vmovdqu	xmm0,XMMWORD[r10]
	vmovdqu	xmm1,XMMWORD[16+r10]
	vmovdqu	xmm2,XMMWORD[32+r10]
	vmovdqu	xmm3,XMMWORD[48+r10]
	vpshufb	xmm0,xmm0,xmm9
	add	r10,64
	add	ebx,DWORD[16+rsp]
	xor	esi,ebp
	vpshufb	xmm1,xmm1,xmm9
	mov	edi,ecx
	shld	ecx,ecx,5
	vpaddd	xmm8,xmm0,xmm10
	add	ebx,esi
	xor	edi,ebp
	shrd	edx,edx,7
	add	ebx,ecx
	vmovdqa	XMMWORD[rsp],xmm8
	add	eax,DWORD[20+rsp]
	xor	edi,edx
	mov	esi,ebx
	shld	ebx,ebx,5
	add	eax,edi
	xor	esi,edx
	shrd	ecx,ecx,7
	add	eax,ebx
	add	ebp,DWORD[24+rsp]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[16+r15]
	xor	esi,ecx
	mov	edi,eax
	shld	eax,eax,5
	add	ebp,esi
	xor	edi,ecx
	shrd	ebx,ebx,7
	add	ebp,eax
	add	edx,DWORD[28+rsp]
	xor	edi,ebx
	mov	esi,ebp
	shld	ebp,ebp,5
	add	edx,edi
	xor	esi,ebx
	shrd	eax,eax,7
	add	edx,ebp
	add	ecx,DWORD[32+rsp]
	xor	esi,eax
	vpshufb	xmm2,xmm2,xmm9
	mov	edi,edx
	shld	edx,edx,5
	vpaddd	xmm8,xmm1,xmm10
	add	ecx,esi
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[32+r15]
	xor	edi,eax
	shrd	ebp,ebp,7
	add	ecx,edx
	vmovdqa	XMMWORD[16+rsp],xmm8
	add	ebx,DWORD[36+rsp]
	xor	edi,ebp
	mov	esi,ecx
	shld	ecx,ecx,5
	add	ebx,edi
	xor	esi,ebp
	shrd	edx,edx,7
	add	ebx,ecx
	add	eax,DWORD[40+rsp]
	xor	esi,edx
	mov	edi,ebx
	shld	ebx,ebx,5
	add	eax,esi
	xor	edi,edx
	shrd	ecx,ecx,7
	add	eax,ebx
	add	ebp,DWORD[44+rsp]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[48+r15]
	xor	edi,ecx
	mov	esi,eax
	shld	eax,eax,5
	add	ebp,edi
	xor	esi,ecx
	shrd	ebx,ebx,7
	add	ebp,eax
	add	edx,DWORD[48+rsp]
	xor	esi,ebx
	vpshufb	xmm3,xmm3,xmm9
	mov	edi,ebp
	shld	ebp,ebp,5
	vpaddd	xmm8,xmm2,xmm10
	add	edx,esi
	xor	edi,ebx
	shrd	eax,eax,7
	add	edx,ebp
	vmovdqa	XMMWORD[32+rsp],xmm8
	add	ecx,DWORD[52+rsp]
	xor	edi,eax
	mov	esi,edx
	shld	edx,edx,5
	add	ecx,edi
	cmp	r8d,11
	jb	NEAR $L$vaesenclast9
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[64+r15]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[80+r15]
	je	NEAR $L$vaesenclast9
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[96+r15]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[112+r15]
$L$vaesenclast9:
	vaesenclast	xmm12,xmm12,xmm15
	vmovups	xmm15,XMMWORD[((-112))+r15]
	vmovups	xmm14,XMMWORD[((16-112))+r15]
	xor	esi,eax
	shrd	ebp,ebp,7
	add	ecx,edx
	add	ebx,DWORD[56+rsp]
	xor	esi,ebp
	mov	edi,ecx
	shld	ecx,ecx,5
	add	ebx,esi
	xor	edi,ebp
	shrd	edx,edx,7
	add	ebx,ecx
	add	eax,DWORD[60+rsp]
	xor	edi,edx
	mov	esi,ebx
	shld	ebx,ebx,5
	add	eax,edi
	shrd	ecx,ecx,7
	add	eax,ebx
	vmovups	XMMWORD[48+r12*1+r13],xmm12
	lea	r12,[64+r12]

	add	eax,DWORD[r9]
	add	esi,DWORD[4+r9]
	add	ecx,DWORD[8+r9]
	add	edx,DWORD[12+r9]
	mov	DWORD[r9],eax
	add	ebp,DWORD[16+r9]
	mov	DWORD[4+r9],esi
	mov	ebx,esi
	mov	DWORD[8+r9],ecx
	mov	edi,ecx
	mov	DWORD[12+r9],edx
	xor	edi,edx
	mov	DWORD[16+r9],ebp
	and	esi,edi
	jmp	NEAR $L$oop_avx

$L$done_avx:
	add	ebx,DWORD[16+rsp]
	xor	esi,ebp
	mov	edi,ecx
	shld	ecx,ecx,5
	add	ebx,esi
	xor	edi,ebp
	shrd	edx,edx,7
	add	ebx,ecx
	add	eax,DWORD[20+rsp]
	xor	edi,edx
	mov	esi,ebx
	shld	ebx,ebx,5
	add	eax,edi
	xor	esi,edx
	shrd	ecx,ecx,7
	add	eax,ebx
	add	ebp,DWORD[24+rsp]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[16+r15]
	xor	esi,ecx
	mov	edi,eax
	shld	eax,eax,5
	add	ebp,esi
	xor	edi,ecx
	shrd	ebx,ebx,7
	add	ebp,eax
	add	edx,DWORD[28+rsp]
	xor	edi,ebx
	mov	esi,ebp
	shld	ebp,ebp,5
	add	edx,edi
	xor	esi,ebx
	shrd	eax,eax,7
	add	edx,ebp
	add	ecx,DWORD[32+rsp]
	xor	esi,eax
	mov	edi,edx
	shld	edx,edx,5
	add	ecx,esi
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[32+r15]
	xor	edi,eax
	shrd	ebp,ebp,7
	add	ecx,edx
	add	ebx,DWORD[36+rsp]
	xor	edi,ebp
	mov	esi,ecx
	shld	ecx,ecx,5
	add	ebx,edi
	xor	esi,ebp
	shrd	edx,edx,7
	add	ebx,ecx
	add	eax,DWORD[40+rsp]
	xor	esi,edx
	mov	edi,ebx
	shld	ebx,ebx,5
	add	eax,esi
	xor	edi,edx
	shrd	ecx,ecx,7
	add	eax,ebx
	add	ebp,DWORD[44+rsp]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[48+r15]
	xor	edi,ecx
	mov	esi,eax
	shld	eax,eax,5
	add	ebp,edi
	xor	esi,ecx
	shrd	ebx,ebx,7
	add	ebp,eax
	add	edx,DWORD[48+rsp]
	xor	esi,ebx
	mov	edi,ebp
	shld	ebp,ebp,5
	add	edx,esi
	xor	edi,ebx
	shrd	eax,eax,7
	add	edx,ebp
	add	ecx,DWORD[52+rsp]
	xor	edi,eax
	mov	esi,edx
	shld	edx,edx,5
	add	ecx,edi
	cmp	r8d,11
	jb	NEAR $L$vaesenclast10
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[64+r15]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[80+r15]
	je	NEAR $L$vaesenclast10
	vaesenc	xmm12,xmm12,xmm15
	vmovups	xmm14,XMMWORD[96+r15]
	vaesenc	xmm12,xmm12,xmm14
	vmovups	xmm15,XMMWORD[112+r15]
$L$vaesenclast10:
	vaesenclast	xmm12,xmm12,xmm15
	vmovups	xmm15,XMMWORD[((-112))+r15]
	vmovups	xmm14,XMMWORD[((16-112))+r15]
	xor	esi,eax
	shrd	ebp,ebp,7
	add	ecx,edx
	add	ebx,DWORD[56+rsp]
	xor	esi,ebp
	mov	edi,ecx
	shld	ecx,ecx,5
	add	ebx,esi
	xor	edi,ebp
	shrd	edx,edx,7
	add	ebx,ecx
	add	eax,DWORD[60+rsp]
	xor	edi,edx
	mov	esi,ebx
	shld	ebx,ebx,5
	add	eax,edi
	shrd	ecx,ecx,7
	add	eax,ebx
	vmovups	XMMWORD[48+r12*1+r13],xmm12
	mov	r8,QWORD[88+rsp]

	add	eax,DWORD[r9]
	add	esi,DWORD[4+r9]
	add	ecx,DWORD[8+r9]
	mov	DWORD[r9],eax
	add	edx,DWORD[12+r9]
	mov	DWORD[4+r9],esi
	add	ebp,DWORD[16+r9]
	mov	DWORD[8+r9],ecx
	mov	DWORD[12+r9],edx
	mov	DWORD[16+r9],ebp
	vmovups	XMMWORD[r8],xmm12
	vzeroall
	movaps	xmm6,XMMWORD[((96+0))+rsp]
	movaps	xmm7,XMMWORD[((96+16))+rsp]
	movaps	xmm8,XMMWORD[((96+32))+rsp]
	movaps	xmm9,XMMWORD[((96+48))+rsp]
	movaps	xmm10,XMMWORD[((96+64))+rsp]
	movaps	xmm11,XMMWORD[((96+80))+rsp]
	movaps	xmm12,XMMWORD[((96+96))+rsp]
	movaps	xmm13,XMMWORD[((96+112))+rsp]
	movaps	xmm14,XMMWORD[((96+128))+rsp]
	movaps	xmm15,XMMWORD[((96+144))+rsp]
	lea	rsi,[264+rsp]

	mov	r15,QWORD[rsi]

	mov	r14,QWORD[8+rsi]

	mov	r13,QWORD[16+rsi]

	mov	r12,QWORD[24+rsi]

	mov	rbp,QWORD[32+rsi]

	mov	rbx,QWORD[40+rsi]

	lea	rsp,[48+rsi]

$L$epilogue_avx:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_cbc_sha1_enc_avx:
ALIGN	64
K_XX_XX:
	DD	0x5a827999,0x5a827999,0x5a827999,0x5a827999
	DD	0x6ed9eba1,0x6ed9eba1,0x6ed9eba1,0x6ed9eba1
	DD	0x8f1bbcdc,0x8f1bbcdc,0x8f1bbcdc,0x8f1bbcdc
	DD	0xca62c1d6,0xca62c1d6,0xca62c1d6,0xca62c1d6
	DD	0x00010203,0x04050607,0x08090a0b,0x0c0d0e0f
DB	0xf,0xe,0xd,0xc,0xb,0xa,0x9,0x8,0x7,0x6,0x5,0x4,0x3,0x2,0x1,0x0

DB	65,69,83,78,73,45,67,66,67,43,83,72,65,49,32,115
DB	116,105,116,99,104,32,102,111,114,32,120,56,54,95,54,52
DB	44,32,67,82,89,80,84,79,71,65,77,83,32,98,121,32
DB	60,97,112,112,114,111,64,111,112,101,110,115,115,108,46,111
DB	114,103,62,0
ALIGN	64

ALIGN	32
aesni_cbc_sha1_enc_shaext:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_cbc_sha1_enc_shaext:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



	mov	r10,QWORD[56+rsp]
	lea	rsp,[((-168))+rsp]
	movaps	XMMWORD[(-8-160)+rax],xmm6
	movaps	XMMWORD[(-8-144)+rax],xmm7
	movaps	XMMWORD[(-8-128)+rax],xmm8
	movaps	XMMWORD[(-8-112)+rax],xmm9
	movaps	XMMWORD[(-8-96)+rax],xmm10
	movaps	XMMWORD[(-8-80)+rax],xmm11
	movaps	XMMWORD[(-8-64)+rax],xmm12
	movaps	XMMWORD[(-8-48)+rax],xmm13
	movaps	XMMWORD[(-8-32)+rax],xmm14
	movaps	XMMWORD[(-8-16)+rax],xmm15
$L$prologue_shaext:
	movdqu	xmm8,XMMWORD[r9]
	movd	xmm9,DWORD[16+r9]
	movdqa	xmm7,XMMWORD[((K_XX_XX+80))]

	mov	r11d,DWORD[240+rcx]
	sub	rsi,rdi
	movups	xmm15,XMMWORD[rcx]
	movups	xmm2,XMMWORD[r8]
	movups	xmm0,XMMWORD[16+rcx]
	lea	rcx,[112+rcx]

	pshufd	xmm8,xmm8,27
	pshufd	xmm9,xmm9,27
	jmp	NEAR $L$oop_shaext

ALIGN	16
$L$oop_shaext:
	movups	xmm14,XMMWORD[rdi]
	xorps	xmm14,xmm15
	xorps	xmm2,xmm14
	movups	xmm1,XMMWORD[((-80))+rcx]
DB	102,15,56,220,208
	movdqu	xmm3,XMMWORD[r10]
	movdqa	xmm12,xmm9
DB	102,15,56,0,223
	movdqu	xmm4,XMMWORD[16+r10]
	movdqa	xmm11,xmm8
	movups	xmm0,XMMWORD[((-64))+rcx]
DB	102,15,56,220,209
DB	102,15,56,0,231

	paddd	xmm9,xmm3
	movdqu	xmm5,XMMWORD[32+r10]
	lea	r10,[64+r10]
	pxor	xmm3,xmm12
	movups	xmm1,XMMWORD[((-48))+rcx]
DB	102,15,56,220,208
	pxor	xmm3,xmm12
	movdqa	xmm10,xmm8
DB	102,15,56,0,239
DB	69,15,58,204,193,0
DB	68,15,56,200,212
	movups	xmm0,XMMWORD[((-32))+rcx]
DB	102,15,56,220,209
DB	15,56,201,220
	movdqu	xmm6,XMMWORD[((-16))+r10]
	movdqa	xmm9,xmm8
DB	102,15,56,0,247
	movups	xmm1,XMMWORD[((-16))+rcx]
DB	102,15,56,220,208
DB	69,15,58,204,194,0
DB	68,15,56,200,205
	pxor	xmm3,xmm5
DB	15,56,201,229
	movups	xmm0,XMMWORD[rcx]
DB	102,15,56,220,209
	movdqa	xmm10,xmm8
DB	69,15,58,204,193,0
DB	68,15,56,200,214
	movups	xmm1,XMMWORD[16+rcx]
DB	102,15,56,220,208
DB	15,56,202,222
	pxor	xmm4,xmm6
DB	15,56,201,238
	movups	xmm0,XMMWORD[32+rcx]
DB	102,15,56,220,209
	movdqa	xmm9,xmm8
DB	69,15,58,204,194,0
DB	68,15,56,200,203
	movups	xmm1,XMMWORD[48+rcx]
DB	102,15,56,220,208
DB	15,56,202,227
	pxor	xmm5,xmm3
DB	15,56,201,243
	cmp	r11d,11
	jb	NEAR $L$aesenclast11
	movups	xmm0,XMMWORD[64+rcx]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[80+rcx]
DB	102,15,56,220,208
	je	NEAR $L$aesenclast11
	movups	xmm0,XMMWORD[96+rcx]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[112+rcx]
DB	102,15,56,220,208
$L$aesenclast11:
DB	102,15,56,221,209
	movups	xmm0,XMMWORD[((16-112))+rcx]
	movdqa	xmm10,xmm8
DB	69,15,58,204,193,0
DB	68,15,56,200,212
	movups	xmm14,XMMWORD[16+rdi]
	xorps	xmm14,xmm15
	movups	XMMWORD[rdi*1+rsi],xmm2
	xorps	xmm2,xmm14
	movups	xmm1,XMMWORD[((-80))+rcx]
DB	102,15,56,220,208
DB	15,56,202,236
	pxor	xmm6,xmm4
DB	15,56,201,220
	movups	xmm0,XMMWORD[((-64))+rcx]
DB	102,15,56,220,209
	movdqa	xmm9,xmm8
DB	69,15,58,204,194,1
DB	68,15,56,200,205
	movups	xmm1,XMMWORD[((-48))+rcx]
DB	102,15,56,220,208
DB	15,56,202,245
	pxor	xmm3,xmm5
DB	15,56,201,229
	movups	xmm0,XMMWORD[((-32))+rcx]
DB	102,15,56,220,209
	movdqa	xmm10,xmm8
DB	69,15,58,204,193,1
DB	68,15,56,200,214
	movups	xmm1,XMMWORD[((-16))+rcx]
DB	102,15,56,220,208
DB	15,56,202,222
	pxor	xmm4,xmm6
DB	15,56,201,238
	movups	xmm0,XMMWORD[rcx]
DB	102,15,56,220,209
	movdqa	xmm9,xmm8
DB	69,15,58,204,194,1
DB	68,15,56,200,203
	movups	xmm1,XMMWORD[16+rcx]
DB	102,15,56,220,208
DB	15,56,202,227
	pxor	xmm5,xmm3
DB	15,56,201,243
	movups	xmm0,XMMWORD[32+rcx]
DB	102,15,56,220,209
	movdqa	xmm10,xmm8
DB	69,15,58,204,193,1
DB	68,15,56,200,212
	movups	xmm1,XMMWORD[48+rcx]
DB	102,15,56,220,208
DB	15,56,202,236
	pxor	xmm6,xmm4
DB	15,56,201,220
	cmp	r11d,11
	jb	NEAR $L$aesenclast12
	movups	xmm0,XMMWORD[64+rcx]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[80+rcx]
DB	102,15,56,220,208
	je	NEAR $L$aesenclast12
	movups	xmm0,XMMWORD[96+rcx]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[112+rcx]
DB	102,15,56,220,208
$L$aesenclast12:
DB	102,15,56,221,209
	movups	xmm0,XMMWORD[((16-112))+rcx]
	movdqa	xmm9,xmm8
DB	69,15,58,204,194,1
DB	68,15,56,200,205
	movups	xmm14,XMMWORD[32+rdi]
	xorps	xmm14,xmm15
	movups	XMMWORD[16+rdi*1+rsi],xmm2
	xorps	xmm2,xmm14
	movups	xmm1,XMMWORD[((-80))+rcx]
DB	102,15,56,220,208
DB	15,56,202,245
	pxor	xmm3,xmm5
DB	15,56,201,229
	movups	xmm0,XMMWORD[((-64))+rcx]
DB	102,15,56,220,209
	movdqa	xmm10,xmm8
DB	69,15,58,204,193,2
DB	68,15,56,200,214
	movups	xmm1,XMMWORD[((-48))+rcx]
DB	102,15,56,220,208
DB	15,56,202,222
	pxor	xmm4,xmm6
DB	15,56,201,238
	movups	xmm0,XMMWORD[((-32))+rcx]
DB	102,15,56,220,209
	movdqa	xmm9,xmm8
DB	69,15,58,204,194,2
DB	68,15,56,200,203
	movups	xmm1,XMMWORD[((-16))+rcx]
DB	102,15,56,220,208
DB	15,56,202,227
	pxor	xmm5,xmm3
DB	15,56,201,243
	movups	xmm0,XMMWORD[rcx]
DB	102,15,56,220,209
	movdqa	xmm10,xmm8
DB	69,15,58,204,193,2
DB	68,15,56,200,212
	movups	xmm1,XMMWORD[16+rcx]
DB	102,15,56,220,208
DB	15,56,202,236
	pxor	xmm6,xmm4
DB	15,56,201,220
	movups	xmm0,XMMWORD[32+rcx]
DB	102,15,56,220,209
	movdqa	xmm9,xmm8
DB	69,15,58,204,194,2
DB	68,15,56,200,205
	movups	xmm1,XMMWORD[48+rcx]
DB	102,15,56,220,208
DB	15,56,202,245
	pxor	xmm3,xmm5
DB	15,56,201,229
	cmp	r11d,11
	jb	NEAR $L$aesenclast13
	movups	xmm0,XMMWORD[64+rcx]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[80+rcx]
DB	102,15,56,220,208
	je	NEAR $L$aesenclast13
	movups	xmm0,XMMWORD[96+rcx]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[112+rcx]
DB	102,15,56,220,208
$L$aesenclast13:
DB	102,15,56,221,209
	movups	xmm0,XMMWORD[((16-112))+rcx]
	movdqa	xmm10,xmm8
DB	69,15,58,204,193,2
DB	68,15,56,200,214
	movups	xmm14,XMMWORD[48+rdi]
	xorps	xmm14,xmm15
	movups	XMMWORD[32+rdi*1+rsi],xmm2
	xorps	xmm2,xmm14
	movups	xmm1,XMMWORD[((-80))+rcx]
DB	102,15,56,220,208
DB	15,56,202,222
	pxor	xmm4,xmm6
DB	15,56,201,238
	movups	xmm0,XMMWORD[((-64))+rcx]
DB	102,15,56,220,209
	movdqa	xmm9,xmm8
DB	69,15,58,204,194,3
DB	68,15,56,200,203
	movups	xmm1,XMMWORD[((-48))+rcx]
DB	102,15,56,220,208
DB	15,56,202,227
	pxor	xmm5,xmm3
DB	15,56,201,243
	movups	xmm0,XMMWORD[((-32))+rcx]
DB	102,15,56,220,209
	movdqa	xmm10,xmm8
DB	69,15,58,204,193,3
DB	68,15,56,200,212
DB	15,56,202,236
	pxor	xmm6,xmm4
	movups	xmm1,XMMWORD[((-16))+rcx]
DB	102,15,56,220,208
	movdqa	xmm9,xmm8
DB	69,15,58,204,194,3
DB	68,15,56,200,205
DB	15,56,202,245
	movups	xmm0,XMMWORD[rcx]
DB	102,15,56,220,209
	movdqa	xmm5,xmm12
	movdqa	xmm10,xmm8
DB	69,15,58,204,193,3
DB	68,15,56,200,214
	movups	xmm1,XMMWORD[16+rcx]
DB	102,15,56,220,208
	movdqa	xmm9,xmm8
DB	69,15,58,204,194,3
DB	68,15,56,200,205
	movups	xmm0,XMMWORD[32+rcx]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[48+rcx]
DB	102,15,56,220,208
	cmp	r11d,11
	jb	NEAR $L$aesenclast14
	movups	xmm0,XMMWORD[64+rcx]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[80+rcx]
DB	102,15,56,220,208
	je	NEAR $L$aesenclast14
	movups	xmm0,XMMWORD[96+rcx]
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[112+rcx]
DB	102,15,56,220,208
$L$aesenclast14:
DB	102,15,56,221,209
	movups	xmm0,XMMWORD[((16-112))+rcx]
	dec	rdx

	paddd	xmm8,xmm11
	movups	XMMWORD[48+rdi*1+rsi],xmm2
	lea	rdi,[64+rdi]
	jnz	NEAR $L$oop_shaext

	pshufd	xmm8,xmm8,27
	pshufd	xmm9,xmm9,27
	movups	XMMWORD[r8],xmm2
	movdqu	XMMWORD[r9],xmm8
	movd	DWORD[16+r9],xmm9
	movaps	xmm6,XMMWORD[((-8-160))+rax]
	movaps	xmm7,XMMWORD[((-8-144))+rax]
	movaps	xmm8,XMMWORD[((-8-128))+rax]
	movaps	xmm9,XMMWORD[((-8-112))+rax]
	movaps	xmm10,XMMWORD[((-8-96))+rax]
	movaps	xmm11,XMMWORD[((-8-80))+rax]
	movaps	xmm12,XMMWORD[((-8-64))+rax]
	movaps	xmm13,XMMWORD[((-8-48))+rax]
	movaps	xmm14,XMMWORD[((-8-32))+rax]
	movaps	xmm15,XMMWORD[((-8-16))+rax]
	mov	rsp,rax
$L$epilogue_shaext:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_cbc_sha1_enc_shaext:
EXTERN	__imp_RtlVirtualUnwind

ALIGN	16
ssse3_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$common_seh_tail

	mov	rax,QWORD[152+r8]

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$common_seh_tail
	lea	r10,[aesni_cbc_sha1_enc_shaext]
	cmp	rbx,r10
	jb	NEAR $L$seh_no_shaext

	lea	rsi,[rax]
	lea	rdi,[512+r8]
	mov	ecx,20
	DD	0xa548f3fc
	lea	rax,[168+rax]
	jmp	NEAR $L$common_seh_tail
$L$seh_no_shaext:
	lea	rsi,[96+rax]
	lea	rdi,[512+r8]
	mov	ecx,20
	DD	0xa548f3fc
	lea	rax,[264+rax]

	mov	r15,QWORD[rax]
	mov	r14,QWORD[8+rax]
	mov	r13,QWORD[16+rax]
	mov	r12,QWORD[24+rax]
	mov	rbp,QWORD[32+rax]
	mov	rbx,QWORD[40+rax]
	lea	rax,[48+rax]
	mov	QWORD[144+r8],rbx
	mov	QWORD[160+r8],rbp
	mov	QWORD[216+r8],r12
	mov	QWORD[224+r8],r13
	mov	QWORD[232+r8],r14
	mov	QWORD[240+r8],r15

$L$common_seh_tail:
	mov	rdi,QWORD[8+rax]
	mov	rsi,QWORD[16+rax]
	mov	QWORD[152+r8],rax
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi

	mov	rdi,QWORD[40+r9]
	mov	rsi,r8
	mov	ecx,154
	DD	0xa548f3fc

	mov	rsi,r9
	xor	rcx,rcx
	mov	rdx,QWORD[8+rsi]
	mov	r8,QWORD[rsi]
	mov	r9,QWORD[16+rsi]
	mov	r10,QWORD[40+rsi]
	lea	r11,[56+rsi]
	lea	r12,[24+rsi]
	mov	QWORD[32+rsp],r10
	mov	QWORD[40+rsp],r11
	mov	QWORD[48+rsp],r12
	mov	QWORD[56+rsp],rcx
	call	QWORD[__imp_RtlVirtualUnwind]

	mov	eax,1
	add	rsp,64
	popfq
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	pop	rbx
	pop	rdi
	pop	rsi
	DB	0F3h,0C3h		;repret


section	.pdata rdata align=4
ALIGN	4
	DD	$L$SEH_begin_aesni_cbc_sha1_enc_ssse3 wrt ..imagebase
	DD	$L$SEH_end_aesni_cbc_sha1_enc_ssse3 wrt ..imagebase
	DD	$L$SEH_info_aesni_cbc_sha1_enc_ssse3 wrt ..imagebase
	DD	$L$SEH_begin_aesni_cbc_sha1_enc_avx wrt ..imagebase
	DD	$L$SEH_end_aesni_cbc_sha1_enc_avx wrt ..imagebase
	DD	$L$SEH_info_aesni_cbc_sha1_enc_avx wrt ..imagebase
	DD	$L$SEH_begin_aesni_cbc_sha1_enc_shaext wrt ..imagebase
	DD	$L$SEH_end_aesni_cbc_sha1_enc_shaext wrt ..imagebase
	DD	$L$SEH_info_aesni_cbc_sha1_enc_shaext wrt ..imagebase
section	.xdata rdata align=8
ALIGN	8
$L$SEH_info_aesni_cbc_sha1_enc_ssse3:
DB	9,0,0,0
	DD	ssse3_handler wrt ..imagebase
	DD	$L$prologue_ssse3 wrt ..imagebase,$L$epilogue_ssse3 wrt ..imagebase
$L$SEH_info_aesni_cbc_sha1_enc_avx:
DB	9,0,0,0
	DD	ssse3_handler wrt ..imagebase
	DD	$L$prologue_avx wrt ..imagebase,$L$epilogue_avx wrt ..imagebase
$L$SEH_info_aesni_cbc_sha1_enc_shaext:
DB	9,0,0,0
	DD	ssse3_handler wrt ..imagebase
	DD	$L$prologue_shaext wrt ..imagebase,$L$epilogue_shaext wrt ..imagebase
                                                                                                                                                node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/aes/aesni-sha256-x86_64.asm         0000664 0000000 0000000 00000254206 14746647661 0030342 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        default	rel
%define XMMWORD
%define YMMWORD
%define ZMMWORD
section	.text code align=64


EXTERN	OPENSSL_ia32cap_P
global	aesni_cbc_sha256_enc

ALIGN	16
aesni_cbc_sha256_enc:

	lea	r11,[OPENSSL_ia32cap_P]
	mov	eax,1
	cmp	rcx,0
	je	NEAR $L$probe
	mov	eax,DWORD[r11]
	mov	r10,QWORD[4+r11]
	bt	r10,61
	jc	NEAR aesni_cbc_sha256_enc_shaext
	mov	r11,r10
	shr	r11,32

	test	r10d,2048
	jnz	NEAR aesni_cbc_sha256_enc_xop
	and	r11d,296
	cmp	r11d,296
	je	NEAR aesni_cbc_sha256_enc_avx2
	and	r10d,268435456
	jnz	NEAR aesni_cbc_sha256_enc_avx
	ud2
	xor	eax,eax
	cmp	rcx,0
	je	NEAR $L$probe
	ud2
$L$probe:
	DB	0F3h,0C3h		;repret



ALIGN	64

K256:
	DD	0x428a2f98,0x71374491,0xb5c0fbcf,0xe9b5dba5
	DD	0x428a2f98,0x71374491,0xb5c0fbcf,0xe9b5dba5
	DD	0x3956c25b,0x59f111f1,0x923f82a4,0xab1c5ed5
	DD	0x3956c25b,0x59f111f1,0x923f82a4,0xab1c5ed5
	DD	0xd807aa98,0x12835b01,0x243185be,0x550c7dc3
	DD	0xd807aa98,0x12835b01,0x243185be,0x550c7dc3
	DD	0x72be5d74,0x80deb1fe,0x9bdc06a7,0xc19bf174
	DD	0x72be5d74,0x80deb1fe,0x9bdc06a7,0xc19bf174
	DD	0xe49b69c1,0xefbe4786,0x0fc19dc6,0x240ca1cc
	DD	0xe49b69c1,0xefbe4786,0x0fc19dc6,0x240ca1cc
	DD	0x2de92c6f,0x4a7484aa,0x5cb0a9dc,0x76f988da
	DD	0x2de92c6f,0x4a7484aa,0x5cb0a9dc,0x76f988da
	DD	0x983e5152,0xa831c66d,0xb00327c8,0xbf597fc7
	DD	0x983e5152,0xa831c66d,0xb00327c8,0xbf597fc7
	DD	0xc6e00bf3,0xd5a79147,0x06ca6351,0x14292967
	DD	0xc6e00bf3,0xd5a79147,0x06ca6351,0x14292967
	DD	0x27b70a85,0x2e1b2138,0x4d2c6dfc,0x53380d13
	DD	0x27b70a85,0x2e1b2138,0x4d2c6dfc,0x53380d13
	DD	0x650a7354,0x766a0abb,0x81c2c92e,0x92722c85
	DD	0x650a7354,0x766a0abb,0x81c2c92e,0x92722c85
	DD	0xa2bfe8a1,0xa81a664b,0xc24b8b70,0xc76c51a3
	DD	0xa2bfe8a1,0xa81a664b,0xc24b8b70,0xc76c51a3
	DD	0xd192e819,0xd6990624,0xf40e3585,0x106aa070
	DD	0xd192e819,0xd6990624,0xf40e3585,0x106aa070
	DD	0x19a4c116,0x1e376c08,0x2748774c,0x34b0bcb5
	DD	0x19a4c116,0x1e376c08,0x2748774c,0x34b0bcb5
	DD	0x391c0cb3,0x4ed8aa4a,0x5b9cca4f,0x682e6ff3
	DD	0x391c0cb3,0x4ed8aa4a,0x5b9cca4f,0x682e6ff3
	DD	0x748f82ee,0x78a5636f,0x84c87814,0x8cc70208
	DD	0x748f82ee,0x78a5636f,0x84c87814,0x8cc70208
	DD	0x90befffa,0xa4506ceb,0xbef9a3f7,0xc67178f2
	DD	0x90befffa,0xa4506ceb,0xbef9a3f7,0xc67178f2

	DD	0x00010203,0x04050607,0x08090a0b,0x0c0d0e0f
	DD	0x00010203,0x04050607,0x08090a0b,0x0c0d0e0f
	DD	0,0,0,0,0,0,0,0,-1,-1,-1,-1
	DD	0,0,0,0,0,0,0,0
DB	65,69,83,78,73,45,67,66,67,43,83,72,65,50,53,54
DB	32,115,116,105,116,99,104,32,102,111,114,32,120,56,54,95
DB	54,52,44,32,67,82,89,80,84,79,71,65,77,83,32,98
DB	121,32,60,97,112,112,114,111,64,111,112,101,110,115,115,108
DB	46,111,114,103,62,0
ALIGN	64

ALIGN	64
aesni_cbc_sha256_enc_xop:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_cbc_sha256_enc_xop:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



$L$xop_shortcut:
	mov	r10,QWORD[56+rsp]
	mov	rax,rsp

	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

	sub	rsp,288
	and	rsp,-64

	shl	rdx,6
	sub	rsi,rdi
	sub	r10,rdi
	add	rdx,rdi


	mov	QWORD[((64+8))+rsp],rsi
	mov	QWORD[((64+16))+rsp],rdx

	mov	QWORD[((64+32))+rsp],r8
	mov	QWORD[((64+40))+rsp],r9
	mov	QWORD[((64+48))+rsp],r10
	mov	QWORD[120+rsp],rax

	movaps	XMMWORD[128+rsp],xmm6
	movaps	XMMWORD[144+rsp],xmm7
	movaps	XMMWORD[160+rsp],xmm8
	movaps	XMMWORD[176+rsp],xmm9
	movaps	XMMWORD[192+rsp],xmm10
	movaps	XMMWORD[208+rsp],xmm11
	movaps	XMMWORD[224+rsp],xmm12
	movaps	XMMWORD[240+rsp],xmm13
	movaps	XMMWORD[256+rsp],xmm14
	movaps	XMMWORD[272+rsp],xmm15
$L$prologue_xop:
	vzeroall

	mov	r12,rdi
	lea	rdi,[128+rcx]
	lea	r13,[((K256+544))]
	mov	r14d,DWORD[((240-128))+rdi]
	mov	r15,r9
	mov	rsi,r10
	vmovdqu	xmm8,XMMWORD[r8]
	sub	r14,9

	mov	eax,DWORD[r15]
	mov	ebx,DWORD[4+r15]
	mov	ecx,DWORD[8+r15]
	mov	edx,DWORD[12+r15]
	mov	r8d,DWORD[16+r15]
	mov	r9d,DWORD[20+r15]
	mov	r10d,DWORD[24+r15]
	mov	r11d,DWORD[28+r15]

	vmovdqa	xmm14,XMMWORD[r14*8+r13]
	vmovdqa	xmm13,XMMWORD[16+r14*8+r13]
	vmovdqa	xmm12,XMMWORD[32+r14*8+r13]
	vmovdqu	xmm10,XMMWORD[((0-128))+rdi]
	jmp	NEAR $L$loop_xop
ALIGN	16
$L$loop_xop:
	vmovdqa	xmm7,XMMWORD[((K256+512))]
	vmovdqu	xmm0,XMMWORD[r12*1+rsi]
	vmovdqu	xmm1,XMMWORD[16+r12*1+rsi]
	vmovdqu	xmm2,XMMWORD[32+r12*1+rsi]
	vmovdqu	xmm3,XMMWORD[48+r12*1+rsi]
	vpshufb	xmm0,xmm0,xmm7
	lea	rbp,[K256]
	vpshufb	xmm1,xmm1,xmm7
	vpshufb	xmm2,xmm2,xmm7
	vpaddd	xmm4,xmm0,XMMWORD[rbp]
	vpshufb	xmm3,xmm3,xmm7
	vpaddd	xmm5,xmm1,XMMWORD[32+rbp]
	vpaddd	xmm6,xmm2,XMMWORD[64+rbp]
	vpaddd	xmm7,xmm3,XMMWORD[96+rbp]
	vmovdqa	XMMWORD[rsp],xmm4
	mov	r14d,eax
	vmovdqa	XMMWORD[16+rsp],xmm5
	mov	esi,ebx
	vmovdqa	XMMWORD[32+rsp],xmm6
	xor	esi,ecx
	vmovdqa	XMMWORD[48+rsp],xmm7
	mov	r13d,r8d
	jmp	NEAR $L$xop_00_47

ALIGN	16
$L$xop_00_47:
	sub	rbp,-16*2*4
	vmovdqu	xmm9,XMMWORD[r12]
	mov	QWORD[((64+0))+rsp],r12
	vpalignr	xmm4,xmm1,xmm0,4
	ror	r13d,14
	mov	eax,r14d
	vpalignr	xmm7,xmm3,xmm2,4
	mov	r12d,r9d
	xor	r13d,r8d
DB	143,232,120,194,236,14
	ror	r14d,9
	xor	r12d,r10d
	vpsrld	xmm4,xmm4,3
	ror	r13d,5
	xor	r14d,eax
	vpaddd	xmm0,xmm0,xmm7
	and	r12d,r8d
	vpxor	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((16-128))+rdi]
	xor	r13d,r8d
	add	r11d,DWORD[rsp]
	mov	r15d,eax
DB	143,232,120,194,245,11
	ror	r14d,11
	xor	r12d,r10d
	vpxor	xmm4,xmm4,xmm5
	xor	r15d,ebx
	ror	r13d,6
	add	r11d,r12d
	and	esi,r15d
DB	143,232,120,194,251,13
	xor	r14d,eax
	add	r11d,r13d
	vpxor	xmm4,xmm4,xmm6
	xor	esi,ebx
	add	edx,r11d
	vpsrld	xmm6,xmm3,10
	ror	r14d,2
	add	r11d,esi
	vpaddd	xmm0,xmm0,xmm4
	mov	r13d,edx
	add	r14d,r11d
DB	143,232,120,194,239,2
	ror	r13d,14
	mov	r11d,r14d
	vpxor	xmm7,xmm7,xmm6
	mov	r12d,r8d
	xor	r13d,edx
	ror	r14d,9
	xor	r12d,r9d
	vpxor	xmm7,xmm7,xmm5
	ror	r13d,5
	xor	r14d,r11d
	and	r12d,edx
	vpxor	xmm9,xmm9,xmm8
	xor	r13d,edx
	vpsrldq	xmm7,xmm7,8
	add	r10d,DWORD[4+rsp]
	mov	esi,r11d
	ror	r14d,11
	xor	r12d,r9d
	vpaddd	xmm0,xmm0,xmm7
	xor	esi,eax
	ror	r13d,6
	add	r10d,r12d
	and	r15d,esi
DB	143,232,120,194,248,13
	xor	r14d,r11d
	add	r10d,r13d
	vpsrld	xmm6,xmm0,10
	xor	r15d,eax
	add	ecx,r10d
DB	143,232,120,194,239,2
	ror	r14d,2
	add	r10d,r15d
	vpxor	xmm7,xmm7,xmm6
	mov	r13d,ecx
	add	r14d,r10d
	ror	r13d,14
	mov	r10d,r14d
	vpxor	xmm7,xmm7,xmm5
	mov	r12d,edx
	xor	r13d,ecx
	ror	r14d,9
	xor	r12d,r8d
	vpslldq	xmm7,xmm7,8
	ror	r13d,5
	xor	r14d,r10d
	and	r12d,ecx
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((32-128))+rdi]
	xor	r13d,ecx
	vpaddd	xmm0,xmm0,xmm7
	add	r9d,DWORD[8+rsp]
	mov	r15d,r10d
	ror	r14d,11
	xor	r12d,r8d
	vpaddd	xmm6,xmm0,XMMWORD[rbp]
	xor	r15d,r11d
	ror	r13d,6
	add	r9d,r12d
	and	esi,r15d
	xor	r14d,r10d
	add	r9d,r13d
	xor	esi,r11d
	add	ebx,r9d
	ror	r14d,2
	add	r9d,esi
	mov	r13d,ebx
	add	r14d,r9d
	ror	r13d,14
	mov	r9d,r14d
	mov	r12d,ecx
	xor	r13d,ebx
	ror	r14d,9
	xor	r12d,edx
	ror	r13d,5
	xor	r14d,r9d
	and	r12d,ebx
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((48-128))+rdi]
	xor	r13d,ebx
	add	r8d,DWORD[12+rsp]
	mov	esi,r9d
	ror	r14d,11
	xor	r12d,edx
	xor	esi,r10d
	ror	r13d,6
	add	r8d,r12d
	and	r15d,esi
	xor	r14d,r9d
	add	r8d,r13d
	xor	r15d,r10d
	add	eax,r8d
	ror	r14d,2
	add	r8d,r15d
	mov	r13d,eax
	add	r14d,r8d
	vmovdqa	XMMWORD[rsp],xmm6
	vpalignr	xmm4,xmm2,xmm1,4
	ror	r13d,14
	mov	r8d,r14d
	vpalignr	xmm7,xmm0,xmm3,4
	mov	r12d,ebx
	xor	r13d,eax
DB	143,232,120,194,236,14
	ror	r14d,9
	xor	r12d,ecx
	vpsrld	xmm4,xmm4,3
	ror	r13d,5
	xor	r14d,r8d
	vpaddd	xmm1,xmm1,xmm7
	and	r12d,eax
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((64-128))+rdi]
	xor	r13d,eax
	add	edx,DWORD[16+rsp]
	mov	r15d,r8d
DB	143,232,120,194,245,11
	ror	r14d,11
	xor	r12d,ecx
	vpxor	xmm4,xmm4,xmm5
	xor	r15d,r9d
	ror	r13d,6
	add	edx,r12d
	and	esi,r15d
DB	143,232,120,194,248,13
	xor	r14d,r8d
	add	edx,r13d
	vpxor	xmm4,xmm4,xmm6
	xor	esi,r9d
	add	r11d,edx
	vpsrld	xmm6,xmm0,10
	ror	r14d,2
	add	edx,esi
	vpaddd	xmm1,xmm1,xmm4
	mov	r13d,r11d
	add	r14d,edx
DB	143,232,120,194,239,2
	ror	r13d,14
	mov	edx,r14d
	vpxor	xmm7,xmm7,xmm6
	mov	r12d,eax
	xor	r13d,r11d
	ror	r14d,9
	xor	r12d,ebx
	vpxor	xmm7,xmm7,xmm5
	ror	r13d,5
	xor	r14d,edx
	and	r12d,r11d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((80-128))+rdi]
	xor	r13d,r11d
	vpsrldq	xmm7,xmm7,8
	add	ecx,DWORD[20+rsp]
	mov	esi,edx
	ror	r14d,11
	xor	r12d,ebx
	vpaddd	xmm1,xmm1,xmm7
	xor	esi,r8d
	ror	r13d,6
	add	ecx,r12d
	and	r15d,esi
DB	143,232,120,194,249,13
	xor	r14d,edx
	add	ecx,r13d
	vpsrld	xmm6,xmm1,10
	xor	r15d,r8d
	add	r10d,ecx
DB	143,232,120,194,239,2
	ror	r14d,2
	add	ecx,r15d
	vpxor	xmm7,xmm7,xmm6
	mov	r13d,r10d
	add	r14d,ecx
	ror	r13d,14
	mov	ecx,r14d
	vpxor	xmm7,xmm7,xmm5
	mov	r12d,r11d
	xor	r13d,r10d
	ror	r14d,9
	xor	r12d,eax
	vpslldq	xmm7,xmm7,8
	ror	r13d,5
	xor	r14d,ecx
	and	r12d,r10d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((96-128))+rdi]
	xor	r13d,r10d
	vpaddd	xmm1,xmm1,xmm7
	add	ebx,DWORD[24+rsp]
	mov	r15d,ecx
	ror	r14d,11
	xor	r12d,eax
	vpaddd	xmm6,xmm1,XMMWORD[32+rbp]
	xor	r15d,edx
	ror	r13d,6
	add	ebx,r12d
	and	esi,r15d
	xor	r14d,ecx
	add	ebx,r13d
	xor	esi,edx
	add	r9d,ebx
	ror	r14d,2
	add	ebx,esi
	mov	r13d,r9d
	add	r14d,ebx
	ror	r13d,14
	mov	ebx,r14d
	mov	r12d,r10d
	xor	r13d,r9d
	ror	r14d,9
	xor	r12d,r11d
	ror	r13d,5
	xor	r14d,ebx
	and	r12d,r9d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((112-128))+rdi]
	xor	r13d,r9d
	add	eax,DWORD[28+rsp]
	mov	esi,ebx
	ror	r14d,11
	xor	r12d,r11d
	xor	esi,ecx
	ror	r13d,6
	add	eax,r12d
	and	r15d,esi
	xor	r14d,ebx
	add	eax,r13d
	xor	r15d,ecx
	add	r8d,eax
	ror	r14d,2
	add	eax,r15d
	mov	r13d,r8d
	add	r14d,eax
	vmovdqa	XMMWORD[16+rsp],xmm6
	vpalignr	xmm4,xmm3,xmm2,4
	ror	r13d,14
	mov	eax,r14d
	vpalignr	xmm7,xmm1,xmm0,4
	mov	r12d,r9d
	xor	r13d,r8d
DB	143,232,120,194,236,14
	ror	r14d,9
	xor	r12d,r10d
	vpsrld	xmm4,xmm4,3
	ror	r13d,5
	xor	r14d,eax
	vpaddd	xmm2,xmm2,xmm7
	and	r12d,r8d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((128-128))+rdi]
	xor	r13d,r8d
	add	r11d,DWORD[32+rsp]
	mov	r15d,eax
DB	143,232,120,194,245,11
	ror	r14d,11
	xor	r12d,r10d
	vpxor	xmm4,xmm4,xmm5
	xor	r15d,ebx
	ror	r13d,6
	add	r11d,r12d
	and	esi,r15d
DB	143,232,120,194,249,13
	xor	r14d,eax
	add	r11d,r13d
	vpxor	xmm4,xmm4,xmm6
	xor	esi,ebx
	add	edx,r11d
	vpsrld	xmm6,xmm1,10
	ror	r14d,2
	add	r11d,esi
	vpaddd	xmm2,xmm2,xmm4
	mov	r13d,edx
	add	r14d,r11d
DB	143,232,120,194,239,2
	ror	r13d,14
	mov	r11d,r14d
	vpxor	xmm7,xmm7,xmm6
	mov	r12d,r8d
	xor	r13d,edx
	ror	r14d,9
	xor	r12d,r9d
	vpxor	xmm7,xmm7,xmm5
	ror	r13d,5
	xor	r14d,r11d
	and	r12d,edx
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((144-128))+rdi]
	xor	r13d,edx
	vpsrldq	xmm7,xmm7,8
	add	r10d,DWORD[36+rsp]
	mov	esi,r11d
	ror	r14d,11
	xor	r12d,r9d
	vpaddd	xmm2,xmm2,xmm7
	xor	esi,eax
	ror	r13d,6
	add	r10d,r12d
	and	r15d,esi
DB	143,232,120,194,250,13
	xor	r14d,r11d
	add	r10d,r13d
	vpsrld	xmm6,xmm2,10
	xor	r15d,eax
	add	ecx,r10d
DB	143,232,120,194,239,2
	ror	r14d,2
	add	r10d,r15d
	vpxor	xmm7,xmm7,xmm6
	mov	r13d,ecx
	add	r14d,r10d
	ror	r13d,14
	mov	r10d,r14d
	vpxor	xmm7,xmm7,xmm5
	mov	r12d,edx
	xor	r13d,ecx
	ror	r14d,9
	xor	r12d,r8d
	vpslldq	xmm7,xmm7,8
	ror	r13d,5
	xor	r14d,r10d
	and	r12d,ecx
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((160-128))+rdi]
	xor	r13d,ecx
	vpaddd	xmm2,xmm2,xmm7
	add	r9d,DWORD[40+rsp]
	mov	r15d,r10d
	ror	r14d,11
	xor	r12d,r8d
	vpaddd	xmm6,xmm2,XMMWORD[64+rbp]
	xor	r15d,r11d
	ror	r13d,6
	add	r9d,r12d
	and	esi,r15d
	xor	r14d,r10d
	add	r9d,r13d
	xor	esi,r11d
	add	ebx,r9d
	ror	r14d,2
	add	r9d,esi
	mov	r13d,ebx
	add	r14d,r9d
	ror	r13d,14
	mov	r9d,r14d
	mov	r12d,ecx
	xor	r13d,ebx
	ror	r14d,9
	xor	r12d,edx
	ror	r13d,5
	xor	r14d,r9d
	and	r12d,ebx
	vaesenclast	xmm11,xmm9,xmm10
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((176-128))+rdi]
	xor	r13d,ebx
	add	r8d,DWORD[44+rsp]
	mov	esi,r9d
	ror	r14d,11
	xor	r12d,edx
	xor	esi,r10d
	ror	r13d,6
	add	r8d,r12d
	and	r15d,esi
	xor	r14d,r9d
	add	r8d,r13d
	xor	r15d,r10d
	add	eax,r8d
	ror	r14d,2
	add	r8d,r15d
	mov	r13d,eax
	add	r14d,r8d
	vmovdqa	XMMWORD[32+rsp],xmm6
	vpalignr	xmm4,xmm0,xmm3,4
	ror	r13d,14
	mov	r8d,r14d
	vpalignr	xmm7,xmm2,xmm1,4
	mov	r12d,ebx
	xor	r13d,eax
DB	143,232,120,194,236,14
	ror	r14d,9
	xor	r12d,ecx
	vpsrld	xmm4,xmm4,3
	ror	r13d,5
	xor	r14d,r8d
	vpaddd	xmm3,xmm3,xmm7
	and	r12d,eax
	vpand	xmm8,xmm11,xmm12
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((192-128))+rdi]
	xor	r13d,eax
	add	edx,DWORD[48+rsp]
	mov	r15d,r8d
DB	143,232,120,194,245,11
	ror	r14d,11
	xor	r12d,ecx
	vpxor	xmm4,xmm4,xmm5
	xor	r15d,r9d
	ror	r13d,6
	add	edx,r12d
	and	esi,r15d
DB	143,232,120,194,250,13
	xor	r14d,r8d
	add	edx,r13d
	vpxor	xmm4,xmm4,xmm6
	xor	esi,r9d
	add	r11d,edx
	vpsrld	xmm6,xmm2,10
	ror	r14d,2
	add	edx,esi
	vpaddd	xmm3,xmm3,xmm4
	mov	r13d,r11d
	add	r14d,edx
DB	143,232,120,194,239,2
	ror	r13d,14
	mov	edx,r14d
	vpxor	xmm7,xmm7,xmm6
	mov	r12d,eax
	xor	r13d,r11d
	ror	r14d,9
	xor	r12d,ebx
	vpxor	xmm7,xmm7,xmm5
	ror	r13d,5
	xor	r14d,edx
	and	r12d,r11d
	vaesenclast	xmm11,xmm9,xmm10
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((208-128))+rdi]
	xor	r13d,r11d
	vpsrldq	xmm7,xmm7,8
	add	ecx,DWORD[52+rsp]
	mov	esi,edx
	ror	r14d,11
	xor	r12d,ebx
	vpaddd	xmm3,xmm3,xmm7
	xor	esi,r8d
	ror	r13d,6
	add	ecx,r12d
	and	r15d,esi
DB	143,232,120,194,251,13
	xor	r14d,edx
	add	ecx,r13d
	vpsrld	xmm6,xmm3,10
	xor	r15d,r8d
	add	r10d,ecx
DB	143,232,120,194,239,2
	ror	r14d,2
	add	ecx,r15d
	vpxor	xmm7,xmm7,xmm6
	mov	r13d,r10d
	add	r14d,ecx
	ror	r13d,14
	mov	ecx,r14d
	vpxor	xmm7,xmm7,xmm5
	mov	r12d,r11d
	xor	r13d,r10d
	ror	r14d,9
	xor	r12d,eax
	vpslldq	xmm7,xmm7,8
	ror	r13d,5
	xor	r14d,ecx
	and	r12d,r10d
	vpand	xmm11,xmm11,xmm13
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((224-128))+rdi]
	xor	r13d,r10d
	vpaddd	xmm3,xmm3,xmm7
	add	ebx,DWORD[56+rsp]
	mov	r15d,ecx
	ror	r14d,11
	xor	r12d,eax
	vpaddd	xmm6,xmm3,XMMWORD[96+rbp]
	xor	r15d,edx
	ror	r13d,6
	add	ebx,r12d
	and	esi,r15d
	xor	r14d,ecx
	add	ebx,r13d
	xor	esi,edx
	add	r9d,ebx
	ror	r14d,2
	add	ebx,esi
	mov	r13d,r9d
	add	r14d,ebx
	ror	r13d,14
	mov	ebx,r14d
	mov	r12d,r10d
	xor	r13d,r9d
	ror	r14d,9
	xor	r12d,r11d
	ror	r13d,5
	xor	r14d,ebx
	and	r12d,r9d
	vpor	xmm8,xmm8,xmm11
	vaesenclast	xmm11,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((0-128))+rdi]
	xor	r13d,r9d
	add	eax,DWORD[60+rsp]
	mov	esi,ebx
	ror	r14d,11
	xor	r12d,r11d
	xor	esi,ecx
	ror	r13d,6
	add	eax,r12d
	and	r15d,esi
	xor	r14d,ebx
	add	eax,r13d
	xor	r15d,ecx
	add	r8d,eax
	ror	r14d,2
	add	eax,r15d
	mov	r13d,r8d
	add	r14d,eax
	vmovdqa	XMMWORD[48+rsp],xmm6
	mov	r12,QWORD[((64+0))+rsp]
	vpand	xmm11,xmm11,xmm14
	mov	r15,QWORD[((64+8))+rsp]
	vpor	xmm8,xmm8,xmm11
	vmovdqu	XMMWORD[r12*1+r15],xmm8
	lea	r12,[16+r12]
	cmp	BYTE[131+rbp],0
	jne	NEAR $L$xop_00_47
	vmovdqu	xmm9,XMMWORD[r12]
	mov	QWORD[((64+0))+rsp],r12
	ror	r13d,14
	mov	eax,r14d
	mov	r12d,r9d
	xor	r13d,r8d
	ror	r14d,9
	xor	r12d,r10d
	ror	r13d,5
	xor	r14d,eax
	and	r12d,r8d
	vpxor	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((16-128))+rdi]
	xor	r13d,r8d
	add	r11d,DWORD[rsp]
	mov	r15d,eax
	ror	r14d,11
	xor	r12d,r10d
	xor	r15d,ebx
	ror	r13d,6
	add	r11d,r12d
	and	esi,r15d
	xor	r14d,eax
	add	r11d,r13d
	xor	esi,ebx
	add	edx,r11d
	ror	r14d,2
	add	r11d,esi
	mov	r13d,edx
	add	r14d,r11d
	ror	r13d,14
	mov	r11d,r14d
	mov	r12d,r8d
	xor	r13d,edx
	ror	r14d,9
	xor	r12d,r9d
	ror	r13d,5
	xor	r14d,r11d
	and	r12d,edx
	vpxor	xmm9,xmm9,xmm8
	xor	r13d,edx
	add	r10d,DWORD[4+rsp]
	mov	esi,r11d
	ror	r14d,11
	xor	r12d,r9d
	xor	esi,eax
	ror	r13d,6
	add	r10d,r12d
	and	r15d,esi
	xor	r14d,r11d
	add	r10d,r13d
	xor	r15d,eax
	add	ecx,r10d
	ror	r14d,2
	add	r10d,r15d
	mov	r13d,ecx
	add	r14d,r10d
	ror	r13d,14
	mov	r10d,r14d
	mov	r12d,edx
	xor	r13d,ecx
	ror	r14d,9
	xor	r12d,r8d
	ror	r13d,5
	xor	r14d,r10d
	and	r12d,ecx
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((32-128))+rdi]
	xor	r13d,ecx
	add	r9d,DWORD[8+rsp]
	mov	r15d,r10d
	ror	r14d,11
	xor	r12d,r8d
	xor	r15d,r11d
	ror	r13d,6
	add	r9d,r12d
	and	esi,r15d
	xor	r14d,r10d
	add	r9d,r13d
	xor	esi,r11d
	add	ebx,r9d
	ror	r14d,2
	add	r9d,esi
	mov	r13d,ebx
	add	r14d,r9d
	ror	r13d,14
	mov	r9d,r14d
	mov	r12d,ecx
	xor	r13d,ebx
	ror	r14d,9
	xor	r12d,edx
	ror	r13d,5
	xor	r14d,r9d
	and	r12d,ebx
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((48-128))+rdi]
	xor	r13d,ebx
	add	r8d,DWORD[12+rsp]
	mov	esi,r9d
	ror	r14d,11
	xor	r12d,edx
	xor	esi,r10d
	ror	r13d,6
	add	r8d,r12d
	and	r15d,esi
	xor	r14d,r9d
	add	r8d,r13d
	xor	r15d,r10d
	add	eax,r8d
	ror	r14d,2
	add	r8d,r15d
	mov	r13d,eax
	add	r14d,r8d
	ror	r13d,14
	mov	r8d,r14d
	mov	r12d,ebx
	xor	r13d,eax
	ror	r14d,9
	xor	r12d,ecx
	ror	r13d,5
	xor	r14d,r8d
	and	r12d,eax
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((64-128))+rdi]
	xor	r13d,eax
	add	edx,DWORD[16+rsp]
	mov	r15d,r8d
	ror	r14d,11
	xor	r12d,ecx
	xor	r15d,r9d
	ror	r13d,6
	add	edx,r12d
	and	esi,r15d
	xor	r14d,r8d
	add	edx,r13d
	xor	esi,r9d
	add	r11d,edx
	ror	r14d,2
	add	edx,esi
	mov	r13d,r11d
	add	r14d,edx
	ror	r13d,14
	mov	edx,r14d
	mov	r12d,eax
	xor	r13d,r11d
	ror	r14d,9
	xor	r12d,ebx
	ror	r13d,5
	xor	r14d,edx
	and	r12d,r11d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((80-128))+rdi]
	xor	r13d,r11d
	add	ecx,DWORD[20+rsp]
	mov	esi,edx
	ror	r14d,11
	xor	r12d,ebx
	xor	esi,r8d
	ror	r13d,6
	add	ecx,r12d
	and	r15d,esi
	xor	r14d,edx
	add	ecx,r13d
	xor	r15d,r8d
	add	r10d,ecx
	ror	r14d,2
	add	ecx,r15d
	mov	r13d,r10d
	add	r14d,ecx
	ror	r13d,14
	mov	ecx,r14d
	mov	r12d,r11d
	xor	r13d,r10d
	ror	r14d,9
	xor	r12d,eax
	ror	r13d,5
	xor	r14d,ecx
	and	r12d,r10d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((96-128))+rdi]
	xor	r13d,r10d
	add	ebx,DWORD[24+rsp]
	mov	r15d,ecx
	ror	r14d,11
	xor	r12d,eax
	xor	r15d,edx
	ror	r13d,6
	add	ebx,r12d
	and	esi,r15d
	xor	r14d,ecx
	add	ebx,r13d
	xor	esi,edx
	add	r9d,ebx
	ror	r14d,2
	add	ebx,esi
	mov	r13d,r9d
	add	r14d,ebx
	ror	r13d,14
	mov	ebx,r14d
	mov	r12d,r10d
	xor	r13d,r9d
	ror	r14d,9
	xor	r12d,r11d
	ror	r13d,5
	xor	r14d,ebx
	and	r12d,r9d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((112-128))+rdi]
	xor	r13d,r9d
	add	eax,DWORD[28+rsp]
	mov	esi,ebx
	ror	r14d,11
	xor	r12d,r11d
	xor	esi,ecx
	ror	r13d,6
	add	eax,r12d
	and	r15d,esi
	xor	r14d,ebx
	add	eax,r13d
	xor	r15d,ecx
	add	r8d,eax
	ror	r14d,2
	add	eax,r15d
	mov	r13d,r8d
	add	r14d,eax
	ror	r13d,14
	mov	eax,r14d
	mov	r12d,r9d
	xor	r13d,r8d
	ror	r14d,9
	xor	r12d,r10d
	ror	r13d,5
	xor	r14d,eax
	and	r12d,r8d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((128-128))+rdi]
	xor	r13d,r8d
	add	r11d,DWORD[32+rsp]
	mov	r15d,eax
	ror	r14d,11
	xor	r12d,r10d
	xor	r15d,ebx
	ror	r13d,6
	add	r11d,r12d
	and	esi,r15d
	xor	r14d,eax
	add	r11d,r13d
	xor	esi,ebx
	add	edx,r11d
	ror	r14d,2
	add	r11d,esi
	mov	r13d,edx
	add	r14d,r11d
	ror	r13d,14
	mov	r11d,r14d
	mov	r12d,r8d
	xor	r13d,edx
	ror	r14d,9
	xor	r12d,r9d
	ror	r13d,5
	xor	r14d,r11d
	and	r12d,edx
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((144-128))+rdi]
	xor	r13d,edx
	add	r10d,DWORD[36+rsp]
	mov	esi,r11d
	ror	r14d,11
	xor	r12d,r9d
	xor	esi,eax
	ror	r13d,6
	add	r10d,r12d
	and	r15d,esi
	xor	r14d,r11d
	add	r10d,r13d
	xor	r15d,eax
	add	ecx,r10d
	ror	r14d,2
	add	r10d,r15d
	mov	r13d,ecx
	add	r14d,r10d
	ror	r13d,14
	mov	r10d,r14d
	mov	r12d,edx
	xor	r13d,ecx
	ror	r14d,9
	xor	r12d,r8d
	ror	r13d,5
	xor	r14d,r10d
	and	r12d,ecx
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((160-128))+rdi]
	xor	r13d,ecx
	add	r9d,DWORD[40+rsp]
	mov	r15d,r10d
	ror	r14d,11
	xor	r12d,r8d
	xor	r15d,r11d
	ror	r13d,6
	add	r9d,r12d
	and	esi,r15d
	xor	r14d,r10d
	add	r9d,r13d
	xor	esi,r11d
	add	ebx,r9d
	ror	r14d,2
	add	r9d,esi
	mov	r13d,ebx
	add	r14d,r9d
	ror	r13d,14
	mov	r9d,r14d
	mov	r12d,ecx
	xor	r13d,ebx
	ror	r14d,9
	xor	r12d,edx
	ror	r13d,5
	xor	r14d,r9d
	and	r12d,ebx
	vaesenclast	xmm11,xmm9,xmm10
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((176-128))+rdi]
	xor	r13d,ebx
	add	r8d,DWORD[44+rsp]
	mov	esi,r9d
	ror	r14d,11
	xor	r12d,edx
	xor	esi,r10d
	ror	r13d,6
	add	r8d,r12d
	and	r15d,esi
	xor	r14d,r9d
	add	r8d,r13d
	xor	r15d,r10d
	add	eax,r8d
	ror	r14d,2
	add	r8d,r15d
	mov	r13d,eax
	add	r14d,r8d
	ror	r13d,14
	mov	r8d,r14d
	mov	r12d,ebx
	xor	r13d,eax
	ror	r14d,9
	xor	r12d,ecx
	ror	r13d,5
	xor	r14d,r8d
	and	r12d,eax
	vpand	xmm8,xmm11,xmm12
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((192-128))+rdi]
	xor	r13d,eax
	add	edx,DWORD[48+rsp]
	mov	r15d,r8d
	ror	r14d,11
	xor	r12d,ecx
	xor	r15d,r9d
	ror	r13d,6
	add	edx,r12d
	and	esi,r15d
	xor	r14d,r8d
	add	edx,r13d
	xor	esi,r9d
	add	r11d,edx
	ror	r14d,2
	add	edx,esi
	mov	r13d,r11d
	add	r14d,edx
	ror	r13d,14
	mov	edx,r14d
	mov	r12d,eax
	xor	r13d,r11d
	ror	r14d,9
	xor	r12d,ebx
	ror	r13d,5
	xor	r14d,edx
	and	r12d,r11d
	vaesenclast	xmm11,xmm9,xmm10
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((208-128))+rdi]
	xor	r13d,r11d
	add	ecx,DWORD[52+rsp]
	mov	esi,edx
	ror	r14d,11
	xor	r12d,ebx
	xor	esi,r8d
	ror	r13d,6
	add	ecx,r12d
	and	r15d,esi
	xor	r14d,edx
	add	ecx,r13d
	xor	r15d,r8d
	add	r10d,ecx
	ror	r14d,2
	add	ecx,r15d
	mov	r13d,r10d
	add	r14d,ecx
	ror	r13d,14
	mov	ecx,r14d
	mov	r12d,r11d
	xor	r13d,r10d
	ror	r14d,9
	xor	r12d,eax
	ror	r13d,5
	xor	r14d,ecx
	and	r12d,r10d
	vpand	xmm11,xmm11,xmm13
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((224-128))+rdi]
	xor	r13d,r10d
	add	ebx,DWORD[56+rsp]
	mov	r15d,ecx
	ror	r14d,11
	xor	r12d,eax
	xor	r15d,edx
	ror	r13d,6
	add	ebx,r12d
	and	esi,r15d
	xor	r14d,ecx
	add	ebx,r13d
	xor	esi,edx
	add	r9d,ebx
	ror	r14d,2
	add	ebx,esi
	mov	r13d,r9d
	add	r14d,ebx
	ror	r13d,14
	mov	ebx,r14d
	mov	r12d,r10d
	xor	r13d,r9d
	ror	r14d,9
	xor	r12d,r11d
	ror	r13d,5
	xor	r14d,ebx
	and	r12d,r9d
	vpor	xmm8,xmm8,xmm11
	vaesenclast	xmm11,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((0-128))+rdi]
	xor	r13d,r9d
	add	eax,DWORD[60+rsp]
	mov	esi,ebx
	ror	r14d,11
	xor	r12d,r11d
	xor	esi,ecx
	ror	r13d,6
	add	eax,r12d
	and	r15d,esi
	xor	r14d,ebx
	add	eax,r13d
	xor	r15d,ecx
	add	r8d,eax
	ror	r14d,2
	add	eax,r15d
	mov	r13d,r8d
	add	r14d,eax
	mov	r12,QWORD[((64+0))+rsp]
	mov	r13,QWORD[((64+8))+rsp]
	mov	r15,QWORD[((64+40))+rsp]
	mov	rsi,QWORD[((64+48))+rsp]

	vpand	xmm11,xmm11,xmm14
	mov	eax,r14d
	vpor	xmm8,xmm8,xmm11
	vmovdqu	XMMWORD[r13*1+r12],xmm8
	lea	r12,[16+r12]

	add	eax,DWORD[r15]
	add	ebx,DWORD[4+r15]
	add	ecx,DWORD[8+r15]
	add	edx,DWORD[12+r15]
	add	r8d,DWORD[16+r15]
	add	r9d,DWORD[20+r15]
	add	r10d,DWORD[24+r15]
	add	r11d,DWORD[28+r15]

	cmp	r12,QWORD[((64+16))+rsp]

	mov	DWORD[r15],eax
	mov	DWORD[4+r15],ebx
	mov	DWORD[8+r15],ecx
	mov	DWORD[12+r15],edx
	mov	DWORD[16+r15],r8d
	mov	DWORD[20+r15],r9d
	mov	DWORD[24+r15],r10d
	mov	DWORD[28+r15],r11d

	jb	NEAR $L$loop_xop

	mov	r8,QWORD[((64+32))+rsp]
	mov	rsi,QWORD[120+rsp]

	vmovdqu	XMMWORD[r8],xmm8
	vzeroall
	movaps	xmm6,XMMWORD[128+rsp]
	movaps	xmm7,XMMWORD[144+rsp]
	movaps	xmm8,XMMWORD[160+rsp]
	movaps	xmm9,XMMWORD[176+rsp]
	movaps	xmm10,XMMWORD[192+rsp]
	movaps	xmm11,XMMWORD[208+rsp]
	movaps	xmm12,XMMWORD[224+rsp]
	movaps	xmm13,XMMWORD[240+rsp]
	movaps	xmm14,XMMWORD[256+rsp]
	movaps	xmm15,XMMWORD[272+rsp]
	mov	r15,QWORD[((-48))+rsi]

	mov	r14,QWORD[((-40))+rsi]

	mov	r13,QWORD[((-32))+rsi]

	mov	r12,QWORD[((-24))+rsi]

	mov	rbp,QWORD[((-16))+rsi]

	mov	rbx,QWORD[((-8))+rsi]

	lea	rsp,[rsi]

$L$epilogue_xop:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_cbc_sha256_enc_xop:

ALIGN	64
aesni_cbc_sha256_enc_avx:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_cbc_sha256_enc_avx:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



$L$avx_shortcut:
	mov	r10,QWORD[56+rsp]
	mov	rax,rsp

	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

	sub	rsp,288
	and	rsp,-64

	shl	rdx,6
	sub	rsi,rdi
	sub	r10,rdi
	add	rdx,rdi


	mov	QWORD[((64+8))+rsp],rsi
	mov	QWORD[((64+16))+rsp],rdx

	mov	QWORD[((64+32))+rsp],r8
	mov	QWORD[((64+40))+rsp],r9
	mov	QWORD[((64+48))+rsp],r10
	mov	QWORD[120+rsp],rax

	movaps	XMMWORD[128+rsp],xmm6
	movaps	XMMWORD[144+rsp],xmm7
	movaps	XMMWORD[160+rsp],xmm8
	movaps	XMMWORD[176+rsp],xmm9
	movaps	XMMWORD[192+rsp],xmm10
	movaps	XMMWORD[208+rsp],xmm11
	movaps	XMMWORD[224+rsp],xmm12
	movaps	XMMWORD[240+rsp],xmm13
	movaps	XMMWORD[256+rsp],xmm14
	movaps	XMMWORD[272+rsp],xmm15
$L$prologue_avx:
	vzeroall

	mov	r12,rdi
	lea	rdi,[128+rcx]
	lea	r13,[((K256+544))]
	mov	r14d,DWORD[((240-128))+rdi]
	mov	r15,r9
	mov	rsi,r10
	vmovdqu	xmm8,XMMWORD[r8]
	sub	r14,9

	mov	eax,DWORD[r15]
	mov	ebx,DWORD[4+r15]
	mov	ecx,DWORD[8+r15]
	mov	edx,DWORD[12+r15]
	mov	r8d,DWORD[16+r15]
	mov	r9d,DWORD[20+r15]
	mov	r10d,DWORD[24+r15]
	mov	r11d,DWORD[28+r15]

	vmovdqa	xmm14,XMMWORD[r14*8+r13]
	vmovdqa	xmm13,XMMWORD[16+r14*8+r13]
	vmovdqa	xmm12,XMMWORD[32+r14*8+r13]
	vmovdqu	xmm10,XMMWORD[((0-128))+rdi]
	jmp	NEAR $L$loop_avx
ALIGN	16
$L$loop_avx:
	vmovdqa	xmm7,XMMWORD[((K256+512))]
	vmovdqu	xmm0,XMMWORD[r12*1+rsi]
	vmovdqu	xmm1,XMMWORD[16+r12*1+rsi]
	vmovdqu	xmm2,XMMWORD[32+r12*1+rsi]
	vmovdqu	xmm3,XMMWORD[48+r12*1+rsi]
	vpshufb	xmm0,xmm0,xmm7
	lea	rbp,[K256]
	vpshufb	xmm1,xmm1,xmm7
	vpshufb	xmm2,xmm2,xmm7
	vpaddd	xmm4,xmm0,XMMWORD[rbp]
	vpshufb	xmm3,xmm3,xmm7
	vpaddd	xmm5,xmm1,XMMWORD[32+rbp]
	vpaddd	xmm6,xmm2,XMMWORD[64+rbp]
	vpaddd	xmm7,xmm3,XMMWORD[96+rbp]
	vmovdqa	XMMWORD[rsp],xmm4
	mov	r14d,eax
	vmovdqa	XMMWORD[16+rsp],xmm5
	mov	esi,ebx
	vmovdqa	XMMWORD[32+rsp],xmm6
	xor	esi,ecx
	vmovdqa	XMMWORD[48+rsp],xmm7
	mov	r13d,r8d
	jmp	NEAR $L$avx_00_47

ALIGN	16
$L$avx_00_47:
	sub	rbp,-16*2*4
	vmovdqu	xmm9,XMMWORD[r12]
	mov	QWORD[((64+0))+rsp],r12
	vpalignr	xmm4,xmm1,xmm0,4
	shrd	r13d,r13d,14
	mov	eax,r14d
	mov	r12d,r9d
	vpalignr	xmm7,xmm3,xmm2,4
	xor	r13d,r8d
	shrd	r14d,r14d,9
	xor	r12d,r10d
	vpsrld	xmm6,xmm4,7
	shrd	r13d,r13d,5
	xor	r14d,eax
	and	r12d,r8d
	vpaddd	xmm0,xmm0,xmm7
	vpxor	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((16-128))+rdi]
	xor	r13d,r8d
	add	r11d,DWORD[rsp]
	mov	r15d,eax
	vpsrld	xmm7,xmm4,3
	shrd	r14d,r14d,11
	xor	r12d,r10d
	xor	r15d,ebx
	vpslld	xmm5,xmm4,14
	shrd	r13d,r13d,6
	add	r11d,r12d
	and	esi,r15d
	vpxor	xmm4,xmm7,xmm6
	xor	r14d,eax
	add	r11d,r13d
	xor	esi,ebx
	vpshufd	xmm7,xmm3,250
	add	edx,r11d
	shrd	r14d,r14d,2
	add	r11d,esi
	vpsrld	xmm6,xmm6,11
	mov	r13d,edx
	add	r14d,r11d
	shrd	r13d,r13d,14
	vpxor	xmm4,xmm4,xmm5
	mov	r11d,r14d
	mov	r12d,r8d
	xor	r13d,edx
	vpslld	xmm5,xmm5,11
	shrd	r14d,r14d,9
	xor	r12d,r9d
	shrd	r13d,r13d,5
	vpxor	xmm4,xmm4,xmm6
	xor	r14d,r11d
	and	r12d,edx
	vpxor	xmm9,xmm9,xmm8
	xor	r13d,edx
	vpsrld	xmm6,xmm7,10
	add	r10d,DWORD[4+rsp]
	mov	esi,r11d
	shrd	r14d,r14d,11
	vpxor	xmm4,xmm4,xmm5
	xor	r12d,r9d
	xor	esi,eax
	shrd	r13d,r13d,6
	vpsrlq	xmm7,xmm7,17
	add	r10d,r12d
	and	r15d,esi
	xor	r14d,r11d
	vpaddd	xmm0,xmm0,xmm4
	add	r10d,r13d
	xor	r15d,eax
	add	ecx,r10d
	vpxor	xmm6,xmm6,xmm7
	shrd	r14d,r14d,2
	add	r10d,r15d
	mov	r13d,ecx
	vpsrlq	xmm7,xmm7,2
	add	r14d,r10d
	shrd	r13d,r13d,14
	mov	r10d,r14d
	vpxor	xmm6,xmm6,xmm7
	mov	r12d,edx
	xor	r13d,ecx
	shrd	r14d,r14d,9
	vpshufd	xmm6,xmm6,132
	xor	r12d,r8d
	shrd	r13d,r13d,5
	xor	r14d,r10d
	vpsrldq	xmm6,xmm6,8
	and	r12d,ecx
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((32-128))+rdi]
	xor	r13d,ecx
	add	r9d,DWORD[8+rsp]
	vpaddd	xmm0,xmm0,xmm6
	mov	r15d,r10d
	shrd	r14d,r14d,11
	xor	r12d,r8d
	vpshufd	xmm7,xmm0,80
	xor	r15d,r11d
	shrd	r13d,r13d,6
	add	r9d,r12d
	vpsrld	xmm6,xmm7,10
	and	esi,r15d
	xor	r14d,r10d
	add	r9d,r13d
	vpsrlq	xmm7,xmm7,17
	xor	esi,r11d
	add	ebx,r9d
	shrd	r14d,r14d,2
	vpxor	xmm6,xmm6,xmm7
	add	r9d,esi
	mov	r13d,ebx
	add	r14d,r9d
	vpsrlq	xmm7,xmm7,2
	shrd	r13d,r13d,14
	mov	r9d,r14d
	mov	r12d,ecx
	vpxor	xmm6,xmm6,xmm7
	xor	r13d,ebx
	shrd	r14d,r14d,9
	xor	r12d,edx
	vpshufd	xmm6,xmm6,232
	shrd	r13d,r13d,5
	xor	r14d,r9d
	and	r12d,ebx
	vpslldq	xmm6,xmm6,8
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((48-128))+rdi]
	xor	r13d,ebx
	add	r8d,DWORD[12+rsp]
	mov	esi,r9d
	vpaddd	xmm0,xmm0,xmm6
	shrd	r14d,r14d,11
	xor	r12d,edx
	xor	esi,r10d
	vpaddd	xmm6,xmm0,XMMWORD[rbp]
	shrd	r13d,r13d,6
	add	r8d,r12d
	and	r15d,esi
	xor	r14d,r9d
	add	r8d,r13d
	xor	r15d,r10d
	add	eax,r8d
	shrd	r14d,r14d,2
	add	r8d,r15d
	mov	r13d,eax
	add	r14d,r8d
	vmovdqa	XMMWORD[rsp],xmm6
	vpalignr	xmm4,xmm2,xmm1,4
	shrd	r13d,r13d,14
	mov	r8d,r14d
	mov	r12d,ebx
	vpalignr	xmm7,xmm0,xmm3,4
	xor	r13d,eax
	shrd	r14d,r14d,9
	xor	r12d,ecx
	vpsrld	xmm6,xmm4,7
	shrd	r13d,r13d,5
	xor	r14d,r8d
	and	r12d,eax
	vpaddd	xmm1,xmm1,xmm7
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((64-128))+rdi]
	xor	r13d,eax
	add	edx,DWORD[16+rsp]
	mov	r15d,r8d
	vpsrld	xmm7,xmm4,3
	shrd	r14d,r14d,11
	xor	r12d,ecx
	xor	r15d,r9d
	vpslld	xmm5,xmm4,14
	shrd	r13d,r13d,6
	add	edx,r12d
	and	esi,r15d
	vpxor	xmm4,xmm7,xmm6
	xor	r14d,r8d
	add	edx,r13d
	xor	esi,r9d
	vpshufd	xmm7,xmm0,250
	add	r11d,edx
	shrd	r14d,r14d,2
	add	edx,esi
	vpsrld	xmm6,xmm6,11
	mov	r13d,r11d
	add	r14d,edx
	shrd	r13d,r13d,14
	vpxor	xmm4,xmm4,xmm5
	mov	edx,r14d
	mov	r12d,eax
	xor	r13d,r11d
	vpslld	xmm5,xmm5,11
	shrd	r14d,r14d,9
	xor	r12d,ebx
	shrd	r13d,r13d,5
	vpxor	xmm4,xmm4,xmm6
	xor	r14d,edx
	and	r12d,r11d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((80-128))+rdi]
	xor	r13d,r11d
	vpsrld	xmm6,xmm7,10
	add	ecx,DWORD[20+rsp]
	mov	esi,edx
	shrd	r14d,r14d,11
	vpxor	xmm4,xmm4,xmm5
	xor	r12d,ebx
	xor	esi,r8d
	shrd	r13d,r13d,6
	vpsrlq	xmm7,xmm7,17
	add	ecx,r12d
	and	r15d,esi
	xor	r14d,edx
	vpaddd	xmm1,xmm1,xmm4
	add	ecx,r13d
	xor	r15d,r8d
	add	r10d,ecx
	vpxor	xmm6,xmm6,xmm7
	shrd	r14d,r14d,2
	add	ecx,r15d
	mov	r13d,r10d
	vpsrlq	xmm7,xmm7,2
	add	r14d,ecx
	shrd	r13d,r13d,14
	mov	ecx,r14d
	vpxor	xmm6,xmm6,xmm7
	mov	r12d,r11d
	xor	r13d,r10d
	shrd	r14d,r14d,9
	vpshufd	xmm6,xmm6,132
	xor	r12d,eax
	shrd	r13d,r13d,5
	xor	r14d,ecx
	vpsrldq	xmm6,xmm6,8
	and	r12d,r10d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((96-128))+rdi]
	xor	r13d,r10d
	add	ebx,DWORD[24+rsp]
	vpaddd	xmm1,xmm1,xmm6
	mov	r15d,ecx
	shrd	r14d,r14d,11
	xor	r12d,eax
	vpshufd	xmm7,xmm1,80
	xor	r15d,edx
	shrd	r13d,r13d,6
	add	ebx,r12d
	vpsrld	xmm6,xmm7,10
	and	esi,r15d
	xor	r14d,ecx
	add	ebx,r13d
	vpsrlq	xmm7,xmm7,17
	xor	esi,edx
	add	r9d,ebx
	shrd	r14d,r14d,2
	vpxor	xmm6,xmm6,xmm7
	add	ebx,esi
	mov	r13d,r9d
	add	r14d,ebx
	vpsrlq	xmm7,xmm7,2
	shrd	r13d,r13d,14
	mov	ebx,r14d
	mov	r12d,r10d
	vpxor	xmm6,xmm6,xmm7
	xor	r13d,r9d
	shrd	r14d,r14d,9
	xor	r12d,r11d
	vpshufd	xmm6,xmm6,232
	shrd	r13d,r13d,5
	xor	r14d,ebx
	and	r12d,r9d
	vpslldq	xmm6,xmm6,8
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((112-128))+rdi]
	xor	r13d,r9d
	add	eax,DWORD[28+rsp]
	mov	esi,ebx
	vpaddd	xmm1,xmm1,xmm6
	shrd	r14d,r14d,11
	xor	r12d,r11d
	xor	esi,ecx
	vpaddd	xmm6,xmm1,XMMWORD[32+rbp]
	shrd	r13d,r13d,6
	add	eax,r12d
	and	r15d,esi
	xor	r14d,ebx
	add	eax,r13d
	xor	r15d,ecx
	add	r8d,eax
	shrd	r14d,r14d,2
	add	eax,r15d
	mov	r13d,r8d
	add	r14d,eax
	vmovdqa	XMMWORD[16+rsp],xmm6
	vpalignr	xmm4,xmm3,xmm2,4
	shrd	r13d,r13d,14
	mov	eax,r14d
	mov	r12d,r9d
	vpalignr	xmm7,xmm1,xmm0,4
	xor	r13d,r8d
	shrd	r14d,r14d,9
	xor	r12d,r10d
	vpsrld	xmm6,xmm4,7
	shrd	r13d,r13d,5
	xor	r14d,eax
	and	r12d,r8d
	vpaddd	xmm2,xmm2,xmm7
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((128-128))+rdi]
	xor	r13d,r8d
	add	r11d,DWORD[32+rsp]
	mov	r15d,eax
	vpsrld	xmm7,xmm4,3
	shrd	r14d,r14d,11
	xor	r12d,r10d
	xor	r15d,ebx
	vpslld	xmm5,xmm4,14
	shrd	r13d,r13d,6
	add	r11d,r12d
	and	esi,r15d
	vpxor	xmm4,xmm7,xmm6
	xor	r14d,eax
	add	r11d,r13d
	xor	esi,ebx
	vpshufd	xmm7,xmm1,250
	add	edx,r11d
	shrd	r14d,r14d,2
	add	r11d,esi
	vpsrld	xmm6,xmm6,11
	mov	r13d,edx
	add	r14d,r11d
	shrd	r13d,r13d,14
	vpxor	xmm4,xmm4,xmm5
	mov	r11d,r14d
	mov	r12d,r8d
	xor	r13d,edx
	vpslld	xmm5,xmm5,11
	shrd	r14d,r14d,9
	xor	r12d,r9d
	shrd	r13d,r13d,5
	vpxor	xmm4,xmm4,xmm6
	xor	r14d,r11d
	and	r12d,edx
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((144-128))+rdi]
	xor	r13d,edx
	vpsrld	xmm6,xmm7,10
	add	r10d,DWORD[36+rsp]
	mov	esi,r11d
	shrd	r14d,r14d,11
	vpxor	xmm4,xmm4,xmm5
	xor	r12d,r9d
	xor	esi,eax
	shrd	r13d,r13d,6
	vpsrlq	xmm7,xmm7,17
	add	r10d,r12d
	and	r15d,esi
	xor	r14d,r11d
	vpaddd	xmm2,xmm2,xmm4
	add	r10d,r13d
	xor	r15d,eax
	add	ecx,r10d
	vpxor	xmm6,xmm6,xmm7
	shrd	r14d,r14d,2
	add	r10d,r15d
	mov	r13d,ecx
	vpsrlq	xmm7,xmm7,2
	add	r14d,r10d
	shrd	r13d,r13d,14
	mov	r10d,r14d
	vpxor	xmm6,xmm6,xmm7
	mov	r12d,edx
	xor	r13d,ecx
	shrd	r14d,r14d,9
	vpshufd	xmm6,xmm6,132
	xor	r12d,r8d
	shrd	r13d,r13d,5
	xor	r14d,r10d
	vpsrldq	xmm6,xmm6,8
	and	r12d,ecx
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((160-128))+rdi]
	xor	r13d,ecx
	add	r9d,DWORD[40+rsp]
	vpaddd	xmm2,xmm2,xmm6
	mov	r15d,r10d
	shrd	r14d,r14d,11
	xor	r12d,r8d
	vpshufd	xmm7,xmm2,80
	xor	r15d,r11d
	shrd	r13d,r13d,6
	add	r9d,r12d
	vpsrld	xmm6,xmm7,10
	and	esi,r15d
	xor	r14d,r10d
	add	r9d,r13d
	vpsrlq	xmm7,xmm7,17
	xor	esi,r11d
	add	ebx,r9d
	shrd	r14d,r14d,2
	vpxor	xmm6,xmm6,xmm7
	add	r9d,esi
	mov	r13d,ebx
	add	r14d,r9d
	vpsrlq	xmm7,xmm7,2
	shrd	r13d,r13d,14
	mov	r9d,r14d
	mov	r12d,ecx
	vpxor	xmm6,xmm6,xmm7
	xor	r13d,ebx
	shrd	r14d,r14d,9
	xor	r12d,edx
	vpshufd	xmm6,xmm6,232
	shrd	r13d,r13d,5
	xor	r14d,r9d
	and	r12d,ebx
	vpslldq	xmm6,xmm6,8
	vaesenclast	xmm11,xmm9,xmm10
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((176-128))+rdi]
	xor	r13d,ebx
	add	r8d,DWORD[44+rsp]
	mov	esi,r9d
	vpaddd	xmm2,xmm2,xmm6
	shrd	r14d,r14d,11
	xor	r12d,edx
	xor	esi,r10d
	vpaddd	xmm6,xmm2,XMMWORD[64+rbp]
	shrd	r13d,r13d,6
	add	r8d,r12d
	and	r15d,esi
	xor	r14d,r9d
	add	r8d,r13d
	xor	r15d,r10d
	add	eax,r8d
	shrd	r14d,r14d,2
	add	r8d,r15d
	mov	r13d,eax
	add	r14d,r8d
	vmovdqa	XMMWORD[32+rsp],xmm6
	vpalignr	xmm4,xmm0,xmm3,4
	shrd	r13d,r13d,14
	mov	r8d,r14d
	mov	r12d,ebx
	vpalignr	xmm7,xmm2,xmm1,4
	xor	r13d,eax
	shrd	r14d,r14d,9
	xor	r12d,ecx
	vpsrld	xmm6,xmm4,7
	shrd	r13d,r13d,5
	xor	r14d,r8d
	and	r12d,eax
	vpaddd	xmm3,xmm3,xmm7
	vpand	xmm8,xmm11,xmm12
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((192-128))+rdi]
	xor	r13d,eax
	add	edx,DWORD[48+rsp]
	mov	r15d,r8d
	vpsrld	xmm7,xmm4,3
	shrd	r14d,r14d,11
	xor	r12d,ecx
	xor	r15d,r9d
	vpslld	xmm5,xmm4,14
	shrd	r13d,r13d,6
	add	edx,r12d
	and	esi,r15d
	vpxor	xmm4,xmm7,xmm6
	xor	r14d,r8d
	add	edx,r13d
	xor	esi,r9d
	vpshufd	xmm7,xmm2,250
	add	r11d,edx
	shrd	r14d,r14d,2
	add	edx,esi
	vpsrld	xmm6,xmm6,11
	mov	r13d,r11d
	add	r14d,edx
	shrd	r13d,r13d,14
	vpxor	xmm4,xmm4,xmm5
	mov	edx,r14d
	mov	r12d,eax
	xor	r13d,r11d
	vpslld	xmm5,xmm5,11
	shrd	r14d,r14d,9
	xor	r12d,ebx
	shrd	r13d,r13d,5
	vpxor	xmm4,xmm4,xmm6
	xor	r14d,edx
	and	r12d,r11d
	vaesenclast	xmm11,xmm9,xmm10
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((208-128))+rdi]
	xor	r13d,r11d
	vpsrld	xmm6,xmm7,10
	add	ecx,DWORD[52+rsp]
	mov	esi,edx
	shrd	r14d,r14d,11
	vpxor	xmm4,xmm4,xmm5
	xor	r12d,ebx
	xor	esi,r8d
	shrd	r13d,r13d,6
	vpsrlq	xmm7,xmm7,17
	add	ecx,r12d
	and	r15d,esi
	xor	r14d,edx
	vpaddd	xmm3,xmm3,xmm4
	add	ecx,r13d
	xor	r15d,r8d
	add	r10d,ecx
	vpxor	xmm6,xmm6,xmm7
	shrd	r14d,r14d,2
	add	ecx,r15d
	mov	r13d,r10d
	vpsrlq	xmm7,xmm7,2
	add	r14d,ecx
	shrd	r13d,r13d,14
	mov	ecx,r14d
	vpxor	xmm6,xmm6,xmm7
	mov	r12d,r11d
	xor	r13d,r10d
	shrd	r14d,r14d,9
	vpshufd	xmm6,xmm6,132
	xor	r12d,eax
	shrd	r13d,r13d,5
	xor	r14d,ecx
	vpsrldq	xmm6,xmm6,8
	and	r12d,r10d
	vpand	xmm11,xmm11,xmm13
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((224-128))+rdi]
	xor	r13d,r10d
	add	ebx,DWORD[56+rsp]
	vpaddd	xmm3,xmm3,xmm6
	mov	r15d,ecx
	shrd	r14d,r14d,11
	xor	r12d,eax
	vpshufd	xmm7,xmm3,80
	xor	r15d,edx
	shrd	r13d,r13d,6
	add	ebx,r12d
	vpsrld	xmm6,xmm7,10
	and	esi,r15d
	xor	r14d,ecx
	add	ebx,r13d
	vpsrlq	xmm7,xmm7,17
	xor	esi,edx
	add	r9d,ebx
	shrd	r14d,r14d,2
	vpxor	xmm6,xmm6,xmm7
	add	ebx,esi
	mov	r13d,r9d
	add	r14d,ebx
	vpsrlq	xmm7,xmm7,2
	shrd	r13d,r13d,14
	mov	ebx,r14d
	mov	r12d,r10d
	vpxor	xmm6,xmm6,xmm7
	xor	r13d,r9d
	shrd	r14d,r14d,9
	xor	r12d,r11d
	vpshufd	xmm6,xmm6,232
	shrd	r13d,r13d,5
	xor	r14d,ebx
	and	r12d,r9d
	vpslldq	xmm6,xmm6,8
	vpor	xmm8,xmm8,xmm11
	vaesenclast	xmm11,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((0-128))+rdi]
	xor	r13d,r9d
	add	eax,DWORD[60+rsp]
	mov	esi,ebx
	vpaddd	xmm3,xmm3,xmm6
	shrd	r14d,r14d,11
	xor	r12d,r11d
	xor	esi,ecx
	vpaddd	xmm6,xmm3,XMMWORD[96+rbp]
	shrd	r13d,r13d,6
	add	eax,r12d
	and	r15d,esi
	xor	r14d,ebx
	add	eax,r13d
	xor	r15d,ecx
	add	r8d,eax
	shrd	r14d,r14d,2
	add	eax,r15d
	mov	r13d,r8d
	add	r14d,eax
	vmovdqa	XMMWORD[48+rsp],xmm6
	mov	r12,QWORD[((64+0))+rsp]
	vpand	xmm11,xmm11,xmm14
	mov	r15,QWORD[((64+8))+rsp]
	vpor	xmm8,xmm8,xmm11
	vmovdqu	XMMWORD[r12*1+r15],xmm8
	lea	r12,[16+r12]
	cmp	BYTE[131+rbp],0
	jne	NEAR $L$avx_00_47
	vmovdqu	xmm9,XMMWORD[r12]
	mov	QWORD[((64+0))+rsp],r12
	shrd	r13d,r13d,14
	mov	eax,r14d
	mov	r12d,r9d
	xor	r13d,r8d
	shrd	r14d,r14d,9
	xor	r12d,r10d
	shrd	r13d,r13d,5
	xor	r14d,eax
	and	r12d,r8d
	vpxor	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((16-128))+rdi]
	xor	r13d,r8d
	add	r11d,DWORD[rsp]
	mov	r15d,eax
	shrd	r14d,r14d,11
	xor	r12d,r10d
	xor	r15d,ebx
	shrd	r13d,r13d,6
	add	r11d,r12d
	and	esi,r15d
	xor	r14d,eax
	add	r11d,r13d
	xor	esi,ebx
	add	edx,r11d
	shrd	r14d,r14d,2
	add	r11d,esi
	mov	r13d,edx
	add	r14d,r11d
	shrd	r13d,r13d,14
	mov	r11d,r14d
	mov	r12d,r8d
	xor	r13d,edx
	shrd	r14d,r14d,9
	xor	r12d,r9d
	shrd	r13d,r13d,5
	xor	r14d,r11d
	and	r12d,edx
	vpxor	xmm9,xmm9,xmm8
	xor	r13d,edx
	add	r10d,DWORD[4+rsp]
	mov	esi,r11d
	shrd	r14d,r14d,11
	xor	r12d,r9d
	xor	esi,eax
	shrd	r13d,r13d,6
	add	r10d,r12d
	and	r15d,esi
	xor	r14d,r11d
	add	r10d,r13d
	xor	r15d,eax
	add	ecx,r10d
	shrd	r14d,r14d,2
	add	r10d,r15d
	mov	r13d,ecx
	add	r14d,r10d
	shrd	r13d,r13d,14
	mov	r10d,r14d
	mov	r12d,edx
	xor	r13d,ecx
	shrd	r14d,r14d,9
	xor	r12d,r8d
	shrd	r13d,r13d,5
	xor	r14d,r10d
	and	r12d,ecx
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((32-128))+rdi]
	xor	r13d,ecx
	add	r9d,DWORD[8+rsp]
	mov	r15d,r10d
	shrd	r14d,r14d,11
	xor	r12d,r8d
	xor	r15d,r11d
	shrd	r13d,r13d,6
	add	r9d,r12d
	and	esi,r15d
	xor	r14d,r10d
	add	r9d,r13d
	xor	esi,r11d
	add	ebx,r9d
	shrd	r14d,r14d,2
	add	r9d,esi
	mov	r13d,ebx
	add	r14d,r9d
	shrd	r13d,r13d,14
	mov	r9d,r14d
	mov	r12d,ecx
	xor	r13d,ebx
	shrd	r14d,r14d,9
	xor	r12d,edx
	shrd	r13d,r13d,5
	xor	r14d,r9d
	and	r12d,ebx
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((48-128))+rdi]
	xor	r13d,ebx
	add	r8d,DWORD[12+rsp]
	mov	esi,r9d
	shrd	r14d,r14d,11
	xor	r12d,edx
	xor	esi,r10d
	shrd	r13d,r13d,6
	add	r8d,r12d
	and	r15d,esi
	xor	r14d,r9d
	add	r8d,r13d
	xor	r15d,r10d
	add	eax,r8d
	shrd	r14d,r14d,2
	add	r8d,r15d
	mov	r13d,eax
	add	r14d,r8d
	shrd	r13d,r13d,14
	mov	r8d,r14d
	mov	r12d,ebx
	xor	r13d,eax
	shrd	r14d,r14d,9
	xor	r12d,ecx
	shrd	r13d,r13d,5
	xor	r14d,r8d
	and	r12d,eax
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((64-128))+rdi]
	xor	r13d,eax
	add	edx,DWORD[16+rsp]
	mov	r15d,r8d
	shrd	r14d,r14d,11
	xor	r12d,ecx
	xor	r15d,r9d
	shrd	r13d,r13d,6
	add	edx,r12d
	and	esi,r15d
	xor	r14d,r8d
	add	edx,r13d
	xor	esi,r9d
	add	r11d,edx
	shrd	r14d,r14d,2
	add	edx,esi
	mov	r13d,r11d
	add	r14d,edx
	shrd	r13d,r13d,14
	mov	edx,r14d
	mov	r12d,eax
	xor	r13d,r11d
	shrd	r14d,r14d,9
	xor	r12d,ebx
	shrd	r13d,r13d,5
	xor	r14d,edx
	and	r12d,r11d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((80-128))+rdi]
	xor	r13d,r11d
	add	ecx,DWORD[20+rsp]
	mov	esi,edx
	shrd	r14d,r14d,11
	xor	r12d,ebx
	xor	esi,r8d
	shrd	r13d,r13d,6
	add	ecx,r12d
	and	r15d,esi
	xor	r14d,edx
	add	ecx,r13d
	xor	r15d,r8d
	add	r10d,ecx
	shrd	r14d,r14d,2
	add	ecx,r15d
	mov	r13d,r10d
	add	r14d,ecx
	shrd	r13d,r13d,14
	mov	ecx,r14d
	mov	r12d,r11d
	xor	r13d,r10d
	shrd	r14d,r14d,9
	xor	r12d,eax
	shrd	r13d,r13d,5
	xor	r14d,ecx
	and	r12d,r10d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((96-128))+rdi]
	xor	r13d,r10d
	add	ebx,DWORD[24+rsp]
	mov	r15d,ecx
	shrd	r14d,r14d,11
	xor	r12d,eax
	xor	r15d,edx
	shrd	r13d,r13d,6
	add	ebx,r12d
	and	esi,r15d
	xor	r14d,ecx
	add	ebx,r13d
	xor	esi,edx
	add	r9d,ebx
	shrd	r14d,r14d,2
	add	ebx,esi
	mov	r13d,r9d
	add	r14d,ebx
	shrd	r13d,r13d,14
	mov	ebx,r14d
	mov	r12d,r10d
	xor	r13d,r9d
	shrd	r14d,r14d,9
	xor	r12d,r11d
	shrd	r13d,r13d,5
	xor	r14d,ebx
	and	r12d,r9d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((112-128))+rdi]
	xor	r13d,r9d
	add	eax,DWORD[28+rsp]
	mov	esi,ebx
	shrd	r14d,r14d,11
	xor	r12d,r11d
	xor	esi,ecx
	shrd	r13d,r13d,6
	add	eax,r12d
	and	r15d,esi
	xor	r14d,ebx
	add	eax,r13d
	xor	r15d,ecx
	add	r8d,eax
	shrd	r14d,r14d,2
	add	eax,r15d
	mov	r13d,r8d
	add	r14d,eax
	shrd	r13d,r13d,14
	mov	eax,r14d
	mov	r12d,r9d
	xor	r13d,r8d
	shrd	r14d,r14d,9
	xor	r12d,r10d
	shrd	r13d,r13d,5
	xor	r14d,eax
	and	r12d,r8d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((128-128))+rdi]
	xor	r13d,r8d
	add	r11d,DWORD[32+rsp]
	mov	r15d,eax
	shrd	r14d,r14d,11
	xor	r12d,r10d
	xor	r15d,ebx
	shrd	r13d,r13d,6
	add	r11d,r12d
	and	esi,r15d
	xor	r14d,eax
	add	r11d,r13d
	xor	esi,ebx
	add	edx,r11d
	shrd	r14d,r14d,2
	add	r11d,esi
	mov	r13d,edx
	add	r14d,r11d
	shrd	r13d,r13d,14
	mov	r11d,r14d
	mov	r12d,r8d
	xor	r13d,edx
	shrd	r14d,r14d,9
	xor	r12d,r9d
	shrd	r13d,r13d,5
	xor	r14d,r11d
	and	r12d,edx
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((144-128))+rdi]
	xor	r13d,edx
	add	r10d,DWORD[36+rsp]
	mov	esi,r11d
	shrd	r14d,r14d,11
	xor	r12d,r9d
	xor	esi,eax
	shrd	r13d,r13d,6
	add	r10d,r12d
	and	r15d,esi
	xor	r14d,r11d
	add	r10d,r13d
	xor	r15d,eax
	add	ecx,r10d
	shrd	r14d,r14d,2
	add	r10d,r15d
	mov	r13d,ecx
	add	r14d,r10d
	shrd	r13d,r13d,14
	mov	r10d,r14d
	mov	r12d,edx
	xor	r13d,ecx
	shrd	r14d,r14d,9
	xor	r12d,r8d
	shrd	r13d,r13d,5
	xor	r14d,r10d
	and	r12d,ecx
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((160-128))+rdi]
	xor	r13d,ecx
	add	r9d,DWORD[40+rsp]
	mov	r15d,r10d
	shrd	r14d,r14d,11
	xor	r12d,r8d
	xor	r15d,r11d
	shrd	r13d,r13d,6
	add	r9d,r12d
	and	esi,r15d
	xor	r14d,r10d
	add	r9d,r13d
	xor	esi,r11d
	add	ebx,r9d
	shrd	r14d,r14d,2
	add	r9d,esi
	mov	r13d,ebx
	add	r14d,r9d
	shrd	r13d,r13d,14
	mov	r9d,r14d
	mov	r12d,ecx
	xor	r13d,ebx
	shrd	r14d,r14d,9
	xor	r12d,edx
	shrd	r13d,r13d,5
	xor	r14d,r9d
	and	r12d,ebx
	vaesenclast	xmm11,xmm9,xmm10
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((176-128))+rdi]
	xor	r13d,ebx
	add	r8d,DWORD[44+rsp]
	mov	esi,r9d
	shrd	r14d,r14d,11
	xor	r12d,edx
	xor	esi,r10d
	shrd	r13d,r13d,6
	add	r8d,r12d
	and	r15d,esi
	xor	r14d,r9d
	add	r8d,r13d
	xor	r15d,r10d
	add	eax,r8d
	shrd	r14d,r14d,2
	add	r8d,r15d
	mov	r13d,eax
	add	r14d,r8d
	shrd	r13d,r13d,14
	mov	r8d,r14d
	mov	r12d,ebx
	xor	r13d,eax
	shrd	r14d,r14d,9
	xor	r12d,ecx
	shrd	r13d,r13d,5
	xor	r14d,r8d
	and	r12d,eax
	vpand	xmm8,xmm11,xmm12
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((192-128))+rdi]
	xor	r13d,eax
	add	edx,DWORD[48+rsp]
	mov	r15d,r8d
	shrd	r14d,r14d,11
	xor	r12d,ecx
	xor	r15d,r9d
	shrd	r13d,r13d,6
	add	edx,r12d
	and	esi,r15d
	xor	r14d,r8d
	add	edx,r13d
	xor	esi,r9d
	add	r11d,edx
	shrd	r14d,r14d,2
	add	edx,esi
	mov	r13d,r11d
	add	r14d,edx
	shrd	r13d,r13d,14
	mov	edx,r14d
	mov	r12d,eax
	xor	r13d,r11d
	shrd	r14d,r14d,9
	xor	r12d,ebx
	shrd	r13d,r13d,5
	xor	r14d,edx
	and	r12d,r11d
	vaesenclast	xmm11,xmm9,xmm10
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((208-128))+rdi]
	xor	r13d,r11d
	add	ecx,DWORD[52+rsp]
	mov	esi,edx
	shrd	r14d,r14d,11
	xor	r12d,ebx
	xor	esi,r8d
	shrd	r13d,r13d,6
	add	ecx,r12d
	and	r15d,esi
	xor	r14d,edx
	add	ecx,r13d
	xor	r15d,r8d
	add	r10d,ecx
	shrd	r14d,r14d,2
	add	ecx,r15d
	mov	r13d,r10d
	add	r14d,ecx
	shrd	r13d,r13d,14
	mov	ecx,r14d
	mov	r12d,r11d
	xor	r13d,r10d
	shrd	r14d,r14d,9
	xor	r12d,eax
	shrd	r13d,r13d,5
	xor	r14d,ecx
	and	r12d,r10d
	vpand	xmm11,xmm11,xmm13
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((224-128))+rdi]
	xor	r13d,r10d
	add	ebx,DWORD[56+rsp]
	mov	r15d,ecx
	shrd	r14d,r14d,11
	xor	r12d,eax
	xor	r15d,edx
	shrd	r13d,r13d,6
	add	ebx,r12d
	and	esi,r15d
	xor	r14d,ecx
	add	ebx,r13d
	xor	esi,edx
	add	r9d,ebx
	shrd	r14d,r14d,2
	add	ebx,esi
	mov	r13d,r9d
	add	r14d,ebx
	shrd	r13d,r13d,14
	mov	ebx,r14d
	mov	r12d,r10d
	xor	r13d,r9d
	shrd	r14d,r14d,9
	xor	r12d,r11d
	shrd	r13d,r13d,5
	xor	r14d,ebx
	and	r12d,r9d
	vpor	xmm8,xmm8,xmm11
	vaesenclast	xmm11,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((0-128))+rdi]
	xor	r13d,r9d
	add	eax,DWORD[60+rsp]
	mov	esi,ebx
	shrd	r14d,r14d,11
	xor	r12d,r11d
	xor	esi,ecx
	shrd	r13d,r13d,6
	add	eax,r12d
	and	r15d,esi
	xor	r14d,ebx
	add	eax,r13d
	xor	r15d,ecx
	add	r8d,eax
	shrd	r14d,r14d,2
	add	eax,r15d
	mov	r13d,r8d
	add	r14d,eax
	mov	r12,QWORD[((64+0))+rsp]
	mov	r13,QWORD[((64+8))+rsp]
	mov	r15,QWORD[((64+40))+rsp]
	mov	rsi,QWORD[((64+48))+rsp]

	vpand	xmm11,xmm11,xmm14
	mov	eax,r14d
	vpor	xmm8,xmm8,xmm11
	vmovdqu	XMMWORD[r13*1+r12],xmm8
	lea	r12,[16+r12]

	add	eax,DWORD[r15]
	add	ebx,DWORD[4+r15]
	add	ecx,DWORD[8+r15]
	add	edx,DWORD[12+r15]
	add	r8d,DWORD[16+r15]
	add	r9d,DWORD[20+r15]
	add	r10d,DWORD[24+r15]
	add	r11d,DWORD[28+r15]

	cmp	r12,QWORD[((64+16))+rsp]

	mov	DWORD[r15],eax
	mov	DWORD[4+r15],ebx
	mov	DWORD[8+r15],ecx
	mov	DWORD[12+r15],edx
	mov	DWORD[16+r15],r8d
	mov	DWORD[20+r15],r9d
	mov	DWORD[24+r15],r10d
	mov	DWORD[28+r15],r11d
	jb	NEAR $L$loop_avx

	mov	r8,QWORD[((64+32))+rsp]
	mov	rsi,QWORD[120+rsp]

	vmovdqu	XMMWORD[r8],xmm8
	vzeroall
	movaps	xmm6,XMMWORD[128+rsp]
	movaps	xmm7,XMMWORD[144+rsp]
	movaps	xmm8,XMMWORD[160+rsp]
	movaps	xmm9,XMMWORD[176+rsp]
	movaps	xmm10,XMMWORD[192+rsp]
	movaps	xmm11,XMMWORD[208+rsp]
	movaps	xmm12,XMMWORD[224+rsp]
	movaps	xmm13,XMMWORD[240+rsp]
	movaps	xmm14,XMMWORD[256+rsp]
	movaps	xmm15,XMMWORD[272+rsp]
	mov	r15,QWORD[((-48))+rsi]

	mov	r14,QWORD[((-40))+rsi]

	mov	r13,QWORD[((-32))+rsi]

	mov	r12,QWORD[((-24))+rsi]

	mov	rbp,QWORD[((-16))+rsi]

	mov	rbx,QWORD[((-8))+rsi]

	lea	rsp,[rsi]

$L$epilogue_avx:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_cbc_sha256_enc_avx:

ALIGN	64
aesni_cbc_sha256_enc_avx2:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_cbc_sha256_enc_avx2:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



$L$avx2_shortcut:
	mov	r10,QWORD[56+rsp]
	mov	rax,rsp

	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

	sub	rsp,736
	and	rsp,-256*4
	add	rsp,448

	shl	rdx,6
	sub	rsi,rdi
	sub	r10,rdi
	add	rdx,rdi



	mov	QWORD[((64+16))+rsp],rdx

	mov	QWORD[((64+32))+rsp],r8
	mov	QWORD[((64+40))+rsp],r9
	mov	QWORD[((64+48))+rsp],r10
	mov	QWORD[120+rsp],rax

	movaps	XMMWORD[128+rsp],xmm6
	movaps	XMMWORD[144+rsp],xmm7
	movaps	XMMWORD[160+rsp],xmm8
	movaps	XMMWORD[176+rsp],xmm9
	movaps	XMMWORD[192+rsp],xmm10
	movaps	XMMWORD[208+rsp],xmm11
	movaps	XMMWORD[224+rsp],xmm12
	movaps	XMMWORD[240+rsp],xmm13
	movaps	XMMWORD[256+rsp],xmm14
	movaps	XMMWORD[272+rsp],xmm15
$L$prologue_avx2:
	vzeroall

	mov	r13,rdi
	vpinsrq	xmm15,xmm15,rsi,1
	lea	rdi,[128+rcx]
	lea	r12,[((K256+544))]
	mov	r14d,DWORD[((240-128))+rdi]
	mov	r15,r9
	mov	rsi,r10
	vmovdqu	xmm8,XMMWORD[r8]
	lea	r14,[((-9))+r14]

	vmovdqa	xmm14,XMMWORD[r14*8+r12]
	vmovdqa	xmm13,XMMWORD[16+r14*8+r12]
	vmovdqa	xmm12,XMMWORD[32+r14*8+r12]

	sub	r13,-16*4
	mov	eax,DWORD[r15]
	lea	r12,[r13*1+rsi]
	mov	ebx,DWORD[4+r15]
	cmp	r13,rdx
	mov	ecx,DWORD[8+r15]
	cmove	r12,rsp
	mov	edx,DWORD[12+r15]
	mov	r8d,DWORD[16+r15]
	mov	r9d,DWORD[20+r15]
	mov	r10d,DWORD[24+r15]
	mov	r11d,DWORD[28+r15]
	vmovdqu	xmm10,XMMWORD[((0-128))+rdi]
	jmp	NEAR $L$oop_avx2
ALIGN	16
$L$oop_avx2:
	vmovdqa	ymm7,YMMWORD[((K256+512))]
	vmovdqu	xmm0,XMMWORD[((-64+0))+r13*1+rsi]
	vmovdqu	xmm1,XMMWORD[((-64+16))+r13*1+rsi]
	vmovdqu	xmm2,XMMWORD[((-64+32))+r13*1+rsi]
	vmovdqu	xmm3,XMMWORD[((-64+48))+r13*1+rsi]

	vinserti128	ymm0,ymm0,XMMWORD[r12],1
	vinserti128	ymm1,ymm1,XMMWORD[16+r12],1
	vpshufb	ymm0,ymm0,ymm7
	vinserti128	ymm2,ymm2,XMMWORD[32+r12],1
	vpshufb	ymm1,ymm1,ymm7
	vinserti128	ymm3,ymm3,XMMWORD[48+r12],1

	lea	rbp,[K256]
	vpshufb	ymm2,ymm2,ymm7
	lea	r13,[((-64))+r13]
	vpaddd	ymm4,ymm0,YMMWORD[rbp]
	vpshufb	ymm3,ymm3,ymm7
	vpaddd	ymm5,ymm1,YMMWORD[32+rbp]
	vpaddd	ymm6,ymm2,YMMWORD[64+rbp]
	vpaddd	ymm7,ymm3,YMMWORD[96+rbp]
	vmovdqa	YMMWORD[rsp],ymm4
	xor	r14d,r14d
	vmovdqa	YMMWORD[32+rsp],ymm5
	lea	rsp,[((-64))+rsp]
	mov	esi,ebx
	vmovdqa	YMMWORD[rsp],ymm6
	xor	esi,ecx
	vmovdqa	YMMWORD[32+rsp],ymm7
	mov	r12d,r9d
	sub	rbp,-16*2*4
	jmp	NEAR $L$avx2_00_47

ALIGN	16
$L$avx2_00_47:
	vmovdqu	xmm9,XMMWORD[r13]
	vpinsrq	xmm15,xmm15,r13,0
	lea	rsp,[((-64))+rsp]
	vpalignr	ymm4,ymm1,ymm0,4
	add	r11d,DWORD[((0+128))+rsp]
	and	r12d,r8d
	rorx	r13d,r8d,25
	vpalignr	ymm7,ymm3,ymm2,4
	rorx	r15d,r8d,11
	lea	eax,[r14*1+rax]
	lea	r11d,[r12*1+r11]
	vpsrld	ymm6,ymm4,7
	andn	r12d,r8d,r10d
	xor	r13d,r15d
	rorx	r14d,r8d,6
	vpaddd	ymm0,ymm0,ymm7
	lea	r11d,[r12*1+r11]
	xor	r13d,r14d
	mov	r15d,eax
	vpsrld	ymm7,ymm4,3
	rorx	r12d,eax,22
	lea	r11d,[r13*1+r11]
	xor	r15d,ebx
	vpslld	ymm5,ymm4,14
	rorx	r14d,eax,13
	rorx	r13d,eax,2
	lea	edx,[r11*1+rdx]
	vpxor	ymm4,ymm7,ymm6
	and	esi,r15d
	vpxor	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((16-128))+rdi]
	xor	r14d,r12d
	xor	esi,ebx
	vpshufd	ymm7,ymm3,250
	xor	r14d,r13d
	lea	r11d,[rsi*1+r11]
	mov	r12d,r8d
	vpsrld	ymm6,ymm6,11
	add	r10d,DWORD[((4+128))+rsp]
	and	r12d,edx
	rorx	r13d,edx,25
	vpxor	ymm4,ymm4,ymm5
	rorx	esi,edx,11
	lea	r11d,[r14*1+r11]
	lea	r10d,[r12*1+r10]
	vpslld	ymm5,ymm5,11
	andn	r12d,edx,r9d
	xor	r13d,esi
	rorx	r14d,edx,6
	vpxor	ymm4,ymm4,ymm6
	lea	r10d,[r12*1+r10]
	xor	r13d,r14d
	mov	esi,r11d
	vpsrld	ymm6,ymm7,10
	rorx	r12d,r11d,22
	lea	r10d,[r13*1+r10]
	xor	esi,eax
	vpxor	ymm4,ymm4,ymm5
	rorx	r14d,r11d,13
	rorx	r13d,r11d,2
	lea	ecx,[r10*1+rcx]
	vpsrlq	ymm7,ymm7,17
	and	r15d,esi
	vpxor	xmm9,xmm9,xmm8
	xor	r14d,r12d
	xor	r15d,eax
	vpaddd	ymm0,ymm0,ymm4
	xor	r14d,r13d
	lea	r10d,[r15*1+r10]
	mov	r12d,edx
	vpxor	ymm6,ymm6,ymm7
	add	r9d,DWORD[((8+128))+rsp]
	and	r12d,ecx
	rorx	r13d,ecx,25
	vpsrlq	ymm7,ymm7,2
	rorx	r15d,ecx,11
	lea	r10d,[r14*1+r10]
	lea	r9d,[r12*1+r9]
	vpxor	ymm6,ymm6,ymm7
	andn	r12d,ecx,r8d
	xor	r13d,r15d
	rorx	r14d,ecx,6
	vpshufd	ymm6,ymm6,132
	lea	r9d,[r12*1+r9]
	xor	r13d,r14d
	mov	r15d,r10d
	vpsrldq	ymm6,ymm6,8
	rorx	r12d,r10d,22
	lea	r9d,[r13*1+r9]
	xor	r15d,r11d
	vpaddd	ymm0,ymm0,ymm6
	rorx	r14d,r10d,13
	rorx	r13d,r10d,2
	lea	ebx,[r9*1+rbx]
	vpshufd	ymm7,ymm0,80
	and	esi,r15d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((32-128))+rdi]
	xor	r14d,r12d
	xor	esi,r11d
	vpsrld	ymm6,ymm7,10
	xor	r14d,r13d
	lea	r9d,[rsi*1+r9]
	mov	r12d,ecx
	vpsrlq	ymm7,ymm7,17
	add	r8d,DWORD[((12+128))+rsp]
	and	r12d,ebx
	rorx	r13d,ebx,25
	vpxor	ymm6,ymm6,ymm7
	rorx	esi,ebx,11
	lea	r9d,[r14*1+r9]
	lea	r8d,[r12*1+r8]
	vpsrlq	ymm7,ymm7,2
	andn	r12d,ebx,edx
	xor	r13d,esi
	rorx	r14d,ebx,6
	vpxor	ymm6,ymm6,ymm7
	lea	r8d,[r12*1+r8]
	xor	r13d,r14d
	mov	esi,r9d
	vpshufd	ymm6,ymm6,232
	rorx	r12d,r9d,22
	lea	r8d,[r13*1+r8]
	xor	esi,r10d
	vpslldq	ymm6,ymm6,8
	rorx	r14d,r9d,13
	rorx	r13d,r9d,2
	lea	eax,[r8*1+rax]
	vpaddd	ymm0,ymm0,ymm6
	and	r15d,esi
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((48-128))+rdi]
	xor	r14d,r12d
	xor	r15d,r10d
	vpaddd	ymm6,ymm0,YMMWORD[rbp]
	xor	r14d,r13d
	lea	r8d,[r15*1+r8]
	mov	r12d,ebx
	vmovdqa	YMMWORD[rsp],ymm6
	vpalignr	ymm4,ymm2,ymm1,4
	add	edx,DWORD[((32+128))+rsp]
	and	r12d,eax
	rorx	r13d,eax,25
	vpalignr	ymm7,ymm0,ymm3,4
	rorx	r15d,eax,11
	lea	r8d,[r14*1+r8]
	lea	edx,[r12*1+rdx]
	vpsrld	ymm6,ymm4,7
	andn	r12d,eax,ecx
	xor	r13d,r15d
	rorx	r14d,eax,6
	vpaddd	ymm1,ymm1,ymm7
	lea	edx,[r12*1+rdx]
	xor	r13d,r14d
	mov	r15d,r8d
	vpsrld	ymm7,ymm4,3
	rorx	r12d,r8d,22
	lea	edx,[r13*1+rdx]
	xor	r15d,r9d
	vpslld	ymm5,ymm4,14
	rorx	r14d,r8d,13
	rorx	r13d,r8d,2
	lea	r11d,[rdx*1+r11]
	vpxor	ymm4,ymm7,ymm6
	and	esi,r15d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((64-128))+rdi]
	xor	r14d,r12d
	xor	esi,r9d
	vpshufd	ymm7,ymm0,250
	xor	r14d,r13d
	lea	edx,[rsi*1+rdx]
	mov	r12d,eax
	vpsrld	ymm6,ymm6,11
	add	ecx,DWORD[((36+128))+rsp]
	and	r12d,r11d
	rorx	r13d,r11d,25
	vpxor	ymm4,ymm4,ymm5
	rorx	esi,r11d,11
	lea	edx,[r14*1+rdx]
	lea	ecx,[r12*1+rcx]
	vpslld	ymm5,ymm5,11
	andn	r12d,r11d,ebx
	xor	r13d,esi
	rorx	r14d,r11d,6
	vpxor	ymm4,ymm4,ymm6
	lea	ecx,[r12*1+rcx]
	xor	r13d,r14d
	mov	esi,edx
	vpsrld	ymm6,ymm7,10
	rorx	r12d,edx,22
	lea	ecx,[r13*1+rcx]
	xor	esi,r8d
	vpxor	ymm4,ymm4,ymm5
	rorx	r14d,edx,13
	rorx	r13d,edx,2
	lea	r10d,[rcx*1+r10]
	vpsrlq	ymm7,ymm7,17
	and	r15d,esi
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((80-128))+rdi]
	xor	r14d,r12d
	xor	r15d,r8d
	vpaddd	ymm1,ymm1,ymm4
	xor	r14d,r13d
	lea	ecx,[r15*1+rcx]
	mov	r12d,r11d
	vpxor	ymm6,ymm6,ymm7
	add	ebx,DWORD[((40+128))+rsp]
	and	r12d,r10d
	rorx	r13d,r10d,25
	vpsrlq	ymm7,ymm7,2
	rorx	r15d,r10d,11
	lea	ecx,[r14*1+rcx]
	lea	ebx,[r12*1+rbx]
	vpxor	ymm6,ymm6,ymm7
	andn	r12d,r10d,eax
	xor	r13d,r15d
	rorx	r14d,r10d,6
	vpshufd	ymm6,ymm6,132
	lea	ebx,[r12*1+rbx]
	xor	r13d,r14d
	mov	r15d,ecx
	vpsrldq	ymm6,ymm6,8
	rorx	r12d,ecx,22
	lea	ebx,[r13*1+rbx]
	xor	r15d,edx
	vpaddd	ymm1,ymm1,ymm6
	rorx	r14d,ecx,13
	rorx	r13d,ecx,2
	lea	r9d,[rbx*1+r9]
	vpshufd	ymm7,ymm1,80
	and	esi,r15d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((96-128))+rdi]
	xor	r14d,r12d
	xor	esi,edx
	vpsrld	ymm6,ymm7,10
	xor	r14d,r13d
	lea	ebx,[rsi*1+rbx]
	mov	r12d,r10d
	vpsrlq	ymm7,ymm7,17
	add	eax,DWORD[((44+128))+rsp]
	and	r12d,r9d
	rorx	r13d,r9d,25
	vpxor	ymm6,ymm6,ymm7
	rorx	esi,r9d,11
	lea	ebx,[r14*1+rbx]
	lea	eax,[r12*1+rax]
	vpsrlq	ymm7,ymm7,2
	andn	r12d,r9d,r11d
	xor	r13d,esi
	rorx	r14d,r9d,6
	vpxor	ymm6,ymm6,ymm7
	lea	eax,[r12*1+rax]
	xor	r13d,r14d
	mov	esi,ebx
	vpshufd	ymm6,ymm6,232
	rorx	r12d,ebx,22
	lea	eax,[r13*1+rax]
	xor	esi,ecx
	vpslldq	ymm6,ymm6,8
	rorx	r14d,ebx,13
	rorx	r13d,ebx,2
	lea	r8d,[rax*1+r8]
	vpaddd	ymm1,ymm1,ymm6
	and	r15d,esi
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((112-128))+rdi]
	xor	r14d,r12d
	xor	r15d,ecx
	vpaddd	ymm6,ymm1,YMMWORD[32+rbp]
	xor	r14d,r13d
	lea	eax,[r15*1+rax]
	mov	r12d,r9d
	vmovdqa	YMMWORD[32+rsp],ymm6
	lea	rsp,[((-64))+rsp]
	vpalignr	ymm4,ymm3,ymm2,4
	add	r11d,DWORD[((0+128))+rsp]
	and	r12d,r8d
	rorx	r13d,r8d,25
	vpalignr	ymm7,ymm1,ymm0,4
	rorx	r15d,r8d,11
	lea	eax,[r14*1+rax]
	lea	r11d,[r12*1+r11]
	vpsrld	ymm6,ymm4,7
	andn	r12d,r8d,r10d
	xor	r13d,r15d
	rorx	r14d,r8d,6
	vpaddd	ymm2,ymm2,ymm7
	lea	r11d,[r12*1+r11]
	xor	r13d,r14d
	mov	r15d,eax
	vpsrld	ymm7,ymm4,3
	rorx	r12d,eax,22
	lea	r11d,[r13*1+r11]
	xor	r15d,ebx
	vpslld	ymm5,ymm4,14
	rorx	r14d,eax,13
	rorx	r13d,eax,2
	lea	edx,[r11*1+rdx]
	vpxor	ymm4,ymm7,ymm6
	and	esi,r15d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((128-128))+rdi]
	xor	r14d,r12d
	xor	esi,ebx
	vpshufd	ymm7,ymm1,250
	xor	r14d,r13d
	lea	r11d,[rsi*1+r11]
	mov	r12d,r8d
	vpsrld	ymm6,ymm6,11
	add	r10d,DWORD[((4+128))+rsp]
	and	r12d,edx
	rorx	r13d,edx,25
	vpxor	ymm4,ymm4,ymm5
	rorx	esi,edx,11
	lea	r11d,[r14*1+r11]
	lea	r10d,[r12*1+r10]
	vpslld	ymm5,ymm5,11
	andn	r12d,edx,r9d
	xor	r13d,esi
	rorx	r14d,edx,6
	vpxor	ymm4,ymm4,ymm6
	lea	r10d,[r12*1+r10]
	xor	r13d,r14d
	mov	esi,r11d
	vpsrld	ymm6,ymm7,10
	rorx	r12d,r11d,22
	lea	r10d,[r13*1+r10]
	xor	esi,eax
	vpxor	ymm4,ymm4,ymm5
	rorx	r14d,r11d,13
	rorx	r13d,r11d,2
	lea	ecx,[r10*1+rcx]
	vpsrlq	ymm7,ymm7,17
	and	r15d,esi
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((144-128))+rdi]
	xor	r14d,r12d
	xor	r15d,eax
	vpaddd	ymm2,ymm2,ymm4
	xor	r14d,r13d
	lea	r10d,[r15*1+r10]
	mov	r12d,edx
	vpxor	ymm6,ymm6,ymm7
	add	r9d,DWORD[((8+128))+rsp]
	and	r12d,ecx
	rorx	r13d,ecx,25
	vpsrlq	ymm7,ymm7,2
	rorx	r15d,ecx,11
	lea	r10d,[r14*1+r10]
	lea	r9d,[r12*1+r9]
	vpxor	ymm6,ymm6,ymm7
	andn	r12d,ecx,r8d
	xor	r13d,r15d
	rorx	r14d,ecx,6
	vpshufd	ymm6,ymm6,132
	lea	r9d,[r12*1+r9]
	xor	r13d,r14d
	mov	r15d,r10d
	vpsrldq	ymm6,ymm6,8
	rorx	r12d,r10d,22
	lea	r9d,[r13*1+r9]
	xor	r15d,r11d
	vpaddd	ymm2,ymm2,ymm6
	rorx	r14d,r10d,13
	rorx	r13d,r10d,2
	lea	ebx,[r9*1+rbx]
	vpshufd	ymm7,ymm2,80
	and	esi,r15d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((160-128))+rdi]
	xor	r14d,r12d
	xor	esi,r11d
	vpsrld	ymm6,ymm7,10
	xor	r14d,r13d
	lea	r9d,[rsi*1+r9]
	mov	r12d,ecx
	vpsrlq	ymm7,ymm7,17
	add	r8d,DWORD[((12+128))+rsp]
	and	r12d,ebx
	rorx	r13d,ebx,25
	vpxor	ymm6,ymm6,ymm7
	rorx	esi,ebx,11
	lea	r9d,[r14*1+r9]
	lea	r8d,[r12*1+r8]
	vpsrlq	ymm7,ymm7,2
	andn	r12d,ebx,edx
	xor	r13d,esi
	rorx	r14d,ebx,6
	vpxor	ymm6,ymm6,ymm7
	lea	r8d,[r12*1+r8]
	xor	r13d,r14d
	mov	esi,r9d
	vpshufd	ymm6,ymm6,232
	rorx	r12d,r9d,22
	lea	r8d,[r13*1+r8]
	xor	esi,r10d
	vpslldq	ymm6,ymm6,8
	rorx	r14d,r9d,13
	rorx	r13d,r9d,2
	lea	eax,[r8*1+rax]
	vpaddd	ymm2,ymm2,ymm6
	and	r15d,esi
	vaesenclast	xmm11,xmm9,xmm10
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((176-128))+rdi]
	xor	r14d,r12d
	xor	r15d,r10d
	vpaddd	ymm6,ymm2,YMMWORD[64+rbp]
	xor	r14d,r13d
	lea	r8d,[r15*1+r8]
	mov	r12d,ebx
	vmovdqa	YMMWORD[rsp],ymm6
	vpalignr	ymm4,ymm0,ymm3,4
	add	edx,DWORD[((32+128))+rsp]
	and	r12d,eax
	rorx	r13d,eax,25
	vpalignr	ymm7,ymm2,ymm1,4
	rorx	r15d,eax,11
	lea	r8d,[r14*1+r8]
	lea	edx,[r12*1+rdx]
	vpsrld	ymm6,ymm4,7
	andn	r12d,eax,ecx
	xor	r13d,r15d
	rorx	r14d,eax,6
	vpaddd	ymm3,ymm3,ymm7
	lea	edx,[r12*1+rdx]
	xor	r13d,r14d
	mov	r15d,r8d
	vpsrld	ymm7,ymm4,3
	rorx	r12d,r8d,22
	lea	edx,[r13*1+rdx]
	xor	r15d,r9d
	vpslld	ymm5,ymm4,14
	rorx	r14d,r8d,13
	rorx	r13d,r8d,2
	lea	r11d,[rdx*1+r11]
	vpxor	ymm4,ymm7,ymm6
	and	esi,r15d
	vpand	xmm8,xmm11,xmm12
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((192-128))+rdi]
	xor	r14d,r12d
	xor	esi,r9d
	vpshufd	ymm7,ymm2,250
	xor	r14d,r13d
	lea	edx,[rsi*1+rdx]
	mov	r12d,eax
	vpsrld	ymm6,ymm6,11
	add	ecx,DWORD[((36+128))+rsp]
	and	r12d,r11d
	rorx	r13d,r11d,25
	vpxor	ymm4,ymm4,ymm5
	rorx	esi,r11d,11
	lea	edx,[r14*1+rdx]
	lea	ecx,[r12*1+rcx]
	vpslld	ymm5,ymm5,11
	andn	r12d,r11d,ebx
	xor	r13d,esi
	rorx	r14d,r11d,6
	vpxor	ymm4,ymm4,ymm6
	lea	ecx,[r12*1+rcx]
	xor	r13d,r14d
	mov	esi,edx
	vpsrld	ymm6,ymm7,10
	rorx	r12d,edx,22
	lea	ecx,[r13*1+rcx]
	xor	esi,r8d
	vpxor	ymm4,ymm4,ymm5
	rorx	r14d,edx,13
	rorx	r13d,edx,2
	lea	r10d,[rcx*1+r10]
	vpsrlq	ymm7,ymm7,17
	and	r15d,esi
	vaesenclast	xmm11,xmm9,xmm10
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((208-128))+rdi]
	xor	r14d,r12d
	xor	r15d,r8d
	vpaddd	ymm3,ymm3,ymm4
	xor	r14d,r13d
	lea	ecx,[r15*1+rcx]
	mov	r12d,r11d
	vpxor	ymm6,ymm6,ymm7
	add	ebx,DWORD[((40+128))+rsp]
	and	r12d,r10d
	rorx	r13d,r10d,25
	vpsrlq	ymm7,ymm7,2
	rorx	r15d,r10d,11
	lea	ecx,[r14*1+rcx]
	lea	ebx,[r12*1+rbx]
	vpxor	ymm6,ymm6,ymm7
	andn	r12d,r10d,eax
	xor	r13d,r15d
	rorx	r14d,r10d,6
	vpshufd	ymm6,ymm6,132
	lea	ebx,[r12*1+rbx]
	xor	r13d,r14d
	mov	r15d,ecx
	vpsrldq	ymm6,ymm6,8
	rorx	r12d,ecx,22
	lea	ebx,[r13*1+rbx]
	xor	r15d,edx
	vpaddd	ymm3,ymm3,ymm6
	rorx	r14d,ecx,13
	rorx	r13d,ecx,2
	lea	r9d,[rbx*1+r9]
	vpshufd	ymm7,ymm3,80
	and	esi,r15d
	vpand	xmm11,xmm11,xmm13
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((224-128))+rdi]
	xor	r14d,r12d
	xor	esi,edx
	vpsrld	ymm6,ymm7,10
	xor	r14d,r13d
	lea	ebx,[rsi*1+rbx]
	mov	r12d,r10d
	vpsrlq	ymm7,ymm7,17
	add	eax,DWORD[((44+128))+rsp]
	and	r12d,r9d
	rorx	r13d,r9d,25
	vpxor	ymm6,ymm6,ymm7
	rorx	esi,r9d,11
	lea	ebx,[r14*1+rbx]
	lea	eax,[r12*1+rax]
	vpsrlq	ymm7,ymm7,2
	andn	r12d,r9d,r11d
	xor	r13d,esi
	rorx	r14d,r9d,6
	vpxor	ymm6,ymm6,ymm7
	lea	eax,[r12*1+rax]
	xor	r13d,r14d
	mov	esi,ebx
	vpshufd	ymm6,ymm6,232
	rorx	r12d,ebx,22
	lea	eax,[r13*1+rax]
	xor	esi,ecx
	vpslldq	ymm6,ymm6,8
	rorx	r14d,ebx,13
	rorx	r13d,ebx,2
	lea	r8d,[rax*1+r8]
	vpaddd	ymm3,ymm3,ymm6
	and	r15d,esi
	vpor	xmm8,xmm8,xmm11
	vaesenclast	xmm11,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((0-128))+rdi]
	xor	r14d,r12d
	xor	r15d,ecx
	vpaddd	ymm6,ymm3,YMMWORD[96+rbp]
	xor	r14d,r13d
	lea	eax,[r15*1+rax]
	mov	r12d,r9d
	vmovdqa	YMMWORD[32+rsp],ymm6
	vmovq	r13,xmm15
	vpextrq	r15,xmm15,1
	vpand	xmm11,xmm11,xmm14
	vpor	xmm8,xmm8,xmm11
	vmovdqu	XMMWORD[r13*1+r15],xmm8
	lea	r13,[16+r13]
	lea	rbp,[128+rbp]
	cmp	BYTE[3+rbp],0
	jne	NEAR $L$avx2_00_47
	vmovdqu	xmm9,XMMWORD[r13]
	vpinsrq	xmm15,xmm15,r13,0
	add	r11d,DWORD[((0+64))+rsp]
	and	r12d,r8d
	rorx	r13d,r8d,25
	rorx	r15d,r8d,11
	lea	eax,[r14*1+rax]
	lea	r11d,[r12*1+r11]
	andn	r12d,r8d,r10d
	xor	r13d,r15d
	rorx	r14d,r8d,6
	lea	r11d,[r12*1+r11]
	xor	r13d,r14d
	mov	r15d,eax
	rorx	r12d,eax,22
	lea	r11d,[r13*1+r11]
	xor	r15d,ebx
	rorx	r14d,eax,13
	rorx	r13d,eax,2
	lea	edx,[r11*1+rdx]
	and	esi,r15d
	vpxor	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((16-128))+rdi]
	xor	r14d,r12d
	xor	esi,ebx
	xor	r14d,r13d
	lea	r11d,[rsi*1+r11]
	mov	r12d,r8d
	add	r10d,DWORD[((4+64))+rsp]
	and	r12d,edx
	rorx	r13d,edx,25
	rorx	esi,edx,11
	lea	r11d,[r14*1+r11]
	lea	r10d,[r12*1+r10]
	andn	r12d,edx,r9d
	xor	r13d,esi
	rorx	r14d,edx,6
	lea	r10d,[r12*1+r10]
	xor	r13d,r14d
	mov	esi,r11d
	rorx	r12d,r11d,22
	lea	r10d,[r13*1+r10]
	xor	esi,eax
	rorx	r14d,r11d,13
	rorx	r13d,r11d,2
	lea	ecx,[r10*1+rcx]
	and	r15d,esi
	vpxor	xmm9,xmm9,xmm8
	xor	r14d,r12d
	xor	r15d,eax
	xor	r14d,r13d
	lea	r10d,[r15*1+r10]
	mov	r12d,edx
	add	r9d,DWORD[((8+64))+rsp]
	and	r12d,ecx
	rorx	r13d,ecx,25
	rorx	r15d,ecx,11
	lea	r10d,[r14*1+r10]
	lea	r9d,[r12*1+r9]
	andn	r12d,ecx,r8d
	xor	r13d,r15d
	rorx	r14d,ecx,6
	lea	r9d,[r12*1+r9]
	xor	r13d,r14d
	mov	r15d,r10d
	rorx	r12d,r10d,22
	lea	r9d,[r13*1+r9]
	xor	r15d,r11d
	rorx	r14d,r10d,13
	rorx	r13d,r10d,2
	lea	ebx,[r9*1+rbx]
	and	esi,r15d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((32-128))+rdi]
	xor	r14d,r12d
	xor	esi,r11d
	xor	r14d,r13d
	lea	r9d,[rsi*1+r9]
	mov	r12d,ecx
	add	r8d,DWORD[((12+64))+rsp]
	and	r12d,ebx
	rorx	r13d,ebx,25
	rorx	esi,ebx,11
	lea	r9d,[r14*1+r9]
	lea	r8d,[r12*1+r8]
	andn	r12d,ebx,edx
	xor	r13d,esi
	rorx	r14d,ebx,6
	lea	r8d,[r12*1+r8]
	xor	r13d,r14d
	mov	esi,r9d
	rorx	r12d,r9d,22
	lea	r8d,[r13*1+r8]
	xor	esi,r10d
	rorx	r14d,r9d,13
	rorx	r13d,r9d,2
	lea	eax,[r8*1+rax]
	and	r15d,esi
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((48-128))+rdi]
	xor	r14d,r12d
	xor	r15d,r10d
	xor	r14d,r13d
	lea	r8d,[r15*1+r8]
	mov	r12d,ebx
	add	edx,DWORD[((32+64))+rsp]
	and	r12d,eax
	rorx	r13d,eax,25
	rorx	r15d,eax,11
	lea	r8d,[r14*1+r8]
	lea	edx,[r12*1+rdx]
	andn	r12d,eax,ecx
	xor	r13d,r15d
	rorx	r14d,eax,6
	lea	edx,[r12*1+rdx]
	xor	r13d,r14d
	mov	r15d,r8d
	rorx	r12d,r8d,22
	lea	edx,[r13*1+rdx]
	xor	r15d,r9d
	rorx	r14d,r8d,13
	rorx	r13d,r8d,2
	lea	r11d,[rdx*1+r11]
	and	esi,r15d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((64-128))+rdi]
	xor	r14d,r12d
	xor	esi,r9d
	xor	r14d,r13d
	lea	edx,[rsi*1+rdx]
	mov	r12d,eax
	add	ecx,DWORD[((36+64))+rsp]
	and	r12d,r11d
	rorx	r13d,r11d,25
	rorx	esi,r11d,11
	lea	edx,[r14*1+rdx]
	lea	ecx,[r12*1+rcx]
	andn	r12d,r11d,ebx
	xor	r13d,esi
	rorx	r14d,r11d,6
	lea	ecx,[r12*1+rcx]
	xor	r13d,r14d
	mov	esi,edx
	rorx	r12d,edx,22
	lea	ecx,[r13*1+rcx]
	xor	esi,r8d
	rorx	r14d,edx,13
	rorx	r13d,edx,2
	lea	r10d,[rcx*1+r10]
	and	r15d,esi
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((80-128))+rdi]
	xor	r14d,r12d
	xor	r15d,r8d
	xor	r14d,r13d
	lea	ecx,[r15*1+rcx]
	mov	r12d,r11d
	add	ebx,DWORD[((40+64))+rsp]
	and	r12d,r10d
	rorx	r13d,r10d,25
	rorx	r15d,r10d,11
	lea	ecx,[r14*1+rcx]
	lea	ebx,[r12*1+rbx]
	andn	r12d,r10d,eax
	xor	r13d,r15d
	rorx	r14d,r10d,6
	lea	ebx,[r12*1+rbx]
	xor	r13d,r14d
	mov	r15d,ecx
	rorx	r12d,ecx,22
	lea	ebx,[r13*1+rbx]
	xor	r15d,edx
	rorx	r14d,ecx,13
	rorx	r13d,ecx,2
	lea	r9d,[rbx*1+r9]
	and	esi,r15d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((96-128))+rdi]
	xor	r14d,r12d
	xor	esi,edx
	xor	r14d,r13d
	lea	ebx,[rsi*1+rbx]
	mov	r12d,r10d
	add	eax,DWORD[((44+64))+rsp]
	and	r12d,r9d
	rorx	r13d,r9d,25
	rorx	esi,r9d,11
	lea	ebx,[r14*1+rbx]
	lea	eax,[r12*1+rax]
	andn	r12d,r9d,r11d
	xor	r13d,esi
	rorx	r14d,r9d,6
	lea	eax,[r12*1+rax]
	xor	r13d,r14d
	mov	esi,ebx
	rorx	r12d,ebx,22
	lea	eax,[r13*1+rax]
	xor	esi,ecx
	rorx	r14d,ebx,13
	rorx	r13d,ebx,2
	lea	r8d,[rax*1+r8]
	and	r15d,esi
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((112-128))+rdi]
	xor	r14d,r12d
	xor	r15d,ecx
	xor	r14d,r13d
	lea	eax,[r15*1+rax]
	mov	r12d,r9d
	add	r11d,DWORD[rsp]
	and	r12d,r8d
	rorx	r13d,r8d,25
	rorx	r15d,r8d,11
	lea	eax,[r14*1+rax]
	lea	r11d,[r12*1+r11]
	andn	r12d,r8d,r10d
	xor	r13d,r15d
	rorx	r14d,r8d,6
	lea	r11d,[r12*1+r11]
	xor	r13d,r14d
	mov	r15d,eax
	rorx	r12d,eax,22
	lea	r11d,[r13*1+r11]
	xor	r15d,ebx
	rorx	r14d,eax,13
	rorx	r13d,eax,2
	lea	edx,[r11*1+rdx]
	and	esi,r15d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((128-128))+rdi]
	xor	r14d,r12d
	xor	esi,ebx
	xor	r14d,r13d
	lea	r11d,[rsi*1+r11]
	mov	r12d,r8d
	add	r10d,DWORD[4+rsp]
	and	r12d,edx
	rorx	r13d,edx,25
	rorx	esi,edx,11
	lea	r11d,[r14*1+r11]
	lea	r10d,[r12*1+r10]
	andn	r12d,edx,r9d
	xor	r13d,esi
	rorx	r14d,edx,6
	lea	r10d,[r12*1+r10]
	xor	r13d,r14d
	mov	esi,r11d
	rorx	r12d,r11d,22
	lea	r10d,[r13*1+r10]
	xor	esi,eax
	rorx	r14d,r11d,13
	rorx	r13d,r11d,2
	lea	ecx,[r10*1+rcx]
	and	r15d,esi
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((144-128))+rdi]
	xor	r14d,r12d
	xor	r15d,eax
	xor	r14d,r13d
	lea	r10d,[r15*1+r10]
	mov	r12d,edx
	add	r9d,DWORD[8+rsp]
	and	r12d,ecx
	rorx	r13d,ecx,25
	rorx	r15d,ecx,11
	lea	r10d,[r14*1+r10]
	lea	r9d,[r12*1+r9]
	andn	r12d,ecx,r8d
	xor	r13d,r15d
	rorx	r14d,ecx,6
	lea	r9d,[r12*1+r9]
	xor	r13d,r14d
	mov	r15d,r10d
	rorx	r12d,r10d,22
	lea	r9d,[r13*1+r9]
	xor	r15d,r11d
	rorx	r14d,r10d,13
	rorx	r13d,r10d,2
	lea	ebx,[r9*1+rbx]
	and	esi,r15d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((160-128))+rdi]
	xor	r14d,r12d
	xor	esi,r11d
	xor	r14d,r13d
	lea	r9d,[rsi*1+r9]
	mov	r12d,ecx
	add	r8d,DWORD[12+rsp]
	and	r12d,ebx
	rorx	r13d,ebx,25
	rorx	esi,ebx,11
	lea	r9d,[r14*1+r9]
	lea	r8d,[r12*1+r8]
	andn	r12d,ebx,edx
	xor	r13d,esi
	rorx	r14d,ebx,6
	lea	r8d,[r12*1+r8]
	xor	r13d,r14d
	mov	esi,r9d
	rorx	r12d,r9d,22
	lea	r8d,[r13*1+r8]
	xor	esi,r10d
	rorx	r14d,r9d,13
	rorx	r13d,r9d,2
	lea	eax,[r8*1+rax]
	and	r15d,esi
	vaesenclast	xmm11,xmm9,xmm10
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((176-128))+rdi]
	xor	r14d,r12d
	xor	r15d,r10d
	xor	r14d,r13d
	lea	r8d,[r15*1+r8]
	mov	r12d,ebx
	add	edx,DWORD[32+rsp]
	and	r12d,eax
	rorx	r13d,eax,25
	rorx	r15d,eax,11
	lea	r8d,[r14*1+r8]
	lea	edx,[r12*1+rdx]
	andn	r12d,eax,ecx
	xor	r13d,r15d
	rorx	r14d,eax,6
	lea	edx,[r12*1+rdx]
	xor	r13d,r14d
	mov	r15d,r8d
	rorx	r12d,r8d,22
	lea	edx,[r13*1+rdx]
	xor	r15d,r9d
	rorx	r14d,r8d,13
	rorx	r13d,r8d,2
	lea	r11d,[rdx*1+r11]
	and	esi,r15d
	vpand	xmm8,xmm11,xmm12
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((192-128))+rdi]
	xor	r14d,r12d
	xor	esi,r9d
	xor	r14d,r13d
	lea	edx,[rsi*1+rdx]
	mov	r12d,eax
	add	ecx,DWORD[36+rsp]
	and	r12d,r11d
	rorx	r13d,r11d,25
	rorx	esi,r11d,11
	lea	edx,[r14*1+rdx]
	lea	ecx,[r12*1+rcx]
	andn	r12d,r11d,ebx
	xor	r13d,esi
	rorx	r14d,r11d,6
	lea	ecx,[r12*1+rcx]
	xor	r13d,r14d
	mov	esi,edx
	rorx	r12d,edx,22
	lea	ecx,[r13*1+rcx]
	xor	esi,r8d
	rorx	r14d,edx,13
	rorx	r13d,edx,2
	lea	r10d,[rcx*1+r10]
	and	r15d,esi
	vaesenclast	xmm11,xmm9,xmm10
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((208-128))+rdi]
	xor	r14d,r12d
	xor	r15d,r8d
	xor	r14d,r13d
	lea	ecx,[r15*1+rcx]
	mov	r12d,r11d
	add	ebx,DWORD[40+rsp]
	and	r12d,r10d
	rorx	r13d,r10d,25
	rorx	r15d,r10d,11
	lea	ecx,[r14*1+rcx]
	lea	ebx,[r12*1+rbx]
	andn	r12d,r10d,eax
	xor	r13d,r15d
	rorx	r14d,r10d,6
	lea	ebx,[r12*1+rbx]
	xor	r13d,r14d
	mov	r15d,ecx
	rorx	r12d,ecx,22
	lea	ebx,[r13*1+rbx]
	xor	r15d,edx
	rorx	r14d,ecx,13
	rorx	r13d,ecx,2
	lea	r9d,[rbx*1+r9]
	and	esi,r15d
	vpand	xmm11,xmm11,xmm13
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((224-128))+rdi]
	xor	r14d,r12d
	xor	esi,edx
	xor	r14d,r13d
	lea	ebx,[rsi*1+rbx]
	mov	r12d,r10d
	add	eax,DWORD[44+rsp]
	and	r12d,r9d
	rorx	r13d,r9d,25
	rorx	esi,r9d,11
	lea	ebx,[r14*1+rbx]
	lea	eax,[r12*1+rax]
	andn	r12d,r9d,r11d
	xor	r13d,esi
	rorx	r14d,r9d,6
	lea	eax,[r12*1+rax]
	xor	r13d,r14d
	mov	esi,ebx
	rorx	r12d,ebx,22
	lea	eax,[r13*1+rax]
	xor	esi,ecx
	rorx	r14d,ebx,13
	rorx	r13d,ebx,2
	lea	r8d,[rax*1+r8]
	and	r15d,esi
	vpor	xmm8,xmm8,xmm11
	vaesenclast	xmm11,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((0-128))+rdi]
	xor	r14d,r12d
	xor	r15d,ecx
	xor	r14d,r13d
	lea	eax,[r15*1+rax]
	mov	r12d,r9d
	vpextrq	r12,xmm15,1
	vmovq	r13,xmm15
	mov	r15,QWORD[552+rsp]
	add	eax,r14d
	lea	rbp,[448+rsp]

	vpand	xmm11,xmm11,xmm14
	vpor	xmm8,xmm8,xmm11
	vmovdqu	XMMWORD[r13*1+r12],xmm8
	lea	r13,[16+r13]

	add	eax,DWORD[r15]
	add	ebx,DWORD[4+r15]
	add	ecx,DWORD[8+r15]
	add	edx,DWORD[12+r15]
	add	r8d,DWORD[16+r15]
	add	r9d,DWORD[20+r15]
	add	r10d,DWORD[24+r15]
	add	r11d,DWORD[28+r15]

	mov	DWORD[r15],eax
	mov	DWORD[4+r15],ebx
	mov	DWORD[8+r15],ecx
	mov	DWORD[12+r15],edx
	mov	DWORD[16+r15],r8d
	mov	DWORD[20+r15],r9d
	mov	DWORD[24+r15],r10d
	mov	DWORD[28+r15],r11d

	cmp	r13,QWORD[80+rbp]
	je	NEAR $L$done_avx2

	xor	r14d,r14d
	mov	esi,ebx
	mov	r12d,r9d
	xor	esi,ecx
	jmp	NEAR $L$ower_avx2
ALIGN	16
$L$ower_avx2:
	vmovdqu	xmm9,XMMWORD[r13]
	vpinsrq	xmm15,xmm15,r13,0
	add	r11d,DWORD[((0+16))+rbp]
	and	r12d,r8d
	rorx	r13d,r8d,25
	rorx	r15d,r8d,11
	lea	eax,[r14*1+rax]
	lea	r11d,[r12*1+r11]
	andn	r12d,r8d,r10d
	xor	r13d,r15d
	rorx	r14d,r8d,6
	lea	r11d,[r12*1+r11]
	xor	r13d,r14d
	mov	r15d,eax
	rorx	r12d,eax,22
	lea	r11d,[r13*1+r11]
	xor	r15d,ebx
	rorx	r14d,eax,13
	rorx	r13d,eax,2
	lea	edx,[r11*1+rdx]
	and	esi,r15d
	vpxor	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((16-128))+rdi]
	xor	r14d,r12d
	xor	esi,ebx
	xor	r14d,r13d
	lea	r11d,[rsi*1+r11]
	mov	r12d,r8d
	add	r10d,DWORD[((4+16))+rbp]
	and	r12d,edx
	rorx	r13d,edx,25
	rorx	esi,edx,11
	lea	r11d,[r14*1+r11]
	lea	r10d,[r12*1+r10]
	andn	r12d,edx,r9d
	xor	r13d,esi
	rorx	r14d,edx,6
	lea	r10d,[r12*1+r10]
	xor	r13d,r14d
	mov	esi,r11d
	rorx	r12d,r11d,22
	lea	r10d,[r13*1+r10]
	xor	esi,eax
	rorx	r14d,r11d,13
	rorx	r13d,r11d,2
	lea	ecx,[r10*1+rcx]
	and	r15d,esi
	vpxor	xmm9,xmm9,xmm8
	xor	r14d,r12d
	xor	r15d,eax
	xor	r14d,r13d
	lea	r10d,[r15*1+r10]
	mov	r12d,edx
	add	r9d,DWORD[((8+16))+rbp]
	and	r12d,ecx
	rorx	r13d,ecx,25
	rorx	r15d,ecx,11
	lea	r10d,[r14*1+r10]
	lea	r9d,[r12*1+r9]
	andn	r12d,ecx,r8d
	xor	r13d,r15d
	rorx	r14d,ecx,6
	lea	r9d,[r12*1+r9]
	xor	r13d,r14d
	mov	r15d,r10d
	rorx	r12d,r10d,22
	lea	r9d,[r13*1+r9]
	xor	r15d,r11d
	rorx	r14d,r10d,13
	rorx	r13d,r10d,2
	lea	ebx,[r9*1+rbx]
	and	esi,r15d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((32-128))+rdi]
	xor	r14d,r12d
	xor	esi,r11d
	xor	r14d,r13d
	lea	r9d,[rsi*1+r9]
	mov	r12d,ecx
	add	r8d,DWORD[((12+16))+rbp]
	and	r12d,ebx
	rorx	r13d,ebx,25
	rorx	esi,ebx,11
	lea	r9d,[r14*1+r9]
	lea	r8d,[r12*1+r8]
	andn	r12d,ebx,edx
	xor	r13d,esi
	rorx	r14d,ebx,6
	lea	r8d,[r12*1+r8]
	xor	r13d,r14d
	mov	esi,r9d
	rorx	r12d,r9d,22
	lea	r8d,[r13*1+r8]
	xor	esi,r10d
	rorx	r14d,r9d,13
	rorx	r13d,r9d,2
	lea	eax,[r8*1+rax]
	and	r15d,esi
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((48-128))+rdi]
	xor	r14d,r12d
	xor	r15d,r10d
	xor	r14d,r13d
	lea	r8d,[r15*1+r8]
	mov	r12d,ebx
	add	edx,DWORD[((32+16))+rbp]
	and	r12d,eax
	rorx	r13d,eax,25
	rorx	r15d,eax,11
	lea	r8d,[r14*1+r8]
	lea	edx,[r12*1+rdx]
	andn	r12d,eax,ecx
	xor	r13d,r15d
	rorx	r14d,eax,6
	lea	edx,[r12*1+rdx]
	xor	r13d,r14d
	mov	r15d,r8d
	rorx	r12d,r8d,22
	lea	edx,[r13*1+rdx]
	xor	r15d,r9d
	rorx	r14d,r8d,13
	rorx	r13d,r8d,2
	lea	r11d,[rdx*1+r11]
	and	esi,r15d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((64-128))+rdi]
	xor	r14d,r12d
	xor	esi,r9d
	xor	r14d,r13d
	lea	edx,[rsi*1+rdx]
	mov	r12d,eax
	add	ecx,DWORD[((36+16))+rbp]
	and	r12d,r11d
	rorx	r13d,r11d,25
	rorx	esi,r11d,11
	lea	edx,[r14*1+rdx]
	lea	ecx,[r12*1+rcx]
	andn	r12d,r11d,ebx
	xor	r13d,esi
	rorx	r14d,r11d,6
	lea	ecx,[r12*1+rcx]
	xor	r13d,r14d
	mov	esi,edx
	rorx	r12d,edx,22
	lea	ecx,[r13*1+rcx]
	xor	esi,r8d
	rorx	r14d,edx,13
	rorx	r13d,edx,2
	lea	r10d,[rcx*1+r10]
	and	r15d,esi
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((80-128))+rdi]
	xor	r14d,r12d
	xor	r15d,r8d
	xor	r14d,r13d
	lea	ecx,[r15*1+rcx]
	mov	r12d,r11d
	add	ebx,DWORD[((40+16))+rbp]
	and	r12d,r10d
	rorx	r13d,r10d,25
	rorx	r15d,r10d,11
	lea	ecx,[r14*1+rcx]
	lea	ebx,[r12*1+rbx]
	andn	r12d,r10d,eax
	xor	r13d,r15d
	rorx	r14d,r10d,6
	lea	ebx,[r12*1+rbx]
	xor	r13d,r14d
	mov	r15d,ecx
	rorx	r12d,ecx,22
	lea	ebx,[r13*1+rbx]
	xor	r15d,edx
	rorx	r14d,ecx,13
	rorx	r13d,ecx,2
	lea	r9d,[rbx*1+r9]
	and	esi,r15d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((96-128))+rdi]
	xor	r14d,r12d
	xor	esi,edx
	xor	r14d,r13d
	lea	ebx,[rsi*1+rbx]
	mov	r12d,r10d
	add	eax,DWORD[((44+16))+rbp]
	and	r12d,r9d
	rorx	r13d,r9d,25
	rorx	esi,r9d,11
	lea	ebx,[r14*1+rbx]
	lea	eax,[r12*1+rax]
	andn	r12d,r9d,r11d
	xor	r13d,esi
	rorx	r14d,r9d,6
	lea	eax,[r12*1+rax]
	xor	r13d,r14d
	mov	esi,ebx
	rorx	r12d,ebx,22
	lea	eax,[r13*1+rax]
	xor	esi,ecx
	rorx	r14d,ebx,13
	rorx	r13d,ebx,2
	lea	r8d,[rax*1+r8]
	and	r15d,esi
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((112-128))+rdi]
	xor	r14d,r12d
	xor	r15d,ecx
	xor	r14d,r13d
	lea	eax,[r15*1+rax]
	mov	r12d,r9d
	lea	rbp,[((-64))+rbp]
	add	r11d,DWORD[((0+16))+rbp]
	and	r12d,r8d
	rorx	r13d,r8d,25
	rorx	r15d,r8d,11
	lea	eax,[r14*1+rax]
	lea	r11d,[r12*1+r11]
	andn	r12d,r8d,r10d
	xor	r13d,r15d
	rorx	r14d,r8d,6
	lea	r11d,[r12*1+r11]
	xor	r13d,r14d
	mov	r15d,eax
	rorx	r12d,eax,22
	lea	r11d,[r13*1+r11]
	xor	r15d,ebx
	rorx	r14d,eax,13
	rorx	r13d,eax,2
	lea	edx,[r11*1+rdx]
	and	esi,r15d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((128-128))+rdi]
	xor	r14d,r12d
	xor	esi,ebx
	xor	r14d,r13d
	lea	r11d,[rsi*1+r11]
	mov	r12d,r8d
	add	r10d,DWORD[((4+16))+rbp]
	and	r12d,edx
	rorx	r13d,edx,25
	rorx	esi,edx,11
	lea	r11d,[r14*1+r11]
	lea	r10d,[r12*1+r10]
	andn	r12d,edx,r9d
	xor	r13d,esi
	rorx	r14d,edx,6
	lea	r10d,[r12*1+r10]
	xor	r13d,r14d
	mov	esi,r11d
	rorx	r12d,r11d,22
	lea	r10d,[r13*1+r10]
	xor	esi,eax
	rorx	r14d,r11d,13
	rorx	r13d,r11d,2
	lea	ecx,[r10*1+rcx]
	and	r15d,esi
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((144-128))+rdi]
	xor	r14d,r12d
	xor	r15d,eax
	xor	r14d,r13d
	lea	r10d,[r15*1+r10]
	mov	r12d,edx
	add	r9d,DWORD[((8+16))+rbp]
	and	r12d,ecx
	rorx	r13d,ecx,25
	rorx	r15d,ecx,11
	lea	r10d,[r14*1+r10]
	lea	r9d,[r12*1+r9]
	andn	r12d,ecx,r8d
	xor	r13d,r15d
	rorx	r14d,ecx,6
	lea	r9d,[r12*1+r9]
	xor	r13d,r14d
	mov	r15d,r10d
	rorx	r12d,r10d,22
	lea	r9d,[r13*1+r9]
	xor	r15d,r11d
	rorx	r14d,r10d,13
	rorx	r13d,r10d,2
	lea	ebx,[r9*1+rbx]
	and	esi,r15d
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((160-128))+rdi]
	xor	r14d,r12d
	xor	esi,r11d
	xor	r14d,r13d
	lea	r9d,[rsi*1+r9]
	mov	r12d,ecx
	add	r8d,DWORD[((12+16))+rbp]
	and	r12d,ebx
	rorx	r13d,ebx,25
	rorx	esi,ebx,11
	lea	r9d,[r14*1+r9]
	lea	r8d,[r12*1+r8]
	andn	r12d,ebx,edx
	xor	r13d,esi
	rorx	r14d,ebx,6
	lea	r8d,[r12*1+r8]
	xor	r13d,r14d
	mov	esi,r9d
	rorx	r12d,r9d,22
	lea	r8d,[r13*1+r8]
	xor	esi,r10d
	rorx	r14d,r9d,13
	rorx	r13d,r9d,2
	lea	eax,[r8*1+rax]
	and	r15d,esi
	vaesenclast	xmm11,xmm9,xmm10
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((176-128))+rdi]
	xor	r14d,r12d
	xor	r15d,r10d
	xor	r14d,r13d
	lea	r8d,[r15*1+r8]
	mov	r12d,ebx
	add	edx,DWORD[((32+16))+rbp]
	and	r12d,eax
	rorx	r13d,eax,25
	rorx	r15d,eax,11
	lea	r8d,[r14*1+r8]
	lea	edx,[r12*1+rdx]
	andn	r12d,eax,ecx
	xor	r13d,r15d
	rorx	r14d,eax,6
	lea	edx,[r12*1+rdx]
	xor	r13d,r14d
	mov	r15d,r8d
	rorx	r12d,r8d,22
	lea	edx,[r13*1+rdx]
	xor	r15d,r9d
	rorx	r14d,r8d,13
	rorx	r13d,r8d,2
	lea	r11d,[rdx*1+r11]
	and	esi,r15d
	vpand	xmm8,xmm11,xmm12
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((192-128))+rdi]
	xor	r14d,r12d
	xor	esi,r9d
	xor	r14d,r13d
	lea	edx,[rsi*1+rdx]
	mov	r12d,eax
	add	ecx,DWORD[((36+16))+rbp]
	and	r12d,r11d
	rorx	r13d,r11d,25
	rorx	esi,r11d,11
	lea	edx,[r14*1+rdx]
	lea	ecx,[r12*1+rcx]
	andn	r12d,r11d,ebx
	xor	r13d,esi
	rorx	r14d,r11d,6
	lea	ecx,[r12*1+rcx]
	xor	r13d,r14d
	mov	esi,edx
	rorx	r12d,edx,22
	lea	ecx,[r13*1+rcx]
	xor	esi,r8d
	rorx	r14d,edx,13
	rorx	r13d,edx,2
	lea	r10d,[rcx*1+r10]
	and	r15d,esi
	vaesenclast	xmm11,xmm9,xmm10
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((208-128))+rdi]
	xor	r14d,r12d
	xor	r15d,r8d
	xor	r14d,r13d
	lea	ecx,[r15*1+rcx]
	mov	r12d,r11d
	add	ebx,DWORD[((40+16))+rbp]
	and	r12d,r10d
	rorx	r13d,r10d,25
	rorx	r15d,r10d,11
	lea	ecx,[r14*1+rcx]
	lea	ebx,[r12*1+rbx]
	andn	r12d,r10d,eax
	xor	r13d,r15d
	rorx	r14d,r10d,6
	lea	ebx,[r12*1+rbx]
	xor	r13d,r14d
	mov	r15d,ecx
	rorx	r12d,ecx,22
	lea	ebx,[r13*1+rbx]
	xor	r15d,edx
	rorx	r14d,ecx,13
	rorx	r13d,ecx,2
	lea	r9d,[rbx*1+r9]
	and	esi,r15d
	vpand	xmm11,xmm11,xmm13
	vaesenc	xmm9,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((224-128))+rdi]
	xor	r14d,r12d
	xor	esi,edx
	xor	r14d,r13d
	lea	ebx,[rsi*1+rbx]
	mov	r12d,r10d
	add	eax,DWORD[((44+16))+rbp]
	and	r12d,r9d
	rorx	r13d,r9d,25
	rorx	esi,r9d,11
	lea	ebx,[r14*1+rbx]
	lea	eax,[r12*1+rax]
	andn	r12d,r9d,r11d
	xor	r13d,esi
	rorx	r14d,r9d,6
	lea	eax,[r12*1+rax]
	xor	r13d,r14d
	mov	esi,ebx
	rorx	r12d,ebx,22
	lea	eax,[r13*1+rax]
	xor	esi,ecx
	rorx	r14d,ebx,13
	rorx	r13d,ebx,2
	lea	r8d,[rax*1+r8]
	and	r15d,esi
	vpor	xmm8,xmm8,xmm11
	vaesenclast	xmm11,xmm9,xmm10
	vmovdqu	xmm10,XMMWORD[((0-128))+rdi]
	xor	r14d,r12d
	xor	r15d,ecx
	xor	r14d,r13d
	lea	eax,[r15*1+rax]
	mov	r12d,r9d
	vmovq	r13,xmm15
	vpextrq	r15,xmm15,1
	vpand	xmm11,xmm11,xmm14
	vpor	xmm8,xmm8,xmm11
	lea	rbp,[((-64))+rbp]
	vmovdqu	XMMWORD[r13*1+r15],xmm8
	lea	r13,[16+r13]
	cmp	rbp,rsp
	jae	NEAR $L$ower_avx2

	mov	r15,QWORD[552+rsp]
	lea	r13,[64+r13]
	mov	rsi,QWORD[560+rsp]
	add	eax,r14d
	lea	rsp,[448+rsp]

	add	eax,DWORD[r15]
	add	ebx,DWORD[4+r15]
	add	ecx,DWORD[8+r15]
	add	edx,DWORD[12+r15]
	add	r8d,DWORD[16+r15]
	add	r9d,DWORD[20+r15]
	add	r10d,DWORD[24+r15]
	lea	r12,[r13*1+rsi]
	add	r11d,DWORD[28+r15]

	cmp	r13,QWORD[((64+16))+rsp]

	mov	DWORD[r15],eax
	cmove	r12,rsp
	mov	DWORD[4+r15],ebx
	mov	DWORD[8+r15],ecx
	mov	DWORD[12+r15],edx
	mov	DWORD[16+r15],r8d
	mov	DWORD[20+r15],r9d
	mov	DWORD[24+r15],r10d
	mov	DWORD[28+r15],r11d

	jbe	NEAR $L$oop_avx2
	lea	rbp,[rsp]




$L$done_avx2:
	mov	r8,QWORD[((64+32))+rbp]
	mov	rsi,QWORD[((64+56))+rbp]

	vmovdqu	XMMWORD[r8],xmm8
	vzeroall
	movaps	xmm6,XMMWORD[128+rbp]
	movaps	xmm7,XMMWORD[144+rbp]
	movaps	xmm8,XMMWORD[160+rbp]
	movaps	xmm9,XMMWORD[176+rbp]
	movaps	xmm10,XMMWORD[192+rbp]
	movaps	xmm11,XMMWORD[208+rbp]
	movaps	xmm12,XMMWORD[224+rbp]
	movaps	xmm13,XMMWORD[240+rbp]
	movaps	xmm14,XMMWORD[256+rbp]
	movaps	xmm15,XMMWORD[272+rbp]
	mov	r15,QWORD[((-48))+rsi]

	mov	r14,QWORD[((-40))+rsi]

	mov	r13,QWORD[((-32))+rsi]

	mov	r12,QWORD[((-24))+rsi]

	mov	rbp,QWORD[((-16))+rsi]

	mov	rbx,QWORD[((-8))+rsi]

	lea	rsp,[rsi]

$L$epilogue_avx2:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_cbc_sha256_enc_avx2:

ALIGN	32
aesni_cbc_sha256_enc_shaext:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_cbc_sha256_enc_shaext:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



	mov	r10,QWORD[56+rsp]
	lea	rsp,[((-168))+rsp]
	movaps	XMMWORD[(-8-160)+rax],xmm6
	movaps	XMMWORD[(-8-144)+rax],xmm7
	movaps	XMMWORD[(-8-128)+rax],xmm8
	movaps	XMMWORD[(-8-112)+rax],xmm9
	movaps	XMMWORD[(-8-96)+rax],xmm10
	movaps	XMMWORD[(-8-80)+rax],xmm11
	movaps	XMMWORD[(-8-64)+rax],xmm12
	movaps	XMMWORD[(-8-48)+rax],xmm13
	movaps	XMMWORD[(-8-32)+rax],xmm14
	movaps	XMMWORD[(-8-16)+rax],xmm15
$L$prologue_shaext:
	lea	rax,[((K256+128))]
	movdqu	xmm1,XMMWORD[r9]
	movdqu	xmm2,XMMWORD[16+r9]
	movdqa	xmm3,XMMWORD[((512-128))+rax]

	mov	r11d,DWORD[240+rcx]
	sub	rsi,rdi
	movups	xmm15,XMMWORD[rcx]
	movups	xmm6,XMMWORD[r8]
	movups	xmm4,XMMWORD[16+rcx]
	lea	rcx,[112+rcx]

	pshufd	xmm0,xmm1,0x1b
	pshufd	xmm1,xmm1,0xb1
	pshufd	xmm2,xmm2,0x1b
	movdqa	xmm7,xmm3
DB	102,15,58,15,202,8
	punpcklqdq	xmm2,xmm0

	jmp	NEAR $L$oop_shaext

ALIGN	16
$L$oop_shaext:
	movdqu	xmm10,XMMWORD[r10]
	movdqu	xmm11,XMMWORD[16+r10]
	movdqu	xmm12,XMMWORD[32+r10]
DB	102,68,15,56,0,211
	movdqu	xmm13,XMMWORD[48+r10]

	movdqa	xmm0,XMMWORD[((0-128))+rax]
	paddd	xmm0,xmm10
DB	102,68,15,56,0,219
	movdqa	xmm9,xmm2
	movdqa	xmm8,xmm1
	movups	xmm14,XMMWORD[rdi]
	xorps	xmm14,xmm15
	xorps	xmm6,xmm14
	movups	xmm5,XMMWORD[((-80))+rcx]
	aesenc	xmm6,xmm4
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movups	xmm4,XMMWORD[((-64))+rcx]
	aesenc	xmm6,xmm5
DB	15,56,203,202

	movdqa	xmm0,XMMWORD[((32-128))+rax]
	paddd	xmm0,xmm11
DB	102,68,15,56,0,227
	lea	r10,[64+r10]
	movups	xmm5,XMMWORD[((-48))+rcx]
	aesenc	xmm6,xmm4
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movups	xmm4,XMMWORD[((-32))+rcx]
	aesenc	xmm6,xmm5
DB	15,56,203,202

	movdqa	xmm0,XMMWORD[((64-128))+rax]
	paddd	xmm0,xmm12
DB	102,68,15,56,0,235
DB	69,15,56,204,211
	movups	xmm5,XMMWORD[((-16))+rcx]
	aesenc	xmm6,xmm4
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movdqa	xmm3,xmm13
DB	102,65,15,58,15,220,4
	paddd	xmm10,xmm3
	movups	xmm4,XMMWORD[rcx]
	aesenc	xmm6,xmm5
DB	15,56,203,202

	movdqa	xmm0,XMMWORD[((96-128))+rax]
	paddd	xmm0,xmm13
DB	69,15,56,205,213
DB	69,15,56,204,220
	movups	xmm5,XMMWORD[16+rcx]
	aesenc	xmm6,xmm4
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movups	xmm4,XMMWORD[32+rcx]
	aesenc	xmm6,xmm5
	movdqa	xmm3,xmm10
DB	102,65,15,58,15,221,4
	paddd	xmm11,xmm3
DB	15,56,203,202
	movdqa	xmm0,XMMWORD[((128-128))+rax]
	paddd	xmm0,xmm10
DB	69,15,56,205,218
DB	69,15,56,204,229
	movups	xmm5,XMMWORD[48+rcx]
	aesenc	xmm6,xmm4
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movdqa	xmm3,xmm11
DB	102,65,15,58,15,218,4
	paddd	xmm12,xmm3
	cmp	r11d,11
	jb	NEAR $L$aesenclast1
	movups	xmm4,XMMWORD[64+rcx]
	aesenc	xmm6,xmm5
	movups	xmm5,XMMWORD[80+rcx]
	aesenc	xmm6,xmm4
	je	NEAR $L$aesenclast1
	movups	xmm4,XMMWORD[96+rcx]
	aesenc	xmm6,xmm5
	movups	xmm5,XMMWORD[112+rcx]
	aesenc	xmm6,xmm4
$L$aesenclast1:
	aesenclast	xmm6,xmm5
	movups	xmm4,XMMWORD[((16-112))+rcx]
	nop
DB	15,56,203,202
	movups	xmm14,XMMWORD[16+rdi]
	xorps	xmm14,xmm15
	movups	XMMWORD[rdi*1+rsi],xmm6
	xorps	xmm6,xmm14
	movups	xmm5,XMMWORD[((-80))+rcx]
	aesenc	xmm6,xmm4
	movdqa	xmm0,XMMWORD[((160-128))+rax]
	paddd	xmm0,xmm11
DB	69,15,56,205,227
DB	69,15,56,204,234
	movups	xmm4,XMMWORD[((-64))+rcx]
	aesenc	xmm6,xmm5
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movdqa	xmm3,xmm12
DB	102,65,15,58,15,219,4
	paddd	xmm13,xmm3
	movups	xmm5,XMMWORD[((-48))+rcx]
	aesenc	xmm6,xmm4
DB	15,56,203,202
	movdqa	xmm0,XMMWORD[((192-128))+rax]
	paddd	xmm0,xmm12
DB	69,15,56,205,236
DB	69,15,56,204,211
	movups	xmm4,XMMWORD[((-32))+rcx]
	aesenc	xmm6,xmm5
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movdqa	xmm3,xmm13
DB	102,65,15,58,15,220,4
	paddd	xmm10,xmm3
	movups	xmm5,XMMWORD[((-16))+rcx]
	aesenc	xmm6,xmm4
DB	15,56,203,202
	movdqa	xmm0,XMMWORD[((224-128))+rax]
	paddd	xmm0,xmm13
DB	69,15,56,205,213
DB	69,15,56,204,220
	movups	xmm4,XMMWORD[rcx]
	aesenc	xmm6,xmm5
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movdqa	xmm3,xmm10
DB	102,65,15,58,15,221,4
	paddd	xmm11,xmm3
	movups	xmm5,XMMWORD[16+rcx]
	aesenc	xmm6,xmm4
DB	15,56,203,202
	movdqa	xmm0,XMMWORD[((256-128))+rax]
	paddd	xmm0,xmm10
DB	69,15,56,205,218
DB	69,15,56,204,229
	movups	xmm4,XMMWORD[32+rcx]
	aesenc	xmm6,xmm5
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movdqa	xmm3,xmm11
DB	102,65,15,58,15,218,4
	paddd	xmm12,xmm3
	movups	xmm5,XMMWORD[48+rcx]
	aesenc	xmm6,xmm4
	cmp	r11d,11
	jb	NEAR $L$aesenclast2
	movups	xmm4,XMMWORD[64+rcx]
	aesenc	xmm6,xmm5
	movups	xmm5,XMMWORD[80+rcx]
	aesenc	xmm6,xmm4
	je	NEAR $L$aesenclast2
	movups	xmm4,XMMWORD[96+rcx]
	aesenc	xmm6,xmm5
	movups	xmm5,XMMWORD[112+rcx]
	aesenc	xmm6,xmm4
$L$aesenclast2:
	aesenclast	xmm6,xmm5
	movups	xmm4,XMMWORD[((16-112))+rcx]
	nop
DB	15,56,203,202
	movups	xmm14,XMMWORD[32+rdi]
	xorps	xmm14,xmm15
	movups	XMMWORD[16+rdi*1+rsi],xmm6
	xorps	xmm6,xmm14
	movups	xmm5,XMMWORD[((-80))+rcx]
	aesenc	xmm6,xmm4
	movdqa	xmm0,XMMWORD[((288-128))+rax]
	paddd	xmm0,xmm11
DB	69,15,56,205,227
DB	69,15,56,204,234
	movups	xmm4,XMMWORD[((-64))+rcx]
	aesenc	xmm6,xmm5
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movdqa	xmm3,xmm12
DB	102,65,15,58,15,219,4
	paddd	xmm13,xmm3
	movups	xmm5,XMMWORD[((-48))+rcx]
	aesenc	xmm6,xmm4
DB	15,56,203,202
	movdqa	xmm0,XMMWORD[((320-128))+rax]
	paddd	xmm0,xmm12
DB	69,15,56,205,236
DB	69,15,56,204,211
	movups	xmm4,XMMWORD[((-32))+rcx]
	aesenc	xmm6,xmm5
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movdqa	xmm3,xmm13
DB	102,65,15,58,15,220,4
	paddd	xmm10,xmm3
	movups	xmm5,XMMWORD[((-16))+rcx]
	aesenc	xmm6,xmm4
DB	15,56,203,202
	movdqa	xmm0,XMMWORD[((352-128))+rax]
	paddd	xmm0,xmm13
DB	69,15,56,205,213
DB	69,15,56,204,220
	movups	xmm4,XMMWORD[rcx]
	aesenc	xmm6,xmm5
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movdqa	xmm3,xmm10
DB	102,65,15,58,15,221,4
	paddd	xmm11,xmm3
	movups	xmm5,XMMWORD[16+rcx]
	aesenc	xmm6,xmm4
DB	15,56,203,202
	movdqa	xmm0,XMMWORD[((384-128))+rax]
	paddd	xmm0,xmm10
DB	69,15,56,205,218
DB	69,15,56,204,229
	movups	xmm4,XMMWORD[32+rcx]
	aesenc	xmm6,xmm5
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movdqa	xmm3,xmm11
DB	102,65,15,58,15,218,4
	paddd	xmm12,xmm3
	movups	xmm5,XMMWORD[48+rcx]
	aesenc	xmm6,xmm4
DB	15,56,203,202
	movdqa	xmm0,XMMWORD[((416-128))+rax]
	paddd	xmm0,xmm11
DB	69,15,56,205,227
DB	69,15,56,204,234
	cmp	r11d,11
	jb	NEAR $L$aesenclast3
	movups	xmm4,XMMWORD[64+rcx]
	aesenc	xmm6,xmm5
	movups	xmm5,XMMWORD[80+rcx]
	aesenc	xmm6,xmm4
	je	NEAR $L$aesenclast3
	movups	xmm4,XMMWORD[96+rcx]
	aesenc	xmm6,xmm5
	movups	xmm5,XMMWORD[112+rcx]
	aesenc	xmm6,xmm4
$L$aesenclast3:
	aesenclast	xmm6,xmm5
	movups	xmm4,XMMWORD[((16-112))+rcx]
	nop
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movdqa	xmm3,xmm12
DB	102,65,15,58,15,219,4
	paddd	xmm13,xmm3
	movups	xmm14,XMMWORD[48+rdi]
	xorps	xmm14,xmm15
	movups	XMMWORD[32+rdi*1+rsi],xmm6
	xorps	xmm6,xmm14
	movups	xmm5,XMMWORD[((-80))+rcx]
	aesenc	xmm6,xmm4
	movups	xmm4,XMMWORD[((-64))+rcx]
	aesenc	xmm6,xmm5
DB	15,56,203,202

	movdqa	xmm0,XMMWORD[((448-128))+rax]
	paddd	xmm0,xmm12
DB	69,15,56,205,236
	movdqa	xmm3,xmm7
	movups	xmm5,XMMWORD[((-48))+rcx]
	aesenc	xmm6,xmm4
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movups	xmm4,XMMWORD[((-32))+rcx]
	aesenc	xmm6,xmm5
DB	15,56,203,202

	movdqa	xmm0,XMMWORD[((480-128))+rax]
	paddd	xmm0,xmm13
	movups	xmm5,XMMWORD[((-16))+rcx]
	aesenc	xmm6,xmm4
	movups	xmm4,XMMWORD[rcx]
	aesenc	xmm6,xmm5
DB	15,56,203,209
	pshufd	xmm0,xmm0,0x0e
	movups	xmm5,XMMWORD[16+rcx]
	aesenc	xmm6,xmm4
DB	15,56,203,202

	movups	xmm4,XMMWORD[32+rcx]
	aesenc	xmm6,xmm5
	movups	xmm5,XMMWORD[48+rcx]
	aesenc	xmm6,xmm4
	cmp	r11d,11
	jb	NEAR $L$aesenclast4
	movups	xmm4,XMMWORD[64+rcx]
	aesenc	xmm6,xmm5
	movups	xmm5,XMMWORD[80+rcx]
	aesenc	xmm6,xmm4
	je	NEAR $L$aesenclast4
	movups	xmm4,XMMWORD[96+rcx]
	aesenc	xmm6,xmm5
	movups	xmm5,XMMWORD[112+rcx]
	aesenc	xmm6,xmm4
$L$aesenclast4:
	aesenclast	xmm6,xmm5
	movups	xmm4,XMMWORD[((16-112))+rcx]
	nop

	paddd	xmm2,xmm9
	paddd	xmm1,xmm8

	dec	rdx
	movups	XMMWORD[48+rdi*1+rsi],xmm6
	lea	rdi,[64+rdi]
	jnz	NEAR $L$oop_shaext

	pshufd	xmm2,xmm2,0xb1
	pshufd	xmm3,xmm1,0x1b
	pshufd	xmm1,xmm1,0xb1
	punpckhqdq	xmm1,xmm2
DB	102,15,58,15,211,8

	movups	XMMWORD[r8],xmm6
	movdqu	XMMWORD[r9],xmm1
	movdqu	XMMWORD[16+r9],xmm2
	movaps	xmm6,XMMWORD[rsp]
	movaps	xmm7,XMMWORD[16+rsp]
	movaps	xmm8,XMMWORD[32+rsp]
	movaps	xmm9,XMMWORD[48+rsp]
	movaps	xmm10,XMMWORD[64+rsp]
	movaps	xmm11,XMMWORD[80+rsp]
	movaps	xmm12,XMMWORD[96+rsp]
	movaps	xmm13,XMMWORD[112+rsp]
	movaps	xmm14,XMMWORD[128+rsp]
	movaps	xmm15,XMMWORD[144+rsp]
	lea	rsp,[((8+160))+rsp]
$L$epilogue_shaext:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_cbc_sha256_enc_shaext:
EXTERN	__imp_RtlVirtualUnwind

ALIGN	16
se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$in_prologue

	mov	rax,QWORD[152+r8]

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$in_prologue
	lea	r10,[aesni_cbc_sha256_enc_shaext]
	cmp	rbx,r10
	jb	NEAR $L$not_in_shaext

	lea	rsi,[rax]
	lea	rdi,[512+r8]
	mov	ecx,20
	DD	0xa548f3fc
	lea	rax,[168+rax]
	jmp	NEAR $L$in_prologue
$L$not_in_shaext:
	lea	r10,[$L$avx2_shortcut]
	cmp	rbx,r10
	jb	NEAR $L$not_in_avx2

	and	rax,-256*4
	add	rax,448
$L$not_in_avx2:
	mov	rsi,rax
	mov	rax,QWORD[((64+56))+rax]

	mov	rbx,QWORD[((-8))+rax]
	mov	rbp,QWORD[((-16))+rax]
	mov	r12,QWORD[((-24))+rax]
	mov	r13,QWORD[((-32))+rax]
	mov	r14,QWORD[((-40))+rax]
	mov	r15,QWORD[((-48))+rax]
	mov	QWORD[144+r8],rbx
	mov	QWORD[160+r8],rbp
	mov	QWORD[216+r8],r12
	mov	QWORD[224+r8],r13
	mov	QWORD[232+r8],r14
	mov	QWORD[240+r8],r15

	lea	rsi,[((64+64))+rsi]
	lea	rdi,[512+r8]
	mov	ecx,20
	DD	0xa548f3fc

$L$in_prologue:
	mov	rdi,QWORD[8+rax]
	mov	rsi,QWORD[16+rax]
	mov	QWORD[152+r8],rax
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi

	mov	rdi,QWORD[40+r9]
	mov	rsi,r8
	mov	ecx,154
	DD	0xa548f3fc

	mov	rsi,r9
	xor	rcx,rcx
	mov	rdx,QWORD[8+rsi]
	mov	r8,QWORD[rsi]
	mov	r9,QWORD[16+rsi]
	mov	r10,QWORD[40+rsi]
	lea	r11,[56+rsi]
	lea	r12,[24+rsi]
	mov	QWORD[32+rsp],r10
	mov	QWORD[40+rsp],r11
	mov	QWORD[48+rsp],r12
	mov	QWORD[56+rsp],rcx
	call	QWORD[__imp_RtlVirtualUnwind]

	mov	eax,1
	add	rsp,64
	popfq
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	pop	rbx
	pop	rdi
	pop	rsi
	DB	0F3h,0C3h		;repret


section	.pdata rdata align=4
	DD	$L$SEH_begin_aesni_cbc_sha256_enc_xop wrt ..imagebase
	DD	$L$SEH_end_aesni_cbc_sha256_enc_xop wrt ..imagebase
	DD	$L$SEH_info_aesni_cbc_sha256_enc_xop wrt ..imagebase

	DD	$L$SEH_begin_aesni_cbc_sha256_enc_avx wrt ..imagebase
	DD	$L$SEH_end_aesni_cbc_sha256_enc_avx wrt ..imagebase
	DD	$L$SEH_info_aesni_cbc_sha256_enc_avx wrt ..imagebase
	DD	$L$SEH_begin_aesni_cbc_sha256_enc_avx2 wrt ..imagebase
	DD	$L$SEH_end_aesni_cbc_sha256_enc_avx2 wrt ..imagebase
	DD	$L$SEH_info_aesni_cbc_sha256_enc_avx2 wrt ..imagebase
	DD	$L$SEH_begin_aesni_cbc_sha256_enc_shaext wrt ..imagebase
	DD	$L$SEH_end_aesni_cbc_sha256_enc_shaext wrt ..imagebase
	DD	$L$SEH_info_aesni_cbc_sha256_enc_shaext wrt ..imagebase
section	.xdata rdata align=8
ALIGN	8
$L$SEH_info_aesni_cbc_sha256_enc_xop:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$prologue_xop wrt ..imagebase,$L$epilogue_xop wrt ..imagebase

$L$SEH_info_aesni_cbc_sha256_enc_avx:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$prologue_avx wrt ..imagebase,$L$epilogue_avx wrt ..imagebase
$L$SEH_info_aesni_cbc_sha256_enc_avx2:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$prologue_avx2 wrt ..imagebase,$L$epilogue_avx2 wrt ..imagebase
$L$SEH_info_aesni_cbc_sha256_enc_shaext:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$prologue_shaext wrt ..imagebase,$L$epilogue_shaext wrt ..imagebase
                                                                                                                                                                                                                                                                                                                                                                                          node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/aes/aesni-x86_64.asm                0000664 0000000 0000000 00000277267 14746647661 0027350 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        default	rel
%define XMMWORD
%define YMMWORD
%define ZMMWORD
section	.text code align=64

EXTERN	OPENSSL_ia32cap_P
global	aesni_encrypt

ALIGN	16
aesni_encrypt:

DB	243,15,30,250
	movups	xmm2,XMMWORD[rcx]
	mov	eax,DWORD[240+r8]
	movups	xmm0,XMMWORD[r8]
	movups	xmm1,XMMWORD[16+r8]
	lea	r8,[32+r8]
	xorps	xmm2,xmm0
$L$oop_enc1_1:
DB	102,15,56,220,209
	dec	eax
	movups	xmm1,XMMWORD[r8]
	lea	r8,[16+r8]
	jnz	NEAR $L$oop_enc1_1
DB	102,15,56,221,209
	pxor	xmm0,xmm0
	pxor	xmm1,xmm1
	movups	XMMWORD[rdx],xmm2
	pxor	xmm2,xmm2
	DB	0F3h,0C3h		;repret



global	aesni_decrypt

ALIGN	16
aesni_decrypt:

DB	243,15,30,250
	movups	xmm2,XMMWORD[rcx]
	mov	eax,DWORD[240+r8]
	movups	xmm0,XMMWORD[r8]
	movups	xmm1,XMMWORD[16+r8]
	lea	r8,[32+r8]
	xorps	xmm2,xmm0
$L$oop_dec1_2:
DB	102,15,56,222,209
	dec	eax
	movups	xmm1,XMMWORD[r8]
	lea	r8,[16+r8]
	jnz	NEAR $L$oop_dec1_2
DB	102,15,56,223,209
	pxor	xmm0,xmm0
	pxor	xmm1,xmm1
	movups	XMMWORD[rdx],xmm2
	pxor	xmm2,xmm2
	DB	0F3h,0C3h		;repret



ALIGN	16
_aesni_encrypt2:

	movups	xmm0,XMMWORD[rcx]
	shl	eax,4
	movups	xmm1,XMMWORD[16+rcx]
	xorps	xmm2,xmm0
	xorps	xmm3,xmm0
	movups	xmm0,XMMWORD[32+rcx]
	lea	rcx,[32+rax*1+rcx]
	neg	rax
	add	rax,16

$L$enc_loop2:
DB	102,15,56,220,209
DB	102,15,56,220,217
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32
DB	102,15,56,220,208
DB	102,15,56,220,216
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$enc_loop2

DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,221,208
DB	102,15,56,221,216
	DB	0F3h,0C3h		;repret



ALIGN	16
_aesni_decrypt2:

	movups	xmm0,XMMWORD[rcx]
	shl	eax,4
	movups	xmm1,XMMWORD[16+rcx]
	xorps	xmm2,xmm0
	xorps	xmm3,xmm0
	movups	xmm0,XMMWORD[32+rcx]
	lea	rcx,[32+rax*1+rcx]
	neg	rax
	add	rax,16

$L$dec_loop2:
DB	102,15,56,222,209
DB	102,15,56,222,217
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32
DB	102,15,56,222,208
DB	102,15,56,222,216
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$dec_loop2

DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,223,208
DB	102,15,56,223,216
	DB	0F3h,0C3h		;repret



ALIGN	16
_aesni_encrypt3:

	movups	xmm0,XMMWORD[rcx]
	shl	eax,4
	movups	xmm1,XMMWORD[16+rcx]
	xorps	xmm2,xmm0
	xorps	xmm3,xmm0
	xorps	xmm4,xmm0
	movups	xmm0,XMMWORD[32+rcx]
	lea	rcx,[32+rax*1+rcx]
	neg	rax
	add	rax,16

$L$enc_loop3:
DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32
DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$enc_loop3

DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,221,208
DB	102,15,56,221,216
DB	102,15,56,221,224
	DB	0F3h,0C3h		;repret



ALIGN	16
_aesni_decrypt3:

	movups	xmm0,XMMWORD[rcx]
	shl	eax,4
	movups	xmm1,XMMWORD[16+rcx]
	xorps	xmm2,xmm0
	xorps	xmm3,xmm0
	xorps	xmm4,xmm0
	movups	xmm0,XMMWORD[32+rcx]
	lea	rcx,[32+rax*1+rcx]
	neg	rax
	add	rax,16

$L$dec_loop3:
DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32
DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$dec_loop3

DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,223,208
DB	102,15,56,223,216
DB	102,15,56,223,224
	DB	0F3h,0C3h		;repret



ALIGN	16
_aesni_encrypt4:

	movups	xmm0,XMMWORD[rcx]
	shl	eax,4
	movups	xmm1,XMMWORD[16+rcx]
	xorps	xmm2,xmm0
	xorps	xmm3,xmm0
	xorps	xmm4,xmm0
	xorps	xmm5,xmm0
	movups	xmm0,XMMWORD[32+rcx]
	lea	rcx,[32+rax*1+rcx]
	neg	rax
DB	0x0f,0x1f,0x00
	add	rax,16

$L$enc_loop4:
DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32
DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
DB	102,15,56,220,232
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$enc_loop4

DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
DB	102,15,56,221,208
DB	102,15,56,221,216
DB	102,15,56,221,224
DB	102,15,56,221,232
	DB	0F3h,0C3h		;repret



ALIGN	16
_aesni_decrypt4:

	movups	xmm0,XMMWORD[rcx]
	shl	eax,4
	movups	xmm1,XMMWORD[16+rcx]
	xorps	xmm2,xmm0
	xorps	xmm3,xmm0
	xorps	xmm4,xmm0
	xorps	xmm5,xmm0
	movups	xmm0,XMMWORD[32+rcx]
	lea	rcx,[32+rax*1+rcx]
	neg	rax
DB	0x0f,0x1f,0x00
	add	rax,16

$L$dec_loop4:
DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32
DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$dec_loop4

DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
DB	102,15,56,223,208
DB	102,15,56,223,216
DB	102,15,56,223,224
DB	102,15,56,223,232
	DB	0F3h,0C3h		;repret



ALIGN	16
_aesni_encrypt6:

	movups	xmm0,XMMWORD[rcx]
	shl	eax,4
	movups	xmm1,XMMWORD[16+rcx]
	xorps	xmm2,xmm0
	pxor	xmm3,xmm0
	pxor	xmm4,xmm0
DB	102,15,56,220,209
	lea	rcx,[32+rax*1+rcx]
	neg	rax
DB	102,15,56,220,217
	pxor	xmm5,xmm0
	pxor	xmm6,xmm0
DB	102,15,56,220,225
	pxor	xmm7,xmm0
	movups	xmm0,XMMWORD[rax*1+rcx]
	add	rax,16
	jmp	NEAR $L$enc_loop6_enter
ALIGN	16
$L$enc_loop6:
DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
$L$enc_loop6_enter:
DB	102,15,56,220,233
DB	102,15,56,220,241
DB	102,15,56,220,249
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32
DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
DB	102,15,56,220,232
DB	102,15,56,220,240
DB	102,15,56,220,248
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$enc_loop6

DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
DB	102,15,56,220,241
DB	102,15,56,220,249
DB	102,15,56,221,208
DB	102,15,56,221,216
DB	102,15,56,221,224
DB	102,15,56,221,232
DB	102,15,56,221,240
DB	102,15,56,221,248
	DB	0F3h,0C3h		;repret



ALIGN	16
_aesni_decrypt6:

	movups	xmm0,XMMWORD[rcx]
	shl	eax,4
	movups	xmm1,XMMWORD[16+rcx]
	xorps	xmm2,xmm0
	pxor	xmm3,xmm0
	pxor	xmm4,xmm0
DB	102,15,56,222,209
	lea	rcx,[32+rax*1+rcx]
	neg	rax
DB	102,15,56,222,217
	pxor	xmm5,xmm0
	pxor	xmm6,xmm0
DB	102,15,56,222,225
	pxor	xmm7,xmm0
	movups	xmm0,XMMWORD[rax*1+rcx]
	add	rax,16
	jmp	NEAR $L$dec_loop6_enter
ALIGN	16
$L$dec_loop6:
DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
$L$dec_loop6_enter:
DB	102,15,56,222,233
DB	102,15,56,222,241
DB	102,15,56,222,249
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32
DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
DB	102,15,56,222,240
DB	102,15,56,222,248
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$dec_loop6

DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
DB	102,15,56,222,241
DB	102,15,56,222,249
DB	102,15,56,223,208
DB	102,15,56,223,216
DB	102,15,56,223,224
DB	102,15,56,223,232
DB	102,15,56,223,240
DB	102,15,56,223,248
	DB	0F3h,0C3h		;repret



ALIGN	16
_aesni_encrypt8:

	movups	xmm0,XMMWORD[rcx]
	shl	eax,4
	movups	xmm1,XMMWORD[16+rcx]
	xorps	xmm2,xmm0
	xorps	xmm3,xmm0
	pxor	xmm4,xmm0
	pxor	xmm5,xmm0
	pxor	xmm6,xmm0
	lea	rcx,[32+rax*1+rcx]
	neg	rax
DB	102,15,56,220,209
	pxor	xmm7,xmm0
	pxor	xmm8,xmm0
DB	102,15,56,220,217
	pxor	xmm9,xmm0
	movups	xmm0,XMMWORD[rax*1+rcx]
	add	rax,16
	jmp	NEAR $L$enc_loop8_inner
ALIGN	16
$L$enc_loop8:
DB	102,15,56,220,209
DB	102,15,56,220,217
$L$enc_loop8_inner:
DB	102,15,56,220,225
DB	102,15,56,220,233
DB	102,15,56,220,241
DB	102,15,56,220,249
DB	102,68,15,56,220,193
DB	102,68,15,56,220,201
$L$enc_loop8_enter:
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32
DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
DB	102,15,56,220,232
DB	102,15,56,220,240
DB	102,15,56,220,248
DB	102,68,15,56,220,192
DB	102,68,15,56,220,200
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$enc_loop8

DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
DB	102,15,56,220,241
DB	102,15,56,220,249
DB	102,68,15,56,220,193
DB	102,68,15,56,220,201
DB	102,15,56,221,208
DB	102,15,56,221,216
DB	102,15,56,221,224
DB	102,15,56,221,232
DB	102,15,56,221,240
DB	102,15,56,221,248
DB	102,68,15,56,221,192
DB	102,68,15,56,221,200
	DB	0F3h,0C3h		;repret



ALIGN	16
_aesni_decrypt8:

	movups	xmm0,XMMWORD[rcx]
	shl	eax,4
	movups	xmm1,XMMWORD[16+rcx]
	xorps	xmm2,xmm0
	xorps	xmm3,xmm0
	pxor	xmm4,xmm0
	pxor	xmm5,xmm0
	pxor	xmm6,xmm0
	lea	rcx,[32+rax*1+rcx]
	neg	rax
DB	102,15,56,222,209
	pxor	xmm7,xmm0
	pxor	xmm8,xmm0
DB	102,15,56,222,217
	pxor	xmm9,xmm0
	movups	xmm0,XMMWORD[rax*1+rcx]
	add	rax,16
	jmp	NEAR $L$dec_loop8_inner
ALIGN	16
$L$dec_loop8:
DB	102,15,56,222,209
DB	102,15,56,222,217
$L$dec_loop8_inner:
DB	102,15,56,222,225
DB	102,15,56,222,233
DB	102,15,56,222,241
DB	102,15,56,222,249
DB	102,68,15,56,222,193
DB	102,68,15,56,222,201
$L$dec_loop8_enter:
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32
DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
DB	102,15,56,222,240
DB	102,15,56,222,248
DB	102,68,15,56,222,192
DB	102,68,15,56,222,200
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$dec_loop8

DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
DB	102,15,56,222,241
DB	102,15,56,222,249
DB	102,68,15,56,222,193
DB	102,68,15,56,222,201
DB	102,15,56,223,208
DB	102,15,56,223,216
DB	102,15,56,223,224
DB	102,15,56,223,232
DB	102,15,56,223,240
DB	102,15,56,223,248
DB	102,68,15,56,223,192
DB	102,68,15,56,223,200
	DB	0F3h,0C3h		;repret


global	aesni_ecb_encrypt

ALIGN	16
aesni_ecb_encrypt:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_ecb_encrypt:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]



DB	243,15,30,250
	lea	rsp,[((-88))+rsp]
	movaps	XMMWORD[rsp],xmm6
	movaps	XMMWORD[16+rsp],xmm7
	movaps	XMMWORD[32+rsp],xmm8
	movaps	XMMWORD[48+rsp],xmm9
$L$ecb_enc_body:
	and	rdx,-16
	jz	NEAR $L$ecb_ret

	mov	eax,DWORD[240+rcx]
	movups	xmm0,XMMWORD[rcx]
	mov	r11,rcx
	mov	r10d,eax
	test	r8d,r8d
	jz	NEAR $L$ecb_decrypt

	cmp	rdx,0x80
	jb	NEAR $L$ecb_enc_tail

	movdqu	xmm2,XMMWORD[rdi]
	movdqu	xmm3,XMMWORD[16+rdi]
	movdqu	xmm4,XMMWORD[32+rdi]
	movdqu	xmm5,XMMWORD[48+rdi]
	movdqu	xmm6,XMMWORD[64+rdi]
	movdqu	xmm7,XMMWORD[80+rdi]
	movdqu	xmm8,XMMWORD[96+rdi]
	movdqu	xmm9,XMMWORD[112+rdi]
	lea	rdi,[128+rdi]
	sub	rdx,0x80
	jmp	NEAR $L$ecb_enc_loop8_enter
ALIGN	16
$L$ecb_enc_loop8:
	movups	XMMWORD[rsi],xmm2
	mov	rcx,r11
	movdqu	xmm2,XMMWORD[rdi]
	mov	eax,r10d
	movups	XMMWORD[16+rsi],xmm3
	movdqu	xmm3,XMMWORD[16+rdi]
	movups	XMMWORD[32+rsi],xmm4
	movdqu	xmm4,XMMWORD[32+rdi]
	movups	XMMWORD[48+rsi],xmm5
	movdqu	xmm5,XMMWORD[48+rdi]
	movups	XMMWORD[64+rsi],xmm6
	movdqu	xmm6,XMMWORD[64+rdi]
	movups	XMMWORD[80+rsi],xmm7
	movdqu	xmm7,XMMWORD[80+rdi]
	movups	XMMWORD[96+rsi],xmm8
	movdqu	xmm8,XMMWORD[96+rdi]
	movups	XMMWORD[112+rsi],xmm9
	lea	rsi,[128+rsi]
	movdqu	xmm9,XMMWORD[112+rdi]
	lea	rdi,[128+rdi]
$L$ecb_enc_loop8_enter:

	call	_aesni_encrypt8

	sub	rdx,0x80
	jnc	NEAR $L$ecb_enc_loop8

	movups	XMMWORD[rsi],xmm2
	mov	rcx,r11
	movups	XMMWORD[16+rsi],xmm3
	mov	eax,r10d
	movups	XMMWORD[32+rsi],xmm4
	movups	XMMWORD[48+rsi],xmm5
	movups	XMMWORD[64+rsi],xmm6
	movups	XMMWORD[80+rsi],xmm7
	movups	XMMWORD[96+rsi],xmm8
	movups	XMMWORD[112+rsi],xmm9
	lea	rsi,[128+rsi]
	add	rdx,0x80
	jz	NEAR $L$ecb_ret

$L$ecb_enc_tail:
	movups	xmm2,XMMWORD[rdi]
	cmp	rdx,0x20
	jb	NEAR $L$ecb_enc_one
	movups	xmm3,XMMWORD[16+rdi]
	je	NEAR $L$ecb_enc_two
	movups	xmm4,XMMWORD[32+rdi]
	cmp	rdx,0x40
	jb	NEAR $L$ecb_enc_three
	movups	xmm5,XMMWORD[48+rdi]
	je	NEAR $L$ecb_enc_four
	movups	xmm6,XMMWORD[64+rdi]
	cmp	rdx,0x60
	jb	NEAR $L$ecb_enc_five
	movups	xmm7,XMMWORD[80+rdi]
	je	NEAR $L$ecb_enc_six
	movdqu	xmm8,XMMWORD[96+rdi]
	xorps	xmm9,xmm9
	call	_aesni_encrypt8
	movups	XMMWORD[rsi],xmm2
	movups	XMMWORD[16+rsi],xmm3
	movups	XMMWORD[32+rsi],xmm4
	movups	XMMWORD[48+rsi],xmm5
	movups	XMMWORD[64+rsi],xmm6
	movups	XMMWORD[80+rsi],xmm7
	movups	XMMWORD[96+rsi],xmm8
	jmp	NEAR $L$ecb_ret
ALIGN	16
$L$ecb_enc_one:
	movups	xmm0,XMMWORD[rcx]
	movups	xmm1,XMMWORD[16+rcx]
	lea	rcx,[32+rcx]
	xorps	xmm2,xmm0
$L$oop_enc1_3:
DB	102,15,56,220,209
	dec	eax
	movups	xmm1,XMMWORD[rcx]
	lea	rcx,[16+rcx]
	jnz	NEAR $L$oop_enc1_3
DB	102,15,56,221,209
	movups	XMMWORD[rsi],xmm2
	jmp	NEAR $L$ecb_ret
ALIGN	16
$L$ecb_enc_two:
	call	_aesni_encrypt2
	movups	XMMWORD[rsi],xmm2
	movups	XMMWORD[16+rsi],xmm3
	jmp	NEAR $L$ecb_ret
ALIGN	16
$L$ecb_enc_three:
	call	_aesni_encrypt3
	movups	XMMWORD[rsi],xmm2
	movups	XMMWORD[16+rsi],xmm3
	movups	XMMWORD[32+rsi],xmm4
	jmp	NEAR $L$ecb_ret
ALIGN	16
$L$ecb_enc_four:
	call	_aesni_encrypt4
	movups	XMMWORD[rsi],xmm2
	movups	XMMWORD[16+rsi],xmm3
	movups	XMMWORD[32+rsi],xmm4
	movups	XMMWORD[48+rsi],xmm5
	jmp	NEAR $L$ecb_ret
ALIGN	16
$L$ecb_enc_five:
	xorps	xmm7,xmm7
	call	_aesni_encrypt6
	movups	XMMWORD[rsi],xmm2
	movups	XMMWORD[16+rsi],xmm3
	movups	XMMWORD[32+rsi],xmm4
	movups	XMMWORD[48+rsi],xmm5
	movups	XMMWORD[64+rsi],xmm6
	jmp	NEAR $L$ecb_ret
ALIGN	16
$L$ecb_enc_six:
	call	_aesni_encrypt6
	movups	XMMWORD[rsi],xmm2
	movups	XMMWORD[16+rsi],xmm3
	movups	XMMWORD[32+rsi],xmm4
	movups	XMMWORD[48+rsi],xmm5
	movups	XMMWORD[64+rsi],xmm6
	movups	XMMWORD[80+rsi],xmm7
	jmp	NEAR $L$ecb_ret

ALIGN	16
$L$ecb_decrypt:
	cmp	rdx,0x80
	jb	NEAR $L$ecb_dec_tail

	movdqu	xmm2,XMMWORD[rdi]
	movdqu	xmm3,XMMWORD[16+rdi]
	movdqu	xmm4,XMMWORD[32+rdi]
	movdqu	xmm5,XMMWORD[48+rdi]
	movdqu	xmm6,XMMWORD[64+rdi]
	movdqu	xmm7,XMMWORD[80+rdi]
	movdqu	xmm8,XMMWORD[96+rdi]
	movdqu	xmm9,XMMWORD[112+rdi]
	lea	rdi,[128+rdi]
	sub	rdx,0x80
	jmp	NEAR $L$ecb_dec_loop8_enter
ALIGN	16
$L$ecb_dec_loop8:
	movups	XMMWORD[rsi],xmm2
	mov	rcx,r11
	movdqu	xmm2,XMMWORD[rdi]
	mov	eax,r10d
	movups	XMMWORD[16+rsi],xmm3
	movdqu	xmm3,XMMWORD[16+rdi]
	movups	XMMWORD[32+rsi],xmm4
	movdqu	xmm4,XMMWORD[32+rdi]
	movups	XMMWORD[48+rsi],xmm5
	movdqu	xmm5,XMMWORD[48+rdi]
	movups	XMMWORD[64+rsi],xmm6
	movdqu	xmm6,XMMWORD[64+rdi]
	movups	XMMWORD[80+rsi],xmm7
	movdqu	xmm7,XMMWORD[80+rdi]
	movups	XMMWORD[96+rsi],xmm8
	movdqu	xmm8,XMMWORD[96+rdi]
	movups	XMMWORD[112+rsi],xmm9
	lea	rsi,[128+rsi]
	movdqu	xmm9,XMMWORD[112+rdi]
	lea	rdi,[128+rdi]
$L$ecb_dec_loop8_enter:

	call	_aesni_decrypt8

	movups	xmm0,XMMWORD[r11]
	sub	rdx,0x80
	jnc	NEAR $L$ecb_dec_loop8

	movups	XMMWORD[rsi],xmm2
	pxor	xmm2,xmm2
	mov	rcx,r11
	movups	XMMWORD[16+rsi],xmm3
	pxor	xmm3,xmm3
	mov	eax,r10d
	movups	XMMWORD[32+rsi],xmm4
	pxor	xmm4,xmm4
	movups	XMMWORD[48+rsi],xmm5
	pxor	xmm5,xmm5
	movups	XMMWORD[64+rsi],xmm6
	pxor	xmm6,xmm6
	movups	XMMWORD[80+rsi],xmm7
	pxor	xmm7,xmm7
	movups	XMMWORD[96+rsi],xmm8
	pxor	xmm8,xmm8
	movups	XMMWORD[112+rsi],xmm9
	pxor	xmm9,xmm9
	lea	rsi,[128+rsi]
	add	rdx,0x80
	jz	NEAR $L$ecb_ret

$L$ecb_dec_tail:
	movups	xmm2,XMMWORD[rdi]
	cmp	rdx,0x20
	jb	NEAR $L$ecb_dec_one
	movups	xmm3,XMMWORD[16+rdi]
	je	NEAR $L$ecb_dec_two
	movups	xmm4,XMMWORD[32+rdi]
	cmp	rdx,0x40
	jb	NEAR $L$ecb_dec_three
	movups	xmm5,XMMWORD[48+rdi]
	je	NEAR $L$ecb_dec_four
	movups	xmm6,XMMWORD[64+rdi]
	cmp	rdx,0x60
	jb	NEAR $L$ecb_dec_five
	movups	xmm7,XMMWORD[80+rdi]
	je	NEAR $L$ecb_dec_six
	movups	xmm8,XMMWORD[96+rdi]
	movups	xmm0,XMMWORD[rcx]
	xorps	xmm9,xmm9
	call	_aesni_decrypt8
	movups	XMMWORD[rsi],xmm2
	pxor	xmm2,xmm2
	movups	XMMWORD[16+rsi],xmm3
	pxor	xmm3,xmm3
	movups	XMMWORD[32+rsi],xmm4
	pxor	xmm4,xmm4
	movups	XMMWORD[48+rsi],xmm5
	pxor	xmm5,xmm5
	movups	XMMWORD[64+rsi],xmm6
	pxor	xmm6,xmm6
	movups	XMMWORD[80+rsi],xmm7
	pxor	xmm7,xmm7
	movups	XMMWORD[96+rsi],xmm8
	pxor	xmm8,xmm8
	pxor	xmm9,xmm9
	jmp	NEAR $L$ecb_ret
ALIGN	16
$L$ecb_dec_one:
	movups	xmm0,XMMWORD[rcx]
	movups	xmm1,XMMWORD[16+rcx]
	lea	rcx,[32+rcx]
	xorps	xmm2,xmm0
$L$oop_dec1_4:
DB	102,15,56,222,209
	dec	eax
	movups	xmm1,XMMWORD[rcx]
	lea	rcx,[16+rcx]
	jnz	NEAR $L$oop_dec1_4
DB	102,15,56,223,209
	movups	XMMWORD[rsi],xmm2
	pxor	xmm2,xmm2
	jmp	NEAR $L$ecb_ret
ALIGN	16
$L$ecb_dec_two:
	call	_aesni_decrypt2
	movups	XMMWORD[rsi],xmm2
	pxor	xmm2,xmm2
	movups	XMMWORD[16+rsi],xmm3
	pxor	xmm3,xmm3
	jmp	NEAR $L$ecb_ret
ALIGN	16
$L$ecb_dec_three:
	call	_aesni_decrypt3
	movups	XMMWORD[rsi],xmm2
	pxor	xmm2,xmm2
	movups	XMMWORD[16+rsi],xmm3
	pxor	xmm3,xmm3
	movups	XMMWORD[32+rsi],xmm4
	pxor	xmm4,xmm4
	jmp	NEAR $L$ecb_ret
ALIGN	16
$L$ecb_dec_four:
	call	_aesni_decrypt4
	movups	XMMWORD[rsi],xmm2
	pxor	xmm2,xmm2
	movups	XMMWORD[16+rsi],xmm3
	pxor	xmm3,xmm3
	movups	XMMWORD[32+rsi],xmm4
	pxor	xmm4,xmm4
	movups	XMMWORD[48+rsi],xmm5
	pxor	xmm5,xmm5
	jmp	NEAR $L$ecb_ret
ALIGN	16
$L$ecb_dec_five:
	xorps	xmm7,xmm7
	call	_aesni_decrypt6
	movups	XMMWORD[rsi],xmm2
	pxor	xmm2,xmm2
	movups	XMMWORD[16+rsi],xmm3
	pxor	xmm3,xmm3
	movups	XMMWORD[32+rsi],xmm4
	pxor	xmm4,xmm4
	movups	XMMWORD[48+rsi],xmm5
	pxor	xmm5,xmm5
	movups	XMMWORD[64+rsi],xmm6
	pxor	xmm6,xmm6
	pxor	xmm7,xmm7
	jmp	NEAR $L$ecb_ret
ALIGN	16
$L$ecb_dec_six:
	call	_aesni_decrypt6
	movups	XMMWORD[rsi],xmm2
	pxor	xmm2,xmm2
	movups	XMMWORD[16+rsi],xmm3
	pxor	xmm3,xmm3
	movups	XMMWORD[32+rsi],xmm4
	pxor	xmm4,xmm4
	movups	XMMWORD[48+rsi],xmm5
	pxor	xmm5,xmm5
	movups	XMMWORD[64+rsi],xmm6
	pxor	xmm6,xmm6
	movups	XMMWORD[80+rsi],xmm7
	pxor	xmm7,xmm7

$L$ecb_ret:
	xorps	xmm0,xmm0
	pxor	xmm1,xmm1
	movaps	xmm6,XMMWORD[rsp]
	movaps	XMMWORD[rsp],xmm0
	movaps	xmm7,XMMWORD[16+rsp]
	movaps	XMMWORD[16+rsp],xmm0
	movaps	xmm8,XMMWORD[32+rsp]
	movaps	XMMWORD[32+rsp],xmm0
	movaps	xmm9,XMMWORD[48+rsp]
	movaps	XMMWORD[48+rsp],xmm0
	lea	rsp,[88+rsp]
$L$ecb_enc_ret:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_ecb_encrypt:
global	aesni_ccm64_encrypt_blocks

ALIGN	16
aesni_ccm64_encrypt_blocks:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_ccm64_encrypt_blocks:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



DB	243,15,30,250
	lea	rsp,[((-88))+rsp]
	movaps	XMMWORD[rsp],xmm6
	movaps	XMMWORD[16+rsp],xmm7
	movaps	XMMWORD[32+rsp],xmm8
	movaps	XMMWORD[48+rsp],xmm9
$L$ccm64_enc_body:
	mov	eax,DWORD[240+rcx]
	movdqu	xmm6,XMMWORD[r8]
	movdqa	xmm9,XMMWORD[$L$increment64]
	movdqa	xmm7,XMMWORD[$L$bswap_mask]

	shl	eax,4
	mov	r10d,16
	lea	r11,[rcx]
	movdqu	xmm3,XMMWORD[r9]
	movdqa	xmm2,xmm6
	lea	rcx,[32+rax*1+rcx]
DB	102,15,56,0,247
	sub	r10,rax
	jmp	NEAR $L$ccm64_enc_outer
ALIGN	16
$L$ccm64_enc_outer:
	movups	xmm0,XMMWORD[r11]
	mov	rax,r10
	movups	xmm8,XMMWORD[rdi]

	xorps	xmm2,xmm0
	movups	xmm1,XMMWORD[16+r11]
	xorps	xmm0,xmm8
	xorps	xmm3,xmm0
	movups	xmm0,XMMWORD[32+r11]

$L$ccm64_enc2_loop:
DB	102,15,56,220,209
DB	102,15,56,220,217
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32
DB	102,15,56,220,208
DB	102,15,56,220,216
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$ccm64_enc2_loop
DB	102,15,56,220,209
DB	102,15,56,220,217
	paddq	xmm6,xmm9
	dec	rdx
DB	102,15,56,221,208
DB	102,15,56,221,216

	lea	rdi,[16+rdi]
	xorps	xmm8,xmm2
	movdqa	xmm2,xmm6
	movups	XMMWORD[rsi],xmm8
DB	102,15,56,0,215
	lea	rsi,[16+rsi]
	jnz	NEAR $L$ccm64_enc_outer

	pxor	xmm0,xmm0
	pxor	xmm1,xmm1
	pxor	xmm2,xmm2
	movups	XMMWORD[r9],xmm3
	pxor	xmm3,xmm3
	pxor	xmm8,xmm8
	pxor	xmm6,xmm6
	movaps	xmm6,XMMWORD[rsp]
	movaps	XMMWORD[rsp],xmm0
	movaps	xmm7,XMMWORD[16+rsp]
	movaps	XMMWORD[16+rsp],xmm0
	movaps	xmm8,XMMWORD[32+rsp]
	movaps	XMMWORD[32+rsp],xmm0
	movaps	xmm9,XMMWORD[48+rsp]
	movaps	XMMWORD[48+rsp],xmm0
	lea	rsp,[88+rsp]
$L$ccm64_enc_ret:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_ccm64_encrypt_blocks:
global	aesni_ccm64_decrypt_blocks

ALIGN	16
aesni_ccm64_decrypt_blocks:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_ccm64_decrypt_blocks:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



DB	243,15,30,250
	lea	rsp,[((-88))+rsp]
	movaps	XMMWORD[rsp],xmm6
	movaps	XMMWORD[16+rsp],xmm7
	movaps	XMMWORD[32+rsp],xmm8
	movaps	XMMWORD[48+rsp],xmm9
$L$ccm64_dec_body:
	mov	eax,DWORD[240+rcx]
	movups	xmm6,XMMWORD[r8]
	movdqu	xmm3,XMMWORD[r9]
	movdqa	xmm9,XMMWORD[$L$increment64]
	movdqa	xmm7,XMMWORD[$L$bswap_mask]

	movaps	xmm2,xmm6
	mov	r10d,eax
	mov	r11,rcx
DB	102,15,56,0,247
	movups	xmm0,XMMWORD[rcx]
	movups	xmm1,XMMWORD[16+rcx]
	lea	rcx,[32+rcx]
	xorps	xmm2,xmm0
$L$oop_enc1_5:
DB	102,15,56,220,209
	dec	eax
	movups	xmm1,XMMWORD[rcx]
	lea	rcx,[16+rcx]
	jnz	NEAR $L$oop_enc1_5
DB	102,15,56,221,209
	shl	r10d,4
	mov	eax,16
	movups	xmm8,XMMWORD[rdi]
	paddq	xmm6,xmm9
	lea	rdi,[16+rdi]
	sub	rax,r10
	lea	rcx,[32+r10*1+r11]
	mov	r10,rax
	jmp	NEAR $L$ccm64_dec_outer
ALIGN	16
$L$ccm64_dec_outer:
	xorps	xmm8,xmm2
	movdqa	xmm2,xmm6
	movups	XMMWORD[rsi],xmm8
	lea	rsi,[16+rsi]
DB	102,15,56,0,215

	sub	rdx,1
	jz	NEAR $L$ccm64_dec_break

	movups	xmm0,XMMWORD[r11]
	mov	rax,r10
	movups	xmm1,XMMWORD[16+r11]
	xorps	xmm8,xmm0
	xorps	xmm2,xmm0
	xorps	xmm3,xmm8
	movups	xmm0,XMMWORD[32+r11]
	jmp	NEAR $L$ccm64_dec2_loop
ALIGN	16
$L$ccm64_dec2_loop:
DB	102,15,56,220,209
DB	102,15,56,220,217
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32
DB	102,15,56,220,208
DB	102,15,56,220,216
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$ccm64_dec2_loop
	movups	xmm8,XMMWORD[rdi]
	paddq	xmm6,xmm9
DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,221,208
DB	102,15,56,221,216
	lea	rdi,[16+rdi]
	jmp	NEAR $L$ccm64_dec_outer

ALIGN	16
$L$ccm64_dec_break:

	mov	eax,DWORD[240+r11]
	movups	xmm0,XMMWORD[r11]
	movups	xmm1,XMMWORD[16+r11]
	xorps	xmm8,xmm0
	lea	r11,[32+r11]
	xorps	xmm3,xmm8
$L$oop_enc1_6:
DB	102,15,56,220,217
	dec	eax
	movups	xmm1,XMMWORD[r11]
	lea	r11,[16+r11]
	jnz	NEAR $L$oop_enc1_6
DB	102,15,56,221,217
	pxor	xmm0,xmm0
	pxor	xmm1,xmm1
	pxor	xmm2,xmm2
	movups	XMMWORD[r9],xmm3
	pxor	xmm3,xmm3
	pxor	xmm8,xmm8
	pxor	xmm6,xmm6
	movaps	xmm6,XMMWORD[rsp]
	movaps	XMMWORD[rsp],xmm0
	movaps	xmm7,XMMWORD[16+rsp]
	movaps	XMMWORD[16+rsp],xmm0
	movaps	xmm8,XMMWORD[32+rsp]
	movaps	XMMWORD[32+rsp],xmm0
	movaps	xmm9,XMMWORD[48+rsp]
	movaps	XMMWORD[48+rsp],xmm0
	lea	rsp,[88+rsp]
$L$ccm64_dec_ret:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_ccm64_decrypt_blocks:
global	aesni_ctr32_encrypt_blocks

ALIGN	16
aesni_ctr32_encrypt_blocks:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_ctr32_encrypt_blocks:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]



DB	243,15,30,250
	cmp	rdx,1
	jne	NEAR $L$ctr32_bulk



	movups	xmm2,XMMWORD[r8]
	movups	xmm3,XMMWORD[rdi]
	mov	edx,DWORD[240+rcx]
	movups	xmm0,XMMWORD[rcx]
	movups	xmm1,XMMWORD[16+rcx]
	lea	rcx,[32+rcx]
	xorps	xmm2,xmm0
$L$oop_enc1_7:
DB	102,15,56,220,209
	dec	edx
	movups	xmm1,XMMWORD[rcx]
	lea	rcx,[16+rcx]
	jnz	NEAR $L$oop_enc1_7
DB	102,15,56,221,209
	pxor	xmm0,xmm0
	pxor	xmm1,xmm1
	xorps	xmm2,xmm3
	pxor	xmm3,xmm3
	movups	XMMWORD[rsi],xmm2
	xorps	xmm2,xmm2
	jmp	NEAR $L$ctr32_epilogue

ALIGN	16
$L$ctr32_bulk:
	lea	r11,[rsp]

	push	rbp

	sub	rsp,288
	and	rsp,-16
	movaps	XMMWORD[(-168)+r11],xmm6
	movaps	XMMWORD[(-152)+r11],xmm7
	movaps	XMMWORD[(-136)+r11],xmm8
	movaps	XMMWORD[(-120)+r11],xmm9
	movaps	XMMWORD[(-104)+r11],xmm10
	movaps	XMMWORD[(-88)+r11],xmm11
	movaps	XMMWORD[(-72)+r11],xmm12
	movaps	XMMWORD[(-56)+r11],xmm13
	movaps	XMMWORD[(-40)+r11],xmm14
	movaps	XMMWORD[(-24)+r11],xmm15
$L$ctr32_body:




	movdqu	xmm2,XMMWORD[r8]
	movdqu	xmm0,XMMWORD[rcx]
	mov	r8d,DWORD[12+r8]
	pxor	xmm2,xmm0
	mov	ebp,DWORD[12+rcx]
	movdqa	XMMWORD[rsp],xmm2
	bswap	r8d
	movdqa	xmm3,xmm2
	movdqa	xmm4,xmm2
	movdqa	xmm5,xmm2
	movdqa	XMMWORD[64+rsp],xmm2
	movdqa	XMMWORD[80+rsp],xmm2
	movdqa	XMMWORD[96+rsp],xmm2
	mov	r10,rdx
	movdqa	XMMWORD[112+rsp],xmm2

	lea	rax,[1+r8]
	lea	rdx,[2+r8]
	bswap	eax
	bswap	edx
	xor	eax,ebp
	xor	edx,ebp
DB	102,15,58,34,216,3
	lea	rax,[3+r8]
	movdqa	XMMWORD[16+rsp],xmm3
DB	102,15,58,34,226,3
	bswap	eax
	mov	rdx,r10
	lea	r10,[4+r8]
	movdqa	XMMWORD[32+rsp],xmm4
	xor	eax,ebp
	bswap	r10d
DB	102,15,58,34,232,3
	xor	r10d,ebp
	movdqa	XMMWORD[48+rsp],xmm5
	lea	r9,[5+r8]
	mov	DWORD[((64+12))+rsp],r10d
	bswap	r9d
	lea	r10,[6+r8]
	mov	eax,DWORD[240+rcx]
	xor	r9d,ebp
	bswap	r10d
	mov	DWORD[((80+12))+rsp],r9d
	xor	r10d,ebp
	lea	r9,[7+r8]
	mov	DWORD[((96+12))+rsp],r10d
	bswap	r9d
	mov	r10d,DWORD[((OPENSSL_ia32cap_P+4))]
	xor	r9d,ebp
	and	r10d,71303168
	mov	DWORD[((112+12))+rsp],r9d

	movups	xmm1,XMMWORD[16+rcx]

	movdqa	xmm6,XMMWORD[64+rsp]
	movdqa	xmm7,XMMWORD[80+rsp]

	cmp	rdx,8
	jb	NEAR $L$ctr32_tail

	sub	rdx,6
	cmp	r10d,4194304
	je	NEAR $L$ctr32_6x

	lea	rcx,[128+rcx]
	sub	rdx,2
	jmp	NEAR $L$ctr32_loop8

ALIGN	16
$L$ctr32_6x:
	shl	eax,4
	mov	r10d,48
	bswap	ebp
	lea	rcx,[32+rax*1+rcx]
	sub	r10,rax
	jmp	NEAR $L$ctr32_loop6

ALIGN	16
$L$ctr32_loop6:
	add	r8d,6
	movups	xmm0,XMMWORD[((-48))+r10*1+rcx]
DB	102,15,56,220,209
	mov	eax,r8d
	xor	eax,ebp
DB	102,15,56,220,217
DB	0x0f,0x38,0xf1,0x44,0x24,12
	lea	eax,[1+r8]
DB	102,15,56,220,225
	xor	eax,ebp
DB	0x0f,0x38,0xf1,0x44,0x24,28
DB	102,15,56,220,233
	lea	eax,[2+r8]
	xor	eax,ebp
DB	102,15,56,220,241
DB	0x0f,0x38,0xf1,0x44,0x24,44
	lea	eax,[3+r8]
DB	102,15,56,220,249
	movups	xmm1,XMMWORD[((-32))+r10*1+rcx]
	xor	eax,ebp

DB	102,15,56,220,208
DB	0x0f,0x38,0xf1,0x44,0x24,60
	lea	eax,[4+r8]
DB	102,15,56,220,216
	xor	eax,ebp
DB	0x0f,0x38,0xf1,0x44,0x24,76
DB	102,15,56,220,224
	lea	eax,[5+r8]
	xor	eax,ebp
DB	102,15,56,220,232
DB	0x0f,0x38,0xf1,0x44,0x24,92
	mov	rax,r10
DB	102,15,56,220,240
DB	102,15,56,220,248
	movups	xmm0,XMMWORD[((-16))+r10*1+rcx]

	call	$L$enc_loop6

	movdqu	xmm8,XMMWORD[rdi]
	movdqu	xmm9,XMMWORD[16+rdi]
	movdqu	xmm10,XMMWORD[32+rdi]
	movdqu	xmm11,XMMWORD[48+rdi]
	movdqu	xmm12,XMMWORD[64+rdi]
	movdqu	xmm13,XMMWORD[80+rdi]
	lea	rdi,[96+rdi]
	movups	xmm1,XMMWORD[((-64))+r10*1+rcx]
	pxor	xmm8,xmm2
	movaps	xmm2,XMMWORD[rsp]
	pxor	xmm9,xmm3
	movaps	xmm3,XMMWORD[16+rsp]
	pxor	xmm10,xmm4
	movaps	xmm4,XMMWORD[32+rsp]
	pxor	xmm11,xmm5
	movaps	xmm5,XMMWORD[48+rsp]
	pxor	xmm12,xmm6
	movaps	xmm6,XMMWORD[64+rsp]
	pxor	xmm13,xmm7
	movaps	xmm7,XMMWORD[80+rsp]
	movdqu	XMMWORD[rsi],xmm8
	movdqu	XMMWORD[16+rsi],xmm9
	movdqu	XMMWORD[32+rsi],xmm10
	movdqu	XMMWORD[48+rsi],xmm11
	movdqu	XMMWORD[64+rsi],xmm12
	movdqu	XMMWORD[80+rsi],xmm13
	lea	rsi,[96+rsi]

	sub	rdx,6
	jnc	NEAR $L$ctr32_loop6

	add	rdx,6
	jz	NEAR $L$ctr32_done

	lea	eax,[((-48))+r10]
	lea	rcx,[((-80))+r10*1+rcx]
	neg	eax
	shr	eax,4
	jmp	NEAR $L$ctr32_tail

ALIGN	32
$L$ctr32_loop8:
	add	r8d,8
	movdqa	xmm8,XMMWORD[96+rsp]
DB	102,15,56,220,209
	mov	r9d,r8d
	movdqa	xmm9,XMMWORD[112+rsp]
DB	102,15,56,220,217
	bswap	r9d
	movups	xmm0,XMMWORD[((32-128))+rcx]
DB	102,15,56,220,225
	xor	r9d,ebp
	nop
DB	102,15,56,220,233
	mov	DWORD[((0+12))+rsp],r9d
	lea	r9,[1+r8]
DB	102,15,56,220,241
DB	102,15,56,220,249
DB	102,68,15,56,220,193
DB	102,68,15,56,220,201
	movups	xmm1,XMMWORD[((48-128))+rcx]
	bswap	r9d
DB	102,15,56,220,208
DB	102,15,56,220,216
	xor	r9d,ebp
DB	0x66,0x90
DB	102,15,56,220,224
DB	102,15,56,220,232
	mov	DWORD[((16+12))+rsp],r9d
	lea	r9,[2+r8]
DB	102,15,56,220,240
DB	102,15,56,220,248
DB	102,68,15,56,220,192
DB	102,68,15,56,220,200
	movups	xmm0,XMMWORD[((64-128))+rcx]
	bswap	r9d
DB	102,15,56,220,209
DB	102,15,56,220,217
	xor	r9d,ebp
DB	0x66,0x90
DB	102,15,56,220,225
DB	102,15,56,220,233
	mov	DWORD[((32+12))+rsp],r9d
	lea	r9,[3+r8]
DB	102,15,56,220,241
DB	102,15,56,220,249
DB	102,68,15,56,220,193
DB	102,68,15,56,220,201
	movups	xmm1,XMMWORD[((80-128))+rcx]
	bswap	r9d
DB	102,15,56,220,208
DB	102,15,56,220,216
	xor	r9d,ebp
DB	0x66,0x90
DB	102,15,56,220,224
DB	102,15,56,220,232
	mov	DWORD[((48+12))+rsp],r9d
	lea	r9,[4+r8]
DB	102,15,56,220,240
DB	102,15,56,220,248
DB	102,68,15,56,220,192
DB	102,68,15,56,220,200
	movups	xmm0,XMMWORD[((96-128))+rcx]
	bswap	r9d
DB	102,15,56,220,209
DB	102,15,56,220,217
	xor	r9d,ebp
DB	0x66,0x90
DB	102,15,56,220,225
DB	102,15,56,220,233
	mov	DWORD[((64+12))+rsp],r9d
	lea	r9,[5+r8]
DB	102,15,56,220,241
DB	102,15,56,220,249
DB	102,68,15,56,220,193
DB	102,68,15,56,220,201
	movups	xmm1,XMMWORD[((112-128))+rcx]
	bswap	r9d
DB	102,15,56,220,208
DB	102,15,56,220,216
	xor	r9d,ebp
DB	0x66,0x90
DB	102,15,56,220,224
DB	102,15,56,220,232
	mov	DWORD[((80+12))+rsp],r9d
	lea	r9,[6+r8]
DB	102,15,56,220,240
DB	102,15,56,220,248
DB	102,68,15,56,220,192
DB	102,68,15,56,220,200
	movups	xmm0,XMMWORD[((128-128))+rcx]
	bswap	r9d
DB	102,15,56,220,209
DB	102,15,56,220,217
	xor	r9d,ebp
DB	0x66,0x90
DB	102,15,56,220,225
DB	102,15,56,220,233
	mov	DWORD[((96+12))+rsp],r9d
	lea	r9,[7+r8]
DB	102,15,56,220,241
DB	102,15,56,220,249
DB	102,68,15,56,220,193
DB	102,68,15,56,220,201
	movups	xmm1,XMMWORD[((144-128))+rcx]
	bswap	r9d
DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
	xor	r9d,ebp
	movdqu	xmm10,XMMWORD[rdi]
DB	102,15,56,220,232
	mov	DWORD[((112+12))+rsp],r9d
	cmp	eax,11
DB	102,15,56,220,240
DB	102,15,56,220,248
DB	102,68,15,56,220,192
DB	102,68,15,56,220,200
	movups	xmm0,XMMWORD[((160-128))+rcx]

	jb	NEAR $L$ctr32_enc_done

DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
DB	102,15,56,220,241
DB	102,15,56,220,249
DB	102,68,15,56,220,193
DB	102,68,15,56,220,201
	movups	xmm1,XMMWORD[((176-128))+rcx]

DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
DB	102,15,56,220,232
DB	102,15,56,220,240
DB	102,15,56,220,248
DB	102,68,15,56,220,192
DB	102,68,15,56,220,200
	movups	xmm0,XMMWORD[((192-128))+rcx]
	je	NEAR $L$ctr32_enc_done

DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
DB	102,15,56,220,241
DB	102,15,56,220,249
DB	102,68,15,56,220,193
DB	102,68,15,56,220,201
	movups	xmm1,XMMWORD[((208-128))+rcx]

DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
DB	102,15,56,220,232
DB	102,15,56,220,240
DB	102,15,56,220,248
DB	102,68,15,56,220,192
DB	102,68,15,56,220,200
	movups	xmm0,XMMWORD[((224-128))+rcx]
	jmp	NEAR $L$ctr32_enc_done

ALIGN	16
$L$ctr32_enc_done:
	movdqu	xmm11,XMMWORD[16+rdi]
	pxor	xmm10,xmm0
	movdqu	xmm12,XMMWORD[32+rdi]
	pxor	xmm11,xmm0
	movdqu	xmm13,XMMWORD[48+rdi]
	pxor	xmm12,xmm0
	movdqu	xmm14,XMMWORD[64+rdi]
	pxor	xmm13,xmm0
	movdqu	xmm15,XMMWORD[80+rdi]
	pxor	xmm14,xmm0
	pxor	xmm15,xmm0
DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
DB	102,15,56,220,241
DB	102,15,56,220,249
DB	102,68,15,56,220,193
DB	102,68,15,56,220,201
	movdqu	xmm1,XMMWORD[96+rdi]
	lea	rdi,[128+rdi]

DB	102,65,15,56,221,210
	pxor	xmm1,xmm0
	movdqu	xmm10,XMMWORD[((112-128))+rdi]
DB	102,65,15,56,221,219
	pxor	xmm10,xmm0
	movdqa	xmm11,XMMWORD[rsp]
DB	102,65,15,56,221,228
DB	102,65,15,56,221,237
	movdqa	xmm12,XMMWORD[16+rsp]
	movdqa	xmm13,XMMWORD[32+rsp]
DB	102,65,15,56,221,246
DB	102,65,15,56,221,255
	movdqa	xmm14,XMMWORD[48+rsp]
	movdqa	xmm15,XMMWORD[64+rsp]
DB	102,68,15,56,221,193
	movdqa	xmm0,XMMWORD[80+rsp]
	movups	xmm1,XMMWORD[((16-128))+rcx]
DB	102,69,15,56,221,202

	movups	XMMWORD[rsi],xmm2
	movdqa	xmm2,xmm11
	movups	XMMWORD[16+rsi],xmm3
	movdqa	xmm3,xmm12
	movups	XMMWORD[32+rsi],xmm4
	movdqa	xmm4,xmm13
	movups	XMMWORD[48+rsi],xmm5
	movdqa	xmm5,xmm14
	movups	XMMWORD[64+rsi],xmm6
	movdqa	xmm6,xmm15
	movups	XMMWORD[80+rsi],xmm7
	movdqa	xmm7,xmm0
	movups	XMMWORD[96+rsi],xmm8
	movups	XMMWORD[112+rsi],xmm9
	lea	rsi,[128+rsi]

	sub	rdx,8
	jnc	NEAR $L$ctr32_loop8

	add	rdx,8
	jz	NEAR $L$ctr32_done
	lea	rcx,[((-128))+rcx]

$L$ctr32_tail:


	lea	rcx,[16+rcx]
	cmp	rdx,4
	jb	NEAR $L$ctr32_loop3
	je	NEAR $L$ctr32_loop4


	shl	eax,4
	movdqa	xmm8,XMMWORD[96+rsp]
	pxor	xmm9,xmm9

	movups	xmm0,XMMWORD[16+rcx]
DB	102,15,56,220,209
DB	102,15,56,220,217
	lea	rcx,[((32-16))+rax*1+rcx]
	neg	rax
DB	102,15,56,220,225
	add	rax,16
	movups	xmm10,XMMWORD[rdi]
DB	102,15,56,220,233
DB	102,15,56,220,241
	movups	xmm11,XMMWORD[16+rdi]
	movups	xmm12,XMMWORD[32+rdi]
DB	102,15,56,220,249
DB	102,68,15,56,220,193

	call	$L$enc_loop8_enter

	movdqu	xmm13,XMMWORD[48+rdi]
	pxor	xmm2,xmm10
	movdqu	xmm10,XMMWORD[64+rdi]
	pxor	xmm3,xmm11
	movdqu	XMMWORD[rsi],xmm2
	pxor	xmm4,xmm12
	movdqu	XMMWORD[16+rsi],xmm3
	pxor	xmm5,xmm13
	movdqu	XMMWORD[32+rsi],xmm4
	pxor	xmm6,xmm10
	movdqu	XMMWORD[48+rsi],xmm5
	movdqu	XMMWORD[64+rsi],xmm6
	cmp	rdx,6
	jb	NEAR $L$ctr32_done

	movups	xmm11,XMMWORD[80+rdi]
	xorps	xmm7,xmm11
	movups	XMMWORD[80+rsi],xmm7
	je	NEAR $L$ctr32_done

	movups	xmm12,XMMWORD[96+rdi]
	xorps	xmm8,xmm12
	movups	XMMWORD[96+rsi],xmm8
	jmp	NEAR $L$ctr32_done

ALIGN	32
$L$ctr32_loop4:
DB	102,15,56,220,209
	lea	rcx,[16+rcx]
	dec	eax
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
	movups	xmm1,XMMWORD[rcx]
	jnz	NEAR $L$ctr32_loop4
DB	102,15,56,221,209
DB	102,15,56,221,217
	movups	xmm10,XMMWORD[rdi]
	movups	xmm11,XMMWORD[16+rdi]
DB	102,15,56,221,225
DB	102,15,56,221,233
	movups	xmm12,XMMWORD[32+rdi]
	movups	xmm13,XMMWORD[48+rdi]

	xorps	xmm2,xmm10
	movups	XMMWORD[rsi],xmm2
	xorps	xmm3,xmm11
	movups	XMMWORD[16+rsi],xmm3
	pxor	xmm4,xmm12
	movdqu	XMMWORD[32+rsi],xmm4
	pxor	xmm5,xmm13
	movdqu	XMMWORD[48+rsi],xmm5
	jmp	NEAR $L$ctr32_done

ALIGN	32
$L$ctr32_loop3:
DB	102,15,56,220,209
	lea	rcx,[16+rcx]
	dec	eax
DB	102,15,56,220,217
DB	102,15,56,220,225
	movups	xmm1,XMMWORD[rcx]
	jnz	NEAR $L$ctr32_loop3
DB	102,15,56,221,209
DB	102,15,56,221,217
DB	102,15,56,221,225

	movups	xmm10,XMMWORD[rdi]
	xorps	xmm2,xmm10
	movups	XMMWORD[rsi],xmm2
	cmp	rdx,2
	jb	NEAR $L$ctr32_done

	movups	xmm11,XMMWORD[16+rdi]
	xorps	xmm3,xmm11
	movups	XMMWORD[16+rsi],xmm3
	je	NEAR $L$ctr32_done

	movups	xmm12,XMMWORD[32+rdi]
	xorps	xmm4,xmm12
	movups	XMMWORD[32+rsi],xmm4

$L$ctr32_done:
	xorps	xmm0,xmm0
	xor	ebp,ebp
	pxor	xmm1,xmm1
	pxor	xmm2,xmm2
	pxor	xmm3,xmm3
	pxor	xmm4,xmm4
	pxor	xmm5,xmm5
	movaps	xmm6,XMMWORD[((-168))+r11]
	movaps	XMMWORD[(-168)+r11],xmm0
	movaps	xmm7,XMMWORD[((-152))+r11]
	movaps	XMMWORD[(-152)+r11],xmm0
	movaps	xmm8,XMMWORD[((-136))+r11]
	movaps	XMMWORD[(-136)+r11],xmm0
	movaps	xmm9,XMMWORD[((-120))+r11]
	movaps	XMMWORD[(-120)+r11],xmm0
	movaps	xmm10,XMMWORD[((-104))+r11]
	movaps	XMMWORD[(-104)+r11],xmm0
	movaps	xmm11,XMMWORD[((-88))+r11]
	movaps	XMMWORD[(-88)+r11],xmm0
	movaps	xmm12,XMMWORD[((-72))+r11]
	movaps	XMMWORD[(-72)+r11],xmm0
	movaps	xmm13,XMMWORD[((-56))+r11]
	movaps	XMMWORD[(-56)+r11],xmm0
	movaps	xmm14,XMMWORD[((-40))+r11]
	movaps	XMMWORD[(-40)+r11],xmm0
	movaps	xmm15,XMMWORD[((-24))+r11]
	movaps	XMMWORD[(-24)+r11],xmm0
	movaps	XMMWORD[rsp],xmm0
	movaps	XMMWORD[16+rsp],xmm0
	movaps	XMMWORD[32+rsp],xmm0
	movaps	XMMWORD[48+rsp],xmm0
	movaps	XMMWORD[64+rsp],xmm0
	movaps	XMMWORD[80+rsp],xmm0
	movaps	XMMWORD[96+rsp],xmm0
	movaps	XMMWORD[112+rsp],xmm0
	mov	rbp,QWORD[((-8))+r11]

	lea	rsp,[r11]

$L$ctr32_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_ctr32_encrypt_blocks:
global	aesni_xts_encrypt

ALIGN	16
aesni_xts_encrypt:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_xts_encrypt:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



DB	243,15,30,250
	lea	r11,[rsp]

	push	rbp

	sub	rsp,272
	and	rsp,-16
	movaps	XMMWORD[(-168)+r11],xmm6
	movaps	XMMWORD[(-152)+r11],xmm7
	movaps	XMMWORD[(-136)+r11],xmm8
	movaps	XMMWORD[(-120)+r11],xmm9
	movaps	XMMWORD[(-104)+r11],xmm10
	movaps	XMMWORD[(-88)+r11],xmm11
	movaps	XMMWORD[(-72)+r11],xmm12
	movaps	XMMWORD[(-56)+r11],xmm13
	movaps	XMMWORD[(-40)+r11],xmm14
	movaps	XMMWORD[(-24)+r11],xmm15
$L$xts_enc_body:
	movups	xmm2,XMMWORD[r9]
	mov	eax,DWORD[240+r8]
	mov	r10d,DWORD[240+rcx]
	movups	xmm0,XMMWORD[r8]
	movups	xmm1,XMMWORD[16+r8]
	lea	r8,[32+r8]
	xorps	xmm2,xmm0
$L$oop_enc1_8:
DB	102,15,56,220,209
	dec	eax
	movups	xmm1,XMMWORD[r8]
	lea	r8,[16+r8]
	jnz	NEAR $L$oop_enc1_8
DB	102,15,56,221,209
	movups	xmm0,XMMWORD[rcx]
	mov	rbp,rcx
	mov	eax,r10d
	shl	r10d,4
	mov	r9,rdx
	and	rdx,-16

	movups	xmm1,XMMWORD[16+r10*1+rcx]

	movdqa	xmm8,XMMWORD[$L$xts_magic]
	movdqa	xmm15,xmm2
	pshufd	xmm9,xmm2,0x5f
	pxor	xmm1,xmm0
	movdqa	xmm14,xmm9
	paddd	xmm9,xmm9
	movdqa	xmm10,xmm15
	psrad	xmm14,31
	paddq	xmm15,xmm15
	pand	xmm14,xmm8
	pxor	xmm10,xmm0
	pxor	xmm15,xmm14
	movdqa	xmm14,xmm9
	paddd	xmm9,xmm9
	movdqa	xmm11,xmm15
	psrad	xmm14,31
	paddq	xmm15,xmm15
	pand	xmm14,xmm8
	pxor	xmm11,xmm0
	pxor	xmm15,xmm14
	movdqa	xmm14,xmm9
	paddd	xmm9,xmm9
	movdqa	xmm12,xmm15
	psrad	xmm14,31
	paddq	xmm15,xmm15
	pand	xmm14,xmm8
	pxor	xmm12,xmm0
	pxor	xmm15,xmm14
	movdqa	xmm14,xmm9
	paddd	xmm9,xmm9
	movdqa	xmm13,xmm15
	psrad	xmm14,31
	paddq	xmm15,xmm15
	pand	xmm14,xmm8
	pxor	xmm13,xmm0
	pxor	xmm15,xmm14
	movdqa	xmm14,xmm15
	psrad	xmm9,31
	paddq	xmm15,xmm15
	pand	xmm9,xmm8
	pxor	xmm14,xmm0
	pxor	xmm15,xmm9
	movaps	XMMWORD[96+rsp],xmm1

	sub	rdx,16*6
	jc	NEAR $L$xts_enc_short

	mov	eax,16+96
	lea	rcx,[32+r10*1+rbp]
	sub	rax,r10
	movups	xmm1,XMMWORD[16+rbp]
	mov	r10,rax
	lea	r8,[$L$xts_magic]
	jmp	NEAR $L$xts_enc_grandloop

ALIGN	32
$L$xts_enc_grandloop:
	movdqu	xmm2,XMMWORD[rdi]
	movdqa	xmm8,xmm0
	movdqu	xmm3,XMMWORD[16+rdi]
	pxor	xmm2,xmm10
	movdqu	xmm4,XMMWORD[32+rdi]
	pxor	xmm3,xmm11
DB	102,15,56,220,209
	movdqu	xmm5,XMMWORD[48+rdi]
	pxor	xmm4,xmm12
DB	102,15,56,220,217
	movdqu	xmm6,XMMWORD[64+rdi]
	pxor	xmm5,xmm13
DB	102,15,56,220,225
	movdqu	xmm7,XMMWORD[80+rdi]
	pxor	xmm8,xmm15
	movdqa	xmm9,XMMWORD[96+rsp]
	pxor	xmm6,xmm14
DB	102,15,56,220,233
	movups	xmm0,XMMWORD[32+rbp]
	lea	rdi,[96+rdi]
	pxor	xmm7,xmm8

	pxor	xmm10,xmm9
DB	102,15,56,220,241
	pxor	xmm11,xmm9
	movdqa	XMMWORD[rsp],xmm10
DB	102,15,56,220,249
	movups	xmm1,XMMWORD[48+rbp]
	pxor	xmm12,xmm9

DB	102,15,56,220,208
	pxor	xmm13,xmm9
	movdqa	XMMWORD[16+rsp],xmm11
DB	102,15,56,220,216
	pxor	xmm14,xmm9
	movdqa	XMMWORD[32+rsp],xmm12
DB	102,15,56,220,224
DB	102,15,56,220,232
	pxor	xmm8,xmm9
	movdqa	XMMWORD[64+rsp],xmm14
DB	102,15,56,220,240
DB	102,15,56,220,248
	movups	xmm0,XMMWORD[64+rbp]
	movdqa	XMMWORD[80+rsp],xmm8
	pshufd	xmm9,xmm15,0x5f
	jmp	NEAR $L$xts_enc_loop6
ALIGN	32
$L$xts_enc_loop6:
DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
DB	102,15,56,220,241
DB	102,15,56,220,249
	movups	xmm1,XMMWORD[((-64))+rax*1+rcx]
	add	rax,32

DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
DB	102,15,56,220,232
DB	102,15,56,220,240
DB	102,15,56,220,248
	movups	xmm0,XMMWORD[((-80))+rax*1+rcx]
	jnz	NEAR $L$xts_enc_loop6

	movdqa	xmm8,XMMWORD[r8]
	movdqa	xmm14,xmm9
	paddd	xmm9,xmm9
DB	102,15,56,220,209
	paddq	xmm15,xmm15
	psrad	xmm14,31
DB	102,15,56,220,217
	pand	xmm14,xmm8
	movups	xmm10,XMMWORD[rbp]
DB	102,15,56,220,225
DB	102,15,56,220,233
DB	102,15,56,220,241
	pxor	xmm15,xmm14
	movaps	xmm11,xmm10
DB	102,15,56,220,249
	movups	xmm1,XMMWORD[((-64))+rcx]

	movdqa	xmm14,xmm9
DB	102,15,56,220,208
	paddd	xmm9,xmm9
	pxor	xmm10,xmm15
DB	102,15,56,220,216
	psrad	xmm14,31
	paddq	xmm15,xmm15
DB	102,15,56,220,224
DB	102,15,56,220,232
	pand	xmm14,xmm8
	movaps	xmm12,xmm11
DB	102,15,56,220,240
	pxor	xmm15,xmm14
	movdqa	xmm14,xmm9
DB	102,15,56,220,248
	movups	xmm0,XMMWORD[((-48))+rcx]

	paddd	xmm9,xmm9
DB	102,15,56,220,209
	pxor	xmm11,xmm15
	psrad	xmm14,31
DB	102,15,56,220,217
	paddq	xmm15,xmm15
	pand	xmm14,xmm8
DB	102,15,56,220,225
DB	102,15,56,220,233
	movdqa	XMMWORD[48+rsp],xmm13
	pxor	xmm15,xmm14
DB	102,15,56,220,241
	movaps	xmm13,xmm12
	movdqa	xmm14,xmm9
DB	102,15,56,220,249
	movups	xmm1,XMMWORD[((-32))+rcx]

	paddd	xmm9,xmm9
DB	102,15,56,220,208
	pxor	xmm12,xmm15
	psrad	xmm14,31
DB	102,15,56,220,216
	paddq	xmm15,xmm15
	pand	xmm14,xmm8
DB	102,15,56,220,224
DB	102,15,56,220,232
DB	102,15,56,220,240
	pxor	xmm15,xmm14
	movaps	xmm14,xmm13
DB	102,15,56,220,248

	movdqa	xmm0,xmm9
	paddd	xmm9,xmm9
DB	102,15,56,220,209
	pxor	xmm13,xmm15
	psrad	xmm0,31
DB	102,15,56,220,217
	paddq	xmm15,xmm15
	pand	xmm0,xmm8
DB	102,15,56,220,225
DB	102,15,56,220,233
	pxor	xmm15,xmm0
	movups	xmm0,XMMWORD[rbp]
DB	102,15,56,220,241
DB	102,15,56,220,249
	movups	xmm1,XMMWORD[16+rbp]

	pxor	xmm14,xmm15
DB	102,15,56,221,84,36,0
	psrad	xmm9,31
	paddq	xmm15,xmm15
DB	102,15,56,221,92,36,16
DB	102,15,56,221,100,36,32
	pand	xmm9,xmm8
	mov	rax,r10
DB	102,15,56,221,108,36,48
DB	102,15,56,221,116,36,64
DB	102,15,56,221,124,36,80
	pxor	xmm15,xmm9

	lea	rsi,[96+rsi]
	movups	XMMWORD[(-96)+rsi],xmm2
	movups	XMMWORD[(-80)+rsi],xmm3
	movups	XMMWORD[(-64)+rsi],xmm4
	movups	XMMWORD[(-48)+rsi],xmm5
	movups	XMMWORD[(-32)+rsi],xmm6
	movups	XMMWORD[(-16)+rsi],xmm7
	sub	rdx,16*6
	jnc	NEAR $L$xts_enc_grandloop

	mov	eax,16+96
	sub	eax,r10d
	mov	rcx,rbp
	shr	eax,4

$L$xts_enc_short:

	mov	r10d,eax
	pxor	xmm10,xmm0
	add	rdx,16*6
	jz	NEAR $L$xts_enc_done

	pxor	xmm11,xmm0
	cmp	rdx,0x20
	jb	NEAR $L$xts_enc_one
	pxor	xmm12,xmm0
	je	NEAR $L$xts_enc_two

	pxor	xmm13,xmm0
	cmp	rdx,0x40
	jb	NEAR $L$xts_enc_three
	pxor	xmm14,xmm0
	je	NEAR $L$xts_enc_four

	movdqu	xmm2,XMMWORD[rdi]
	movdqu	xmm3,XMMWORD[16+rdi]
	movdqu	xmm4,XMMWORD[32+rdi]
	pxor	xmm2,xmm10
	movdqu	xmm5,XMMWORD[48+rdi]
	pxor	xmm3,xmm11
	movdqu	xmm6,XMMWORD[64+rdi]
	lea	rdi,[80+rdi]
	pxor	xmm4,xmm12
	pxor	xmm5,xmm13
	pxor	xmm6,xmm14
	pxor	xmm7,xmm7

	call	_aesni_encrypt6

	xorps	xmm2,xmm10
	movdqa	xmm10,xmm15
	xorps	xmm3,xmm11
	xorps	xmm4,xmm12
	movdqu	XMMWORD[rsi],xmm2
	xorps	xmm5,xmm13
	movdqu	XMMWORD[16+rsi],xmm3
	xorps	xmm6,xmm14
	movdqu	XMMWORD[32+rsi],xmm4
	movdqu	XMMWORD[48+rsi],xmm5
	movdqu	XMMWORD[64+rsi],xmm6
	lea	rsi,[80+rsi]
	jmp	NEAR $L$xts_enc_done

ALIGN	16
$L$xts_enc_one:
	movups	xmm2,XMMWORD[rdi]
	lea	rdi,[16+rdi]
	xorps	xmm2,xmm10
	movups	xmm0,XMMWORD[rcx]
	movups	xmm1,XMMWORD[16+rcx]
	lea	rcx,[32+rcx]
	xorps	xmm2,xmm0
$L$oop_enc1_9:
DB	102,15,56,220,209
	dec	eax
	movups	xmm1,XMMWORD[rcx]
	lea	rcx,[16+rcx]
	jnz	NEAR $L$oop_enc1_9
DB	102,15,56,221,209
	xorps	xmm2,xmm10
	movdqa	xmm10,xmm11
	movups	XMMWORD[rsi],xmm2
	lea	rsi,[16+rsi]
	jmp	NEAR $L$xts_enc_done

ALIGN	16
$L$xts_enc_two:
	movups	xmm2,XMMWORD[rdi]
	movups	xmm3,XMMWORD[16+rdi]
	lea	rdi,[32+rdi]
	xorps	xmm2,xmm10
	xorps	xmm3,xmm11

	call	_aesni_encrypt2

	xorps	xmm2,xmm10
	movdqa	xmm10,xmm12
	xorps	xmm3,xmm11
	movups	XMMWORD[rsi],xmm2
	movups	XMMWORD[16+rsi],xmm3
	lea	rsi,[32+rsi]
	jmp	NEAR $L$xts_enc_done

ALIGN	16
$L$xts_enc_three:
	movups	xmm2,XMMWORD[rdi]
	movups	xmm3,XMMWORD[16+rdi]
	movups	xmm4,XMMWORD[32+rdi]
	lea	rdi,[48+rdi]
	xorps	xmm2,xmm10
	xorps	xmm3,xmm11
	xorps	xmm4,xmm12

	call	_aesni_encrypt3

	xorps	xmm2,xmm10
	movdqa	xmm10,xmm13
	xorps	xmm3,xmm11
	xorps	xmm4,xmm12
	movups	XMMWORD[rsi],xmm2
	movups	XMMWORD[16+rsi],xmm3
	movups	XMMWORD[32+rsi],xmm4
	lea	rsi,[48+rsi]
	jmp	NEAR $L$xts_enc_done

ALIGN	16
$L$xts_enc_four:
	movups	xmm2,XMMWORD[rdi]
	movups	xmm3,XMMWORD[16+rdi]
	movups	xmm4,XMMWORD[32+rdi]
	xorps	xmm2,xmm10
	movups	xmm5,XMMWORD[48+rdi]
	lea	rdi,[64+rdi]
	xorps	xmm3,xmm11
	xorps	xmm4,xmm12
	xorps	xmm5,xmm13

	call	_aesni_encrypt4

	pxor	xmm2,xmm10
	movdqa	xmm10,xmm14
	pxor	xmm3,xmm11
	pxor	xmm4,xmm12
	movdqu	XMMWORD[rsi],xmm2
	pxor	xmm5,xmm13
	movdqu	XMMWORD[16+rsi],xmm3
	movdqu	XMMWORD[32+rsi],xmm4
	movdqu	XMMWORD[48+rsi],xmm5
	lea	rsi,[64+rsi]
	jmp	NEAR $L$xts_enc_done

ALIGN	16
$L$xts_enc_done:
	and	r9,15
	jz	NEAR $L$xts_enc_ret
	mov	rdx,r9

$L$xts_enc_steal:
	movzx	eax,BYTE[rdi]
	movzx	ecx,BYTE[((-16))+rsi]
	lea	rdi,[1+rdi]
	mov	BYTE[((-16))+rsi],al
	mov	BYTE[rsi],cl
	lea	rsi,[1+rsi]
	sub	rdx,1
	jnz	NEAR $L$xts_enc_steal

	sub	rsi,r9
	mov	rcx,rbp
	mov	eax,r10d

	movups	xmm2,XMMWORD[((-16))+rsi]
	xorps	xmm2,xmm10
	movups	xmm0,XMMWORD[rcx]
	movups	xmm1,XMMWORD[16+rcx]
	lea	rcx,[32+rcx]
	xorps	xmm2,xmm0
$L$oop_enc1_10:
DB	102,15,56,220,209
	dec	eax
	movups	xmm1,XMMWORD[rcx]
	lea	rcx,[16+rcx]
	jnz	NEAR $L$oop_enc1_10
DB	102,15,56,221,209
	xorps	xmm2,xmm10
	movups	XMMWORD[(-16)+rsi],xmm2

$L$xts_enc_ret:
	xorps	xmm0,xmm0
	pxor	xmm1,xmm1
	pxor	xmm2,xmm2
	pxor	xmm3,xmm3
	pxor	xmm4,xmm4
	pxor	xmm5,xmm5
	movaps	xmm6,XMMWORD[((-168))+r11]
	movaps	XMMWORD[(-168)+r11],xmm0
	movaps	xmm7,XMMWORD[((-152))+r11]
	movaps	XMMWORD[(-152)+r11],xmm0
	movaps	xmm8,XMMWORD[((-136))+r11]
	movaps	XMMWORD[(-136)+r11],xmm0
	movaps	xmm9,XMMWORD[((-120))+r11]
	movaps	XMMWORD[(-120)+r11],xmm0
	movaps	xmm10,XMMWORD[((-104))+r11]
	movaps	XMMWORD[(-104)+r11],xmm0
	movaps	xmm11,XMMWORD[((-88))+r11]
	movaps	XMMWORD[(-88)+r11],xmm0
	movaps	xmm12,XMMWORD[((-72))+r11]
	movaps	XMMWORD[(-72)+r11],xmm0
	movaps	xmm13,XMMWORD[((-56))+r11]
	movaps	XMMWORD[(-56)+r11],xmm0
	movaps	xmm14,XMMWORD[((-40))+r11]
	movaps	XMMWORD[(-40)+r11],xmm0
	movaps	xmm15,XMMWORD[((-24))+r11]
	movaps	XMMWORD[(-24)+r11],xmm0
	movaps	XMMWORD[rsp],xmm0
	movaps	XMMWORD[16+rsp],xmm0
	movaps	XMMWORD[32+rsp],xmm0
	movaps	XMMWORD[48+rsp],xmm0
	movaps	XMMWORD[64+rsp],xmm0
	movaps	XMMWORD[80+rsp],xmm0
	movaps	XMMWORD[96+rsp],xmm0
	mov	rbp,QWORD[((-8))+r11]

	lea	rsp,[r11]

$L$xts_enc_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_xts_encrypt:
global	aesni_xts_decrypt

ALIGN	16
aesni_xts_decrypt:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_xts_decrypt:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



DB	243,15,30,250
	lea	r11,[rsp]

	push	rbp

	sub	rsp,272
	and	rsp,-16
	movaps	XMMWORD[(-168)+r11],xmm6
	movaps	XMMWORD[(-152)+r11],xmm7
	movaps	XMMWORD[(-136)+r11],xmm8
	movaps	XMMWORD[(-120)+r11],xmm9
	movaps	XMMWORD[(-104)+r11],xmm10
	movaps	XMMWORD[(-88)+r11],xmm11
	movaps	XMMWORD[(-72)+r11],xmm12
	movaps	XMMWORD[(-56)+r11],xmm13
	movaps	XMMWORD[(-40)+r11],xmm14
	movaps	XMMWORD[(-24)+r11],xmm15
$L$xts_dec_body:
	movups	xmm2,XMMWORD[r9]
	mov	eax,DWORD[240+r8]
	mov	r10d,DWORD[240+rcx]
	movups	xmm0,XMMWORD[r8]
	movups	xmm1,XMMWORD[16+r8]
	lea	r8,[32+r8]
	xorps	xmm2,xmm0
$L$oop_enc1_11:
DB	102,15,56,220,209
	dec	eax
	movups	xmm1,XMMWORD[r8]
	lea	r8,[16+r8]
	jnz	NEAR $L$oop_enc1_11
DB	102,15,56,221,209
	xor	eax,eax
	test	rdx,15
	setnz	al
	shl	rax,4
	sub	rdx,rax

	movups	xmm0,XMMWORD[rcx]
	mov	rbp,rcx
	mov	eax,r10d
	shl	r10d,4
	mov	r9,rdx
	and	rdx,-16

	movups	xmm1,XMMWORD[16+r10*1+rcx]

	movdqa	xmm8,XMMWORD[$L$xts_magic]
	movdqa	xmm15,xmm2
	pshufd	xmm9,xmm2,0x5f
	pxor	xmm1,xmm0
	movdqa	xmm14,xmm9
	paddd	xmm9,xmm9
	movdqa	xmm10,xmm15
	psrad	xmm14,31
	paddq	xmm15,xmm15
	pand	xmm14,xmm8
	pxor	xmm10,xmm0
	pxor	xmm15,xmm14
	movdqa	xmm14,xmm9
	paddd	xmm9,xmm9
	movdqa	xmm11,xmm15
	psrad	xmm14,31
	paddq	xmm15,xmm15
	pand	xmm14,xmm8
	pxor	xmm11,xmm0
	pxor	xmm15,xmm14
	movdqa	xmm14,xmm9
	paddd	xmm9,xmm9
	movdqa	xmm12,xmm15
	psrad	xmm14,31
	paddq	xmm15,xmm15
	pand	xmm14,xmm8
	pxor	xmm12,xmm0
	pxor	xmm15,xmm14
	movdqa	xmm14,xmm9
	paddd	xmm9,xmm9
	movdqa	xmm13,xmm15
	psrad	xmm14,31
	paddq	xmm15,xmm15
	pand	xmm14,xmm8
	pxor	xmm13,xmm0
	pxor	xmm15,xmm14
	movdqa	xmm14,xmm15
	psrad	xmm9,31
	paddq	xmm15,xmm15
	pand	xmm9,xmm8
	pxor	xmm14,xmm0
	pxor	xmm15,xmm9
	movaps	XMMWORD[96+rsp],xmm1

	sub	rdx,16*6
	jc	NEAR $L$xts_dec_short

	mov	eax,16+96
	lea	rcx,[32+r10*1+rbp]
	sub	rax,r10
	movups	xmm1,XMMWORD[16+rbp]
	mov	r10,rax
	lea	r8,[$L$xts_magic]
	jmp	NEAR $L$xts_dec_grandloop

ALIGN	32
$L$xts_dec_grandloop:
	movdqu	xmm2,XMMWORD[rdi]
	movdqa	xmm8,xmm0
	movdqu	xmm3,XMMWORD[16+rdi]
	pxor	xmm2,xmm10
	movdqu	xmm4,XMMWORD[32+rdi]
	pxor	xmm3,xmm11
DB	102,15,56,222,209
	movdqu	xmm5,XMMWORD[48+rdi]
	pxor	xmm4,xmm12
DB	102,15,56,222,217
	movdqu	xmm6,XMMWORD[64+rdi]
	pxor	xmm5,xmm13
DB	102,15,56,222,225
	movdqu	xmm7,XMMWORD[80+rdi]
	pxor	xmm8,xmm15
	movdqa	xmm9,XMMWORD[96+rsp]
	pxor	xmm6,xmm14
DB	102,15,56,222,233
	movups	xmm0,XMMWORD[32+rbp]
	lea	rdi,[96+rdi]
	pxor	xmm7,xmm8

	pxor	xmm10,xmm9
DB	102,15,56,222,241
	pxor	xmm11,xmm9
	movdqa	XMMWORD[rsp],xmm10
DB	102,15,56,222,249
	movups	xmm1,XMMWORD[48+rbp]
	pxor	xmm12,xmm9

DB	102,15,56,222,208
	pxor	xmm13,xmm9
	movdqa	XMMWORD[16+rsp],xmm11
DB	102,15,56,222,216
	pxor	xmm14,xmm9
	movdqa	XMMWORD[32+rsp],xmm12
DB	102,15,56,222,224
DB	102,15,56,222,232
	pxor	xmm8,xmm9
	movdqa	XMMWORD[64+rsp],xmm14
DB	102,15,56,222,240
DB	102,15,56,222,248
	movups	xmm0,XMMWORD[64+rbp]
	movdqa	XMMWORD[80+rsp],xmm8
	pshufd	xmm9,xmm15,0x5f
	jmp	NEAR $L$xts_dec_loop6
ALIGN	32
$L$xts_dec_loop6:
DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
DB	102,15,56,222,241
DB	102,15,56,222,249
	movups	xmm1,XMMWORD[((-64))+rax*1+rcx]
	add	rax,32

DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
DB	102,15,56,222,240
DB	102,15,56,222,248
	movups	xmm0,XMMWORD[((-80))+rax*1+rcx]
	jnz	NEAR $L$xts_dec_loop6

	movdqa	xmm8,XMMWORD[r8]
	movdqa	xmm14,xmm9
	paddd	xmm9,xmm9
DB	102,15,56,222,209
	paddq	xmm15,xmm15
	psrad	xmm14,31
DB	102,15,56,222,217
	pand	xmm14,xmm8
	movups	xmm10,XMMWORD[rbp]
DB	102,15,56,222,225
DB	102,15,56,222,233
DB	102,15,56,222,241
	pxor	xmm15,xmm14
	movaps	xmm11,xmm10
DB	102,15,56,222,249
	movups	xmm1,XMMWORD[((-64))+rcx]

	movdqa	xmm14,xmm9
DB	102,15,56,222,208
	paddd	xmm9,xmm9
	pxor	xmm10,xmm15
DB	102,15,56,222,216
	psrad	xmm14,31
	paddq	xmm15,xmm15
DB	102,15,56,222,224
DB	102,15,56,222,232
	pand	xmm14,xmm8
	movaps	xmm12,xmm11
DB	102,15,56,222,240
	pxor	xmm15,xmm14
	movdqa	xmm14,xmm9
DB	102,15,56,222,248
	movups	xmm0,XMMWORD[((-48))+rcx]

	paddd	xmm9,xmm9
DB	102,15,56,222,209
	pxor	xmm11,xmm15
	psrad	xmm14,31
DB	102,15,56,222,217
	paddq	xmm15,xmm15
	pand	xmm14,xmm8
DB	102,15,56,222,225
DB	102,15,56,222,233
	movdqa	XMMWORD[48+rsp],xmm13
	pxor	xmm15,xmm14
DB	102,15,56,222,241
	movaps	xmm13,xmm12
	movdqa	xmm14,xmm9
DB	102,15,56,222,249
	movups	xmm1,XMMWORD[((-32))+rcx]

	paddd	xmm9,xmm9
DB	102,15,56,222,208
	pxor	xmm12,xmm15
	psrad	xmm14,31
DB	102,15,56,222,216
	paddq	xmm15,xmm15
	pand	xmm14,xmm8
DB	102,15,56,222,224
DB	102,15,56,222,232
DB	102,15,56,222,240
	pxor	xmm15,xmm14
	movaps	xmm14,xmm13
DB	102,15,56,222,248

	movdqa	xmm0,xmm9
	paddd	xmm9,xmm9
DB	102,15,56,222,209
	pxor	xmm13,xmm15
	psrad	xmm0,31
DB	102,15,56,222,217
	paddq	xmm15,xmm15
	pand	xmm0,xmm8
DB	102,15,56,222,225
DB	102,15,56,222,233
	pxor	xmm15,xmm0
	movups	xmm0,XMMWORD[rbp]
DB	102,15,56,222,241
DB	102,15,56,222,249
	movups	xmm1,XMMWORD[16+rbp]

	pxor	xmm14,xmm15
DB	102,15,56,223,84,36,0
	psrad	xmm9,31
	paddq	xmm15,xmm15
DB	102,15,56,223,92,36,16
DB	102,15,56,223,100,36,32
	pand	xmm9,xmm8
	mov	rax,r10
DB	102,15,56,223,108,36,48
DB	102,15,56,223,116,36,64
DB	102,15,56,223,124,36,80
	pxor	xmm15,xmm9

	lea	rsi,[96+rsi]
	movups	XMMWORD[(-96)+rsi],xmm2
	movups	XMMWORD[(-80)+rsi],xmm3
	movups	XMMWORD[(-64)+rsi],xmm4
	movups	XMMWORD[(-48)+rsi],xmm5
	movups	XMMWORD[(-32)+rsi],xmm6
	movups	XMMWORD[(-16)+rsi],xmm7
	sub	rdx,16*6
	jnc	NEAR $L$xts_dec_grandloop

	mov	eax,16+96
	sub	eax,r10d
	mov	rcx,rbp
	shr	eax,4

$L$xts_dec_short:

	mov	r10d,eax
	pxor	xmm10,xmm0
	pxor	xmm11,xmm0
	add	rdx,16*6
	jz	NEAR $L$xts_dec_done

	pxor	xmm12,xmm0
	cmp	rdx,0x20
	jb	NEAR $L$xts_dec_one
	pxor	xmm13,xmm0
	je	NEAR $L$xts_dec_two

	pxor	xmm14,xmm0
	cmp	rdx,0x40
	jb	NEAR $L$xts_dec_three
	je	NEAR $L$xts_dec_four

	movdqu	xmm2,XMMWORD[rdi]
	movdqu	xmm3,XMMWORD[16+rdi]
	movdqu	xmm4,XMMWORD[32+rdi]
	pxor	xmm2,xmm10
	movdqu	xmm5,XMMWORD[48+rdi]
	pxor	xmm3,xmm11
	movdqu	xmm6,XMMWORD[64+rdi]
	lea	rdi,[80+rdi]
	pxor	xmm4,xmm12
	pxor	xmm5,xmm13
	pxor	xmm6,xmm14

	call	_aesni_decrypt6

	xorps	xmm2,xmm10
	xorps	xmm3,xmm11
	xorps	xmm4,xmm12
	movdqu	XMMWORD[rsi],xmm2
	xorps	xmm5,xmm13
	movdqu	XMMWORD[16+rsi],xmm3
	xorps	xmm6,xmm14
	movdqu	XMMWORD[32+rsi],xmm4
	pxor	xmm14,xmm14
	movdqu	XMMWORD[48+rsi],xmm5
	pcmpgtd	xmm14,xmm15
	movdqu	XMMWORD[64+rsi],xmm6
	lea	rsi,[80+rsi]
	pshufd	xmm11,xmm14,0x13
	and	r9,15
	jz	NEAR $L$xts_dec_ret

	movdqa	xmm10,xmm15
	paddq	xmm15,xmm15
	pand	xmm11,xmm8
	pxor	xmm11,xmm15
	jmp	NEAR $L$xts_dec_done2

ALIGN	16
$L$xts_dec_one:
	movups	xmm2,XMMWORD[rdi]
	lea	rdi,[16+rdi]
	xorps	xmm2,xmm10
	movups	xmm0,XMMWORD[rcx]
	movups	xmm1,XMMWORD[16+rcx]
	lea	rcx,[32+rcx]
	xorps	xmm2,xmm0
$L$oop_dec1_12:
DB	102,15,56,222,209
	dec	eax
	movups	xmm1,XMMWORD[rcx]
	lea	rcx,[16+rcx]
	jnz	NEAR $L$oop_dec1_12
DB	102,15,56,223,209
	xorps	xmm2,xmm10
	movdqa	xmm10,xmm11
	movups	XMMWORD[rsi],xmm2
	movdqa	xmm11,xmm12
	lea	rsi,[16+rsi]
	jmp	NEAR $L$xts_dec_done

ALIGN	16
$L$xts_dec_two:
	movups	xmm2,XMMWORD[rdi]
	movups	xmm3,XMMWORD[16+rdi]
	lea	rdi,[32+rdi]
	xorps	xmm2,xmm10
	xorps	xmm3,xmm11

	call	_aesni_decrypt2

	xorps	xmm2,xmm10
	movdqa	xmm10,xmm12
	xorps	xmm3,xmm11
	movdqa	xmm11,xmm13
	movups	XMMWORD[rsi],xmm2
	movups	XMMWORD[16+rsi],xmm3
	lea	rsi,[32+rsi]
	jmp	NEAR $L$xts_dec_done

ALIGN	16
$L$xts_dec_three:
	movups	xmm2,XMMWORD[rdi]
	movups	xmm3,XMMWORD[16+rdi]
	movups	xmm4,XMMWORD[32+rdi]
	lea	rdi,[48+rdi]
	xorps	xmm2,xmm10
	xorps	xmm3,xmm11
	xorps	xmm4,xmm12

	call	_aesni_decrypt3

	xorps	xmm2,xmm10
	movdqa	xmm10,xmm13
	xorps	xmm3,xmm11
	movdqa	xmm11,xmm14
	xorps	xmm4,xmm12
	movups	XMMWORD[rsi],xmm2
	movups	XMMWORD[16+rsi],xmm3
	movups	XMMWORD[32+rsi],xmm4
	lea	rsi,[48+rsi]
	jmp	NEAR $L$xts_dec_done

ALIGN	16
$L$xts_dec_four:
	movups	xmm2,XMMWORD[rdi]
	movups	xmm3,XMMWORD[16+rdi]
	movups	xmm4,XMMWORD[32+rdi]
	xorps	xmm2,xmm10
	movups	xmm5,XMMWORD[48+rdi]
	lea	rdi,[64+rdi]
	xorps	xmm3,xmm11
	xorps	xmm4,xmm12
	xorps	xmm5,xmm13

	call	_aesni_decrypt4

	pxor	xmm2,xmm10
	movdqa	xmm10,xmm14
	pxor	xmm3,xmm11
	movdqa	xmm11,xmm15
	pxor	xmm4,xmm12
	movdqu	XMMWORD[rsi],xmm2
	pxor	xmm5,xmm13
	movdqu	XMMWORD[16+rsi],xmm3
	movdqu	XMMWORD[32+rsi],xmm4
	movdqu	XMMWORD[48+rsi],xmm5
	lea	rsi,[64+rsi]
	jmp	NEAR $L$xts_dec_done

ALIGN	16
$L$xts_dec_done:
	and	r9,15
	jz	NEAR $L$xts_dec_ret
$L$xts_dec_done2:
	mov	rdx,r9
	mov	rcx,rbp
	mov	eax,r10d

	movups	xmm2,XMMWORD[rdi]
	xorps	xmm2,xmm11
	movups	xmm0,XMMWORD[rcx]
	movups	xmm1,XMMWORD[16+rcx]
	lea	rcx,[32+rcx]
	xorps	xmm2,xmm0
$L$oop_dec1_13:
DB	102,15,56,222,209
	dec	eax
	movups	xmm1,XMMWORD[rcx]
	lea	rcx,[16+rcx]
	jnz	NEAR $L$oop_dec1_13
DB	102,15,56,223,209
	xorps	xmm2,xmm11
	movups	XMMWORD[rsi],xmm2

$L$xts_dec_steal:
	movzx	eax,BYTE[16+rdi]
	movzx	ecx,BYTE[rsi]
	lea	rdi,[1+rdi]
	mov	BYTE[rsi],al
	mov	BYTE[16+rsi],cl
	lea	rsi,[1+rsi]
	sub	rdx,1
	jnz	NEAR $L$xts_dec_steal

	sub	rsi,r9
	mov	rcx,rbp
	mov	eax,r10d

	movups	xmm2,XMMWORD[rsi]
	xorps	xmm2,xmm10
	movups	xmm0,XMMWORD[rcx]
	movups	xmm1,XMMWORD[16+rcx]
	lea	rcx,[32+rcx]
	xorps	xmm2,xmm0
$L$oop_dec1_14:
DB	102,15,56,222,209
	dec	eax
	movups	xmm1,XMMWORD[rcx]
	lea	rcx,[16+rcx]
	jnz	NEAR $L$oop_dec1_14
DB	102,15,56,223,209
	xorps	xmm2,xmm10
	movups	XMMWORD[rsi],xmm2

$L$xts_dec_ret:
	xorps	xmm0,xmm0
	pxor	xmm1,xmm1
	pxor	xmm2,xmm2
	pxor	xmm3,xmm3
	pxor	xmm4,xmm4
	pxor	xmm5,xmm5
	movaps	xmm6,XMMWORD[((-168))+r11]
	movaps	XMMWORD[(-168)+r11],xmm0
	movaps	xmm7,XMMWORD[((-152))+r11]
	movaps	XMMWORD[(-152)+r11],xmm0
	movaps	xmm8,XMMWORD[((-136))+r11]
	movaps	XMMWORD[(-136)+r11],xmm0
	movaps	xmm9,XMMWORD[((-120))+r11]
	movaps	XMMWORD[(-120)+r11],xmm0
	movaps	xmm10,XMMWORD[((-104))+r11]
	movaps	XMMWORD[(-104)+r11],xmm0
	movaps	xmm11,XMMWORD[((-88))+r11]
	movaps	XMMWORD[(-88)+r11],xmm0
	movaps	xmm12,XMMWORD[((-72))+r11]
	movaps	XMMWORD[(-72)+r11],xmm0
	movaps	xmm13,XMMWORD[((-56))+r11]
	movaps	XMMWORD[(-56)+r11],xmm0
	movaps	xmm14,XMMWORD[((-40))+r11]
	movaps	XMMWORD[(-40)+r11],xmm0
	movaps	xmm15,XMMWORD[((-24))+r11]
	movaps	XMMWORD[(-24)+r11],xmm0
	movaps	XMMWORD[rsp],xmm0
	movaps	XMMWORD[16+rsp],xmm0
	movaps	XMMWORD[32+rsp],xmm0
	movaps	XMMWORD[48+rsp],xmm0
	movaps	XMMWORD[64+rsp],xmm0
	movaps	XMMWORD[80+rsp],xmm0
	movaps	XMMWORD[96+rsp],xmm0
	mov	rbp,QWORD[((-8))+r11]

	lea	rsp,[r11]

$L$xts_dec_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_xts_decrypt:
global	aesni_ocb_encrypt

ALIGN	32
aesni_ocb_encrypt:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_ocb_encrypt:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



DB	243,15,30,250
	lea	rax,[rsp]
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	lea	rsp,[((-160))+rsp]
	movaps	XMMWORD[rsp],xmm6
	movaps	XMMWORD[16+rsp],xmm7
	movaps	XMMWORD[32+rsp],xmm8
	movaps	XMMWORD[48+rsp],xmm9
	movaps	XMMWORD[64+rsp],xmm10
	movaps	XMMWORD[80+rsp],xmm11
	movaps	XMMWORD[96+rsp],xmm12
	movaps	XMMWORD[112+rsp],xmm13
	movaps	XMMWORD[128+rsp],xmm14
	movaps	XMMWORD[144+rsp],xmm15
$L$ocb_enc_body:
	mov	rbx,QWORD[56+rax]
	mov	rbp,QWORD[((56+8))+rax]

	mov	r10d,DWORD[240+rcx]
	mov	r11,rcx
	shl	r10d,4
	movups	xmm9,XMMWORD[rcx]
	movups	xmm1,XMMWORD[16+r10*1+rcx]

	movdqu	xmm15,XMMWORD[r9]
	pxor	xmm9,xmm1
	pxor	xmm15,xmm1

	mov	eax,16+32
	lea	rcx,[32+r10*1+r11]
	movups	xmm1,XMMWORD[16+r11]
	sub	rax,r10
	mov	r10,rax

	movdqu	xmm10,XMMWORD[rbx]
	movdqu	xmm8,XMMWORD[rbp]

	test	r8,1
	jnz	NEAR $L$ocb_enc_odd

	bsf	r12,r8
	add	r8,1
	shl	r12,4
	movdqu	xmm7,XMMWORD[r12*1+rbx]
	movdqu	xmm2,XMMWORD[rdi]
	lea	rdi,[16+rdi]

	call	__ocb_encrypt1

	movdqa	xmm15,xmm7
	movups	XMMWORD[rsi],xmm2
	lea	rsi,[16+rsi]
	sub	rdx,1
	jz	NEAR $L$ocb_enc_done

$L$ocb_enc_odd:
	lea	r12,[1+r8]
	lea	r13,[3+r8]
	lea	r14,[5+r8]
	lea	r8,[6+r8]
	bsf	r12,r12
	bsf	r13,r13
	bsf	r14,r14
	shl	r12,4
	shl	r13,4
	shl	r14,4

	sub	rdx,6
	jc	NEAR $L$ocb_enc_short
	jmp	NEAR $L$ocb_enc_grandloop

ALIGN	32
$L$ocb_enc_grandloop:
	movdqu	xmm2,XMMWORD[rdi]
	movdqu	xmm3,XMMWORD[16+rdi]
	movdqu	xmm4,XMMWORD[32+rdi]
	movdqu	xmm5,XMMWORD[48+rdi]
	movdqu	xmm6,XMMWORD[64+rdi]
	movdqu	xmm7,XMMWORD[80+rdi]
	lea	rdi,[96+rdi]

	call	__ocb_encrypt6

	movups	XMMWORD[rsi],xmm2
	movups	XMMWORD[16+rsi],xmm3
	movups	XMMWORD[32+rsi],xmm4
	movups	XMMWORD[48+rsi],xmm5
	movups	XMMWORD[64+rsi],xmm6
	movups	XMMWORD[80+rsi],xmm7
	lea	rsi,[96+rsi]
	sub	rdx,6
	jnc	NEAR $L$ocb_enc_grandloop

$L$ocb_enc_short:
	add	rdx,6
	jz	NEAR $L$ocb_enc_done

	movdqu	xmm2,XMMWORD[rdi]
	cmp	rdx,2
	jb	NEAR $L$ocb_enc_one
	movdqu	xmm3,XMMWORD[16+rdi]
	je	NEAR $L$ocb_enc_two

	movdqu	xmm4,XMMWORD[32+rdi]
	cmp	rdx,4
	jb	NEAR $L$ocb_enc_three
	movdqu	xmm5,XMMWORD[48+rdi]
	je	NEAR $L$ocb_enc_four

	movdqu	xmm6,XMMWORD[64+rdi]
	pxor	xmm7,xmm7

	call	__ocb_encrypt6

	movdqa	xmm15,xmm14
	movups	XMMWORD[rsi],xmm2
	movups	XMMWORD[16+rsi],xmm3
	movups	XMMWORD[32+rsi],xmm4
	movups	XMMWORD[48+rsi],xmm5
	movups	XMMWORD[64+rsi],xmm6

	jmp	NEAR $L$ocb_enc_done

ALIGN	16
$L$ocb_enc_one:
	movdqa	xmm7,xmm10

	call	__ocb_encrypt1

	movdqa	xmm15,xmm7
	movups	XMMWORD[rsi],xmm2
	jmp	NEAR $L$ocb_enc_done

ALIGN	16
$L$ocb_enc_two:
	pxor	xmm4,xmm4
	pxor	xmm5,xmm5

	call	__ocb_encrypt4

	movdqa	xmm15,xmm11
	movups	XMMWORD[rsi],xmm2
	movups	XMMWORD[16+rsi],xmm3

	jmp	NEAR $L$ocb_enc_done

ALIGN	16
$L$ocb_enc_three:
	pxor	xmm5,xmm5

	call	__ocb_encrypt4

	movdqa	xmm15,xmm12
	movups	XMMWORD[rsi],xmm2
	movups	XMMWORD[16+rsi],xmm3
	movups	XMMWORD[32+rsi],xmm4

	jmp	NEAR $L$ocb_enc_done

ALIGN	16
$L$ocb_enc_four:
	call	__ocb_encrypt4

	movdqa	xmm15,xmm13
	movups	XMMWORD[rsi],xmm2
	movups	XMMWORD[16+rsi],xmm3
	movups	XMMWORD[32+rsi],xmm4
	movups	XMMWORD[48+rsi],xmm5

$L$ocb_enc_done:
	pxor	xmm15,xmm0
	movdqu	XMMWORD[rbp],xmm8
	movdqu	XMMWORD[r9],xmm15

	xorps	xmm0,xmm0
	pxor	xmm1,xmm1
	pxor	xmm2,xmm2
	pxor	xmm3,xmm3
	pxor	xmm4,xmm4
	pxor	xmm5,xmm5
	movaps	xmm6,XMMWORD[rsp]
	movaps	XMMWORD[rsp],xmm0
	movaps	xmm7,XMMWORD[16+rsp]
	movaps	XMMWORD[16+rsp],xmm0
	movaps	xmm8,XMMWORD[32+rsp]
	movaps	XMMWORD[32+rsp],xmm0
	movaps	xmm9,XMMWORD[48+rsp]
	movaps	XMMWORD[48+rsp],xmm0
	movaps	xmm10,XMMWORD[64+rsp]
	movaps	XMMWORD[64+rsp],xmm0
	movaps	xmm11,XMMWORD[80+rsp]
	movaps	XMMWORD[80+rsp],xmm0
	movaps	xmm12,XMMWORD[96+rsp]
	movaps	XMMWORD[96+rsp],xmm0
	movaps	xmm13,XMMWORD[112+rsp]
	movaps	XMMWORD[112+rsp],xmm0
	movaps	xmm14,XMMWORD[128+rsp]
	movaps	XMMWORD[128+rsp],xmm0
	movaps	xmm15,XMMWORD[144+rsp]
	movaps	XMMWORD[144+rsp],xmm0
	lea	rax,[((160+40))+rsp]
$L$ocb_enc_pop:
	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbp,QWORD[((-16))+rax]

	mov	rbx,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$ocb_enc_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_ocb_encrypt:


ALIGN	32
__ocb_encrypt6:

	pxor	xmm15,xmm9
	movdqu	xmm11,XMMWORD[r12*1+rbx]
	movdqa	xmm12,xmm10
	movdqu	xmm13,XMMWORD[r13*1+rbx]
	movdqa	xmm14,xmm10
	pxor	xmm10,xmm15
	movdqu	xmm15,XMMWORD[r14*1+rbx]
	pxor	xmm11,xmm10
	pxor	xmm8,xmm2
	pxor	xmm2,xmm10
	pxor	xmm12,xmm11
	pxor	xmm8,xmm3
	pxor	xmm3,xmm11
	pxor	xmm13,xmm12
	pxor	xmm8,xmm4
	pxor	xmm4,xmm12
	pxor	xmm14,xmm13
	pxor	xmm8,xmm5
	pxor	xmm5,xmm13
	pxor	xmm15,xmm14
	pxor	xmm8,xmm6
	pxor	xmm6,xmm14
	pxor	xmm8,xmm7
	pxor	xmm7,xmm15
	movups	xmm0,XMMWORD[32+r11]

	lea	r12,[1+r8]
	lea	r13,[3+r8]
	lea	r14,[5+r8]
	add	r8,6
	pxor	xmm10,xmm9
	bsf	r12,r12
	bsf	r13,r13
	bsf	r14,r14

DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
	pxor	xmm11,xmm9
	pxor	xmm12,xmm9
DB	102,15,56,220,241
	pxor	xmm13,xmm9
	pxor	xmm14,xmm9
DB	102,15,56,220,249
	movups	xmm1,XMMWORD[48+r11]
	pxor	xmm15,xmm9

DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
DB	102,15,56,220,232
DB	102,15,56,220,240
DB	102,15,56,220,248
	movups	xmm0,XMMWORD[64+r11]
	shl	r12,4
	shl	r13,4
	jmp	NEAR $L$ocb_enc_loop6

ALIGN	32
$L$ocb_enc_loop6:
DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
DB	102,15,56,220,241
DB	102,15,56,220,249
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32

DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
DB	102,15,56,220,232
DB	102,15,56,220,240
DB	102,15,56,220,248
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$ocb_enc_loop6

DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
DB	102,15,56,220,241
DB	102,15,56,220,249
	movups	xmm1,XMMWORD[16+r11]
	shl	r14,4

DB	102,65,15,56,221,210
	movdqu	xmm10,XMMWORD[rbx]
	mov	rax,r10
DB	102,65,15,56,221,219
DB	102,65,15,56,221,228
DB	102,65,15,56,221,237
DB	102,65,15,56,221,246
DB	102,65,15,56,221,255
	DB	0F3h,0C3h		;repret




ALIGN	32
__ocb_encrypt4:

	pxor	xmm15,xmm9
	movdqu	xmm11,XMMWORD[r12*1+rbx]
	movdqa	xmm12,xmm10
	movdqu	xmm13,XMMWORD[r13*1+rbx]
	pxor	xmm10,xmm15
	pxor	xmm11,xmm10
	pxor	xmm8,xmm2
	pxor	xmm2,xmm10
	pxor	xmm12,xmm11
	pxor	xmm8,xmm3
	pxor	xmm3,xmm11
	pxor	xmm13,xmm12
	pxor	xmm8,xmm4
	pxor	xmm4,xmm12
	pxor	xmm8,xmm5
	pxor	xmm5,xmm13
	movups	xmm0,XMMWORD[32+r11]

	pxor	xmm10,xmm9
	pxor	xmm11,xmm9
	pxor	xmm12,xmm9
	pxor	xmm13,xmm9

DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
	movups	xmm1,XMMWORD[48+r11]

DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
DB	102,15,56,220,232
	movups	xmm0,XMMWORD[64+r11]
	jmp	NEAR $L$ocb_enc_loop4

ALIGN	32
$L$ocb_enc_loop4:
DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32

DB	102,15,56,220,208
DB	102,15,56,220,216
DB	102,15,56,220,224
DB	102,15,56,220,232
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$ocb_enc_loop4

DB	102,15,56,220,209
DB	102,15,56,220,217
DB	102,15,56,220,225
DB	102,15,56,220,233
	movups	xmm1,XMMWORD[16+r11]
	mov	rax,r10

DB	102,65,15,56,221,210
DB	102,65,15,56,221,219
DB	102,65,15,56,221,228
DB	102,65,15,56,221,237
	DB	0F3h,0C3h		;repret




ALIGN	32
__ocb_encrypt1:

	pxor	xmm7,xmm15
	pxor	xmm7,xmm9
	pxor	xmm8,xmm2
	pxor	xmm2,xmm7
	movups	xmm0,XMMWORD[32+r11]

DB	102,15,56,220,209
	movups	xmm1,XMMWORD[48+r11]
	pxor	xmm7,xmm9

DB	102,15,56,220,208
	movups	xmm0,XMMWORD[64+r11]
	jmp	NEAR $L$ocb_enc_loop1

ALIGN	32
$L$ocb_enc_loop1:
DB	102,15,56,220,209
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32

DB	102,15,56,220,208
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$ocb_enc_loop1

DB	102,15,56,220,209
	movups	xmm1,XMMWORD[16+r11]
	mov	rax,r10

DB	102,15,56,221,215
	DB	0F3h,0C3h		;repret



global	aesni_ocb_decrypt

ALIGN	32
aesni_ocb_decrypt:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_ocb_decrypt:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



DB	243,15,30,250
	lea	rax,[rsp]
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	lea	rsp,[((-160))+rsp]
	movaps	XMMWORD[rsp],xmm6
	movaps	XMMWORD[16+rsp],xmm7
	movaps	XMMWORD[32+rsp],xmm8
	movaps	XMMWORD[48+rsp],xmm9
	movaps	XMMWORD[64+rsp],xmm10
	movaps	XMMWORD[80+rsp],xmm11
	movaps	XMMWORD[96+rsp],xmm12
	movaps	XMMWORD[112+rsp],xmm13
	movaps	XMMWORD[128+rsp],xmm14
	movaps	XMMWORD[144+rsp],xmm15
$L$ocb_dec_body:
	mov	rbx,QWORD[56+rax]
	mov	rbp,QWORD[((56+8))+rax]

	mov	r10d,DWORD[240+rcx]
	mov	r11,rcx
	shl	r10d,4
	movups	xmm9,XMMWORD[rcx]
	movups	xmm1,XMMWORD[16+r10*1+rcx]

	movdqu	xmm15,XMMWORD[r9]
	pxor	xmm9,xmm1
	pxor	xmm15,xmm1

	mov	eax,16+32
	lea	rcx,[32+r10*1+r11]
	movups	xmm1,XMMWORD[16+r11]
	sub	rax,r10
	mov	r10,rax

	movdqu	xmm10,XMMWORD[rbx]
	movdqu	xmm8,XMMWORD[rbp]

	test	r8,1
	jnz	NEAR $L$ocb_dec_odd

	bsf	r12,r8
	add	r8,1
	shl	r12,4
	movdqu	xmm7,XMMWORD[r12*1+rbx]
	movdqu	xmm2,XMMWORD[rdi]
	lea	rdi,[16+rdi]

	call	__ocb_decrypt1

	movdqa	xmm15,xmm7
	movups	XMMWORD[rsi],xmm2
	xorps	xmm8,xmm2
	lea	rsi,[16+rsi]
	sub	rdx,1
	jz	NEAR $L$ocb_dec_done

$L$ocb_dec_odd:
	lea	r12,[1+r8]
	lea	r13,[3+r8]
	lea	r14,[5+r8]
	lea	r8,[6+r8]
	bsf	r12,r12
	bsf	r13,r13
	bsf	r14,r14
	shl	r12,4
	shl	r13,4
	shl	r14,4

	sub	rdx,6
	jc	NEAR $L$ocb_dec_short
	jmp	NEAR $L$ocb_dec_grandloop

ALIGN	32
$L$ocb_dec_grandloop:
	movdqu	xmm2,XMMWORD[rdi]
	movdqu	xmm3,XMMWORD[16+rdi]
	movdqu	xmm4,XMMWORD[32+rdi]
	movdqu	xmm5,XMMWORD[48+rdi]
	movdqu	xmm6,XMMWORD[64+rdi]
	movdqu	xmm7,XMMWORD[80+rdi]
	lea	rdi,[96+rdi]

	call	__ocb_decrypt6

	movups	XMMWORD[rsi],xmm2
	pxor	xmm8,xmm2
	movups	XMMWORD[16+rsi],xmm3
	pxor	xmm8,xmm3
	movups	XMMWORD[32+rsi],xmm4
	pxor	xmm8,xmm4
	movups	XMMWORD[48+rsi],xmm5
	pxor	xmm8,xmm5
	movups	XMMWORD[64+rsi],xmm6
	pxor	xmm8,xmm6
	movups	XMMWORD[80+rsi],xmm7
	pxor	xmm8,xmm7
	lea	rsi,[96+rsi]
	sub	rdx,6
	jnc	NEAR $L$ocb_dec_grandloop

$L$ocb_dec_short:
	add	rdx,6
	jz	NEAR $L$ocb_dec_done

	movdqu	xmm2,XMMWORD[rdi]
	cmp	rdx,2
	jb	NEAR $L$ocb_dec_one
	movdqu	xmm3,XMMWORD[16+rdi]
	je	NEAR $L$ocb_dec_two

	movdqu	xmm4,XMMWORD[32+rdi]
	cmp	rdx,4
	jb	NEAR $L$ocb_dec_three
	movdqu	xmm5,XMMWORD[48+rdi]
	je	NEAR $L$ocb_dec_four

	movdqu	xmm6,XMMWORD[64+rdi]
	pxor	xmm7,xmm7

	call	__ocb_decrypt6

	movdqa	xmm15,xmm14
	movups	XMMWORD[rsi],xmm2
	pxor	xmm8,xmm2
	movups	XMMWORD[16+rsi],xmm3
	pxor	xmm8,xmm3
	movups	XMMWORD[32+rsi],xmm4
	pxor	xmm8,xmm4
	movups	XMMWORD[48+rsi],xmm5
	pxor	xmm8,xmm5
	movups	XMMWORD[64+rsi],xmm6
	pxor	xmm8,xmm6

	jmp	NEAR $L$ocb_dec_done

ALIGN	16
$L$ocb_dec_one:
	movdqa	xmm7,xmm10

	call	__ocb_decrypt1

	movdqa	xmm15,xmm7
	movups	XMMWORD[rsi],xmm2
	xorps	xmm8,xmm2
	jmp	NEAR $L$ocb_dec_done

ALIGN	16
$L$ocb_dec_two:
	pxor	xmm4,xmm4
	pxor	xmm5,xmm5

	call	__ocb_decrypt4

	movdqa	xmm15,xmm11
	movups	XMMWORD[rsi],xmm2
	xorps	xmm8,xmm2
	movups	XMMWORD[16+rsi],xmm3
	xorps	xmm8,xmm3

	jmp	NEAR $L$ocb_dec_done

ALIGN	16
$L$ocb_dec_three:
	pxor	xmm5,xmm5

	call	__ocb_decrypt4

	movdqa	xmm15,xmm12
	movups	XMMWORD[rsi],xmm2
	xorps	xmm8,xmm2
	movups	XMMWORD[16+rsi],xmm3
	xorps	xmm8,xmm3
	movups	XMMWORD[32+rsi],xmm4
	xorps	xmm8,xmm4

	jmp	NEAR $L$ocb_dec_done

ALIGN	16
$L$ocb_dec_four:
	call	__ocb_decrypt4

	movdqa	xmm15,xmm13
	movups	XMMWORD[rsi],xmm2
	pxor	xmm8,xmm2
	movups	XMMWORD[16+rsi],xmm3
	pxor	xmm8,xmm3
	movups	XMMWORD[32+rsi],xmm4
	pxor	xmm8,xmm4
	movups	XMMWORD[48+rsi],xmm5
	pxor	xmm8,xmm5

$L$ocb_dec_done:
	pxor	xmm15,xmm0
	movdqu	XMMWORD[rbp],xmm8
	movdqu	XMMWORD[r9],xmm15

	xorps	xmm0,xmm0
	pxor	xmm1,xmm1
	pxor	xmm2,xmm2
	pxor	xmm3,xmm3
	pxor	xmm4,xmm4
	pxor	xmm5,xmm5
	movaps	xmm6,XMMWORD[rsp]
	movaps	XMMWORD[rsp],xmm0
	movaps	xmm7,XMMWORD[16+rsp]
	movaps	XMMWORD[16+rsp],xmm0
	movaps	xmm8,XMMWORD[32+rsp]
	movaps	XMMWORD[32+rsp],xmm0
	movaps	xmm9,XMMWORD[48+rsp]
	movaps	XMMWORD[48+rsp],xmm0
	movaps	xmm10,XMMWORD[64+rsp]
	movaps	XMMWORD[64+rsp],xmm0
	movaps	xmm11,XMMWORD[80+rsp]
	movaps	XMMWORD[80+rsp],xmm0
	movaps	xmm12,XMMWORD[96+rsp]
	movaps	XMMWORD[96+rsp],xmm0
	movaps	xmm13,XMMWORD[112+rsp]
	movaps	XMMWORD[112+rsp],xmm0
	movaps	xmm14,XMMWORD[128+rsp]
	movaps	XMMWORD[128+rsp],xmm0
	movaps	xmm15,XMMWORD[144+rsp]
	movaps	XMMWORD[144+rsp],xmm0
	lea	rax,[((160+40))+rsp]
$L$ocb_dec_pop:
	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbp,QWORD[((-16))+rax]

	mov	rbx,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$ocb_dec_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_ocb_decrypt:


ALIGN	32
__ocb_decrypt6:

	pxor	xmm15,xmm9
	movdqu	xmm11,XMMWORD[r12*1+rbx]
	movdqa	xmm12,xmm10
	movdqu	xmm13,XMMWORD[r13*1+rbx]
	movdqa	xmm14,xmm10
	pxor	xmm10,xmm15
	movdqu	xmm15,XMMWORD[r14*1+rbx]
	pxor	xmm11,xmm10
	pxor	xmm2,xmm10
	pxor	xmm12,xmm11
	pxor	xmm3,xmm11
	pxor	xmm13,xmm12
	pxor	xmm4,xmm12
	pxor	xmm14,xmm13
	pxor	xmm5,xmm13
	pxor	xmm15,xmm14
	pxor	xmm6,xmm14
	pxor	xmm7,xmm15
	movups	xmm0,XMMWORD[32+r11]

	lea	r12,[1+r8]
	lea	r13,[3+r8]
	lea	r14,[5+r8]
	add	r8,6
	pxor	xmm10,xmm9
	bsf	r12,r12
	bsf	r13,r13
	bsf	r14,r14

DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
	pxor	xmm11,xmm9
	pxor	xmm12,xmm9
DB	102,15,56,222,241
	pxor	xmm13,xmm9
	pxor	xmm14,xmm9
DB	102,15,56,222,249
	movups	xmm1,XMMWORD[48+r11]
	pxor	xmm15,xmm9

DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
DB	102,15,56,222,240
DB	102,15,56,222,248
	movups	xmm0,XMMWORD[64+r11]
	shl	r12,4
	shl	r13,4
	jmp	NEAR $L$ocb_dec_loop6

ALIGN	32
$L$ocb_dec_loop6:
DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
DB	102,15,56,222,241
DB	102,15,56,222,249
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32

DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
DB	102,15,56,222,240
DB	102,15,56,222,248
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$ocb_dec_loop6

DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
DB	102,15,56,222,241
DB	102,15,56,222,249
	movups	xmm1,XMMWORD[16+r11]
	shl	r14,4

DB	102,65,15,56,223,210
	movdqu	xmm10,XMMWORD[rbx]
	mov	rax,r10
DB	102,65,15,56,223,219
DB	102,65,15,56,223,228
DB	102,65,15,56,223,237
DB	102,65,15,56,223,246
DB	102,65,15,56,223,255
	DB	0F3h,0C3h		;repret




ALIGN	32
__ocb_decrypt4:

	pxor	xmm15,xmm9
	movdqu	xmm11,XMMWORD[r12*1+rbx]
	movdqa	xmm12,xmm10
	movdqu	xmm13,XMMWORD[r13*1+rbx]
	pxor	xmm10,xmm15
	pxor	xmm11,xmm10
	pxor	xmm2,xmm10
	pxor	xmm12,xmm11
	pxor	xmm3,xmm11
	pxor	xmm13,xmm12
	pxor	xmm4,xmm12
	pxor	xmm5,xmm13
	movups	xmm0,XMMWORD[32+r11]

	pxor	xmm10,xmm9
	pxor	xmm11,xmm9
	pxor	xmm12,xmm9
	pxor	xmm13,xmm9

DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
	movups	xmm1,XMMWORD[48+r11]

DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
	movups	xmm0,XMMWORD[64+r11]
	jmp	NEAR $L$ocb_dec_loop4

ALIGN	32
$L$ocb_dec_loop4:
DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32

DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$ocb_dec_loop4

DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
	movups	xmm1,XMMWORD[16+r11]
	mov	rax,r10

DB	102,65,15,56,223,210
DB	102,65,15,56,223,219
DB	102,65,15,56,223,228
DB	102,65,15,56,223,237
	DB	0F3h,0C3h		;repret




ALIGN	32
__ocb_decrypt1:

	pxor	xmm7,xmm15
	pxor	xmm7,xmm9
	pxor	xmm2,xmm7
	movups	xmm0,XMMWORD[32+r11]

DB	102,15,56,222,209
	movups	xmm1,XMMWORD[48+r11]
	pxor	xmm7,xmm9

DB	102,15,56,222,208
	movups	xmm0,XMMWORD[64+r11]
	jmp	NEAR $L$ocb_dec_loop1

ALIGN	32
$L$ocb_dec_loop1:
DB	102,15,56,222,209
	movups	xmm1,XMMWORD[rax*1+rcx]
	add	rax,32

DB	102,15,56,222,208
	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
	jnz	NEAR $L$ocb_dec_loop1

DB	102,15,56,222,209
	movups	xmm1,XMMWORD[16+r11]
	mov	rax,r10

DB	102,15,56,223,215
	DB	0F3h,0C3h		;repret


global	aesni_cbc_encrypt

ALIGN	16
aesni_cbc_encrypt:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_aesni_cbc_encrypt:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



DB	243,15,30,250
	test	rdx,rdx
	jz	NEAR $L$cbc_ret

	mov	r10d,DWORD[240+rcx]
	mov	r11,rcx
	test	r9d,r9d
	jz	NEAR $L$cbc_decrypt

	movups	xmm2,XMMWORD[r8]
	mov	eax,r10d
	cmp	rdx,16
	jb	NEAR $L$cbc_enc_tail
	sub	rdx,16
	jmp	NEAR $L$cbc_enc_loop
ALIGN	16
$L$cbc_enc_loop:
	movups	xmm3,XMMWORD[rdi]
	lea	rdi,[16+rdi]

	movups	xmm0,XMMWORD[rcx]
	movups	xmm1,XMMWORD[16+rcx]
	xorps	xmm3,xmm0
	lea	rcx,[32+rcx]
	xorps	xmm2,xmm3
$L$oop_enc1_15:
DB	102,15,56,220,209
	dec	eax
	movups	xmm1,XMMWORD[rcx]
	lea	rcx,[16+rcx]
	jnz	NEAR $L$oop_enc1_15
DB	102,15,56,221,209
	mov	eax,r10d
	mov	rcx,r11
	movups	XMMWORD[rsi],xmm2
	lea	rsi,[16+rsi]
	sub	rdx,16
	jnc	NEAR $L$cbc_enc_loop
	add	rdx,16
	jnz	NEAR $L$cbc_enc_tail
	pxor	xmm0,xmm0
	pxor	xmm1,xmm1
	movups	XMMWORD[r8],xmm2
	pxor	xmm2,xmm2
	pxor	xmm3,xmm3
	jmp	NEAR $L$cbc_ret

$L$cbc_enc_tail:
	mov	rcx,rdx
	xchg	rsi,rdi
	DD	0x9066A4F3
	mov	ecx,16
	sub	rcx,rdx
	xor	eax,eax
	DD	0x9066AAF3
	lea	rdi,[((-16))+rdi]
	mov	eax,r10d
	mov	rsi,rdi
	mov	rcx,r11
	xor	rdx,rdx
	jmp	NEAR $L$cbc_enc_loop

ALIGN	16
$L$cbc_decrypt:
	cmp	rdx,16
	jne	NEAR $L$cbc_decrypt_bulk



	movdqu	xmm2,XMMWORD[rdi]
	movdqu	xmm3,XMMWORD[r8]
	movdqa	xmm4,xmm2
	movups	xmm0,XMMWORD[rcx]
	movups	xmm1,XMMWORD[16+rcx]
	lea	rcx,[32+rcx]
	xorps	xmm2,xmm0
$L$oop_dec1_16:
DB	102,15,56,222,209
	dec	r10d
	movups	xmm1,XMMWORD[rcx]
	lea	rcx,[16+rcx]
	jnz	NEAR $L$oop_dec1_16
DB	102,15,56,223,209
	pxor	xmm0,xmm0
	pxor	xmm1,xmm1
	movdqu	XMMWORD[r8],xmm4
	xorps	xmm2,xmm3
	pxor	xmm3,xmm3
	movups	XMMWORD[rsi],xmm2
	pxor	xmm2,xmm2
	jmp	NEAR $L$cbc_ret
ALIGN	16
$L$cbc_decrypt_bulk:
	lea	r11,[rsp]

	push	rbp

	sub	rsp,176
	and	rsp,-16
	movaps	XMMWORD[16+rsp],xmm6
	movaps	XMMWORD[32+rsp],xmm7
	movaps	XMMWORD[48+rsp],xmm8
	movaps	XMMWORD[64+rsp],xmm9
	movaps	XMMWORD[80+rsp],xmm10
	movaps	XMMWORD[96+rsp],xmm11
	movaps	XMMWORD[112+rsp],xmm12
	movaps	XMMWORD[128+rsp],xmm13
	movaps	XMMWORD[144+rsp],xmm14
	movaps	XMMWORD[160+rsp],xmm15
$L$cbc_decrypt_body:
	mov	rbp,rcx
	movups	xmm10,XMMWORD[r8]
	mov	eax,r10d
	cmp	rdx,0x50
	jbe	NEAR $L$cbc_dec_tail

	movups	xmm0,XMMWORD[rcx]
	movdqu	xmm2,XMMWORD[rdi]
	movdqu	xmm3,XMMWORD[16+rdi]
	movdqa	xmm11,xmm2
	movdqu	xmm4,XMMWORD[32+rdi]
	movdqa	xmm12,xmm3
	movdqu	xmm5,XMMWORD[48+rdi]
	movdqa	xmm13,xmm4
	movdqu	xmm6,XMMWORD[64+rdi]
	movdqa	xmm14,xmm5
	movdqu	xmm7,XMMWORD[80+rdi]
	movdqa	xmm15,xmm6
	mov	r9d,DWORD[((OPENSSL_ia32cap_P+4))]
	cmp	rdx,0x70
	jbe	NEAR $L$cbc_dec_six_or_seven

	and	r9d,71303168
	sub	rdx,0x50
	cmp	r9d,4194304
	je	NEAR $L$cbc_dec_loop6_enter
	sub	rdx,0x20
	lea	rcx,[112+rcx]
	jmp	NEAR $L$cbc_dec_loop8_enter
ALIGN	16
$L$cbc_dec_loop8:
	movups	XMMWORD[rsi],xmm9
	lea	rsi,[16+rsi]
$L$cbc_dec_loop8_enter:
	movdqu	xmm8,XMMWORD[96+rdi]
	pxor	xmm2,xmm0
	movdqu	xmm9,XMMWORD[112+rdi]
	pxor	xmm3,xmm0
	movups	xmm1,XMMWORD[((16-112))+rcx]
	pxor	xmm4,xmm0
	mov	rbp,-1
	cmp	rdx,0x70
	pxor	xmm5,xmm0
	pxor	xmm6,xmm0
	pxor	xmm7,xmm0
	pxor	xmm8,xmm0

DB	102,15,56,222,209
	pxor	xmm9,xmm0
	movups	xmm0,XMMWORD[((32-112))+rcx]
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
DB	102,15,56,222,241
DB	102,15,56,222,249
DB	102,68,15,56,222,193
	adc	rbp,0
	and	rbp,128
DB	102,68,15,56,222,201
	add	rbp,rdi
	movups	xmm1,XMMWORD[((48-112))+rcx]
DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
DB	102,15,56,222,240
DB	102,15,56,222,248
DB	102,68,15,56,222,192
DB	102,68,15,56,222,200
	movups	xmm0,XMMWORD[((64-112))+rcx]
	nop
DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
DB	102,15,56,222,241
DB	102,15,56,222,249
DB	102,68,15,56,222,193
DB	102,68,15,56,222,201
	movups	xmm1,XMMWORD[((80-112))+rcx]
	nop
DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
DB	102,15,56,222,240
DB	102,15,56,222,248
DB	102,68,15,56,222,192
DB	102,68,15,56,222,200
	movups	xmm0,XMMWORD[((96-112))+rcx]
	nop
DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
DB	102,15,56,222,241
DB	102,15,56,222,249
DB	102,68,15,56,222,193
DB	102,68,15,56,222,201
	movups	xmm1,XMMWORD[((112-112))+rcx]
	nop
DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
DB	102,15,56,222,240
DB	102,15,56,222,248
DB	102,68,15,56,222,192
DB	102,68,15,56,222,200
	movups	xmm0,XMMWORD[((128-112))+rcx]
	nop
DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
DB	102,15,56,222,241
DB	102,15,56,222,249
DB	102,68,15,56,222,193
DB	102,68,15,56,222,201
	movups	xmm1,XMMWORD[((144-112))+rcx]
	cmp	eax,11
DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
DB	102,15,56,222,240
DB	102,15,56,222,248
DB	102,68,15,56,222,192
DB	102,68,15,56,222,200
	movups	xmm0,XMMWORD[((160-112))+rcx]
	jb	NEAR $L$cbc_dec_done
DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
DB	102,15,56,222,241
DB	102,15,56,222,249
DB	102,68,15,56,222,193
DB	102,68,15,56,222,201
	movups	xmm1,XMMWORD[((176-112))+rcx]
	nop
DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
DB	102,15,56,222,240
DB	102,15,56,222,248
DB	102,68,15,56,222,192
DB	102,68,15,56,222,200
	movups	xmm0,XMMWORD[((192-112))+rcx]
	je	NEAR $L$cbc_dec_done
DB	102,15,56,222,209
DB	102,15,56,222,217
DB	102,15,56,222,225
DB	102,15,56,222,233
DB	102,15,56,222,241
DB	102,15,56,222,249
DB	102,68,15,56,222,193
DB	102,68,15,56,222,201
	movups	xmm1,XMMWORD[((208-112))+rcx]
	nop
DB	102,15,56,222,208
DB	102,15,56,222,216
DB	102,15,56,222,224
DB	102,15,56,222,232
DB	102,15,56,222,240
DB	102,15,56,222,248
DB	102,68,15,56,222,192
DB	102,68,15,56,222,200
	movups	xmm0,XMMWORD[((224-112))+rcx]
	jmp	NEAR $L$cbc_dec_done
ALIGN	16
$L$cbc_dec_done:
DB	102,15,56,222,209
DB	102,15,56,222,217
	pxor	xmm10,xmm0
	pxor	xmm11,xmm0
DB	102,15,56,222,225
DB	102,15,56,222,233
	pxor	xmm12,xmm0
	pxor	xmm13,xmm0
DB	102,15,56,222,241
DB	102,15,56,222,249
	pxor	xmm14,xmm0
	pxor	xmm15,xmm0
DB	102,68,15,56,222,193
DB	102,68,15,56,222,201
	movdqu	xmm1,XMMWORD[80+rdi]

DB	102,65,15,56,223,210
	movdqu	xmm10,XMMWORD[96+rdi]
	pxor	xmm1,xmm0
DB	102,65,15,56,223,219
	pxor	xmm10,xmm0
	movdqu	xmm0,XMMWORD[112+rdi]
DB	102,65,15,56,223,228
	lea	rdi,[128+rdi]
	movdqu	xmm11,XMMWORD[rbp]
DB	102,65,15,56,223,237
DB	102,65,15,56,223,246
	movdqu	xmm12,XMMWORD[16+rbp]
	movdqu	xmm13,XMMWORD[32+rbp]
DB	102,65,15,56,223,255
DB	102,68,15,56,223,193
	movdqu	xmm14,XMMWORD[48+rbp]
	movdqu	xmm15,XMMWORD[64+rbp]
DB	102,69,15,56,223,202
	movdqa	xmm10,xmm0
	movdqu	xmm1,XMMWORD[80+rbp]
	movups	xmm0,XMMWORD[((-112))+rcx]

	movups	XMMWORD[rsi],xmm2
	movdqa	xmm2,xmm11
	movups	XMMWORD[16+rsi],xmm3
	movdqa	xmm3,xmm12
	movups	XMMWORD[32+rsi],xmm4
	movdqa	xmm4,xmm13
	movups	XMMWORD[48+rsi],xmm5
	movdqa	xmm5,xmm14
	movups	XMMWORD[64+rsi],xmm6
	movdqa	xmm6,xmm15
	movups	XMMWORD[80+rsi],xmm7
	movdqa	xmm7,xmm1
	movups	XMMWORD[96+rsi],xmm8
	lea	rsi,[112+rsi]

	sub	rdx,0x80
	ja	NEAR $L$cbc_dec_loop8

	movaps	xmm2,xmm9
	lea	rcx,[((-112))+rcx]
	add	rdx,0x70
	jle	NEAR $L$cbc_dec_clear_tail_collected
	movups	XMMWORD[rsi],xmm9
	lea	rsi,[16+rsi]
	cmp	rdx,0x50
	jbe	NEAR $L$cbc_dec_tail

	movaps	xmm2,xmm11
$L$cbc_dec_six_or_seven:
	cmp	rdx,0x60
	ja	NEAR $L$cbc_dec_seven

	movaps	xmm8,xmm7
	call	_aesni_decrypt6
	pxor	xmm2,xmm10
	movaps	xmm10,xmm8
	pxor	xmm3,xmm11
	movdqu	XMMWORD[rsi],xmm2
	pxor	xmm4,xmm12
	movdqu	XMMWORD[16+rsi],xmm3
	pxor	xmm3,xmm3
	pxor	xmm5,xmm13
	movdqu	XMMWORD[32+rsi],xmm4
	pxor	xmm4,xmm4
	pxor	xmm6,xmm14
	movdqu	XMMWORD[48+rsi],xmm5
	pxor	xmm5,xmm5
	pxor	xmm7,xmm15
	movdqu	XMMWORD[64+rsi],xmm6
	pxor	xmm6,xmm6
	lea	rsi,[80+rsi]
	movdqa	xmm2,xmm7
	pxor	xmm7,xmm7
	jmp	NEAR $L$cbc_dec_tail_collected

ALIGN	16
$L$cbc_dec_seven:
	movups	xmm8,XMMWORD[96+rdi]
	xorps	xmm9,xmm9
	call	_aesni_decrypt8
	movups	xmm9,XMMWORD[80+rdi]
	pxor	xmm2,xmm10
	movups	xmm10,XMMWORD[96+rdi]
	pxor	xmm3,xmm11
	movdqu	XMMWORD[rsi],xmm2
	pxor	xmm4,xmm12
	movdqu	XMMWORD[16+rsi],xmm3
	pxor	xmm3,xmm3
	pxor	xmm5,xmm13
	movdqu	XMMWORD[32+rsi],xmm4
	pxor	xmm4,xmm4
	pxor	xmm6,xmm14
	movdqu	XMMWORD[48+rsi],xmm5
	pxor	xmm5,xmm5
	pxor	xmm7,xmm15
	movdqu	XMMWORD[64+rsi],xmm6
	pxor	xmm6,xmm6
	pxor	xmm8,xmm9
	movdqu	XMMWORD[80+rsi],xmm7
	pxor	xmm7,xmm7
	lea	rsi,[96+rsi]
	movdqa	xmm2,xmm8
	pxor	xmm8,xmm8
	pxor	xmm9,xmm9
	jmp	NEAR $L$cbc_dec_tail_collected

ALIGN	16
$L$cbc_dec_loop6:
	movups	XMMWORD[rsi],xmm7
	lea	rsi,[16+rsi]
	movdqu	xmm2,XMMWORD[rdi]
	movdqu	xmm3,XMMWORD[16+rdi]
	movdqa	xmm11,xmm2
	movdqu	xmm4,XMMWORD[32+rdi]
	movdqa	xmm12,xmm3
	movdqu	xmm5,XMMWORD[48+rdi]
	movdqa	xmm13,xmm4
	movdqu	xmm6,XMMWORD[64+rdi]
	movdqa	xmm14,xmm5
	movdqu	xmm7,XMMWORD[80+rdi]
	movdqa	xmm15,xmm6
$L$cbc_dec_loop6_enter:
	lea	rdi,[96+rdi]
	movdqa	xmm8,xmm7

	call	_aesni_decrypt6

	pxor	xmm2,xmm10
	movdqa	xmm10,xmm8
	pxor	xmm3,xmm11
	movdqu	XMMWORD[rsi],xmm2
	pxor	xmm4,xmm12
	movdqu	XMMWORD[16+rsi],xmm3
	pxor	xmm5,xmm13
	movdqu	XMMWORD[32+rsi],xmm4
	pxor	xmm6,xmm14
	mov	rcx,rbp
	movdqu	XMMWORD[48+rsi],xmm5
	pxor	xmm7,xmm15
	mov	eax,r10d
	movdqu	XMMWORD[64+rsi],xmm6
	lea	rsi,[80+rsi]
	sub	rdx,0x60
	ja	NEAR $L$cbc_dec_loop6

	movdqa	xmm2,xmm7
	add	rdx,0x50
	jle	NEAR $L$cbc_dec_clear_tail_collected
	movups	XMMWORD[rsi],xmm7
	lea	rsi,[16+rsi]

$L$cbc_dec_tail:
	movups	xmm2,XMMWORD[rdi]
	sub	rdx,0x10
	jbe	NEAR $L$cbc_dec_one

	movups	xmm3,XMMWORD[16+rdi]
	movaps	xmm11,xmm2
	sub	rdx,0x10
	jbe	NEAR $L$cbc_dec_two

	movups	xmm4,XMMWORD[32+rdi]
	movaps	xmm12,xmm3
	sub	rdx,0x10
	jbe	NEAR $L$cbc_dec_three

	movups	xmm5,XMMWORD[48+rdi]
	movaps	xmm13,xmm4
	sub	rdx,0x10
	jbe	NEAR $L$cbc_dec_four

	movups	xmm6,XMMWORD[64+rdi]
	movaps	xmm14,xmm5
	movaps	xmm15,xmm6
	xorps	xmm7,xmm7
	call	_aesni_decrypt6
	pxor	xmm2,xmm10
	movaps	xmm10,xmm15
	pxor	xmm3,xmm11
	movdqu	XMMWORD[rsi],xmm2
	pxor	xmm4,xmm12
	movdqu	XMMWORD[16+rsi],xmm3
	pxor	xmm3,xmm3
	pxor	xmm5,xmm13
	movdqu	XMMWORD[32+rsi],xmm4
	pxor	xmm4,xmm4
	pxor	xmm6,xmm14
	movdqu	XMMWORD[48+rsi],xmm5
	pxor	xmm5,xmm5
	lea	rsi,[64+rsi]
	movdqa	xmm2,xmm6
	pxor	xmm6,xmm6
	pxor	xmm7,xmm7
	sub	rdx,0x10
	jmp	NEAR $L$cbc_dec_tail_collected

ALIGN	16
$L$cbc_dec_one:
	movaps	xmm11,xmm2
	movups	xmm0,XMMWORD[rcx]
	movups	xmm1,XMMWORD[16+rcx]
	lea	rcx,[32+rcx]
	xorps	xmm2,xmm0
$L$oop_dec1_17:
DB	102,15,56,222,209
	dec	eax
	movups	xmm1,XMMWORD[rcx]
	lea	rcx,[16+rcx]
	jnz	NEAR $L$oop_dec1_17
DB	102,15,56,223,209
	xorps	xmm2,xmm10
	movaps	xmm10,xmm11
	jmp	NEAR $L$cbc_dec_tail_collected
ALIGN	16
$L$cbc_dec_two:
	movaps	xmm12,xmm3
	call	_aesni_decrypt2
	pxor	xmm2,xmm10
	movaps	xmm10,xmm12
	pxor	xmm3,xmm11
	movdqu	XMMWORD[rsi],xmm2
	movdqa	xmm2,xmm3
	pxor	xmm3,xmm3
	lea	rsi,[16+rsi]
	jmp	NEAR $L$cbc_dec_tail_collected
ALIGN	16
$L$cbc_dec_three:
	movaps	xmm13,xmm4
	call	_aesni_decrypt3
	pxor	xmm2,xmm10
	movaps	xmm10,xmm13
	pxor	xmm3,xmm11
	movdqu	XMMWORD[rsi],xmm2
	pxor	xmm4,xmm12
	movdqu	XMMWORD[16+rsi],xmm3
	pxor	xmm3,xmm3
	movdqa	xmm2,xmm4
	pxor	xmm4,xmm4
	lea	rsi,[32+rsi]
	jmp	NEAR $L$cbc_dec_tail_collected
ALIGN	16
$L$cbc_dec_four:
	movaps	xmm14,xmm5
	call	_aesni_decrypt4
	pxor	xmm2,xmm10
	movaps	xmm10,xmm14
	pxor	xmm3,xmm11
	movdqu	XMMWORD[rsi],xmm2
	pxor	xmm4,xmm12
	movdqu	XMMWORD[16+rsi],xmm3
	pxor	xmm3,xmm3
	pxor	xmm5,xmm13
	movdqu	XMMWORD[32+rsi],xmm4
	pxor	xmm4,xmm4
	movdqa	xmm2,xmm5
	pxor	xmm5,xmm5
	lea	rsi,[48+rsi]
	jmp	NEAR $L$cbc_dec_tail_collected

ALIGN	16
$L$cbc_dec_clear_tail_collected:
	pxor	xmm3,xmm3
	pxor	xmm4,xmm4
	pxor	xmm5,xmm5
$L$cbc_dec_tail_collected:
	movups	XMMWORD[r8],xmm10
	and	rdx,15
	jnz	NEAR $L$cbc_dec_tail_partial
	movups	XMMWORD[rsi],xmm2
	pxor	xmm2,xmm2
	jmp	NEAR $L$cbc_dec_ret
ALIGN	16
$L$cbc_dec_tail_partial:
	movaps	XMMWORD[rsp],xmm2
	pxor	xmm2,xmm2
	mov	rcx,16
	mov	rdi,rsi
	sub	rcx,rdx
	lea	rsi,[rsp]
	DD	0x9066A4F3
	movdqa	XMMWORD[rsp],xmm2

$L$cbc_dec_ret:
	xorps	xmm0,xmm0
	pxor	xmm1,xmm1
	movaps	xmm6,XMMWORD[16+rsp]
	movaps	XMMWORD[16+rsp],xmm0
	movaps	xmm7,XMMWORD[32+rsp]
	movaps	XMMWORD[32+rsp],xmm0
	movaps	xmm8,XMMWORD[48+rsp]
	movaps	XMMWORD[48+rsp],xmm0
	movaps	xmm9,XMMWORD[64+rsp]
	movaps	XMMWORD[64+rsp],xmm0
	movaps	xmm10,XMMWORD[80+rsp]
	movaps	XMMWORD[80+rsp],xmm0
	movaps	xmm11,XMMWORD[96+rsp]
	movaps	XMMWORD[96+rsp],xmm0
	movaps	xmm12,XMMWORD[112+rsp]
	movaps	XMMWORD[112+rsp],xmm0
	movaps	xmm13,XMMWORD[128+rsp]
	movaps	XMMWORD[128+rsp],xmm0
	movaps	xmm14,XMMWORD[144+rsp]
	movaps	XMMWORD[144+rsp],xmm0
	movaps	xmm15,XMMWORD[160+rsp]
	movaps	XMMWORD[160+rsp],xmm0
	mov	rbp,QWORD[((-8))+r11]

	lea	rsp,[r11]

$L$cbc_ret:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_aesni_cbc_encrypt:
global	aesni_set_decrypt_key

ALIGN	16
aesni_set_decrypt_key:

DB	0x48,0x83,0xEC,0x08

	call	__aesni_set_encrypt_key
	shl	edx,4
	test	eax,eax
	jnz	NEAR $L$dec_key_ret
	lea	rcx,[16+rdx*1+r8]

	movups	xmm0,XMMWORD[r8]
	movups	xmm1,XMMWORD[rcx]
	movups	XMMWORD[rcx],xmm0
	movups	XMMWORD[r8],xmm1
	lea	r8,[16+r8]
	lea	rcx,[((-16))+rcx]

$L$dec_key_inverse:
	movups	xmm0,XMMWORD[r8]
	movups	xmm1,XMMWORD[rcx]
DB	102,15,56,219,192
DB	102,15,56,219,201
	lea	r8,[16+r8]
	lea	rcx,[((-16))+rcx]
	movups	XMMWORD[16+rcx],xmm0
	movups	XMMWORD[(-16)+r8],xmm1
	cmp	rcx,r8
	ja	NEAR $L$dec_key_inverse

	movups	xmm0,XMMWORD[r8]
DB	102,15,56,219,192
	pxor	xmm1,xmm1
	movups	XMMWORD[rcx],xmm0
	pxor	xmm0,xmm0
$L$dec_key_ret:
	add	rsp,8

	DB	0F3h,0C3h		;repret

$L$SEH_end_set_decrypt_key:

global	aesni_set_encrypt_key

ALIGN	16
aesni_set_encrypt_key:
__aesni_set_encrypt_key:

DB	0x48,0x83,0xEC,0x08

	mov	rax,-1
	test	rcx,rcx
	jz	NEAR $L$enc_key_ret
	test	r8,r8
	jz	NEAR $L$enc_key_ret

	mov	r10d,268437504
	movups	xmm0,XMMWORD[rcx]
	xorps	xmm4,xmm4
	and	r10d,DWORD[((OPENSSL_ia32cap_P+4))]
	lea	rax,[16+r8]
	cmp	edx,256
	je	NEAR $L$14rounds
	cmp	edx,192
	je	NEAR $L$12rounds
	cmp	edx,128
	jne	NEAR $L$bad_keybits

$L$10rounds:
	mov	edx,9
	cmp	r10d,268435456
	je	NEAR $L$10rounds_alt

	movups	XMMWORD[r8],xmm0
DB	102,15,58,223,200,1
	call	$L$key_expansion_128_cold
DB	102,15,58,223,200,2
	call	$L$key_expansion_128
DB	102,15,58,223,200,4
	call	$L$key_expansion_128
DB	102,15,58,223,200,8
	call	$L$key_expansion_128
DB	102,15,58,223,200,16
	call	$L$key_expansion_128
DB	102,15,58,223,200,32
	call	$L$key_expansion_128
DB	102,15,58,223,200,64
	call	$L$key_expansion_128
DB	102,15,58,223,200,128
	call	$L$key_expansion_128
DB	102,15,58,223,200,27
	call	$L$key_expansion_128
DB	102,15,58,223,200,54
	call	$L$key_expansion_128
	movups	XMMWORD[rax],xmm0
	mov	DWORD[80+rax],edx
	xor	eax,eax
	jmp	NEAR $L$enc_key_ret

ALIGN	16
$L$10rounds_alt:
	movdqa	xmm5,XMMWORD[$L$key_rotate]
	mov	r10d,8
	movdqa	xmm4,XMMWORD[$L$key_rcon1]
	movdqa	xmm2,xmm0
	movdqu	XMMWORD[r8],xmm0
	jmp	NEAR $L$oop_key128

ALIGN	16
$L$oop_key128:
DB	102,15,56,0,197
DB	102,15,56,221,196
	pslld	xmm4,1
	lea	rax,[16+rax]

	movdqa	xmm3,xmm2
	pslldq	xmm2,4
	pxor	xmm3,xmm2
	pslldq	xmm2,4
	pxor	xmm3,xmm2
	pslldq	xmm2,4
	pxor	xmm2,xmm3

	pxor	xmm0,xmm2
	movdqu	XMMWORD[(-16)+rax],xmm0
	movdqa	xmm2,xmm0

	dec	r10d
	jnz	NEAR $L$oop_key128

	movdqa	xmm4,XMMWORD[$L$key_rcon1b]

DB	102,15,56,0,197
DB	102,15,56,221,196
	pslld	xmm4,1

	movdqa	xmm3,xmm2
	pslldq	xmm2,4
	pxor	xmm3,xmm2
	pslldq	xmm2,4
	pxor	xmm3,xmm2
	pslldq	xmm2,4
	pxor	xmm2,xmm3

	pxor	xmm0,xmm2
	movdqu	XMMWORD[rax],xmm0

	movdqa	xmm2,xmm0
DB	102,15,56,0,197
DB	102,15,56,221,196

	movdqa	xmm3,xmm2
	pslldq	xmm2,4
	pxor	xmm3,xmm2
	pslldq	xmm2,4
	pxor	xmm3,xmm2
	pslldq	xmm2,4
	pxor	xmm2,xmm3

	pxor	xmm0,xmm2
	movdqu	XMMWORD[16+rax],xmm0

	mov	DWORD[96+rax],edx
	xor	eax,eax
	jmp	NEAR $L$enc_key_ret

ALIGN	16
$L$12rounds:
	movq	xmm2,QWORD[16+rcx]
	mov	edx,11
	cmp	r10d,268435456
	je	NEAR $L$12rounds_alt

	movups	XMMWORD[r8],xmm0
DB	102,15,58,223,202,1
	call	$L$key_expansion_192a_cold
DB	102,15,58,223,202,2
	call	$L$key_expansion_192b
DB	102,15,58,223,202,4
	call	$L$key_expansion_192a
DB	102,15,58,223,202,8
	call	$L$key_expansion_192b
DB	102,15,58,223,202,16
	call	$L$key_expansion_192a
DB	102,15,58,223,202,32
	call	$L$key_expansion_192b
DB	102,15,58,223,202,64
	call	$L$key_expansion_192a
DB	102,15,58,223,202,128
	call	$L$key_expansion_192b
	movups	XMMWORD[rax],xmm0
	mov	DWORD[48+rax],edx
	xor	rax,rax
	jmp	NEAR $L$enc_key_ret

ALIGN	16
$L$12rounds_alt:
	movdqa	xmm5,XMMWORD[$L$key_rotate192]
	movdqa	xmm4,XMMWORD[$L$key_rcon1]
	mov	r10d,8
	movdqu	XMMWORD[r8],xmm0
	jmp	NEAR $L$oop_key192

ALIGN	16
$L$oop_key192:
	movq	QWORD[rax],xmm2
	movdqa	xmm1,xmm2
DB	102,15,56,0,213
DB	102,15,56,221,212
	pslld	xmm4,1
	lea	rax,[24+rax]

	movdqa	xmm3,xmm0
	pslldq	xmm0,4
	pxor	xmm3,xmm0
	pslldq	xmm0,4
	pxor	xmm3,xmm0
	pslldq	xmm0,4
	pxor	xmm0,xmm3

	pshufd	xmm3,xmm0,0xff
	pxor	xmm3,xmm1
	pslldq	xmm1,4
	pxor	xmm3,xmm1

	pxor	xmm0,xmm2
	pxor	xmm2,xmm3
	movdqu	XMMWORD[(-16)+rax],xmm0

	dec	r10d
	jnz	NEAR $L$oop_key192

	mov	DWORD[32+rax],edx
	xor	eax,eax
	jmp	NEAR $L$enc_key_ret

ALIGN	16
$L$14rounds:
	movups	xmm2,XMMWORD[16+rcx]
	mov	edx,13
	lea	rax,[16+rax]
	cmp	r10d,268435456
	je	NEAR $L$14rounds_alt

	movups	XMMWORD[r8],xmm0
	movups	XMMWORD[16+r8],xmm2
DB	102,15,58,223,202,1
	call	$L$key_expansion_256a_cold
DB	102,15,58,223,200,1
	call	$L$key_expansion_256b
DB	102,15,58,223,202,2
	call	$L$key_expansion_256a
DB	102,15,58,223,200,2
	call	$L$key_expansion_256b
DB	102,15,58,223,202,4
	call	$L$key_expansion_256a
DB	102,15,58,223,200,4
	call	$L$key_expansion_256b
DB	102,15,58,223,202,8
	call	$L$key_expansion_256a
DB	102,15,58,223,200,8
	call	$L$key_expansion_256b
DB	102,15,58,223,202,16
	call	$L$key_expansion_256a
DB	102,15,58,223,200,16
	call	$L$key_expansion_256b
DB	102,15,58,223,202,32
	call	$L$key_expansion_256a
DB	102,15,58,223,200,32
	call	$L$key_expansion_256b
DB	102,15,58,223,202,64
	call	$L$key_expansion_256a
	movups	XMMWORD[rax],xmm0
	mov	DWORD[16+rax],edx
	xor	rax,rax
	jmp	NEAR $L$enc_key_ret

ALIGN	16
$L$14rounds_alt:
	movdqa	xmm5,XMMWORD[$L$key_rotate]
	movdqa	xmm4,XMMWORD[$L$key_rcon1]
	mov	r10d,7
	movdqu	XMMWORD[r8],xmm0
	movdqa	xmm1,xmm2
	movdqu	XMMWORD[16+r8],xmm2
	jmp	NEAR $L$oop_key256

ALIGN	16
$L$oop_key256:
DB	102,15,56,0,213
DB	102,15,56,221,212

	movdqa	xmm3,xmm0
	pslldq	xmm0,4
	pxor	xmm3,xmm0
	pslldq	xmm0,4
	pxor	xmm3,xmm0
	pslldq	xmm0,4
	pxor	xmm0,xmm3
	pslld	xmm4,1

	pxor	xmm0,xmm2
	movdqu	XMMWORD[rax],xmm0

	dec	r10d
	jz	NEAR $L$done_key256

	pshufd	xmm2,xmm0,0xff
	pxor	xmm3,xmm3
DB	102,15,56,221,211

	movdqa	xmm3,xmm1
	pslldq	xmm1,4
	pxor	xmm3,xmm1
	pslldq	xmm1,4
	pxor	xmm3,xmm1
	pslldq	xmm1,4
	pxor	xmm1,xmm3

	pxor	xmm2,xmm1
	movdqu	XMMWORD[16+rax],xmm2
	lea	rax,[32+rax]
	movdqa	xmm1,xmm2

	jmp	NEAR $L$oop_key256

$L$done_key256:
	mov	DWORD[16+rax],edx
	xor	eax,eax
	jmp	NEAR $L$enc_key_ret

ALIGN	16
$L$bad_keybits:
	mov	rax,-2
$L$enc_key_ret:
	pxor	xmm0,xmm0
	pxor	xmm1,xmm1
	pxor	xmm2,xmm2
	pxor	xmm3,xmm3
	pxor	xmm4,xmm4
	pxor	xmm5,xmm5
	add	rsp,8

	DB	0F3h,0C3h		;repret
$L$SEH_end_set_encrypt_key:

ALIGN	16
$L$key_expansion_128:
	movups	XMMWORD[rax],xmm0
	lea	rax,[16+rax]
$L$key_expansion_128_cold:
	shufps	xmm4,xmm0,16
	xorps	xmm0,xmm4
	shufps	xmm4,xmm0,140
	xorps	xmm0,xmm4
	shufps	xmm1,xmm1,255
	xorps	xmm0,xmm1
	DB	0F3h,0C3h		;repret

ALIGN	16
$L$key_expansion_192a:
	movups	XMMWORD[rax],xmm0
	lea	rax,[16+rax]
$L$key_expansion_192a_cold:
	movaps	xmm5,xmm2
$L$key_expansion_192b_warm:
	shufps	xmm4,xmm0,16
	movdqa	xmm3,xmm2
	xorps	xmm0,xmm4
	shufps	xmm4,xmm0,140
	pslldq	xmm3,4
	xorps	xmm0,xmm4
	pshufd	xmm1,xmm1,85
	pxor	xmm2,xmm3
	pxor	xmm0,xmm1
	pshufd	xmm3,xmm0,255
	pxor	xmm2,xmm3
	DB	0F3h,0C3h		;repret

ALIGN	16
$L$key_expansion_192b:
	movaps	xmm3,xmm0
	shufps	xmm5,xmm0,68
	movups	XMMWORD[rax],xmm5
	shufps	xmm3,xmm2,78
	movups	XMMWORD[16+rax],xmm3
	lea	rax,[32+rax]
	jmp	NEAR $L$key_expansion_192b_warm

ALIGN	16
$L$key_expansion_256a:
	movups	XMMWORD[rax],xmm2
	lea	rax,[16+rax]
$L$key_expansion_256a_cold:
	shufps	xmm4,xmm0,16
	xorps	xmm0,xmm4
	shufps	xmm4,xmm0,140
	xorps	xmm0,xmm4
	shufps	xmm1,xmm1,255
	xorps	xmm0,xmm1
	DB	0F3h,0C3h		;repret

ALIGN	16
$L$key_expansion_256b:
	movups	XMMWORD[rax],xmm0
	lea	rax,[16+rax]

	shufps	xmm4,xmm2,16
	xorps	xmm2,xmm4
	shufps	xmm4,xmm2,140
	xorps	xmm2,xmm4
	shufps	xmm1,xmm1,170
	xorps	xmm2,xmm1
	DB	0F3h,0C3h		;repret



ALIGN	64
$L$bswap_mask:
DB	15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
$L$increment32:
	DD	6,6,6,0
$L$increment64:
	DD	1,0,0,0
$L$xts_magic:
	DD	0x87,0,1,0
$L$increment1:
DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
$L$key_rotate:
	DD	0x0c0f0e0d,0x0c0f0e0d,0x0c0f0e0d,0x0c0f0e0d
$L$key_rotate192:
	DD	0x04070605,0x04070605,0x04070605,0x04070605
$L$key_rcon1:
	DD	1,1,1,1
$L$key_rcon1b:
	DD	0x1b,0x1b,0x1b,0x1b

DB	65,69,83,32,102,111,114,32,73,110,116,101,108,32,65,69
DB	83,45,78,73,44,32,67,82,89,80,84,79,71,65,77,83
DB	32,98,121,32,60,97,112,112,114,111,64,111,112,101,110,115
DB	115,108,46,111,114,103,62,0
ALIGN	64
EXTERN	__imp_RtlVirtualUnwind

ALIGN	16
ecb_ccm64_se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$common_seh_tail

	mov	rax,QWORD[152+r8]

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$common_seh_tail

	lea	rsi,[rax]
	lea	rdi,[512+r8]
	mov	ecx,8
	DD	0xa548f3fc
	lea	rax,[88+rax]

	jmp	NEAR $L$common_seh_tail



ALIGN	16
ctr_xts_se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$common_seh_tail

	mov	rax,QWORD[152+r8]

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$common_seh_tail

	mov	rax,QWORD[208+r8]

	lea	rsi,[((-168))+rax]
	lea	rdi,[512+r8]
	mov	ecx,20
	DD	0xa548f3fc

	mov	rbp,QWORD[((-8))+rax]
	mov	QWORD[160+r8],rbp
	jmp	NEAR $L$common_seh_tail



ALIGN	16
ocb_se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$common_seh_tail

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$common_seh_tail

	mov	r10d,DWORD[8+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$ocb_no_xmm

	mov	rax,QWORD[152+r8]

	lea	rsi,[rax]
	lea	rdi,[512+r8]
	mov	ecx,20
	DD	0xa548f3fc
	lea	rax,[((160+40))+rax]

$L$ocb_no_xmm:
	mov	rbx,QWORD[((-8))+rax]
	mov	rbp,QWORD[((-16))+rax]
	mov	r12,QWORD[((-24))+rax]
	mov	r13,QWORD[((-32))+rax]
	mov	r14,QWORD[((-40))+rax]

	mov	QWORD[144+r8],rbx
	mov	QWORD[160+r8],rbp
	mov	QWORD[216+r8],r12
	mov	QWORD[224+r8],r13
	mov	QWORD[232+r8],r14

	jmp	NEAR $L$common_seh_tail


ALIGN	16
cbc_se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[152+r8]
	mov	rbx,QWORD[248+r8]

	lea	r10,[$L$cbc_decrypt_bulk]
	cmp	rbx,r10
	jb	NEAR $L$common_seh_tail

	mov	rax,QWORD[120+r8]

	lea	r10,[$L$cbc_decrypt_body]
	cmp	rbx,r10
	jb	NEAR $L$common_seh_tail

	mov	rax,QWORD[152+r8]

	lea	r10,[$L$cbc_ret]
	cmp	rbx,r10
	jae	NEAR $L$common_seh_tail

	lea	rsi,[16+rax]
	lea	rdi,[512+r8]
	mov	ecx,20
	DD	0xa548f3fc

	mov	rax,QWORD[208+r8]

	mov	rbp,QWORD[((-8))+rax]
	mov	QWORD[160+r8],rbp

$L$common_seh_tail:
	mov	rdi,QWORD[8+rax]
	mov	rsi,QWORD[16+rax]
	mov	QWORD[152+r8],rax
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi

	mov	rdi,QWORD[40+r9]
	mov	rsi,r8
	mov	ecx,154
	DD	0xa548f3fc

	mov	rsi,r9
	xor	rcx,rcx
	mov	rdx,QWORD[8+rsi]
	mov	r8,QWORD[rsi]
	mov	r9,QWORD[16+rsi]
	mov	r10,QWORD[40+rsi]
	lea	r11,[56+rsi]
	lea	r12,[24+rsi]
	mov	QWORD[32+rsp],r10
	mov	QWORD[40+rsp],r11
	mov	QWORD[48+rsp],r12
	mov	QWORD[56+rsp],rcx
	call	QWORD[__imp_RtlVirtualUnwind]

	mov	eax,1
	add	rsp,64
	popfq
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	pop	rbx
	pop	rdi
	pop	rsi
	DB	0F3h,0C3h		;repret


section	.pdata rdata align=4
ALIGN	4
	DD	$L$SEH_begin_aesni_ecb_encrypt wrt ..imagebase
	DD	$L$SEH_end_aesni_ecb_encrypt wrt ..imagebase
	DD	$L$SEH_info_ecb wrt ..imagebase

	DD	$L$SEH_begin_aesni_ccm64_encrypt_blocks wrt ..imagebase
	DD	$L$SEH_end_aesni_ccm64_encrypt_blocks wrt ..imagebase
	DD	$L$SEH_info_ccm64_enc wrt ..imagebase

	DD	$L$SEH_begin_aesni_ccm64_decrypt_blocks wrt ..imagebase
	DD	$L$SEH_end_aesni_ccm64_decrypt_blocks wrt ..imagebase
	DD	$L$SEH_info_ccm64_dec wrt ..imagebase

	DD	$L$SEH_begin_aesni_ctr32_encrypt_blocks wrt ..imagebase
	DD	$L$SEH_end_aesni_ctr32_encrypt_blocks wrt ..imagebase
	DD	$L$SEH_info_ctr32 wrt ..imagebase

	DD	$L$SEH_begin_aesni_xts_encrypt wrt ..imagebase
	DD	$L$SEH_end_aesni_xts_encrypt wrt ..imagebase
	DD	$L$SEH_info_xts_enc wrt ..imagebase

	DD	$L$SEH_begin_aesni_xts_decrypt wrt ..imagebase
	DD	$L$SEH_end_aesni_xts_decrypt wrt ..imagebase
	DD	$L$SEH_info_xts_dec wrt ..imagebase

	DD	$L$SEH_begin_aesni_ocb_encrypt wrt ..imagebase
	DD	$L$SEH_end_aesni_ocb_encrypt wrt ..imagebase
	DD	$L$SEH_info_ocb_enc wrt ..imagebase

	DD	$L$SEH_begin_aesni_ocb_decrypt wrt ..imagebase
	DD	$L$SEH_end_aesni_ocb_decrypt wrt ..imagebase
	DD	$L$SEH_info_ocb_dec wrt ..imagebase
	DD	$L$SEH_begin_aesni_cbc_encrypt wrt ..imagebase
	DD	$L$SEH_end_aesni_cbc_encrypt wrt ..imagebase
	DD	$L$SEH_info_cbc wrt ..imagebase

	DD	aesni_set_decrypt_key wrt ..imagebase
	DD	$L$SEH_end_set_decrypt_key wrt ..imagebase
	DD	$L$SEH_info_key wrt ..imagebase

	DD	aesni_set_encrypt_key wrt ..imagebase
	DD	$L$SEH_end_set_encrypt_key wrt ..imagebase
	DD	$L$SEH_info_key wrt ..imagebase
section	.xdata rdata align=8
ALIGN	8
$L$SEH_info_ecb:
DB	9,0,0,0
	DD	ecb_ccm64_se_handler wrt ..imagebase
	DD	$L$ecb_enc_body wrt ..imagebase,$L$ecb_enc_ret wrt ..imagebase
$L$SEH_info_ccm64_enc:
DB	9,0,0,0
	DD	ecb_ccm64_se_handler wrt ..imagebase
	DD	$L$ccm64_enc_body wrt ..imagebase,$L$ccm64_enc_ret wrt ..imagebase
$L$SEH_info_ccm64_dec:
DB	9,0,0,0
	DD	ecb_ccm64_se_handler wrt ..imagebase
	DD	$L$ccm64_dec_body wrt ..imagebase,$L$ccm64_dec_ret wrt ..imagebase
$L$SEH_info_ctr32:
DB	9,0,0,0
	DD	ctr_xts_se_handler wrt ..imagebase
	DD	$L$ctr32_body wrt ..imagebase,$L$ctr32_epilogue wrt ..imagebase
$L$SEH_info_xts_enc:
DB	9,0,0,0
	DD	ctr_xts_se_handler wrt ..imagebase
	DD	$L$xts_enc_body wrt ..imagebase,$L$xts_enc_epilogue wrt ..imagebase
$L$SEH_info_xts_dec:
DB	9,0,0,0
	DD	ctr_xts_se_handler wrt ..imagebase
	DD	$L$xts_dec_body wrt ..imagebase,$L$xts_dec_epilogue wrt ..imagebase
$L$SEH_info_ocb_enc:
DB	9,0,0,0
	DD	ocb_se_handler wrt ..imagebase
	DD	$L$ocb_enc_body wrt ..imagebase,$L$ocb_enc_epilogue wrt ..imagebase
	DD	$L$ocb_enc_pop wrt ..imagebase
	DD	0
$L$SEH_info_ocb_dec:
DB	9,0,0,0
	DD	ocb_se_handler wrt ..imagebase
	DD	$L$ocb_dec_body wrt ..imagebase,$L$ocb_dec_epilogue wrt ..imagebase
	DD	$L$ocb_dec_pop wrt ..imagebase
	DD	0
$L$SEH_info_cbc:
DB	9,0,0,0
	DD	cbc_se_handler wrt ..imagebase
$L$SEH_info_key:
DB	0x01,0x04,0x01,0x00
DB	0x04,0x02,0x00,0x00
                                                                                                                                                                                                                                                                                                                                         node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/aes/bsaes-x86_64.asm                0000664 0000000 0000000 00000145431 14746647661 0027331 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        default	rel
%define XMMWORD
%define YMMWORD
%define ZMMWORD
section	.text code align=64


EXTERN	asm_AES_encrypt
EXTERN	asm_AES_decrypt


ALIGN	64
_bsaes_encrypt8:

	lea	r11,[$L$BS0]

	movdqa	xmm8,XMMWORD[rax]
	lea	rax,[16+rax]
	movdqa	xmm7,XMMWORD[80+r11]
	pxor	xmm15,xmm8
	pxor	xmm0,xmm8
	pxor	xmm1,xmm8
	pxor	xmm2,xmm8
DB	102,68,15,56,0,255
DB	102,15,56,0,199
	pxor	xmm3,xmm8
	pxor	xmm4,xmm8
DB	102,15,56,0,207
DB	102,15,56,0,215
	pxor	xmm5,xmm8
	pxor	xmm6,xmm8
DB	102,15,56,0,223
DB	102,15,56,0,231
DB	102,15,56,0,239
DB	102,15,56,0,247
_bsaes_encrypt8_bitslice:
	movdqa	xmm7,XMMWORD[r11]
	movdqa	xmm8,XMMWORD[16+r11]
	movdqa	xmm9,xmm5
	psrlq	xmm5,1
	movdqa	xmm10,xmm3
	psrlq	xmm3,1
	pxor	xmm5,xmm6
	pxor	xmm3,xmm4
	pand	xmm5,xmm7
	pand	xmm3,xmm7
	pxor	xmm6,xmm5
	psllq	xmm5,1
	pxor	xmm4,xmm3
	psllq	xmm3,1
	pxor	xmm5,xmm9
	pxor	xmm3,xmm10
	movdqa	xmm9,xmm1
	psrlq	xmm1,1
	movdqa	xmm10,xmm15
	psrlq	xmm15,1
	pxor	xmm1,xmm2
	pxor	xmm15,xmm0
	pand	xmm1,xmm7
	pand	xmm15,xmm7
	pxor	xmm2,xmm1
	psllq	xmm1,1
	pxor	xmm0,xmm15
	psllq	xmm15,1
	pxor	xmm1,xmm9
	pxor	xmm15,xmm10
	movdqa	xmm7,XMMWORD[32+r11]
	movdqa	xmm9,xmm4
	psrlq	xmm4,2
	movdqa	xmm10,xmm3
	psrlq	xmm3,2
	pxor	xmm4,xmm6
	pxor	xmm3,xmm5
	pand	xmm4,xmm8
	pand	xmm3,xmm8
	pxor	xmm6,xmm4
	psllq	xmm4,2
	pxor	xmm5,xmm3
	psllq	xmm3,2
	pxor	xmm4,xmm9
	pxor	xmm3,xmm10
	movdqa	xmm9,xmm0
	psrlq	xmm0,2
	movdqa	xmm10,xmm15
	psrlq	xmm15,2
	pxor	xmm0,xmm2
	pxor	xmm15,xmm1
	pand	xmm0,xmm8
	pand	xmm15,xmm8
	pxor	xmm2,xmm0
	psllq	xmm0,2
	pxor	xmm1,xmm15
	psllq	xmm15,2
	pxor	xmm0,xmm9
	pxor	xmm15,xmm10
	movdqa	xmm9,xmm2
	psrlq	xmm2,4
	movdqa	xmm10,xmm1
	psrlq	xmm1,4
	pxor	xmm2,xmm6
	pxor	xmm1,xmm5
	pand	xmm2,xmm7
	pand	xmm1,xmm7
	pxor	xmm6,xmm2
	psllq	xmm2,4
	pxor	xmm5,xmm1
	psllq	xmm1,4
	pxor	xmm2,xmm9
	pxor	xmm1,xmm10
	movdqa	xmm9,xmm0
	psrlq	xmm0,4
	movdqa	xmm10,xmm15
	psrlq	xmm15,4
	pxor	xmm0,xmm4
	pxor	xmm15,xmm3
	pand	xmm0,xmm7
	pand	xmm15,xmm7
	pxor	xmm4,xmm0
	psllq	xmm0,4
	pxor	xmm3,xmm15
	psllq	xmm15,4
	pxor	xmm0,xmm9
	pxor	xmm15,xmm10
	dec	r10d
	jmp	NEAR $L$enc_sbox
ALIGN	16
$L$enc_loop:
	pxor	xmm15,XMMWORD[rax]
	pxor	xmm0,XMMWORD[16+rax]
	pxor	xmm1,XMMWORD[32+rax]
	pxor	xmm2,XMMWORD[48+rax]
DB	102,68,15,56,0,255
DB	102,15,56,0,199
	pxor	xmm3,XMMWORD[64+rax]
	pxor	xmm4,XMMWORD[80+rax]
DB	102,15,56,0,207
DB	102,15,56,0,215
	pxor	xmm5,XMMWORD[96+rax]
	pxor	xmm6,XMMWORD[112+rax]
DB	102,15,56,0,223
DB	102,15,56,0,231
DB	102,15,56,0,239
DB	102,15,56,0,247
	lea	rax,[128+rax]
$L$enc_sbox:
	pxor	xmm4,xmm5
	pxor	xmm1,xmm0
	pxor	xmm2,xmm15
	pxor	xmm5,xmm1
	pxor	xmm4,xmm15

	pxor	xmm5,xmm2
	pxor	xmm2,xmm6
	pxor	xmm6,xmm4
	pxor	xmm2,xmm3
	pxor	xmm3,xmm4
	pxor	xmm2,xmm0

	pxor	xmm1,xmm6
	pxor	xmm0,xmm4
	movdqa	xmm10,xmm6
	movdqa	xmm9,xmm0
	movdqa	xmm8,xmm4
	movdqa	xmm12,xmm1
	movdqa	xmm11,xmm5

	pxor	xmm10,xmm3
	pxor	xmm9,xmm1
	pxor	xmm8,xmm2
	movdqa	xmm13,xmm10
	pxor	xmm12,xmm3
	movdqa	xmm7,xmm9
	pxor	xmm11,xmm15
	movdqa	xmm14,xmm10

	por	xmm9,xmm8
	por	xmm10,xmm11
	pxor	xmm14,xmm7
	pand	xmm13,xmm11
	pxor	xmm11,xmm8
	pand	xmm7,xmm8
	pand	xmm14,xmm11
	movdqa	xmm11,xmm2
	pxor	xmm11,xmm15
	pand	xmm12,xmm11
	pxor	xmm10,xmm12
	pxor	xmm9,xmm12
	movdqa	xmm12,xmm6
	movdqa	xmm11,xmm4
	pxor	xmm12,xmm0
	pxor	xmm11,xmm5
	movdqa	xmm8,xmm12
	pand	xmm12,xmm11
	por	xmm8,xmm11
	pxor	xmm7,xmm12
	pxor	xmm10,xmm14
	pxor	xmm9,xmm13
	pxor	xmm8,xmm14
	movdqa	xmm11,xmm1
	pxor	xmm7,xmm13
	movdqa	xmm12,xmm3
	pxor	xmm8,xmm13
	movdqa	xmm13,xmm0
	pand	xmm11,xmm2
	movdqa	xmm14,xmm6
	pand	xmm12,xmm15
	pand	xmm13,xmm4
	por	xmm14,xmm5
	pxor	xmm10,xmm11
	pxor	xmm9,xmm12
	pxor	xmm8,xmm13
	pxor	xmm7,xmm14





	movdqa	xmm11,xmm10
	pand	xmm10,xmm8
	pxor	xmm11,xmm9

	movdqa	xmm13,xmm7
	movdqa	xmm14,xmm11
	pxor	xmm13,xmm10
	pand	xmm14,xmm13

	movdqa	xmm12,xmm8
	pxor	xmm14,xmm9
	pxor	xmm12,xmm7

	pxor	xmm10,xmm9

	pand	xmm12,xmm10

	movdqa	xmm9,xmm13
	pxor	xmm12,xmm7

	pxor	xmm9,xmm12
	pxor	xmm8,xmm12

	pand	xmm9,xmm7

	pxor	xmm13,xmm9
	pxor	xmm8,xmm9

	pand	xmm13,xmm14

	pxor	xmm13,xmm11
	movdqa	xmm11,xmm5
	movdqa	xmm7,xmm4
	movdqa	xmm9,xmm14
	pxor	xmm9,xmm13
	pand	xmm9,xmm5
	pxor	xmm5,xmm4
	pand	xmm4,xmm14
	pand	xmm5,xmm13
	pxor	xmm5,xmm4
	pxor	xmm4,xmm9
	pxor	xmm11,xmm15
	pxor	xmm7,xmm2
	pxor	xmm14,xmm12
	pxor	xmm13,xmm8
	movdqa	xmm10,xmm14
	movdqa	xmm9,xmm12
	pxor	xmm10,xmm13
	pxor	xmm9,xmm8
	pand	xmm10,xmm11
	pand	xmm9,xmm15
	pxor	xmm11,xmm7
	pxor	xmm15,xmm2
	pand	xmm7,xmm14
	pand	xmm2,xmm12
	pand	xmm11,xmm13
	pand	xmm15,xmm8
	pxor	xmm7,xmm11
	pxor	xmm15,xmm2
	pxor	xmm11,xmm10
	pxor	xmm2,xmm9
	pxor	xmm5,xmm11
	pxor	xmm15,xmm11
	pxor	xmm4,xmm7
	pxor	xmm2,xmm7

	movdqa	xmm11,xmm6
	movdqa	xmm7,xmm0
	pxor	xmm11,xmm3
	pxor	xmm7,xmm1
	movdqa	xmm10,xmm14
	movdqa	xmm9,xmm12
	pxor	xmm10,xmm13
	pxor	xmm9,xmm8
	pand	xmm10,xmm11
	pand	xmm9,xmm3
	pxor	xmm11,xmm7
	pxor	xmm3,xmm1
	pand	xmm7,xmm14
	pand	xmm1,xmm12
	pand	xmm11,xmm13
	pand	xmm3,xmm8
	pxor	xmm7,xmm11
	pxor	xmm3,xmm1
	pxor	xmm11,xmm10
	pxor	xmm1,xmm9
	pxor	xmm14,xmm12
	pxor	xmm13,xmm8
	movdqa	xmm10,xmm14
	pxor	xmm10,xmm13
	pand	xmm10,xmm6
	pxor	xmm6,xmm0
	pand	xmm0,xmm14
	pand	xmm6,xmm13
	pxor	xmm6,xmm0
	pxor	xmm0,xmm10
	pxor	xmm6,xmm11
	pxor	xmm3,xmm11
	pxor	xmm0,xmm7
	pxor	xmm1,xmm7
	pxor	xmm6,xmm15
	pxor	xmm0,xmm5
	pxor	xmm3,xmm6
	pxor	xmm5,xmm15
	pxor	xmm15,xmm0

	pxor	xmm0,xmm4
	pxor	xmm4,xmm1
	pxor	xmm1,xmm2
	pxor	xmm2,xmm4
	pxor	xmm3,xmm4

	pxor	xmm5,xmm2
	dec	r10d
	jl	NEAR $L$enc_done
	pshufd	xmm7,xmm15,0x93
	pshufd	xmm8,xmm0,0x93
	pxor	xmm15,xmm7
	pshufd	xmm9,xmm3,0x93
	pxor	xmm0,xmm8
	pshufd	xmm10,xmm5,0x93
	pxor	xmm3,xmm9
	pshufd	xmm11,xmm2,0x93
	pxor	xmm5,xmm10
	pshufd	xmm12,xmm6,0x93
	pxor	xmm2,xmm11
	pshufd	xmm13,xmm1,0x93
	pxor	xmm6,xmm12
	pshufd	xmm14,xmm4,0x93
	pxor	xmm1,xmm13
	pxor	xmm4,xmm14

	pxor	xmm8,xmm15
	pxor	xmm7,xmm4
	pxor	xmm8,xmm4
	pshufd	xmm15,xmm15,0x4E
	pxor	xmm9,xmm0
	pshufd	xmm0,xmm0,0x4E
	pxor	xmm12,xmm2
	pxor	xmm15,xmm7
	pxor	xmm13,xmm6
	pxor	xmm0,xmm8
	pxor	xmm11,xmm5
	pshufd	xmm7,xmm2,0x4E
	pxor	xmm14,xmm1
	pshufd	xmm8,xmm6,0x4E
	pxor	xmm10,xmm3
	pshufd	xmm2,xmm5,0x4E
	pxor	xmm10,xmm4
	pshufd	xmm6,xmm4,0x4E
	pxor	xmm11,xmm4
	pshufd	xmm5,xmm1,0x4E
	pxor	xmm7,xmm11
	pshufd	xmm1,xmm3,0x4E
	pxor	xmm8,xmm12
	pxor	xmm2,xmm10
	pxor	xmm6,xmm14
	pxor	xmm5,xmm13
	movdqa	xmm3,xmm7
	pxor	xmm1,xmm9
	movdqa	xmm4,xmm8
	movdqa	xmm7,XMMWORD[48+r11]
	jnz	NEAR $L$enc_loop
	movdqa	xmm7,XMMWORD[64+r11]
	jmp	NEAR $L$enc_loop
ALIGN	16
$L$enc_done:
	movdqa	xmm7,XMMWORD[r11]
	movdqa	xmm8,XMMWORD[16+r11]
	movdqa	xmm9,xmm1
	psrlq	xmm1,1
	movdqa	xmm10,xmm2
	psrlq	xmm2,1
	pxor	xmm1,xmm4
	pxor	xmm2,xmm6
	pand	xmm1,xmm7
	pand	xmm2,xmm7
	pxor	xmm4,xmm1
	psllq	xmm1,1
	pxor	xmm6,xmm2
	psllq	xmm2,1
	pxor	xmm1,xmm9
	pxor	xmm2,xmm10
	movdqa	xmm9,xmm3
	psrlq	xmm3,1
	movdqa	xmm10,xmm15
	psrlq	xmm15,1
	pxor	xmm3,xmm5
	pxor	xmm15,xmm0
	pand	xmm3,xmm7
	pand	xmm15,xmm7
	pxor	xmm5,xmm3
	psllq	xmm3,1
	pxor	xmm0,xmm15
	psllq	xmm15,1
	pxor	xmm3,xmm9
	pxor	xmm15,xmm10
	movdqa	xmm7,XMMWORD[32+r11]
	movdqa	xmm9,xmm6
	psrlq	xmm6,2
	movdqa	xmm10,xmm2
	psrlq	xmm2,2
	pxor	xmm6,xmm4
	pxor	xmm2,xmm1
	pand	xmm6,xmm8
	pand	xmm2,xmm8
	pxor	xmm4,xmm6
	psllq	xmm6,2
	pxor	xmm1,xmm2
	psllq	xmm2,2
	pxor	xmm6,xmm9
	pxor	xmm2,xmm10
	movdqa	xmm9,xmm0
	psrlq	xmm0,2
	movdqa	xmm10,xmm15
	psrlq	xmm15,2
	pxor	xmm0,xmm5
	pxor	xmm15,xmm3
	pand	xmm0,xmm8
	pand	xmm15,xmm8
	pxor	xmm5,xmm0
	psllq	xmm0,2
	pxor	xmm3,xmm15
	psllq	xmm15,2
	pxor	xmm0,xmm9
	pxor	xmm15,xmm10
	movdqa	xmm9,xmm5
	psrlq	xmm5,4
	movdqa	xmm10,xmm3
	psrlq	xmm3,4
	pxor	xmm5,xmm4
	pxor	xmm3,xmm1
	pand	xmm5,xmm7
	pand	xmm3,xmm7
	pxor	xmm4,xmm5
	psllq	xmm5,4
	pxor	xmm1,xmm3
	psllq	xmm3,4
	pxor	xmm5,xmm9
	pxor	xmm3,xmm10
	movdqa	xmm9,xmm0
	psrlq	xmm0,4
	movdqa	xmm10,xmm15
	psrlq	xmm15,4
	pxor	xmm0,xmm6
	pxor	xmm15,xmm2
	pand	xmm0,xmm7
	pand	xmm15,xmm7
	pxor	xmm6,xmm0
	psllq	xmm0,4
	pxor	xmm2,xmm15
	psllq	xmm15,4
	pxor	xmm0,xmm9
	pxor	xmm15,xmm10
	movdqa	xmm7,XMMWORD[rax]
	pxor	xmm3,xmm7
	pxor	xmm5,xmm7
	pxor	xmm2,xmm7
	pxor	xmm6,xmm7
	pxor	xmm1,xmm7
	pxor	xmm4,xmm7
	pxor	xmm15,xmm7
	pxor	xmm0,xmm7
	DB	0F3h,0C3h		;repret




ALIGN	64
_bsaes_decrypt8:

	lea	r11,[$L$BS0]

	movdqa	xmm8,XMMWORD[rax]
	lea	rax,[16+rax]
	movdqa	xmm7,XMMWORD[((-48))+r11]
	pxor	xmm15,xmm8
	pxor	xmm0,xmm8
	pxor	xmm1,xmm8
	pxor	xmm2,xmm8
DB	102,68,15,56,0,255
DB	102,15,56,0,199
	pxor	xmm3,xmm8
	pxor	xmm4,xmm8
DB	102,15,56,0,207
DB	102,15,56,0,215
	pxor	xmm5,xmm8
	pxor	xmm6,xmm8
DB	102,15,56,0,223
DB	102,15,56,0,231
DB	102,15,56,0,239
DB	102,15,56,0,247
	movdqa	xmm7,XMMWORD[r11]
	movdqa	xmm8,XMMWORD[16+r11]
	movdqa	xmm9,xmm5
	psrlq	xmm5,1
	movdqa	xmm10,xmm3
	psrlq	xmm3,1
	pxor	xmm5,xmm6
	pxor	xmm3,xmm4
	pand	xmm5,xmm7
	pand	xmm3,xmm7
	pxor	xmm6,xmm5
	psllq	xmm5,1
	pxor	xmm4,xmm3
	psllq	xmm3,1
	pxor	xmm5,xmm9
	pxor	xmm3,xmm10
	movdqa	xmm9,xmm1
	psrlq	xmm1,1
	movdqa	xmm10,xmm15
	psrlq	xmm15,1
	pxor	xmm1,xmm2
	pxor	xmm15,xmm0
	pand	xmm1,xmm7
	pand	xmm15,xmm7
	pxor	xmm2,xmm1
	psllq	xmm1,1
	pxor	xmm0,xmm15
	psllq	xmm15,1
	pxor	xmm1,xmm9
	pxor	xmm15,xmm10
	movdqa	xmm7,XMMWORD[32+r11]
	movdqa	xmm9,xmm4
	psrlq	xmm4,2
	movdqa	xmm10,xmm3
	psrlq	xmm3,2
	pxor	xmm4,xmm6
	pxor	xmm3,xmm5
	pand	xmm4,xmm8
	pand	xmm3,xmm8
	pxor	xmm6,xmm4
	psllq	xmm4,2
	pxor	xmm5,xmm3
	psllq	xmm3,2
	pxor	xmm4,xmm9
	pxor	xmm3,xmm10
	movdqa	xmm9,xmm0
	psrlq	xmm0,2
	movdqa	xmm10,xmm15
	psrlq	xmm15,2
	pxor	xmm0,xmm2
	pxor	xmm15,xmm1
	pand	xmm0,xmm8
	pand	xmm15,xmm8
	pxor	xmm2,xmm0
	psllq	xmm0,2
	pxor	xmm1,xmm15
	psllq	xmm15,2
	pxor	xmm0,xmm9
	pxor	xmm15,xmm10
	movdqa	xmm9,xmm2
	psrlq	xmm2,4
	movdqa	xmm10,xmm1
	psrlq	xmm1,4
	pxor	xmm2,xmm6
	pxor	xmm1,xmm5
	pand	xmm2,xmm7
	pand	xmm1,xmm7
	pxor	xmm6,xmm2
	psllq	xmm2,4
	pxor	xmm5,xmm1
	psllq	xmm1,4
	pxor	xmm2,xmm9
	pxor	xmm1,xmm10
	movdqa	xmm9,xmm0
	psrlq	xmm0,4
	movdqa	xmm10,xmm15
	psrlq	xmm15,4
	pxor	xmm0,xmm4
	pxor	xmm15,xmm3
	pand	xmm0,xmm7
	pand	xmm15,xmm7
	pxor	xmm4,xmm0
	psllq	xmm0,4
	pxor	xmm3,xmm15
	psllq	xmm15,4
	pxor	xmm0,xmm9
	pxor	xmm15,xmm10
	dec	r10d
	jmp	NEAR $L$dec_sbox
ALIGN	16
$L$dec_loop:
	pxor	xmm15,XMMWORD[rax]
	pxor	xmm0,XMMWORD[16+rax]
	pxor	xmm1,XMMWORD[32+rax]
	pxor	xmm2,XMMWORD[48+rax]
DB	102,68,15,56,0,255
DB	102,15,56,0,199
	pxor	xmm3,XMMWORD[64+rax]
	pxor	xmm4,XMMWORD[80+rax]
DB	102,15,56,0,207
DB	102,15,56,0,215
	pxor	xmm5,XMMWORD[96+rax]
	pxor	xmm6,XMMWORD[112+rax]
DB	102,15,56,0,223
DB	102,15,56,0,231
DB	102,15,56,0,239
DB	102,15,56,0,247
	lea	rax,[128+rax]
$L$dec_sbox:
	pxor	xmm2,xmm3

	pxor	xmm3,xmm6
	pxor	xmm1,xmm6
	pxor	xmm5,xmm3
	pxor	xmm6,xmm5
	pxor	xmm0,xmm6

	pxor	xmm15,xmm0
	pxor	xmm1,xmm4
	pxor	xmm2,xmm15
	pxor	xmm4,xmm15
	pxor	xmm0,xmm2
	movdqa	xmm10,xmm2
	movdqa	xmm9,xmm6
	movdqa	xmm8,xmm0
	movdqa	xmm12,xmm3
	movdqa	xmm11,xmm4

	pxor	xmm10,xmm15
	pxor	xmm9,xmm3
	pxor	xmm8,xmm5
	movdqa	xmm13,xmm10
	pxor	xmm12,xmm15
	movdqa	xmm7,xmm9
	pxor	xmm11,xmm1
	movdqa	xmm14,xmm10

	por	xmm9,xmm8
	por	xmm10,xmm11
	pxor	xmm14,xmm7
	pand	xmm13,xmm11
	pxor	xmm11,xmm8
	pand	xmm7,xmm8
	pand	xmm14,xmm11
	movdqa	xmm11,xmm5
	pxor	xmm11,xmm1
	pand	xmm12,xmm11
	pxor	xmm10,xmm12
	pxor	xmm9,xmm12
	movdqa	xmm12,xmm2
	movdqa	xmm11,xmm0
	pxor	xmm12,xmm6
	pxor	xmm11,xmm4
	movdqa	xmm8,xmm12
	pand	xmm12,xmm11
	por	xmm8,xmm11
	pxor	xmm7,xmm12
	pxor	xmm10,xmm14
	pxor	xmm9,xmm13
	pxor	xmm8,xmm14
	movdqa	xmm11,xmm3
	pxor	xmm7,xmm13
	movdqa	xmm12,xmm15
	pxor	xmm8,xmm13
	movdqa	xmm13,xmm6
	pand	xmm11,xmm5
	movdqa	xmm14,xmm2
	pand	xmm12,xmm1
	pand	xmm13,xmm0
	por	xmm14,xmm4
	pxor	xmm10,xmm11
	pxor	xmm9,xmm12
	pxor	xmm8,xmm13
	pxor	xmm7,xmm14





	movdqa	xmm11,xmm10
	pand	xmm10,xmm8
	pxor	xmm11,xmm9

	movdqa	xmm13,xmm7
	movdqa	xmm14,xmm11
	pxor	xmm13,xmm10
	pand	xmm14,xmm13

	movdqa	xmm12,xmm8
	pxor	xmm14,xmm9
	pxor	xmm12,xmm7

	pxor	xmm10,xmm9

	pand	xmm12,xmm10

	movdqa	xmm9,xmm13
	pxor	xmm12,xmm7

	pxor	xmm9,xmm12
	pxor	xmm8,xmm12

	pand	xmm9,xmm7

	pxor	xmm13,xmm9
	pxor	xmm8,xmm9

	pand	xmm13,xmm14

	pxor	xmm13,xmm11
	movdqa	xmm11,xmm4
	movdqa	xmm7,xmm0
	movdqa	xmm9,xmm14
	pxor	xmm9,xmm13
	pand	xmm9,xmm4
	pxor	xmm4,xmm0
	pand	xmm0,xmm14
	pand	xmm4,xmm13
	pxor	xmm4,xmm0
	pxor	xmm0,xmm9
	pxor	xmm11,xmm1
	pxor	xmm7,xmm5
	pxor	xmm14,xmm12
	pxor	xmm13,xmm8
	movdqa	xmm10,xmm14
	movdqa	xmm9,xmm12
	pxor	xmm10,xmm13
	pxor	xmm9,xmm8
	pand	xmm10,xmm11
	pand	xmm9,xmm1
	pxor	xmm11,xmm7
	pxor	xmm1,xmm5
	pand	xmm7,xmm14
	pand	xmm5,xmm12
	pand	xmm11,xmm13
	pand	xmm1,xmm8
	pxor	xmm7,xmm11
	pxor	xmm1,xmm5
	pxor	xmm11,xmm10
	pxor	xmm5,xmm9
	pxor	xmm4,xmm11
	pxor	xmm1,xmm11
	pxor	xmm0,xmm7
	pxor	xmm5,xmm7

	movdqa	xmm11,xmm2
	movdqa	xmm7,xmm6
	pxor	xmm11,xmm15
	pxor	xmm7,xmm3
	movdqa	xmm10,xmm14
	movdqa	xmm9,xmm12
	pxor	xmm10,xmm13
	pxor	xmm9,xmm8
	pand	xmm10,xmm11
	pand	xmm9,xmm15
	pxor	xmm11,xmm7
	pxor	xmm15,xmm3
	pand	xmm7,xmm14
	pand	xmm3,xmm12
	pand	xmm11,xmm13
	pand	xmm15,xmm8
	pxor	xmm7,xmm11
	pxor	xmm15,xmm3
	pxor	xmm11,xmm10
	pxor	xmm3,xmm9
	pxor	xmm14,xmm12
	pxor	xmm13,xmm8
	movdqa	xmm10,xmm14
	pxor	xmm10,xmm13
	pand	xmm10,xmm2
	pxor	xmm2,xmm6
	pand	xmm6,xmm14
	pand	xmm2,xmm13
	pxor	xmm2,xmm6
	pxor	xmm6,xmm10
	pxor	xmm2,xmm11
	pxor	xmm15,xmm11
	pxor	xmm6,xmm7
	pxor	xmm3,xmm7
	pxor	xmm0,xmm6
	pxor	xmm5,xmm4

	pxor	xmm3,xmm0
	pxor	xmm1,xmm6
	pxor	xmm4,xmm6
	pxor	xmm3,xmm1
	pxor	xmm6,xmm15
	pxor	xmm3,xmm4
	pxor	xmm2,xmm5
	pxor	xmm5,xmm0
	pxor	xmm2,xmm3

	pxor	xmm3,xmm15
	pxor	xmm6,xmm2
	dec	r10d
	jl	NEAR $L$dec_done

	pshufd	xmm7,xmm15,0x4E
	pshufd	xmm13,xmm2,0x4E
	pxor	xmm7,xmm15
	pshufd	xmm14,xmm4,0x4E
	pxor	xmm13,xmm2
	pshufd	xmm8,xmm0,0x4E
	pxor	xmm14,xmm4
	pshufd	xmm9,xmm5,0x4E
	pxor	xmm8,xmm0
	pshufd	xmm10,xmm3,0x4E
	pxor	xmm9,xmm5
	pxor	xmm15,xmm13
	pxor	xmm0,xmm13
	pshufd	xmm11,xmm1,0x4E
	pxor	xmm10,xmm3
	pxor	xmm5,xmm7
	pxor	xmm3,xmm8
	pshufd	xmm12,xmm6,0x4E
	pxor	xmm11,xmm1
	pxor	xmm0,xmm14
	pxor	xmm1,xmm9
	pxor	xmm12,xmm6

	pxor	xmm5,xmm14
	pxor	xmm3,xmm13
	pxor	xmm1,xmm13
	pxor	xmm6,xmm10
	pxor	xmm2,xmm11
	pxor	xmm1,xmm14
	pxor	xmm6,xmm14
	pxor	xmm4,xmm12
	pshufd	xmm7,xmm15,0x93
	pshufd	xmm8,xmm0,0x93
	pxor	xmm15,xmm7
	pshufd	xmm9,xmm5,0x93
	pxor	xmm0,xmm8
	pshufd	xmm10,xmm3,0x93
	pxor	xmm5,xmm9
	pshufd	xmm11,xmm1,0x93
	pxor	xmm3,xmm10
	pshufd	xmm12,xmm6,0x93
	pxor	xmm1,xmm11
	pshufd	xmm13,xmm2,0x93
	pxor	xmm6,xmm12
	pshufd	xmm14,xmm4,0x93
	pxor	xmm2,xmm13
	pxor	xmm4,xmm14

	pxor	xmm8,xmm15
	pxor	xmm7,xmm4
	pxor	xmm8,xmm4
	pshufd	xmm15,xmm15,0x4E
	pxor	xmm9,xmm0
	pshufd	xmm0,xmm0,0x4E
	pxor	xmm12,xmm1
	pxor	xmm15,xmm7
	pxor	xmm13,xmm6
	pxor	xmm0,xmm8
	pxor	xmm11,xmm3
	pshufd	xmm7,xmm1,0x4E
	pxor	xmm14,xmm2
	pshufd	xmm8,xmm6,0x4E
	pxor	xmm10,xmm5
	pshufd	xmm1,xmm3,0x4E
	pxor	xmm10,xmm4
	pshufd	xmm6,xmm4,0x4E
	pxor	xmm11,xmm4
	pshufd	xmm3,xmm2,0x4E
	pxor	xmm7,xmm11
	pshufd	xmm2,xmm5,0x4E
	pxor	xmm8,xmm12
	pxor	xmm10,xmm1
	pxor	xmm6,xmm14
	pxor	xmm13,xmm3
	movdqa	xmm3,xmm7
	pxor	xmm2,xmm9
	movdqa	xmm5,xmm13
	movdqa	xmm4,xmm8
	movdqa	xmm1,xmm2
	movdqa	xmm2,xmm10
	movdqa	xmm7,XMMWORD[((-16))+r11]
	jnz	NEAR $L$dec_loop
	movdqa	xmm7,XMMWORD[((-32))+r11]
	jmp	NEAR $L$dec_loop
ALIGN	16
$L$dec_done:
	movdqa	xmm7,XMMWORD[r11]
	movdqa	xmm8,XMMWORD[16+r11]
	movdqa	xmm9,xmm2
	psrlq	xmm2,1
	movdqa	xmm10,xmm1
	psrlq	xmm1,1
	pxor	xmm2,xmm4
	pxor	xmm1,xmm6
	pand	xmm2,xmm7
	pand	xmm1,xmm7
	pxor	xmm4,xmm2
	psllq	xmm2,1
	pxor	xmm6,xmm1
	psllq	xmm1,1
	pxor	xmm2,xmm9
	pxor	xmm1,xmm10
	movdqa	xmm9,xmm5
	psrlq	xmm5,1
	movdqa	xmm10,xmm15
	psrlq	xmm15,1
	pxor	xmm5,xmm3
	pxor	xmm15,xmm0
	pand	xmm5,xmm7
	pand	xmm15,xmm7
	pxor	xmm3,xmm5
	psllq	xmm5,1
	pxor	xmm0,xmm15
	psllq	xmm15,1
	pxor	xmm5,xmm9
	pxor	xmm15,xmm10
	movdqa	xmm7,XMMWORD[32+r11]
	movdqa	xmm9,xmm6
	psrlq	xmm6,2
	movdqa	xmm10,xmm1
	psrlq	xmm1,2
	pxor	xmm6,xmm4
	pxor	xmm1,xmm2
	pand	xmm6,xmm8
	pand	xmm1,xmm8
	pxor	xmm4,xmm6
	psllq	xmm6,2
	pxor	xmm2,xmm1
	psllq	xmm1,2
	pxor	xmm6,xmm9
	pxor	xmm1,xmm10
	movdqa	xmm9,xmm0
	psrlq	xmm0,2
	movdqa	xmm10,xmm15
	psrlq	xmm15,2
	pxor	xmm0,xmm3
	pxor	xmm15,xmm5
	pand	xmm0,xmm8
	pand	xmm15,xmm8
	pxor	xmm3,xmm0
	psllq	xmm0,2
	pxor	xmm5,xmm15
	psllq	xmm15,2
	pxor	xmm0,xmm9
	pxor	xmm15,xmm10
	movdqa	xmm9,xmm3
	psrlq	xmm3,4
	movdqa	xmm10,xmm5
	psrlq	xmm5,4
	pxor	xmm3,xmm4
	pxor	xmm5,xmm2
	pand	xmm3,xmm7
	pand	xmm5,xmm7
	pxor	xmm4,xmm3
	psllq	xmm3,4
	pxor	xmm2,xmm5
	psllq	xmm5,4
	pxor	xmm3,xmm9
	pxor	xmm5,xmm10
	movdqa	xmm9,xmm0
	psrlq	xmm0,4
	movdqa	xmm10,xmm15
	psrlq	xmm15,4
	pxor	xmm0,xmm6
	pxor	xmm15,xmm1
	pand	xmm0,xmm7
	pand	xmm15,xmm7
	pxor	xmm6,xmm0
	psllq	xmm0,4
	pxor	xmm1,xmm15
	psllq	xmm15,4
	pxor	xmm0,xmm9
	pxor	xmm15,xmm10
	movdqa	xmm7,XMMWORD[rax]
	pxor	xmm5,xmm7
	pxor	xmm3,xmm7
	pxor	xmm1,xmm7
	pxor	xmm6,xmm7
	pxor	xmm2,xmm7
	pxor	xmm4,xmm7
	pxor	xmm15,xmm7
	pxor	xmm0,xmm7
	DB	0F3h,0C3h		;repret



ALIGN	16
_bsaes_key_convert:

	lea	r11,[$L$masks]
	movdqu	xmm7,XMMWORD[rcx]
	lea	rcx,[16+rcx]
	movdqa	xmm0,XMMWORD[r11]
	movdqa	xmm1,XMMWORD[16+r11]
	movdqa	xmm2,XMMWORD[32+r11]
	movdqa	xmm3,XMMWORD[48+r11]
	movdqa	xmm4,XMMWORD[64+r11]
	pcmpeqd	xmm5,xmm5

	movdqu	xmm6,XMMWORD[rcx]
	movdqa	XMMWORD[rax],xmm7
	lea	rax,[16+rax]
	dec	r10d
	jmp	NEAR $L$key_loop
ALIGN	16
$L$key_loop:
DB	102,15,56,0,244

	movdqa	xmm8,xmm0
	movdqa	xmm9,xmm1

	pand	xmm8,xmm6
	pand	xmm9,xmm6
	movdqa	xmm10,xmm2
	pcmpeqb	xmm8,xmm0
	psllq	xmm0,4
	movdqa	xmm11,xmm3
	pcmpeqb	xmm9,xmm1
	psllq	xmm1,4

	pand	xmm10,xmm6
	pand	xmm11,xmm6
	movdqa	xmm12,xmm0
	pcmpeqb	xmm10,xmm2
	psllq	xmm2,4
	movdqa	xmm13,xmm1
	pcmpeqb	xmm11,xmm3
	psllq	xmm3,4

	movdqa	xmm14,xmm2
	movdqa	xmm15,xmm3
	pxor	xmm8,xmm5
	pxor	xmm9,xmm5

	pand	xmm12,xmm6
	pand	xmm13,xmm6
	movdqa	XMMWORD[rax],xmm8
	pcmpeqb	xmm12,xmm0
	psrlq	xmm0,4
	movdqa	XMMWORD[16+rax],xmm9
	pcmpeqb	xmm13,xmm1
	psrlq	xmm1,4
	lea	rcx,[16+rcx]

	pand	xmm14,xmm6
	pand	xmm15,xmm6
	movdqa	XMMWORD[32+rax],xmm10
	pcmpeqb	xmm14,xmm2
	psrlq	xmm2,4
	movdqa	XMMWORD[48+rax],xmm11
	pcmpeqb	xmm15,xmm3
	psrlq	xmm3,4
	movdqu	xmm6,XMMWORD[rcx]

	pxor	xmm13,xmm5
	pxor	xmm14,xmm5
	movdqa	XMMWORD[64+rax],xmm12
	movdqa	XMMWORD[80+rax],xmm13
	movdqa	XMMWORD[96+rax],xmm14
	movdqa	XMMWORD[112+rax],xmm15
	lea	rax,[128+rax]
	dec	r10d
	jnz	NEAR $L$key_loop

	movdqa	xmm7,XMMWORD[80+r11]

	DB	0F3h,0C3h		;repret


EXTERN	asm_AES_cbc_encrypt
global	ossl_bsaes_cbc_encrypt

ALIGN	16
ossl_bsaes_cbc_encrypt:

DB	243,15,30,250
	mov	r11d,DWORD[48+rsp]
	cmp	r11d,0
	jne	NEAR asm_AES_cbc_encrypt
	cmp	r8,128
	jb	NEAR asm_AES_cbc_encrypt

	mov	rax,rsp
$L$cbc_dec_prologue:
	push	rbp

	push	rbx

	push	r12

	push	r13

	push	r14

	push	r15

	lea	rsp,[((-72))+rsp]

	mov	r10,QWORD[160+rsp]
	lea	rsp,[((-160))+rsp]
	movaps	XMMWORD[64+rsp],xmm6
	movaps	XMMWORD[80+rsp],xmm7
	movaps	XMMWORD[96+rsp],xmm8
	movaps	XMMWORD[112+rsp],xmm9
	movaps	XMMWORD[128+rsp],xmm10
	movaps	XMMWORD[144+rsp],xmm11
	movaps	XMMWORD[160+rsp],xmm12
	movaps	XMMWORD[176+rsp],xmm13
	movaps	XMMWORD[192+rsp],xmm14
	movaps	XMMWORD[208+rsp],xmm15
$L$cbc_dec_body:
	mov	rbp,rsp

	mov	eax,DWORD[240+r9]
	mov	r12,rcx
	mov	r13,rdx
	mov	r14,r8
	mov	r15,r9
	mov	rbx,r10
	shr	r14,4

	mov	edx,eax
	shl	rax,7
	sub	rax,96
	sub	rsp,rax

	mov	rax,rsp
	mov	rcx,r15
	mov	r10d,edx
	call	_bsaes_key_convert
	pxor	xmm7,XMMWORD[rsp]
	movdqa	XMMWORD[rax],xmm6
	movdqa	XMMWORD[rsp],xmm7

	movdqu	xmm14,XMMWORD[rbx]
	sub	r14,8
$L$cbc_dec_loop:
	movdqu	xmm15,XMMWORD[r12]
	movdqu	xmm0,XMMWORD[16+r12]
	movdqu	xmm1,XMMWORD[32+r12]
	movdqu	xmm2,XMMWORD[48+r12]
	movdqu	xmm3,XMMWORD[64+r12]
	movdqu	xmm4,XMMWORD[80+r12]
	mov	rax,rsp
	movdqu	xmm5,XMMWORD[96+r12]
	mov	r10d,edx
	movdqu	xmm6,XMMWORD[112+r12]
	movdqa	XMMWORD[32+rbp],xmm14

	call	_bsaes_decrypt8

	pxor	xmm15,XMMWORD[32+rbp]
	movdqu	xmm7,XMMWORD[r12]
	movdqu	xmm8,XMMWORD[16+r12]
	pxor	xmm0,xmm7
	movdqu	xmm9,XMMWORD[32+r12]
	pxor	xmm5,xmm8
	movdqu	xmm10,XMMWORD[48+r12]
	pxor	xmm3,xmm9
	movdqu	xmm11,XMMWORD[64+r12]
	pxor	xmm1,xmm10
	movdqu	xmm12,XMMWORD[80+r12]
	pxor	xmm6,xmm11
	movdqu	xmm13,XMMWORD[96+r12]
	pxor	xmm2,xmm12
	movdqu	xmm14,XMMWORD[112+r12]
	pxor	xmm4,xmm13
	movdqu	XMMWORD[r13],xmm15
	lea	r12,[128+r12]
	movdqu	XMMWORD[16+r13],xmm0
	movdqu	XMMWORD[32+r13],xmm5
	movdqu	XMMWORD[48+r13],xmm3
	movdqu	XMMWORD[64+r13],xmm1
	movdqu	XMMWORD[80+r13],xmm6
	movdqu	XMMWORD[96+r13],xmm2
	movdqu	XMMWORD[112+r13],xmm4
	lea	r13,[128+r13]
	sub	r14,8
	jnc	NEAR $L$cbc_dec_loop

	add	r14,8
	jz	NEAR $L$cbc_dec_done

	movdqu	xmm15,XMMWORD[r12]
	mov	rax,rsp
	mov	r10d,edx
	cmp	r14,2
	jb	NEAR $L$cbc_dec_one
	movdqu	xmm0,XMMWORD[16+r12]
	je	NEAR $L$cbc_dec_two
	movdqu	xmm1,XMMWORD[32+r12]
	cmp	r14,4
	jb	NEAR $L$cbc_dec_three
	movdqu	xmm2,XMMWORD[48+r12]
	je	NEAR $L$cbc_dec_four
	movdqu	xmm3,XMMWORD[64+r12]
	cmp	r14,6
	jb	NEAR $L$cbc_dec_five
	movdqu	xmm4,XMMWORD[80+r12]
	je	NEAR $L$cbc_dec_six
	movdqu	xmm5,XMMWORD[96+r12]
	movdqa	XMMWORD[32+rbp],xmm14
	call	_bsaes_decrypt8
	pxor	xmm15,XMMWORD[32+rbp]
	movdqu	xmm7,XMMWORD[r12]
	movdqu	xmm8,XMMWORD[16+r12]
	pxor	xmm0,xmm7
	movdqu	xmm9,XMMWORD[32+r12]
	pxor	xmm5,xmm8
	movdqu	xmm10,XMMWORD[48+r12]
	pxor	xmm3,xmm9
	movdqu	xmm11,XMMWORD[64+r12]
	pxor	xmm1,xmm10
	movdqu	xmm12,XMMWORD[80+r12]
	pxor	xmm6,xmm11
	movdqu	xmm14,XMMWORD[96+r12]
	pxor	xmm2,xmm12
	movdqu	XMMWORD[r13],xmm15
	movdqu	XMMWORD[16+r13],xmm0
	movdqu	XMMWORD[32+r13],xmm5
	movdqu	XMMWORD[48+r13],xmm3
	movdqu	XMMWORD[64+r13],xmm1
	movdqu	XMMWORD[80+r13],xmm6
	movdqu	XMMWORD[96+r13],xmm2
	jmp	NEAR $L$cbc_dec_done
ALIGN	16
$L$cbc_dec_six:
	movdqa	XMMWORD[32+rbp],xmm14
	call	_bsaes_decrypt8
	pxor	xmm15,XMMWORD[32+rbp]
	movdqu	xmm7,XMMWORD[r12]
	movdqu	xmm8,XMMWORD[16+r12]
	pxor	xmm0,xmm7
	movdqu	xmm9,XMMWORD[32+r12]
	pxor	xmm5,xmm8
	movdqu	xmm10,XMMWORD[48+r12]
	pxor	xmm3,xmm9
	movdqu	xmm11,XMMWORD[64+r12]
	pxor	xmm1,xmm10
	movdqu	xmm14,XMMWORD[80+r12]
	pxor	xmm6,xmm11
	movdqu	XMMWORD[r13],xmm15
	movdqu	XMMWORD[16+r13],xmm0
	movdqu	XMMWORD[32+r13],xmm5
	movdqu	XMMWORD[48+r13],xmm3
	movdqu	XMMWORD[64+r13],xmm1
	movdqu	XMMWORD[80+r13],xmm6
	jmp	NEAR $L$cbc_dec_done
ALIGN	16
$L$cbc_dec_five:
	movdqa	XMMWORD[32+rbp],xmm14
	call	_bsaes_decrypt8
	pxor	xmm15,XMMWORD[32+rbp]
	movdqu	xmm7,XMMWORD[r12]
	movdqu	xmm8,XMMWORD[16+r12]
	pxor	xmm0,xmm7
	movdqu	xmm9,XMMWORD[32+r12]
	pxor	xmm5,xmm8
	movdqu	xmm10,XMMWORD[48+r12]
	pxor	xmm3,xmm9
	movdqu	xmm14,XMMWORD[64+r12]
	pxor	xmm1,xmm10
	movdqu	XMMWORD[r13],xmm15
	movdqu	XMMWORD[16+r13],xmm0
	movdqu	XMMWORD[32+r13],xmm5
	movdqu	XMMWORD[48+r13],xmm3
	movdqu	XMMWORD[64+r13],xmm1
	jmp	NEAR $L$cbc_dec_done
ALIGN	16
$L$cbc_dec_four:
	movdqa	XMMWORD[32+rbp],xmm14
	call	_bsaes_decrypt8
	pxor	xmm15,XMMWORD[32+rbp]
	movdqu	xmm7,XMMWORD[r12]
	movdqu	xmm8,XMMWORD[16+r12]
	pxor	xmm0,xmm7
	movdqu	xmm9,XMMWORD[32+r12]
	pxor	xmm5,xmm8
	movdqu	xmm14,XMMWORD[48+r12]
	pxor	xmm3,xmm9
	movdqu	XMMWORD[r13],xmm15
	movdqu	XMMWORD[16+r13],xmm0
	movdqu	XMMWORD[32+r13],xmm5
	movdqu	XMMWORD[48+r13],xmm3
	jmp	NEAR $L$cbc_dec_done
ALIGN	16
$L$cbc_dec_three:
	movdqa	XMMWORD[32+rbp],xmm14
	call	_bsaes_decrypt8
	pxor	xmm15,XMMWORD[32+rbp]
	movdqu	xmm7,XMMWORD[r12]
	movdqu	xmm8,XMMWORD[16+r12]
	pxor	xmm0,xmm7
	movdqu	xmm14,XMMWORD[32+r12]
	pxor	xmm5,xmm8
	movdqu	XMMWORD[r13],xmm15
	movdqu	XMMWORD[16+r13],xmm0
	movdqu	XMMWORD[32+r13],xmm5
	jmp	NEAR $L$cbc_dec_done
ALIGN	16
$L$cbc_dec_two:
	movdqa	XMMWORD[32+rbp],xmm14
	call	_bsaes_decrypt8
	pxor	xmm15,XMMWORD[32+rbp]
	movdqu	xmm7,XMMWORD[r12]
	movdqu	xmm14,XMMWORD[16+r12]
	pxor	xmm0,xmm7
	movdqu	XMMWORD[r13],xmm15
	movdqu	XMMWORD[16+r13],xmm0
	jmp	NEAR $L$cbc_dec_done
ALIGN	16
$L$cbc_dec_one:
	lea	rcx,[r12]
	lea	rdx,[32+rbp]
	lea	r8,[r15]
	call	asm_AES_decrypt
	pxor	xmm14,XMMWORD[32+rbp]
	movdqu	XMMWORD[r13],xmm14
	movdqa	xmm14,xmm15

$L$cbc_dec_done:
	movdqu	XMMWORD[rbx],xmm14
	lea	rax,[rsp]
	pxor	xmm0,xmm0
$L$cbc_dec_bzero:
	movdqa	XMMWORD[rax],xmm0
	movdqa	XMMWORD[16+rax],xmm0
	lea	rax,[32+rax]
	cmp	rbp,rax
	ja	NEAR $L$cbc_dec_bzero

	lea	rax,[120+rbp]

	movaps	xmm6,XMMWORD[64+rbp]
	movaps	xmm7,XMMWORD[80+rbp]
	movaps	xmm8,XMMWORD[96+rbp]
	movaps	xmm9,XMMWORD[112+rbp]
	movaps	xmm10,XMMWORD[128+rbp]
	movaps	xmm11,XMMWORD[144+rbp]
	movaps	xmm12,XMMWORD[160+rbp]
	movaps	xmm13,XMMWORD[176+rbp]
	movaps	xmm14,XMMWORD[192+rbp]
	movaps	xmm15,XMMWORD[208+rbp]
	lea	rax,[160+rax]
$L$cbc_dec_tail:
	mov	r15,QWORD[((-48))+rax]

	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbx,QWORD[((-16))+rax]

	mov	rbp,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$cbc_dec_epilogue:
	DB	0F3h,0C3h		;repret



global	ossl_bsaes_ctr32_encrypt_blocks

ALIGN	16
ossl_bsaes_ctr32_encrypt_blocks:

DB	243,15,30,250
	mov	rax,rsp
$L$ctr_enc_prologue:
	push	rbp

	push	rbx

	push	r12

	push	r13

	push	r14

	push	r15

	lea	rsp,[((-72))+rsp]

	mov	r10,QWORD[160+rsp]
	lea	rsp,[((-160))+rsp]
	movaps	XMMWORD[64+rsp],xmm6
	movaps	XMMWORD[80+rsp],xmm7
	movaps	XMMWORD[96+rsp],xmm8
	movaps	XMMWORD[112+rsp],xmm9
	movaps	XMMWORD[128+rsp],xmm10
	movaps	XMMWORD[144+rsp],xmm11
	movaps	XMMWORD[160+rsp],xmm12
	movaps	XMMWORD[176+rsp],xmm13
	movaps	XMMWORD[192+rsp],xmm14
	movaps	XMMWORD[208+rsp],xmm15
$L$ctr_enc_body:
	mov	rbp,rsp

	movdqu	xmm0,XMMWORD[r10]
	mov	eax,DWORD[240+r9]
	mov	r12,rcx
	mov	r13,rdx
	mov	r14,r8
	mov	r15,r9
	movdqa	XMMWORD[32+rbp],xmm0
	cmp	r8,8
	jb	NEAR $L$ctr_enc_short

	mov	ebx,eax
	shl	rax,7
	sub	rax,96
	sub	rsp,rax

	mov	rax,rsp
	mov	rcx,r15
	mov	r10d,ebx
	call	_bsaes_key_convert
	pxor	xmm7,xmm6
	movdqa	XMMWORD[rax],xmm7

	movdqa	xmm8,XMMWORD[rsp]
	lea	r11,[$L$ADD1]
	movdqa	xmm15,XMMWORD[32+rbp]
	movdqa	xmm7,XMMWORD[((-32))+r11]
DB	102,68,15,56,0,199
DB	102,68,15,56,0,255
	movdqa	XMMWORD[rsp],xmm8
	jmp	NEAR $L$ctr_enc_loop
ALIGN	16
$L$ctr_enc_loop:
	movdqa	XMMWORD[32+rbp],xmm15
	movdqa	xmm0,xmm15
	movdqa	xmm1,xmm15
	paddd	xmm0,XMMWORD[r11]
	movdqa	xmm2,xmm15
	paddd	xmm1,XMMWORD[16+r11]
	movdqa	xmm3,xmm15
	paddd	xmm2,XMMWORD[32+r11]
	movdqa	xmm4,xmm15
	paddd	xmm3,XMMWORD[48+r11]
	movdqa	xmm5,xmm15
	paddd	xmm4,XMMWORD[64+r11]
	movdqa	xmm6,xmm15
	paddd	xmm5,XMMWORD[80+r11]
	paddd	xmm6,XMMWORD[96+r11]



	movdqa	xmm8,XMMWORD[rsp]
	lea	rax,[16+rsp]
	movdqa	xmm7,XMMWORD[((-16))+r11]
	pxor	xmm15,xmm8
	pxor	xmm0,xmm8
	pxor	xmm1,xmm8
	pxor	xmm2,xmm8
DB	102,68,15,56,0,255
DB	102,15,56,0,199
	pxor	xmm3,xmm8
	pxor	xmm4,xmm8
DB	102,15,56,0,207
DB	102,15,56,0,215
	pxor	xmm5,xmm8
	pxor	xmm6,xmm8
DB	102,15,56,0,223
DB	102,15,56,0,231
DB	102,15,56,0,239
DB	102,15,56,0,247
	lea	r11,[$L$BS0]
	mov	r10d,ebx

	call	_bsaes_encrypt8_bitslice

	sub	r14,8
	jc	NEAR $L$ctr_enc_loop_done

	movdqu	xmm7,XMMWORD[r12]
	movdqu	xmm8,XMMWORD[16+r12]
	movdqu	xmm9,XMMWORD[32+r12]
	movdqu	xmm10,XMMWORD[48+r12]
	movdqu	xmm11,XMMWORD[64+r12]
	movdqu	xmm12,XMMWORD[80+r12]
	movdqu	xmm13,XMMWORD[96+r12]
	movdqu	xmm14,XMMWORD[112+r12]
	lea	r12,[128+r12]
	pxor	xmm7,xmm15
	movdqa	xmm15,XMMWORD[32+rbp]
	pxor	xmm0,xmm8
	movdqu	XMMWORD[r13],xmm7
	pxor	xmm3,xmm9
	movdqu	XMMWORD[16+r13],xmm0
	pxor	xmm5,xmm10
	movdqu	XMMWORD[32+r13],xmm3
	pxor	xmm2,xmm11
	movdqu	XMMWORD[48+r13],xmm5
	pxor	xmm6,xmm12
	movdqu	XMMWORD[64+r13],xmm2
	pxor	xmm1,xmm13
	movdqu	XMMWORD[80+r13],xmm6
	pxor	xmm4,xmm14
	movdqu	XMMWORD[96+r13],xmm1
	lea	r11,[$L$ADD1]
	movdqu	XMMWORD[112+r13],xmm4
	lea	r13,[128+r13]
	paddd	xmm15,XMMWORD[112+r11]
	jnz	NEAR $L$ctr_enc_loop

	jmp	NEAR $L$ctr_enc_done
ALIGN	16
$L$ctr_enc_loop_done:
	add	r14,8
	movdqu	xmm7,XMMWORD[r12]
	pxor	xmm15,xmm7
	movdqu	XMMWORD[r13],xmm15
	cmp	r14,2
	jb	NEAR $L$ctr_enc_done
	movdqu	xmm8,XMMWORD[16+r12]
	pxor	xmm0,xmm8
	movdqu	XMMWORD[16+r13],xmm0
	je	NEAR $L$ctr_enc_done
	movdqu	xmm9,XMMWORD[32+r12]
	pxor	xmm3,xmm9
	movdqu	XMMWORD[32+r13],xmm3
	cmp	r14,4
	jb	NEAR $L$ctr_enc_done
	movdqu	xmm10,XMMWORD[48+r12]
	pxor	xmm5,xmm10
	movdqu	XMMWORD[48+r13],xmm5
	je	NEAR $L$ctr_enc_done
	movdqu	xmm11,XMMWORD[64+r12]
	pxor	xmm2,xmm11
	movdqu	XMMWORD[64+r13],xmm2
	cmp	r14,6
	jb	NEAR $L$ctr_enc_done
	movdqu	xmm12,XMMWORD[80+r12]
	pxor	xmm6,xmm12
	movdqu	XMMWORD[80+r13],xmm6
	je	NEAR $L$ctr_enc_done
	movdqu	xmm13,XMMWORD[96+r12]
	pxor	xmm1,xmm13
	movdqu	XMMWORD[96+r13],xmm1
	jmp	NEAR $L$ctr_enc_done

ALIGN	16
$L$ctr_enc_short:
	lea	rcx,[32+rbp]
	lea	rdx,[48+rbp]
	lea	r8,[r15]
	call	asm_AES_encrypt
	movdqu	xmm0,XMMWORD[r12]
	lea	r12,[16+r12]
	mov	eax,DWORD[44+rbp]
	bswap	eax
	pxor	xmm0,XMMWORD[48+rbp]
	inc	eax
	movdqu	XMMWORD[r13],xmm0
	bswap	eax
	lea	r13,[16+r13]
	mov	DWORD[44+rsp],eax
	dec	r14
	jnz	NEAR $L$ctr_enc_short

$L$ctr_enc_done:
	lea	rax,[rsp]
	pxor	xmm0,xmm0
$L$ctr_enc_bzero:
	movdqa	XMMWORD[rax],xmm0
	movdqa	XMMWORD[16+rax],xmm0
	lea	rax,[32+rax]
	cmp	rbp,rax
	ja	NEAR $L$ctr_enc_bzero

	lea	rax,[120+rbp]

	movaps	xmm6,XMMWORD[64+rbp]
	movaps	xmm7,XMMWORD[80+rbp]
	movaps	xmm8,XMMWORD[96+rbp]
	movaps	xmm9,XMMWORD[112+rbp]
	movaps	xmm10,XMMWORD[128+rbp]
	movaps	xmm11,XMMWORD[144+rbp]
	movaps	xmm12,XMMWORD[160+rbp]
	movaps	xmm13,XMMWORD[176+rbp]
	movaps	xmm14,XMMWORD[192+rbp]
	movaps	xmm15,XMMWORD[208+rbp]
	lea	rax,[160+rax]
$L$ctr_enc_tail:
	mov	r15,QWORD[((-48))+rax]

	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbx,QWORD[((-16))+rax]

	mov	rbp,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$ctr_enc_epilogue:
	DB	0F3h,0C3h		;repret


global	ossl_bsaes_xts_encrypt

ALIGN	16
ossl_bsaes_xts_encrypt:

	mov	rax,rsp
$L$xts_enc_prologue:
	push	rbp

	push	rbx

	push	r12

	push	r13

	push	r14

	push	r15

	lea	rsp,[((-72))+rsp]

	mov	r10,QWORD[160+rsp]
	mov	r11,QWORD[168+rsp]
	lea	rsp,[((-160))+rsp]
	movaps	XMMWORD[64+rsp],xmm6
	movaps	XMMWORD[80+rsp],xmm7
	movaps	XMMWORD[96+rsp],xmm8
	movaps	XMMWORD[112+rsp],xmm9
	movaps	XMMWORD[128+rsp],xmm10
	movaps	XMMWORD[144+rsp],xmm11
	movaps	XMMWORD[160+rsp],xmm12
	movaps	XMMWORD[176+rsp],xmm13
	movaps	XMMWORD[192+rsp],xmm14
	movaps	XMMWORD[208+rsp],xmm15
$L$xts_enc_body:
	mov	rbp,rsp

	mov	r12,rcx
	mov	r13,rdx
	mov	r14,r8
	mov	r15,r9

	lea	rcx,[r11]
	lea	rdx,[32+rbp]
	lea	r8,[r10]
	call	asm_AES_encrypt

	mov	eax,DWORD[240+r15]
	mov	rbx,r14

	mov	edx,eax
	shl	rax,7
	sub	rax,96
	sub	rsp,rax

	mov	rax,rsp
	mov	rcx,r15
	mov	r10d,edx
	call	_bsaes_key_convert
	pxor	xmm7,xmm6
	movdqa	XMMWORD[rax],xmm7

	and	r14,-16
	sub	rsp,0x80
	movdqa	xmm6,XMMWORD[32+rbp]

	pxor	xmm14,xmm14
	movdqa	xmm12,XMMWORD[$L$xts_magic]
	pcmpgtd	xmm14,xmm6

	sub	r14,0x80
	jc	NEAR $L$xts_enc_short
	jmp	NEAR $L$xts_enc_loop

ALIGN	16
$L$xts_enc_loop:
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm15,xmm6
	movdqa	XMMWORD[rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm0,xmm6
	movdqa	XMMWORD[16+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm7,XMMWORD[r12]
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm1,xmm6
	movdqa	XMMWORD[32+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm8,XMMWORD[16+r12]
	pxor	xmm15,xmm7
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm2,xmm6
	movdqa	XMMWORD[48+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm9,XMMWORD[32+r12]
	pxor	xmm0,xmm8
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm3,xmm6
	movdqa	XMMWORD[64+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm10,XMMWORD[48+r12]
	pxor	xmm1,xmm9
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm4,xmm6
	movdqa	XMMWORD[80+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm11,XMMWORD[64+r12]
	pxor	xmm2,xmm10
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm5,xmm6
	movdqa	XMMWORD[96+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm12,XMMWORD[80+r12]
	pxor	xmm3,xmm11
	movdqu	xmm13,XMMWORD[96+r12]
	pxor	xmm4,xmm12
	movdqu	xmm14,XMMWORD[112+r12]
	lea	r12,[128+r12]
	movdqa	XMMWORD[112+rsp],xmm6
	pxor	xmm5,xmm13
	lea	rax,[128+rsp]
	pxor	xmm6,xmm14
	mov	r10d,edx

	call	_bsaes_encrypt8

	pxor	xmm15,XMMWORD[rsp]
	pxor	xmm0,XMMWORD[16+rsp]
	movdqu	XMMWORD[r13],xmm15
	pxor	xmm3,XMMWORD[32+rsp]
	movdqu	XMMWORD[16+r13],xmm0
	pxor	xmm5,XMMWORD[48+rsp]
	movdqu	XMMWORD[32+r13],xmm3
	pxor	xmm2,XMMWORD[64+rsp]
	movdqu	XMMWORD[48+r13],xmm5
	pxor	xmm6,XMMWORD[80+rsp]
	movdqu	XMMWORD[64+r13],xmm2
	pxor	xmm1,XMMWORD[96+rsp]
	movdqu	XMMWORD[80+r13],xmm6
	pxor	xmm4,XMMWORD[112+rsp]
	movdqu	XMMWORD[96+r13],xmm1
	movdqu	XMMWORD[112+r13],xmm4
	lea	r13,[128+r13]

	movdqa	xmm6,XMMWORD[112+rsp]
	pxor	xmm14,xmm14
	movdqa	xmm12,XMMWORD[$L$xts_magic]
	pcmpgtd	xmm14,xmm6
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13

	sub	r14,0x80
	jnc	NEAR $L$xts_enc_loop

$L$xts_enc_short:
	add	r14,0x80
	jz	NEAR $L$xts_enc_done
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm15,xmm6
	movdqa	XMMWORD[rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm0,xmm6
	movdqa	XMMWORD[16+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm7,XMMWORD[r12]
	cmp	r14,16
	je	NEAR $L$xts_enc_1
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm1,xmm6
	movdqa	XMMWORD[32+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm8,XMMWORD[16+r12]
	cmp	r14,32
	je	NEAR $L$xts_enc_2
	pxor	xmm15,xmm7
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm2,xmm6
	movdqa	XMMWORD[48+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm9,XMMWORD[32+r12]
	cmp	r14,48
	je	NEAR $L$xts_enc_3
	pxor	xmm0,xmm8
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm3,xmm6
	movdqa	XMMWORD[64+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm10,XMMWORD[48+r12]
	cmp	r14,64
	je	NEAR $L$xts_enc_4
	pxor	xmm1,xmm9
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm4,xmm6
	movdqa	XMMWORD[80+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm11,XMMWORD[64+r12]
	cmp	r14,80
	je	NEAR $L$xts_enc_5
	pxor	xmm2,xmm10
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm5,xmm6
	movdqa	XMMWORD[96+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm12,XMMWORD[80+r12]
	cmp	r14,96
	je	NEAR $L$xts_enc_6
	pxor	xmm3,xmm11
	movdqu	xmm13,XMMWORD[96+r12]
	pxor	xmm4,xmm12
	movdqa	XMMWORD[112+rsp],xmm6
	lea	r12,[112+r12]
	pxor	xmm5,xmm13
	lea	rax,[128+rsp]
	mov	r10d,edx

	call	_bsaes_encrypt8

	pxor	xmm15,XMMWORD[rsp]
	pxor	xmm0,XMMWORD[16+rsp]
	movdqu	XMMWORD[r13],xmm15
	pxor	xmm3,XMMWORD[32+rsp]
	movdqu	XMMWORD[16+r13],xmm0
	pxor	xmm5,XMMWORD[48+rsp]
	movdqu	XMMWORD[32+r13],xmm3
	pxor	xmm2,XMMWORD[64+rsp]
	movdqu	XMMWORD[48+r13],xmm5
	pxor	xmm6,XMMWORD[80+rsp]
	movdqu	XMMWORD[64+r13],xmm2
	pxor	xmm1,XMMWORD[96+rsp]
	movdqu	XMMWORD[80+r13],xmm6
	movdqu	XMMWORD[96+r13],xmm1
	lea	r13,[112+r13]

	movdqa	xmm6,XMMWORD[112+rsp]
	jmp	NEAR $L$xts_enc_done
ALIGN	16
$L$xts_enc_6:
	pxor	xmm3,xmm11
	lea	r12,[96+r12]
	pxor	xmm4,xmm12
	lea	rax,[128+rsp]
	mov	r10d,edx

	call	_bsaes_encrypt8

	pxor	xmm15,XMMWORD[rsp]
	pxor	xmm0,XMMWORD[16+rsp]
	movdqu	XMMWORD[r13],xmm15
	pxor	xmm3,XMMWORD[32+rsp]
	movdqu	XMMWORD[16+r13],xmm0
	pxor	xmm5,XMMWORD[48+rsp]
	movdqu	XMMWORD[32+r13],xmm3
	pxor	xmm2,XMMWORD[64+rsp]
	movdqu	XMMWORD[48+r13],xmm5
	pxor	xmm6,XMMWORD[80+rsp]
	movdqu	XMMWORD[64+r13],xmm2
	movdqu	XMMWORD[80+r13],xmm6
	lea	r13,[96+r13]

	movdqa	xmm6,XMMWORD[96+rsp]
	jmp	NEAR $L$xts_enc_done
ALIGN	16
$L$xts_enc_5:
	pxor	xmm2,xmm10
	lea	r12,[80+r12]
	pxor	xmm3,xmm11
	lea	rax,[128+rsp]
	mov	r10d,edx

	call	_bsaes_encrypt8

	pxor	xmm15,XMMWORD[rsp]
	pxor	xmm0,XMMWORD[16+rsp]
	movdqu	XMMWORD[r13],xmm15
	pxor	xmm3,XMMWORD[32+rsp]
	movdqu	XMMWORD[16+r13],xmm0
	pxor	xmm5,XMMWORD[48+rsp]
	movdqu	XMMWORD[32+r13],xmm3
	pxor	xmm2,XMMWORD[64+rsp]
	movdqu	XMMWORD[48+r13],xmm5
	movdqu	XMMWORD[64+r13],xmm2
	lea	r13,[80+r13]

	movdqa	xmm6,XMMWORD[80+rsp]
	jmp	NEAR $L$xts_enc_done
ALIGN	16
$L$xts_enc_4:
	pxor	xmm1,xmm9
	lea	r12,[64+r12]
	pxor	xmm2,xmm10
	lea	rax,[128+rsp]
	mov	r10d,edx

	call	_bsaes_encrypt8

	pxor	xmm15,XMMWORD[rsp]
	pxor	xmm0,XMMWORD[16+rsp]
	movdqu	XMMWORD[r13],xmm15
	pxor	xmm3,XMMWORD[32+rsp]
	movdqu	XMMWORD[16+r13],xmm0
	pxor	xmm5,XMMWORD[48+rsp]
	movdqu	XMMWORD[32+r13],xmm3
	movdqu	XMMWORD[48+r13],xmm5
	lea	r13,[64+r13]

	movdqa	xmm6,XMMWORD[64+rsp]
	jmp	NEAR $L$xts_enc_done
ALIGN	16
$L$xts_enc_3:
	pxor	xmm0,xmm8
	lea	r12,[48+r12]
	pxor	xmm1,xmm9
	lea	rax,[128+rsp]
	mov	r10d,edx

	call	_bsaes_encrypt8

	pxor	xmm15,XMMWORD[rsp]
	pxor	xmm0,XMMWORD[16+rsp]
	movdqu	XMMWORD[r13],xmm15
	pxor	xmm3,XMMWORD[32+rsp]
	movdqu	XMMWORD[16+r13],xmm0
	movdqu	XMMWORD[32+r13],xmm3
	lea	r13,[48+r13]

	movdqa	xmm6,XMMWORD[48+rsp]
	jmp	NEAR $L$xts_enc_done
ALIGN	16
$L$xts_enc_2:
	pxor	xmm15,xmm7
	lea	r12,[32+r12]
	pxor	xmm0,xmm8
	lea	rax,[128+rsp]
	mov	r10d,edx

	call	_bsaes_encrypt8

	pxor	xmm15,XMMWORD[rsp]
	pxor	xmm0,XMMWORD[16+rsp]
	movdqu	XMMWORD[r13],xmm15
	movdqu	XMMWORD[16+r13],xmm0
	lea	r13,[32+r13]

	movdqa	xmm6,XMMWORD[32+rsp]
	jmp	NEAR $L$xts_enc_done
ALIGN	16
$L$xts_enc_1:
	pxor	xmm7,xmm15
	lea	r12,[16+r12]
	movdqa	XMMWORD[32+rbp],xmm7
	lea	rcx,[32+rbp]
	lea	rdx,[32+rbp]
	lea	r8,[r15]
	call	asm_AES_encrypt
	pxor	xmm15,XMMWORD[32+rbp]





	movdqu	XMMWORD[r13],xmm15
	lea	r13,[16+r13]

	movdqa	xmm6,XMMWORD[16+rsp]

$L$xts_enc_done:
	and	ebx,15
	jz	NEAR $L$xts_enc_ret
	mov	rdx,r13

$L$xts_enc_steal:
	movzx	eax,BYTE[r12]
	movzx	ecx,BYTE[((-16))+rdx]
	lea	r12,[1+r12]
	mov	BYTE[((-16))+rdx],al
	mov	BYTE[rdx],cl
	lea	rdx,[1+rdx]
	sub	ebx,1
	jnz	NEAR $L$xts_enc_steal

	movdqu	xmm15,XMMWORD[((-16))+r13]
	lea	rcx,[32+rbp]
	pxor	xmm15,xmm6
	lea	rdx,[32+rbp]
	movdqa	XMMWORD[32+rbp],xmm15
	lea	r8,[r15]
	call	asm_AES_encrypt
	pxor	xmm6,XMMWORD[32+rbp]
	movdqu	XMMWORD[(-16)+r13],xmm6

$L$xts_enc_ret:
	lea	rax,[rsp]
	pxor	xmm0,xmm0
$L$xts_enc_bzero:
	movdqa	XMMWORD[rax],xmm0
	movdqa	XMMWORD[16+rax],xmm0
	lea	rax,[32+rax]
	cmp	rbp,rax
	ja	NEAR $L$xts_enc_bzero

	lea	rax,[120+rbp]

	movaps	xmm6,XMMWORD[64+rbp]
	movaps	xmm7,XMMWORD[80+rbp]
	movaps	xmm8,XMMWORD[96+rbp]
	movaps	xmm9,XMMWORD[112+rbp]
	movaps	xmm10,XMMWORD[128+rbp]
	movaps	xmm11,XMMWORD[144+rbp]
	movaps	xmm12,XMMWORD[160+rbp]
	movaps	xmm13,XMMWORD[176+rbp]
	movaps	xmm14,XMMWORD[192+rbp]
	movaps	xmm15,XMMWORD[208+rbp]
	lea	rax,[160+rax]
$L$xts_enc_tail:
	mov	r15,QWORD[((-48))+rax]

	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbx,QWORD[((-16))+rax]

	mov	rbp,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$xts_enc_epilogue:
	DB	0F3h,0C3h		;repret



global	ossl_bsaes_xts_decrypt

ALIGN	16
ossl_bsaes_xts_decrypt:

	mov	rax,rsp
$L$xts_dec_prologue:
	push	rbp

	push	rbx

	push	r12

	push	r13

	push	r14

	push	r15

	lea	rsp,[((-72))+rsp]

	mov	r10,QWORD[160+rsp]
	mov	r11,QWORD[168+rsp]
	lea	rsp,[((-160))+rsp]
	movaps	XMMWORD[64+rsp],xmm6
	movaps	XMMWORD[80+rsp],xmm7
	movaps	XMMWORD[96+rsp],xmm8
	movaps	XMMWORD[112+rsp],xmm9
	movaps	XMMWORD[128+rsp],xmm10
	movaps	XMMWORD[144+rsp],xmm11
	movaps	XMMWORD[160+rsp],xmm12
	movaps	XMMWORD[176+rsp],xmm13
	movaps	XMMWORD[192+rsp],xmm14
	movaps	XMMWORD[208+rsp],xmm15
$L$xts_dec_body:
	mov	rbp,rsp
	mov	r12,rcx
	mov	r13,rdx
	mov	r14,r8
	mov	r15,r9

	lea	rcx,[r11]
	lea	rdx,[32+rbp]
	lea	r8,[r10]
	call	asm_AES_encrypt

	mov	eax,DWORD[240+r15]
	mov	rbx,r14

	mov	edx,eax
	shl	rax,7
	sub	rax,96
	sub	rsp,rax

	mov	rax,rsp
	mov	rcx,r15
	mov	r10d,edx
	call	_bsaes_key_convert
	pxor	xmm7,XMMWORD[rsp]
	movdqa	XMMWORD[rax],xmm6
	movdqa	XMMWORD[rsp],xmm7

	xor	eax,eax
	and	r14,-16
	test	ebx,15
	setnz	al
	shl	rax,4
	sub	r14,rax

	sub	rsp,0x80
	movdqa	xmm6,XMMWORD[32+rbp]

	pxor	xmm14,xmm14
	movdqa	xmm12,XMMWORD[$L$xts_magic]
	pcmpgtd	xmm14,xmm6

	sub	r14,0x80
	jc	NEAR $L$xts_dec_short
	jmp	NEAR $L$xts_dec_loop

ALIGN	16
$L$xts_dec_loop:
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm15,xmm6
	movdqa	XMMWORD[rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm0,xmm6
	movdqa	XMMWORD[16+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm7,XMMWORD[r12]
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm1,xmm6
	movdqa	XMMWORD[32+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm8,XMMWORD[16+r12]
	pxor	xmm15,xmm7
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm2,xmm6
	movdqa	XMMWORD[48+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm9,XMMWORD[32+r12]
	pxor	xmm0,xmm8
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm3,xmm6
	movdqa	XMMWORD[64+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm10,XMMWORD[48+r12]
	pxor	xmm1,xmm9
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm4,xmm6
	movdqa	XMMWORD[80+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm11,XMMWORD[64+r12]
	pxor	xmm2,xmm10
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm5,xmm6
	movdqa	XMMWORD[96+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm12,XMMWORD[80+r12]
	pxor	xmm3,xmm11
	movdqu	xmm13,XMMWORD[96+r12]
	pxor	xmm4,xmm12
	movdqu	xmm14,XMMWORD[112+r12]
	lea	r12,[128+r12]
	movdqa	XMMWORD[112+rsp],xmm6
	pxor	xmm5,xmm13
	lea	rax,[128+rsp]
	pxor	xmm6,xmm14
	mov	r10d,edx

	call	_bsaes_decrypt8

	pxor	xmm15,XMMWORD[rsp]
	pxor	xmm0,XMMWORD[16+rsp]
	movdqu	XMMWORD[r13],xmm15
	pxor	xmm5,XMMWORD[32+rsp]
	movdqu	XMMWORD[16+r13],xmm0
	pxor	xmm3,XMMWORD[48+rsp]
	movdqu	XMMWORD[32+r13],xmm5
	pxor	xmm1,XMMWORD[64+rsp]
	movdqu	XMMWORD[48+r13],xmm3
	pxor	xmm6,XMMWORD[80+rsp]
	movdqu	XMMWORD[64+r13],xmm1
	pxor	xmm2,XMMWORD[96+rsp]
	movdqu	XMMWORD[80+r13],xmm6
	pxor	xmm4,XMMWORD[112+rsp]
	movdqu	XMMWORD[96+r13],xmm2
	movdqu	XMMWORD[112+r13],xmm4
	lea	r13,[128+r13]

	movdqa	xmm6,XMMWORD[112+rsp]
	pxor	xmm14,xmm14
	movdqa	xmm12,XMMWORD[$L$xts_magic]
	pcmpgtd	xmm14,xmm6
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13

	sub	r14,0x80
	jnc	NEAR $L$xts_dec_loop

$L$xts_dec_short:
	add	r14,0x80
	jz	NEAR $L$xts_dec_done
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm15,xmm6
	movdqa	XMMWORD[rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm0,xmm6
	movdqa	XMMWORD[16+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm7,XMMWORD[r12]
	cmp	r14,16
	je	NEAR $L$xts_dec_1
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm1,xmm6
	movdqa	XMMWORD[32+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm8,XMMWORD[16+r12]
	cmp	r14,32
	je	NEAR $L$xts_dec_2
	pxor	xmm15,xmm7
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm2,xmm6
	movdqa	XMMWORD[48+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm9,XMMWORD[32+r12]
	cmp	r14,48
	je	NEAR $L$xts_dec_3
	pxor	xmm0,xmm8
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm3,xmm6
	movdqa	XMMWORD[64+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm10,XMMWORD[48+r12]
	cmp	r14,64
	je	NEAR $L$xts_dec_4
	pxor	xmm1,xmm9
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm4,xmm6
	movdqa	XMMWORD[80+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm11,XMMWORD[64+r12]
	cmp	r14,80
	je	NEAR $L$xts_dec_5
	pxor	xmm2,xmm10
	pshufd	xmm13,xmm14,0x13
	pxor	xmm14,xmm14
	movdqa	xmm5,xmm6
	movdqa	XMMWORD[96+rsp],xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	pcmpgtd	xmm14,xmm6
	pxor	xmm6,xmm13
	movdqu	xmm12,XMMWORD[80+r12]
	cmp	r14,96
	je	NEAR $L$xts_dec_6
	pxor	xmm3,xmm11
	movdqu	xmm13,XMMWORD[96+r12]
	pxor	xmm4,xmm12
	movdqa	XMMWORD[112+rsp],xmm6
	lea	r12,[112+r12]
	pxor	xmm5,xmm13
	lea	rax,[128+rsp]
	mov	r10d,edx

	call	_bsaes_decrypt8

	pxor	xmm15,XMMWORD[rsp]
	pxor	xmm0,XMMWORD[16+rsp]
	movdqu	XMMWORD[r13],xmm15
	pxor	xmm5,XMMWORD[32+rsp]
	movdqu	XMMWORD[16+r13],xmm0
	pxor	xmm3,XMMWORD[48+rsp]
	movdqu	XMMWORD[32+r13],xmm5
	pxor	xmm1,XMMWORD[64+rsp]
	movdqu	XMMWORD[48+r13],xmm3
	pxor	xmm6,XMMWORD[80+rsp]
	movdqu	XMMWORD[64+r13],xmm1
	pxor	xmm2,XMMWORD[96+rsp]
	movdqu	XMMWORD[80+r13],xmm6
	movdqu	XMMWORD[96+r13],xmm2
	lea	r13,[112+r13]

	movdqa	xmm6,XMMWORD[112+rsp]
	jmp	NEAR $L$xts_dec_done
ALIGN	16
$L$xts_dec_6:
	pxor	xmm3,xmm11
	lea	r12,[96+r12]
	pxor	xmm4,xmm12
	lea	rax,[128+rsp]
	mov	r10d,edx

	call	_bsaes_decrypt8

	pxor	xmm15,XMMWORD[rsp]
	pxor	xmm0,XMMWORD[16+rsp]
	movdqu	XMMWORD[r13],xmm15
	pxor	xmm5,XMMWORD[32+rsp]
	movdqu	XMMWORD[16+r13],xmm0
	pxor	xmm3,XMMWORD[48+rsp]
	movdqu	XMMWORD[32+r13],xmm5
	pxor	xmm1,XMMWORD[64+rsp]
	movdqu	XMMWORD[48+r13],xmm3
	pxor	xmm6,XMMWORD[80+rsp]
	movdqu	XMMWORD[64+r13],xmm1
	movdqu	XMMWORD[80+r13],xmm6
	lea	r13,[96+r13]

	movdqa	xmm6,XMMWORD[96+rsp]
	jmp	NEAR $L$xts_dec_done
ALIGN	16
$L$xts_dec_5:
	pxor	xmm2,xmm10
	lea	r12,[80+r12]
	pxor	xmm3,xmm11
	lea	rax,[128+rsp]
	mov	r10d,edx

	call	_bsaes_decrypt8

	pxor	xmm15,XMMWORD[rsp]
	pxor	xmm0,XMMWORD[16+rsp]
	movdqu	XMMWORD[r13],xmm15
	pxor	xmm5,XMMWORD[32+rsp]
	movdqu	XMMWORD[16+r13],xmm0
	pxor	xmm3,XMMWORD[48+rsp]
	movdqu	XMMWORD[32+r13],xmm5
	pxor	xmm1,XMMWORD[64+rsp]
	movdqu	XMMWORD[48+r13],xmm3
	movdqu	XMMWORD[64+r13],xmm1
	lea	r13,[80+r13]

	movdqa	xmm6,XMMWORD[80+rsp]
	jmp	NEAR $L$xts_dec_done
ALIGN	16
$L$xts_dec_4:
	pxor	xmm1,xmm9
	lea	r12,[64+r12]
	pxor	xmm2,xmm10
	lea	rax,[128+rsp]
	mov	r10d,edx

	call	_bsaes_decrypt8

	pxor	xmm15,XMMWORD[rsp]
	pxor	xmm0,XMMWORD[16+rsp]
	movdqu	XMMWORD[r13],xmm15
	pxor	xmm5,XMMWORD[32+rsp]
	movdqu	XMMWORD[16+r13],xmm0
	pxor	xmm3,XMMWORD[48+rsp]
	movdqu	XMMWORD[32+r13],xmm5
	movdqu	XMMWORD[48+r13],xmm3
	lea	r13,[64+r13]

	movdqa	xmm6,XMMWORD[64+rsp]
	jmp	NEAR $L$xts_dec_done
ALIGN	16
$L$xts_dec_3:
	pxor	xmm0,xmm8
	lea	r12,[48+r12]
	pxor	xmm1,xmm9
	lea	rax,[128+rsp]
	mov	r10d,edx

	call	_bsaes_decrypt8

	pxor	xmm15,XMMWORD[rsp]
	pxor	xmm0,XMMWORD[16+rsp]
	movdqu	XMMWORD[r13],xmm15
	pxor	xmm5,XMMWORD[32+rsp]
	movdqu	XMMWORD[16+r13],xmm0
	movdqu	XMMWORD[32+r13],xmm5
	lea	r13,[48+r13]

	movdqa	xmm6,XMMWORD[48+rsp]
	jmp	NEAR $L$xts_dec_done
ALIGN	16
$L$xts_dec_2:
	pxor	xmm15,xmm7
	lea	r12,[32+r12]
	pxor	xmm0,xmm8
	lea	rax,[128+rsp]
	mov	r10d,edx

	call	_bsaes_decrypt8

	pxor	xmm15,XMMWORD[rsp]
	pxor	xmm0,XMMWORD[16+rsp]
	movdqu	XMMWORD[r13],xmm15
	movdqu	XMMWORD[16+r13],xmm0
	lea	r13,[32+r13]

	movdqa	xmm6,XMMWORD[32+rsp]
	jmp	NEAR $L$xts_dec_done
ALIGN	16
$L$xts_dec_1:
	pxor	xmm7,xmm15
	lea	r12,[16+r12]
	movdqa	XMMWORD[32+rbp],xmm7
	lea	rcx,[32+rbp]
	lea	rdx,[32+rbp]
	lea	r8,[r15]
	call	asm_AES_decrypt
	pxor	xmm15,XMMWORD[32+rbp]





	movdqu	XMMWORD[r13],xmm15
	lea	r13,[16+r13]

	movdqa	xmm6,XMMWORD[16+rsp]

$L$xts_dec_done:
	and	ebx,15
	jz	NEAR $L$xts_dec_ret

	pxor	xmm14,xmm14
	movdqa	xmm12,XMMWORD[$L$xts_magic]
	pcmpgtd	xmm14,xmm6
	pshufd	xmm13,xmm14,0x13
	movdqa	xmm5,xmm6
	paddq	xmm6,xmm6
	pand	xmm13,xmm12
	movdqu	xmm15,XMMWORD[r12]
	pxor	xmm6,xmm13

	lea	rcx,[32+rbp]
	pxor	xmm15,xmm6
	lea	rdx,[32+rbp]
	movdqa	XMMWORD[32+rbp],xmm15
	lea	r8,[r15]
	call	asm_AES_decrypt
	pxor	xmm6,XMMWORD[32+rbp]
	mov	rdx,r13
	movdqu	XMMWORD[r13],xmm6

$L$xts_dec_steal:
	movzx	eax,BYTE[16+r12]
	movzx	ecx,BYTE[rdx]
	lea	r12,[1+r12]
	mov	BYTE[rdx],al
	mov	BYTE[16+rdx],cl
	lea	rdx,[1+rdx]
	sub	ebx,1
	jnz	NEAR $L$xts_dec_steal

	movdqu	xmm15,XMMWORD[r13]
	lea	rcx,[32+rbp]
	pxor	xmm15,xmm5
	lea	rdx,[32+rbp]
	movdqa	XMMWORD[32+rbp],xmm15
	lea	r8,[r15]
	call	asm_AES_decrypt
	pxor	xmm5,XMMWORD[32+rbp]
	movdqu	XMMWORD[r13],xmm5

$L$xts_dec_ret:
	lea	rax,[rsp]
	pxor	xmm0,xmm0
$L$xts_dec_bzero:
	movdqa	XMMWORD[rax],xmm0
	movdqa	XMMWORD[16+rax],xmm0
	lea	rax,[32+rax]
	cmp	rbp,rax
	ja	NEAR $L$xts_dec_bzero

	lea	rax,[120+rbp]

	movaps	xmm6,XMMWORD[64+rbp]
	movaps	xmm7,XMMWORD[80+rbp]
	movaps	xmm8,XMMWORD[96+rbp]
	movaps	xmm9,XMMWORD[112+rbp]
	movaps	xmm10,XMMWORD[128+rbp]
	movaps	xmm11,XMMWORD[144+rbp]
	movaps	xmm12,XMMWORD[160+rbp]
	movaps	xmm13,XMMWORD[176+rbp]
	movaps	xmm14,XMMWORD[192+rbp]
	movaps	xmm15,XMMWORD[208+rbp]
	lea	rax,[160+rax]
$L$xts_dec_tail:
	mov	r15,QWORD[((-48))+rax]

	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbx,QWORD[((-16))+rax]

	mov	rbp,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$xts_dec_epilogue:
	DB	0F3h,0C3h		;repret



ALIGN	64
_bsaes_const:
$L$M0ISR:
	DQ	0x0a0e0206070b0f03,0x0004080c0d010509
$L$ISRM0:
	DQ	0x01040b0e0205080f,0x0306090c00070a0d
$L$ISR:
	DQ	0x0504070602010003,0x0f0e0d0c080b0a09
$L$BS0:
	DQ	0x5555555555555555,0x5555555555555555
$L$BS1:
	DQ	0x3333333333333333,0x3333333333333333
$L$BS2:
	DQ	0x0f0f0f0f0f0f0f0f,0x0f0f0f0f0f0f0f0f
$L$SR:
	DQ	0x0504070600030201,0x0f0e0d0c0a09080b
$L$SRM0:
	DQ	0x0304090e00050a0f,0x01060b0c0207080d
$L$M0SR:
	DQ	0x0a0e02060f03070b,0x0004080c05090d01
$L$SWPUP:
	DQ	0x0706050403020100,0x0c0d0e0f0b0a0908
$L$SWPUPM0SR:
	DQ	0x0a0d02060c03070b,0x0004080f05090e01
$L$ADD1:
	DQ	0x0000000000000000,0x0000000100000000
$L$ADD2:
	DQ	0x0000000000000000,0x0000000200000000
$L$ADD3:
	DQ	0x0000000000000000,0x0000000300000000
$L$ADD4:
	DQ	0x0000000000000000,0x0000000400000000
$L$ADD5:
	DQ	0x0000000000000000,0x0000000500000000
$L$ADD6:
	DQ	0x0000000000000000,0x0000000600000000
$L$ADD7:
	DQ	0x0000000000000000,0x0000000700000000
$L$ADD8:
	DQ	0x0000000000000000,0x0000000800000000
$L$xts_magic:
	DD	0x87,0,1,0
$L$masks:
	DQ	0x0101010101010101,0x0101010101010101
	DQ	0x0202020202020202,0x0202020202020202
	DQ	0x0404040404040404,0x0404040404040404
	DQ	0x0808080808080808,0x0808080808080808
$L$M0:
	DQ	0x02060a0e03070b0f,0x0004080c0105090d
$L$63:
	DQ	0x6363636363636363,0x6363636363636363
DB	66,105,116,45,115,108,105,99,101,100,32,65,69,83,32,102
DB	111,114,32,120,56,54,95,54,52,47,83,83,83,69,51,44
DB	32,69,109,105,108,105,97,32,75,195,164,115,112,101,114,44
DB	32,80,101,116,101,114,32,83,99,104,119,97,98,101,44,32
DB	65,110,100,121,32,80,111,108,121,97,107,111,118,0
ALIGN	64

EXTERN	__imp_RtlVirtualUnwind

ALIGN	16
se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jbe	NEAR $L$in_prologue

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$in_prologue

	mov	r10d,DWORD[8+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$in_tail

	mov	rax,QWORD[160+r8]

	lea	rsi,[64+rax]
	lea	rdi,[512+r8]
	mov	ecx,20
	DD	0xa548f3fc
	lea	rax,[((160+120))+rax]

$L$in_tail:
	mov	rbp,QWORD[((-48))+rax]
	mov	rbx,QWORD[((-40))+rax]
	mov	r12,QWORD[((-32))+rax]
	mov	r13,QWORD[((-24))+rax]
	mov	r14,QWORD[((-16))+rax]
	mov	r15,QWORD[((-8))+rax]
	mov	QWORD[144+r8],rbx
	mov	QWORD[160+r8],rbp
	mov	QWORD[216+r8],r12
	mov	QWORD[224+r8],r13
	mov	QWORD[232+r8],r14
	mov	QWORD[240+r8],r15

$L$in_prologue:
	mov	QWORD[152+r8],rax

	mov	rdi,QWORD[40+r9]
	mov	rsi,r8
	mov	ecx,154
	DD	0xa548f3fc

	mov	rsi,r9
	xor	rcx,rcx
	mov	rdx,QWORD[8+rsi]
	mov	r8,QWORD[rsi]
	mov	r9,QWORD[16+rsi]
	mov	r10,QWORD[40+rsi]
	lea	r11,[56+rsi]
	lea	r12,[24+rsi]
	mov	QWORD[32+rsp],r10
	mov	QWORD[40+rsp],r11
	mov	QWORD[48+rsp],r12
	mov	QWORD[56+rsp],rcx
	call	QWORD[__imp_RtlVirtualUnwind]

	mov	eax,1
	add	rsp,64
	popfq
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	pop	rbx
	pop	rdi
	pop	rsi
	DB	0F3h,0C3h		;repret


section	.pdata rdata align=4
ALIGN	4
	DD	$L$cbc_dec_prologue wrt ..imagebase
	DD	$L$cbc_dec_epilogue wrt ..imagebase
	DD	$L$cbc_dec_info wrt ..imagebase

	DD	$L$ctr_enc_prologue wrt ..imagebase
	DD	$L$ctr_enc_epilogue wrt ..imagebase
	DD	$L$ctr_enc_info wrt ..imagebase

	DD	$L$xts_enc_prologue wrt ..imagebase
	DD	$L$xts_enc_epilogue wrt ..imagebase
	DD	$L$xts_enc_info wrt ..imagebase

	DD	$L$xts_dec_prologue wrt ..imagebase
	DD	$L$xts_dec_epilogue wrt ..imagebase
	DD	$L$xts_dec_info wrt ..imagebase

section	.xdata rdata align=8
ALIGN	8
$L$cbc_dec_info:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$cbc_dec_body wrt ..imagebase,$L$cbc_dec_epilogue wrt ..imagebase
	DD	$L$cbc_dec_tail wrt ..imagebase
	DD	0
$L$ctr_enc_info:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$ctr_enc_body wrt ..imagebase,$L$ctr_enc_epilogue wrt ..imagebase
	DD	$L$ctr_enc_tail wrt ..imagebase
	DD	0
$L$xts_enc_info:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$xts_enc_body wrt ..imagebase,$L$xts_enc_epilogue wrt ..imagebase
	DD	$L$xts_enc_tail wrt ..imagebase
	DD	0
$L$xts_dec_info:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$xts_dec_body wrt ..imagebase,$L$xts_dec_epilogue wrt ..imagebase
	DD	$L$xts_dec_tail wrt ..imagebase
	DD	0
                                                                                                                                                                                                                                       node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/aes/vpaes-x86_64.asm                0000664 0000000 0000000 00000046473 14746647661 0027360 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        default	rel
%define XMMWORD
%define YMMWORD
%define ZMMWORD
section	.text code align=64


















ALIGN	16
_vpaes_encrypt_core:

	mov	r9,rdx
	mov	r11,16
	mov	eax,DWORD[240+rdx]
	movdqa	xmm1,xmm9
	movdqa	xmm2,XMMWORD[$L$k_ipt]
	pandn	xmm1,xmm0
	movdqu	xmm5,XMMWORD[r9]
	psrld	xmm1,4
	pand	xmm0,xmm9
DB	102,15,56,0,208
	movdqa	xmm0,XMMWORD[(($L$k_ipt+16))]
DB	102,15,56,0,193
	pxor	xmm2,xmm5
	add	r9,16
	pxor	xmm0,xmm2
	lea	r10,[$L$k_mc_backward]
	jmp	NEAR $L$enc_entry

ALIGN	16
$L$enc_loop:

	movdqa	xmm4,xmm13
	movdqa	xmm0,xmm12
DB	102,15,56,0,226
DB	102,15,56,0,195
	pxor	xmm4,xmm5
	movdqa	xmm5,xmm15
	pxor	xmm0,xmm4
	movdqa	xmm1,XMMWORD[((-64))+r10*1+r11]
DB	102,15,56,0,234
	movdqa	xmm4,XMMWORD[r10*1+r11]
	movdqa	xmm2,xmm14
DB	102,15,56,0,211
	movdqa	xmm3,xmm0
	pxor	xmm2,xmm5
DB	102,15,56,0,193
	add	r9,16
	pxor	xmm0,xmm2
DB	102,15,56,0,220
	add	r11,16
	pxor	xmm3,xmm0
DB	102,15,56,0,193
	and	r11,0x30
	sub	rax,1
	pxor	xmm0,xmm3

$L$enc_entry:

	movdqa	xmm1,xmm9
	movdqa	xmm5,xmm11
	pandn	xmm1,xmm0
	psrld	xmm1,4
	pand	xmm0,xmm9
DB	102,15,56,0,232
	movdqa	xmm3,xmm10
	pxor	xmm0,xmm1
DB	102,15,56,0,217
	movdqa	xmm4,xmm10
	pxor	xmm3,xmm5
DB	102,15,56,0,224
	movdqa	xmm2,xmm10
	pxor	xmm4,xmm5
DB	102,15,56,0,211
	movdqa	xmm3,xmm10
	pxor	xmm2,xmm0
DB	102,15,56,0,220
	movdqu	xmm5,XMMWORD[r9]
	pxor	xmm3,xmm1
	jnz	NEAR $L$enc_loop


	movdqa	xmm4,XMMWORD[((-96))+r10]
	movdqa	xmm0,XMMWORD[((-80))+r10]
DB	102,15,56,0,226
	pxor	xmm4,xmm5
DB	102,15,56,0,195
	movdqa	xmm1,XMMWORD[64+r10*1+r11]
	pxor	xmm0,xmm4
DB	102,15,56,0,193
	DB	0F3h,0C3h		;repret









ALIGN	16
_vpaes_decrypt_core:

	mov	r9,rdx
	mov	eax,DWORD[240+rdx]
	movdqa	xmm1,xmm9
	movdqa	xmm2,XMMWORD[$L$k_dipt]
	pandn	xmm1,xmm0
	mov	r11,rax
	psrld	xmm1,4
	movdqu	xmm5,XMMWORD[r9]
	shl	r11,4
	pand	xmm0,xmm9
DB	102,15,56,0,208
	movdqa	xmm0,XMMWORD[(($L$k_dipt+16))]
	xor	r11,0x30
	lea	r10,[$L$k_dsbd]
DB	102,15,56,0,193
	and	r11,0x30
	pxor	xmm2,xmm5
	movdqa	xmm5,XMMWORD[(($L$k_mc_forward+48))]
	pxor	xmm0,xmm2
	add	r9,16
	add	r11,r10
	jmp	NEAR $L$dec_entry

ALIGN	16
$L$dec_loop:



	movdqa	xmm4,XMMWORD[((-32))+r10]
	movdqa	xmm1,XMMWORD[((-16))+r10]
DB	102,15,56,0,226
DB	102,15,56,0,203
	pxor	xmm0,xmm4
	movdqa	xmm4,XMMWORD[r10]
	pxor	xmm0,xmm1
	movdqa	xmm1,XMMWORD[16+r10]

DB	102,15,56,0,226
DB	102,15,56,0,197
DB	102,15,56,0,203
	pxor	xmm0,xmm4
	movdqa	xmm4,XMMWORD[32+r10]
	pxor	xmm0,xmm1
	movdqa	xmm1,XMMWORD[48+r10]

DB	102,15,56,0,226
DB	102,15,56,0,197
DB	102,15,56,0,203
	pxor	xmm0,xmm4
	movdqa	xmm4,XMMWORD[64+r10]
	pxor	xmm0,xmm1
	movdqa	xmm1,XMMWORD[80+r10]

DB	102,15,56,0,226
DB	102,15,56,0,197
DB	102,15,56,0,203
	pxor	xmm0,xmm4
	add	r9,16
DB	102,15,58,15,237,12
	pxor	xmm0,xmm1
	sub	rax,1

$L$dec_entry:

	movdqa	xmm1,xmm9
	pandn	xmm1,xmm0
	movdqa	xmm2,xmm11
	psrld	xmm1,4
	pand	xmm0,xmm9
DB	102,15,56,0,208
	movdqa	xmm3,xmm10
	pxor	xmm0,xmm1
DB	102,15,56,0,217
	movdqa	xmm4,xmm10
	pxor	xmm3,xmm2
DB	102,15,56,0,224
	pxor	xmm4,xmm2
	movdqa	xmm2,xmm10
DB	102,15,56,0,211
	movdqa	xmm3,xmm10
	pxor	xmm2,xmm0
DB	102,15,56,0,220
	movdqu	xmm0,XMMWORD[r9]
	pxor	xmm3,xmm1
	jnz	NEAR $L$dec_loop


	movdqa	xmm4,XMMWORD[96+r10]
DB	102,15,56,0,226
	pxor	xmm4,xmm0
	movdqa	xmm0,XMMWORD[112+r10]
	movdqa	xmm2,XMMWORD[((-352))+r11]
DB	102,15,56,0,195
	pxor	xmm0,xmm4
DB	102,15,56,0,194
	DB	0F3h,0C3h		;repret









ALIGN	16
_vpaes_schedule_core:






	call	_vpaes_preheat
	movdqa	xmm8,XMMWORD[$L$k_rcon]
	movdqu	xmm0,XMMWORD[rdi]


	movdqa	xmm3,xmm0
	lea	r11,[$L$k_ipt]
	call	_vpaes_schedule_transform
	movdqa	xmm7,xmm0

	lea	r10,[$L$k_sr]
	test	rcx,rcx
	jnz	NEAR $L$schedule_am_decrypting


	movdqu	XMMWORD[rdx],xmm0
	jmp	NEAR $L$schedule_go

$L$schedule_am_decrypting:

	movdqa	xmm1,XMMWORD[r10*1+r8]
DB	102,15,56,0,217
	movdqu	XMMWORD[rdx],xmm3
	xor	r8,0x30

$L$schedule_go:
	cmp	esi,192
	ja	NEAR $L$schedule_256
	je	NEAR $L$schedule_192










$L$schedule_128:
	mov	esi,10

$L$oop_schedule_128:
	call	_vpaes_schedule_round
	dec	rsi
	jz	NEAR $L$schedule_mangle_last
	call	_vpaes_schedule_mangle
	jmp	NEAR $L$oop_schedule_128
















ALIGN	16
$L$schedule_192:
	movdqu	xmm0,XMMWORD[8+rdi]
	call	_vpaes_schedule_transform
	movdqa	xmm6,xmm0
	pxor	xmm4,xmm4
	movhlps	xmm6,xmm4
	mov	esi,4

$L$oop_schedule_192:
	call	_vpaes_schedule_round
DB	102,15,58,15,198,8
	call	_vpaes_schedule_mangle
	call	_vpaes_schedule_192_smear
	call	_vpaes_schedule_mangle
	call	_vpaes_schedule_round
	dec	rsi
	jz	NEAR $L$schedule_mangle_last
	call	_vpaes_schedule_mangle
	call	_vpaes_schedule_192_smear
	jmp	NEAR $L$oop_schedule_192











ALIGN	16
$L$schedule_256:
	movdqu	xmm0,XMMWORD[16+rdi]
	call	_vpaes_schedule_transform
	mov	esi,7

$L$oop_schedule_256:
	call	_vpaes_schedule_mangle
	movdqa	xmm6,xmm0


	call	_vpaes_schedule_round
	dec	rsi
	jz	NEAR $L$schedule_mangle_last
	call	_vpaes_schedule_mangle


	pshufd	xmm0,xmm0,0xFF
	movdqa	xmm5,xmm7
	movdqa	xmm7,xmm6
	call	_vpaes_schedule_low_round
	movdqa	xmm7,xmm5

	jmp	NEAR $L$oop_schedule_256












ALIGN	16
$L$schedule_mangle_last:

	lea	r11,[$L$k_deskew]
	test	rcx,rcx
	jnz	NEAR $L$schedule_mangle_last_dec


	movdqa	xmm1,XMMWORD[r10*1+r8]
DB	102,15,56,0,193
	lea	r11,[$L$k_opt]
	add	rdx,32

$L$schedule_mangle_last_dec:
	add	rdx,-16
	pxor	xmm0,XMMWORD[$L$k_s63]
	call	_vpaes_schedule_transform
	movdqu	XMMWORD[rdx],xmm0


	pxor	xmm0,xmm0
	pxor	xmm1,xmm1
	pxor	xmm2,xmm2
	pxor	xmm3,xmm3
	pxor	xmm4,xmm4
	pxor	xmm5,xmm5
	pxor	xmm6,xmm6
	pxor	xmm7,xmm7
	DB	0F3h,0C3h		;repret


















ALIGN	16
_vpaes_schedule_192_smear:

	pshufd	xmm1,xmm6,0x80
	pshufd	xmm0,xmm7,0xFE
	pxor	xmm6,xmm1
	pxor	xmm1,xmm1
	pxor	xmm6,xmm0
	movdqa	xmm0,xmm6
	movhlps	xmm6,xmm1
	DB	0F3h,0C3h		;repret






















ALIGN	16
_vpaes_schedule_round:


	pxor	xmm1,xmm1
DB	102,65,15,58,15,200,15
DB	102,69,15,58,15,192,15
	pxor	xmm7,xmm1


	pshufd	xmm0,xmm0,0xFF
DB	102,15,58,15,192,1




_vpaes_schedule_low_round:

	movdqa	xmm1,xmm7
	pslldq	xmm7,4
	pxor	xmm7,xmm1
	movdqa	xmm1,xmm7
	pslldq	xmm7,8
	pxor	xmm7,xmm1
	pxor	xmm7,XMMWORD[$L$k_s63]


	movdqa	xmm1,xmm9
	pandn	xmm1,xmm0
	psrld	xmm1,4
	pand	xmm0,xmm9
	movdqa	xmm2,xmm11
DB	102,15,56,0,208
	pxor	xmm0,xmm1
	movdqa	xmm3,xmm10
DB	102,15,56,0,217
	pxor	xmm3,xmm2
	movdqa	xmm4,xmm10
DB	102,15,56,0,224
	pxor	xmm4,xmm2
	movdqa	xmm2,xmm10
DB	102,15,56,0,211
	pxor	xmm2,xmm0
	movdqa	xmm3,xmm10
DB	102,15,56,0,220
	pxor	xmm3,xmm1
	movdqa	xmm4,xmm13
DB	102,15,56,0,226
	movdqa	xmm0,xmm12
DB	102,15,56,0,195
	pxor	xmm0,xmm4


	pxor	xmm0,xmm7
	movdqa	xmm7,xmm0
	DB	0F3h,0C3h		;repret













ALIGN	16
_vpaes_schedule_transform:

	movdqa	xmm1,xmm9
	pandn	xmm1,xmm0
	psrld	xmm1,4
	pand	xmm0,xmm9
	movdqa	xmm2,XMMWORD[r11]
DB	102,15,56,0,208
	movdqa	xmm0,XMMWORD[16+r11]
DB	102,15,56,0,193
	pxor	xmm0,xmm2
	DB	0F3h,0C3h		;repret



























ALIGN	16
_vpaes_schedule_mangle:

	movdqa	xmm4,xmm0
	movdqa	xmm5,XMMWORD[$L$k_mc_forward]
	test	rcx,rcx
	jnz	NEAR $L$schedule_mangle_dec


	add	rdx,16
	pxor	xmm4,XMMWORD[$L$k_s63]
DB	102,15,56,0,229
	movdqa	xmm3,xmm4
DB	102,15,56,0,229
	pxor	xmm3,xmm4
DB	102,15,56,0,229
	pxor	xmm3,xmm4

	jmp	NEAR $L$schedule_mangle_both
ALIGN	16
$L$schedule_mangle_dec:

	lea	r11,[$L$k_dksd]
	movdqa	xmm1,xmm9
	pandn	xmm1,xmm4
	psrld	xmm1,4
	pand	xmm4,xmm9

	movdqa	xmm2,XMMWORD[r11]
DB	102,15,56,0,212
	movdqa	xmm3,XMMWORD[16+r11]
DB	102,15,56,0,217
	pxor	xmm3,xmm2
DB	102,15,56,0,221

	movdqa	xmm2,XMMWORD[32+r11]
DB	102,15,56,0,212
	pxor	xmm2,xmm3
	movdqa	xmm3,XMMWORD[48+r11]
DB	102,15,56,0,217
	pxor	xmm3,xmm2
DB	102,15,56,0,221

	movdqa	xmm2,XMMWORD[64+r11]
DB	102,15,56,0,212
	pxor	xmm2,xmm3
	movdqa	xmm3,XMMWORD[80+r11]
DB	102,15,56,0,217
	pxor	xmm3,xmm2
DB	102,15,56,0,221

	movdqa	xmm2,XMMWORD[96+r11]
DB	102,15,56,0,212
	pxor	xmm2,xmm3
	movdqa	xmm3,XMMWORD[112+r11]
DB	102,15,56,0,217
	pxor	xmm3,xmm2

	add	rdx,-16

$L$schedule_mangle_both:
	movdqa	xmm1,XMMWORD[r10*1+r8]
DB	102,15,56,0,217
	add	r8,-16
	and	r8,0x30
	movdqu	XMMWORD[rdx],xmm3
	DB	0F3h,0C3h		;repret






global	vpaes_set_encrypt_key

ALIGN	16
vpaes_set_encrypt_key:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_vpaes_set_encrypt_key:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8



DB	243,15,30,250
	lea	rsp,[((-184))+rsp]
	movaps	XMMWORD[16+rsp],xmm6
	movaps	XMMWORD[32+rsp],xmm7
	movaps	XMMWORD[48+rsp],xmm8
	movaps	XMMWORD[64+rsp],xmm9
	movaps	XMMWORD[80+rsp],xmm10
	movaps	XMMWORD[96+rsp],xmm11
	movaps	XMMWORD[112+rsp],xmm12
	movaps	XMMWORD[128+rsp],xmm13
	movaps	XMMWORD[144+rsp],xmm14
	movaps	XMMWORD[160+rsp],xmm15
$L$enc_key_body:
	mov	eax,esi
	shr	eax,5
	add	eax,5
	mov	DWORD[240+rdx],eax

	mov	ecx,0
	mov	r8d,0x30
	call	_vpaes_schedule_core
	movaps	xmm6,XMMWORD[16+rsp]
	movaps	xmm7,XMMWORD[32+rsp]
	movaps	xmm8,XMMWORD[48+rsp]
	movaps	xmm9,XMMWORD[64+rsp]
	movaps	xmm10,XMMWORD[80+rsp]
	movaps	xmm11,XMMWORD[96+rsp]
	movaps	xmm12,XMMWORD[112+rsp]
	movaps	xmm13,XMMWORD[128+rsp]
	movaps	xmm14,XMMWORD[144+rsp]
	movaps	xmm15,XMMWORD[160+rsp]
	lea	rsp,[184+rsp]
$L$enc_key_epilogue:
	xor	eax,eax
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_vpaes_set_encrypt_key:

global	vpaes_set_decrypt_key

ALIGN	16
vpaes_set_decrypt_key:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_vpaes_set_decrypt_key:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8



DB	243,15,30,250
	lea	rsp,[((-184))+rsp]
	movaps	XMMWORD[16+rsp],xmm6
	movaps	XMMWORD[32+rsp],xmm7
	movaps	XMMWORD[48+rsp],xmm8
	movaps	XMMWORD[64+rsp],xmm9
	movaps	XMMWORD[80+rsp],xmm10
	movaps	XMMWORD[96+rsp],xmm11
	movaps	XMMWORD[112+rsp],xmm12
	movaps	XMMWORD[128+rsp],xmm13
	movaps	XMMWORD[144+rsp],xmm14
	movaps	XMMWORD[160+rsp],xmm15
$L$dec_key_body:
	mov	eax,esi
	shr	eax,5
	add	eax,5
	mov	DWORD[240+rdx],eax
	shl	eax,4
	lea	rdx,[16+rax*1+rdx]

	mov	ecx,1
	mov	r8d,esi
	shr	r8d,1
	and	r8d,32
	xor	r8d,32
	call	_vpaes_schedule_core
	movaps	xmm6,XMMWORD[16+rsp]
	movaps	xmm7,XMMWORD[32+rsp]
	movaps	xmm8,XMMWORD[48+rsp]
	movaps	xmm9,XMMWORD[64+rsp]
	movaps	xmm10,XMMWORD[80+rsp]
	movaps	xmm11,XMMWORD[96+rsp]
	movaps	xmm12,XMMWORD[112+rsp]
	movaps	xmm13,XMMWORD[128+rsp]
	movaps	xmm14,XMMWORD[144+rsp]
	movaps	xmm15,XMMWORD[160+rsp]
	lea	rsp,[184+rsp]
$L$dec_key_epilogue:
	xor	eax,eax
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_vpaes_set_decrypt_key:

global	vpaes_encrypt

ALIGN	16
vpaes_encrypt:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_vpaes_encrypt:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8



DB	243,15,30,250
	lea	rsp,[((-184))+rsp]
	movaps	XMMWORD[16+rsp],xmm6
	movaps	XMMWORD[32+rsp],xmm7
	movaps	XMMWORD[48+rsp],xmm8
	movaps	XMMWORD[64+rsp],xmm9
	movaps	XMMWORD[80+rsp],xmm10
	movaps	XMMWORD[96+rsp],xmm11
	movaps	XMMWORD[112+rsp],xmm12
	movaps	XMMWORD[128+rsp],xmm13
	movaps	XMMWORD[144+rsp],xmm14
	movaps	XMMWORD[160+rsp],xmm15
$L$enc_body:
	movdqu	xmm0,XMMWORD[rdi]
	call	_vpaes_preheat
	call	_vpaes_encrypt_core
	movdqu	XMMWORD[rsi],xmm0
	movaps	xmm6,XMMWORD[16+rsp]
	movaps	xmm7,XMMWORD[32+rsp]
	movaps	xmm8,XMMWORD[48+rsp]
	movaps	xmm9,XMMWORD[64+rsp]
	movaps	xmm10,XMMWORD[80+rsp]
	movaps	xmm11,XMMWORD[96+rsp]
	movaps	xmm12,XMMWORD[112+rsp]
	movaps	xmm13,XMMWORD[128+rsp]
	movaps	xmm14,XMMWORD[144+rsp]
	movaps	xmm15,XMMWORD[160+rsp]
	lea	rsp,[184+rsp]
$L$enc_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_vpaes_encrypt:

global	vpaes_decrypt

ALIGN	16
vpaes_decrypt:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_vpaes_decrypt:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8



DB	243,15,30,250
	lea	rsp,[((-184))+rsp]
	movaps	XMMWORD[16+rsp],xmm6
	movaps	XMMWORD[32+rsp],xmm7
	movaps	XMMWORD[48+rsp],xmm8
	movaps	XMMWORD[64+rsp],xmm9
	movaps	XMMWORD[80+rsp],xmm10
	movaps	XMMWORD[96+rsp],xmm11
	movaps	XMMWORD[112+rsp],xmm12
	movaps	XMMWORD[128+rsp],xmm13
	movaps	XMMWORD[144+rsp],xmm14
	movaps	XMMWORD[160+rsp],xmm15
$L$dec_body:
	movdqu	xmm0,XMMWORD[rdi]
	call	_vpaes_preheat
	call	_vpaes_decrypt_core
	movdqu	XMMWORD[rsi],xmm0
	movaps	xmm6,XMMWORD[16+rsp]
	movaps	xmm7,XMMWORD[32+rsp]
	movaps	xmm8,XMMWORD[48+rsp]
	movaps	xmm9,XMMWORD[64+rsp]
	movaps	xmm10,XMMWORD[80+rsp]
	movaps	xmm11,XMMWORD[96+rsp]
	movaps	xmm12,XMMWORD[112+rsp]
	movaps	xmm13,XMMWORD[128+rsp]
	movaps	xmm14,XMMWORD[144+rsp]
	movaps	xmm15,XMMWORD[160+rsp]
	lea	rsp,[184+rsp]
$L$dec_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_vpaes_decrypt:
global	vpaes_cbc_encrypt

ALIGN	16
vpaes_cbc_encrypt:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_vpaes_cbc_encrypt:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



DB	243,15,30,250
	xchg	rdx,rcx
	sub	rcx,16
	jc	NEAR $L$cbc_abort
	lea	rsp,[((-184))+rsp]
	movaps	XMMWORD[16+rsp],xmm6
	movaps	XMMWORD[32+rsp],xmm7
	movaps	XMMWORD[48+rsp],xmm8
	movaps	XMMWORD[64+rsp],xmm9
	movaps	XMMWORD[80+rsp],xmm10
	movaps	XMMWORD[96+rsp],xmm11
	movaps	XMMWORD[112+rsp],xmm12
	movaps	XMMWORD[128+rsp],xmm13
	movaps	XMMWORD[144+rsp],xmm14
	movaps	XMMWORD[160+rsp],xmm15
$L$cbc_body:
	movdqu	xmm6,XMMWORD[r8]
	sub	rsi,rdi
	call	_vpaes_preheat
	cmp	r9d,0
	je	NEAR $L$cbc_dec_loop
	jmp	NEAR $L$cbc_enc_loop
ALIGN	16
$L$cbc_enc_loop:
	movdqu	xmm0,XMMWORD[rdi]
	pxor	xmm0,xmm6
	call	_vpaes_encrypt_core
	movdqa	xmm6,xmm0
	movdqu	XMMWORD[rdi*1+rsi],xmm0
	lea	rdi,[16+rdi]
	sub	rcx,16
	jnc	NEAR $L$cbc_enc_loop
	jmp	NEAR $L$cbc_done
ALIGN	16
$L$cbc_dec_loop:
	movdqu	xmm0,XMMWORD[rdi]
	movdqa	xmm7,xmm0
	call	_vpaes_decrypt_core
	pxor	xmm0,xmm6
	movdqa	xmm6,xmm7
	movdqu	XMMWORD[rdi*1+rsi],xmm0
	lea	rdi,[16+rdi]
	sub	rcx,16
	jnc	NEAR $L$cbc_dec_loop
$L$cbc_done:
	movdqu	XMMWORD[r8],xmm6
	movaps	xmm6,XMMWORD[16+rsp]
	movaps	xmm7,XMMWORD[32+rsp]
	movaps	xmm8,XMMWORD[48+rsp]
	movaps	xmm9,XMMWORD[64+rsp]
	movaps	xmm10,XMMWORD[80+rsp]
	movaps	xmm11,XMMWORD[96+rsp]
	movaps	xmm12,XMMWORD[112+rsp]
	movaps	xmm13,XMMWORD[128+rsp]
	movaps	xmm14,XMMWORD[144+rsp]
	movaps	xmm15,XMMWORD[160+rsp]
	lea	rsp,[184+rsp]
$L$cbc_epilogue:
$L$cbc_abort:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_vpaes_cbc_encrypt:







ALIGN	16
_vpaes_preheat:

	lea	r10,[$L$k_s0F]
	movdqa	xmm10,XMMWORD[((-32))+r10]
	movdqa	xmm11,XMMWORD[((-16))+r10]
	movdqa	xmm9,XMMWORD[r10]
	movdqa	xmm13,XMMWORD[48+r10]
	movdqa	xmm12,XMMWORD[64+r10]
	movdqa	xmm15,XMMWORD[80+r10]
	movdqa	xmm14,XMMWORD[96+r10]
	DB	0F3h,0C3h		;repret








ALIGN	64
_vpaes_consts:
$L$k_inv:
	DQ	0x0E05060F0D080180,0x040703090A0B0C02
	DQ	0x01040A060F0B0780,0x030D0E0C02050809

$L$k_s0F:
	DQ	0x0F0F0F0F0F0F0F0F,0x0F0F0F0F0F0F0F0F

$L$k_ipt:
	DQ	0xC2B2E8985A2A7000,0xCABAE09052227808
	DQ	0x4C01307D317C4D00,0xCD80B1FCB0FDCC81

$L$k_sb1:
	DQ	0xB19BE18FCB503E00,0xA5DF7A6E142AF544
	DQ	0x3618D415FAE22300,0x3BF7CCC10D2ED9EF
$L$k_sb2:
	DQ	0xE27A93C60B712400,0x5EB7E955BC982FCD
	DQ	0x69EB88400AE12900,0xC2A163C8AB82234A
$L$k_sbo:
	DQ	0xD0D26D176FBDC700,0x15AABF7AC502A878
	DQ	0xCFE474A55FBB6A00,0x8E1E90D1412B35FA

$L$k_mc_forward:
	DQ	0x0407060500030201,0x0C0F0E0D080B0A09
	DQ	0x080B0A0904070605,0x000302010C0F0E0D
	DQ	0x0C0F0E0D080B0A09,0x0407060500030201
	DQ	0x000302010C0F0E0D,0x080B0A0904070605

$L$k_mc_backward:
	DQ	0x0605040702010003,0x0E0D0C0F0A09080B
	DQ	0x020100030E0D0C0F,0x0A09080B06050407
	DQ	0x0E0D0C0F0A09080B,0x0605040702010003
	DQ	0x0A09080B06050407,0x020100030E0D0C0F

$L$k_sr:
	DQ	0x0706050403020100,0x0F0E0D0C0B0A0908
	DQ	0x030E09040F0A0500,0x0B06010C07020D08
	DQ	0x0F060D040B020900,0x070E050C030A0108
	DQ	0x0B0E0104070A0D00,0x0306090C0F020508

$L$k_rcon:
	DQ	0x1F8391B9AF9DEEB6,0x702A98084D7C7D81

$L$k_s63:
	DQ	0x5B5B5B5B5B5B5B5B,0x5B5B5B5B5B5B5B5B

$L$k_opt:
	DQ	0xFF9F4929D6B66000,0xF7974121DEBE6808
	DQ	0x01EDBD5150BCEC00,0xE10D5DB1B05C0CE0

$L$k_deskew:
	DQ	0x07E4A34047A4E300,0x1DFEB95A5DBEF91A
	DQ	0x5F36B5DC83EA6900,0x2841C2ABF49D1E77





$L$k_dksd:
	DQ	0xFEB91A5DA3E44700,0x0740E3A45A1DBEF9
	DQ	0x41C277F4B5368300,0x5FDC69EAAB289D1E
$L$k_dksb:
	DQ	0x9A4FCA1F8550D500,0x03D653861CC94C99
	DQ	0x115BEDA7B6FC4A00,0xD993256F7E3482C8
$L$k_dkse:
	DQ	0xD5031CCA1FC9D600,0x53859A4C994F5086
	DQ	0xA23196054FDC7BE8,0xCD5EF96A20B31487
$L$k_dks9:
	DQ	0xB6116FC87ED9A700,0x4AED933482255BFC
	DQ	0x4576516227143300,0x8BB89FACE9DAFDCE





$L$k_dipt:
	DQ	0x0F505B040B545F00,0x154A411E114E451A
	DQ	0x86E383E660056500,0x12771772F491F194

$L$k_dsb9:
	DQ	0x851C03539A86D600,0xCAD51F504F994CC9
	DQ	0xC03B1789ECD74900,0x725E2C9EB2FBA565
$L$k_dsbd:
	DQ	0x7D57CCDFE6B1A200,0xF56E9B13882A4439
	DQ	0x3CE2FAF724C6CB00,0x2931180D15DEEFD3
$L$k_dsbb:
	DQ	0xD022649296B44200,0x602646F6B0F2D404
	DQ	0xC19498A6CD596700,0xF3FF0C3E3255AA6B
$L$k_dsbe:
	DQ	0x46F2929626D4D000,0x2242600464B4F6B0
	DQ	0x0C55A6CDFFAAC100,0x9467F36B98593E32
$L$k_dsbo:
	DQ	0x1387EA537EF94000,0xC7AA6DB9D4943E2D
	DQ	0x12D7560F93441D00,0xCA4B8159D8C58E9C
DB	86,101,99,116,111,114,32,80,101,114,109,117,116,97,116,105
DB	111,110,32,65,69,83,32,102,111,114,32,120,56,54,95,54
DB	52,47,83,83,83,69,51,44,32,77,105,107,101,32,72,97
DB	109,98,117,114,103,32,40,83,116,97,110,102,111,114,100,32
DB	85,110,105,118,101,114,115,105,116,121,41,0
ALIGN	64

EXTERN	__imp_RtlVirtualUnwind

ALIGN	16
se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$in_prologue

	mov	rax,QWORD[152+r8]

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$in_prologue

	lea	rsi,[16+rax]
	lea	rdi,[512+r8]
	mov	ecx,20
	DD	0xa548f3fc
	lea	rax,[184+rax]

$L$in_prologue:
	mov	rdi,QWORD[8+rax]
	mov	rsi,QWORD[16+rax]
	mov	QWORD[152+r8],rax
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi

	mov	rdi,QWORD[40+r9]
	mov	rsi,r8
	mov	ecx,154
	DD	0xa548f3fc

	mov	rsi,r9
	xor	rcx,rcx
	mov	rdx,QWORD[8+rsi]
	mov	r8,QWORD[rsi]
	mov	r9,QWORD[16+rsi]
	mov	r10,QWORD[40+rsi]
	lea	r11,[56+rsi]
	lea	r12,[24+rsi]
	mov	QWORD[32+rsp],r10
	mov	QWORD[40+rsp],r11
	mov	QWORD[48+rsp],r12
	mov	QWORD[56+rsp],rcx
	call	QWORD[__imp_RtlVirtualUnwind]

	mov	eax,1
	add	rsp,64
	popfq
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	pop	rbx
	pop	rdi
	pop	rsi
	DB	0F3h,0C3h		;repret


section	.pdata rdata align=4
ALIGN	4
	DD	$L$SEH_begin_vpaes_set_encrypt_key wrt ..imagebase
	DD	$L$SEH_end_vpaes_set_encrypt_key wrt ..imagebase
	DD	$L$SEH_info_vpaes_set_encrypt_key wrt ..imagebase

	DD	$L$SEH_begin_vpaes_set_decrypt_key wrt ..imagebase
	DD	$L$SEH_end_vpaes_set_decrypt_key wrt ..imagebase
	DD	$L$SEH_info_vpaes_set_decrypt_key wrt ..imagebase

	DD	$L$SEH_begin_vpaes_encrypt wrt ..imagebase
	DD	$L$SEH_end_vpaes_encrypt wrt ..imagebase
	DD	$L$SEH_info_vpaes_encrypt wrt ..imagebase

	DD	$L$SEH_begin_vpaes_decrypt wrt ..imagebase
	DD	$L$SEH_end_vpaes_decrypt wrt ..imagebase
	DD	$L$SEH_info_vpaes_decrypt wrt ..imagebase

	DD	$L$SEH_begin_vpaes_cbc_encrypt wrt ..imagebase
	DD	$L$SEH_end_vpaes_cbc_encrypt wrt ..imagebase
	DD	$L$SEH_info_vpaes_cbc_encrypt wrt ..imagebase

section	.xdata rdata align=8
ALIGN	8
$L$SEH_info_vpaes_set_encrypt_key:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$enc_key_body wrt ..imagebase,$L$enc_key_epilogue wrt ..imagebase
$L$SEH_info_vpaes_set_decrypt_key:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$dec_key_body wrt ..imagebase,$L$dec_key_epilogue wrt ..imagebase
$L$SEH_info_vpaes_encrypt:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$enc_body wrt ..imagebase,$L$enc_epilogue wrt ..imagebase
$L$SEH_info_vpaes_decrypt:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$dec_body wrt ..imagebase,$L$dec_epilogue wrt ..imagebase
$L$SEH_info_vpaes_cbc_encrypt:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$cbc_body wrt ..imagebase,$L$cbc_epilogue wrt ..imagebase
                                                                                                                                                                                                     node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/bn/                                 0000775 0000000 0000000 00000000000 14746647661 0024415 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/bn/rsaz-avx2.asm                    0000664 0000000 0000000 00000126767 14746647661 0026777 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        default	rel
%define XMMWORD
%define YMMWORD
%define ZMMWORD
section	.text code align=64


global	rsaz_1024_sqr_avx2

ALIGN	64
rsaz_1024_sqr_avx2:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_rsaz_1024_sqr_avx2:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]



	lea	rax,[rsp]

	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

	vzeroupper
	lea	rsp,[((-168))+rsp]
	vmovaps	XMMWORD[(-216)+rax],xmm6
	vmovaps	XMMWORD[(-200)+rax],xmm7
	vmovaps	XMMWORD[(-184)+rax],xmm8
	vmovaps	XMMWORD[(-168)+rax],xmm9
	vmovaps	XMMWORD[(-152)+rax],xmm10
	vmovaps	XMMWORD[(-136)+rax],xmm11
	vmovaps	XMMWORD[(-120)+rax],xmm12
	vmovaps	XMMWORD[(-104)+rax],xmm13
	vmovaps	XMMWORD[(-88)+rax],xmm14
	vmovaps	XMMWORD[(-72)+rax],xmm15
$L$sqr_1024_body:
	mov	rbp,rax

	mov	r13,rdx
	sub	rsp,832
	mov	r15,r13
	sub	rdi,-128
	sub	rsi,-128
	sub	r13,-128

	and	r15,4095
	add	r15,32*10
	shr	r15,12
	vpxor	ymm9,ymm9,ymm9
	jz	NEAR $L$sqr_1024_no_n_copy





	sub	rsp,32*10
	vmovdqu	ymm0,YMMWORD[((0-128))+r13]
	and	rsp,-2048
	vmovdqu	ymm1,YMMWORD[((32-128))+r13]
	vmovdqu	ymm2,YMMWORD[((64-128))+r13]
	vmovdqu	ymm3,YMMWORD[((96-128))+r13]
	vmovdqu	ymm4,YMMWORD[((128-128))+r13]
	vmovdqu	ymm5,YMMWORD[((160-128))+r13]
	vmovdqu	ymm6,YMMWORD[((192-128))+r13]
	vmovdqu	ymm7,YMMWORD[((224-128))+r13]
	vmovdqu	ymm8,YMMWORD[((256-128))+r13]
	lea	r13,[((832+128))+rsp]
	vmovdqu	YMMWORD[(0-128)+r13],ymm0
	vmovdqu	YMMWORD[(32-128)+r13],ymm1
	vmovdqu	YMMWORD[(64-128)+r13],ymm2
	vmovdqu	YMMWORD[(96-128)+r13],ymm3
	vmovdqu	YMMWORD[(128-128)+r13],ymm4
	vmovdqu	YMMWORD[(160-128)+r13],ymm5
	vmovdqu	YMMWORD[(192-128)+r13],ymm6
	vmovdqu	YMMWORD[(224-128)+r13],ymm7
	vmovdqu	YMMWORD[(256-128)+r13],ymm8
	vmovdqu	YMMWORD[(288-128)+r13],ymm9

$L$sqr_1024_no_n_copy:
	and	rsp,-1024

	vmovdqu	ymm1,YMMWORD[((32-128))+rsi]
	vmovdqu	ymm2,YMMWORD[((64-128))+rsi]
	vmovdqu	ymm3,YMMWORD[((96-128))+rsi]
	vmovdqu	ymm4,YMMWORD[((128-128))+rsi]
	vmovdqu	ymm5,YMMWORD[((160-128))+rsi]
	vmovdqu	ymm6,YMMWORD[((192-128))+rsi]
	vmovdqu	ymm7,YMMWORD[((224-128))+rsi]
	vmovdqu	ymm8,YMMWORD[((256-128))+rsi]

	lea	rbx,[192+rsp]
	vmovdqu	ymm15,YMMWORD[$L$and_mask]
	jmp	NEAR $L$OOP_GRANDE_SQR_1024

ALIGN	32
$L$OOP_GRANDE_SQR_1024:
	lea	r9,[((576+128))+rsp]
	lea	r12,[448+rsp]




	vpaddq	ymm1,ymm1,ymm1
	vpbroadcastq	ymm10,QWORD[((0-128))+rsi]
	vpaddq	ymm2,ymm2,ymm2
	vmovdqa	YMMWORD[(0-128)+r9],ymm1
	vpaddq	ymm3,ymm3,ymm3
	vmovdqa	YMMWORD[(32-128)+r9],ymm2
	vpaddq	ymm4,ymm4,ymm4
	vmovdqa	YMMWORD[(64-128)+r9],ymm3
	vpaddq	ymm5,ymm5,ymm5
	vmovdqa	YMMWORD[(96-128)+r9],ymm4
	vpaddq	ymm6,ymm6,ymm6
	vmovdqa	YMMWORD[(128-128)+r9],ymm5
	vpaddq	ymm7,ymm7,ymm7
	vmovdqa	YMMWORD[(160-128)+r9],ymm6
	vpaddq	ymm8,ymm8,ymm8
	vmovdqa	YMMWORD[(192-128)+r9],ymm7
	vpxor	ymm9,ymm9,ymm9
	vmovdqa	YMMWORD[(224-128)+r9],ymm8

	vpmuludq	ymm0,ymm10,YMMWORD[((0-128))+rsi]
	vpbroadcastq	ymm11,QWORD[((32-128))+rsi]
	vmovdqu	YMMWORD[(288-192)+rbx],ymm9
	vpmuludq	ymm1,ymm1,ymm10
	vmovdqu	YMMWORD[(320-448)+r12],ymm9
	vpmuludq	ymm2,ymm2,ymm10
	vmovdqu	YMMWORD[(352-448)+r12],ymm9
	vpmuludq	ymm3,ymm3,ymm10
	vmovdqu	YMMWORD[(384-448)+r12],ymm9
	vpmuludq	ymm4,ymm4,ymm10
	vmovdqu	YMMWORD[(416-448)+r12],ymm9
	vpmuludq	ymm5,ymm5,ymm10
	vmovdqu	YMMWORD[(448-448)+r12],ymm9
	vpmuludq	ymm6,ymm6,ymm10
	vmovdqu	YMMWORD[(480-448)+r12],ymm9
	vpmuludq	ymm7,ymm7,ymm10
	vmovdqu	YMMWORD[(512-448)+r12],ymm9
	vpmuludq	ymm8,ymm8,ymm10
	vpbroadcastq	ymm10,QWORD[((64-128))+rsi]
	vmovdqu	YMMWORD[(544-448)+r12],ymm9

	mov	r15,rsi
	mov	r14d,4
	jmp	NEAR $L$sqr_entry_1024
ALIGN	32
$L$OOP_SQR_1024:
	vpbroadcastq	ymm11,QWORD[((32-128))+r15]
	vpmuludq	ymm0,ymm10,YMMWORD[((0-128))+rsi]
	vpaddq	ymm0,ymm0,YMMWORD[((0-192))+rbx]
	vpmuludq	ymm1,ymm10,YMMWORD[((0-128))+r9]
	vpaddq	ymm1,ymm1,YMMWORD[((32-192))+rbx]
	vpmuludq	ymm2,ymm10,YMMWORD[((32-128))+r9]
	vpaddq	ymm2,ymm2,YMMWORD[((64-192))+rbx]
	vpmuludq	ymm3,ymm10,YMMWORD[((64-128))+r9]
	vpaddq	ymm3,ymm3,YMMWORD[((96-192))+rbx]
	vpmuludq	ymm4,ymm10,YMMWORD[((96-128))+r9]
	vpaddq	ymm4,ymm4,YMMWORD[((128-192))+rbx]
	vpmuludq	ymm5,ymm10,YMMWORD[((128-128))+r9]
	vpaddq	ymm5,ymm5,YMMWORD[((160-192))+rbx]
	vpmuludq	ymm6,ymm10,YMMWORD[((160-128))+r9]
	vpaddq	ymm6,ymm6,YMMWORD[((192-192))+rbx]
	vpmuludq	ymm7,ymm10,YMMWORD[((192-128))+r9]
	vpaddq	ymm7,ymm7,YMMWORD[((224-192))+rbx]
	vpmuludq	ymm8,ymm10,YMMWORD[((224-128))+r9]
	vpbroadcastq	ymm10,QWORD[((64-128))+r15]
	vpaddq	ymm8,ymm8,YMMWORD[((256-192))+rbx]
$L$sqr_entry_1024:
	vmovdqu	YMMWORD[(0-192)+rbx],ymm0
	vmovdqu	YMMWORD[(32-192)+rbx],ymm1

	vpmuludq	ymm12,ymm11,YMMWORD[((32-128))+rsi]
	vpaddq	ymm2,ymm2,ymm12
	vpmuludq	ymm14,ymm11,YMMWORD[((32-128))+r9]
	vpaddq	ymm3,ymm3,ymm14
	vpmuludq	ymm13,ymm11,YMMWORD[((64-128))+r9]
	vpaddq	ymm4,ymm4,ymm13
	vpmuludq	ymm12,ymm11,YMMWORD[((96-128))+r9]
	vpaddq	ymm5,ymm5,ymm12
	vpmuludq	ymm14,ymm11,YMMWORD[((128-128))+r9]
	vpaddq	ymm6,ymm6,ymm14
	vpmuludq	ymm13,ymm11,YMMWORD[((160-128))+r9]
	vpaddq	ymm7,ymm7,ymm13
	vpmuludq	ymm12,ymm11,YMMWORD[((192-128))+r9]
	vpaddq	ymm8,ymm8,ymm12
	vpmuludq	ymm0,ymm11,YMMWORD[((224-128))+r9]
	vpbroadcastq	ymm11,QWORD[((96-128))+r15]
	vpaddq	ymm0,ymm0,YMMWORD[((288-192))+rbx]

	vmovdqu	YMMWORD[(64-192)+rbx],ymm2
	vmovdqu	YMMWORD[(96-192)+rbx],ymm3

	vpmuludq	ymm13,ymm10,YMMWORD[((64-128))+rsi]
	vpaddq	ymm4,ymm4,ymm13
	vpmuludq	ymm12,ymm10,YMMWORD[((64-128))+r9]
	vpaddq	ymm5,ymm5,ymm12
	vpmuludq	ymm14,ymm10,YMMWORD[((96-128))+r9]
	vpaddq	ymm6,ymm6,ymm14
	vpmuludq	ymm13,ymm10,YMMWORD[((128-128))+r9]
	vpaddq	ymm7,ymm7,ymm13
	vpmuludq	ymm12,ymm10,YMMWORD[((160-128))+r9]
	vpaddq	ymm8,ymm8,ymm12
	vpmuludq	ymm14,ymm10,YMMWORD[((192-128))+r9]
	vpaddq	ymm0,ymm0,ymm14
	vpmuludq	ymm1,ymm10,YMMWORD[((224-128))+r9]
	vpbroadcastq	ymm10,QWORD[((128-128))+r15]
	vpaddq	ymm1,ymm1,YMMWORD[((320-448))+r12]

	vmovdqu	YMMWORD[(128-192)+rbx],ymm4
	vmovdqu	YMMWORD[(160-192)+rbx],ymm5

	vpmuludq	ymm12,ymm11,YMMWORD[((96-128))+rsi]
	vpaddq	ymm6,ymm6,ymm12
	vpmuludq	ymm14,ymm11,YMMWORD[((96-128))+r9]
	vpaddq	ymm7,ymm7,ymm14
	vpmuludq	ymm13,ymm11,YMMWORD[((128-128))+r9]
	vpaddq	ymm8,ymm8,ymm13
	vpmuludq	ymm12,ymm11,YMMWORD[((160-128))+r9]
	vpaddq	ymm0,ymm0,ymm12
	vpmuludq	ymm14,ymm11,YMMWORD[((192-128))+r9]
	vpaddq	ymm1,ymm1,ymm14
	vpmuludq	ymm2,ymm11,YMMWORD[((224-128))+r9]
	vpbroadcastq	ymm11,QWORD[((160-128))+r15]
	vpaddq	ymm2,ymm2,YMMWORD[((352-448))+r12]

	vmovdqu	YMMWORD[(192-192)+rbx],ymm6
	vmovdqu	YMMWORD[(224-192)+rbx],ymm7

	vpmuludq	ymm12,ymm10,YMMWORD[((128-128))+rsi]
	vpaddq	ymm8,ymm8,ymm12
	vpmuludq	ymm14,ymm10,YMMWORD[((128-128))+r9]
	vpaddq	ymm0,ymm0,ymm14
	vpmuludq	ymm13,ymm10,YMMWORD[((160-128))+r9]
	vpaddq	ymm1,ymm1,ymm13
	vpmuludq	ymm12,ymm10,YMMWORD[((192-128))+r9]
	vpaddq	ymm2,ymm2,ymm12
	vpmuludq	ymm3,ymm10,YMMWORD[((224-128))+r9]
	vpbroadcastq	ymm10,QWORD[((192-128))+r15]
	vpaddq	ymm3,ymm3,YMMWORD[((384-448))+r12]

	vmovdqu	YMMWORD[(256-192)+rbx],ymm8
	vmovdqu	YMMWORD[(288-192)+rbx],ymm0
	lea	rbx,[8+rbx]

	vpmuludq	ymm13,ymm11,YMMWORD[((160-128))+rsi]
	vpaddq	ymm1,ymm1,ymm13
	vpmuludq	ymm12,ymm11,YMMWORD[((160-128))+r9]
	vpaddq	ymm2,ymm2,ymm12
	vpmuludq	ymm14,ymm11,YMMWORD[((192-128))+r9]
	vpaddq	ymm3,ymm3,ymm14
	vpmuludq	ymm4,ymm11,YMMWORD[((224-128))+r9]
	vpbroadcastq	ymm11,QWORD[((224-128))+r15]
	vpaddq	ymm4,ymm4,YMMWORD[((416-448))+r12]

	vmovdqu	YMMWORD[(320-448)+r12],ymm1
	vmovdqu	YMMWORD[(352-448)+r12],ymm2

	vpmuludq	ymm12,ymm10,YMMWORD[((192-128))+rsi]
	vpaddq	ymm3,ymm3,ymm12
	vpmuludq	ymm14,ymm10,YMMWORD[((192-128))+r9]
	vpbroadcastq	ymm0,QWORD[((256-128))+r15]
	vpaddq	ymm4,ymm4,ymm14
	vpmuludq	ymm5,ymm10,YMMWORD[((224-128))+r9]
	vpbroadcastq	ymm10,QWORD[((0+8-128))+r15]
	vpaddq	ymm5,ymm5,YMMWORD[((448-448))+r12]

	vmovdqu	YMMWORD[(384-448)+r12],ymm3
	vmovdqu	YMMWORD[(416-448)+r12],ymm4
	lea	r15,[8+r15]

	vpmuludq	ymm12,ymm11,YMMWORD[((224-128))+rsi]
	vpaddq	ymm5,ymm5,ymm12
	vpmuludq	ymm6,ymm11,YMMWORD[((224-128))+r9]
	vpaddq	ymm6,ymm6,YMMWORD[((480-448))+r12]

	vpmuludq	ymm7,ymm0,YMMWORD[((256-128))+rsi]
	vmovdqu	YMMWORD[(448-448)+r12],ymm5
	vpaddq	ymm7,ymm7,YMMWORD[((512-448))+r12]
	vmovdqu	YMMWORD[(480-448)+r12],ymm6
	vmovdqu	YMMWORD[(512-448)+r12],ymm7
	lea	r12,[8+r12]

	dec	r14d
	jnz	NEAR $L$OOP_SQR_1024

	vmovdqu	ymm8,YMMWORD[256+rsp]
	vmovdqu	ymm1,YMMWORD[288+rsp]
	vmovdqu	ymm2,YMMWORD[320+rsp]
	lea	rbx,[192+rsp]

	vpsrlq	ymm14,ymm8,29
	vpand	ymm8,ymm8,ymm15
	vpsrlq	ymm11,ymm1,29
	vpand	ymm1,ymm1,ymm15

	vpermq	ymm14,ymm14,0x93
	vpxor	ymm9,ymm9,ymm9
	vpermq	ymm11,ymm11,0x93

	vpblendd	ymm10,ymm14,ymm9,3
	vpblendd	ymm14,ymm11,ymm14,3
	vpaddq	ymm8,ymm8,ymm10
	vpblendd	ymm11,ymm9,ymm11,3
	vpaddq	ymm1,ymm1,ymm14
	vpaddq	ymm2,ymm2,ymm11
	vmovdqu	YMMWORD[(288-192)+rbx],ymm1
	vmovdqu	YMMWORD[(320-192)+rbx],ymm2

	mov	rax,QWORD[rsp]
	mov	r10,QWORD[8+rsp]
	mov	r11,QWORD[16+rsp]
	mov	r12,QWORD[24+rsp]
	vmovdqu	ymm1,YMMWORD[32+rsp]
	vmovdqu	ymm2,YMMWORD[((64-192))+rbx]
	vmovdqu	ymm3,YMMWORD[((96-192))+rbx]
	vmovdqu	ymm4,YMMWORD[((128-192))+rbx]
	vmovdqu	ymm5,YMMWORD[((160-192))+rbx]
	vmovdqu	ymm6,YMMWORD[((192-192))+rbx]
	vmovdqu	ymm7,YMMWORD[((224-192))+rbx]

	mov	r9,rax
	imul	eax,ecx
	and	eax,0x1fffffff
	vmovd	xmm12,eax

	mov	rdx,rax
	imul	rax,QWORD[((-128))+r13]
	vpbroadcastq	ymm12,xmm12
	add	r9,rax
	mov	rax,rdx
	imul	rax,QWORD[((8-128))+r13]
	shr	r9,29
	add	r10,rax
	mov	rax,rdx
	imul	rax,QWORD[((16-128))+r13]
	add	r10,r9
	add	r11,rax
	imul	rdx,QWORD[((24-128))+r13]
	add	r12,rdx

	mov	rax,r10
	imul	eax,ecx
	and	eax,0x1fffffff

	mov	r14d,9
	jmp	NEAR $L$OOP_REDUCE_1024

ALIGN	32
$L$OOP_REDUCE_1024:
	vmovd	xmm13,eax
	vpbroadcastq	ymm13,xmm13

	vpmuludq	ymm10,ymm12,YMMWORD[((32-128))+r13]
	mov	rdx,rax
	imul	rax,QWORD[((-128))+r13]
	vpaddq	ymm1,ymm1,ymm10
	add	r10,rax
	vpmuludq	ymm14,ymm12,YMMWORD[((64-128))+r13]
	mov	rax,rdx
	imul	rax,QWORD[((8-128))+r13]
	vpaddq	ymm2,ymm2,ymm14
	vpmuludq	ymm11,ymm12,YMMWORD[((96-128))+r13]
DB	0x67
	add	r11,rax
DB	0x67
	mov	rax,rdx
	imul	rax,QWORD[((16-128))+r13]
	shr	r10,29
	vpaddq	ymm3,ymm3,ymm11
	vpmuludq	ymm10,ymm12,YMMWORD[((128-128))+r13]
	add	r12,rax
	add	r11,r10
	vpaddq	ymm4,ymm4,ymm10
	vpmuludq	ymm14,ymm12,YMMWORD[((160-128))+r13]
	mov	rax,r11
	imul	eax,ecx
	vpaddq	ymm5,ymm5,ymm14
	vpmuludq	ymm11,ymm12,YMMWORD[((192-128))+r13]
	and	eax,0x1fffffff
	vpaddq	ymm6,ymm6,ymm11
	vpmuludq	ymm10,ymm12,YMMWORD[((224-128))+r13]
	vpaddq	ymm7,ymm7,ymm10
	vpmuludq	ymm14,ymm12,YMMWORD[((256-128))+r13]
	vmovd	xmm12,eax

	vpaddq	ymm8,ymm8,ymm14

	vpbroadcastq	ymm12,xmm12

	vpmuludq	ymm11,ymm13,YMMWORD[((32-8-128))+r13]
	vmovdqu	ymm14,YMMWORD[((96-8-128))+r13]
	mov	rdx,rax
	imul	rax,QWORD[((-128))+r13]
	vpaddq	ymm1,ymm1,ymm11
	vpmuludq	ymm10,ymm13,YMMWORD[((64-8-128))+r13]
	vmovdqu	ymm11,YMMWORD[((128-8-128))+r13]
	add	r11,rax
	mov	rax,rdx
	imul	rax,QWORD[((8-128))+r13]
	vpaddq	ymm2,ymm2,ymm10
	add	rax,r12
	shr	r11,29
	vpmuludq	ymm14,ymm14,ymm13
	vmovdqu	ymm10,YMMWORD[((160-8-128))+r13]
	add	rax,r11
	vpaddq	ymm3,ymm3,ymm14
	vpmuludq	ymm11,ymm11,ymm13
	vmovdqu	ymm14,YMMWORD[((192-8-128))+r13]
DB	0x67
	mov	r12,rax
	imul	eax,ecx
	vpaddq	ymm4,ymm4,ymm11
	vpmuludq	ymm10,ymm10,ymm13
DB	0xc4,0x41,0x7e,0x6f,0x9d,0x58,0x00,0x00,0x00
	and	eax,0x1fffffff
	vpaddq	ymm5,ymm5,ymm10
	vpmuludq	ymm14,ymm14,ymm13
	vmovdqu	ymm10,YMMWORD[((256-8-128))+r13]
	vpaddq	ymm6,ymm6,ymm14
	vpmuludq	ymm11,ymm11,ymm13
	vmovdqu	ymm9,YMMWORD[((288-8-128))+r13]
	vmovd	xmm0,eax
	imul	rax,QWORD[((-128))+r13]
	vpaddq	ymm7,ymm7,ymm11
	vpmuludq	ymm10,ymm10,ymm13
	vmovdqu	ymm14,YMMWORD[((32-16-128))+r13]
	vpbroadcastq	ymm0,xmm0
	vpaddq	ymm8,ymm8,ymm10
	vpmuludq	ymm9,ymm9,ymm13
	vmovdqu	ymm11,YMMWORD[((64-16-128))+r13]
	add	r12,rax

	vmovdqu	ymm13,YMMWORD[((32-24-128))+r13]
	vpmuludq	ymm14,ymm14,ymm12
	vmovdqu	ymm10,YMMWORD[((96-16-128))+r13]
	vpaddq	ymm1,ymm1,ymm14
	vpmuludq	ymm13,ymm13,ymm0
	vpmuludq	ymm11,ymm11,ymm12
DB	0xc4,0x41,0x7e,0x6f,0xb5,0xf0,0xff,0xff,0xff
	vpaddq	ymm13,ymm13,ymm1
	vpaddq	ymm2,ymm2,ymm11
	vpmuludq	ymm10,ymm10,ymm12
	vmovdqu	ymm11,YMMWORD[((160-16-128))+r13]
DB	0x67
	vmovq	rax,xmm13
	vmovdqu	YMMWORD[rsp],ymm13
	vpaddq	ymm3,ymm3,ymm10
	vpmuludq	ymm14,ymm14,ymm12
	vmovdqu	ymm10,YMMWORD[((192-16-128))+r13]
	vpaddq	ymm4,ymm4,ymm14
	vpmuludq	ymm11,ymm11,ymm12
	vmovdqu	ymm14,YMMWORD[((224-16-128))+r13]
	vpaddq	ymm5,ymm5,ymm11
	vpmuludq	ymm10,ymm10,ymm12
	vmovdqu	ymm11,YMMWORD[((256-16-128))+r13]
	vpaddq	ymm6,ymm6,ymm10
	vpmuludq	ymm14,ymm14,ymm12
	shr	r12,29
	vmovdqu	ymm10,YMMWORD[((288-16-128))+r13]
	add	rax,r12
	vpaddq	ymm7,ymm7,ymm14
	vpmuludq	ymm11,ymm11,ymm12

	mov	r9,rax
	imul	eax,ecx
	vpaddq	ymm8,ymm8,ymm11
	vpmuludq	ymm10,ymm10,ymm12
	and	eax,0x1fffffff
	vmovd	xmm12,eax
	vmovdqu	ymm11,YMMWORD[((96-24-128))+r13]
DB	0x67
	vpaddq	ymm9,ymm9,ymm10
	vpbroadcastq	ymm12,xmm12

	vpmuludq	ymm14,ymm0,YMMWORD[((64-24-128))+r13]
	vmovdqu	ymm10,YMMWORD[((128-24-128))+r13]
	mov	rdx,rax
	imul	rax,QWORD[((-128))+r13]
	mov	r10,QWORD[8+rsp]
	vpaddq	ymm1,ymm2,ymm14
	vpmuludq	ymm11,ymm11,ymm0
	vmovdqu	ymm14,YMMWORD[((160-24-128))+r13]
	add	r9,rax
	mov	rax,rdx
	imul	rax,QWORD[((8-128))+r13]
DB	0x67
	shr	r9,29
	mov	r11,QWORD[16+rsp]
	vpaddq	ymm2,ymm3,ymm11
	vpmuludq	ymm10,ymm10,ymm0
	vmovdqu	ymm11,YMMWORD[((192-24-128))+r13]
	add	r10,rax
	mov	rax,rdx
	imul	rax,QWORD[((16-128))+r13]
	vpaddq	ymm3,ymm4,ymm10
	vpmuludq	ymm14,ymm14,ymm0
	vmovdqu	ymm10,YMMWORD[((224-24-128))+r13]
	imul	rdx,QWORD[((24-128))+r13]
	add	r11,rax
	lea	rax,[r10*1+r9]
	vpaddq	ymm4,ymm5,ymm14
	vpmuludq	ymm11,ymm11,ymm0
	vmovdqu	ymm14,YMMWORD[((256-24-128))+r13]
	mov	r10,rax
	imul	eax,ecx
	vpmuludq	ymm10,ymm10,ymm0
	vpaddq	ymm5,ymm6,ymm11
	vmovdqu	ymm11,YMMWORD[((288-24-128))+r13]
	and	eax,0x1fffffff
	vpaddq	ymm6,ymm7,ymm10
	vpmuludq	ymm14,ymm14,ymm0
	add	rdx,QWORD[24+rsp]
	vpaddq	ymm7,ymm8,ymm14
	vpmuludq	ymm11,ymm11,ymm0
	vpaddq	ymm8,ymm9,ymm11
	vmovq	xmm9,r12
	mov	r12,rdx

	dec	r14d
	jnz	NEAR $L$OOP_REDUCE_1024
	lea	r12,[448+rsp]
	vpaddq	ymm0,ymm13,ymm9
	vpxor	ymm9,ymm9,ymm9

	vpaddq	ymm0,ymm0,YMMWORD[((288-192))+rbx]
	vpaddq	ymm1,ymm1,YMMWORD[((320-448))+r12]
	vpaddq	ymm2,ymm2,YMMWORD[((352-448))+r12]
	vpaddq	ymm3,ymm3,YMMWORD[((384-448))+r12]
	vpaddq	ymm4,ymm4,YMMWORD[((416-448))+r12]
	vpaddq	ymm5,ymm5,YMMWORD[((448-448))+r12]
	vpaddq	ymm6,ymm6,YMMWORD[((480-448))+r12]
	vpaddq	ymm7,ymm7,YMMWORD[((512-448))+r12]
	vpaddq	ymm8,ymm8,YMMWORD[((544-448))+r12]

	vpsrlq	ymm14,ymm0,29
	vpand	ymm0,ymm0,ymm15
	vpsrlq	ymm11,ymm1,29
	vpand	ymm1,ymm1,ymm15
	vpsrlq	ymm12,ymm2,29
	vpermq	ymm14,ymm14,0x93
	vpand	ymm2,ymm2,ymm15
	vpsrlq	ymm13,ymm3,29
	vpermq	ymm11,ymm11,0x93
	vpand	ymm3,ymm3,ymm15
	vpermq	ymm12,ymm12,0x93

	vpblendd	ymm10,ymm14,ymm9,3
	vpermq	ymm13,ymm13,0x93
	vpblendd	ymm14,ymm11,ymm14,3
	vpaddq	ymm0,ymm0,ymm10
	vpblendd	ymm11,ymm12,ymm11,3
	vpaddq	ymm1,ymm1,ymm14
	vpblendd	ymm12,ymm13,ymm12,3
	vpaddq	ymm2,ymm2,ymm11
	vpblendd	ymm13,ymm9,ymm13,3
	vpaddq	ymm3,ymm3,ymm12
	vpaddq	ymm4,ymm4,ymm13

	vpsrlq	ymm14,ymm0,29
	vpand	ymm0,ymm0,ymm15
	vpsrlq	ymm11,ymm1,29
	vpand	ymm1,ymm1,ymm15
	vpsrlq	ymm12,ymm2,29
	vpermq	ymm14,ymm14,0x93
	vpand	ymm2,ymm2,ymm15
	vpsrlq	ymm13,ymm3,29
	vpermq	ymm11,ymm11,0x93
	vpand	ymm3,ymm3,ymm15
	vpermq	ymm12,ymm12,0x93

	vpblendd	ymm10,ymm14,ymm9,3
	vpermq	ymm13,ymm13,0x93
	vpblendd	ymm14,ymm11,ymm14,3
	vpaddq	ymm0,ymm0,ymm10
	vpblendd	ymm11,ymm12,ymm11,3
	vpaddq	ymm1,ymm1,ymm14
	vmovdqu	YMMWORD[(0-128)+rdi],ymm0
	vpblendd	ymm12,ymm13,ymm12,3
	vpaddq	ymm2,ymm2,ymm11
	vmovdqu	YMMWORD[(32-128)+rdi],ymm1
	vpblendd	ymm13,ymm9,ymm13,3
	vpaddq	ymm3,ymm3,ymm12
	vmovdqu	YMMWORD[(64-128)+rdi],ymm2
	vpaddq	ymm4,ymm4,ymm13
	vmovdqu	YMMWORD[(96-128)+rdi],ymm3
	vpsrlq	ymm14,ymm4,29
	vpand	ymm4,ymm4,ymm15
	vpsrlq	ymm11,ymm5,29
	vpand	ymm5,ymm5,ymm15
	vpsrlq	ymm12,ymm6,29
	vpermq	ymm14,ymm14,0x93
	vpand	ymm6,ymm6,ymm15
	vpsrlq	ymm13,ymm7,29
	vpermq	ymm11,ymm11,0x93
	vpand	ymm7,ymm7,ymm15
	vpsrlq	ymm0,ymm8,29
	vpermq	ymm12,ymm12,0x93
	vpand	ymm8,ymm8,ymm15
	vpermq	ymm13,ymm13,0x93

	vpblendd	ymm10,ymm14,ymm9,3
	vpermq	ymm0,ymm0,0x93
	vpblendd	ymm14,ymm11,ymm14,3
	vpaddq	ymm4,ymm4,ymm10
	vpblendd	ymm11,ymm12,ymm11,3
	vpaddq	ymm5,ymm5,ymm14
	vpblendd	ymm12,ymm13,ymm12,3
	vpaddq	ymm6,ymm6,ymm11
	vpblendd	ymm13,ymm0,ymm13,3
	vpaddq	ymm7,ymm7,ymm12
	vpaddq	ymm8,ymm8,ymm13

	vpsrlq	ymm14,ymm4,29
	vpand	ymm4,ymm4,ymm15
	vpsrlq	ymm11,ymm5,29
	vpand	ymm5,ymm5,ymm15
	vpsrlq	ymm12,ymm6,29
	vpermq	ymm14,ymm14,0x93
	vpand	ymm6,ymm6,ymm15
	vpsrlq	ymm13,ymm7,29
	vpermq	ymm11,ymm11,0x93
	vpand	ymm7,ymm7,ymm15
	vpsrlq	ymm0,ymm8,29
	vpermq	ymm12,ymm12,0x93
	vpand	ymm8,ymm8,ymm15
	vpermq	ymm13,ymm13,0x93

	vpblendd	ymm10,ymm14,ymm9,3
	vpermq	ymm0,ymm0,0x93
	vpblendd	ymm14,ymm11,ymm14,3
	vpaddq	ymm4,ymm4,ymm10
	vpblendd	ymm11,ymm12,ymm11,3
	vpaddq	ymm5,ymm5,ymm14
	vmovdqu	YMMWORD[(128-128)+rdi],ymm4
	vpblendd	ymm12,ymm13,ymm12,3
	vpaddq	ymm6,ymm6,ymm11
	vmovdqu	YMMWORD[(160-128)+rdi],ymm5
	vpblendd	ymm13,ymm0,ymm13,3
	vpaddq	ymm7,ymm7,ymm12
	vmovdqu	YMMWORD[(192-128)+rdi],ymm6
	vpaddq	ymm8,ymm8,ymm13
	vmovdqu	YMMWORD[(224-128)+rdi],ymm7
	vmovdqu	YMMWORD[(256-128)+rdi],ymm8

	mov	rsi,rdi
	dec	r8d
	jne	NEAR $L$OOP_GRANDE_SQR_1024

	vzeroall
	mov	rax,rbp

$L$sqr_1024_in_tail:
	movaps	xmm6,XMMWORD[((-216))+rax]
	movaps	xmm7,XMMWORD[((-200))+rax]
	movaps	xmm8,XMMWORD[((-184))+rax]
	movaps	xmm9,XMMWORD[((-168))+rax]
	movaps	xmm10,XMMWORD[((-152))+rax]
	movaps	xmm11,XMMWORD[((-136))+rax]
	movaps	xmm12,XMMWORD[((-120))+rax]
	movaps	xmm13,XMMWORD[((-104))+rax]
	movaps	xmm14,XMMWORD[((-88))+rax]
	movaps	xmm15,XMMWORD[((-72))+rax]
	mov	r15,QWORD[((-48))+rax]

	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbp,QWORD[((-16))+rax]

	mov	rbx,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$sqr_1024_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_rsaz_1024_sqr_avx2:
global	rsaz_1024_mul_avx2

ALIGN	64
rsaz_1024_mul_avx2:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_rsaz_1024_mul_avx2:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]



	lea	rax,[rsp]

	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

	vzeroupper
	lea	rsp,[((-168))+rsp]
	vmovaps	XMMWORD[(-216)+rax],xmm6
	vmovaps	XMMWORD[(-200)+rax],xmm7
	vmovaps	XMMWORD[(-184)+rax],xmm8
	vmovaps	XMMWORD[(-168)+rax],xmm9
	vmovaps	XMMWORD[(-152)+rax],xmm10
	vmovaps	XMMWORD[(-136)+rax],xmm11
	vmovaps	XMMWORD[(-120)+rax],xmm12
	vmovaps	XMMWORD[(-104)+rax],xmm13
	vmovaps	XMMWORD[(-88)+rax],xmm14
	vmovaps	XMMWORD[(-72)+rax],xmm15
$L$mul_1024_body:
	mov	rbp,rax

	vzeroall
	mov	r13,rdx
	sub	rsp,64






DB	0x67,0x67
	mov	r15,rsi
	and	r15,4095
	add	r15,32*10
	shr	r15,12
	mov	r15,rsi
	cmovnz	rsi,r13
	cmovnz	r13,r15

	mov	r15,rcx
	sub	rsi,-128
	sub	rcx,-128
	sub	rdi,-128

	and	r15,4095
	add	r15,32*10
DB	0x67,0x67
	shr	r15,12
	jz	NEAR $L$mul_1024_no_n_copy





	sub	rsp,32*10
	vmovdqu	ymm0,YMMWORD[((0-128))+rcx]
	and	rsp,-512
	vmovdqu	ymm1,YMMWORD[((32-128))+rcx]
	vmovdqu	ymm2,YMMWORD[((64-128))+rcx]
	vmovdqu	ymm3,YMMWORD[((96-128))+rcx]
	vmovdqu	ymm4,YMMWORD[((128-128))+rcx]
	vmovdqu	ymm5,YMMWORD[((160-128))+rcx]
	vmovdqu	ymm6,YMMWORD[((192-128))+rcx]
	vmovdqu	ymm7,YMMWORD[((224-128))+rcx]
	vmovdqu	ymm8,YMMWORD[((256-128))+rcx]
	lea	rcx,[((64+128))+rsp]
	vmovdqu	YMMWORD[(0-128)+rcx],ymm0
	vpxor	ymm0,ymm0,ymm0
	vmovdqu	YMMWORD[(32-128)+rcx],ymm1
	vpxor	ymm1,ymm1,ymm1
	vmovdqu	YMMWORD[(64-128)+rcx],ymm2
	vpxor	ymm2,ymm2,ymm2
	vmovdqu	YMMWORD[(96-128)+rcx],ymm3
	vpxor	ymm3,ymm3,ymm3
	vmovdqu	YMMWORD[(128-128)+rcx],ymm4
	vpxor	ymm4,ymm4,ymm4
	vmovdqu	YMMWORD[(160-128)+rcx],ymm5
	vpxor	ymm5,ymm5,ymm5
	vmovdqu	YMMWORD[(192-128)+rcx],ymm6
	vpxor	ymm6,ymm6,ymm6
	vmovdqu	YMMWORD[(224-128)+rcx],ymm7
	vpxor	ymm7,ymm7,ymm7
	vmovdqu	YMMWORD[(256-128)+rcx],ymm8
	vmovdqa	ymm8,ymm0
	vmovdqu	YMMWORD[(288-128)+rcx],ymm9
$L$mul_1024_no_n_copy:
	and	rsp,-64

	mov	rbx,QWORD[r13]
	vpbroadcastq	ymm10,QWORD[r13]
	vmovdqu	YMMWORD[rsp],ymm0
	xor	r9,r9
DB	0x67
	xor	r10,r10
	xor	r11,r11
	xor	r12,r12

	vmovdqu	ymm15,YMMWORD[$L$and_mask]
	mov	r14d,9
	vmovdqu	YMMWORD[(288-128)+rdi],ymm9
	jmp	NEAR $L$oop_mul_1024

ALIGN	32
$L$oop_mul_1024:
	vpsrlq	ymm9,ymm3,29
	mov	rax,rbx
	imul	rax,QWORD[((-128))+rsi]
	add	rax,r9
	mov	r10,rbx
	imul	r10,QWORD[((8-128))+rsi]
	add	r10,QWORD[8+rsp]

	mov	r9,rax
	imul	eax,r8d
	and	eax,0x1fffffff

	mov	r11,rbx
	imul	r11,QWORD[((16-128))+rsi]
	add	r11,QWORD[16+rsp]

	mov	r12,rbx
	imul	r12,QWORD[((24-128))+rsi]
	add	r12,QWORD[24+rsp]
	vpmuludq	ymm0,ymm10,YMMWORD[((32-128))+rsi]
	vmovd	xmm11,eax
	vpaddq	ymm1,ymm1,ymm0
	vpmuludq	ymm12,ymm10,YMMWORD[((64-128))+rsi]
	vpbroadcastq	ymm11,xmm11
	vpaddq	ymm2,ymm2,ymm12
	vpmuludq	ymm13,ymm10,YMMWORD[((96-128))+rsi]
	vpand	ymm3,ymm3,ymm15
	vpaddq	ymm3,ymm3,ymm13
	vpmuludq	ymm0,ymm10,YMMWORD[((128-128))+rsi]
	vpaddq	ymm4,ymm4,ymm0
	vpmuludq	ymm12,ymm10,YMMWORD[((160-128))+rsi]
	vpaddq	ymm5,ymm5,ymm12
	vpmuludq	ymm13,ymm10,YMMWORD[((192-128))+rsi]
	vpaddq	ymm6,ymm6,ymm13
	vpmuludq	ymm0,ymm10,YMMWORD[((224-128))+rsi]
	vpermq	ymm9,ymm9,0x93
	vpaddq	ymm7,ymm7,ymm0
	vpmuludq	ymm12,ymm10,YMMWORD[((256-128))+rsi]
	vpbroadcastq	ymm10,QWORD[8+r13]
	vpaddq	ymm8,ymm8,ymm12

	mov	rdx,rax
	imul	rax,QWORD[((-128))+rcx]
	add	r9,rax
	mov	rax,rdx
	imul	rax,QWORD[((8-128))+rcx]
	add	r10,rax
	mov	rax,rdx
	imul	rax,QWORD[((16-128))+rcx]
	add	r11,rax
	shr	r9,29
	imul	rdx,QWORD[((24-128))+rcx]
	add	r12,rdx
	add	r10,r9

	vpmuludq	ymm13,ymm11,YMMWORD[((32-128))+rcx]
	vmovq	rbx,xmm10
	vpaddq	ymm1,ymm1,ymm13
	vpmuludq	ymm0,ymm11,YMMWORD[((64-128))+rcx]
	vpaddq	ymm2,ymm2,ymm0
	vpmuludq	ymm12,ymm11,YMMWORD[((96-128))+rcx]
	vpaddq	ymm3,ymm3,ymm12
	vpmuludq	ymm13,ymm11,YMMWORD[((128-128))+rcx]
	vpaddq	ymm4,ymm4,ymm13
	vpmuludq	ymm0,ymm11,YMMWORD[((160-128))+rcx]
	vpaddq	ymm5,ymm5,ymm0
	vpmuludq	ymm12,ymm11,YMMWORD[((192-128))+rcx]
	vpaddq	ymm6,ymm6,ymm12
	vpmuludq	ymm13,ymm11,YMMWORD[((224-128))+rcx]
	vpblendd	ymm12,ymm9,ymm14,3
	vpaddq	ymm7,ymm7,ymm13
	vpmuludq	ymm0,ymm11,YMMWORD[((256-128))+rcx]
	vpaddq	ymm3,ymm3,ymm12
	vpaddq	ymm8,ymm8,ymm0

	mov	rax,rbx
	imul	rax,QWORD[((-128))+rsi]
	add	r10,rax
	vmovdqu	ymm12,YMMWORD[((-8+32-128))+rsi]
	mov	rax,rbx
	imul	rax,QWORD[((8-128))+rsi]
	add	r11,rax
	vmovdqu	ymm13,YMMWORD[((-8+64-128))+rsi]

	mov	rax,r10
	vpblendd	ymm9,ymm9,ymm14,0xfc
	imul	eax,r8d
	vpaddq	ymm4,ymm4,ymm9
	and	eax,0x1fffffff

	imul	rbx,QWORD[((16-128))+rsi]
	add	r12,rbx
	vpmuludq	ymm12,ymm12,ymm10
	vmovd	xmm11,eax
	vmovdqu	ymm0,YMMWORD[((-8+96-128))+rsi]
	vpaddq	ymm1,ymm1,ymm12
	vpmuludq	ymm13,ymm13,ymm10
	vpbroadcastq	ymm11,xmm11
	vmovdqu	ymm12,YMMWORD[((-8+128-128))+rsi]
	vpaddq	ymm2,ymm2,ymm13
	vpmuludq	ymm0,ymm0,ymm10
	vmovdqu	ymm13,YMMWORD[((-8+160-128))+rsi]
	vpaddq	ymm3,ymm3,ymm0
	vpmuludq	ymm12,ymm12,ymm10
	vmovdqu	ymm0,YMMWORD[((-8+192-128))+rsi]
	vpaddq	ymm4,ymm4,ymm12
	vpmuludq	ymm13,ymm13,ymm10
	vmovdqu	ymm12,YMMWORD[((-8+224-128))+rsi]
	vpaddq	ymm5,ymm5,ymm13
	vpmuludq	ymm0,ymm0,ymm10
	vmovdqu	ymm13,YMMWORD[((-8+256-128))+rsi]
	vpaddq	ymm6,ymm6,ymm0
	vpmuludq	ymm12,ymm12,ymm10
	vmovdqu	ymm9,YMMWORD[((-8+288-128))+rsi]
	vpaddq	ymm7,ymm7,ymm12
	vpmuludq	ymm13,ymm13,ymm10
	vpaddq	ymm8,ymm8,ymm13
	vpmuludq	ymm9,ymm9,ymm10
	vpbroadcastq	ymm10,QWORD[16+r13]

	mov	rdx,rax
	imul	rax,QWORD[((-128))+rcx]
	add	r10,rax
	vmovdqu	ymm0,YMMWORD[((-8+32-128))+rcx]
	mov	rax,rdx
	imul	rax,QWORD[((8-128))+rcx]
	add	r11,rax
	vmovdqu	ymm12,YMMWORD[((-8+64-128))+rcx]
	shr	r10,29
	imul	rdx,QWORD[((16-128))+rcx]
	add	r12,rdx
	add	r11,r10

	vpmuludq	ymm0,ymm0,ymm11
	vmovq	rbx,xmm10
	vmovdqu	ymm13,YMMWORD[((-8+96-128))+rcx]
	vpaddq	ymm1,ymm1,ymm0
	vpmuludq	ymm12,ymm12,ymm11
	vmovdqu	ymm0,YMMWORD[((-8+128-128))+rcx]
	vpaddq	ymm2,ymm2,ymm12
	vpmuludq	ymm13,ymm13,ymm11
	vmovdqu	ymm12,YMMWORD[((-8+160-128))+rcx]
	vpaddq	ymm3,ymm3,ymm13
	vpmuludq	ymm0,ymm0,ymm11
	vmovdqu	ymm13,YMMWORD[((-8+192-128))+rcx]
	vpaddq	ymm4,ymm4,ymm0
	vpmuludq	ymm12,ymm12,ymm11
	vmovdqu	ymm0,YMMWORD[((-8+224-128))+rcx]
	vpaddq	ymm5,ymm5,ymm12
	vpmuludq	ymm13,ymm13,ymm11
	vmovdqu	ymm12,YMMWORD[((-8+256-128))+rcx]
	vpaddq	ymm6,ymm6,ymm13
	vpmuludq	ymm0,ymm0,ymm11
	vmovdqu	ymm13,YMMWORD[((-8+288-128))+rcx]
	vpaddq	ymm7,ymm7,ymm0
	vpmuludq	ymm12,ymm12,ymm11
	vpaddq	ymm8,ymm8,ymm12
	vpmuludq	ymm13,ymm13,ymm11
	vpaddq	ymm9,ymm9,ymm13

	vmovdqu	ymm0,YMMWORD[((-16+32-128))+rsi]
	mov	rax,rbx
	imul	rax,QWORD[((-128))+rsi]
	add	rax,r11

	vmovdqu	ymm12,YMMWORD[((-16+64-128))+rsi]
	mov	r11,rax
	imul	eax,r8d
	and	eax,0x1fffffff

	imul	rbx,QWORD[((8-128))+rsi]
	add	r12,rbx
	vpmuludq	ymm0,ymm0,ymm10
	vmovd	xmm11,eax
	vmovdqu	ymm13,YMMWORD[((-16+96-128))+rsi]
	vpaddq	ymm1,ymm1,ymm0
	vpmuludq	ymm12,ymm12,ymm10
	vpbroadcastq	ymm11,xmm11
	vmovdqu	ymm0,YMMWORD[((-16+128-128))+rsi]
	vpaddq	ymm2,ymm2,ymm12
	vpmuludq	ymm13,ymm13,ymm10
	vmovdqu	ymm12,YMMWORD[((-16+160-128))+rsi]
	vpaddq	ymm3,ymm3,ymm13
	vpmuludq	ymm0,ymm0,ymm10
	vmovdqu	ymm13,YMMWORD[((-16+192-128))+rsi]
	vpaddq	ymm4,ymm4,ymm0
	vpmuludq	ymm12,ymm12,ymm10
	vmovdqu	ymm0,YMMWORD[((-16+224-128))+rsi]
	vpaddq	ymm5,ymm5,ymm12
	vpmuludq	ymm13,ymm13,ymm10
	vmovdqu	ymm12,YMMWORD[((-16+256-128))+rsi]
	vpaddq	ymm6,ymm6,ymm13
	vpmuludq	ymm0,ymm0,ymm10
	vmovdqu	ymm13,YMMWORD[((-16+288-128))+rsi]
	vpaddq	ymm7,ymm7,ymm0
	vpmuludq	ymm12,ymm12,ymm10
	vpaddq	ymm8,ymm8,ymm12
	vpmuludq	ymm13,ymm13,ymm10
	vpbroadcastq	ymm10,QWORD[24+r13]
	vpaddq	ymm9,ymm9,ymm13

	vmovdqu	ymm0,YMMWORD[((-16+32-128))+rcx]
	mov	rdx,rax
	imul	rax,QWORD[((-128))+rcx]
	add	r11,rax
	vmovdqu	ymm12,YMMWORD[((-16+64-128))+rcx]
	imul	rdx,QWORD[((8-128))+rcx]
	add	r12,rdx
	shr	r11,29

	vpmuludq	ymm0,ymm0,ymm11
	vmovq	rbx,xmm10
	vmovdqu	ymm13,YMMWORD[((-16+96-128))+rcx]
	vpaddq	ymm1,ymm1,ymm0
	vpmuludq	ymm12,ymm12,ymm11
	vmovdqu	ymm0,YMMWORD[((-16+128-128))+rcx]
	vpaddq	ymm2,ymm2,ymm12
	vpmuludq	ymm13,ymm13,ymm11
	vmovdqu	ymm12,YMMWORD[((-16+160-128))+rcx]
	vpaddq	ymm3,ymm3,ymm13
	vpmuludq	ymm0,ymm0,ymm11
	vmovdqu	ymm13,YMMWORD[((-16+192-128))+rcx]
	vpaddq	ymm4,ymm4,ymm0
	vpmuludq	ymm12,ymm12,ymm11
	vmovdqu	ymm0,YMMWORD[((-16+224-128))+rcx]
	vpaddq	ymm5,ymm5,ymm12
	vpmuludq	ymm13,ymm13,ymm11
	vmovdqu	ymm12,YMMWORD[((-16+256-128))+rcx]
	vpaddq	ymm6,ymm6,ymm13
	vpmuludq	ymm0,ymm0,ymm11
	vmovdqu	ymm13,YMMWORD[((-16+288-128))+rcx]
	vpaddq	ymm7,ymm7,ymm0
	vpmuludq	ymm12,ymm12,ymm11
	vmovdqu	ymm0,YMMWORD[((-24+32-128))+rsi]
	vpaddq	ymm8,ymm8,ymm12
	vpmuludq	ymm13,ymm13,ymm11
	vmovdqu	ymm12,YMMWORD[((-24+64-128))+rsi]
	vpaddq	ymm9,ymm9,ymm13

	add	r12,r11
	imul	rbx,QWORD[((-128))+rsi]
	add	r12,rbx

	mov	rax,r12
	imul	eax,r8d
	and	eax,0x1fffffff

	vpmuludq	ymm0,ymm0,ymm10
	vmovd	xmm11,eax
	vmovdqu	ymm13,YMMWORD[((-24+96-128))+rsi]
	vpaddq	ymm1,ymm1,ymm0
	vpmuludq	ymm12,ymm12,ymm10
	vpbroadcastq	ymm11,xmm11
	vmovdqu	ymm0,YMMWORD[((-24+128-128))+rsi]
	vpaddq	ymm2,ymm2,ymm12
	vpmuludq	ymm13,ymm13,ymm10
	vmovdqu	ymm12,YMMWORD[((-24+160-128))+rsi]
	vpaddq	ymm3,ymm3,ymm13
	vpmuludq	ymm0,ymm0,ymm10
	vmovdqu	ymm13,YMMWORD[((-24+192-128))+rsi]
	vpaddq	ymm4,ymm4,ymm0
	vpmuludq	ymm12,ymm12,ymm10
	vmovdqu	ymm0,YMMWORD[((-24+224-128))+rsi]
	vpaddq	ymm5,ymm5,ymm12
	vpmuludq	ymm13,ymm13,ymm10
	vmovdqu	ymm12,YMMWORD[((-24+256-128))+rsi]
	vpaddq	ymm6,ymm6,ymm13
	vpmuludq	ymm0,ymm0,ymm10
	vmovdqu	ymm13,YMMWORD[((-24+288-128))+rsi]
	vpaddq	ymm7,ymm7,ymm0
	vpmuludq	ymm12,ymm12,ymm10
	vpaddq	ymm8,ymm8,ymm12
	vpmuludq	ymm13,ymm13,ymm10
	vpbroadcastq	ymm10,QWORD[32+r13]
	vpaddq	ymm9,ymm9,ymm13
	add	r13,32

	vmovdqu	ymm0,YMMWORD[((-24+32-128))+rcx]
	imul	rax,QWORD[((-128))+rcx]
	add	r12,rax
	shr	r12,29

	vmovdqu	ymm12,YMMWORD[((-24+64-128))+rcx]
	vpmuludq	ymm0,ymm0,ymm11
	vmovq	rbx,xmm10
	vmovdqu	ymm13,YMMWORD[((-24+96-128))+rcx]
	vpaddq	ymm0,ymm1,ymm0
	vpmuludq	ymm12,ymm12,ymm11
	vmovdqu	YMMWORD[rsp],ymm0
	vpaddq	ymm1,ymm2,ymm12
	vmovdqu	ymm0,YMMWORD[((-24+128-128))+rcx]
	vpmuludq	ymm13,ymm13,ymm11
	vmovdqu	ymm12,YMMWORD[((-24+160-128))+rcx]
	vpaddq	ymm2,ymm3,ymm13
	vpmuludq	ymm0,ymm0,ymm11
	vmovdqu	ymm13,YMMWORD[((-24+192-128))+rcx]
	vpaddq	ymm3,ymm4,ymm0
	vpmuludq	ymm12,ymm12,ymm11
	vmovdqu	ymm0,YMMWORD[((-24+224-128))+rcx]
	vpaddq	ymm4,ymm5,ymm12
	vpmuludq	ymm13,ymm13,ymm11
	vmovdqu	ymm12,YMMWORD[((-24+256-128))+rcx]
	vpaddq	ymm5,ymm6,ymm13
	vpmuludq	ymm0,ymm0,ymm11
	vmovdqu	ymm13,YMMWORD[((-24+288-128))+rcx]
	mov	r9,r12
	vpaddq	ymm6,ymm7,ymm0
	vpmuludq	ymm12,ymm12,ymm11
	add	r9,QWORD[rsp]
	vpaddq	ymm7,ymm8,ymm12
	vpmuludq	ymm13,ymm13,ymm11
	vmovq	xmm12,r12
	vpaddq	ymm8,ymm9,ymm13

	dec	r14d
	jnz	NEAR $L$oop_mul_1024
	vpaddq	ymm0,ymm12,YMMWORD[rsp]

	vpsrlq	ymm12,ymm0,29
	vpand	ymm0,ymm0,ymm15
	vpsrlq	ymm13,ymm1,29
	vpand	ymm1,ymm1,ymm15
	vpsrlq	ymm10,ymm2,29
	vpermq	ymm12,ymm12,0x93
	vpand	ymm2,ymm2,ymm15
	vpsrlq	ymm11,ymm3,29
	vpermq	ymm13,ymm13,0x93
	vpand	ymm3,ymm3,ymm15

	vpblendd	ymm9,ymm12,ymm14,3
	vpermq	ymm10,ymm10,0x93
	vpblendd	ymm12,ymm13,ymm12,3
	vpermq	ymm11,ymm11,0x93
	vpaddq	ymm0,ymm0,ymm9
	vpblendd	ymm13,ymm10,ymm13,3
	vpaddq	ymm1,ymm1,ymm12
	vpblendd	ymm10,ymm11,ymm10,3
	vpaddq	ymm2,ymm2,ymm13
	vpblendd	ymm11,ymm14,ymm11,3
	vpaddq	ymm3,ymm3,ymm10
	vpaddq	ymm4,ymm4,ymm11

	vpsrlq	ymm12,ymm0,29
	vpand	ymm0,ymm0,ymm15
	vpsrlq	ymm13,ymm1,29
	vpand	ymm1,ymm1,ymm15
	vpsrlq	ymm10,ymm2,29
	vpermq	ymm12,ymm12,0x93
	vpand	ymm2,ymm2,ymm15
	vpsrlq	ymm11,ymm3,29
	vpermq	ymm13,ymm13,0x93
	vpand	ymm3,ymm3,ymm15
	vpermq	ymm10,ymm10,0x93

	vpblendd	ymm9,ymm12,ymm14,3
	vpermq	ymm11,ymm11,0x93
	vpblendd	ymm12,ymm13,ymm12,3
	vpaddq	ymm0,ymm0,ymm9
	vpblendd	ymm13,ymm10,ymm13,3
	vpaddq	ymm1,ymm1,ymm12
	vpblendd	ymm10,ymm11,ymm10,3
	vpaddq	ymm2,ymm2,ymm13
	vpblendd	ymm11,ymm14,ymm11,3
	vpaddq	ymm3,ymm3,ymm10
	vpaddq	ymm4,ymm4,ymm11

	vmovdqu	YMMWORD[(0-128)+rdi],ymm0
	vmovdqu	YMMWORD[(32-128)+rdi],ymm1
	vmovdqu	YMMWORD[(64-128)+rdi],ymm2
	vmovdqu	YMMWORD[(96-128)+rdi],ymm3
	vpsrlq	ymm12,ymm4,29
	vpand	ymm4,ymm4,ymm15
	vpsrlq	ymm13,ymm5,29
	vpand	ymm5,ymm5,ymm15
	vpsrlq	ymm10,ymm6,29
	vpermq	ymm12,ymm12,0x93
	vpand	ymm6,ymm6,ymm15
	vpsrlq	ymm11,ymm7,29
	vpermq	ymm13,ymm13,0x93
	vpand	ymm7,ymm7,ymm15
	vpsrlq	ymm0,ymm8,29
	vpermq	ymm10,ymm10,0x93
	vpand	ymm8,ymm8,ymm15
	vpermq	ymm11,ymm11,0x93

	vpblendd	ymm9,ymm12,ymm14,3
	vpermq	ymm0,ymm0,0x93
	vpblendd	ymm12,ymm13,ymm12,3
	vpaddq	ymm4,ymm4,ymm9
	vpblendd	ymm13,ymm10,ymm13,3
	vpaddq	ymm5,ymm5,ymm12
	vpblendd	ymm10,ymm11,ymm10,3
	vpaddq	ymm6,ymm6,ymm13
	vpblendd	ymm11,ymm0,ymm11,3
	vpaddq	ymm7,ymm7,ymm10
	vpaddq	ymm8,ymm8,ymm11

	vpsrlq	ymm12,ymm4,29
	vpand	ymm4,ymm4,ymm15
	vpsrlq	ymm13,ymm5,29
	vpand	ymm5,ymm5,ymm15
	vpsrlq	ymm10,ymm6,29
	vpermq	ymm12,ymm12,0x93
	vpand	ymm6,ymm6,ymm15
	vpsrlq	ymm11,ymm7,29
	vpermq	ymm13,ymm13,0x93
	vpand	ymm7,ymm7,ymm15
	vpsrlq	ymm0,ymm8,29
	vpermq	ymm10,ymm10,0x93
	vpand	ymm8,ymm8,ymm15
	vpermq	ymm11,ymm11,0x93

	vpblendd	ymm9,ymm12,ymm14,3
	vpermq	ymm0,ymm0,0x93
	vpblendd	ymm12,ymm13,ymm12,3
	vpaddq	ymm4,ymm4,ymm9
	vpblendd	ymm13,ymm10,ymm13,3
	vpaddq	ymm5,ymm5,ymm12
	vpblendd	ymm10,ymm11,ymm10,3
	vpaddq	ymm6,ymm6,ymm13
	vpblendd	ymm11,ymm0,ymm11,3
	vpaddq	ymm7,ymm7,ymm10
	vpaddq	ymm8,ymm8,ymm11

	vmovdqu	YMMWORD[(128-128)+rdi],ymm4
	vmovdqu	YMMWORD[(160-128)+rdi],ymm5
	vmovdqu	YMMWORD[(192-128)+rdi],ymm6
	vmovdqu	YMMWORD[(224-128)+rdi],ymm7
	vmovdqu	YMMWORD[(256-128)+rdi],ymm8
	vzeroupper

	mov	rax,rbp

$L$mul_1024_in_tail:
	movaps	xmm6,XMMWORD[((-216))+rax]
	movaps	xmm7,XMMWORD[((-200))+rax]
	movaps	xmm8,XMMWORD[((-184))+rax]
	movaps	xmm9,XMMWORD[((-168))+rax]
	movaps	xmm10,XMMWORD[((-152))+rax]
	movaps	xmm11,XMMWORD[((-136))+rax]
	movaps	xmm12,XMMWORD[((-120))+rax]
	movaps	xmm13,XMMWORD[((-104))+rax]
	movaps	xmm14,XMMWORD[((-88))+rax]
	movaps	xmm15,XMMWORD[((-72))+rax]
	mov	r15,QWORD[((-48))+rax]

	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbp,QWORD[((-16))+rax]

	mov	rbx,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$mul_1024_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_rsaz_1024_mul_avx2:
global	rsaz_1024_red2norm_avx2

ALIGN	32
rsaz_1024_red2norm_avx2:

	sub	rdx,-128
	xor	rax,rax
	mov	r8,QWORD[((-128))+rdx]
	mov	r9,QWORD[((-120))+rdx]
	mov	r10,QWORD[((-112))+rdx]
	shl	r8,0
	shl	r9,29
	mov	r11,r10
	shl	r10,58
	shr	r11,6
	add	rax,r8
	add	rax,r9
	add	rax,r10
	adc	r11,0
	mov	QWORD[rcx],rax
	mov	rax,r11
	mov	r8,QWORD[((-104))+rdx]
	mov	r9,QWORD[((-96))+rdx]
	shl	r8,23
	mov	r10,r9
	shl	r9,52
	shr	r10,12
	add	rax,r8
	add	rax,r9
	adc	r10,0
	mov	QWORD[8+rcx],rax
	mov	rax,r10
	mov	r11,QWORD[((-88))+rdx]
	mov	r8,QWORD[((-80))+rdx]
	shl	r11,17
	mov	r9,r8
	shl	r8,46
	shr	r9,18
	add	rax,r11
	add	rax,r8
	adc	r9,0
	mov	QWORD[16+rcx],rax
	mov	rax,r9
	mov	r10,QWORD[((-72))+rdx]
	mov	r11,QWORD[((-64))+rdx]
	shl	r10,11
	mov	r8,r11
	shl	r11,40
	shr	r8,24
	add	rax,r10
	add	rax,r11
	adc	r8,0
	mov	QWORD[24+rcx],rax
	mov	rax,r8
	mov	r9,QWORD[((-56))+rdx]
	mov	r10,QWORD[((-48))+rdx]
	mov	r11,QWORD[((-40))+rdx]
	shl	r9,5
	shl	r10,34
	mov	r8,r11
	shl	r11,63
	shr	r8,1
	add	rax,r9
	add	rax,r10
	add	rax,r11
	adc	r8,0
	mov	QWORD[32+rcx],rax
	mov	rax,r8
	mov	r9,QWORD[((-32))+rdx]
	mov	r10,QWORD[((-24))+rdx]
	shl	r9,28
	mov	r11,r10
	shl	r10,57
	shr	r11,7
	add	rax,r9
	add	rax,r10
	adc	r11,0
	mov	QWORD[40+rcx],rax
	mov	rax,r11
	mov	r8,QWORD[((-16))+rdx]
	mov	r9,QWORD[((-8))+rdx]
	shl	r8,22
	mov	r10,r9
	shl	r9,51
	shr	r10,13
	add	rax,r8
	add	rax,r9
	adc	r10,0
	mov	QWORD[48+rcx],rax
	mov	rax,r10
	mov	r11,QWORD[rdx]
	mov	r8,QWORD[8+rdx]
	shl	r11,16
	mov	r9,r8
	shl	r8,45
	shr	r9,19
	add	rax,r11
	add	rax,r8
	adc	r9,0
	mov	QWORD[56+rcx],rax
	mov	rax,r9
	mov	r10,QWORD[16+rdx]
	mov	r11,QWORD[24+rdx]
	shl	r10,10
	mov	r8,r11
	shl	r11,39
	shr	r8,25
	add	rax,r10
	add	rax,r11
	adc	r8,0
	mov	QWORD[64+rcx],rax
	mov	rax,r8
	mov	r9,QWORD[32+rdx]
	mov	r10,QWORD[40+rdx]
	mov	r11,QWORD[48+rdx]
	shl	r9,4
	shl	r10,33
	mov	r8,r11
	shl	r11,62
	shr	r8,2
	add	rax,r9
	add	rax,r10
	add	rax,r11
	adc	r8,0
	mov	QWORD[72+rcx],rax
	mov	rax,r8
	mov	r9,QWORD[56+rdx]
	mov	r10,QWORD[64+rdx]
	shl	r9,27
	mov	r11,r10
	shl	r10,56
	shr	r11,8
	add	rax,r9
	add	rax,r10
	adc	r11,0
	mov	QWORD[80+rcx],rax
	mov	rax,r11
	mov	r8,QWORD[72+rdx]
	mov	r9,QWORD[80+rdx]
	shl	r8,21
	mov	r10,r9
	shl	r9,50
	shr	r10,14
	add	rax,r8
	add	rax,r9
	adc	r10,0
	mov	QWORD[88+rcx],rax
	mov	rax,r10
	mov	r11,QWORD[88+rdx]
	mov	r8,QWORD[96+rdx]
	shl	r11,15
	mov	r9,r8
	shl	r8,44
	shr	r9,20
	add	rax,r11
	add	rax,r8
	adc	r9,0
	mov	QWORD[96+rcx],rax
	mov	rax,r9
	mov	r10,QWORD[104+rdx]
	mov	r11,QWORD[112+rdx]
	shl	r10,9
	mov	r8,r11
	shl	r11,38
	shr	r8,26
	add	rax,r10
	add	rax,r11
	adc	r8,0
	mov	QWORD[104+rcx],rax
	mov	rax,r8
	mov	r9,QWORD[120+rdx]
	mov	r10,QWORD[128+rdx]
	mov	r11,QWORD[136+rdx]
	shl	r9,3
	shl	r10,32
	mov	r8,r11
	shl	r11,61
	shr	r8,3
	add	rax,r9
	add	rax,r10
	add	rax,r11
	adc	r8,0
	mov	QWORD[112+rcx],rax
	mov	rax,r8
	mov	r9,QWORD[144+rdx]
	mov	r10,QWORD[152+rdx]
	shl	r9,26
	mov	r11,r10
	shl	r10,55
	shr	r11,9
	add	rax,r9
	add	rax,r10
	adc	r11,0
	mov	QWORD[120+rcx],rax
	mov	rax,r11
	DB	0F3h,0C3h		;repret



global	rsaz_1024_norm2red_avx2

ALIGN	32
rsaz_1024_norm2red_avx2:

	sub	rcx,-128
	mov	r8,QWORD[rdx]
	mov	eax,0x1fffffff
	mov	r9,QWORD[8+rdx]
	mov	r11,r8
	shr	r11,0
	and	r11,rax
	mov	QWORD[((-128))+rcx],r11
	mov	r10,r8
	shr	r10,29
	and	r10,rax
	mov	QWORD[((-120))+rcx],r10
	shrd	r8,r9,58
	and	r8,rax
	mov	QWORD[((-112))+rcx],r8
	mov	r10,QWORD[16+rdx]
	mov	r8,r9
	shr	r8,23
	and	r8,rax
	mov	QWORD[((-104))+rcx],r8
	shrd	r9,r10,52
	and	r9,rax
	mov	QWORD[((-96))+rcx],r9
	mov	r11,QWORD[24+rdx]
	mov	r9,r10
	shr	r9,17
	and	r9,rax
	mov	QWORD[((-88))+rcx],r9
	shrd	r10,r11,46
	and	r10,rax
	mov	QWORD[((-80))+rcx],r10
	mov	r8,QWORD[32+rdx]
	mov	r10,r11
	shr	r10,11
	and	r10,rax
	mov	QWORD[((-72))+rcx],r10
	shrd	r11,r8,40
	and	r11,rax
	mov	QWORD[((-64))+rcx],r11
	mov	r9,QWORD[40+rdx]
	mov	r11,r8
	shr	r11,5
	and	r11,rax
	mov	QWORD[((-56))+rcx],r11
	mov	r10,r8
	shr	r10,34
	and	r10,rax
	mov	QWORD[((-48))+rcx],r10
	shrd	r8,r9,63
	and	r8,rax
	mov	QWORD[((-40))+rcx],r8
	mov	r10,QWORD[48+rdx]
	mov	r8,r9
	shr	r8,28
	and	r8,rax
	mov	QWORD[((-32))+rcx],r8
	shrd	r9,r10,57
	and	r9,rax
	mov	QWORD[((-24))+rcx],r9
	mov	r11,QWORD[56+rdx]
	mov	r9,r10
	shr	r9,22
	and	r9,rax
	mov	QWORD[((-16))+rcx],r9
	shrd	r10,r11,51
	and	r10,rax
	mov	QWORD[((-8))+rcx],r10
	mov	r8,QWORD[64+rdx]
	mov	r10,r11
	shr	r10,16
	and	r10,rax
	mov	QWORD[rcx],r10
	shrd	r11,r8,45
	and	r11,rax
	mov	QWORD[8+rcx],r11
	mov	r9,QWORD[72+rdx]
	mov	r11,r8
	shr	r11,10
	and	r11,rax
	mov	QWORD[16+rcx],r11
	shrd	r8,r9,39
	and	r8,rax
	mov	QWORD[24+rcx],r8
	mov	r10,QWORD[80+rdx]
	mov	r8,r9
	shr	r8,4
	and	r8,rax
	mov	QWORD[32+rcx],r8
	mov	r11,r9
	shr	r11,33
	and	r11,rax
	mov	QWORD[40+rcx],r11
	shrd	r9,r10,62
	and	r9,rax
	mov	QWORD[48+rcx],r9
	mov	r11,QWORD[88+rdx]
	mov	r9,r10
	shr	r9,27
	and	r9,rax
	mov	QWORD[56+rcx],r9
	shrd	r10,r11,56
	and	r10,rax
	mov	QWORD[64+rcx],r10
	mov	r8,QWORD[96+rdx]
	mov	r10,r11
	shr	r10,21
	and	r10,rax
	mov	QWORD[72+rcx],r10
	shrd	r11,r8,50
	and	r11,rax
	mov	QWORD[80+rcx],r11
	mov	r9,QWORD[104+rdx]
	mov	r11,r8
	shr	r11,15
	and	r11,rax
	mov	QWORD[88+rcx],r11
	shrd	r8,r9,44
	and	r8,rax
	mov	QWORD[96+rcx],r8
	mov	r10,QWORD[112+rdx]
	mov	r8,r9
	shr	r8,9
	and	r8,rax
	mov	QWORD[104+rcx],r8
	shrd	r9,r10,38
	and	r9,rax
	mov	QWORD[112+rcx],r9
	mov	r11,QWORD[120+rdx]
	mov	r9,r10
	shr	r9,3
	and	r9,rax
	mov	QWORD[120+rcx],r9
	mov	r8,r10
	shr	r8,32
	and	r8,rax
	mov	QWORD[128+rcx],r8
	shrd	r10,r11,61
	and	r10,rax
	mov	QWORD[136+rcx],r10
	xor	r8,r8
	mov	r10,r11
	shr	r10,26
	and	r10,rax
	mov	QWORD[144+rcx],r10
	shrd	r11,r8,55
	and	r11,rax
	mov	QWORD[152+rcx],r11
	mov	QWORD[160+rcx],r8
	mov	QWORD[168+rcx],r8
	mov	QWORD[176+rcx],r8
	mov	QWORD[184+rcx],r8
	DB	0F3h,0C3h		;repret


global	rsaz_1024_scatter5_avx2

ALIGN	32
rsaz_1024_scatter5_avx2:

	vzeroupper
	vmovdqu	ymm5,YMMWORD[$L$scatter_permd]
	shl	r8d,4
	lea	rcx,[r8*1+rcx]
	mov	eax,9
	jmp	NEAR $L$oop_scatter_1024

ALIGN	32
$L$oop_scatter_1024:
	vmovdqu	ymm0,YMMWORD[rdx]
	lea	rdx,[32+rdx]
	vpermd	ymm0,ymm5,ymm0
	vmovdqu	XMMWORD[rcx],xmm0
	lea	rcx,[512+rcx]
	dec	eax
	jnz	NEAR $L$oop_scatter_1024

	vzeroupper
	DB	0F3h,0C3h		;repret



global	rsaz_1024_gather5_avx2

ALIGN	32
rsaz_1024_gather5_avx2:

	vzeroupper
	mov	r11,rsp

	lea	rax,[((-136))+rsp]
$L$SEH_begin_rsaz_1024_gather5:

DB	0x48,0x8d,0x60,0xe0
DB	0xc5,0xf8,0x29,0x70,0xe0
DB	0xc5,0xf8,0x29,0x78,0xf0
DB	0xc5,0x78,0x29,0x40,0x00
DB	0xc5,0x78,0x29,0x48,0x10
DB	0xc5,0x78,0x29,0x50,0x20
DB	0xc5,0x78,0x29,0x58,0x30
DB	0xc5,0x78,0x29,0x60,0x40
DB	0xc5,0x78,0x29,0x68,0x50
DB	0xc5,0x78,0x29,0x70,0x60
DB	0xc5,0x78,0x29,0x78,0x70
	lea	rsp,[((-256))+rsp]
	and	rsp,-32
	lea	r10,[$L$inc]
	lea	rax,[((-128))+rsp]

	vmovd	xmm4,r8d
	vmovdqa	ymm0,YMMWORD[r10]
	vmovdqa	ymm1,YMMWORD[32+r10]
	vmovdqa	ymm5,YMMWORD[64+r10]
	vpbroadcastd	ymm4,xmm4

	vpaddd	ymm2,ymm0,ymm5
	vpcmpeqd	ymm0,ymm0,ymm4
	vpaddd	ymm3,ymm1,ymm5
	vpcmpeqd	ymm1,ymm1,ymm4
	vmovdqa	YMMWORD[(0+128)+rax],ymm0
	vpaddd	ymm0,ymm2,ymm5
	vpcmpeqd	ymm2,ymm2,ymm4
	vmovdqa	YMMWORD[(32+128)+rax],ymm1
	vpaddd	ymm1,ymm3,ymm5
	vpcmpeqd	ymm3,ymm3,ymm4
	vmovdqa	YMMWORD[(64+128)+rax],ymm2
	vpaddd	ymm2,ymm0,ymm5
	vpcmpeqd	ymm0,ymm0,ymm4
	vmovdqa	YMMWORD[(96+128)+rax],ymm3
	vpaddd	ymm3,ymm1,ymm5
	vpcmpeqd	ymm1,ymm1,ymm4
	vmovdqa	YMMWORD[(128+128)+rax],ymm0
	vpaddd	ymm8,ymm2,ymm5
	vpcmpeqd	ymm2,ymm2,ymm4
	vmovdqa	YMMWORD[(160+128)+rax],ymm1
	vpaddd	ymm9,ymm3,ymm5
	vpcmpeqd	ymm3,ymm3,ymm4
	vmovdqa	YMMWORD[(192+128)+rax],ymm2
	vpaddd	ymm10,ymm8,ymm5
	vpcmpeqd	ymm8,ymm8,ymm4
	vmovdqa	YMMWORD[(224+128)+rax],ymm3
	vpaddd	ymm11,ymm9,ymm5
	vpcmpeqd	ymm9,ymm9,ymm4
	vpaddd	ymm12,ymm10,ymm5
	vpcmpeqd	ymm10,ymm10,ymm4
	vpaddd	ymm13,ymm11,ymm5
	vpcmpeqd	ymm11,ymm11,ymm4
	vpaddd	ymm14,ymm12,ymm5
	vpcmpeqd	ymm12,ymm12,ymm4
	vpaddd	ymm15,ymm13,ymm5
	vpcmpeqd	ymm13,ymm13,ymm4
	vpcmpeqd	ymm14,ymm14,ymm4
	vpcmpeqd	ymm15,ymm15,ymm4

	vmovdqa	ymm7,YMMWORD[((-32))+r10]
	lea	rdx,[128+rdx]
	mov	r8d,9

$L$oop_gather_1024:
	vmovdqa	ymm0,YMMWORD[((0-128))+rdx]
	vmovdqa	ymm1,YMMWORD[((32-128))+rdx]
	vmovdqa	ymm2,YMMWORD[((64-128))+rdx]
	vmovdqa	ymm3,YMMWORD[((96-128))+rdx]
	vpand	ymm0,ymm0,YMMWORD[((0+128))+rax]
	vpand	ymm1,ymm1,YMMWORD[((32+128))+rax]
	vpand	ymm2,ymm2,YMMWORD[((64+128))+rax]
	vpor	ymm4,ymm1,ymm0
	vpand	ymm3,ymm3,YMMWORD[((96+128))+rax]
	vmovdqa	ymm0,YMMWORD[((128-128))+rdx]
	vmovdqa	ymm1,YMMWORD[((160-128))+rdx]
	vpor	ymm5,ymm3,ymm2
	vmovdqa	ymm2,YMMWORD[((192-128))+rdx]
	vmovdqa	ymm3,YMMWORD[((224-128))+rdx]
	vpand	ymm0,ymm0,YMMWORD[((128+128))+rax]
	vpand	ymm1,ymm1,YMMWORD[((160+128))+rax]
	vpand	ymm2,ymm2,YMMWORD[((192+128))+rax]
	vpor	ymm4,ymm4,ymm0
	vpand	ymm3,ymm3,YMMWORD[((224+128))+rax]
	vpand	ymm0,ymm8,YMMWORD[((256-128))+rdx]
	vpor	ymm5,ymm5,ymm1
	vpand	ymm1,ymm9,YMMWORD[((288-128))+rdx]
	vpor	ymm4,ymm4,ymm2
	vpand	ymm2,ymm10,YMMWORD[((320-128))+rdx]
	vpor	ymm5,ymm5,ymm3
	vpand	ymm3,ymm11,YMMWORD[((352-128))+rdx]
	vpor	ymm4,ymm4,ymm0
	vpand	ymm0,ymm12,YMMWORD[((384-128))+rdx]
	vpor	ymm5,ymm5,ymm1
	vpand	ymm1,ymm13,YMMWORD[((416-128))+rdx]
	vpor	ymm4,ymm4,ymm2
	vpand	ymm2,ymm14,YMMWORD[((448-128))+rdx]
	vpor	ymm5,ymm5,ymm3
	vpand	ymm3,ymm15,YMMWORD[((480-128))+rdx]
	lea	rdx,[512+rdx]
	vpor	ymm4,ymm4,ymm0
	vpor	ymm5,ymm5,ymm1
	vpor	ymm4,ymm4,ymm2
	vpor	ymm5,ymm5,ymm3

	vpor	ymm4,ymm4,ymm5
	vextracti128	xmm5,ymm4,1
	vpor	xmm5,xmm5,xmm4
	vpermd	ymm5,ymm7,ymm5
	vmovdqu	YMMWORD[rcx],ymm5
	lea	rcx,[32+rcx]
	dec	r8d
	jnz	NEAR $L$oop_gather_1024

	vpxor	ymm0,ymm0,ymm0
	vmovdqu	YMMWORD[rcx],ymm0
	vzeroupper
	movaps	xmm6,XMMWORD[((-168))+r11]
	movaps	xmm7,XMMWORD[((-152))+r11]
	movaps	xmm8,XMMWORD[((-136))+r11]
	movaps	xmm9,XMMWORD[((-120))+r11]
	movaps	xmm10,XMMWORD[((-104))+r11]
	movaps	xmm11,XMMWORD[((-88))+r11]
	movaps	xmm12,XMMWORD[((-72))+r11]
	movaps	xmm13,XMMWORD[((-56))+r11]
	movaps	xmm14,XMMWORD[((-40))+r11]
	movaps	xmm15,XMMWORD[((-24))+r11]
	lea	rsp,[r11]

	DB	0F3h,0C3h		;repret

$L$SEH_end_rsaz_1024_gather5:

EXTERN	OPENSSL_ia32cap_P
global	rsaz_avx2_eligible

ALIGN	32
rsaz_avx2_eligible:
	mov	eax,DWORD[((OPENSSL_ia32cap_P+8))]
	mov	ecx,524544
	mov	edx,0
	and	ecx,eax
	cmp	ecx,524544
	cmove	eax,edx
	and	eax,32
	shr	eax,5
	DB	0F3h,0C3h		;repret


ALIGN	64
$L$and_mask:
	DQ	0x1fffffff,0x1fffffff,0x1fffffff,0x1fffffff
$L$scatter_permd:
	DD	0,2,4,6,7,7,7,7
$L$gather_permd:
	DD	0,7,1,7,2,7,3,7
$L$inc:
	DD	0,0,0,0,1,1,1,1
	DD	2,2,2,2,3,3,3,3
	DD	4,4,4,4,4,4,4,4
ALIGN	64
EXTERN	__imp_RtlVirtualUnwind

ALIGN	16
rsaz_se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$common_seh_tail

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$common_seh_tail

	mov	rbp,QWORD[160+r8]

	mov	r10d,DWORD[8+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	cmovc	rax,rbp

	mov	r15,QWORD[((-48))+rax]
	mov	r14,QWORD[((-40))+rax]
	mov	r13,QWORD[((-32))+rax]
	mov	r12,QWORD[((-24))+rax]
	mov	rbp,QWORD[((-16))+rax]
	mov	rbx,QWORD[((-8))+rax]
	mov	QWORD[240+r8],r15
	mov	QWORD[232+r8],r14
	mov	QWORD[224+r8],r13
	mov	QWORD[216+r8],r12
	mov	QWORD[160+r8],rbp
	mov	QWORD[144+r8],rbx

	lea	rsi,[((-216))+rax]
	lea	rdi,[512+r8]
	mov	ecx,20
	DD	0xa548f3fc

$L$common_seh_tail:
	mov	rdi,QWORD[8+rax]
	mov	rsi,QWORD[16+rax]
	mov	QWORD[152+r8],rax
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi

	mov	rdi,QWORD[40+r9]
	mov	rsi,r8
	mov	ecx,154
	DD	0xa548f3fc

	mov	rsi,r9
	xor	rcx,rcx
	mov	rdx,QWORD[8+rsi]
	mov	r8,QWORD[rsi]
	mov	r9,QWORD[16+rsi]
	mov	r10,QWORD[40+rsi]
	lea	r11,[56+rsi]
	lea	r12,[24+rsi]
	mov	QWORD[32+rsp],r10
	mov	QWORD[40+rsp],r11
	mov	QWORD[48+rsp],r12
	mov	QWORD[56+rsp],rcx
	call	QWORD[__imp_RtlVirtualUnwind]

	mov	eax,1
	add	rsp,64
	popfq
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	pop	rbx
	pop	rdi
	pop	rsi
	DB	0F3h,0C3h		;repret


section	.pdata rdata align=4
ALIGN	4
	DD	$L$SEH_begin_rsaz_1024_sqr_avx2 wrt ..imagebase
	DD	$L$SEH_end_rsaz_1024_sqr_avx2 wrt ..imagebase
	DD	$L$SEH_info_rsaz_1024_sqr_avx2 wrt ..imagebase

	DD	$L$SEH_begin_rsaz_1024_mul_avx2 wrt ..imagebase
	DD	$L$SEH_end_rsaz_1024_mul_avx2 wrt ..imagebase
	DD	$L$SEH_info_rsaz_1024_mul_avx2 wrt ..imagebase

	DD	$L$SEH_begin_rsaz_1024_gather5 wrt ..imagebase
	DD	$L$SEH_end_rsaz_1024_gather5 wrt ..imagebase
	DD	$L$SEH_info_rsaz_1024_gather5 wrt ..imagebase
section	.xdata rdata align=8
ALIGN	8
$L$SEH_info_rsaz_1024_sqr_avx2:
DB	9,0,0,0
	DD	rsaz_se_handler wrt ..imagebase
	DD	$L$sqr_1024_body wrt ..imagebase,$L$sqr_1024_epilogue wrt ..imagebase,$L$sqr_1024_in_tail wrt ..imagebase
	DD	0
$L$SEH_info_rsaz_1024_mul_avx2:
DB	9,0,0,0
	DD	rsaz_se_handler wrt ..imagebase
	DD	$L$mul_1024_body wrt ..imagebase,$L$mul_1024_epilogue wrt ..imagebase,$L$mul_1024_in_tail wrt ..imagebase
	DD	0
$L$SEH_info_rsaz_1024_gather5:
DB	0x01,0x36,0x17,0x0b
DB	0x36,0xf8,0x09,0x00
DB	0x31,0xe8,0x08,0x00
DB	0x2c,0xd8,0x07,0x00
DB	0x27,0xc8,0x06,0x00
DB	0x22,0xb8,0x05,0x00
DB	0x1d,0xa8,0x04,0x00
DB	0x18,0x98,0x03,0x00
DB	0x13,0x88,0x02,0x00
DB	0x0e,0x78,0x01,0x00
DB	0x09,0x68,0x00,0x00
DB	0x04,0x01,0x15,0x00
DB	0x00,0xb3,0x00,0x00
         node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/bn/rsaz-avx512.asm                  0000664 0000000 0000000 00000045545 14746647661 0027137 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        default	rel
%define XMMWORD
%define YMMWORD
%define ZMMWORD
EXTERN	OPENSSL_ia32cap_P
global	ossl_rsaz_avx512ifma_eligible

ALIGN	32
ossl_rsaz_avx512ifma_eligible:
	mov	ecx,DWORD[((OPENSSL_ia32cap_P+8))]
	xor	eax,eax
	and	ecx,2149777408
	cmp	ecx,2149777408
	cmove	eax,ecx
	DB	0F3h,0C3h		;repret

section	.text code align=64


global	ossl_rsaz_amm52x20_x1_256

ALIGN	32
ossl_rsaz_amm52x20_x1_256:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_ossl_rsaz_amm52x20_x1_256:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]



DB	243,15,30,250
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

$L$rsaz_amm52x20_x1_256_body:


	vpxord	ymm0,ymm0,ymm0
	vmovdqa64	ymm1,ymm0
	vmovdqa64	ymm16,ymm0
	vmovdqa64	ymm17,ymm0
	vmovdqa64	ymm18,ymm0
	vmovdqa64	ymm19,ymm0

	xor	r9d,r9d

	mov	r11,rdx
	mov	rax,0xfffffffffffff


	mov	ebx,5

ALIGN	32
$L$loop5:
	mov	r13,QWORD[r11]

	vpbroadcastq	ymm3,r13
	mov	rdx,QWORD[rsi]
	mulx	r12,r13,r13
	add	r9,r13
	mov	r10,r12
	adc	r10,0

	mov	r13,r8
	imul	r13,r9
	and	r13,rax

	vpbroadcastq	ymm4,r13
	mov	rdx,QWORD[rcx]
	mulx	r12,r13,r13
	add	r9,r13
	adc	r10,r12

	shr	r9,52
	sal	r10,12
	or	r9,r10

	vpmadd52luq	ymm1,ymm3,YMMWORD[rsi]
	vpmadd52luq	ymm16,ymm3,YMMWORD[32+rsi]
	vpmadd52luq	ymm17,ymm3,YMMWORD[64+rsi]
	vpmadd52luq	ymm18,ymm3,YMMWORD[96+rsi]
	vpmadd52luq	ymm19,ymm3,YMMWORD[128+rsi]

	vpmadd52luq	ymm1,ymm4,YMMWORD[rcx]
	vpmadd52luq	ymm16,ymm4,YMMWORD[32+rcx]
	vpmadd52luq	ymm17,ymm4,YMMWORD[64+rcx]
	vpmadd52luq	ymm18,ymm4,YMMWORD[96+rcx]
	vpmadd52luq	ymm19,ymm4,YMMWORD[128+rcx]


	valignq	ymm1,ymm16,ymm1,1
	valignq	ymm16,ymm17,ymm16,1
	valignq	ymm17,ymm18,ymm17,1
	valignq	ymm18,ymm19,ymm18,1
	valignq	ymm19,ymm0,ymm19,1

	vmovq	r13,xmm1
	add	r9,r13

	vpmadd52huq	ymm1,ymm3,YMMWORD[rsi]
	vpmadd52huq	ymm16,ymm3,YMMWORD[32+rsi]
	vpmadd52huq	ymm17,ymm3,YMMWORD[64+rsi]
	vpmadd52huq	ymm18,ymm3,YMMWORD[96+rsi]
	vpmadd52huq	ymm19,ymm3,YMMWORD[128+rsi]

	vpmadd52huq	ymm1,ymm4,YMMWORD[rcx]
	vpmadd52huq	ymm16,ymm4,YMMWORD[32+rcx]
	vpmadd52huq	ymm17,ymm4,YMMWORD[64+rcx]
	vpmadd52huq	ymm18,ymm4,YMMWORD[96+rcx]
	vpmadd52huq	ymm19,ymm4,YMMWORD[128+rcx]
	mov	r13,QWORD[8+r11]

	vpbroadcastq	ymm3,r13
	mov	rdx,QWORD[rsi]
	mulx	r12,r13,r13
	add	r9,r13
	mov	r10,r12
	adc	r10,0

	mov	r13,r8
	imul	r13,r9
	and	r13,rax

	vpbroadcastq	ymm4,r13
	mov	rdx,QWORD[rcx]
	mulx	r12,r13,r13
	add	r9,r13
	adc	r10,r12

	shr	r9,52
	sal	r10,12
	or	r9,r10

	vpmadd52luq	ymm1,ymm3,YMMWORD[rsi]
	vpmadd52luq	ymm16,ymm3,YMMWORD[32+rsi]
	vpmadd52luq	ymm17,ymm3,YMMWORD[64+rsi]
	vpmadd52luq	ymm18,ymm3,YMMWORD[96+rsi]
	vpmadd52luq	ymm19,ymm3,YMMWORD[128+rsi]

	vpmadd52luq	ymm1,ymm4,YMMWORD[rcx]
	vpmadd52luq	ymm16,ymm4,YMMWORD[32+rcx]
	vpmadd52luq	ymm17,ymm4,YMMWORD[64+rcx]
	vpmadd52luq	ymm18,ymm4,YMMWORD[96+rcx]
	vpmadd52luq	ymm19,ymm4,YMMWORD[128+rcx]


	valignq	ymm1,ymm16,ymm1,1
	valignq	ymm16,ymm17,ymm16,1
	valignq	ymm17,ymm18,ymm17,1
	valignq	ymm18,ymm19,ymm18,1
	valignq	ymm19,ymm0,ymm19,1

	vmovq	r13,xmm1
	add	r9,r13

	vpmadd52huq	ymm1,ymm3,YMMWORD[rsi]
	vpmadd52huq	ymm16,ymm3,YMMWORD[32+rsi]
	vpmadd52huq	ymm17,ymm3,YMMWORD[64+rsi]
	vpmadd52huq	ymm18,ymm3,YMMWORD[96+rsi]
	vpmadd52huq	ymm19,ymm3,YMMWORD[128+rsi]

	vpmadd52huq	ymm1,ymm4,YMMWORD[rcx]
	vpmadd52huq	ymm16,ymm4,YMMWORD[32+rcx]
	vpmadd52huq	ymm17,ymm4,YMMWORD[64+rcx]
	vpmadd52huq	ymm18,ymm4,YMMWORD[96+rcx]
	vpmadd52huq	ymm19,ymm4,YMMWORD[128+rcx]
	mov	r13,QWORD[16+r11]

	vpbroadcastq	ymm3,r13
	mov	rdx,QWORD[rsi]
	mulx	r12,r13,r13
	add	r9,r13
	mov	r10,r12
	adc	r10,0

	mov	r13,r8
	imul	r13,r9
	and	r13,rax

	vpbroadcastq	ymm4,r13
	mov	rdx,QWORD[rcx]
	mulx	r12,r13,r13
	add	r9,r13
	adc	r10,r12

	shr	r9,52
	sal	r10,12
	or	r9,r10

	vpmadd52luq	ymm1,ymm3,YMMWORD[rsi]
	vpmadd52luq	ymm16,ymm3,YMMWORD[32+rsi]
	vpmadd52luq	ymm17,ymm3,YMMWORD[64+rsi]
	vpmadd52luq	ymm18,ymm3,YMMWORD[96+rsi]
	vpmadd52luq	ymm19,ymm3,YMMWORD[128+rsi]

	vpmadd52luq	ymm1,ymm4,YMMWORD[rcx]
	vpmadd52luq	ymm16,ymm4,YMMWORD[32+rcx]
	vpmadd52luq	ymm17,ymm4,YMMWORD[64+rcx]
	vpmadd52luq	ymm18,ymm4,YMMWORD[96+rcx]
	vpmadd52luq	ymm19,ymm4,YMMWORD[128+rcx]


	valignq	ymm1,ymm16,ymm1,1
	valignq	ymm16,ymm17,ymm16,1
	valignq	ymm17,ymm18,ymm17,1
	valignq	ymm18,ymm19,ymm18,1
	valignq	ymm19,ymm0,ymm19,1

	vmovq	r13,xmm1
	add	r9,r13

	vpmadd52huq	ymm1,ymm3,YMMWORD[rsi]
	vpmadd52huq	ymm16,ymm3,YMMWORD[32+rsi]
	vpmadd52huq	ymm17,ymm3,YMMWORD[64+rsi]
	vpmadd52huq	ymm18,ymm3,YMMWORD[96+rsi]
	vpmadd52huq	ymm19,ymm3,YMMWORD[128+rsi]

	vpmadd52huq	ymm1,ymm4,YMMWORD[rcx]
	vpmadd52huq	ymm16,ymm4,YMMWORD[32+rcx]
	vpmadd52huq	ymm17,ymm4,YMMWORD[64+rcx]
	vpmadd52huq	ymm18,ymm4,YMMWORD[96+rcx]
	vpmadd52huq	ymm19,ymm4,YMMWORD[128+rcx]
	mov	r13,QWORD[24+r11]

	vpbroadcastq	ymm3,r13
	mov	rdx,QWORD[rsi]
	mulx	r12,r13,r13
	add	r9,r13
	mov	r10,r12
	adc	r10,0

	mov	r13,r8
	imul	r13,r9
	and	r13,rax

	vpbroadcastq	ymm4,r13
	mov	rdx,QWORD[rcx]
	mulx	r12,r13,r13
	add	r9,r13
	adc	r10,r12

	shr	r9,52
	sal	r10,12
	or	r9,r10

	vpmadd52luq	ymm1,ymm3,YMMWORD[rsi]
	vpmadd52luq	ymm16,ymm3,YMMWORD[32+rsi]
	vpmadd52luq	ymm17,ymm3,YMMWORD[64+rsi]
	vpmadd52luq	ymm18,ymm3,YMMWORD[96+rsi]
	vpmadd52luq	ymm19,ymm3,YMMWORD[128+rsi]

	vpmadd52luq	ymm1,ymm4,YMMWORD[rcx]
	vpmadd52luq	ymm16,ymm4,YMMWORD[32+rcx]
	vpmadd52luq	ymm17,ymm4,YMMWORD[64+rcx]
	vpmadd52luq	ymm18,ymm4,YMMWORD[96+rcx]
	vpmadd52luq	ymm19,ymm4,YMMWORD[128+rcx]


	valignq	ymm1,ymm16,ymm1,1
	valignq	ymm16,ymm17,ymm16,1
	valignq	ymm17,ymm18,ymm17,1
	valignq	ymm18,ymm19,ymm18,1
	valignq	ymm19,ymm0,ymm19,1

	vmovq	r13,xmm1
	add	r9,r13

	vpmadd52huq	ymm1,ymm3,YMMWORD[rsi]
	vpmadd52huq	ymm16,ymm3,YMMWORD[32+rsi]
	vpmadd52huq	ymm17,ymm3,YMMWORD[64+rsi]
	vpmadd52huq	ymm18,ymm3,YMMWORD[96+rsi]
	vpmadd52huq	ymm19,ymm3,YMMWORD[128+rsi]

	vpmadd52huq	ymm1,ymm4,YMMWORD[rcx]
	vpmadd52huq	ymm16,ymm4,YMMWORD[32+rcx]
	vpmadd52huq	ymm17,ymm4,YMMWORD[64+rcx]
	vpmadd52huq	ymm18,ymm4,YMMWORD[96+rcx]
	vpmadd52huq	ymm19,ymm4,YMMWORD[128+rcx]
	lea	r11,[32+r11]
	dec	ebx
	jne	NEAR $L$loop5

	vmovdqa64	ymm4,YMMWORD[$L$mask52x4]

	vpbroadcastq	ymm3,r9
	vpblendd	ymm1,ymm1,ymm3,3



	vpsrlq	ymm24,ymm1,52
	vpsrlq	ymm25,ymm16,52
	vpsrlq	ymm26,ymm17,52
	vpsrlq	ymm27,ymm18,52
	vpsrlq	ymm28,ymm19,52


	valignq	ymm28,ymm28,ymm27,3
	valignq	ymm27,ymm27,ymm26,3
	valignq	ymm26,ymm26,ymm25,3
	valignq	ymm25,ymm25,ymm24,3
	valignq	ymm24,ymm24,ymm0,3


	vpandq	ymm1,ymm1,ymm4
	vpandq	ymm16,ymm16,ymm4
	vpandq	ymm17,ymm17,ymm4
	vpandq	ymm18,ymm18,ymm4
	vpandq	ymm19,ymm19,ymm4


	vpaddq	ymm1,ymm1,ymm24
	vpaddq	ymm16,ymm16,ymm25
	vpaddq	ymm17,ymm17,ymm26
	vpaddq	ymm18,ymm18,ymm27
	vpaddq	ymm19,ymm19,ymm28



	vpcmpuq	k1,ymm4,ymm1,1
	vpcmpuq	k2,ymm4,ymm16,1
	vpcmpuq	k3,ymm4,ymm17,1
	vpcmpuq	k4,ymm4,ymm18,1
	vpcmpuq	k5,ymm4,ymm19,1
	kmovb	r14d,k1
	kmovb	r13d,k2
	kmovb	r12d,k3
	kmovb	r11d,k4
	kmovb	r10d,k5


	vpcmpuq	k1,ymm4,ymm1,0
	vpcmpuq	k2,ymm4,ymm16,0
	vpcmpuq	k3,ymm4,ymm17,0
	vpcmpuq	k4,ymm4,ymm18,0
	vpcmpuq	k5,ymm4,ymm19,0
	kmovb	r9d,k1
	kmovb	r8d,k2
	kmovb	ebx,k3
	kmovb	ecx,k4
	kmovb	edx,k5



	shl	r13b,4
	or	r14b,r13b
	shl	r11b,4
	or	r12b,r11b

	add	r14b,r14b
	adc	r12b,r12b
	adc	r10b,r10b

	shl	r8b,4
	or	r9b,r8b
	shl	cl,4
	or	bl,cl

	add	r14b,r9b
	adc	r12b,bl
	adc	r10b,dl

	xor	r14b,r9b
	xor	r12b,bl
	xor	r10b,dl

	kmovb	k1,r14d
	shr	r14b,4
	kmovb	k2,r14d
	kmovb	k3,r12d
	shr	r12b,4
	kmovb	k4,r12d
	kmovb	k5,r10d


	vpsubq	ymm1{k1},ymm1,ymm4
	vpsubq	ymm16{k2},ymm16,ymm4
	vpsubq	ymm17{k3},ymm17,ymm4
	vpsubq	ymm18{k4},ymm18,ymm4
	vpsubq	ymm19{k5},ymm19,ymm4

	vpandq	ymm1,ymm1,ymm4
	vpandq	ymm16,ymm16,ymm4
	vpandq	ymm17,ymm17,ymm4
	vpandq	ymm18,ymm18,ymm4
	vpandq	ymm19,ymm19,ymm4

	vmovdqu64	YMMWORD[rdi],ymm1
	vmovdqu64	YMMWORD[32+rdi],ymm16
	vmovdqu64	YMMWORD[64+rdi],ymm17
	vmovdqu64	YMMWORD[96+rdi],ymm18
	vmovdqu64	YMMWORD[128+rdi],ymm19

	vzeroupper
	mov	r15,QWORD[rsp]

	mov	r14,QWORD[8+rsp]

	mov	r13,QWORD[16+rsp]

	mov	r12,QWORD[24+rsp]

	mov	rbp,QWORD[32+rsp]

	mov	rbx,QWORD[40+rsp]

	lea	rsp,[48+rsp]

$L$rsaz_amm52x20_x1_256_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_ossl_rsaz_amm52x20_x1_256:
section	.data data align=8

ALIGN	32
$L$mask52x4:
	DQ	0xfffffffffffff
	DQ	0xfffffffffffff
	DQ	0xfffffffffffff
	DQ	0xfffffffffffff
section	.text code align=64


global	ossl_rsaz_amm52x20_x2_256

ALIGN	32
ossl_rsaz_amm52x20_x2_256:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_ossl_rsaz_amm52x20_x2_256:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]



DB	243,15,30,250
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

$L$rsaz_amm52x20_x2_256_body:


	vpxord	ymm0,ymm0,ymm0
	vmovdqa64	ymm1,ymm0
	vmovdqa64	ymm16,ymm0
	vmovdqa64	ymm17,ymm0
	vmovdqa64	ymm18,ymm0
	vmovdqa64	ymm19,ymm0
	vmovdqa64	ymm2,ymm0
	vmovdqa64	ymm20,ymm0
	vmovdqa64	ymm21,ymm0
	vmovdqa64	ymm22,ymm0
	vmovdqa64	ymm23,ymm0

	xor	r9d,r9d
	xor	r15d,r15d

	mov	r11,rdx
	mov	rax,0xfffffffffffff

	mov	ebx,20

ALIGN	32
$L$loop20:
	mov	r13,QWORD[r11]

	vpbroadcastq	ymm3,r13
	mov	rdx,QWORD[rsi]
	mulx	r12,r13,r13
	add	r9,r13
	mov	r10,r12
	adc	r10,0

	mov	r13,QWORD[r8]
	imul	r13,r9
	and	r13,rax

	vpbroadcastq	ymm4,r13
	mov	rdx,QWORD[rcx]
	mulx	r12,r13,r13
	add	r9,r13
	adc	r10,r12

	shr	r9,52
	sal	r10,12
	or	r9,r10

	vpmadd52luq	ymm1,ymm3,YMMWORD[rsi]
	vpmadd52luq	ymm16,ymm3,YMMWORD[32+rsi]
	vpmadd52luq	ymm17,ymm3,YMMWORD[64+rsi]
	vpmadd52luq	ymm18,ymm3,YMMWORD[96+rsi]
	vpmadd52luq	ymm19,ymm3,YMMWORD[128+rsi]

	vpmadd52luq	ymm1,ymm4,YMMWORD[rcx]
	vpmadd52luq	ymm16,ymm4,YMMWORD[32+rcx]
	vpmadd52luq	ymm17,ymm4,YMMWORD[64+rcx]
	vpmadd52luq	ymm18,ymm4,YMMWORD[96+rcx]
	vpmadd52luq	ymm19,ymm4,YMMWORD[128+rcx]


	valignq	ymm1,ymm16,ymm1,1
	valignq	ymm16,ymm17,ymm16,1
	valignq	ymm17,ymm18,ymm17,1
	valignq	ymm18,ymm19,ymm18,1
	valignq	ymm19,ymm0,ymm19,1

	vmovq	r13,xmm1
	add	r9,r13

	vpmadd52huq	ymm1,ymm3,YMMWORD[rsi]
	vpmadd52huq	ymm16,ymm3,YMMWORD[32+rsi]
	vpmadd52huq	ymm17,ymm3,YMMWORD[64+rsi]
	vpmadd52huq	ymm18,ymm3,YMMWORD[96+rsi]
	vpmadd52huq	ymm19,ymm3,YMMWORD[128+rsi]

	vpmadd52huq	ymm1,ymm4,YMMWORD[rcx]
	vpmadd52huq	ymm16,ymm4,YMMWORD[32+rcx]
	vpmadd52huq	ymm17,ymm4,YMMWORD[64+rcx]
	vpmadd52huq	ymm18,ymm4,YMMWORD[96+rcx]
	vpmadd52huq	ymm19,ymm4,YMMWORD[128+rcx]
	mov	r13,QWORD[160+r11]

	vpbroadcastq	ymm3,r13
	mov	rdx,QWORD[160+rsi]
	mulx	r12,r13,r13
	add	r15,r13
	mov	r10,r12
	adc	r10,0

	mov	r13,QWORD[8+r8]
	imul	r13,r15
	and	r13,rax

	vpbroadcastq	ymm4,r13
	mov	rdx,QWORD[160+rcx]
	mulx	r12,r13,r13
	add	r15,r13
	adc	r10,r12

	shr	r15,52
	sal	r10,12
	or	r15,r10

	vpmadd52luq	ymm2,ymm3,YMMWORD[160+rsi]
	vpmadd52luq	ymm20,ymm3,YMMWORD[192+rsi]
	vpmadd52luq	ymm21,ymm3,YMMWORD[224+rsi]
	vpmadd52luq	ymm22,ymm3,YMMWORD[256+rsi]
	vpmadd52luq	ymm23,ymm3,YMMWORD[288+rsi]

	vpmadd52luq	ymm2,ymm4,YMMWORD[160+rcx]
	vpmadd52luq	ymm20,ymm4,YMMWORD[192+rcx]
	vpmadd52luq	ymm21,ymm4,YMMWORD[224+rcx]
	vpmadd52luq	ymm22,ymm4,YMMWORD[256+rcx]
	vpmadd52luq	ymm23,ymm4,YMMWORD[288+rcx]


	valignq	ymm2,ymm20,ymm2,1
	valignq	ymm20,ymm21,ymm20,1
	valignq	ymm21,ymm22,ymm21,1
	valignq	ymm22,ymm23,ymm22,1
	valignq	ymm23,ymm0,ymm23,1

	vmovq	r13,xmm2
	add	r15,r13

	vpmadd52huq	ymm2,ymm3,YMMWORD[160+rsi]
	vpmadd52huq	ymm20,ymm3,YMMWORD[192+rsi]
	vpmadd52huq	ymm21,ymm3,YMMWORD[224+rsi]
	vpmadd52huq	ymm22,ymm3,YMMWORD[256+rsi]
	vpmadd52huq	ymm23,ymm3,YMMWORD[288+rsi]

	vpmadd52huq	ymm2,ymm4,YMMWORD[160+rcx]
	vpmadd52huq	ymm20,ymm4,YMMWORD[192+rcx]
	vpmadd52huq	ymm21,ymm4,YMMWORD[224+rcx]
	vpmadd52huq	ymm22,ymm4,YMMWORD[256+rcx]
	vpmadd52huq	ymm23,ymm4,YMMWORD[288+rcx]
	lea	r11,[8+r11]
	dec	ebx
	jne	NEAR $L$loop20

	vmovdqa64	ymm4,YMMWORD[$L$mask52x4]

	vpbroadcastq	ymm3,r9
	vpblendd	ymm1,ymm1,ymm3,3



	vpsrlq	ymm24,ymm1,52
	vpsrlq	ymm25,ymm16,52
	vpsrlq	ymm26,ymm17,52
	vpsrlq	ymm27,ymm18,52
	vpsrlq	ymm28,ymm19,52


	valignq	ymm28,ymm28,ymm27,3
	valignq	ymm27,ymm27,ymm26,3
	valignq	ymm26,ymm26,ymm25,3
	valignq	ymm25,ymm25,ymm24,3
	valignq	ymm24,ymm24,ymm0,3


	vpandq	ymm1,ymm1,ymm4
	vpandq	ymm16,ymm16,ymm4
	vpandq	ymm17,ymm17,ymm4
	vpandq	ymm18,ymm18,ymm4
	vpandq	ymm19,ymm19,ymm4


	vpaddq	ymm1,ymm1,ymm24
	vpaddq	ymm16,ymm16,ymm25
	vpaddq	ymm17,ymm17,ymm26
	vpaddq	ymm18,ymm18,ymm27
	vpaddq	ymm19,ymm19,ymm28



	vpcmpuq	k1,ymm4,ymm1,1
	vpcmpuq	k2,ymm4,ymm16,1
	vpcmpuq	k3,ymm4,ymm17,1
	vpcmpuq	k4,ymm4,ymm18,1
	vpcmpuq	k5,ymm4,ymm19,1
	kmovb	r14d,k1
	kmovb	r13d,k2
	kmovb	r12d,k3
	kmovb	r11d,k4
	kmovb	r10d,k5


	vpcmpuq	k1,ymm4,ymm1,0
	vpcmpuq	k2,ymm4,ymm16,0
	vpcmpuq	k3,ymm4,ymm17,0
	vpcmpuq	k4,ymm4,ymm18,0
	vpcmpuq	k5,ymm4,ymm19,0
	kmovb	r9d,k1
	kmovb	r8d,k2
	kmovb	ebx,k3
	kmovb	ecx,k4
	kmovb	edx,k5



	shl	r13b,4
	or	r14b,r13b
	shl	r11b,4
	or	r12b,r11b

	add	r14b,r14b
	adc	r12b,r12b
	adc	r10b,r10b

	shl	r8b,4
	or	r9b,r8b
	shl	cl,4
	or	bl,cl

	add	r14b,r9b
	adc	r12b,bl
	adc	r10b,dl

	xor	r14b,r9b
	xor	r12b,bl
	xor	r10b,dl

	kmovb	k1,r14d
	shr	r14b,4
	kmovb	k2,r14d
	kmovb	k3,r12d
	shr	r12b,4
	kmovb	k4,r12d
	kmovb	k5,r10d


	vpsubq	ymm1{k1},ymm1,ymm4
	vpsubq	ymm16{k2},ymm16,ymm4
	vpsubq	ymm17{k3},ymm17,ymm4
	vpsubq	ymm18{k4},ymm18,ymm4
	vpsubq	ymm19{k5},ymm19,ymm4

	vpandq	ymm1,ymm1,ymm4
	vpandq	ymm16,ymm16,ymm4
	vpandq	ymm17,ymm17,ymm4
	vpandq	ymm18,ymm18,ymm4
	vpandq	ymm19,ymm19,ymm4

	vpbroadcastq	ymm3,r15
	vpblendd	ymm2,ymm2,ymm3,3



	vpsrlq	ymm24,ymm2,52
	vpsrlq	ymm25,ymm20,52
	vpsrlq	ymm26,ymm21,52
	vpsrlq	ymm27,ymm22,52
	vpsrlq	ymm28,ymm23,52


	valignq	ymm28,ymm28,ymm27,3
	valignq	ymm27,ymm27,ymm26,3
	valignq	ymm26,ymm26,ymm25,3
	valignq	ymm25,ymm25,ymm24,3
	valignq	ymm24,ymm24,ymm0,3


	vpandq	ymm2,ymm2,ymm4
	vpandq	ymm20,ymm20,ymm4
	vpandq	ymm21,ymm21,ymm4
	vpandq	ymm22,ymm22,ymm4
	vpandq	ymm23,ymm23,ymm4


	vpaddq	ymm2,ymm2,ymm24
	vpaddq	ymm20,ymm20,ymm25
	vpaddq	ymm21,ymm21,ymm26
	vpaddq	ymm22,ymm22,ymm27
	vpaddq	ymm23,ymm23,ymm28



	vpcmpuq	k1,ymm4,ymm2,1
	vpcmpuq	k2,ymm4,ymm20,1
	vpcmpuq	k3,ymm4,ymm21,1
	vpcmpuq	k4,ymm4,ymm22,1
	vpcmpuq	k5,ymm4,ymm23,1
	kmovb	r14d,k1
	kmovb	r13d,k2
	kmovb	r12d,k3
	kmovb	r11d,k4
	kmovb	r10d,k5


	vpcmpuq	k1,ymm4,ymm2,0
	vpcmpuq	k2,ymm4,ymm20,0
	vpcmpuq	k3,ymm4,ymm21,0
	vpcmpuq	k4,ymm4,ymm22,0
	vpcmpuq	k5,ymm4,ymm23,0
	kmovb	r9d,k1
	kmovb	r8d,k2
	kmovb	ebx,k3
	kmovb	ecx,k4
	kmovb	edx,k5



	shl	r13b,4
	or	r14b,r13b
	shl	r11b,4
	or	r12b,r11b

	add	r14b,r14b
	adc	r12b,r12b
	adc	r10b,r10b

	shl	r8b,4
	or	r9b,r8b
	shl	cl,4
	or	bl,cl

	add	r14b,r9b
	adc	r12b,bl
	adc	r10b,dl

	xor	r14b,r9b
	xor	r12b,bl
	xor	r10b,dl

	kmovb	k1,r14d
	shr	r14b,4
	kmovb	k2,r14d
	kmovb	k3,r12d
	shr	r12b,4
	kmovb	k4,r12d
	kmovb	k5,r10d


	vpsubq	ymm2{k1},ymm2,ymm4
	vpsubq	ymm20{k2},ymm20,ymm4
	vpsubq	ymm21{k3},ymm21,ymm4
	vpsubq	ymm22{k4},ymm22,ymm4
	vpsubq	ymm23{k5},ymm23,ymm4

	vpandq	ymm2,ymm2,ymm4
	vpandq	ymm20,ymm20,ymm4
	vpandq	ymm21,ymm21,ymm4
	vpandq	ymm22,ymm22,ymm4
	vpandq	ymm23,ymm23,ymm4

	vmovdqu64	YMMWORD[rdi],ymm1
	vmovdqu64	YMMWORD[32+rdi],ymm16
	vmovdqu64	YMMWORD[64+rdi],ymm17
	vmovdqu64	YMMWORD[96+rdi],ymm18
	vmovdqu64	YMMWORD[128+rdi],ymm19

	vmovdqu64	YMMWORD[160+rdi],ymm2
	vmovdqu64	YMMWORD[192+rdi],ymm20
	vmovdqu64	YMMWORD[224+rdi],ymm21
	vmovdqu64	YMMWORD[256+rdi],ymm22
	vmovdqu64	YMMWORD[288+rdi],ymm23

	vzeroupper
	mov	r15,QWORD[rsp]

	mov	r14,QWORD[8+rsp]

	mov	r13,QWORD[16+rsp]

	mov	r12,QWORD[24+rsp]

	mov	rbp,QWORD[32+rsp]

	mov	rbx,QWORD[40+rsp]

	lea	rsp,[48+rsp]

$L$rsaz_amm52x20_x2_256_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_ossl_rsaz_amm52x20_x2_256:
section	.text code align=64


ALIGN	32
global	ossl_extract_multiplier_2x20_win5

ossl_extract_multiplier_2x20_win5:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_ossl_extract_multiplier_2x20_win5:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9



DB	243,15,30,250
	lea	rax,[rcx*4+rcx]
	sal	rax,5
	add	rsi,rax

	vmovdqa64	ymm23,YMMWORD[$L$ones]
	vpbroadcastq	ymm22,rdx
	lea	rax,[10240+rsi]

	vpxor	xmm4,xmm4,xmm4
	vmovdqa64	ymm3,ymm4
	vmovdqa64	ymm2,ymm4
	vmovdqa64	ymm1,ymm4
	vmovdqa64	ymm0,ymm4
	vmovdqa64	ymm21,ymm4

ALIGN	32
$L$loop:
	vpcmpq	k1,ymm22,ymm21,0
	add	rsi,320
	vpaddq	ymm21,ymm21,ymm23
	vmovdqu64	ymm16,YMMWORD[((-320))+rsi]
	vmovdqu64	ymm17,YMMWORD[((-288))+rsi]
	vmovdqu64	ymm18,YMMWORD[((-256))+rsi]
	vmovdqu64	ymm19,YMMWORD[((-224))+rsi]
	vmovdqu64	ymm20,YMMWORD[((-192))+rsi]
	vpblendmq	ymm0{k1},ymm0,ymm16
	vpblendmq	ymm1{k1},ymm1,ymm17
	vpblendmq	ymm2{k1},ymm2,ymm18
	vpblendmq	ymm3{k1},ymm3,ymm19
	vpblendmq	ymm4{k1},ymm4,ymm20
	cmp	rax,rsi
	jne	NEAR $L$loop

	vmovdqu64	YMMWORD[rdi],ymm0
	vmovdqu64	YMMWORD[32+rdi],ymm1
	vmovdqu64	YMMWORD[64+rdi],ymm2
	vmovdqu64	YMMWORD[96+rdi],ymm3
	vmovdqu64	YMMWORD[128+rdi],ymm4

	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_ossl_extract_multiplier_2x20_win5:
section	.data data align=8

ALIGN	32
$L$ones:
	DQ	1,1,1,1
EXTERN	__imp_RtlVirtualUnwind

ALIGN	16
rsaz_def_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$common_seh_tail

	mov	rax,QWORD[152+r8]

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$common_seh_tail

	lea	rax,[48+rax]

	mov	rbx,QWORD[((-8))+rax]
	mov	rbp,QWORD[((-16))+rax]
	mov	r12,QWORD[((-24))+rax]
	mov	r13,QWORD[((-32))+rax]
	mov	r14,QWORD[((-40))+rax]
	mov	r15,QWORD[((-48))+rax]
	mov	QWORD[144+r8],rbx
	mov	QWORD[160+r8],rbp
	mov	QWORD[216+r8],r12
	mov	QWORD[224+r8],r13
	mov	QWORD[232+r8],r14
	mov	QWORD[240+r8],r15

$L$common_seh_tail:
	mov	rdi,QWORD[8+rax]
	mov	rsi,QWORD[16+rax]
	mov	QWORD[152+r8],rax
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi

	mov	rdi,QWORD[40+r9]
	mov	rsi,r8
	mov	ecx,154
	DD	0xa548f3fc

	mov	rsi,r9
	xor	rcx,rcx
	mov	rdx,QWORD[8+rsi]
	mov	r8,QWORD[rsi]
	mov	r9,QWORD[16+rsi]
	mov	r10,QWORD[40+rsi]
	lea	r11,[56+rsi]
	lea	r12,[24+rsi]
	mov	QWORD[32+rsp],r10
	mov	QWORD[40+rsp],r11
	mov	QWORD[48+rsp],r12
	mov	QWORD[56+rsp],rcx
	call	QWORD[__imp_RtlVirtualUnwind]

	mov	eax,1
	add	rsp,64
	popfq
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	pop	rbx
	pop	rdi
	pop	rsi
	DB	0F3h,0C3h		;repret


section	.pdata rdata align=4
ALIGN	4
	DD	$L$SEH_begin_ossl_rsaz_amm52x20_x1_256 wrt ..imagebase
	DD	$L$SEH_end_ossl_rsaz_amm52x20_x1_256 wrt ..imagebase
	DD	$L$SEH_info_ossl_rsaz_amm52x20_x1_256 wrt ..imagebase

	DD	$L$SEH_begin_ossl_rsaz_amm52x20_x2_256 wrt ..imagebase
	DD	$L$SEH_end_ossl_rsaz_amm52x20_x2_256 wrt ..imagebase
	DD	$L$SEH_info_ossl_rsaz_amm52x20_x2_256 wrt ..imagebase

	DD	$L$SEH_begin_ossl_extract_multiplier_2x20_win5 wrt ..imagebase
	DD	$L$SEH_end_ossl_extract_multiplier_2x20_win5 wrt ..imagebase
	DD	$L$SEH_info_ossl_extract_multiplier_2x20_win5 wrt ..imagebase

section	.xdata rdata align=8
ALIGN	8
$L$SEH_info_ossl_rsaz_amm52x20_x1_256:
DB	9,0,0,0
	DD	rsaz_def_handler wrt ..imagebase
	DD	$L$rsaz_amm52x20_x1_256_body wrt ..imagebase,$L$rsaz_amm52x20_x1_256_epilogue wrt ..imagebase
$L$SEH_info_ossl_rsaz_amm52x20_x2_256:
DB	9,0,0,0
	DD	rsaz_def_handler wrt ..imagebase
	DD	$L$rsaz_amm52x20_x2_256_body wrt ..imagebase,$L$rsaz_amm52x20_x2_256_epilogue wrt ..imagebase
$L$SEH_info_ossl_extract_multiplier_2x20_win5:
DB	9,0,0,0
	DD	rsaz_def_handler wrt ..imagebase
	DD	$L$SEH_begin_ossl_extract_multiplier_2x20_win5 wrt ..imagebase,$L$SEH_begin_ossl_extract_multiplier_2x20_win5 wrt ..imagebase
                                                                                                                                                           node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/bn/rsaz-x86_64.asm                  0000664 0000000 0000000 00000103407 14746647661 0027037 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        default	rel
%define XMMWORD
%define YMMWORD
%define ZMMWORD
section	.text code align=64


EXTERN	OPENSSL_ia32cap_P

global	rsaz_512_sqr

ALIGN	32
rsaz_512_sqr:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_rsaz_512_sqr:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]



	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15


	sub	rsp,128+24

$L$sqr_body:
DB	102,72,15,110,202
	mov	rdx,QWORD[rsi]
	mov	rax,QWORD[8+rsi]
	mov	QWORD[128+rsp],rcx
	mov	r11d,0x80100
	and	r11d,DWORD[((OPENSSL_ia32cap_P+8))]
	cmp	r11d,0x80100
	je	NEAR $L$oop_sqrx
	jmp	NEAR $L$oop_sqr

ALIGN	32
$L$oop_sqr:
	mov	DWORD[((128+8))+rsp],r8d

	mov	rbx,rdx
	mov	rbp,rax
	mul	rdx
	mov	r8,rax
	mov	rax,QWORD[16+rsi]
	mov	r9,rdx

	mul	rbx
	add	r9,rax
	mov	rax,QWORD[24+rsi]
	mov	r10,rdx
	adc	r10,0

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[32+rsi]
	mov	r11,rdx
	adc	r11,0

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[40+rsi]
	mov	r12,rdx
	adc	r12,0

	mul	rbx
	add	r12,rax
	mov	rax,QWORD[48+rsi]
	mov	r13,rdx
	adc	r13,0

	mul	rbx
	add	r13,rax
	mov	rax,QWORD[56+rsi]
	mov	r14,rdx
	adc	r14,0

	mul	rbx
	add	r14,rax
	mov	rax,rbx
	adc	rdx,0

	xor	rcx,rcx
	add	r8,r8
	mov	r15,rdx
	adc	rcx,0

	mul	rax
	add	rdx,r8
	adc	rcx,0

	mov	QWORD[rsp],rax
	mov	QWORD[8+rsp],rdx


	mov	rax,QWORD[16+rsi]
	mul	rbp
	add	r10,rax
	mov	rax,QWORD[24+rsi]
	mov	rbx,rdx
	adc	rbx,0

	mul	rbp
	add	r11,rax
	mov	rax,QWORD[32+rsi]
	adc	rdx,0
	add	r11,rbx
	mov	rbx,rdx
	adc	rbx,0

	mul	rbp
	add	r12,rax
	mov	rax,QWORD[40+rsi]
	adc	rdx,0
	add	r12,rbx
	mov	rbx,rdx
	adc	rbx,0

	mul	rbp
	add	r13,rax
	mov	rax,QWORD[48+rsi]
	adc	rdx,0
	add	r13,rbx
	mov	rbx,rdx
	adc	rbx,0

	mul	rbp
	add	r14,rax
	mov	rax,QWORD[56+rsi]
	adc	rdx,0
	add	r14,rbx
	mov	rbx,rdx
	adc	rbx,0

	mul	rbp
	add	r15,rax
	mov	rax,rbp
	adc	rdx,0
	add	r15,rbx
	adc	rdx,0

	xor	rbx,rbx
	add	r9,r9
	mov	r8,rdx
	adc	r10,r10
	adc	rbx,0

	mul	rax

	add	rax,rcx
	mov	rbp,QWORD[16+rsi]
	add	r9,rax
	mov	rax,QWORD[24+rsi]
	adc	r10,rdx
	adc	rbx,0

	mov	QWORD[16+rsp],r9
	mov	QWORD[24+rsp],r10


	mul	rbp
	add	r12,rax
	mov	rax,QWORD[32+rsi]
	mov	rcx,rdx
	adc	rcx,0

	mul	rbp
	add	r13,rax
	mov	rax,QWORD[40+rsi]
	adc	rdx,0
	add	r13,rcx
	mov	rcx,rdx
	adc	rcx,0

	mul	rbp
	add	r14,rax
	mov	rax,QWORD[48+rsi]
	adc	rdx,0
	add	r14,rcx
	mov	rcx,rdx
	adc	rcx,0

	mul	rbp
	add	r15,rax
	mov	rax,QWORD[56+rsi]
	adc	rdx,0
	add	r15,rcx
	mov	rcx,rdx
	adc	rcx,0

	mul	rbp
	add	r8,rax
	mov	rax,rbp
	adc	rdx,0
	add	r8,rcx
	adc	rdx,0

	xor	rcx,rcx
	add	r11,r11
	mov	r9,rdx
	adc	r12,r12
	adc	rcx,0

	mul	rax

	add	rax,rbx
	mov	r10,QWORD[24+rsi]
	add	r11,rax
	mov	rax,QWORD[32+rsi]
	adc	r12,rdx
	adc	rcx,0

	mov	QWORD[32+rsp],r11
	mov	QWORD[40+rsp],r12


	mov	r11,rax
	mul	r10
	add	r14,rax
	mov	rax,QWORD[40+rsi]
	mov	rbx,rdx
	adc	rbx,0

	mov	r12,rax
	mul	r10
	add	r15,rax
	mov	rax,QWORD[48+rsi]
	adc	rdx,0
	add	r15,rbx
	mov	rbx,rdx
	adc	rbx,0

	mov	rbp,rax
	mul	r10
	add	r8,rax
	mov	rax,QWORD[56+rsi]
	adc	rdx,0
	add	r8,rbx
	mov	rbx,rdx
	adc	rbx,0

	mul	r10
	add	r9,rax
	mov	rax,r10
	adc	rdx,0
	add	r9,rbx
	adc	rdx,0

	xor	rbx,rbx
	add	r13,r13
	mov	r10,rdx
	adc	r14,r14
	adc	rbx,0

	mul	rax

	add	rax,rcx
	add	r13,rax
	mov	rax,r12
	adc	r14,rdx
	adc	rbx,0

	mov	QWORD[48+rsp],r13
	mov	QWORD[56+rsp],r14


	mul	r11
	add	r8,rax
	mov	rax,rbp
	mov	rcx,rdx
	adc	rcx,0

	mul	r11
	add	r9,rax
	mov	rax,QWORD[56+rsi]
	adc	rdx,0
	add	r9,rcx
	mov	rcx,rdx
	adc	rcx,0

	mov	r14,rax
	mul	r11
	add	r10,rax
	mov	rax,r11
	adc	rdx,0
	add	r10,rcx
	adc	rdx,0

	xor	rcx,rcx
	add	r15,r15
	mov	r11,rdx
	adc	r8,r8
	adc	rcx,0

	mul	rax

	add	rax,rbx
	add	r15,rax
	mov	rax,rbp
	adc	r8,rdx
	adc	rcx,0

	mov	QWORD[64+rsp],r15
	mov	QWORD[72+rsp],r8


	mul	r12
	add	r10,rax
	mov	rax,r14
	mov	rbx,rdx
	adc	rbx,0

	mul	r12
	add	r11,rax
	mov	rax,r12
	adc	rdx,0
	add	r11,rbx
	adc	rdx,0

	xor	rbx,rbx
	add	r9,r9
	mov	r12,rdx
	adc	r10,r10
	adc	rbx,0

	mul	rax

	add	rax,rcx
	add	r9,rax
	mov	rax,r14
	adc	r10,rdx
	adc	rbx,0

	mov	QWORD[80+rsp],r9
	mov	QWORD[88+rsp],r10


	mul	rbp
	add	r12,rax
	mov	rax,rbp
	adc	rdx,0

	xor	rcx,rcx
	add	r11,r11
	mov	r13,rdx
	adc	r12,r12
	adc	rcx,0

	mul	rax

	add	rax,rbx
	add	r11,rax
	mov	rax,r14
	adc	r12,rdx
	adc	rcx,0

	mov	QWORD[96+rsp],r11
	mov	QWORD[104+rsp],r12


	xor	rbx,rbx
	add	r13,r13
	adc	rbx,0

	mul	rax

	add	rax,rcx
	add	rax,r13
	adc	rdx,rbx

	mov	r8,QWORD[rsp]
	mov	r9,QWORD[8+rsp]
	mov	r10,QWORD[16+rsp]
	mov	r11,QWORD[24+rsp]
	mov	r12,QWORD[32+rsp]
	mov	r13,QWORD[40+rsp]
	mov	r14,QWORD[48+rsp]
	mov	r15,QWORD[56+rsp]
DB	102,72,15,126,205

	mov	QWORD[112+rsp],rax
	mov	QWORD[120+rsp],rdx

	call	__rsaz_512_reduce

	add	r8,QWORD[64+rsp]
	adc	r9,QWORD[72+rsp]
	adc	r10,QWORD[80+rsp]
	adc	r11,QWORD[88+rsp]
	adc	r12,QWORD[96+rsp]
	adc	r13,QWORD[104+rsp]
	adc	r14,QWORD[112+rsp]
	adc	r15,QWORD[120+rsp]
	sbb	rcx,rcx

	call	__rsaz_512_subtract

	mov	rdx,r8
	mov	rax,r9
	mov	r8d,DWORD[((128+8))+rsp]
	mov	rsi,rdi

	dec	r8d
	jnz	NEAR $L$oop_sqr
	jmp	NEAR $L$sqr_tail

ALIGN	32
$L$oop_sqrx:
	mov	DWORD[((128+8))+rsp],r8d
DB	102,72,15,110,199

	mulx	r9,r8,rax
	mov	rbx,rax

	mulx	r10,rcx,QWORD[16+rsi]
	xor	rbp,rbp

	mulx	r11,rax,QWORD[24+rsi]
	adcx	r9,rcx

DB	0xc4,0x62,0xf3,0xf6,0xa6,0x20,0x00,0x00,0x00
	adcx	r10,rax

DB	0xc4,0x62,0xfb,0xf6,0xae,0x28,0x00,0x00,0x00
	adcx	r11,rcx

	mulx	r14,rcx,QWORD[48+rsi]
	adcx	r12,rax
	adcx	r13,rcx

	mulx	r15,rax,QWORD[56+rsi]
	adcx	r14,rax
	adcx	r15,rbp

	mulx	rdi,rax,rdx
	mov	rdx,rbx
	xor	rcx,rcx
	adox	r8,r8
	adcx	r8,rdi
	adox	rcx,rbp
	adcx	rcx,rbp

	mov	QWORD[rsp],rax
	mov	QWORD[8+rsp],r8


DB	0xc4,0xe2,0xfb,0xf6,0x9e,0x10,0x00,0x00,0x00
	adox	r10,rax
	adcx	r11,rbx

	mulx	r8,rdi,QWORD[24+rsi]
	adox	r11,rdi
DB	0x66
	adcx	r12,r8

	mulx	rbx,rax,QWORD[32+rsi]
	adox	r12,rax
	adcx	r13,rbx

	mulx	r8,rdi,QWORD[40+rsi]
	adox	r13,rdi
	adcx	r14,r8

DB	0xc4,0xe2,0xfb,0xf6,0x9e,0x30,0x00,0x00,0x00
	adox	r14,rax
	adcx	r15,rbx

DB	0xc4,0x62,0xc3,0xf6,0x86,0x38,0x00,0x00,0x00
	adox	r15,rdi
	adcx	r8,rbp
	mulx	rdi,rax,rdx
	adox	r8,rbp
DB	0x48,0x8b,0x96,0x10,0x00,0x00,0x00

	xor	rbx,rbx
	adox	r9,r9

	adcx	rax,rcx
	adox	r10,r10
	adcx	r9,rax
	adox	rbx,rbp
	adcx	r10,rdi
	adcx	rbx,rbp

	mov	QWORD[16+rsp],r9
DB	0x4c,0x89,0x94,0x24,0x18,0x00,0x00,0x00


	mulx	r9,rdi,QWORD[24+rsi]
	adox	r12,rdi
	adcx	r13,r9

	mulx	rcx,rax,QWORD[32+rsi]
	adox	r13,rax
	adcx	r14,rcx

DB	0xc4,0x62,0xc3,0xf6,0x8e,0x28,0x00,0x00,0x00
	adox	r14,rdi
	adcx	r15,r9

DB	0xc4,0xe2,0xfb,0xf6,0x8e,0x30,0x00,0x00,0x00
	adox	r15,rax
	adcx	r8,rcx

	mulx	r9,rdi,QWORD[56+rsi]
	adox	r8,rdi
	adcx	r9,rbp
	mulx	rdi,rax,rdx
	adox	r9,rbp
	mov	rdx,QWORD[24+rsi]

	xor	rcx,rcx
	adox	r11,r11

	adcx	rax,rbx
	adox	r12,r12
	adcx	r11,rax
	adox	rcx,rbp
	adcx	r12,rdi
	adcx	rcx,rbp

	mov	QWORD[32+rsp],r11
	mov	QWORD[40+rsp],r12


	mulx	rbx,rax,QWORD[32+rsi]
	adox	r14,rax
	adcx	r15,rbx

	mulx	r10,rdi,QWORD[40+rsi]
	adox	r15,rdi
	adcx	r8,r10

	mulx	rbx,rax,QWORD[48+rsi]
	adox	r8,rax
	adcx	r9,rbx

	mulx	r10,rdi,QWORD[56+rsi]
	adox	r9,rdi
	adcx	r10,rbp
	mulx	rdi,rax,rdx
	adox	r10,rbp
	mov	rdx,QWORD[32+rsi]

	xor	rbx,rbx
	adox	r13,r13

	adcx	rax,rcx
	adox	r14,r14
	adcx	r13,rax
	adox	rbx,rbp
	adcx	r14,rdi
	adcx	rbx,rbp

	mov	QWORD[48+rsp],r13
	mov	QWORD[56+rsp],r14


	mulx	r11,rdi,QWORD[40+rsi]
	adox	r8,rdi
	adcx	r9,r11

	mulx	rcx,rax,QWORD[48+rsi]
	adox	r9,rax
	adcx	r10,rcx

	mulx	r11,rdi,QWORD[56+rsi]
	adox	r10,rdi
	adcx	r11,rbp
	mulx	rdi,rax,rdx
	mov	rdx,QWORD[40+rsi]
	adox	r11,rbp

	xor	rcx,rcx
	adox	r15,r15

	adcx	rax,rbx
	adox	r8,r8
	adcx	r15,rax
	adox	rcx,rbp
	adcx	r8,rdi
	adcx	rcx,rbp

	mov	QWORD[64+rsp],r15
	mov	QWORD[72+rsp],r8


DB	0xc4,0xe2,0xfb,0xf6,0x9e,0x30,0x00,0x00,0x00
	adox	r10,rax
	adcx	r11,rbx

DB	0xc4,0x62,0xc3,0xf6,0xa6,0x38,0x00,0x00,0x00
	adox	r11,rdi
	adcx	r12,rbp
	mulx	rdi,rax,rdx
	adox	r12,rbp
	mov	rdx,QWORD[48+rsi]

	xor	rbx,rbx
	adox	r9,r9

	adcx	rax,rcx
	adox	r10,r10
	adcx	r9,rax
	adcx	r10,rdi
	adox	rbx,rbp
	adcx	rbx,rbp

	mov	QWORD[80+rsp],r9
	mov	QWORD[88+rsp],r10


DB	0xc4,0x62,0xfb,0xf6,0xae,0x38,0x00,0x00,0x00
	adox	r12,rax
	adox	r13,rbp

	mulx	rdi,rax,rdx
	xor	rcx,rcx
	mov	rdx,QWORD[56+rsi]
	adox	r11,r11

	adcx	rax,rbx
	adox	r12,r12
	adcx	r11,rax
	adox	rcx,rbp
	adcx	r12,rdi
	adcx	rcx,rbp

DB	0x4c,0x89,0x9c,0x24,0x60,0x00,0x00,0x00
DB	0x4c,0x89,0xa4,0x24,0x68,0x00,0x00,0x00


	mulx	rdx,rax,rdx
	xor	rbx,rbx
	adox	r13,r13

	adcx	rax,rcx
	adox	rbx,rbp
	adcx	rax,r13
	adcx	rbx,rdx

DB	102,72,15,126,199
DB	102,72,15,126,205

	mov	rdx,QWORD[128+rsp]
	mov	r8,QWORD[rsp]
	mov	r9,QWORD[8+rsp]
	mov	r10,QWORD[16+rsp]
	mov	r11,QWORD[24+rsp]
	mov	r12,QWORD[32+rsp]
	mov	r13,QWORD[40+rsp]
	mov	r14,QWORD[48+rsp]
	mov	r15,QWORD[56+rsp]

	mov	QWORD[112+rsp],rax
	mov	QWORD[120+rsp],rbx

	call	__rsaz_512_reducex

	add	r8,QWORD[64+rsp]
	adc	r9,QWORD[72+rsp]
	adc	r10,QWORD[80+rsp]
	adc	r11,QWORD[88+rsp]
	adc	r12,QWORD[96+rsp]
	adc	r13,QWORD[104+rsp]
	adc	r14,QWORD[112+rsp]
	adc	r15,QWORD[120+rsp]
	sbb	rcx,rcx

	call	__rsaz_512_subtract

	mov	rdx,r8
	mov	rax,r9
	mov	r8d,DWORD[((128+8))+rsp]
	mov	rsi,rdi

	dec	r8d
	jnz	NEAR $L$oop_sqrx

$L$sqr_tail:

	lea	rax,[((128+24+48))+rsp]

	mov	r15,QWORD[((-48))+rax]

	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbp,QWORD[((-16))+rax]

	mov	rbx,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$sqr_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_rsaz_512_sqr:
global	rsaz_512_mul

ALIGN	32
rsaz_512_mul:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_rsaz_512_mul:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]



	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15


	sub	rsp,128+24

$L$mul_body:
DB	102,72,15,110,199
DB	102,72,15,110,201
	mov	QWORD[128+rsp],r8
	mov	r11d,0x80100
	and	r11d,DWORD[((OPENSSL_ia32cap_P+8))]
	cmp	r11d,0x80100
	je	NEAR $L$mulx
	mov	rbx,QWORD[rdx]
	mov	rbp,rdx
	call	__rsaz_512_mul

DB	102,72,15,126,199
DB	102,72,15,126,205

	mov	r8,QWORD[rsp]
	mov	r9,QWORD[8+rsp]
	mov	r10,QWORD[16+rsp]
	mov	r11,QWORD[24+rsp]
	mov	r12,QWORD[32+rsp]
	mov	r13,QWORD[40+rsp]
	mov	r14,QWORD[48+rsp]
	mov	r15,QWORD[56+rsp]

	call	__rsaz_512_reduce
	jmp	NEAR $L$mul_tail

ALIGN	32
$L$mulx:
	mov	rbp,rdx
	mov	rdx,QWORD[rdx]
	call	__rsaz_512_mulx

DB	102,72,15,126,199
DB	102,72,15,126,205

	mov	rdx,QWORD[128+rsp]
	mov	r8,QWORD[rsp]
	mov	r9,QWORD[8+rsp]
	mov	r10,QWORD[16+rsp]
	mov	r11,QWORD[24+rsp]
	mov	r12,QWORD[32+rsp]
	mov	r13,QWORD[40+rsp]
	mov	r14,QWORD[48+rsp]
	mov	r15,QWORD[56+rsp]

	call	__rsaz_512_reducex
$L$mul_tail:
	add	r8,QWORD[64+rsp]
	adc	r9,QWORD[72+rsp]
	adc	r10,QWORD[80+rsp]
	adc	r11,QWORD[88+rsp]
	adc	r12,QWORD[96+rsp]
	adc	r13,QWORD[104+rsp]
	adc	r14,QWORD[112+rsp]
	adc	r15,QWORD[120+rsp]
	sbb	rcx,rcx

	call	__rsaz_512_subtract

	lea	rax,[((128+24+48))+rsp]

	mov	r15,QWORD[((-48))+rax]

	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbp,QWORD[((-16))+rax]

	mov	rbx,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$mul_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_rsaz_512_mul:
global	rsaz_512_mul_gather4

ALIGN	32
rsaz_512_mul_gather4:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_rsaz_512_mul_gather4:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15


	sub	rsp,328

	movaps	XMMWORD[160+rsp],xmm6
	movaps	XMMWORD[176+rsp],xmm7
	movaps	XMMWORD[192+rsp],xmm8
	movaps	XMMWORD[208+rsp],xmm9
	movaps	XMMWORD[224+rsp],xmm10
	movaps	XMMWORD[240+rsp],xmm11
	movaps	XMMWORD[256+rsp],xmm12
	movaps	XMMWORD[272+rsp],xmm13
	movaps	XMMWORD[288+rsp],xmm14
	movaps	XMMWORD[304+rsp],xmm15
$L$mul_gather4_body:
	movd	xmm8,r9d
	movdqa	xmm1,XMMWORD[(($L$inc+16))]
	movdqa	xmm0,XMMWORD[$L$inc]

	pshufd	xmm8,xmm8,0
	movdqa	xmm7,xmm1
	movdqa	xmm2,xmm1
	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm8
	movdqa	xmm3,xmm7
	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm8
	movdqa	xmm4,xmm7
	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm8
	movdqa	xmm5,xmm7
	paddd	xmm4,xmm3
	pcmpeqd	xmm3,xmm8
	movdqa	xmm6,xmm7
	paddd	xmm5,xmm4
	pcmpeqd	xmm4,xmm8
	paddd	xmm6,xmm5
	pcmpeqd	xmm5,xmm8
	paddd	xmm7,xmm6
	pcmpeqd	xmm6,xmm8
	pcmpeqd	xmm7,xmm8

	movdqa	xmm8,XMMWORD[rdx]
	movdqa	xmm9,XMMWORD[16+rdx]
	movdqa	xmm10,XMMWORD[32+rdx]
	movdqa	xmm11,XMMWORD[48+rdx]
	pand	xmm8,xmm0
	movdqa	xmm12,XMMWORD[64+rdx]
	pand	xmm9,xmm1
	movdqa	xmm13,XMMWORD[80+rdx]
	pand	xmm10,xmm2
	movdqa	xmm14,XMMWORD[96+rdx]
	pand	xmm11,xmm3
	movdqa	xmm15,XMMWORD[112+rdx]
	lea	rbp,[128+rdx]
	pand	xmm12,xmm4
	pand	xmm13,xmm5
	pand	xmm14,xmm6
	pand	xmm15,xmm7
	por	xmm8,xmm10
	por	xmm9,xmm11
	por	xmm8,xmm12
	por	xmm9,xmm13
	por	xmm8,xmm14
	por	xmm9,xmm15

	por	xmm8,xmm9
	pshufd	xmm9,xmm8,0x4e
	por	xmm8,xmm9
	mov	r11d,0x80100
	and	r11d,DWORD[((OPENSSL_ia32cap_P+8))]
	cmp	r11d,0x80100
	je	NEAR $L$mulx_gather
DB	102,76,15,126,195

	mov	QWORD[128+rsp],r8
	mov	QWORD[((128+8))+rsp],rdi
	mov	QWORD[((128+16))+rsp],rcx

	mov	rax,QWORD[rsi]
	mov	rcx,QWORD[8+rsi]
	mul	rbx
	mov	QWORD[rsp],rax
	mov	rax,rcx
	mov	r8,rdx

	mul	rbx
	add	r8,rax
	mov	rax,QWORD[16+rsi]
	mov	r9,rdx
	adc	r9,0

	mul	rbx
	add	r9,rax
	mov	rax,QWORD[24+rsi]
	mov	r10,rdx
	adc	r10,0

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[32+rsi]
	mov	r11,rdx
	adc	r11,0

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[40+rsi]
	mov	r12,rdx
	adc	r12,0

	mul	rbx
	add	r12,rax
	mov	rax,QWORD[48+rsi]
	mov	r13,rdx
	adc	r13,0

	mul	rbx
	add	r13,rax
	mov	rax,QWORD[56+rsi]
	mov	r14,rdx
	adc	r14,0

	mul	rbx
	add	r14,rax
	mov	rax,QWORD[rsi]
	mov	r15,rdx
	adc	r15,0

	lea	rdi,[8+rsp]
	mov	ecx,7
	jmp	NEAR $L$oop_mul_gather

ALIGN	32
$L$oop_mul_gather:
	movdqa	xmm8,XMMWORD[rbp]
	movdqa	xmm9,XMMWORD[16+rbp]
	movdqa	xmm10,XMMWORD[32+rbp]
	movdqa	xmm11,XMMWORD[48+rbp]
	pand	xmm8,xmm0
	movdqa	xmm12,XMMWORD[64+rbp]
	pand	xmm9,xmm1
	movdqa	xmm13,XMMWORD[80+rbp]
	pand	xmm10,xmm2
	movdqa	xmm14,XMMWORD[96+rbp]
	pand	xmm11,xmm3
	movdqa	xmm15,XMMWORD[112+rbp]
	lea	rbp,[128+rbp]
	pand	xmm12,xmm4
	pand	xmm13,xmm5
	pand	xmm14,xmm6
	pand	xmm15,xmm7
	por	xmm8,xmm10
	por	xmm9,xmm11
	por	xmm8,xmm12
	por	xmm9,xmm13
	por	xmm8,xmm14
	por	xmm9,xmm15

	por	xmm8,xmm9
	pshufd	xmm9,xmm8,0x4e
	por	xmm8,xmm9
DB	102,76,15,126,195

	mul	rbx
	add	r8,rax
	mov	rax,QWORD[8+rsi]
	mov	QWORD[rdi],r8
	mov	r8,rdx
	adc	r8,0

	mul	rbx
	add	r9,rax
	mov	rax,QWORD[16+rsi]
	adc	rdx,0
	add	r8,r9
	mov	r9,rdx
	adc	r9,0

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[24+rsi]
	adc	rdx,0
	add	r9,r10
	mov	r10,rdx
	adc	r10,0

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[32+rsi]
	adc	rdx,0
	add	r10,r11
	mov	r11,rdx
	adc	r11,0

	mul	rbx
	add	r12,rax
	mov	rax,QWORD[40+rsi]
	adc	rdx,0
	add	r11,r12
	mov	r12,rdx
	adc	r12,0

	mul	rbx
	add	r13,rax
	mov	rax,QWORD[48+rsi]
	adc	rdx,0
	add	r12,r13
	mov	r13,rdx
	adc	r13,0

	mul	rbx
	add	r14,rax
	mov	rax,QWORD[56+rsi]
	adc	rdx,0
	add	r13,r14
	mov	r14,rdx
	adc	r14,0

	mul	rbx
	add	r15,rax
	mov	rax,QWORD[rsi]
	adc	rdx,0
	add	r14,r15
	mov	r15,rdx
	adc	r15,0

	lea	rdi,[8+rdi]

	dec	ecx
	jnz	NEAR $L$oop_mul_gather

	mov	QWORD[rdi],r8
	mov	QWORD[8+rdi],r9
	mov	QWORD[16+rdi],r10
	mov	QWORD[24+rdi],r11
	mov	QWORD[32+rdi],r12
	mov	QWORD[40+rdi],r13
	mov	QWORD[48+rdi],r14
	mov	QWORD[56+rdi],r15

	mov	rdi,QWORD[((128+8))+rsp]
	mov	rbp,QWORD[((128+16))+rsp]

	mov	r8,QWORD[rsp]
	mov	r9,QWORD[8+rsp]
	mov	r10,QWORD[16+rsp]
	mov	r11,QWORD[24+rsp]
	mov	r12,QWORD[32+rsp]
	mov	r13,QWORD[40+rsp]
	mov	r14,QWORD[48+rsp]
	mov	r15,QWORD[56+rsp]

	call	__rsaz_512_reduce
	jmp	NEAR $L$mul_gather_tail

ALIGN	32
$L$mulx_gather:
DB	102,76,15,126,194

	mov	QWORD[128+rsp],r8
	mov	QWORD[((128+8))+rsp],rdi
	mov	QWORD[((128+16))+rsp],rcx

	mulx	r8,rbx,QWORD[rsi]
	mov	QWORD[rsp],rbx
	xor	edi,edi

	mulx	r9,rax,QWORD[8+rsi]

	mulx	r10,rbx,QWORD[16+rsi]
	adcx	r8,rax

	mulx	r11,rax,QWORD[24+rsi]
	adcx	r9,rbx

	mulx	r12,rbx,QWORD[32+rsi]
	adcx	r10,rax

	mulx	r13,rax,QWORD[40+rsi]
	adcx	r11,rbx

	mulx	r14,rbx,QWORD[48+rsi]
	adcx	r12,rax

	mulx	r15,rax,QWORD[56+rsi]
	adcx	r13,rbx
	adcx	r14,rax
DB	0x67
	mov	rbx,r8
	adcx	r15,rdi

	mov	rcx,-7
	jmp	NEAR $L$oop_mulx_gather

ALIGN	32
$L$oop_mulx_gather:
	movdqa	xmm8,XMMWORD[rbp]
	movdqa	xmm9,XMMWORD[16+rbp]
	movdqa	xmm10,XMMWORD[32+rbp]
	movdqa	xmm11,XMMWORD[48+rbp]
	pand	xmm8,xmm0
	movdqa	xmm12,XMMWORD[64+rbp]
	pand	xmm9,xmm1
	movdqa	xmm13,XMMWORD[80+rbp]
	pand	xmm10,xmm2
	movdqa	xmm14,XMMWORD[96+rbp]
	pand	xmm11,xmm3
	movdqa	xmm15,XMMWORD[112+rbp]
	lea	rbp,[128+rbp]
	pand	xmm12,xmm4
	pand	xmm13,xmm5
	pand	xmm14,xmm6
	pand	xmm15,xmm7
	por	xmm8,xmm10
	por	xmm9,xmm11
	por	xmm8,xmm12
	por	xmm9,xmm13
	por	xmm8,xmm14
	por	xmm9,xmm15

	por	xmm8,xmm9
	pshufd	xmm9,xmm8,0x4e
	por	xmm8,xmm9
DB	102,76,15,126,194

DB	0xc4,0x62,0xfb,0xf6,0x86,0x00,0x00,0x00,0x00
	adcx	rbx,rax
	adox	r8,r9

	mulx	r9,rax,QWORD[8+rsi]
	adcx	r8,rax
	adox	r9,r10

	mulx	r10,rax,QWORD[16+rsi]
	adcx	r9,rax
	adox	r10,r11

DB	0xc4,0x62,0xfb,0xf6,0x9e,0x18,0x00,0x00,0x00
	adcx	r10,rax
	adox	r11,r12

	mulx	r12,rax,QWORD[32+rsi]
	adcx	r11,rax
	adox	r12,r13

	mulx	r13,rax,QWORD[40+rsi]
	adcx	r12,rax
	adox	r13,r14

DB	0xc4,0x62,0xfb,0xf6,0xb6,0x30,0x00,0x00,0x00
	adcx	r13,rax
DB	0x67
	adox	r14,r15

	mulx	r15,rax,QWORD[56+rsi]
	mov	QWORD[64+rcx*8+rsp],rbx
	adcx	r14,rax
	adox	r15,rdi
	mov	rbx,r8
	adcx	r15,rdi

	inc	rcx
	jnz	NEAR $L$oop_mulx_gather

	mov	QWORD[64+rsp],r8
	mov	QWORD[((64+8))+rsp],r9
	mov	QWORD[((64+16))+rsp],r10
	mov	QWORD[((64+24))+rsp],r11
	mov	QWORD[((64+32))+rsp],r12
	mov	QWORD[((64+40))+rsp],r13
	mov	QWORD[((64+48))+rsp],r14
	mov	QWORD[((64+56))+rsp],r15

	mov	rdx,QWORD[128+rsp]
	mov	rdi,QWORD[((128+8))+rsp]
	mov	rbp,QWORD[((128+16))+rsp]

	mov	r8,QWORD[rsp]
	mov	r9,QWORD[8+rsp]
	mov	r10,QWORD[16+rsp]
	mov	r11,QWORD[24+rsp]
	mov	r12,QWORD[32+rsp]
	mov	r13,QWORD[40+rsp]
	mov	r14,QWORD[48+rsp]
	mov	r15,QWORD[56+rsp]

	call	__rsaz_512_reducex

$L$mul_gather_tail:
	add	r8,QWORD[64+rsp]
	adc	r9,QWORD[72+rsp]
	adc	r10,QWORD[80+rsp]
	adc	r11,QWORD[88+rsp]
	adc	r12,QWORD[96+rsp]
	adc	r13,QWORD[104+rsp]
	adc	r14,QWORD[112+rsp]
	adc	r15,QWORD[120+rsp]
	sbb	rcx,rcx

	call	__rsaz_512_subtract

	lea	rax,[((128+24+48))+rsp]
	movaps	xmm6,XMMWORD[((160-200))+rax]
	movaps	xmm7,XMMWORD[((176-200))+rax]
	movaps	xmm8,XMMWORD[((192-200))+rax]
	movaps	xmm9,XMMWORD[((208-200))+rax]
	movaps	xmm10,XMMWORD[((224-200))+rax]
	movaps	xmm11,XMMWORD[((240-200))+rax]
	movaps	xmm12,XMMWORD[((256-200))+rax]
	movaps	xmm13,XMMWORD[((272-200))+rax]
	movaps	xmm14,XMMWORD[((288-200))+rax]
	movaps	xmm15,XMMWORD[((304-200))+rax]
	lea	rax,[176+rax]

	mov	r15,QWORD[((-48))+rax]

	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbp,QWORD[((-16))+rax]

	mov	rbx,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$mul_gather4_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_rsaz_512_mul_gather4:
global	rsaz_512_mul_scatter4

ALIGN	32
rsaz_512_mul_scatter4:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_rsaz_512_mul_scatter4:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15


	mov	r9d,r9d
	sub	rsp,128+24

$L$mul_scatter4_body:
	lea	r8,[r9*8+r8]
DB	102,72,15,110,199
DB	102,72,15,110,202
DB	102,73,15,110,208
	mov	QWORD[128+rsp],rcx

	mov	rbp,rdi
	mov	r11d,0x80100
	and	r11d,DWORD[((OPENSSL_ia32cap_P+8))]
	cmp	r11d,0x80100
	je	NEAR $L$mulx_scatter
	mov	rbx,QWORD[rdi]
	call	__rsaz_512_mul

DB	102,72,15,126,199
DB	102,72,15,126,205

	mov	r8,QWORD[rsp]
	mov	r9,QWORD[8+rsp]
	mov	r10,QWORD[16+rsp]
	mov	r11,QWORD[24+rsp]
	mov	r12,QWORD[32+rsp]
	mov	r13,QWORD[40+rsp]
	mov	r14,QWORD[48+rsp]
	mov	r15,QWORD[56+rsp]

	call	__rsaz_512_reduce
	jmp	NEAR $L$mul_scatter_tail

ALIGN	32
$L$mulx_scatter:
	mov	rdx,QWORD[rdi]
	call	__rsaz_512_mulx

DB	102,72,15,126,199
DB	102,72,15,126,205

	mov	rdx,QWORD[128+rsp]
	mov	r8,QWORD[rsp]
	mov	r9,QWORD[8+rsp]
	mov	r10,QWORD[16+rsp]
	mov	r11,QWORD[24+rsp]
	mov	r12,QWORD[32+rsp]
	mov	r13,QWORD[40+rsp]
	mov	r14,QWORD[48+rsp]
	mov	r15,QWORD[56+rsp]

	call	__rsaz_512_reducex

$L$mul_scatter_tail:
	add	r8,QWORD[64+rsp]
	adc	r9,QWORD[72+rsp]
	adc	r10,QWORD[80+rsp]
	adc	r11,QWORD[88+rsp]
	adc	r12,QWORD[96+rsp]
	adc	r13,QWORD[104+rsp]
	adc	r14,QWORD[112+rsp]
	adc	r15,QWORD[120+rsp]
DB	102,72,15,126,214
	sbb	rcx,rcx

	call	__rsaz_512_subtract

	mov	QWORD[rsi],r8
	mov	QWORD[128+rsi],r9
	mov	QWORD[256+rsi],r10
	mov	QWORD[384+rsi],r11
	mov	QWORD[512+rsi],r12
	mov	QWORD[640+rsi],r13
	mov	QWORD[768+rsi],r14
	mov	QWORD[896+rsi],r15

	lea	rax,[((128+24+48))+rsp]

	mov	r15,QWORD[((-48))+rax]

	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbp,QWORD[((-16))+rax]

	mov	rbx,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$mul_scatter4_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_rsaz_512_mul_scatter4:
global	rsaz_512_mul_by_one

ALIGN	32
rsaz_512_mul_by_one:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_rsaz_512_mul_by_one:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9



	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15


	sub	rsp,128+24

$L$mul_by_one_body:
	mov	eax,DWORD[((OPENSSL_ia32cap_P+8))]
	mov	rbp,rdx
	mov	QWORD[128+rsp],rcx

	mov	r8,QWORD[rsi]
	pxor	xmm0,xmm0
	mov	r9,QWORD[8+rsi]
	mov	r10,QWORD[16+rsi]
	mov	r11,QWORD[24+rsi]
	mov	r12,QWORD[32+rsi]
	mov	r13,QWORD[40+rsi]
	mov	r14,QWORD[48+rsi]
	mov	r15,QWORD[56+rsi]

	movdqa	XMMWORD[rsp],xmm0
	movdqa	XMMWORD[16+rsp],xmm0
	movdqa	XMMWORD[32+rsp],xmm0
	movdqa	XMMWORD[48+rsp],xmm0
	movdqa	XMMWORD[64+rsp],xmm0
	movdqa	XMMWORD[80+rsp],xmm0
	movdqa	XMMWORD[96+rsp],xmm0
	and	eax,0x80100
	cmp	eax,0x80100
	je	NEAR $L$by_one_callx
	call	__rsaz_512_reduce
	jmp	NEAR $L$by_one_tail
ALIGN	32
$L$by_one_callx:
	mov	rdx,QWORD[128+rsp]
	call	__rsaz_512_reducex
$L$by_one_tail:
	mov	QWORD[rdi],r8
	mov	QWORD[8+rdi],r9
	mov	QWORD[16+rdi],r10
	mov	QWORD[24+rdi],r11
	mov	QWORD[32+rdi],r12
	mov	QWORD[40+rdi],r13
	mov	QWORD[48+rdi],r14
	mov	QWORD[56+rdi],r15

	lea	rax,[((128+24+48))+rsp]

	mov	r15,QWORD[((-48))+rax]

	mov	r14,QWORD[((-40))+rax]

	mov	r13,QWORD[((-32))+rax]

	mov	r12,QWORD[((-24))+rax]

	mov	rbp,QWORD[((-16))+rax]

	mov	rbx,QWORD[((-8))+rax]

	lea	rsp,[rax]

$L$mul_by_one_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_rsaz_512_mul_by_one:

ALIGN	32
__rsaz_512_reduce:

	mov	rbx,r8
	imul	rbx,QWORD[((128+8))+rsp]
	mov	rax,QWORD[rbp]
	mov	ecx,8
	jmp	NEAR $L$reduction_loop

ALIGN	32
$L$reduction_loop:
	mul	rbx
	mov	rax,QWORD[8+rbp]
	neg	r8
	mov	r8,rdx
	adc	r8,0

	mul	rbx
	add	r9,rax
	mov	rax,QWORD[16+rbp]
	adc	rdx,0
	add	r8,r9
	mov	r9,rdx
	adc	r9,0

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[24+rbp]
	adc	rdx,0
	add	r9,r10
	mov	r10,rdx
	adc	r10,0

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[32+rbp]
	adc	rdx,0
	add	r10,r11
	mov	rsi,QWORD[((128+8))+rsp]


	adc	rdx,0
	mov	r11,rdx

	mul	rbx
	add	r12,rax
	mov	rax,QWORD[40+rbp]
	adc	rdx,0
	imul	rsi,r8
	add	r11,r12
	mov	r12,rdx
	adc	r12,0

	mul	rbx
	add	r13,rax
	mov	rax,QWORD[48+rbp]
	adc	rdx,0
	add	r12,r13
	mov	r13,rdx
	adc	r13,0

	mul	rbx
	add	r14,rax
	mov	rax,QWORD[56+rbp]
	adc	rdx,0
	add	r13,r14
	mov	r14,rdx
	adc	r14,0

	mul	rbx
	mov	rbx,rsi
	add	r15,rax
	mov	rax,QWORD[rbp]
	adc	rdx,0
	add	r14,r15
	mov	r15,rdx
	adc	r15,0

	dec	ecx
	jne	NEAR $L$reduction_loop

	DB	0F3h,0C3h		;repret



ALIGN	32
__rsaz_512_reducex:


	imul	rdx,r8
	xor	rsi,rsi
	mov	ecx,8
	jmp	NEAR $L$reduction_loopx

ALIGN	32
$L$reduction_loopx:
	mov	rbx,r8
	mulx	r8,rax,QWORD[rbp]
	adcx	rax,rbx
	adox	r8,r9

	mulx	r9,rax,QWORD[8+rbp]
	adcx	r8,rax
	adox	r9,r10

	mulx	r10,rbx,QWORD[16+rbp]
	adcx	r9,rbx
	adox	r10,r11

	mulx	r11,rbx,QWORD[24+rbp]
	adcx	r10,rbx
	adox	r11,r12

DB	0xc4,0x62,0xe3,0xf6,0xa5,0x20,0x00,0x00,0x00
	mov	rax,rdx
	mov	rdx,r8
	adcx	r11,rbx
	adox	r12,r13

	mulx	rdx,rbx,QWORD[((128+8))+rsp]
	mov	rdx,rax

	mulx	r13,rax,QWORD[40+rbp]
	adcx	r12,rax
	adox	r13,r14

DB	0xc4,0x62,0xfb,0xf6,0xb5,0x30,0x00,0x00,0x00
	adcx	r13,rax
	adox	r14,r15

	mulx	r15,rax,QWORD[56+rbp]
	mov	rdx,rbx
	adcx	r14,rax
	adox	r15,rsi
	adcx	r15,rsi

	dec	ecx
	jne	NEAR $L$reduction_loopx

	DB	0F3h,0C3h		;repret



ALIGN	32
__rsaz_512_subtract:

	mov	QWORD[rdi],r8
	mov	QWORD[8+rdi],r9
	mov	QWORD[16+rdi],r10
	mov	QWORD[24+rdi],r11
	mov	QWORD[32+rdi],r12
	mov	QWORD[40+rdi],r13
	mov	QWORD[48+rdi],r14
	mov	QWORD[56+rdi],r15

	mov	r8,QWORD[rbp]
	mov	r9,QWORD[8+rbp]
	neg	r8
	not	r9
	and	r8,rcx
	mov	r10,QWORD[16+rbp]
	and	r9,rcx
	not	r10
	mov	r11,QWORD[24+rbp]
	and	r10,rcx
	not	r11
	mov	r12,QWORD[32+rbp]
	and	r11,rcx
	not	r12
	mov	r13,QWORD[40+rbp]
	and	r12,rcx
	not	r13
	mov	r14,QWORD[48+rbp]
	and	r13,rcx
	not	r14
	mov	r15,QWORD[56+rbp]
	and	r14,rcx
	not	r15
	and	r15,rcx

	add	r8,QWORD[rdi]
	adc	r9,QWORD[8+rdi]
	adc	r10,QWORD[16+rdi]
	adc	r11,QWORD[24+rdi]
	adc	r12,QWORD[32+rdi]
	adc	r13,QWORD[40+rdi]
	adc	r14,QWORD[48+rdi]
	adc	r15,QWORD[56+rdi]

	mov	QWORD[rdi],r8
	mov	QWORD[8+rdi],r9
	mov	QWORD[16+rdi],r10
	mov	QWORD[24+rdi],r11
	mov	QWORD[32+rdi],r12
	mov	QWORD[40+rdi],r13
	mov	QWORD[48+rdi],r14
	mov	QWORD[56+rdi],r15

	DB	0F3h,0C3h		;repret



ALIGN	32
__rsaz_512_mul:

	lea	rdi,[8+rsp]

	mov	rax,QWORD[rsi]
	mul	rbx
	mov	QWORD[rdi],rax
	mov	rax,QWORD[8+rsi]
	mov	r8,rdx

	mul	rbx
	add	r8,rax
	mov	rax,QWORD[16+rsi]
	mov	r9,rdx
	adc	r9,0

	mul	rbx
	add	r9,rax
	mov	rax,QWORD[24+rsi]
	mov	r10,rdx
	adc	r10,0

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[32+rsi]
	mov	r11,rdx
	adc	r11,0

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[40+rsi]
	mov	r12,rdx
	adc	r12,0

	mul	rbx
	add	r12,rax
	mov	rax,QWORD[48+rsi]
	mov	r13,rdx
	adc	r13,0

	mul	rbx
	add	r13,rax
	mov	rax,QWORD[56+rsi]
	mov	r14,rdx
	adc	r14,0

	mul	rbx
	add	r14,rax
	mov	rax,QWORD[rsi]
	mov	r15,rdx
	adc	r15,0

	lea	rbp,[8+rbp]
	lea	rdi,[8+rdi]

	mov	ecx,7
	jmp	NEAR $L$oop_mul

ALIGN	32
$L$oop_mul:
	mov	rbx,QWORD[rbp]
	mul	rbx
	add	r8,rax
	mov	rax,QWORD[8+rsi]
	mov	QWORD[rdi],r8
	mov	r8,rdx
	adc	r8,0

	mul	rbx
	add	r9,rax
	mov	rax,QWORD[16+rsi]
	adc	rdx,0
	add	r8,r9
	mov	r9,rdx
	adc	r9,0

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[24+rsi]
	adc	rdx,0
	add	r9,r10
	mov	r10,rdx
	adc	r10,0

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[32+rsi]
	adc	rdx,0
	add	r10,r11
	mov	r11,rdx
	adc	r11,0

	mul	rbx
	add	r12,rax
	mov	rax,QWORD[40+rsi]
	adc	rdx,0
	add	r11,r12
	mov	r12,rdx
	adc	r12,0

	mul	rbx
	add	r13,rax
	mov	rax,QWORD[48+rsi]
	adc	rdx,0
	add	r12,r13
	mov	r13,rdx
	adc	r13,0

	mul	rbx
	add	r14,rax
	mov	rax,QWORD[56+rsi]
	adc	rdx,0
	add	r13,r14
	mov	r14,rdx
	lea	rbp,[8+rbp]
	adc	r14,0

	mul	rbx
	add	r15,rax
	mov	rax,QWORD[rsi]
	adc	rdx,0
	add	r14,r15
	mov	r15,rdx
	adc	r15,0

	lea	rdi,[8+rdi]

	dec	ecx
	jnz	NEAR $L$oop_mul

	mov	QWORD[rdi],r8
	mov	QWORD[8+rdi],r9
	mov	QWORD[16+rdi],r10
	mov	QWORD[24+rdi],r11
	mov	QWORD[32+rdi],r12
	mov	QWORD[40+rdi],r13
	mov	QWORD[48+rdi],r14
	mov	QWORD[56+rdi],r15

	DB	0F3h,0C3h		;repret



ALIGN	32
__rsaz_512_mulx:

	mulx	r8,rbx,QWORD[rsi]
	mov	rcx,-6

	mulx	r9,rax,QWORD[8+rsi]
	mov	QWORD[8+rsp],rbx

	mulx	r10,rbx,QWORD[16+rsi]
	adc	r8,rax

	mulx	r11,rax,QWORD[24+rsi]
	adc	r9,rbx

	mulx	r12,rbx,QWORD[32+rsi]
	adc	r10,rax

	mulx	r13,rax,QWORD[40+rsi]
	adc	r11,rbx

	mulx	r14,rbx,QWORD[48+rsi]
	adc	r12,rax

	mulx	r15,rax,QWORD[56+rsi]
	mov	rdx,QWORD[8+rbp]
	adc	r13,rbx
	adc	r14,rax
	adc	r15,0

	xor	rdi,rdi
	jmp	NEAR $L$oop_mulx

ALIGN	32
$L$oop_mulx:
	mov	rbx,r8
	mulx	r8,rax,QWORD[rsi]
	adcx	rbx,rax
	adox	r8,r9

	mulx	r9,rax,QWORD[8+rsi]
	adcx	r8,rax
	adox	r9,r10

	mulx	r10,rax,QWORD[16+rsi]
	adcx	r9,rax
	adox	r10,r11

	mulx	r11,rax,QWORD[24+rsi]
	adcx	r10,rax
	adox	r11,r12

DB	0x3e,0xc4,0x62,0xfb,0xf6,0xa6,0x20,0x00,0x00,0x00
	adcx	r11,rax
	adox	r12,r13

	mulx	r13,rax,QWORD[40+rsi]
	adcx	r12,rax
	adox	r13,r14

	mulx	r14,rax,QWORD[48+rsi]
	adcx	r13,rax
	adox	r14,r15

	mulx	r15,rax,QWORD[56+rsi]
	mov	rdx,QWORD[64+rcx*8+rbp]
	mov	QWORD[((8+64-8))+rcx*8+rsp],rbx
	adcx	r14,rax
	adox	r15,rdi
	adcx	r15,rdi

	inc	rcx
	jnz	NEAR $L$oop_mulx

	mov	rbx,r8
	mulx	r8,rax,QWORD[rsi]
	adcx	rbx,rax
	adox	r8,r9

DB	0xc4,0x62,0xfb,0xf6,0x8e,0x08,0x00,0x00,0x00
	adcx	r8,rax
	adox	r9,r10

DB	0xc4,0x62,0xfb,0xf6,0x96,0x10,0x00,0x00,0x00
	adcx	r9,rax
	adox	r10,r11

	mulx	r11,rax,QWORD[24+rsi]
	adcx	r10,rax
	adox	r11,r12

	mulx	r12,rax,QWORD[32+rsi]
	adcx	r11,rax
	adox	r12,r13

	mulx	r13,rax,QWORD[40+rsi]
	adcx	r12,rax
	adox	r13,r14

DB	0xc4,0x62,0xfb,0xf6,0xb6,0x30,0x00,0x00,0x00
	adcx	r13,rax
	adox	r14,r15

DB	0xc4,0x62,0xfb,0xf6,0xbe,0x38,0x00,0x00,0x00
	adcx	r14,rax
	adox	r15,rdi
	adcx	r15,rdi

	mov	QWORD[((8+64-8))+rsp],rbx
	mov	QWORD[((8+64))+rsp],r8
	mov	QWORD[((8+64+8))+rsp],r9
	mov	QWORD[((8+64+16))+rsp],r10
	mov	QWORD[((8+64+24))+rsp],r11
	mov	QWORD[((8+64+32))+rsp],r12
	mov	QWORD[((8+64+40))+rsp],r13
	mov	QWORD[((8+64+48))+rsp],r14
	mov	QWORD[((8+64+56))+rsp],r15

	DB	0F3h,0C3h		;repret


global	rsaz_512_scatter4

ALIGN	16
rsaz_512_scatter4:

	lea	rcx,[r8*8+rcx]
	mov	r9d,8
	jmp	NEAR $L$oop_scatter
ALIGN	16
$L$oop_scatter:
	mov	rax,QWORD[rdx]
	lea	rdx,[8+rdx]
	mov	QWORD[rcx],rax
	lea	rcx,[128+rcx]
	dec	r9d
	jnz	NEAR $L$oop_scatter
	DB	0F3h,0C3h		;repret



global	rsaz_512_gather4

ALIGN	16
rsaz_512_gather4:

$L$SEH_begin_rsaz_512_gather4:
DB	0x48,0x81,0xec,0xa8,0x00,0x00,0x00
DB	0x0f,0x29,0x34,0x24
DB	0x0f,0x29,0x7c,0x24,0x10
DB	0x44,0x0f,0x29,0x44,0x24,0x20
DB	0x44,0x0f,0x29,0x4c,0x24,0x30
DB	0x44,0x0f,0x29,0x54,0x24,0x40
DB	0x44,0x0f,0x29,0x5c,0x24,0x50
DB	0x44,0x0f,0x29,0x64,0x24,0x60
DB	0x44,0x0f,0x29,0x6c,0x24,0x70
DB	0x44,0x0f,0x29,0xb4,0x24,0x80,0,0,0
DB	0x44,0x0f,0x29,0xbc,0x24,0x90,0,0,0
	movd	xmm8,r8d
	movdqa	xmm1,XMMWORD[(($L$inc+16))]
	movdqa	xmm0,XMMWORD[$L$inc]

	pshufd	xmm8,xmm8,0
	movdqa	xmm7,xmm1
	movdqa	xmm2,xmm1
	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm8
	movdqa	xmm3,xmm7
	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm8
	movdqa	xmm4,xmm7
	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm8
	movdqa	xmm5,xmm7
	paddd	xmm4,xmm3
	pcmpeqd	xmm3,xmm8
	movdqa	xmm6,xmm7
	paddd	xmm5,xmm4
	pcmpeqd	xmm4,xmm8
	paddd	xmm6,xmm5
	pcmpeqd	xmm5,xmm8
	paddd	xmm7,xmm6
	pcmpeqd	xmm6,xmm8
	pcmpeqd	xmm7,xmm8
	mov	r9d,8
	jmp	NEAR $L$oop_gather
ALIGN	16
$L$oop_gather:
	movdqa	xmm8,XMMWORD[rdx]
	movdqa	xmm9,XMMWORD[16+rdx]
	movdqa	xmm10,XMMWORD[32+rdx]
	movdqa	xmm11,XMMWORD[48+rdx]
	pand	xmm8,xmm0
	movdqa	xmm12,XMMWORD[64+rdx]
	pand	xmm9,xmm1
	movdqa	xmm13,XMMWORD[80+rdx]
	pand	xmm10,xmm2
	movdqa	xmm14,XMMWORD[96+rdx]
	pand	xmm11,xmm3
	movdqa	xmm15,XMMWORD[112+rdx]
	lea	rdx,[128+rdx]
	pand	xmm12,xmm4
	pand	xmm13,xmm5
	pand	xmm14,xmm6
	pand	xmm15,xmm7
	por	xmm8,xmm10
	por	xmm9,xmm11
	por	xmm8,xmm12
	por	xmm9,xmm13
	por	xmm8,xmm14
	por	xmm9,xmm15

	por	xmm8,xmm9
	pshufd	xmm9,xmm8,0x4e
	por	xmm8,xmm9
	movq	QWORD[rcx],xmm8
	lea	rcx,[8+rcx]
	dec	r9d
	jnz	NEAR $L$oop_gather
	movaps	xmm6,XMMWORD[rsp]
	movaps	xmm7,XMMWORD[16+rsp]
	movaps	xmm8,XMMWORD[32+rsp]
	movaps	xmm9,XMMWORD[48+rsp]
	movaps	xmm10,XMMWORD[64+rsp]
	movaps	xmm11,XMMWORD[80+rsp]
	movaps	xmm12,XMMWORD[96+rsp]
	movaps	xmm13,XMMWORD[112+rsp]
	movaps	xmm14,XMMWORD[128+rsp]
	movaps	xmm15,XMMWORD[144+rsp]
	add	rsp,0xa8
	DB	0F3h,0C3h		;repret
$L$SEH_end_rsaz_512_gather4:



ALIGN	64
$L$inc:
	DD	0,0,1,1
	DD	2,2,2,2
EXTERN	__imp_RtlVirtualUnwind

ALIGN	16
se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$common_seh_tail

	mov	rax,QWORD[152+r8]

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$common_seh_tail

	lea	rax,[((128+24+48))+rax]

	lea	rbx,[$L$mul_gather4_epilogue]
	cmp	rbx,r10
	jne	NEAR $L$se_not_in_mul_gather4

	lea	rax,[176+rax]

	lea	rsi,[((-48-168))+rax]
	lea	rdi,[512+r8]
	mov	ecx,20
	DD	0xa548f3fc

$L$se_not_in_mul_gather4:
	mov	rbx,QWORD[((-8))+rax]
	mov	rbp,QWORD[((-16))+rax]
	mov	r12,QWORD[((-24))+rax]
	mov	r13,QWORD[((-32))+rax]
	mov	r14,QWORD[((-40))+rax]
	mov	r15,QWORD[((-48))+rax]
	mov	QWORD[144+r8],rbx
	mov	QWORD[160+r8],rbp
	mov	QWORD[216+r8],r12
	mov	QWORD[224+r8],r13
	mov	QWORD[232+r8],r14
	mov	QWORD[240+r8],r15

$L$common_seh_tail:
	mov	rdi,QWORD[8+rax]
	mov	rsi,QWORD[16+rax]
	mov	QWORD[152+r8],rax
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi

	mov	rdi,QWORD[40+r9]
	mov	rsi,r8
	mov	ecx,154
	DD	0xa548f3fc

	mov	rsi,r9
	xor	rcx,rcx
	mov	rdx,QWORD[8+rsi]
	mov	r8,QWORD[rsi]
	mov	r9,QWORD[16+rsi]
	mov	r10,QWORD[40+rsi]
	lea	r11,[56+rsi]
	lea	r12,[24+rsi]
	mov	QWORD[32+rsp],r10
	mov	QWORD[40+rsp],r11
	mov	QWORD[48+rsp],r12
	mov	QWORD[56+rsp],rcx
	call	QWORD[__imp_RtlVirtualUnwind]

	mov	eax,1
	add	rsp,64
	popfq
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	pop	rbx
	pop	rdi
	pop	rsi
	DB	0F3h,0C3h		;repret


section	.pdata rdata align=4
ALIGN	4
	DD	$L$SEH_begin_rsaz_512_sqr wrt ..imagebase
	DD	$L$SEH_end_rsaz_512_sqr wrt ..imagebase
	DD	$L$SEH_info_rsaz_512_sqr wrt ..imagebase

	DD	$L$SEH_begin_rsaz_512_mul wrt ..imagebase
	DD	$L$SEH_end_rsaz_512_mul wrt ..imagebase
	DD	$L$SEH_info_rsaz_512_mul wrt ..imagebase

	DD	$L$SEH_begin_rsaz_512_mul_gather4 wrt ..imagebase
	DD	$L$SEH_end_rsaz_512_mul_gather4 wrt ..imagebase
	DD	$L$SEH_info_rsaz_512_mul_gather4 wrt ..imagebase

	DD	$L$SEH_begin_rsaz_512_mul_scatter4 wrt ..imagebase
	DD	$L$SEH_end_rsaz_512_mul_scatter4 wrt ..imagebase
	DD	$L$SEH_info_rsaz_512_mul_scatter4 wrt ..imagebase

	DD	$L$SEH_begin_rsaz_512_mul_by_one wrt ..imagebase
	DD	$L$SEH_end_rsaz_512_mul_by_one wrt ..imagebase
	DD	$L$SEH_info_rsaz_512_mul_by_one wrt ..imagebase

	DD	$L$SEH_begin_rsaz_512_gather4 wrt ..imagebase
	DD	$L$SEH_end_rsaz_512_gather4 wrt ..imagebase
	DD	$L$SEH_info_rsaz_512_gather4 wrt ..imagebase

section	.xdata rdata align=8
ALIGN	8
$L$SEH_info_rsaz_512_sqr:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$sqr_body wrt ..imagebase,$L$sqr_epilogue wrt ..imagebase
$L$SEH_info_rsaz_512_mul:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$mul_body wrt ..imagebase,$L$mul_epilogue wrt ..imagebase
$L$SEH_info_rsaz_512_mul_gather4:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$mul_gather4_body wrt ..imagebase,$L$mul_gather4_epilogue wrt ..imagebase
$L$SEH_info_rsaz_512_mul_scatter4:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$mul_scatter4_body wrt ..imagebase,$L$mul_scatter4_epilogue wrt ..imagebase
$L$SEH_info_rsaz_512_mul_by_one:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
	DD	$L$mul_by_one_body wrt ..imagebase,$L$mul_by_one_epilogue wrt ..imagebase
$L$SEH_info_rsaz_512_gather4:
DB	0x01,0x46,0x16,0x00
DB	0x46,0xf8,0x09,0x00
DB	0x3d,0xe8,0x08,0x00
DB	0x34,0xd8,0x07,0x00
DB	0x2e,0xc8,0x06,0x00
DB	0x28,0xb8,0x05,0x00
DB	0x22,0xa8,0x04,0x00
DB	0x1c,0x98,0x03,0x00
DB	0x16,0x88,0x02,0x00
DB	0x10,0x78,0x01,0x00
DB	0x0b,0x68,0x00,0x00
DB	0x07,0x01,0x15,0x00
                                                                                                                                                                                                                                                         node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/bn/x86_64-gf2m.asm                  0000664 0000000 0000000 00000014726 14746647661 0026720 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        default	rel
%define XMMWORD
%define YMMWORD
%define ZMMWORD
section	.text code align=64



ALIGN	16
_mul_1x1:

	sub	rsp,128+8

	mov	r9,-1
	lea	rsi,[rax*1+rax]
	shr	r9,3
	lea	rdi,[rax*4]
	and	r9,rax
	lea	r12,[rax*8]
	sar	rax,63
	lea	r10,[r9*1+r9]
	sar	rsi,63
	lea	r11,[r9*4]
	and	rax,rbp
	sar	rdi,63
	mov	rdx,rax
	shl	rax,63
	and	rsi,rbp
	shr	rdx,1
	mov	rcx,rsi
	shl	rsi,62
	and	rdi,rbp
	shr	rcx,2
	xor	rax,rsi
	mov	rbx,rdi
	shl	rdi,61
	xor	rdx,rcx
	shr	rbx,3
	xor	rax,rdi
	xor	rdx,rbx

	mov	r13,r9
	mov	QWORD[rsp],0
	xor	r13,r10
	mov	QWORD[8+rsp],r9
	mov	r14,r11
	mov	QWORD[16+rsp],r10
	xor	r14,r12
	mov	QWORD[24+rsp],r13

	xor	r9,r11
	mov	QWORD[32+rsp],r11
	xor	r10,r11
	mov	QWORD[40+rsp],r9
	xor	r13,r11
	mov	QWORD[48+rsp],r10
	xor	r9,r14
	mov	QWORD[56+rsp],r13
	xor	r10,r14

	mov	QWORD[64+rsp],r12
	xor	r13,r14
	mov	QWORD[72+rsp],r9
	xor	r9,r11
	mov	QWORD[80+rsp],r10
	xor	r10,r11
	mov	QWORD[88+rsp],r13

	xor	r13,r11
	mov	QWORD[96+rsp],r14
	mov	rsi,r8
	mov	QWORD[104+rsp],r9
	and	rsi,rbp
	mov	QWORD[112+rsp],r10
	shr	rbp,4
	mov	QWORD[120+rsp],r13
	mov	rdi,r8
	and	rdi,rbp
	shr	rbp,4

	movq	xmm0,QWORD[rsi*8+rsp]
	mov	rsi,r8
	and	rsi,rbp
	shr	rbp,4
	mov	rcx,QWORD[rdi*8+rsp]
	mov	rdi,r8
	mov	rbx,rcx
	shl	rcx,4
	and	rdi,rbp
	movq	xmm1,QWORD[rsi*8+rsp]
	shr	rbx,60
	xor	rax,rcx
	pslldq	xmm1,1
	mov	rsi,r8
	shr	rbp,4
	xor	rdx,rbx
	and	rsi,rbp
	shr	rbp,4
	pxor	xmm0,xmm1
	mov	rcx,QWORD[rdi*8+rsp]
	mov	rdi,r8
	mov	rbx,rcx
	shl	rcx,12
	and	rdi,rbp
	movq	xmm1,QWORD[rsi*8+rsp]
	shr	rbx,52
	xor	rax,rcx
	pslldq	xmm1,2
	mov	rsi,r8
	shr	rbp,4
	xor	rdx,rbx
	and	rsi,rbp
	shr	rbp,4
	pxor	xmm0,xmm1
	mov	rcx,QWORD[rdi*8+rsp]
	mov	rdi,r8
	mov	rbx,rcx
	shl	rcx,20
	and	rdi,rbp
	movq	xmm1,QWORD[rsi*8+rsp]
	shr	rbx,44
	xor	rax,rcx
	pslldq	xmm1,3
	mov	rsi,r8
	shr	rbp,4
	xor	rdx,rbx
	and	rsi,rbp
	shr	rbp,4
	pxor	xmm0,xmm1
	mov	rcx,QWORD[rdi*8+rsp]
	mov	rdi,r8
	mov	rbx,rcx
	shl	rcx,28
	and	rdi,rbp
	movq	xmm1,QWORD[rsi*8+rsp]
	shr	rbx,36
	xor	rax,rcx
	pslldq	xmm1,4
	mov	rsi,r8
	shr	rbp,4
	xor	rdx,rbx
	and	rsi,rbp
	shr	rbp,4
	pxor	xmm0,xmm1
	mov	rcx,QWORD[rdi*8+rsp]
	mov	rdi,r8
	mov	rbx,rcx
	shl	rcx,36
	and	rdi,rbp
	movq	xmm1,QWORD[rsi*8+rsp]
	shr	rbx,28
	xor	rax,rcx
	pslldq	xmm1,5
	mov	rsi,r8
	shr	rbp,4
	xor	rdx,rbx
	and	rsi,rbp
	shr	rbp,4
	pxor	xmm0,xmm1
	mov	rcx,QWORD[rdi*8+rsp]
	mov	rdi,r8
	mov	rbx,rcx
	shl	rcx,44
	and	rdi,rbp
	movq	xmm1,QWORD[rsi*8+rsp]
	shr	rbx,20
	xor	rax,rcx
	pslldq	xmm1,6
	mov	rsi,r8
	shr	rbp,4
	xor	rdx,rbx
	and	rsi,rbp
	shr	rbp,4
	pxor	xmm0,xmm1
	mov	rcx,QWORD[rdi*8+rsp]
	mov	rdi,r8
	mov	rbx,rcx
	shl	rcx,52
	and	rdi,rbp
	movq	xmm1,QWORD[rsi*8+rsp]
	shr	rbx,12
	xor	rax,rcx
	pslldq	xmm1,7
	mov	rsi,r8
	shr	rbp,4
	xor	rdx,rbx
	and	rsi,rbp
	shr	rbp,4
	pxor	xmm0,xmm1
	mov	rcx,QWORD[rdi*8+rsp]
	mov	rbx,rcx
	shl	rcx,60
DB	102,72,15,126,198
	shr	rbx,4
	xor	rax,rcx
	psrldq	xmm0,8
	xor	rdx,rbx
DB	102,72,15,126,199
	xor	rax,rsi
	xor	rdx,rdi

	add	rsp,128+8

	DB	0F3h,0C3h		;repret
$L$end_mul_1x1:


EXTERN	OPENSSL_ia32cap_P
global	bn_GF2m_mul_2x2

ALIGN	16
bn_GF2m_mul_2x2:

	mov	rax,rsp
	mov	r10,QWORD[OPENSSL_ia32cap_P]
	bt	r10,33
	jnc	NEAR $L$vanilla_mul_2x2

DB	102,72,15,110,194
DB	102,73,15,110,201
DB	102,73,15,110,208
	movq	xmm3,QWORD[40+rsp]
	movdqa	xmm4,xmm0
	movdqa	xmm5,xmm1
DB	102,15,58,68,193,0
	pxor	xmm4,xmm2
	pxor	xmm5,xmm3
DB	102,15,58,68,211,0
DB	102,15,58,68,229,0
	xorps	xmm4,xmm0
	xorps	xmm4,xmm2
	movdqa	xmm5,xmm4
	pslldq	xmm4,8
	psrldq	xmm5,8
	pxor	xmm2,xmm4
	pxor	xmm0,xmm5
	movdqu	XMMWORD[rcx],xmm2
	movdqu	XMMWORD[16+rcx],xmm0
	DB	0F3h,0C3h		;repret

ALIGN	16
$L$vanilla_mul_2x2:
	lea	rsp,[((-136))+rsp]

	mov	r10,QWORD[176+rsp]
	mov	QWORD[120+rsp],rdi
	mov	QWORD[128+rsp],rsi
	mov	QWORD[80+rsp],r14

	mov	QWORD[88+rsp],r13

	mov	QWORD[96+rsp],r12

	mov	QWORD[104+rsp],rbp

	mov	QWORD[112+rsp],rbx

$L$body_mul_2x2:
	mov	QWORD[32+rsp],rcx
	mov	QWORD[40+rsp],rdx
	mov	QWORD[48+rsp],r8
	mov	QWORD[56+rsp],r9
	mov	QWORD[64+rsp],r10

	mov	r8,0xf
	mov	rax,rdx
	mov	rbp,r9
	call	_mul_1x1
	mov	QWORD[16+rsp],rax
	mov	QWORD[24+rsp],rdx

	mov	rax,QWORD[48+rsp]
	mov	rbp,QWORD[64+rsp]
	call	_mul_1x1
	mov	QWORD[rsp],rax
	mov	QWORD[8+rsp],rdx

	mov	rax,QWORD[40+rsp]
	mov	rbp,QWORD[56+rsp]
	xor	rax,QWORD[48+rsp]
	xor	rbp,QWORD[64+rsp]
	call	_mul_1x1
	mov	rbx,QWORD[rsp]
	mov	rcx,QWORD[8+rsp]
	mov	rdi,QWORD[16+rsp]
	mov	rsi,QWORD[24+rsp]
	mov	rbp,QWORD[32+rsp]

	xor	rax,rdx
	xor	rdx,rcx
	xor	rax,rbx
	mov	QWORD[rbp],rbx
	xor	rdx,rdi
	mov	QWORD[24+rbp],rsi
	xor	rax,rsi
	xor	rdx,rsi
	xor	rax,rdx
	mov	QWORD[16+rbp],rdx
	mov	QWORD[8+rbp],rax

	mov	r14,QWORD[80+rsp]

	mov	r13,QWORD[88+rsp]

	mov	r12,QWORD[96+rsp]

	mov	rbp,QWORD[104+rsp]

	mov	rbx,QWORD[112+rsp]

	mov	rdi,QWORD[120+rsp]
	mov	rsi,QWORD[128+rsp]
	lea	rsp,[136+rsp]

$L$epilogue_mul_2x2:
	DB	0F3h,0C3h		;repret
$L$end_mul_2x2:


DB	71,70,40,50,94,109,41,32,77,117,108,116,105,112,108,105
DB	99,97,116,105,111,110,32,102,111,114,32,120,56,54,95,54
DB	52,44,32,67,82,89,80,84,79,71,65,77,83,32,98,121
DB	32,60,97,112,112,114,111,64,111,112,101,110,115,115,108,46
DB	111,114,103,62,0
ALIGN	16
EXTERN	__imp_RtlVirtualUnwind


ALIGN	16
se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	lea	r10,[$L$body_mul_2x2]
	cmp	rbx,r10
	jb	NEAR $L$in_prologue

	mov	rax,QWORD[152+r8]

	lea	r10,[$L$epilogue_mul_2x2]
	cmp	rbx,r10
	jae	NEAR $L$in_prologue

	mov	r14,QWORD[80+rax]
	mov	r13,QWORD[88+rax]
	mov	r12,QWORD[96+rax]
	mov	rbp,QWORD[104+rax]
	mov	rbx,QWORD[112+rax]
	mov	rdi,QWORD[120+rax]
	mov	rsi,QWORD[128+rax]

	mov	QWORD[144+r8],rbx
	mov	QWORD[160+r8],rbp
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi
	mov	QWORD[216+r8],r12
	mov	QWORD[224+r8],r13
	mov	QWORD[232+r8],r14

	lea	rax,[136+rax]

$L$in_prologue:
	mov	QWORD[152+r8],rax

	mov	rdi,QWORD[40+r9]
	mov	rsi,r8
	mov	ecx,154
	DD	0xa548f3fc

	mov	rsi,r9
	xor	rcx,rcx
	mov	rdx,QWORD[8+rsi]
	mov	r8,QWORD[rsi]
	mov	r9,QWORD[16+rsi]
	mov	r10,QWORD[40+rsi]
	lea	r11,[56+rsi]
	lea	r12,[24+rsi]
	mov	QWORD[32+rsp],r10
	mov	QWORD[40+rsp],r11
	mov	QWORD[48+rsp],r12
	mov	QWORD[56+rsp],rcx
	call	QWORD[__imp_RtlVirtualUnwind]

	mov	eax,1
	add	rsp,64
	popfq
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	pop	rbx
	pop	rdi
	pop	rsi
	DB	0F3h,0C3h		;repret


section	.pdata rdata align=4
ALIGN	4
	DD	_mul_1x1 wrt ..imagebase
	DD	$L$end_mul_1x1 wrt ..imagebase
	DD	$L$SEH_info_1x1 wrt ..imagebase

	DD	$L$vanilla_mul_2x2 wrt ..imagebase
	DD	$L$end_mul_2x2 wrt ..imagebase
	DD	$L$SEH_info_2x2 wrt ..imagebase
section	.xdata rdata align=8
ALIGN	8
$L$SEH_info_1x1:
DB	0x01,0x07,0x02,0x00
DB	0x07,0x01,0x11,0x00
$L$SEH_info_2x2:
DB	9,0,0,0
	DD	se_handler wrt ..imagebase
                                          node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/bn/x86_64-mont.asm                  0000664 0000000 0000000 00000054716 14746647661 0027045 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        default	rel
%define XMMWORD
%define YMMWORD
%define ZMMWORD
section	.text code align=64


EXTERN	OPENSSL_ia32cap_P

global	bn_mul_mont

ALIGN	16
bn_mul_mont:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_bn_mul_mont:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



	mov	r9d,r9d
	mov	rax,rsp

	test	r9d,3
	jnz	NEAR $L$mul_enter
	cmp	r9d,8
	jb	NEAR $L$mul_enter
	mov	r11d,DWORD[((OPENSSL_ia32cap_P+8))]
	cmp	rdx,rsi
	jne	NEAR $L$mul4x_enter
	test	r9d,7
	jz	NEAR $L$sqr8x_enter
	jmp	NEAR $L$mul4x_enter

ALIGN	16
$L$mul_enter:
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15


	neg	r9
	mov	r11,rsp
	lea	r10,[((-16))+r9*8+rsp]
	neg	r9
	and	r10,-1024









	sub	r11,r10
	and	r11,-4096
	lea	rsp,[r11*1+r10]
	mov	r11,QWORD[rsp]
	cmp	rsp,r10
	ja	NEAR $L$mul_page_walk
	jmp	NEAR $L$mul_page_walk_done

ALIGN	16
$L$mul_page_walk:
	lea	rsp,[((-4096))+rsp]
	mov	r11,QWORD[rsp]
	cmp	rsp,r10
	ja	NEAR $L$mul_page_walk
$L$mul_page_walk_done:

	mov	QWORD[8+r9*8+rsp],rax

$L$mul_body:
	mov	r12,rdx
	mov	r8,QWORD[r8]
	mov	rbx,QWORD[r12]
	mov	rax,QWORD[rsi]

	xor	r14,r14
	xor	r15,r15

	mov	rbp,r8
	mul	rbx
	mov	r10,rax
	mov	rax,QWORD[rcx]

	imul	rbp,r10
	mov	r11,rdx

	mul	rbp
	add	r10,rax
	mov	rax,QWORD[8+rsi]
	adc	rdx,0
	mov	r13,rdx

	lea	r15,[1+r15]
	jmp	NEAR $L$1st_enter

ALIGN	16
$L$1st:
	add	r13,rax
	mov	rax,QWORD[r15*8+rsi]
	adc	rdx,0
	add	r13,r11
	mov	r11,r10
	adc	rdx,0
	mov	QWORD[((-16))+r15*8+rsp],r13
	mov	r13,rdx

$L$1st_enter:
	mul	rbx
	add	r11,rax
	mov	rax,QWORD[r15*8+rcx]
	adc	rdx,0
	lea	r15,[1+r15]
	mov	r10,rdx

	mul	rbp
	cmp	r15,r9
	jne	NEAR $L$1st

	add	r13,rax
	mov	rax,QWORD[rsi]
	adc	rdx,0
	add	r13,r11
	adc	rdx,0
	mov	QWORD[((-16))+r15*8+rsp],r13
	mov	r13,rdx
	mov	r11,r10

	xor	rdx,rdx
	add	r13,r11
	adc	rdx,0
	mov	QWORD[((-8))+r9*8+rsp],r13
	mov	QWORD[r9*8+rsp],rdx

	lea	r14,[1+r14]
	jmp	NEAR $L$outer
ALIGN	16
$L$outer:
	mov	rbx,QWORD[r14*8+r12]
	xor	r15,r15
	mov	rbp,r8
	mov	r10,QWORD[rsp]
	mul	rbx
	add	r10,rax
	mov	rax,QWORD[rcx]
	adc	rdx,0

	imul	rbp,r10
	mov	r11,rdx

	mul	rbp
	add	r10,rax
	mov	rax,QWORD[8+rsi]
	adc	rdx,0
	mov	r10,QWORD[8+rsp]
	mov	r13,rdx

	lea	r15,[1+r15]
	jmp	NEAR $L$inner_enter

ALIGN	16
$L$inner:
	add	r13,rax
	mov	rax,QWORD[r15*8+rsi]
	adc	rdx,0
	add	r13,r10
	mov	r10,QWORD[r15*8+rsp]
	adc	rdx,0
	mov	QWORD[((-16))+r15*8+rsp],r13
	mov	r13,rdx

$L$inner_enter:
	mul	rbx
	add	r11,rax
	mov	rax,QWORD[r15*8+rcx]
	adc	rdx,0
	add	r10,r11
	mov	r11,rdx
	adc	r11,0
	lea	r15,[1+r15]

	mul	rbp
	cmp	r15,r9
	jne	NEAR $L$inner

	add	r13,rax
	mov	rax,QWORD[rsi]
	adc	rdx,0
	add	r13,r10
	mov	r10,QWORD[r15*8+rsp]
	adc	rdx,0
	mov	QWORD[((-16))+r15*8+rsp],r13
	mov	r13,rdx

	xor	rdx,rdx
	add	r13,r11
	adc	rdx,0
	add	r13,r10
	adc	rdx,0
	mov	QWORD[((-8))+r9*8+rsp],r13
	mov	QWORD[r9*8+rsp],rdx

	lea	r14,[1+r14]
	cmp	r14,r9
	jb	NEAR $L$outer

	xor	r14,r14
	mov	rax,QWORD[rsp]
	mov	r15,r9

ALIGN	16
$L$sub:	sbb	rax,QWORD[r14*8+rcx]
	mov	QWORD[r14*8+rdi],rax
	mov	rax,QWORD[8+r14*8+rsp]
	lea	r14,[1+r14]
	dec	r15
	jnz	NEAR $L$sub

	sbb	rax,0
	mov	rbx,-1
	xor	rbx,rax
	xor	r14,r14
	mov	r15,r9

$L$copy:
	mov	rcx,QWORD[r14*8+rdi]
	mov	rdx,QWORD[r14*8+rsp]
	and	rcx,rbx
	and	rdx,rax
	mov	QWORD[r14*8+rsp],r9
	or	rdx,rcx
	mov	QWORD[r14*8+rdi],rdx
	lea	r14,[1+r14]
	sub	r15,1
	jnz	NEAR $L$copy

	mov	rsi,QWORD[8+r9*8+rsp]

	mov	rax,1
	mov	r15,QWORD[((-48))+rsi]

	mov	r14,QWORD[((-40))+rsi]

	mov	r13,QWORD[((-32))+rsi]

	mov	r12,QWORD[((-24))+rsi]

	mov	rbp,QWORD[((-16))+rsi]

	mov	rbx,QWORD[((-8))+rsi]

	lea	rsp,[rsi]

$L$mul_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_bn_mul_mont:

ALIGN	16
bn_mul4x_mont:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_bn_mul4x_mont:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



	mov	r9d,r9d
	mov	rax,rsp

$L$mul4x_enter:
	and	r11d,0x80100
	cmp	r11d,0x80100
	je	NEAR $L$mulx4x_enter
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15


	neg	r9
	mov	r11,rsp
	lea	r10,[((-32))+r9*8+rsp]
	neg	r9
	and	r10,-1024

	sub	r11,r10
	and	r11,-4096
	lea	rsp,[r11*1+r10]
	mov	r11,QWORD[rsp]
	cmp	rsp,r10
	ja	NEAR $L$mul4x_page_walk
	jmp	NEAR $L$mul4x_page_walk_done

$L$mul4x_page_walk:
	lea	rsp,[((-4096))+rsp]
	mov	r11,QWORD[rsp]
	cmp	rsp,r10
	ja	NEAR $L$mul4x_page_walk
$L$mul4x_page_walk_done:

	mov	QWORD[8+r9*8+rsp],rax

$L$mul4x_body:
	mov	QWORD[16+r9*8+rsp],rdi
	mov	r12,rdx
	mov	r8,QWORD[r8]
	mov	rbx,QWORD[r12]
	mov	rax,QWORD[rsi]

	xor	r14,r14
	xor	r15,r15

	mov	rbp,r8
	mul	rbx
	mov	r10,rax
	mov	rax,QWORD[rcx]

	imul	rbp,r10
	mov	r11,rdx

	mul	rbp
	add	r10,rax
	mov	rax,QWORD[8+rsi]
	adc	rdx,0
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[8+rcx]
	adc	rdx,0
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[16+rsi]
	adc	rdx,0
	add	rdi,r11
	lea	r15,[4+r15]
	adc	rdx,0
	mov	QWORD[rsp],rdi
	mov	r13,rdx
	jmp	NEAR $L$1st4x
ALIGN	16
$L$1st4x:
	mul	rbx
	add	r10,rax
	mov	rax,QWORD[((-16))+r15*8+rcx]
	adc	rdx,0
	mov	r11,rdx

	mul	rbp
	add	r13,rax
	mov	rax,QWORD[((-8))+r15*8+rsi]
	adc	rdx,0
	add	r13,r10
	adc	rdx,0
	mov	QWORD[((-24))+r15*8+rsp],r13
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[((-8))+r15*8+rcx]
	adc	rdx,0
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[r15*8+rsi]
	adc	rdx,0
	add	rdi,r11
	adc	rdx,0
	mov	QWORD[((-16))+r15*8+rsp],rdi
	mov	r13,rdx

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[r15*8+rcx]
	adc	rdx,0
	mov	r11,rdx

	mul	rbp
	add	r13,rax
	mov	rax,QWORD[8+r15*8+rsi]
	adc	rdx,0
	add	r13,r10
	adc	rdx,0
	mov	QWORD[((-8))+r15*8+rsp],r13
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[8+r15*8+rcx]
	adc	rdx,0
	lea	r15,[4+r15]
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[((-16))+r15*8+rsi]
	adc	rdx,0
	add	rdi,r11
	adc	rdx,0
	mov	QWORD[((-32))+r15*8+rsp],rdi
	mov	r13,rdx
	cmp	r15,r9
	jb	NEAR $L$1st4x

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[((-16))+r15*8+rcx]
	adc	rdx,0
	mov	r11,rdx

	mul	rbp
	add	r13,rax
	mov	rax,QWORD[((-8))+r15*8+rsi]
	adc	rdx,0
	add	r13,r10
	adc	rdx,0
	mov	QWORD[((-24))+r15*8+rsp],r13
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[((-8))+r15*8+rcx]
	adc	rdx,0
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[rsi]
	adc	rdx,0
	add	rdi,r11
	adc	rdx,0
	mov	QWORD[((-16))+r15*8+rsp],rdi
	mov	r13,rdx

	xor	rdi,rdi
	add	r13,r10
	adc	rdi,0
	mov	QWORD[((-8))+r15*8+rsp],r13
	mov	QWORD[r15*8+rsp],rdi

	lea	r14,[1+r14]
ALIGN	4
$L$outer4x:
	mov	rbx,QWORD[r14*8+r12]
	xor	r15,r15
	mov	r10,QWORD[rsp]
	mov	rbp,r8
	mul	rbx
	add	r10,rax
	mov	rax,QWORD[rcx]
	adc	rdx,0

	imul	rbp,r10
	mov	r11,rdx

	mul	rbp
	add	r10,rax
	mov	rax,QWORD[8+rsi]
	adc	rdx,0
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[8+rcx]
	adc	rdx,0
	add	r11,QWORD[8+rsp]
	adc	rdx,0
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[16+rsi]
	adc	rdx,0
	add	rdi,r11
	lea	r15,[4+r15]
	adc	rdx,0
	mov	QWORD[rsp],rdi
	mov	r13,rdx
	jmp	NEAR $L$inner4x
ALIGN	16
$L$inner4x:
	mul	rbx
	add	r10,rax
	mov	rax,QWORD[((-16))+r15*8+rcx]
	adc	rdx,0
	add	r10,QWORD[((-16))+r15*8+rsp]
	adc	rdx,0
	mov	r11,rdx

	mul	rbp
	add	r13,rax
	mov	rax,QWORD[((-8))+r15*8+rsi]
	adc	rdx,0
	add	r13,r10
	adc	rdx,0
	mov	QWORD[((-24))+r15*8+rsp],r13
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[((-8))+r15*8+rcx]
	adc	rdx,0
	add	r11,QWORD[((-8))+r15*8+rsp]
	adc	rdx,0
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[r15*8+rsi]
	adc	rdx,0
	add	rdi,r11
	adc	rdx,0
	mov	QWORD[((-16))+r15*8+rsp],rdi
	mov	r13,rdx

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[r15*8+rcx]
	adc	rdx,0
	add	r10,QWORD[r15*8+rsp]
	adc	rdx,0
	mov	r11,rdx

	mul	rbp
	add	r13,rax
	mov	rax,QWORD[8+r15*8+rsi]
	adc	rdx,0
	add	r13,r10
	adc	rdx,0
	mov	QWORD[((-8))+r15*8+rsp],r13
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[8+r15*8+rcx]
	adc	rdx,0
	add	r11,QWORD[8+r15*8+rsp]
	adc	rdx,0
	lea	r15,[4+r15]
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[((-16))+r15*8+rsi]
	adc	rdx,0
	add	rdi,r11
	adc	rdx,0
	mov	QWORD[((-32))+r15*8+rsp],rdi
	mov	r13,rdx
	cmp	r15,r9
	jb	NEAR $L$inner4x

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[((-16))+r15*8+rcx]
	adc	rdx,0
	add	r10,QWORD[((-16))+r15*8+rsp]
	adc	rdx,0
	mov	r11,rdx

	mul	rbp
	add	r13,rax
	mov	rax,QWORD[((-8))+r15*8+rsi]
	adc	rdx,0
	add	r13,r10
	adc	rdx,0
	mov	QWORD[((-24))+r15*8+rsp],r13
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[((-8))+r15*8+rcx]
	adc	rdx,0
	add	r11,QWORD[((-8))+r15*8+rsp]
	adc	rdx,0
	lea	r14,[1+r14]
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[rsi]
	adc	rdx,0
	add	rdi,r11
	adc	rdx,0
	mov	QWORD[((-16))+r15*8+rsp],rdi
	mov	r13,rdx

	xor	rdi,rdi
	add	r13,r10
	adc	rdi,0
	add	r13,QWORD[r9*8+rsp]
	adc	rdi,0
	mov	QWORD[((-8))+r15*8+rsp],r13
	mov	QWORD[r15*8+rsp],rdi

	cmp	r14,r9
	jb	NEAR $L$outer4x
	mov	rdi,QWORD[16+r9*8+rsp]
	lea	r15,[((-4))+r9]
	mov	rax,QWORD[rsp]
	mov	rdx,QWORD[8+rsp]
	shr	r15,2
	lea	rsi,[rsp]
	xor	r14,r14

	sub	rax,QWORD[rcx]
	mov	rbx,QWORD[16+rsi]
	mov	rbp,QWORD[24+rsi]
	sbb	rdx,QWORD[8+rcx]

$L$sub4x:
	mov	QWORD[r14*8+rdi],rax
	mov	QWORD[8+r14*8+rdi],rdx
	sbb	rbx,QWORD[16+r14*8+rcx]
	mov	rax,QWORD[32+r14*8+rsi]
	mov	rdx,QWORD[40+r14*8+rsi]
	sbb	rbp,QWORD[24+r14*8+rcx]
	mov	QWORD[16+r14*8+rdi],rbx
	mov	QWORD[24+r14*8+rdi],rbp
	sbb	rax,QWORD[32+r14*8+rcx]
	mov	rbx,QWORD[48+r14*8+rsi]
	mov	rbp,QWORD[56+r14*8+rsi]
	sbb	rdx,QWORD[40+r14*8+rcx]
	lea	r14,[4+r14]
	dec	r15
	jnz	NEAR $L$sub4x

	mov	QWORD[r14*8+rdi],rax
	mov	rax,QWORD[32+r14*8+rsi]
	sbb	rbx,QWORD[16+r14*8+rcx]
	mov	QWORD[8+r14*8+rdi],rdx
	sbb	rbp,QWORD[24+r14*8+rcx]
	mov	QWORD[16+r14*8+rdi],rbx

	sbb	rax,0
	mov	QWORD[24+r14*8+rdi],rbp
	pxor	xmm0,xmm0
DB	102,72,15,110,224
	pcmpeqd	xmm5,xmm5
	pshufd	xmm4,xmm4,0
	mov	r15,r9
	pxor	xmm5,xmm4
	shr	r15,2
	xor	eax,eax

	jmp	NEAR $L$copy4x
ALIGN	16
$L$copy4x:
	movdqa	xmm1,XMMWORD[rax*1+rsp]
	movdqu	xmm2,XMMWORD[rax*1+rdi]
	pand	xmm1,xmm4
	pand	xmm2,xmm5
	movdqa	xmm3,XMMWORD[16+rax*1+rsp]
	movdqa	XMMWORD[rax*1+rsp],xmm0
	por	xmm1,xmm2
	movdqu	xmm2,XMMWORD[16+rax*1+rdi]
	movdqu	XMMWORD[rax*1+rdi],xmm1
	pand	xmm3,xmm4
	pand	xmm2,xmm5
	movdqa	XMMWORD[16+rax*1+rsp],xmm0
	por	xmm3,xmm2
	movdqu	XMMWORD[16+rax*1+rdi],xmm3
	lea	rax,[32+rax]
	dec	r15
	jnz	NEAR $L$copy4x
	mov	rsi,QWORD[8+r9*8+rsp]

	mov	rax,1
	mov	r15,QWORD[((-48))+rsi]

	mov	r14,QWORD[((-40))+rsi]

	mov	r13,QWORD[((-32))+rsi]

	mov	r12,QWORD[((-24))+rsi]

	mov	rbp,QWORD[((-16))+rsi]

	mov	rbx,QWORD[((-8))+rsi]

	lea	rsp,[rsi]

$L$mul4x_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_bn_mul4x_mont:
EXTERN	bn_sqrx8x_internal
EXTERN	bn_sqr8x_internal


ALIGN	32
bn_sqr8x_mont:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_bn_sqr8x_mont:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



	mov	rax,rsp

$L$sqr8x_enter:
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

$L$sqr8x_prologue:

	mov	r10d,r9d
	shl	r9d,3
	shl	r10,3+2
	neg	r9






	lea	r11,[((-64))+r9*2+rsp]
	mov	rbp,rsp
	mov	r8,QWORD[r8]
	sub	r11,rsi
	and	r11,4095
	cmp	r10,r11
	jb	NEAR $L$sqr8x_sp_alt
	sub	rbp,r11
	lea	rbp,[((-64))+r9*2+rbp]
	jmp	NEAR $L$sqr8x_sp_done

ALIGN	32
$L$sqr8x_sp_alt:
	lea	r10,[((4096-64))+r9*2]
	lea	rbp,[((-64))+r9*2+rbp]
	sub	r11,r10
	mov	r10,0
	cmovc	r11,r10
	sub	rbp,r11
$L$sqr8x_sp_done:
	and	rbp,-64
	mov	r11,rsp
	sub	r11,rbp
	and	r11,-4096
	lea	rsp,[rbp*1+r11]
	mov	r10,QWORD[rsp]
	cmp	rsp,rbp
	ja	NEAR $L$sqr8x_page_walk
	jmp	NEAR $L$sqr8x_page_walk_done

ALIGN	16
$L$sqr8x_page_walk:
	lea	rsp,[((-4096))+rsp]
	mov	r10,QWORD[rsp]
	cmp	rsp,rbp
	ja	NEAR $L$sqr8x_page_walk
$L$sqr8x_page_walk_done:

	mov	r10,r9
	neg	r9

	mov	QWORD[32+rsp],r8
	mov	QWORD[40+rsp],rax

$L$sqr8x_body:

DB	102,72,15,110,209
	pxor	xmm0,xmm0
DB	102,72,15,110,207
DB	102,73,15,110,218
	mov	eax,DWORD[((OPENSSL_ia32cap_P+8))]
	and	eax,0x80100
	cmp	eax,0x80100
	jne	NEAR $L$sqr8x_nox

	call	bn_sqrx8x_internal




	lea	rbx,[rcx*1+r8]
	mov	r9,rcx
	mov	rdx,rcx
DB	102,72,15,126,207
	sar	rcx,3+2
	jmp	NEAR $L$sqr8x_sub

ALIGN	32
$L$sqr8x_nox:
	call	bn_sqr8x_internal




	lea	rbx,[r9*1+rdi]
	mov	rcx,r9
	mov	rdx,r9
DB	102,72,15,126,207
	sar	rcx,3+2
	jmp	NEAR $L$sqr8x_sub

ALIGN	32
$L$sqr8x_sub:
	mov	r12,QWORD[rbx]
	mov	r13,QWORD[8+rbx]
	mov	r14,QWORD[16+rbx]
	mov	r15,QWORD[24+rbx]
	lea	rbx,[32+rbx]
	sbb	r12,QWORD[rbp]
	sbb	r13,QWORD[8+rbp]
	sbb	r14,QWORD[16+rbp]
	sbb	r15,QWORD[24+rbp]
	lea	rbp,[32+rbp]
	mov	QWORD[rdi],r12
	mov	QWORD[8+rdi],r13
	mov	QWORD[16+rdi],r14
	mov	QWORD[24+rdi],r15
	lea	rdi,[32+rdi]
	inc	rcx
	jnz	NEAR $L$sqr8x_sub

	sbb	rax,0
	lea	rbx,[r9*1+rbx]
	lea	rdi,[r9*1+rdi]

DB	102,72,15,110,200
	pxor	xmm0,xmm0
	pshufd	xmm1,xmm1,0
	mov	rsi,QWORD[40+rsp]

	jmp	NEAR $L$sqr8x_cond_copy

ALIGN	32
$L$sqr8x_cond_copy:
	movdqa	xmm2,XMMWORD[rbx]
	movdqa	xmm3,XMMWORD[16+rbx]
	lea	rbx,[32+rbx]
	movdqu	xmm4,XMMWORD[rdi]
	movdqu	xmm5,XMMWORD[16+rdi]
	lea	rdi,[32+rdi]
	movdqa	XMMWORD[(-32)+rbx],xmm0
	movdqa	XMMWORD[(-16)+rbx],xmm0
	movdqa	XMMWORD[(-32)+rdx*1+rbx],xmm0
	movdqa	XMMWORD[(-16)+rdx*1+rbx],xmm0
	pcmpeqd	xmm0,xmm1
	pand	xmm2,xmm1
	pand	xmm3,xmm1
	pand	xmm4,xmm0
	pand	xmm5,xmm0
	pxor	xmm0,xmm0
	por	xmm4,xmm2
	por	xmm5,xmm3
	movdqu	XMMWORD[(-32)+rdi],xmm4
	movdqu	XMMWORD[(-16)+rdi],xmm5
	add	r9,32
	jnz	NEAR $L$sqr8x_cond_copy

	mov	rax,1
	mov	r15,QWORD[((-48))+rsi]

	mov	r14,QWORD[((-40))+rsi]

	mov	r13,QWORD[((-32))+rsi]

	mov	r12,QWORD[((-24))+rsi]

	mov	rbp,QWORD[((-16))+rsi]

	mov	rbx,QWORD[((-8))+rsi]

	lea	rsp,[rsi]

$L$sqr8x_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_bn_sqr8x_mont:

ALIGN	32
bn_mulx4x_mont:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_bn_mulx4x_mont:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



	mov	rax,rsp

$L$mulx4x_enter:
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

$L$mulx4x_prologue:

	shl	r9d,3
	xor	r10,r10
	sub	r10,r9
	mov	r8,QWORD[r8]
	lea	rbp,[((-72))+r10*1+rsp]
	and	rbp,-128
	mov	r11,rsp
	sub	r11,rbp
	and	r11,-4096
	lea	rsp,[rbp*1+r11]
	mov	r10,QWORD[rsp]
	cmp	rsp,rbp
	ja	NEAR $L$mulx4x_page_walk
	jmp	NEAR $L$mulx4x_page_walk_done

ALIGN	16
$L$mulx4x_page_walk:
	lea	rsp,[((-4096))+rsp]
	mov	r10,QWORD[rsp]
	cmp	rsp,rbp
	ja	NEAR $L$mulx4x_page_walk
$L$mulx4x_page_walk_done:

	lea	r10,[r9*1+rdx]












	mov	QWORD[rsp],r9
	shr	r9,5
	mov	QWORD[16+rsp],r10
	sub	r9,1
	mov	QWORD[24+rsp],r8
	mov	QWORD[32+rsp],rdi
	mov	QWORD[40+rsp],rax

	mov	QWORD[48+rsp],r9
	jmp	NEAR $L$mulx4x_body

ALIGN	32
$L$mulx4x_body:
	lea	rdi,[8+rdx]
	mov	rdx,QWORD[rdx]
	lea	rbx,[((64+32))+rsp]
	mov	r9,rdx

	mulx	rax,r8,QWORD[rsi]
	mulx	r14,r11,QWORD[8+rsi]
	add	r11,rax
	mov	QWORD[8+rsp],rdi
	mulx	r13,r12,QWORD[16+rsi]
	adc	r12,r14
	adc	r13,0

	mov	rdi,r8
	imul	r8,QWORD[24+rsp]
	xor	rbp,rbp

	mulx	r14,rax,QWORD[24+rsi]
	mov	rdx,r8
	lea	rsi,[32+rsi]
	adcx	r13,rax
	adcx	r14,rbp

	mulx	r10,rax,QWORD[rcx]
	adcx	rdi,rax
	adox	r10,r11
	mulx	r11,rax,QWORD[8+rcx]
	adcx	r10,rax
	adox	r11,r12
DB	0xc4,0x62,0xfb,0xf6,0xa1,0x10,0x00,0x00,0x00
	mov	rdi,QWORD[48+rsp]
	mov	QWORD[((-32))+rbx],r10
	adcx	r11,rax
	adox	r12,r13
	mulx	r15,rax,QWORD[24+rcx]
	mov	rdx,r9
	mov	QWORD[((-24))+rbx],r11
	adcx	r12,rax
	adox	r15,rbp
	lea	rcx,[32+rcx]
	mov	QWORD[((-16))+rbx],r12

	jmp	NEAR $L$mulx4x_1st

ALIGN	32
$L$mulx4x_1st:
	adcx	r15,rbp
	mulx	rax,r10,QWORD[rsi]
	adcx	r10,r14
	mulx	r14,r11,QWORD[8+rsi]
	adcx	r11,rax
	mulx	rax,r12,QWORD[16+rsi]
	adcx	r12,r14
	mulx	r14,r13,QWORD[24+rsi]
DB	0x67,0x67
	mov	rdx,r8
	adcx	r13,rax
	adcx	r14,rbp
	lea	rsi,[32+rsi]
	lea	rbx,[32+rbx]

	adox	r10,r15
	mulx	r15,rax,QWORD[rcx]
	adcx	r10,rax
	adox	r11,r15
	mulx	r15,rax,QWORD[8+rcx]
	adcx	r11,rax
	adox	r12,r15
	mulx	r15,rax,QWORD[16+rcx]
	mov	QWORD[((-40))+rbx],r10
	adcx	r12,rax
	mov	QWORD[((-32))+rbx],r11
	adox	r13,r15
	mulx	r15,rax,QWORD[24+rcx]
	mov	rdx,r9
	mov	QWORD[((-24))+rbx],r12
	adcx	r13,rax
	adox	r15,rbp
	lea	rcx,[32+rcx]
	mov	QWORD[((-16))+rbx],r13

	dec	rdi
	jnz	NEAR $L$mulx4x_1st

	mov	rax,QWORD[rsp]
	mov	rdi,QWORD[8+rsp]
	adc	r15,rbp
	add	r14,r15
	sbb	r15,r15
	mov	QWORD[((-8))+rbx],r14
	jmp	NEAR $L$mulx4x_outer

ALIGN	32
$L$mulx4x_outer:
	mov	rdx,QWORD[rdi]
	lea	rdi,[8+rdi]
	sub	rsi,rax
	mov	QWORD[rbx],r15
	lea	rbx,[((64+32))+rsp]
	sub	rcx,rax

	mulx	r11,r8,QWORD[rsi]
	xor	ebp,ebp
	mov	r9,rdx
	mulx	r12,r14,QWORD[8+rsi]
	adox	r8,QWORD[((-32))+rbx]
	adcx	r11,r14
	mulx	r13,r15,QWORD[16+rsi]
	adox	r11,QWORD[((-24))+rbx]
	adcx	r12,r15
	adox	r12,QWORD[((-16))+rbx]
	adcx	r13,rbp
	adox	r13,rbp

	mov	QWORD[8+rsp],rdi
	mov	r15,r8
	imul	r8,QWORD[24+rsp]
	xor	ebp,ebp

	mulx	r14,rax,QWORD[24+rsi]
	mov	rdx,r8
	adcx	r13,rax
	adox	r13,QWORD[((-8))+rbx]
	adcx	r14,rbp
	lea	rsi,[32+rsi]
	adox	r14,rbp

	mulx	r10,rax,QWORD[rcx]
	adcx	r15,rax
	adox	r10,r11
	mulx	r11,rax,QWORD[8+rcx]
	adcx	r10,rax
	adox	r11,r12
	mulx	r12,rax,QWORD[16+rcx]
	mov	QWORD[((-32))+rbx],r10
	adcx	r11,rax
	adox	r12,r13
	mulx	r15,rax,QWORD[24+rcx]
	mov	rdx,r9
	mov	QWORD[((-24))+rbx],r11
	lea	rcx,[32+rcx]
	adcx	r12,rax
	adox	r15,rbp
	mov	rdi,QWORD[48+rsp]
	mov	QWORD[((-16))+rbx],r12

	jmp	NEAR $L$mulx4x_inner

ALIGN	32
$L$mulx4x_inner:
	mulx	rax,r10,QWORD[rsi]
	adcx	r15,rbp
	adox	r10,r14
	mulx	r14,r11,QWORD[8+rsi]
	adcx	r10,QWORD[rbx]
	adox	r11,rax
	mulx	rax,r12,QWORD[16+rsi]
	adcx	r11,QWORD[8+rbx]
	adox	r12,r14
	mulx	r14,r13,QWORD[24+rsi]
	mov	rdx,r8
	adcx	r12,QWORD[16+rbx]
	adox	r13,rax
	adcx	r13,QWORD[24+rbx]
	adox	r14,rbp
	lea	rsi,[32+rsi]
	lea	rbx,[32+rbx]
	adcx	r14,rbp

	adox	r10,r15
	mulx	r15,rax,QWORD[rcx]
	adcx	r10,rax
	adox	r11,r15
	mulx	r15,rax,QWORD[8+rcx]
	adcx	r11,rax
	adox	r12,r15
	mulx	r15,rax,QWORD[16+rcx]
	mov	QWORD[((-40))+rbx],r10
	adcx	r12,rax
	adox	r13,r15
	mulx	r15,rax,QWORD[24+rcx]
	mov	rdx,r9
	mov	QWORD[((-32))+rbx],r11
	mov	QWORD[((-24))+rbx],r12
	adcx	r13,rax
	adox	r15,rbp
	lea	rcx,[32+rcx]
	mov	QWORD[((-16))+rbx],r13

	dec	rdi
	jnz	NEAR $L$mulx4x_inner

	mov	rax,QWORD[rsp]
	mov	rdi,QWORD[8+rsp]
	adc	r15,rbp
	sub	rbp,QWORD[rbx]
	adc	r14,r15
	sbb	r15,r15
	mov	QWORD[((-8))+rbx],r14

	cmp	rdi,QWORD[16+rsp]
	jne	NEAR $L$mulx4x_outer

	lea	rbx,[64+rsp]
	sub	rcx,rax
	neg	r15
	mov	rdx,rax
	shr	rax,3+2
	mov	rdi,QWORD[32+rsp]
	jmp	NEAR $L$mulx4x_sub

ALIGN	32
$L$mulx4x_sub:
	mov	r11,QWORD[rbx]
	mov	r12,QWORD[8+rbx]
	mov	r13,QWORD[16+rbx]
	mov	r14,QWORD[24+rbx]
	lea	rbx,[32+rbx]
	sbb	r11,QWORD[rcx]
	sbb	r12,QWORD[8+rcx]
	sbb	r13,QWORD[16+rcx]
	sbb	r14,QWORD[24+rcx]
	lea	rcx,[32+rcx]
	mov	QWORD[rdi],r11
	mov	QWORD[8+rdi],r12
	mov	QWORD[16+rdi],r13
	mov	QWORD[24+rdi],r14
	lea	rdi,[32+rdi]
	dec	rax
	jnz	NEAR $L$mulx4x_sub

	sbb	r15,0
	lea	rbx,[64+rsp]
	sub	rdi,rdx

DB	102,73,15,110,207
	pxor	xmm0,xmm0
	pshufd	xmm1,xmm1,0
	mov	rsi,QWORD[40+rsp]

	jmp	NEAR $L$mulx4x_cond_copy

ALIGN	32
$L$mulx4x_cond_copy:
	movdqa	xmm2,XMMWORD[rbx]
	movdqa	xmm3,XMMWORD[16+rbx]
	lea	rbx,[32+rbx]
	movdqu	xmm4,XMMWORD[rdi]
	movdqu	xmm5,XMMWORD[16+rdi]
	lea	rdi,[32+rdi]
	movdqa	XMMWORD[(-32)+rbx],xmm0
	movdqa	XMMWORD[(-16)+rbx],xmm0
	pcmpeqd	xmm0,xmm1
	pand	xmm2,xmm1
	pand	xmm3,xmm1
	pand	xmm4,xmm0
	pand	xmm5,xmm0
	pxor	xmm0,xmm0
	por	xmm4,xmm2
	por	xmm5,xmm3
	movdqu	XMMWORD[(-32)+rdi],xmm4
	movdqu	XMMWORD[(-16)+rdi],xmm5
	sub	rdx,32
	jnz	NEAR $L$mulx4x_cond_copy

	mov	QWORD[rbx],rdx

	mov	rax,1
	mov	r15,QWORD[((-48))+rsi]

	mov	r14,QWORD[((-40))+rsi]

	mov	r13,QWORD[((-32))+rsi]

	mov	r12,QWORD[((-24))+rsi]

	mov	rbp,QWORD[((-16))+rsi]

	mov	rbx,QWORD[((-8))+rsi]

	lea	rsp,[rsi]

$L$mulx4x_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_bn_mulx4x_mont:
DB	77,111,110,116,103,111,109,101,114,121,32,77,117,108,116,105
DB	112,108,105,99,97,116,105,111,110,32,102,111,114,32,120,56
DB	54,95,54,52,44,32,67,82,89,80,84,79,71,65,77,83
DB	32,98,121,32,60,97,112,112,114,111,64,111,112,101,110,115
DB	115,108,46,111,114,103,62,0
ALIGN	16
EXTERN	__imp_RtlVirtualUnwind

ALIGN	16
mul_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$common_seh_tail

	mov	rax,QWORD[152+r8]

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$common_seh_tail

	mov	r10,QWORD[192+r8]
	mov	rax,QWORD[8+r10*8+rax]

	jmp	NEAR $L$common_pop_regs



ALIGN	16
sqr_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$common_seh_tail

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$common_pop_regs

	mov	rax,QWORD[152+r8]

	mov	r10d,DWORD[8+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$common_seh_tail

	mov	rax,QWORD[40+rax]

$L$common_pop_regs:
	mov	rbx,QWORD[((-8))+rax]
	mov	rbp,QWORD[((-16))+rax]
	mov	r12,QWORD[((-24))+rax]
	mov	r13,QWORD[((-32))+rax]
	mov	r14,QWORD[((-40))+rax]
	mov	r15,QWORD[((-48))+rax]
	mov	QWORD[144+r8],rbx
	mov	QWORD[160+r8],rbp
	mov	QWORD[216+r8],r12
	mov	QWORD[224+r8],r13
	mov	QWORD[232+r8],r14
	mov	QWORD[240+r8],r15

$L$common_seh_tail:
	mov	rdi,QWORD[8+rax]
	mov	rsi,QWORD[16+rax]
	mov	QWORD[152+r8],rax
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi

	mov	rdi,QWORD[40+r9]
	mov	rsi,r8
	mov	ecx,154
	DD	0xa548f3fc

	mov	rsi,r9
	xor	rcx,rcx
	mov	rdx,QWORD[8+rsi]
	mov	r8,QWORD[rsi]
	mov	r9,QWORD[16+rsi]
	mov	r10,QWORD[40+rsi]
	lea	r11,[56+rsi]
	lea	r12,[24+rsi]
	mov	QWORD[32+rsp],r10
	mov	QWORD[40+rsp],r11
	mov	QWORD[48+rsp],r12
	mov	QWORD[56+rsp],rcx
	call	QWORD[__imp_RtlVirtualUnwind]

	mov	eax,1
	add	rsp,64
	popfq
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	pop	rbx
	pop	rdi
	pop	rsi
	DB	0F3h,0C3h		;repret


section	.pdata rdata align=4
ALIGN	4
	DD	$L$SEH_begin_bn_mul_mont wrt ..imagebase
	DD	$L$SEH_end_bn_mul_mont wrt ..imagebase
	DD	$L$SEH_info_bn_mul_mont wrt ..imagebase

	DD	$L$SEH_begin_bn_mul4x_mont wrt ..imagebase
	DD	$L$SEH_end_bn_mul4x_mont wrt ..imagebase
	DD	$L$SEH_info_bn_mul4x_mont wrt ..imagebase

	DD	$L$SEH_begin_bn_sqr8x_mont wrt ..imagebase
	DD	$L$SEH_end_bn_sqr8x_mont wrt ..imagebase
	DD	$L$SEH_info_bn_sqr8x_mont wrt ..imagebase
	DD	$L$SEH_begin_bn_mulx4x_mont wrt ..imagebase
	DD	$L$SEH_end_bn_mulx4x_mont wrt ..imagebase
	DD	$L$SEH_info_bn_mulx4x_mont wrt ..imagebase
section	.xdata rdata align=8
ALIGN	8
$L$SEH_info_bn_mul_mont:
DB	9,0,0,0
	DD	mul_handler wrt ..imagebase
	DD	$L$mul_body wrt ..imagebase,$L$mul_epilogue wrt ..imagebase
$L$SEH_info_bn_mul4x_mont:
DB	9,0,0,0
	DD	mul_handler wrt ..imagebase
	DD	$L$mul4x_body wrt ..imagebase,$L$mul4x_epilogue wrt ..imagebase
$L$SEH_info_bn_sqr8x_mont:
DB	9,0,0,0
	DD	sqr_handler wrt ..imagebase
	DD	$L$sqr8x_prologue wrt ..imagebase,$L$sqr8x_body wrt ..imagebase,$L$sqr8x_epilogue wrt ..imagebase
ALIGN	8
$L$SEH_info_bn_mulx4x_mont:
DB	9,0,0,0
	DD	sqr_handler wrt ..imagebase
	DD	$L$mulx4x_prologue wrt ..imagebase,$L$mulx4x_body wrt ..imagebase,$L$mulx4x_epilogue wrt ..imagebase
ALIGN	8
                                                  node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/bn/x86_64-mont5.asm                 0000664 0000000 0000000 00000167235 14746647661 0027133 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        default	rel
%define XMMWORD
%define YMMWORD
%define ZMMWORD
section	.text code align=64


EXTERN	OPENSSL_ia32cap_P

global	bn_mul_mont_gather5

ALIGN	64
bn_mul_mont_gather5:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_bn_mul_mont_gather5:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



	mov	r9d,r9d
	mov	rax,rsp

	test	r9d,7
	jnz	NEAR $L$mul_enter
	mov	r11d,DWORD[((OPENSSL_ia32cap_P+8))]
	jmp	NEAR $L$mul4x_enter

ALIGN	16
$L$mul_enter:
	movd	xmm5,DWORD[56+rsp]
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15


	neg	r9
	mov	r11,rsp
	lea	r10,[((-280))+r9*8+rsp]
	neg	r9
	and	r10,-1024









	sub	r11,r10
	and	r11,-4096
	lea	rsp,[r11*1+r10]
	mov	r11,QWORD[rsp]
	cmp	rsp,r10
	ja	NEAR $L$mul_page_walk
	jmp	NEAR $L$mul_page_walk_done

$L$mul_page_walk:
	lea	rsp,[((-4096))+rsp]
	mov	r11,QWORD[rsp]
	cmp	rsp,r10
	ja	NEAR $L$mul_page_walk
$L$mul_page_walk_done:

	lea	r10,[$L$inc]
	mov	QWORD[8+r9*8+rsp],rax

$L$mul_body:

	lea	r12,[128+rdx]
	movdqa	xmm0,XMMWORD[r10]
	movdqa	xmm1,XMMWORD[16+r10]
	lea	r10,[((24-112))+r9*8+rsp]
	and	r10,-16

	pshufd	xmm5,xmm5,0
	movdqa	xmm4,xmm1
	movdqa	xmm2,xmm1
	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
DB	0x67
	movdqa	xmm3,xmm4
	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[112+r10],xmm0
	movdqa	xmm0,xmm4

	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[128+r10],xmm1
	movdqa	xmm1,xmm4

	paddd	xmm0,xmm3
	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[144+r10],xmm2
	movdqa	xmm2,xmm4

	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
	movdqa	XMMWORD[160+r10],xmm3
	movdqa	xmm3,xmm4
	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[176+r10],xmm0
	movdqa	xmm0,xmm4

	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[192+r10],xmm1
	movdqa	xmm1,xmm4

	paddd	xmm0,xmm3
	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[208+r10],xmm2
	movdqa	xmm2,xmm4

	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
	movdqa	XMMWORD[224+r10],xmm3
	movdqa	xmm3,xmm4
	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[240+r10],xmm0
	movdqa	xmm0,xmm4

	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[256+r10],xmm1
	movdqa	xmm1,xmm4

	paddd	xmm0,xmm3
	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[272+r10],xmm2
	movdqa	xmm2,xmm4

	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
	movdqa	XMMWORD[288+r10],xmm3
	movdqa	xmm3,xmm4
	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[304+r10],xmm0

	paddd	xmm3,xmm2
DB	0x67
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[320+r10],xmm1

	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[336+r10],xmm2
	pand	xmm0,XMMWORD[64+r12]

	pand	xmm1,XMMWORD[80+r12]
	pand	xmm2,XMMWORD[96+r12]
	movdqa	XMMWORD[352+r10],xmm3
	pand	xmm3,XMMWORD[112+r12]
	por	xmm0,xmm2
	por	xmm1,xmm3
	movdqa	xmm4,XMMWORD[((-128))+r12]
	movdqa	xmm5,XMMWORD[((-112))+r12]
	movdqa	xmm2,XMMWORD[((-96))+r12]
	pand	xmm4,XMMWORD[112+r10]
	movdqa	xmm3,XMMWORD[((-80))+r12]
	pand	xmm5,XMMWORD[128+r10]
	por	xmm0,xmm4
	pand	xmm2,XMMWORD[144+r10]
	por	xmm1,xmm5
	pand	xmm3,XMMWORD[160+r10]
	por	xmm0,xmm2
	por	xmm1,xmm3
	movdqa	xmm4,XMMWORD[((-64))+r12]
	movdqa	xmm5,XMMWORD[((-48))+r12]
	movdqa	xmm2,XMMWORD[((-32))+r12]
	pand	xmm4,XMMWORD[176+r10]
	movdqa	xmm3,XMMWORD[((-16))+r12]
	pand	xmm5,XMMWORD[192+r10]
	por	xmm0,xmm4
	pand	xmm2,XMMWORD[208+r10]
	por	xmm1,xmm5
	pand	xmm3,XMMWORD[224+r10]
	por	xmm0,xmm2
	por	xmm1,xmm3
	movdqa	xmm4,XMMWORD[r12]
	movdqa	xmm5,XMMWORD[16+r12]
	movdqa	xmm2,XMMWORD[32+r12]
	pand	xmm4,XMMWORD[240+r10]
	movdqa	xmm3,XMMWORD[48+r12]
	pand	xmm5,XMMWORD[256+r10]
	por	xmm0,xmm4
	pand	xmm2,XMMWORD[272+r10]
	por	xmm1,xmm5
	pand	xmm3,XMMWORD[288+r10]
	por	xmm0,xmm2
	por	xmm1,xmm3
	por	xmm0,xmm1
	pshufd	xmm1,xmm0,0x4e
	por	xmm0,xmm1
	lea	r12,[256+r12]
DB	102,72,15,126,195

	mov	r8,QWORD[r8]
	mov	rax,QWORD[rsi]

	xor	r14,r14
	xor	r15,r15

	mov	rbp,r8
	mul	rbx
	mov	r10,rax
	mov	rax,QWORD[rcx]

	imul	rbp,r10
	mov	r11,rdx

	mul	rbp
	add	r10,rax
	mov	rax,QWORD[8+rsi]
	adc	rdx,0
	mov	r13,rdx

	lea	r15,[1+r15]
	jmp	NEAR $L$1st_enter

ALIGN	16
$L$1st:
	add	r13,rax
	mov	rax,QWORD[r15*8+rsi]
	adc	rdx,0
	add	r13,r11
	mov	r11,r10
	adc	rdx,0
	mov	QWORD[((-16))+r15*8+rsp],r13
	mov	r13,rdx

$L$1st_enter:
	mul	rbx
	add	r11,rax
	mov	rax,QWORD[r15*8+rcx]
	adc	rdx,0
	lea	r15,[1+r15]
	mov	r10,rdx

	mul	rbp
	cmp	r15,r9
	jne	NEAR $L$1st


	add	r13,rax
	adc	rdx,0
	add	r13,r11
	adc	rdx,0
	mov	QWORD[((-16))+r9*8+rsp],r13
	mov	r13,rdx
	mov	r11,r10

	xor	rdx,rdx
	add	r13,r11
	adc	rdx,0
	mov	QWORD[((-8))+r9*8+rsp],r13
	mov	QWORD[r9*8+rsp],rdx

	lea	r14,[1+r14]
	jmp	NEAR $L$outer
ALIGN	16
$L$outer:
	lea	rdx,[((24+128))+r9*8+rsp]
	and	rdx,-16
	pxor	xmm4,xmm4
	pxor	xmm5,xmm5
	movdqa	xmm0,XMMWORD[((-128))+r12]
	movdqa	xmm1,XMMWORD[((-112))+r12]
	movdqa	xmm2,XMMWORD[((-96))+r12]
	movdqa	xmm3,XMMWORD[((-80))+r12]
	pand	xmm0,XMMWORD[((-128))+rdx]
	pand	xmm1,XMMWORD[((-112))+rdx]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[((-96))+rdx]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[((-80))+rdx]
	por	xmm4,xmm2
	por	xmm5,xmm3
	movdqa	xmm0,XMMWORD[((-64))+r12]
	movdqa	xmm1,XMMWORD[((-48))+r12]
	movdqa	xmm2,XMMWORD[((-32))+r12]
	movdqa	xmm3,XMMWORD[((-16))+r12]
	pand	xmm0,XMMWORD[((-64))+rdx]
	pand	xmm1,XMMWORD[((-48))+rdx]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[((-32))+rdx]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[((-16))+rdx]
	por	xmm4,xmm2
	por	xmm5,xmm3
	movdqa	xmm0,XMMWORD[r12]
	movdqa	xmm1,XMMWORD[16+r12]
	movdqa	xmm2,XMMWORD[32+r12]
	movdqa	xmm3,XMMWORD[48+r12]
	pand	xmm0,XMMWORD[rdx]
	pand	xmm1,XMMWORD[16+rdx]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[32+rdx]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[48+rdx]
	por	xmm4,xmm2
	por	xmm5,xmm3
	movdqa	xmm0,XMMWORD[64+r12]
	movdqa	xmm1,XMMWORD[80+r12]
	movdqa	xmm2,XMMWORD[96+r12]
	movdqa	xmm3,XMMWORD[112+r12]
	pand	xmm0,XMMWORD[64+rdx]
	pand	xmm1,XMMWORD[80+rdx]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[96+rdx]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[112+rdx]
	por	xmm4,xmm2
	por	xmm5,xmm3
	por	xmm4,xmm5
	pshufd	xmm0,xmm4,0x4e
	por	xmm0,xmm4
	lea	r12,[256+r12]

	mov	rax,QWORD[rsi]
DB	102,72,15,126,195

	xor	r15,r15
	mov	rbp,r8
	mov	r10,QWORD[rsp]

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[rcx]
	adc	rdx,0

	imul	rbp,r10
	mov	r11,rdx

	mul	rbp
	add	r10,rax
	mov	rax,QWORD[8+rsi]
	adc	rdx,0
	mov	r10,QWORD[8+rsp]
	mov	r13,rdx

	lea	r15,[1+r15]
	jmp	NEAR $L$inner_enter

ALIGN	16
$L$inner:
	add	r13,rax
	mov	rax,QWORD[r15*8+rsi]
	adc	rdx,0
	add	r13,r10
	mov	r10,QWORD[r15*8+rsp]
	adc	rdx,0
	mov	QWORD[((-16))+r15*8+rsp],r13
	mov	r13,rdx

$L$inner_enter:
	mul	rbx
	add	r11,rax
	mov	rax,QWORD[r15*8+rcx]
	adc	rdx,0
	add	r10,r11
	mov	r11,rdx
	adc	r11,0
	lea	r15,[1+r15]

	mul	rbp
	cmp	r15,r9
	jne	NEAR $L$inner

	add	r13,rax
	adc	rdx,0
	add	r13,r10
	mov	r10,QWORD[r9*8+rsp]
	adc	rdx,0
	mov	QWORD[((-16))+r9*8+rsp],r13
	mov	r13,rdx

	xor	rdx,rdx
	add	r13,r11
	adc	rdx,0
	add	r13,r10
	adc	rdx,0
	mov	QWORD[((-8))+r9*8+rsp],r13
	mov	QWORD[r9*8+rsp],rdx

	lea	r14,[1+r14]
	cmp	r14,r9
	jb	NEAR $L$outer

	xor	r14,r14
	mov	rax,QWORD[rsp]
	lea	rsi,[rsp]
	mov	r15,r9
	jmp	NEAR $L$sub
ALIGN	16
$L$sub:	sbb	rax,QWORD[r14*8+rcx]
	mov	QWORD[r14*8+rdi],rax
	mov	rax,QWORD[8+r14*8+rsi]
	lea	r14,[1+r14]
	dec	r15
	jnz	NEAR $L$sub

	sbb	rax,0
	mov	rbx,-1
	xor	rbx,rax
	xor	r14,r14
	mov	r15,r9

$L$copy:
	mov	rcx,QWORD[r14*8+rdi]
	mov	rdx,QWORD[r14*8+rsp]
	and	rcx,rbx
	and	rdx,rax
	mov	QWORD[r14*8+rsp],r14
	or	rdx,rcx
	mov	QWORD[r14*8+rdi],rdx
	lea	r14,[1+r14]
	sub	r15,1
	jnz	NEAR $L$copy

	mov	rsi,QWORD[8+r9*8+rsp]

	mov	rax,1

	mov	r15,QWORD[((-48))+rsi]

	mov	r14,QWORD[((-40))+rsi]

	mov	r13,QWORD[((-32))+rsi]

	mov	r12,QWORD[((-24))+rsi]

	mov	rbp,QWORD[((-16))+rsi]

	mov	rbx,QWORD[((-8))+rsi]

	lea	rsp,[rsi]

$L$mul_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_bn_mul_mont_gather5:

ALIGN	32
bn_mul4x_mont_gather5:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_bn_mul4x_mont_gather5:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



DB	0x67
	mov	rax,rsp

$L$mul4x_enter:
	and	r11d,0x80108
	cmp	r11d,0x80108
	je	NEAR $L$mulx4x_enter
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

$L$mul4x_prologue:

DB	0x67
	shl	r9d,3
	lea	r10,[r9*2+r9]
	neg	r9










	lea	r11,[((-320))+r9*2+rsp]
	mov	rbp,rsp
	sub	r11,rdi
	and	r11,4095
	cmp	r10,r11
	jb	NEAR $L$mul4xsp_alt
	sub	rbp,r11
	lea	rbp,[((-320))+r9*2+rbp]
	jmp	NEAR $L$mul4xsp_done

ALIGN	32
$L$mul4xsp_alt:
	lea	r10,[((4096-320))+r9*2]
	lea	rbp,[((-320))+r9*2+rbp]
	sub	r11,r10
	mov	r10,0
	cmovc	r11,r10
	sub	rbp,r11
$L$mul4xsp_done:
	and	rbp,-64
	mov	r11,rsp
	sub	r11,rbp
	and	r11,-4096
	lea	rsp,[rbp*1+r11]
	mov	r10,QWORD[rsp]
	cmp	rsp,rbp
	ja	NEAR $L$mul4x_page_walk
	jmp	NEAR $L$mul4x_page_walk_done

$L$mul4x_page_walk:
	lea	rsp,[((-4096))+rsp]
	mov	r10,QWORD[rsp]
	cmp	rsp,rbp
	ja	NEAR $L$mul4x_page_walk
$L$mul4x_page_walk_done:

	neg	r9

	mov	QWORD[40+rsp],rax

$L$mul4x_body:

	call	mul4x_internal

	mov	rsi,QWORD[40+rsp]

	mov	rax,1

	mov	r15,QWORD[((-48))+rsi]

	mov	r14,QWORD[((-40))+rsi]

	mov	r13,QWORD[((-32))+rsi]

	mov	r12,QWORD[((-24))+rsi]

	mov	rbp,QWORD[((-16))+rsi]

	mov	rbx,QWORD[((-8))+rsi]

	lea	rsp,[rsi]

$L$mul4x_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_bn_mul4x_mont_gather5:


ALIGN	32
mul4x_internal:

	shl	r9,5
	movd	xmm5,DWORD[56+rax]
	lea	rax,[$L$inc]
	lea	r13,[128+r9*1+rdx]
	shr	r9,5
	movdqa	xmm0,XMMWORD[rax]
	movdqa	xmm1,XMMWORD[16+rax]
	lea	r10,[((88-112))+r9*1+rsp]
	lea	r12,[128+rdx]

	pshufd	xmm5,xmm5,0
	movdqa	xmm4,xmm1
DB	0x67,0x67
	movdqa	xmm2,xmm1
	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
DB	0x67
	movdqa	xmm3,xmm4
	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[112+r10],xmm0
	movdqa	xmm0,xmm4

	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[128+r10],xmm1
	movdqa	xmm1,xmm4

	paddd	xmm0,xmm3
	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[144+r10],xmm2
	movdqa	xmm2,xmm4

	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
	movdqa	XMMWORD[160+r10],xmm3
	movdqa	xmm3,xmm4
	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[176+r10],xmm0
	movdqa	xmm0,xmm4

	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[192+r10],xmm1
	movdqa	xmm1,xmm4

	paddd	xmm0,xmm3
	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[208+r10],xmm2
	movdqa	xmm2,xmm4

	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
	movdqa	XMMWORD[224+r10],xmm3
	movdqa	xmm3,xmm4
	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[240+r10],xmm0
	movdqa	xmm0,xmm4

	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[256+r10],xmm1
	movdqa	xmm1,xmm4

	paddd	xmm0,xmm3
	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[272+r10],xmm2
	movdqa	xmm2,xmm4

	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
	movdqa	XMMWORD[288+r10],xmm3
	movdqa	xmm3,xmm4
	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[304+r10],xmm0

	paddd	xmm3,xmm2
DB	0x67
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[320+r10],xmm1

	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[336+r10],xmm2
	pand	xmm0,XMMWORD[64+r12]

	pand	xmm1,XMMWORD[80+r12]
	pand	xmm2,XMMWORD[96+r12]
	movdqa	XMMWORD[352+r10],xmm3
	pand	xmm3,XMMWORD[112+r12]
	por	xmm0,xmm2
	por	xmm1,xmm3
	movdqa	xmm4,XMMWORD[((-128))+r12]
	movdqa	xmm5,XMMWORD[((-112))+r12]
	movdqa	xmm2,XMMWORD[((-96))+r12]
	pand	xmm4,XMMWORD[112+r10]
	movdqa	xmm3,XMMWORD[((-80))+r12]
	pand	xmm5,XMMWORD[128+r10]
	por	xmm0,xmm4
	pand	xmm2,XMMWORD[144+r10]
	por	xmm1,xmm5
	pand	xmm3,XMMWORD[160+r10]
	por	xmm0,xmm2
	por	xmm1,xmm3
	movdqa	xmm4,XMMWORD[((-64))+r12]
	movdqa	xmm5,XMMWORD[((-48))+r12]
	movdqa	xmm2,XMMWORD[((-32))+r12]
	pand	xmm4,XMMWORD[176+r10]
	movdqa	xmm3,XMMWORD[((-16))+r12]
	pand	xmm5,XMMWORD[192+r10]
	por	xmm0,xmm4
	pand	xmm2,XMMWORD[208+r10]
	por	xmm1,xmm5
	pand	xmm3,XMMWORD[224+r10]
	por	xmm0,xmm2
	por	xmm1,xmm3
	movdqa	xmm4,XMMWORD[r12]
	movdqa	xmm5,XMMWORD[16+r12]
	movdqa	xmm2,XMMWORD[32+r12]
	pand	xmm4,XMMWORD[240+r10]
	movdqa	xmm3,XMMWORD[48+r12]
	pand	xmm5,XMMWORD[256+r10]
	por	xmm0,xmm4
	pand	xmm2,XMMWORD[272+r10]
	por	xmm1,xmm5
	pand	xmm3,XMMWORD[288+r10]
	por	xmm0,xmm2
	por	xmm1,xmm3
	por	xmm0,xmm1
	pshufd	xmm1,xmm0,0x4e
	por	xmm0,xmm1
	lea	r12,[256+r12]
DB	102,72,15,126,195

	mov	QWORD[((16+8))+rsp],r13
	mov	QWORD[((56+8))+rsp],rdi

	mov	r8,QWORD[r8]
	mov	rax,QWORD[rsi]
	lea	rsi,[r9*1+rsi]
	neg	r9

	mov	rbp,r8
	mul	rbx
	mov	r10,rax
	mov	rax,QWORD[rcx]

	imul	rbp,r10
	lea	r14,[((64+8))+rsp]
	mov	r11,rdx

	mul	rbp
	add	r10,rax
	mov	rax,QWORD[8+r9*1+rsi]
	adc	rdx,0
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[8+rcx]
	adc	rdx,0
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[16+r9*1+rsi]
	adc	rdx,0
	add	rdi,r11
	lea	r15,[32+r9]
	lea	rcx,[32+rcx]
	adc	rdx,0
	mov	QWORD[r14],rdi
	mov	r13,rdx
	jmp	NEAR $L$1st4x

ALIGN	32
$L$1st4x:
	mul	rbx
	add	r10,rax
	mov	rax,QWORD[((-16))+rcx]
	lea	r14,[32+r14]
	adc	rdx,0
	mov	r11,rdx

	mul	rbp
	add	r13,rax
	mov	rax,QWORD[((-8))+r15*1+rsi]
	adc	rdx,0
	add	r13,r10
	adc	rdx,0
	mov	QWORD[((-24))+r14],r13
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[((-8))+rcx]
	adc	rdx,0
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[r15*1+rsi]
	adc	rdx,0
	add	rdi,r11
	adc	rdx,0
	mov	QWORD[((-16))+r14],rdi
	mov	r13,rdx

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[rcx]
	adc	rdx,0
	mov	r11,rdx

	mul	rbp
	add	r13,rax
	mov	rax,QWORD[8+r15*1+rsi]
	adc	rdx,0
	add	r13,r10
	adc	rdx,0
	mov	QWORD[((-8))+r14],r13
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[8+rcx]
	adc	rdx,0
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[16+r15*1+rsi]
	adc	rdx,0
	add	rdi,r11
	lea	rcx,[32+rcx]
	adc	rdx,0
	mov	QWORD[r14],rdi
	mov	r13,rdx

	add	r15,32
	jnz	NEAR $L$1st4x

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[((-16))+rcx]
	lea	r14,[32+r14]
	adc	rdx,0
	mov	r11,rdx

	mul	rbp
	add	r13,rax
	mov	rax,QWORD[((-8))+rsi]
	adc	rdx,0
	add	r13,r10
	adc	rdx,0
	mov	QWORD[((-24))+r14],r13
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[((-8))+rcx]
	adc	rdx,0
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[r9*1+rsi]
	adc	rdx,0
	add	rdi,r11
	adc	rdx,0
	mov	QWORD[((-16))+r14],rdi
	mov	r13,rdx

	lea	rcx,[r9*1+rcx]

	xor	rdi,rdi
	add	r13,r10
	adc	rdi,0
	mov	QWORD[((-8))+r14],r13

	jmp	NEAR $L$outer4x

ALIGN	32
$L$outer4x:
	lea	rdx,[((16+128))+r14]
	pxor	xmm4,xmm4
	pxor	xmm5,xmm5
	movdqa	xmm0,XMMWORD[((-128))+r12]
	movdqa	xmm1,XMMWORD[((-112))+r12]
	movdqa	xmm2,XMMWORD[((-96))+r12]
	movdqa	xmm3,XMMWORD[((-80))+r12]
	pand	xmm0,XMMWORD[((-128))+rdx]
	pand	xmm1,XMMWORD[((-112))+rdx]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[((-96))+rdx]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[((-80))+rdx]
	por	xmm4,xmm2
	por	xmm5,xmm3
	movdqa	xmm0,XMMWORD[((-64))+r12]
	movdqa	xmm1,XMMWORD[((-48))+r12]
	movdqa	xmm2,XMMWORD[((-32))+r12]
	movdqa	xmm3,XMMWORD[((-16))+r12]
	pand	xmm0,XMMWORD[((-64))+rdx]
	pand	xmm1,XMMWORD[((-48))+rdx]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[((-32))+rdx]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[((-16))+rdx]
	por	xmm4,xmm2
	por	xmm5,xmm3
	movdqa	xmm0,XMMWORD[r12]
	movdqa	xmm1,XMMWORD[16+r12]
	movdqa	xmm2,XMMWORD[32+r12]
	movdqa	xmm3,XMMWORD[48+r12]
	pand	xmm0,XMMWORD[rdx]
	pand	xmm1,XMMWORD[16+rdx]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[32+rdx]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[48+rdx]
	por	xmm4,xmm2
	por	xmm5,xmm3
	movdqa	xmm0,XMMWORD[64+r12]
	movdqa	xmm1,XMMWORD[80+r12]
	movdqa	xmm2,XMMWORD[96+r12]
	movdqa	xmm3,XMMWORD[112+r12]
	pand	xmm0,XMMWORD[64+rdx]
	pand	xmm1,XMMWORD[80+rdx]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[96+rdx]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[112+rdx]
	por	xmm4,xmm2
	por	xmm5,xmm3
	por	xmm4,xmm5
	pshufd	xmm0,xmm4,0x4e
	por	xmm0,xmm4
	lea	r12,[256+r12]
DB	102,72,15,126,195

	mov	r10,QWORD[r9*1+r14]
	mov	rbp,r8
	mul	rbx
	add	r10,rax
	mov	rax,QWORD[rcx]
	adc	rdx,0

	imul	rbp,r10
	mov	r11,rdx
	mov	QWORD[r14],rdi

	lea	r14,[r9*1+r14]

	mul	rbp
	add	r10,rax
	mov	rax,QWORD[8+r9*1+rsi]
	adc	rdx,0
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[8+rcx]
	adc	rdx,0
	add	r11,QWORD[8+r14]
	adc	rdx,0
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[16+r9*1+rsi]
	adc	rdx,0
	add	rdi,r11
	lea	r15,[32+r9]
	lea	rcx,[32+rcx]
	adc	rdx,0
	mov	r13,rdx
	jmp	NEAR $L$inner4x

ALIGN	32
$L$inner4x:
	mul	rbx
	add	r10,rax
	mov	rax,QWORD[((-16))+rcx]
	adc	rdx,0
	add	r10,QWORD[16+r14]
	lea	r14,[32+r14]
	adc	rdx,0
	mov	r11,rdx

	mul	rbp
	add	r13,rax
	mov	rax,QWORD[((-8))+r15*1+rsi]
	adc	rdx,0
	add	r13,r10
	adc	rdx,0
	mov	QWORD[((-32))+r14],rdi
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[((-8))+rcx]
	adc	rdx,0
	add	r11,QWORD[((-8))+r14]
	adc	rdx,0
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[r15*1+rsi]
	adc	rdx,0
	add	rdi,r11
	adc	rdx,0
	mov	QWORD[((-24))+r14],r13
	mov	r13,rdx

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[rcx]
	adc	rdx,0
	add	r10,QWORD[r14]
	adc	rdx,0
	mov	r11,rdx

	mul	rbp
	add	r13,rax
	mov	rax,QWORD[8+r15*1+rsi]
	adc	rdx,0
	add	r13,r10
	adc	rdx,0
	mov	QWORD[((-16))+r14],rdi
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[8+rcx]
	adc	rdx,0
	add	r11,QWORD[8+r14]
	adc	rdx,0
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[16+r15*1+rsi]
	adc	rdx,0
	add	rdi,r11
	lea	rcx,[32+rcx]
	adc	rdx,0
	mov	QWORD[((-8))+r14],r13
	mov	r13,rdx

	add	r15,32
	jnz	NEAR $L$inner4x

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[((-16))+rcx]
	adc	rdx,0
	add	r10,QWORD[16+r14]
	lea	r14,[32+r14]
	adc	rdx,0
	mov	r11,rdx

	mul	rbp
	add	r13,rax
	mov	rax,QWORD[((-8))+rsi]
	adc	rdx,0
	add	r13,r10
	adc	rdx,0
	mov	QWORD[((-32))+r14],rdi
	mov	rdi,rdx

	mul	rbx
	add	r11,rax
	mov	rax,rbp
	mov	rbp,QWORD[((-8))+rcx]
	adc	rdx,0
	add	r11,QWORD[((-8))+r14]
	adc	rdx,0
	mov	r10,rdx

	mul	rbp
	add	rdi,rax
	mov	rax,QWORD[r9*1+rsi]
	adc	rdx,0
	add	rdi,r11
	adc	rdx,0
	mov	QWORD[((-24))+r14],r13
	mov	r13,rdx

	mov	QWORD[((-16))+r14],rdi
	lea	rcx,[r9*1+rcx]

	xor	rdi,rdi
	add	r13,r10
	adc	rdi,0
	add	r13,QWORD[r14]
	adc	rdi,0
	mov	QWORD[((-8))+r14],r13

	cmp	r12,QWORD[((16+8))+rsp]
	jb	NEAR $L$outer4x
	xor	rax,rax
	sub	rbp,r13
	adc	r15,r15
	or	rdi,r15
	sub	rax,rdi
	lea	rbx,[r9*1+r14]
	mov	r12,QWORD[rcx]
	lea	rbp,[rcx]
	mov	rcx,r9
	sar	rcx,3+2
	mov	rdi,QWORD[((56+8))+rsp]
	dec	r12
	xor	r10,r10
	mov	r13,QWORD[8+rbp]
	mov	r14,QWORD[16+rbp]
	mov	r15,QWORD[24+rbp]
	jmp	NEAR $L$sqr4x_sub_entry


global	bn_power5

ALIGN	32
bn_power5:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_bn_power5:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



	mov	rax,rsp

	mov	r11d,DWORD[((OPENSSL_ia32cap_P+8))]
	and	r11d,0x80108
	cmp	r11d,0x80108
	je	NEAR $L$powerx5_enter
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

$L$power5_prologue:

	shl	r9d,3
	lea	r10d,[r9*2+r9]
	neg	r9
	mov	r8,QWORD[r8]








	lea	r11,[((-320))+r9*2+rsp]
	mov	rbp,rsp
	sub	r11,rdi
	and	r11,4095
	cmp	r10,r11
	jb	NEAR $L$pwr_sp_alt
	sub	rbp,r11
	lea	rbp,[((-320))+r9*2+rbp]
	jmp	NEAR $L$pwr_sp_done

ALIGN	32
$L$pwr_sp_alt:
	lea	r10,[((4096-320))+r9*2]
	lea	rbp,[((-320))+r9*2+rbp]
	sub	r11,r10
	mov	r10,0
	cmovc	r11,r10
	sub	rbp,r11
$L$pwr_sp_done:
	and	rbp,-64
	mov	r11,rsp
	sub	r11,rbp
	and	r11,-4096
	lea	rsp,[rbp*1+r11]
	mov	r10,QWORD[rsp]
	cmp	rsp,rbp
	ja	NEAR $L$pwr_page_walk
	jmp	NEAR $L$pwr_page_walk_done

$L$pwr_page_walk:
	lea	rsp,[((-4096))+rsp]
	mov	r10,QWORD[rsp]
	cmp	rsp,rbp
	ja	NEAR $L$pwr_page_walk
$L$pwr_page_walk_done:

	mov	r10,r9
	neg	r9










	mov	QWORD[32+rsp],r8
	mov	QWORD[40+rsp],rax

$L$power5_body:
DB	102,72,15,110,207
DB	102,72,15,110,209
DB	102,73,15,110,218
DB	102,72,15,110,226

	call	__bn_sqr8x_internal
	call	__bn_post4x_internal
	call	__bn_sqr8x_internal
	call	__bn_post4x_internal
	call	__bn_sqr8x_internal
	call	__bn_post4x_internal
	call	__bn_sqr8x_internal
	call	__bn_post4x_internal
	call	__bn_sqr8x_internal
	call	__bn_post4x_internal

DB	102,72,15,126,209
DB	102,72,15,126,226
	mov	rdi,rsi
	mov	rax,QWORD[40+rsp]
	lea	r8,[32+rsp]

	call	mul4x_internal

	mov	rsi,QWORD[40+rsp]

	mov	rax,1
	mov	r15,QWORD[((-48))+rsi]

	mov	r14,QWORD[((-40))+rsi]

	mov	r13,QWORD[((-32))+rsi]

	mov	r12,QWORD[((-24))+rsi]

	mov	rbp,QWORD[((-16))+rsi]

	mov	rbx,QWORD[((-8))+rsi]

	lea	rsp,[rsi]

$L$power5_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_bn_power5:

global	bn_sqr8x_internal


ALIGN	32
bn_sqr8x_internal:
__bn_sqr8x_internal:










































































	lea	rbp,[32+r10]
	lea	rsi,[r9*1+rsi]

	mov	rcx,r9


	mov	r14,QWORD[((-32))+rbp*1+rsi]
	lea	rdi,[((48+8))+r9*2+rsp]
	mov	rax,QWORD[((-24))+rbp*1+rsi]
	lea	rdi,[((-32))+rbp*1+rdi]
	mov	rbx,QWORD[((-16))+rbp*1+rsi]
	mov	r15,rax

	mul	r14
	mov	r10,rax
	mov	rax,rbx
	mov	r11,rdx
	mov	QWORD[((-24))+rbp*1+rdi],r10

	mul	r14
	add	r11,rax
	mov	rax,rbx
	adc	rdx,0
	mov	QWORD[((-16))+rbp*1+rdi],r11
	mov	r10,rdx


	mov	rbx,QWORD[((-8))+rbp*1+rsi]
	mul	r15
	mov	r12,rax
	mov	rax,rbx
	mov	r13,rdx

	lea	rcx,[rbp]
	mul	r14
	add	r10,rax
	mov	rax,rbx
	mov	r11,rdx
	adc	r11,0
	add	r10,r12
	adc	r11,0
	mov	QWORD[((-8))+rcx*1+rdi],r10
	jmp	NEAR $L$sqr4x_1st

ALIGN	32
$L$sqr4x_1st:
	mov	rbx,QWORD[rcx*1+rsi]
	mul	r15
	add	r13,rax
	mov	rax,rbx
	mov	r12,rdx
	adc	r12,0

	mul	r14
	add	r11,rax
	mov	rax,rbx
	mov	rbx,QWORD[8+rcx*1+rsi]
	mov	r10,rdx
	adc	r10,0
	add	r11,r13
	adc	r10,0


	mul	r15
	add	r12,rax
	mov	rax,rbx
	mov	QWORD[rcx*1+rdi],r11
	mov	r13,rdx
	adc	r13,0

	mul	r14
	add	r10,rax
	mov	rax,rbx
	mov	rbx,QWORD[16+rcx*1+rsi]
	mov	r11,rdx
	adc	r11,0
	add	r10,r12
	adc	r11,0

	mul	r15
	add	r13,rax
	mov	rax,rbx
	mov	QWORD[8+rcx*1+rdi],r10
	mov	r12,rdx
	adc	r12,0

	mul	r14
	add	r11,rax
	mov	rax,rbx
	mov	rbx,QWORD[24+rcx*1+rsi]
	mov	r10,rdx
	adc	r10,0
	add	r11,r13
	adc	r10,0


	mul	r15
	add	r12,rax
	mov	rax,rbx
	mov	QWORD[16+rcx*1+rdi],r11
	mov	r13,rdx
	adc	r13,0
	lea	rcx,[32+rcx]

	mul	r14
	add	r10,rax
	mov	rax,rbx
	mov	r11,rdx
	adc	r11,0
	add	r10,r12
	adc	r11,0
	mov	QWORD[((-8))+rcx*1+rdi],r10

	cmp	rcx,0
	jne	NEAR $L$sqr4x_1st

	mul	r15
	add	r13,rax
	lea	rbp,[16+rbp]
	adc	rdx,0
	add	r13,r11
	adc	rdx,0

	mov	QWORD[rdi],r13
	mov	r12,rdx
	mov	QWORD[8+rdi],rdx
	jmp	NEAR $L$sqr4x_outer

ALIGN	32
$L$sqr4x_outer:
	mov	r14,QWORD[((-32))+rbp*1+rsi]
	lea	rdi,[((48+8))+r9*2+rsp]
	mov	rax,QWORD[((-24))+rbp*1+rsi]
	lea	rdi,[((-32))+rbp*1+rdi]
	mov	rbx,QWORD[((-16))+rbp*1+rsi]
	mov	r15,rax

	mul	r14
	mov	r10,QWORD[((-24))+rbp*1+rdi]
	add	r10,rax
	mov	rax,rbx
	adc	rdx,0
	mov	QWORD[((-24))+rbp*1+rdi],r10
	mov	r11,rdx

	mul	r14
	add	r11,rax
	mov	rax,rbx
	adc	rdx,0
	add	r11,QWORD[((-16))+rbp*1+rdi]
	mov	r10,rdx
	adc	r10,0
	mov	QWORD[((-16))+rbp*1+rdi],r11

	xor	r12,r12

	mov	rbx,QWORD[((-8))+rbp*1+rsi]
	mul	r15
	add	r12,rax
	mov	rax,rbx
	adc	rdx,0
	add	r12,QWORD[((-8))+rbp*1+rdi]
	mov	r13,rdx
	adc	r13,0

	mul	r14
	add	r10,rax
	mov	rax,rbx
	adc	rdx,0
	add	r10,r12
	mov	r11,rdx
	adc	r11,0
	mov	QWORD[((-8))+rbp*1+rdi],r10

	lea	rcx,[rbp]
	jmp	NEAR $L$sqr4x_inner

ALIGN	32
$L$sqr4x_inner:
	mov	rbx,QWORD[rcx*1+rsi]
	mul	r15
	add	r13,rax
	mov	rax,rbx
	mov	r12,rdx
	adc	r12,0
	add	r13,QWORD[rcx*1+rdi]
	adc	r12,0

DB	0x67
	mul	r14
	add	r11,rax
	mov	rax,rbx
	mov	rbx,QWORD[8+rcx*1+rsi]
	mov	r10,rdx
	adc	r10,0
	add	r11,r13
	adc	r10,0

	mul	r15
	add	r12,rax
	mov	QWORD[rcx*1+rdi],r11
	mov	rax,rbx
	mov	r13,rdx
	adc	r13,0
	add	r12,QWORD[8+rcx*1+rdi]
	lea	rcx,[16+rcx]
	adc	r13,0

	mul	r14
	add	r10,rax
	mov	rax,rbx
	adc	rdx,0
	add	r10,r12
	mov	r11,rdx
	adc	r11,0
	mov	QWORD[((-8))+rcx*1+rdi],r10

	cmp	rcx,0
	jne	NEAR $L$sqr4x_inner

DB	0x67
	mul	r15
	add	r13,rax
	adc	rdx,0
	add	r13,r11
	adc	rdx,0

	mov	QWORD[rdi],r13
	mov	r12,rdx
	mov	QWORD[8+rdi],rdx

	add	rbp,16
	jnz	NEAR $L$sqr4x_outer


	mov	r14,QWORD[((-32))+rsi]
	lea	rdi,[((48+8))+r9*2+rsp]
	mov	rax,QWORD[((-24))+rsi]
	lea	rdi,[((-32))+rbp*1+rdi]
	mov	rbx,QWORD[((-16))+rsi]
	mov	r15,rax

	mul	r14
	add	r10,rax
	mov	rax,rbx
	mov	r11,rdx
	adc	r11,0

	mul	r14
	add	r11,rax
	mov	rax,rbx
	mov	QWORD[((-24))+rdi],r10
	mov	r10,rdx
	adc	r10,0
	add	r11,r13
	mov	rbx,QWORD[((-8))+rsi]
	adc	r10,0

	mul	r15
	add	r12,rax
	mov	rax,rbx
	mov	QWORD[((-16))+rdi],r11
	mov	r13,rdx
	adc	r13,0

	mul	r14
	add	r10,rax
	mov	rax,rbx
	mov	r11,rdx
	adc	r11,0
	add	r10,r12
	adc	r11,0
	mov	QWORD[((-8))+rdi],r10

	mul	r15
	add	r13,rax
	mov	rax,QWORD[((-16))+rsi]
	adc	rdx,0
	add	r13,r11
	adc	rdx,0

	mov	QWORD[rdi],r13
	mov	r12,rdx
	mov	QWORD[8+rdi],rdx

	mul	rbx
	add	rbp,16
	xor	r14,r14
	sub	rbp,r9
	xor	r15,r15

	add	rax,r12
	adc	rdx,0
	mov	QWORD[8+rdi],rax
	mov	QWORD[16+rdi],rdx
	mov	QWORD[24+rdi],r15

	mov	rax,QWORD[((-16))+rbp*1+rsi]
	lea	rdi,[((48+8))+rsp]
	xor	r10,r10
	mov	r11,QWORD[8+rdi]

	lea	r12,[r10*2+r14]
	shr	r10,63
	lea	r13,[r11*2+rcx]
	shr	r11,63
	or	r13,r10
	mov	r10,QWORD[16+rdi]
	mov	r14,r11
	mul	rax
	neg	r15
	mov	r11,QWORD[24+rdi]
	adc	r12,rax
	mov	rax,QWORD[((-8))+rbp*1+rsi]
	mov	QWORD[rdi],r12
	adc	r13,rdx

	lea	rbx,[r10*2+r14]
	mov	QWORD[8+rdi],r13
	sbb	r15,r15
	shr	r10,63
	lea	r8,[r11*2+rcx]
	shr	r11,63
	or	r8,r10
	mov	r10,QWORD[32+rdi]
	mov	r14,r11
	mul	rax
	neg	r15
	mov	r11,QWORD[40+rdi]
	adc	rbx,rax
	mov	rax,QWORD[rbp*1+rsi]
	mov	QWORD[16+rdi],rbx
	adc	r8,rdx
	lea	rbp,[16+rbp]
	mov	QWORD[24+rdi],r8
	sbb	r15,r15
	lea	rdi,[64+rdi]
	jmp	NEAR $L$sqr4x_shift_n_add

ALIGN	32
$L$sqr4x_shift_n_add:
	lea	r12,[r10*2+r14]
	shr	r10,63
	lea	r13,[r11*2+rcx]
	shr	r11,63
	or	r13,r10
	mov	r10,QWORD[((-16))+rdi]
	mov	r14,r11
	mul	rax
	neg	r15
	mov	r11,QWORD[((-8))+rdi]
	adc	r12,rax
	mov	rax,QWORD[((-8))+rbp*1+rsi]
	mov	QWORD[((-32))+rdi],r12
	adc	r13,rdx

	lea	rbx,[r10*2+r14]
	mov	QWORD[((-24))+rdi],r13
	sbb	r15,r15
	shr	r10,63
	lea	r8,[r11*2+rcx]
	shr	r11,63
	or	r8,r10
	mov	r10,QWORD[rdi]
	mov	r14,r11
	mul	rax
	neg	r15
	mov	r11,QWORD[8+rdi]
	adc	rbx,rax
	mov	rax,QWORD[rbp*1+rsi]
	mov	QWORD[((-16))+rdi],rbx
	adc	r8,rdx

	lea	r12,[r10*2+r14]
	mov	QWORD[((-8))+rdi],r8
	sbb	r15,r15
	shr	r10,63
	lea	r13,[r11*2+rcx]
	shr	r11,63
	or	r13,r10
	mov	r10,QWORD[16+rdi]
	mov	r14,r11
	mul	rax
	neg	r15
	mov	r11,QWORD[24+rdi]
	adc	r12,rax
	mov	rax,QWORD[8+rbp*1+rsi]
	mov	QWORD[rdi],r12
	adc	r13,rdx

	lea	rbx,[r10*2+r14]
	mov	QWORD[8+rdi],r13
	sbb	r15,r15
	shr	r10,63
	lea	r8,[r11*2+rcx]
	shr	r11,63
	or	r8,r10
	mov	r10,QWORD[32+rdi]
	mov	r14,r11
	mul	rax
	neg	r15
	mov	r11,QWORD[40+rdi]
	adc	rbx,rax
	mov	rax,QWORD[16+rbp*1+rsi]
	mov	QWORD[16+rdi],rbx
	adc	r8,rdx
	mov	QWORD[24+rdi],r8
	sbb	r15,r15
	lea	rdi,[64+rdi]
	add	rbp,32
	jnz	NEAR $L$sqr4x_shift_n_add

	lea	r12,[r10*2+r14]
DB	0x67
	shr	r10,63
	lea	r13,[r11*2+rcx]
	shr	r11,63
	or	r13,r10
	mov	r10,QWORD[((-16))+rdi]
	mov	r14,r11
	mul	rax
	neg	r15
	mov	r11,QWORD[((-8))+rdi]
	adc	r12,rax
	mov	rax,QWORD[((-8))+rsi]
	mov	QWORD[((-32))+rdi],r12
	adc	r13,rdx

	lea	rbx,[r10*2+r14]
	mov	QWORD[((-24))+rdi],r13
	sbb	r15,r15
	shr	r10,63
	lea	r8,[r11*2+rcx]
	shr	r11,63
	or	r8,r10
	mul	rax
	neg	r15
	adc	rbx,rax
	adc	r8,rdx
	mov	QWORD[((-16))+rdi],rbx
	mov	QWORD[((-8))+rdi],r8
DB	102,72,15,126,213
__bn_sqr8x_reduction:
	xor	rax,rax
	lea	rcx,[rbp*1+r9]
	lea	rdx,[((48+8))+r9*2+rsp]
	mov	QWORD[((0+8))+rsp],rcx
	lea	rdi,[((48+8))+r9*1+rsp]
	mov	QWORD[((8+8))+rsp],rdx
	neg	r9
	jmp	NEAR $L$8x_reduction_loop

ALIGN	32
$L$8x_reduction_loop:
	lea	rdi,[r9*1+rdi]
DB	0x66
	mov	rbx,QWORD[rdi]
	mov	r9,QWORD[8+rdi]
	mov	r10,QWORD[16+rdi]
	mov	r11,QWORD[24+rdi]
	mov	r12,QWORD[32+rdi]
	mov	r13,QWORD[40+rdi]
	mov	r14,QWORD[48+rdi]
	mov	r15,QWORD[56+rdi]
	mov	QWORD[rdx],rax
	lea	rdi,[64+rdi]

DB	0x67
	mov	r8,rbx
	imul	rbx,QWORD[((32+8))+rsp]
	mov	rax,QWORD[rbp]
	mov	ecx,8
	jmp	NEAR $L$8x_reduce

ALIGN	32
$L$8x_reduce:
	mul	rbx
	mov	rax,QWORD[8+rbp]
	neg	r8
	mov	r8,rdx
	adc	r8,0

	mul	rbx
	add	r9,rax
	mov	rax,QWORD[16+rbp]
	adc	rdx,0
	add	r8,r9
	mov	QWORD[((48-8+8))+rcx*8+rsp],rbx
	mov	r9,rdx
	adc	r9,0

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[24+rbp]
	adc	rdx,0
	add	r9,r10
	mov	rsi,QWORD[((32+8))+rsp]
	mov	r10,rdx
	adc	r10,0

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[32+rbp]
	adc	rdx,0
	imul	rsi,r8
	add	r10,r11
	mov	r11,rdx
	adc	r11,0

	mul	rbx
	add	r12,rax
	mov	rax,QWORD[40+rbp]
	adc	rdx,0
	add	r11,r12
	mov	r12,rdx
	adc	r12,0

	mul	rbx
	add	r13,rax
	mov	rax,QWORD[48+rbp]
	adc	rdx,0
	add	r12,r13
	mov	r13,rdx
	adc	r13,0

	mul	rbx
	add	r14,rax
	mov	rax,QWORD[56+rbp]
	adc	rdx,0
	add	r13,r14
	mov	r14,rdx
	adc	r14,0

	mul	rbx
	mov	rbx,rsi
	add	r15,rax
	mov	rax,QWORD[rbp]
	adc	rdx,0
	add	r14,r15
	mov	r15,rdx
	adc	r15,0

	dec	ecx
	jnz	NEAR $L$8x_reduce

	lea	rbp,[64+rbp]
	xor	rax,rax
	mov	rdx,QWORD[((8+8))+rsp]
	cmp	rbp,QWORD[((0+8))+rsp]
	jae	NEAR $L$8x_no_tail

DB	0x66
	add	r8,QWORD[rdi]
	adc	r9,QWORD[8+rdi]
	adc	r10,QWORD[16+rdi]
	adc	r11,QWORD[24+rdi]
	adc	r12,QWORD[32+rdi]
	adc	r13,QWORD[40+rdi]
	adc	r14,QWORD[48+rdi]
	adc	r15,QWORD[56+rdi]
	sbb	rsi,rsi

	mov	rbx,QWORD[((48+56+8))+rsp]
	mov	ecx,8
	mov	rax,QWORD[rbp]
	jmp	NEAR $L$8x_tail

ALIGN	32
$L$8x_tail:
	mul	rbx
	add	r8,rax
	mov	rax,QWORD[8+rbp]
	mov	QWORD[rdi],r8
	mov	r8,rdx
	adc	r8,0

	mul	rbx
	add	r9,rax
	mov	rax,QWORD[16+rbp]
	adc	rdx,0
	add	r8,r9
	lea	rdi,[8+rdi]
	mov	r9,rdx
	adc	r9,0

	mul	rbx
	add	r10,rax
	mov	rax,QWORD[24+rbp]
	adc	rdx,0
	add	r9,r10
	mov	r10,rdx
	adc	r10,0

	mul	rbx
	add	r11,rax
	mov	rax,QWORD[32+rbp]
	adc	rdx,0
	add	r10,r11
	mov	r11,rdx
	adc	r11,0

	mul	rbx
	add	r12,rax
	mov	rax,QWORD[40+rbp]
	adc	rdx,0
	add	r11,r12
	mov	r12,rdx
	adc	r12,0

	mul	rbx
	add	r13,rax
	mov	rax,QWORD[48+rbp]
	adc	rdx,0
	add	r12,r13
	mov	r13,rdx
	adc	r13,0

	mul	rbx
	add	r14,rax
	mov	rax,QWORD[56+rbp]
	adc	rdx,0
	add	r13,r14
	mov	r14,rdx
	adc	r14,0

	mul	rbx
	mov	rbx,QWORD[((48-16+8))+rcx*8+rsp]
	add	r15,rax
	adc	rdx,0
	add	r14,r15
	mov	rax,QWORD[rbp]
	mov	r15,rdx
	adc	r15,0

	dec	ecx
	jnz	NEAR $L$8x_tail

	lea	rbp,[64+rbp]
	mov	rdx,QWORD[((8+8))+rsp]
	cmp	rbp,QWORD[((0+8))+rsp]
	jae	NEAR $L$8x_tail_done

	mov	rbx,QWORD[((48+56+8))+rsp]
	neg	rsi
	mov	rax,QWORD[rbp]
	adc	r8,QWORD[rdi]
	adc	r9,QWORD[8+rdi]
	adc	r10,QWORD[16+rdi]
	adc	r11,QWORD[24+rdi]
	adc	r12,QWORD[32+rdi]
	adc	r13,QWORD[40+rdi]
	adc	r14,QWORD[48+rdi]
	adc	r15,QWORD[56+rdi]
	sbb	rsi,rsi

	mov	ecx,8
	jmp	NEAR $L$8x_tail

ALIGN	32
$L$8x_tail_done:
	xor	rax,rax
	add	r8,QWORD[rdx]
	adc	r9,0
	adc	r10,0
	adc	r11,0
	adc	r12,0
	adc	r13,0
	adc	r14,0
	adc	r15,0
	adc	rax,0

	neg	rsi
$L$8x_no_tail:
	adc	r8,QWORD[rdi]
	adc	r9,QWORD[8+rdi]
	adc	r10,QWORD[16+rdi]
	adc	r11,QWORD[24+rdi]
	adc	r12,QWORD[32+rdi]
	adc	r13,QWORD[40+rdi]
	adc	r14,QWORD[48+rdi]
	adc	r15,QWORD[56+rdi]
	adc	rax,0
	mov	rcx,QWORD[((-8))+rbp]
	xor	rsi,rsi

DB	102,72,15,126,213

	mov	QWORD[rdi],r8
	mov	QWORD[8+rdi],r9
DB	102,73,15,126,217
	mov	QWORD[16+rdi],r10
	mov	QWORD[24+rdi],r11
	mov	QWORD[32+rdi],r12
	mov	QWORD[40+rdi],r13
	mov	QWORD[48+rdi],r14
	mov	QWORD[56+rdi],r15
	lea	rdi,[64+rdi]

	cmp	rdi,rdx
	jb	NEAR $L$8x_reduction_loop
	DB	0F3h,0C3h		;repret



ALIGN	32
__bn_post4x_internal:

	mov	r12,QWORD[rbp]
	lea	rbx,[r9*1+rdi]
	mov	rcx,r9
DB	102,72,15,126,207
	neg	rax
DB	102,72,15,126,206
	sar	rcx,3+2
	dec	r12
	xor	r10,r10
	mov	r13,QWORD[8+rbp]
	mov	r14,QWORD[16+rbp]
	mov	r15,QWORD[24+rbp]
	jmp	NEAR $L$sqr4x_sub_entry

ALIGN	16
$L$sqr4x_sub:
	mov	r12,QWORD[rbp]
	mov	r13,QWORD[8+rbp]
	mov	r14,QWORD[16+rbp]
	mov	r15,QWORD[24+rbp]
$L$sqr4x_sub_entry:
	lea	rbp,[32+rbp]
	not	r12
	not	r13
	not	r14
	not	r15
	and	r12,rax
	and	r13,rax
	and	r14,rax
	and	r15,rax

	neg	r10
	adc	r12,QWORD[rbx]
	adc	r13,QWORD[8+rbx]
	adc	r14,QWORD[16+rbx]
	adc	r15,QWORD[24+rbx]
	mov	QWORD[rdi],r12
	lea	rbx,[32+rbx]
	mov	QWORD[8+rdi],r13
	sbb	r10,r10
	mov	QWORD[16+rdi],r14
	mov	QWORD[24+rdi],r15
	lea	rdi,[32+rdi]

	inc	rcx
	jnz	NEAR $L$sqr4x_sub

	mov	r10,r9
	neg	r9
	DB	0F3h,0C3h		;repret



ALIGN	32
bn_mulx4x_mont_gather5:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_bn_mulx4x_mont_gather5:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



	mov	rax,rsp

$L$mulx4x_enter:
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

$L$mulx4x_prologue:

	shl	r9d,3
	lea	r10,[r9*2+r9]
	neg	r9
	mov	r8,QWORD[r8]










	lea	r11,[((-320))+r9*2+rsp]
	mov	rbp,rsp
	sub	r11,rdi
	and	r11,4095
	cmp	r10,r11
	jb	NEAR $L$mulx4xsp_alt
	sub	rbp,r11
	lea	rbp,[((-320))+r9*2+rbp]
	jmp	NEAR $L$mulx4xsp_done

$L$mulx4xsp_alt:
	lea	r10,[((4096-320))+r9*2]
	lea	rbp,[((-320))+r9*2+rbp]
	sub	r11,r10
	mov	r10,0
	cmovc	r11,r10
	sub	rbp,r11
$L$mulx4xsp_done:
	and	rbp,-64
	mov	r11,rsp
	sub	r11,rbp
	and	r11,-4096
	lea	rsp,[rbp*1+r11]
	mov	r10,QWORD[rsp]
	cmp	rsp,rbp
	ja	NEAR $L$mulx4x_page_walk
	jmp	NEAR $L$mulx4x_page_walk_done

$L$mulx4x_page_walk:
	lea	rsp,[((-4096))+rsp]
	mov	r10,QWORD[rsp]
	cmp	rsp,rbp
	ja	NEAR $L$mulx4x_page_walk
$L$mulx4x_page_walk_done:













	mov	QWORD[32+rsp],r8
	mov	QWORD[40+rsp],rax

$L$mulx4x_body:
	call	mulx4x_internal

	mov	rsi,QWORD[40+rsp]

	mov	rax,1

	mov	r15,QWORD[((-48))+rsi]

	mov	r14,QWORD[((-40))+rsi]

	mov	r13,QWORD[((-32))+rsi]

	mov	r12,QWORD[((-24))+rsi]

	mov	rbp,QWORD[((-16))+rsi]

	mov	rbx,QWORD[((-8))+rsi]

	lea	rsp,[rsi]

$L$mulx4x_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_bn_mulx4x_mont_gather5:


ALIGN	32
mulx4x_internal:

	mov	QWORD[8+rsp],r9
	mov	r10,r9
	neg	r9
	shl	r9,5
	neg	r10
	lea	r13,[128+r9*1+rdx]
	shr	r9,5+5
	movd	xmm5,DWORD[56+rax]
	sub	r9,1
	lea	rax,[$L$inc]
	mov	QWORD[((16+8))+rsp],r13
	mov	QWORD[((24+8))+rsp],r9
	mov	QWORD[((56+8))+rsp],rdi
	movdqa	xmm0,XMMWORD[rax]
	movdqa	xmm1,XMMWORD[16+rax]
	lea	r10,[((88-112))+r10*1+rsp]
	lea	rdi,[128+rdx]

	pshufd	xmm5,xmm5,0
	movdqa	xmm4,xmm1
DB	0x67
	movdqa	xmm2,xmm1
DB	0x67
	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
	movdqa	xmm3,xmm4
	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[112+r10],xmm0
	movdqa	xmm0,xmm4

	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[128+r10],xmm1
	movdqa	xmm1,xmm4

	paddd	xmm0,xmm3
	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[144+r10],xmm2
	movdqa	xmm2,xmm4

	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
	movdqa	XMMWORD[160+r10],xmm3
	movdqa	xmm3,xmm4
	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[176+r10],xmm0
	movdqa	xmm0,xmm4

	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[192+r10],xmm1
	movdqa	xmm1,xmm4

	paddd	xmm0,xmm3
	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[208+r10],xmm2
	movdqa	xmm2,xmm4

	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
	movdqa	XMMWORD[224+r10],xmm3
	movdqa	xmm3,xmm4
	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[240+r10],xmm0
	movdqa	xmm0,xmm4

	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[256+r10],xmm1
	movdqa	xmm1,xmm4

	paddd	xmm0,xmm3
	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[272+r10],xmm2
	movdqa	xmm2,xmm4

	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
	movdqa	XMMWORD[288+r10],xmm3
	movdqa	xmm3,xmm4
DB	0x67
	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[304+r10],xmm0

	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[320+r10],xmm1

	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[336+r10],xmm2

	pand	xmm0,XMMWORD[64+rdi]
	pand	xmm1,XMMWORD[80+rdi]
	pand	xmm2,XMMWORD[96+rdi]
	movdqa	XMMWORD[352+r10],xmm3
	pand	xmm3,XMMWORD[112+rdi]
	por	xmm0,xmm2
	por	xmm1,xmm3
	movdqa	xmm4,XMMWORD[((-128))+rdi]
	movdqa	xmm5,XMMWORD[((-112))+rdi]
	movdqa	xmm2,XMMWORD[((-96))+rdi]
	pand	xmm4,XMMWORD[112+r10]
	movdqa	xmm3,XMMWORD[((-80))+rdi]
	pand	xmm5,XMMWORD[128+r10]
	por	xmm0,xmm4
	pand	xmm2,XMMWORD[144+r10]
	por	xmm1,xmm5
	pand	xmm3,XMMWORD[160+r10]
	por	xmm0,xmm2
	por	xmm1,xmm3
	movdqa	xmm4,XMMWORD[((-64))+rdi]
	movdqa	xmm5,XMMWORD[((-48))+rdi]
	movdqa	xmm2,XMMWORD[((-32))+rdi]
	pand	xmm4,XMMWORD[176+r10]
	movdqa	xmm3,XMMWORD[((-16))+rdi]
	pand	xmm5,XMMWORD[192+r10]
	por	xmm0,xmm4
	pand	xmm2,XMMWORD[208+r10]
	por	xmm1,xmm5
	pand	xmm3,XMMWORD[224+r10]
	por	xmm0,xmm2
	por	xmm1,xmm3
	movdqa	xmm4,XMMWORD[rdi]
	movdqa	xmm5,XMMWORD[16+rdi]
	movdqa	xmm2,XMMWORD[32+rdi]
	pand	xmm4,XMMWORD[240+r10]
	movdqa	xmm3,XMMWORD[48+rdi]
	pand	xmm5,XMMWORD[256+r10]
	por	xmm0,xmm4
	pand	xmm2,XMMWORD[272+r10]
	por	xmm1,xmm5
	pand	xmm3,XMMWORD[288+r10]
	por	xmm0,xmm2
	por	xmm1,xmm3
	pxor	xmm0,xmm1
	pshufd	xmm1,xmm0,0x4e
	por	xmm0,xmm1
	lea	rdi,[256+rdi]
DB	102,72,15,126,194
	lea	rbx,[((64+32+8))+rsp]

	mov	r9,rdx
	mulx	rax,r8,QWORD[rsi]
	mulx	r12,r11,QWORD[8+rsi]
	add	r11,rax
	mulx	r13,rax,QWORD[16+rsi]
	adc	r12,rax
	adc	r13,0
	mulx	r14,rax,QWORD[24+rsi]

	mov	r15,r8
	imul	r8,QWORD[((32+8))+rsp]
	xor	rbp,rbp
	mov	rdx,r8

	mov	QWORD[((8+8))+rsp],rdi

	lea	rsi,[32+rsi]
	adcx	r13,rax
	adcx	r14,rbp

	mulx	r10,rax,QWORD[rcx]
	adcx	r15,rax
	adox	r10,r11
	mulx	r11,rax,QWORD[8+rcx]
	adcx	r10,rax
	adox	r11,r12
	mulx	r12,rax,QWORD[16+rcx]
	mov	rdi,QWORD[((24+8))+rsp]
	mov	QWORD[((-32))+rbx],r10
	adcx	r11,rax
	adox	r12,r13
	mulx	r15,rax,QWORD[24+rcx]
	mov	rdx,r9
	mov	QWORD[((-24))+rbx],r11
	adcx	r12,rax
	adox	r15,rbp
	lea	rcx,[32+rcx]
	mov	QWORD[((-16))+rbx],r12
	jmp	NEAR $L$mulx4x_1st

ALIGN	32
$L$mulx4x_1st:
	adcx	r15,rbp
	mulx	rax,r10,QWORD[rsi]
	adcx	r10,r14
	mulx	r14,r11,QWORD[8+rsi]
	adcx	r11,rax
	mulx	rax,r12,QWORD[16+rsi]
	adcx	r12,r14
	mulx	r14,r13,QWORD[24+rsi]
DB	0x67,0x67
	mov	rdx,r8
	adcx	r13,rax
	adcx	r14,rbp
	lea	rsi,[32+rsi]
	lea	rbx,[32+rbx]

	adox	r10,r15
	mulx	r15,rax,QWORD[rcx]
	adcx	r10,rax
	adox	r11,r15
	mulx	r15,rax,QWORD[8+rcx]
	adcx	r11,rax
	adox	r12,r15
	mulx	r15,rax,QWORD[16+rcx]
	mov	QWORD[((-40))+rbx],r10
	adcx	r12,rax
	mov	QWORD[((-32))+rbx],r11
	adox	r13,r15
	mulx	r15,rax,QWORD[24+rcx]
	mov	rdx,r9
	mov	QWORD[((-24))+rbx],r12
	adcx	r13,rax
	adox	r15,rbp
	lea	rcx,[32+rcx]
	mov	QWORD[((-16))+rbx],r13

	dec	rdi
	jnz	NEAR $L$mulx4x_1st

	mov	rax,QWORD[8+rsp]
	adc	r15,rbp
	lea	rsi,[rax*1+rsi]
	add	r14,r15
	mov	rdi,QWORD[((8+8))+rsp]
	adc	rbp,rbp
	mov	QWORD[((-8))+rbx],r14
	jmp	NEAR $L$mulx4x_outer

ALIGN	32
$L$mulx4x_outer:
	lea	r10,[((16-256))+rbx]
	pxor	xmm4,xmm4
DB	0x67,0x67
	pxor	xmm5,xmm5
	movdqa	xmm0,XMMWORD[((-128))+rdi]
	movdqa	xmm1,XMMWORD[((-112))+rdi]
	movdqa	xmm2,XMMWORD[((-96))+rdi]
	pand	xmm0,XMMWORD[256+r10]
	movdqa	xmm3,XMMWORD[((-80))+rdi]
	pand	xmm1,XMMWORD[272+r10]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[288+r10]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[304+r10]
	por	xmm4,xmm2
	por	xmm5,xmm3
	movdqa	xmm0,XMMWORD[((-64))+rdi]
	movdqa	xmm1,XMMWORD[((-48))+rdi]
	movdqa	xmm2,XMMWORD[((-32))+rdi]
	pand	xmm0,XMMWORD[320+r10]
	movdqa	xmm3,XMMWORD[((-16))+rdi]
	pand	xmm1,XMMWORD[336+r10]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[352+r10]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[368+r10]
	por	xmm4,xmm2
	por	xmm5,xmm3
	movdqa	xmm0,XMMWORD[rdi]
	movdqa	xmm1,XMMWORD[16+rdi]
	movdqa	xmm2,XMMWORD[32+rdi]
	pand	xmm0,XMMWORD[384+r10]
	movdqa	xmm3,XMMWORD[48+rdi]
	pand	xmm1,XMMWORD[400+r10]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[416+r10]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[432+r10]
	por	xmm4,xmm2
	por	xmm5,xmm3
	movdqa	xmm0,XMMWORD[64+rdi]
	movdqa	xmm1,XMMWORD[80+rdi]
	movdqa	xmm2,XMMWORD[96+rdi]
	pand	xmm0,XMMWORD[448+r10]
	movdqa	xmm3,XMMWORD[112+rdi]
	pand	xmm1,XMMWORD[464+r10]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[480+r10]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[496+r10]
	por	xmm4,xmm2
	por	xmm5,xmm3
	por	xmm4,xmm5
	pshufd	xmm0,xmm4,0x4e
	por	xmm0,xmm4
	lea	rdi,[256+rdi]
DB	102,72,15,126,194

	mov	QWORD[rbx],rbp
	lea	rbx,[32+rax*1+rbx]
	mulx	r11,r8,QWORD[rsi]
	xor	rbp,rbp
	mov	r9,rdx
	mulx	r12,r14,QWORD[8+rsi]
	adox	r8,QWORD[((-32))+rbx]
	adcx	r11,r14
	mulx	r13,r15,QWORD[16+rsi]
	adox	r11,QWORD[((-24))+rbx]
	adcx	r12,r15
	mulx	r14,rdx,QWORD[24+rsi]
	adox	r12,QWORD[((-16))+rbx]
	adcx	r13,rdx
	lea	rcx,[rax*1+rcx]
	lea	rsi,[32+rsi]
	adox	r13,QWORD[((-8))+rbx]
	adcx	r14,rbp
	adox	r14,rbp

	mov	r15,r8
	imul	r8,QWORD[((32+8))+rsp]

	mov	rdx,r8
	xor	rbp,rbp
	mov	QWORD[((8+8))+rsp],rdi

	mulx	r10,rax,QWORD[rcx]
	adcx	r15,rax
	adox	r10,r11
	mulx	r11,rax,QWORD[8+rcx]
	adcx	r10,rax
	adox	r11,r12
	mulx	r12,rax,QWORD[16+rcx]
	adcx	r11,rax
	adox	r12,r13
	mulx	r15,rax,QWORD[24+rcx]
	mov	rdx,r9
	mov	rdi,QWORD[((24+8))+rsp]
	mov	QWORD[((-32))+rbx],r10
	adcx	r12,rax
	mov	QWORD[((-24))+rbx],r11
	adox	r15,rbp
	mov	QWORD[((-16))+rbx],r12
	lea	rcx,[32+rcx]
	jmp	NEAR $L$mulx4x_inner

ALIGN	32
$L$mulx4x_inner:
	mulx	rax,r10,QWORD[rsi]
	adcx	r15,rbp
	adox	r10,r14
	mulx	r14,r11,QWORD[8+rsi]
	adcx	r10,QWORD[rbx]
	adox	r11,rax
	mulx	rax,r12,QWORD[16+rsi]
	adcx	r11,QWORD[8+rbx]
	adox	r12,r14
	mulx	r14,r13,QWORD[24+rsi]
	mov	rdx,r8
	adcx	r12,QWORD[16+rbx]
	adox	r13,rax
	adcx	r13,QWORD[24+rbx]
	adox	r14,rbp
	lea	rsi,[32+rsi]
	lea	rbx,[32+rbx]
	adcx	r14,rbp

	adox	r10,r15
	mulx	r15,rax,QWORD[rcx]
	adcx	r10,rax
	adox	r11,r15
	mulx	r15,rax,QWORD[8+rcx]
	adcx	r11,rax
	adox	r12,r15
	mulx	r15,rax,QWORD[16+rcx]
	mov	QWORD[((-40))+rbx],r10
	adcx	r12,rax
	adox	r13,r15
	mov	QWORD[((-32))+rbx],r11
	mulx	r15,rax,QWORD[24+rcx]
	mov	rdx,r9
	lea	rcx,[32+rcx]
	mov	QWORD[((-24))+rbx],r12
	adcx	r13,rax
	adox	r15,rbp
	mov	QWORD[((-16))+rbx],r13

	dec	rdi
	jnz	NEAR $L$mulx4x_inner

	mov	rax,QWORD[((0+8))+rsp]
	adc	r15,rbp
	sub	rdi,QWORD[rbx]
	mov	rdi,QWORD[((8+8))+rsp]
	mov	r10,QWORD[((16+8))+rsp]
	adc	r14,r15
	lea	rsi,[rax*1+rsi]
	adc	rbp,rbp
	mov	QWORD[((-8))+rbx],r14

	cmp	rdi,r10
	jb	NEAR $L$mulx4x_outer

	mov	r10,QWORD[((-8))+rcx]
	mov	r8,rbp
	mov	r12,QWORD[rax*1+rcx]
	lea	rbp,[rax*1+rcx]
	mov	rcx,rax
	lea	rdi,[rax*1+rbx]
	xor	eax,eax
	xor	r15,r15
	sub	r10,r14
	adc	r15,r15
	or	r8,r15
	sar	rcx,3+2
	sub	rax,r8
	mov	rdx,QWORD[((56+8))+rsp]
	dec	r12
	mov	r13,QWORD[8+rbp]
	xor	r8,r8
	mov	r14,QWORD[16+rbp]
	mov	r15,QWORD[24+rbp]
	jmp	NEAR $L$sqrx4x_sub_entry



ALIGN	32
bn_powerx5:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_bn_powerx5:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



	mov	rax,rsp

$L$powerx5_enter:
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

$L$powerx5_prologue:

	shl	r9d,3
	lea	r10,[r9*2+r9]
	neg	r9
	mov	r8,QWORD[r8]








	lea	r11,[((-320))+r9*2+rsp]
	mov	rbp,rsp
	sub	r11,rdi
	and	r11,4095
	cmp	r10,r11
	jb	NEAR $L$pwrx_sp_alt
	sub	rbp,r11
	lea	rbp,[((-320))+r9*2+rbp]
	jmp	NEAR $L$pwrx_sp_done

ALIGN	32
$L$pwrx_sp_alt:
	lea	r10,[((4096-320))+r9*2]
	lea	rbp,[((-320))+r9*2+rbp]
	sub	r11,r10
	mov	r10,0
	cmovc	r11,r10
	sub	rbp,r11
$L$pwrx_sp_done:
	and	rbp,-64
	mov	r11,rsp
	sub	r11,rbp
	and	r11,-4096
	lea	rsp,[rbp*1+r11]
	mov	r10,QWORD[rsp]
	cmp	rsp,rbp
	ja	NEAR $L$pwrx_page_walk
	jmp	NEAR $L$pwrx_page_walk_done

$L$pwrx_page_walk:
	lea	rsp,[((-4096))+rsp]
	mov	r10,QWORD[rsp]
	cmp	rsp,rbp
	ja	NEAR $L$pwrx_page_walk
$L$pwrx_page_walk_done:

	mov	r10,r9
	neg	r9












	pxor	xmm0,xmm0
DB	102,72,15,110,207
DB	102,72,15,110,209
DB	102,73,15,110,218
DB	102,72,15,110,226
	mov	QWORD[32+rsp],r8
	mov	QWORD[40+rsp],rax

$L$powerx5_body:

	call	__bn_sqrx8x_internal
	call	__bn_postx4x_internal
	call	__bn_sqrx8x_internal
	call	__bn_postx4x_internal
	call	__bn_sqrx8x_internal
	call	__bn_postx4x_internal
	call	__bn_sqrx8x_internal
	call	__bn_postx4x_internal
	call	__bn_sqrx8x_internal
	call	__bn_postx4x_internal

	mov	r9,r10
	mov	rdi,rsi
DB	102,72,15,126,209
DB	102,72,15,126,226
	mov	rax,QWORD[40+rsp]

	call	mulx4x_internal

	mov	rsi,QWORD[40+rsp]

	mov	rax,1

	mov	r15,QWORD[((-48))+rsi]

	mov	r14,QWORD[((-40))+rsi]

	mov	r13,QWORD[((-32))+rsi]

	mov	r12,QWORD[((-24))+rsi]

	mov	rbp,QWORD[((-16))+rsi]

	mov	rbx,QWORD[((-8))+rsi]

	lea	rsp,[rsi]

$L$powerx5_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_bn_powerx5:

global	bn_sqrx8x_internal


ALIGN	32
bn_sqrx8x_internal:
__bn_sqrx8x_internal:









































	lea	rdi,[((48+8))+rsp]
	lea	rbp,[r9*1+rsi]
	mov	QWORD[((0+8))+rsp],r9
	mov	QWORD[((8+8))+rsp],rbp
	jmp	NEAR $L$sqr8x_zero_start

ALIGN	32
DB	0x66,0x66,0x66,0x2e,0x0f,0x1f,0x84,0x00,0x00,0x00,0x00,0x00
$L$sqrx8x_zero:
DB	0x3e
	movdqa	XMMWORD[rdi],xmm0
	movdqa	XMMWORD[16+rdi],xmm0
	movdqa	XMMWORD[32+rdi],xmm0
	movdqa	XMMWORD[48+rdi],xmm0
$L$sqr8x_zero_start:
	movdqa	XMMWORD[64+rdi],xmm0
	movdqa	XMMWORD[80+rdi],xmm0
	movdqa	XMMWORD[96+rdi],xmm0
	movdqa	XMMWORD[112+rdi],xmm0
	lea	rdi,[128+rdi]
	sub	r9,64
	jnz	NEAR $L$sqrx8x_zero

	mov	rdx,QWORD[rsi]

	xor	r10,r10
	xor	r11,r11
	xor	r12,r12
	xor	r13,r13
	xor	r14,r14
	xor	r15,r15
	lea	rdi,[((48+8))+rsp]
	xor	rbp,rbp
	jmp	NEAR $L$sqrx8x_outer_loop

ALIGN	32
$L$sqrx8x_outer_loop:
	mulx	rax,r8,QWORD[8+rsi]
	adcx	r8,r9
	adox	r10,rax
	mulx	rax,r9,QWORD[16+rsi]
	adcx	r9,r10
	adox	r11,rax
DB	0xc4,0xe2,0xab,0xf6,0x86,0x18,0x00,0x00,0x00
	adcx	r10,r11
	adox	r12,rax
DB	0xc4,0xe2,0xa3,0xf6,0x86,0x20,0x00,0x00,0x00
	adcx	r11,r12
	adox	r13,rax
	mulx	rax,r12,QWORD[40+rsi]
	adcx	r12,r13
	adox	r14,rax
	mulx	rax,r13,QWORD[48+rsi]
	adcx	r13,r14
	adox	rax,r15
	mulx	r15,r14,QWORD[56+rsi]
	mov	rdx,QWORD[8+rsi]
	adcx	r14,rax
	adox	r15,rbp
	adc	r15,QWORD[64+rdi]
	mov	QWORD[8+rdi],r8
	mov	QWORD[16+rdi],r9
	sbb	rcx,rcx
	xor	rbp,rbp


	mulx	rbx,r8,QWORD[16+rsi]
	mulx	rax,r9,QWORD[24+rsi]
	adcx	r8,r10
	adox	r9,rbx
	mulx	rbx,r10,QWORD[32+rsi]
	adcx	r9,r11
	adox	r10,rax
DB	0xc4,0xe2,0xa3,0xf6,0x86,0x28,0x00,0x00,0x00
	adcx	r10,r12
	adox	r11,rbx
DB	0xc4,0xe2,0x9b,0xf6,0x9e,0x30,0x00,0x00,0x00
	adcx	r11,r13
	adox	r12,r14
DB	0xc4,0x62,0x93,0xf6,0xb6,0x38,0x00,0x00,0x00
	mov	rdx,QWORD[16+rsi]
	adcx	r12,rax
	adox	r13,rbx
	adcx	r13,r15
	adox	r14,rbp
	adcx	r14,rbp

	mov	QWORD[24+rdi],r8
	mov	QWORD[32+rdi],r9

	mulx	rbx,r8,QWORD[24+rsi]
	mulx	rax,r9,QWORD[32+rsi]
	adcx	r8,r10
	adox	r9,rbx
	mulx	rbx,r10,QWORD[40+rsi]
	adcx	r9,r11
	adox	r10,rax
DB	0xc4,0xe2,0xa3,0xf6,0x86,0x30,0x00,0x00,0x00
	adcx	r10,r12
	adox	r11,r13
DB	0xc4,0x62,0x9b,0xf6,0xae,0x38,0x00,0x00,0x00
DB	0x3e
	mov	rdx,QWORD[24+rsi]
	adcx	r11,rbx
	adox	r12,rax
	adcx	r12,r14
	mov	QWORD[40+rdi],r8
	mov	QWORD[48+rdi],r9
	mulx	rax,r8,QWORD[32+rsi]
	adox	r13,rbp
	adcx	r13,rbp

	mulx	rbx,r9,QWORD[40+rsi]
	adcx	r8,r10
	adox	r9,rax
	mulx	rax,r10,QWORD[48+rsi]
	adcx	r9,r11
	adox	r10,r12
	mulx	r12,r11,QWORD[56+rsi]
	mov	rdx,QWORD[32+rsi]
	mov	r14,QWORD[40+rsi]
	adcx	r10,rbx
	adox	r11,rax
	mov	r15,QWORD[48+rsi]
	adcx	r11,r13
	adox	r12,rbp
	adcx	r12,rbp

	mov	QWORD[56+rdi],r8
	mov	QWORD[64+rdi],r9

	mulx	rax,r9,r14
	mov	r8,QWORD[56+rsi]
	adcx	r9,r10
	mulx	rbx,r10,r15
	adox	r10,rax
	adcx	r10,r11
	mulx	rax,r11,r8
	mov	rdx,r14
	adox	r11,rbx
	adcx	r11,r12

	adcx	rax,rbp

	mulx	rbx,r14,r15
	mulx	r13,r12,r8
	mov	rdx,r15
	lea	rsi,[64+rsi]
	adcx	r11,r14
	adox	r12,rbx
	adcx	r12,rax
	adox	r13,rbp

DB	0x67,0x67
	mulx	r14,r8,r8
	adcx	r13,r8
	adcx	r14,rbp

	cmp	rsi,QWORD[((8+8))+rsp]
	je	NEAR $L$sqrx8x_outer_break

	neg	rcx
	mov	rcx,-8
	mov	r15,rbp
	mov	r8,QWORD[64+rdi]
	adcx	r9,QWORD[72+rdi]
	adcx	r10,QWORD[80+rdi]
	adcx	r11,QWORD[88+rdi]
	adc	r12,QWORD[96+rdi]
	adc	r13,QWORD[104+rdi]
	adc	r14,QWORD[112+rdi]
	adc	r15,QWORD[120+rdi]
	lea	rbp,[rsi]
	lea	rdi,[128+rdi]
	sbb	rax,rax

	mov	rdx,QWORD[((-64))+rsi]
	mov	QWORD[((16+8))+rsp],rax
	mov	QWORD[((24+8))+rsp],rdi


	xor	eax,eax
	jmp	NEAR $L$sqrx8x_loop

ALIGN	32
$L$sqrx8x_loop:
	mov	rbx,r8
	mulx	r8,rax,QWORD[rbp]
	adcx	rbx,rax
	adox	r8,r9

	mulx	r9,rax,QWORD[8+rbp]
	adcx	r8,rax
	adox	r9,r10

	mulx	r10,rax,QWORD[16+rbp]
	adcx	r9,rax
	adox	r10,r11

	mulx	r11,rax,QWORD[24+rbp]
	adcx	r10,rax
	adox	r11,r12

DB	0xc4,0x62,0xfb,0xf6,0xa5,0x20,0x00,0x00,0x00
	adcx	r11,rax
	adox	r12,r13

	mulx	r13,rax,QWORD[40+rbp]
	adcx	r12,rax
	adox	r13,r14

	mulx	r14,rax,QWORD[48+rbp]
	mov	QWORD[rcx*8+rdi],rbx
	mov	ebx,0
	adcx	r13,rax
	adox	r14,r15

DB	0xc4,0x62,0xfb,0xf6,0xbd,0x38,0x00,0x00,0x00
	mov	rdx,QWORD[8+rcx*8+rsi]
	adcx	r14,rax
	adox	r15,rbx
	adcx	r15,rbx

DB	0x67
	inc	rcx
	jnz	NEAR $L$sqrx8x_loop

	lea	rbp,[64+rbp]
	mov	rcx,-8
	cmp	rbp,QWORD[((8+8))+rsp]
	je	NEAR $L$sqrx8x_break

	sub	rbx,QWORD[((16+8))+rsp]
DB	0x66
	mov	rdx,QWORD[((-64))+rsi]
	adcx	r8,QWORD[rdi]
	adcx	r9,QWORD[8+rdi]
	adc	r10,QWORD[16+rdi]
	adc	r11,QWORD[24+rdi]
	adc	r12,QWORD[32+rdi]
	adc	r13,QWORD[40+rdi]
	adc	r14,QWORD[48+rdi]
	adc	r15,QWORD[56+rdi]
	lea	rdi,[64+rdi]
DB	0x67
	sbb	rax,rax
	xor	ebx,ebx
	mov	QWORD[((16+8))+rsp],rax
	jmp	NEAR $L$sqrx8x_loop

ALIGN	32
$L$sqrx8x_break:
	xor	rbp,rbp
	sub	rbx,QWORD[((16+8))+rsp]
	adcx	r8,rbp
	mov	rcx,QWORD[((24+8))+rsp]
	adcx	r9,rbp
	mov	rdx,QWORD[rsi]
	adc	r10,0
	mov	QWORD[rdi],r8
	adc	r11,0
	adc	r12,0
	adc	r13,0
	adc	r14,0
	adc	r15,0
	cmp	rdi,rcx
	je	NEAR $L$sqrx8x_outer_loop

	mov	QWORD[8+rdi],r9
	mov	r9,QWORD[8+rcx]
	mov	QWORD[16+rdi],r10
	mov	r10,QWORD[16+rcx]
	mov	QWORD[24+rdi],r11
	mov	r11,QWORD[24+rcx]
	mov	QWORD[32+rdi],r12
	mov	r12,QWORD[32+rcx]
	mov	QWORD[40+rdi],r13
	mov	r13,QWORD[40+rcx]
	mov	QWORD[48+rdi],r14
	mov	r14,QWORD[48+rcx]
	mov	QWORD[56+rdi],r15
	mov	r15,QWORD[56+rcx]
	mov	rdi,rcx
	jmp	NEAR $L$sqrx8x_outer_loop

ALIGN	32
$L$sqrx8x_outer_break:
	mov	QWORD[72+rdi],r9
DB	102,72,15,126,217
	mov	QWORD[80+rdi],r10
	mov	QWORD[88+rdi],r11
	mov	QWORD[96+rdi],r12
	mov	QWORD[104+rdi],r13
	mov	QWORD[112+rdi],r14
	lea	rdi,[((48+8))+rsp]
	mov	rdx,QWORD[rcx*1+rsi]

	mov	r11,QWORD[8+rdi]
	xor	r10,r10
	mov	r9,QWORD[((0+8))+rsp]
	adox	r11,r11
	mov	r12,QWORD[16+rdi]
	mov	r13,QWORD[24+rdi]


ALIGN	32
$L$sqrx4x_shift_n_add:
	mulx	rbx,rax,rdx
	adox	r12,r12
	adcx	rax,r10
DB	0x48,0x8b,0x94,0x0e,0x08,0x00,0x00,0x00
DB	0x4c,0x8b,0x97,0x20,0x00,0x00,0x00
	adox	r13,r13
	adcx	rbx,r11
	mov	r11,QWORD[40+rdi]
	mov	QWORD[rdi],rax
	mov	QWORD[8+rdi],rbx

	mulx	rbx,rax,rdx
	adox	r10,r10
	adcx	rax,r12
	mov	rdx,QWORD[16+rcx*1+rsi]
	mov	r12,QWORD[48+rdi]
	adox	r11,r11
	adcx	rbx,r13
	mov	r13,QWORD[56+rdi]
	mov	QWORD[16+rdi],rax
	mov	QWORD[24+rdi],rbx

	mulx	rbx,rax,rdx
	adox	r12,r12
	adcx	rax,r10
	mov	rdx,QWORD[24+rcx*1+rsi]
	lea	rcx,[32+rcx]
	mov	r10,QWORD[64+rdi]
	adox	r13,r13
	adcx	rbx,r11
	mov	r11,QWORD[72+rdi]
	mov	QWORD[32+rdi],rax
	mov	QWORD[40+rdi],rbx

	mulx	rbx,rax,rdx
	adox	r10,r10
	adcx	rax,r12
	jrcxz	$L$sqrx4x_shift_n_add_break
DB	0x48,0x8b,0x94,0x0e,0x00,0x00,0x00,0x00
	adox	r11,r11
	adcx	rbx,r13
	mov	r12,QWORD[80+rdi]
	mov	r13,QWORD[88+rdi]
	mov	QWORD[48+rdi],rax
	mov	QWORD[56+rdi],rbx
	lea	rdi,[64+rdi]
	nop
	jmp	NEAR $L$sqrx4x_shift_n_add

ALIGN	32
$L$sqrx4x_shift_n_add_break:
	adcx	rbx,r13
	mov	QWORD[48+rdi],rax
	mov	QWORD[56+rdi],rbx
	lea	rdi,[64+rdi]
DB	102,72,15,126,213
__bn_sqrx8x_reduction:
	xor	eax,eax
	mov	rbx,QWORD[((32+8))+rsp]
	mov	rdx,QWORD[((48+8))+rsp]
	lea	rcx,[((-64))+r9*1+rbp]

	mov	QWORD[((0+8))+rsp],rcx
	mov	QWORD[((8+8))+rsp],rdi

	lea	rdi,[((48+8))+rsp]
	jmp	NEAR $L$sqrx8x_reduction_loop

ALIGN	32
$L$sqrx8x_reduction_loop:
	mov	r9,QWORD[8+rdi]
	mov	r10,QWORD[16+rdi]
	mov	r11,QWORD[24+rdi]
	mov	r12,QWORD[32+rdi]
	mov	r8,rdx
	imul	rdx,rbx
	mov	r13,QWORD[40+rdi]
	mov	r14,QWORD[48+rdi]
	mov	r15,QWORD[56+rdi]
	mov	QWORD[((24+8))+rsp],rax

	lea	rdi,[64+rdi]
	xor	rsi,rsi
	mov	rcx,-8
	jmp	NEAR $L$sqrx8x_reduce

ALIGN	32
$L$sqrx8x_reduce:
	mov	rbx,r8
	mulx	r8,rax,QWORD[rbp]
	adcx	rax,rbx
	adox	r8,r9

	mulx	r9,rbx,QWORD[8+rbp]
	adcx	r8,rbx
	adox	r9,r10

	mulx	r10,rbx,QWORD[16+rbp]
	adcx	r9,rbx
	adox	r10,r11

	mulx	r11,rbx,QWORD[24+rbp]
	adcx	r10,rbx
	adox	r11,r12

DB	0xc4,0x62,0xe3,0xf6,0xa5,0x20,0x00,0x00,0x00
	mov	rax,rdx
	mov	rdx,r8
	adcx	r11,rbx
	adox	r12,r13

	mulx	rdx,rbx,QWORD[((32+8))+rsp]
	mov	rdx,rax
	mov	QWORD[((64+48+8))+rcx*8+rsp],rax

	mulx	r13,rax,QWORD[40+rbp]
	adcx	r12,rax
	adox	r13,r14

	mulx	r14,rax,QWORD[48+rbp]
	adcx	r13,rax
	adox	r14,r15

	mulx	r15,rax,QWORD[56+rbp]
	mov	rdx,rbx
	adcx	r14,rax
	adox	r15,rsi
	adcx	r15,rsi

DB	0x67,0x67,0x67
	inc	rcx
	jnz	NEAR $L$sqrx8x_reduce

	mov	rax,rsi
	cmp	rbp,QWORD[((0+8))+rsp]
	jae	NEAR $L$sqrx8x_no_tail

	mov	rdx,QWORD[((48+8))+rsp]
	add	r8,QWORD[rdi]
	lea	rbp,[64+rbp]
	mov	rcx,-8
	adcx	r9,QWORD[8+rdi]
	adcx	r10,QWORD[16+rdi]
	adc	r11,QWORD[24+rdi]
	adc	r12,QWORD[32+rdi]
	adc	r13,QWORD[40+rdi]
	adc	r14,QWORD[48+rdi]
	adc	r15,QWORD[56+rdi]
	lea	rdi,[64+rdi]
	sbb	rax,rax

	xor	rsi,rsi
	mov	QWORD[((16+8))+rsp],rax
	jmp	NEAR $L$sqrx8x_tail

ALIGN	32
$L$sqrx8x_tail:
	mov	rbx,r8
	mulx	r8,rax,QWORD[rbp]
	adcx	rbx,rax
	adox	r8,r9

	mulx	r9,rax,QWORD[8+rbp]
	adcx	r8,rax
	adox	r9,r10

	mulx	r10,rax,QWORD[16+rbp]
	adcx	r9,rax
	adox	r10,r11

	mulx	r11,rax,QWORD[24+rbp]
	adcx	r10,rax
	adox	r11,r12

DB	0xc4,0x62,0xfb,0xf6,0xa5,0x20,0x00,0x00,0x00
	adcx	r11,rax
	adox	r12,r13

	mulx	r13,rax,QWORD[40+rbp]
	adcx	r12,rax
	adox	r13,r14

	mulx	r14,rax,QWORD[48+rbp]
	adcx	r13,rax
	adox	r14,r15

	mulx	r15,rax,QWORD[56+rbp]
	mov	rdx,QWORD[((72+48+8))+rcx*8+rsp]
	adcx	r14,rax
	adox	r15,rsi
	mov	QWORD[rcx*8+rdi],rbx
	mov	rbx,r8
	adcx	r15,rsi

	inc	rcx
	jnz	NEAR $L$sqrx8x_tail

	cmp	rbp,QWORD[((0+8))+rsp]
	jae	NEAR $L$sqrx8x_tail_done

	sub	rsi,QWORD[((16+8))+rsp]
	mov	rdx,QWORD[((48+8))+rsp]
	lea	rbp,[64+rbp]
	adc	r8,QWORD[rdi]
	adc	r9,QWORD[8+rdi]
	adc	r10,QWORD[16+rdi]
	adc	r11,QWORD[24+rdi]
	adc	r12,QWORD[32+rdi]
	adc	r13,QWORD[40+rdi]
	adc	r14,QWORD[48+rdi]
	adc	r15,QWORD[56+rdi]
	lea	rdi,[64+rdi]
	sbb	rax,rax
	sub	rcx,8

	xor	rsi,rsi
	mov	QWORD[((16+8))+rsp],rax
	jmp	NEAR $L$sqrx8x_tail

ALIGN	32
$L$sqrx8x_tail_done:
	xor	rax,rax
	add	r8,QWORD[((24+8))+rsp]
	adc	r9,0
	adc	r10,0
	adc	r11,0
	adc	r12,0
	adc	r13,0
	adc	r14,0
	adc	r15,0
	adc	rax,0

	sub	rsi,QWORD[((16+8))+rsp]
$L$sqrx8x_no_tail:
	adc	r8,QWORD[rdi]
DB	102,72,15,126,217
	adc	r9,QWORD[8+rdi]
	mov	rsi,QWORD[56+rbp]
DB	102,72,15,126,213
	adc	r10,QWORD[16+rdi]
	adc	r11,QWORD[24+rdi]
	adc	r12,QWORD[32+rdi]
	adc	r13,QWORD[40+rdi]
	adc	r14,QWORD[48+rdi]
	adc	r15,QWORD[56+rdi]
	adc	rax,0

	mov	rbx,QWORD[((32+8))+rsp]
	mov	rdx,QWORD[64+rcx*1+rdi]

	mov	QWORD[rdi],r8
	lea	r8,[64+rdi]
	mov	QWORD[8+rdi],r9
	mov	QWORD[16+rdi],r10
	mov	QWORD[24+rdi],r11
	mov	QWORD[32+rdi],r12
	mov	QWORD[40+rdi],r13
	mov	QWORD[48+rdi],r14
	mov	QWORD[56+rdi],r15

	lea	rdi,[64+rcx*1+rdi]
	cmp	r8,QWORD[((8+8))+rsp]
	jb	NEAR $L$sqrx8x_reduction_loop
	DB	0F3h,0C3h		;repret


ALIGN	32
__bn_postx4x_internal:

	mov	r12,QWORD[rbp]
	mov	r10,rcx
	mov	r9,rcx
	neg	rax
	sar	rcx,3+2

DB	102,72,15,126,202
DB	102,72,15,126,206
	dec	r12
	mov	r13,QWORD[8+rbp]
	xor	r8,r8
	mov	r14,QWORD[16+rbp]
	mov	r15,QWORD[24+rbp]
	jmp	NEAR $L$sqrx4x_sub_entry

ALIGN	16
$L$sqrx4x_sub:
	mov	r12,QWORD[rbp]
	mov	r13,QWORD[8+rbp]
	mov	r14,QWORD[16+rbp]
	mov	r15,QWORD[24+rbp]
$L$sqrx4x_sub_entry:
	andn	r12,r12,rax
	lea	rbp,[32+rbp]
	andn	r13,r13,rax
	andn	r14,r14,rax
	andn	r15,r15,rax

	neg	r8
	adc	r12,QWORD[rdi]
	adc	r13,QWORD[8+rdi]
	adc	r14,QWORD[16+rdi]
	adc	r15,QWORD[24+rdi]
	mov	QWORD[rdx],r12
	lea	rdi,[32+rdi]
	mov	QWORD[8+rdx],r13
	sbb	r8,r8
	mov	QWORD[16+rdx],r14
	mov	QWORD[24+rdx],r15
	lea	rdx,[32+rdx]

	inc	rcx
	jnz	NEAR $L$sqrx4x_sub

	neg	r9

	DB	0F3h,0C3h		;repret


global	bn_get_bits5

ALIGN	16
bn_get_bits5:

	lea	r10,[rcx]
	lea	r11,[1+rcx]
	mov	ecx,edx
	shr	edx,4
	and	ecx,15
	lea	eax,[((-8))+rcx]
	cmp	ecx,11
	cmova	r10,r11
	cmova	ecx,eax
	movzx	eax,WORD[rdx*2+r10]
	shr	eax,cl
	and	eax,31
	DB	0F3h,0C3h		;repret



global	bn_scatter5

ALIGN	16
bn_scatter5:

	cmp	edx,0
	jz	NEAR $L$scatter_epilogue
	lea	r8,[r9*8+r8]
$L$scatter:
	mov	rax,QWORD[rcx]
	lea	rcx,[8+rcx]
	mov	QWORD[r8],rax
	lea	r8,[256+r8]
	sub	edx,1
	jnz	NEAR $L$scatter
$L$scatter_epilogue:
	DB	0F3h,0C3h		;repret



global	bn_gather5

ALIGN	32
bn_gather5:
$L$SEH_begin_bn_gather5:


DB	0x4c,0x8d,0x14,0x24
DB	0x48,0x81,0xec,0x08,0x01,0x00,0x00
	lea	rax,[$L$inc]
	and	rsp,-16

	movd	xmm5,r9d
	movdqa	xmm0,XMMWORD[rax]
	movdqa	xmm1,XMMWORD[16+rax]
	lea	r11,[128+r8]
	lea	rax,[128+rsp]

	pshufd	xmm5,xmm5,0
	movdqa	xmm4,xmm1
	movdqa	xmm2,xmm1
	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
	movdqa	xmm3,xmm4

	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[(-128)+rax],xmm0
	movdqa	xmm0,xmm4

	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[(-112)+rax],xmm1
	movdqa	xmm1,xmm4

	paddd	xmm0,xmm3
	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[(-96)+rax],xmm2
	movdqa	xmm2,xmm4
	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
	movdqa	XMMWORD[(-80)+rax],xmm3
	movdqa	xmm3,xmm4

	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[(-64)+rax],xmm0
	movdqa	xmm0,xmm4

	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[(-48)+rax],xmm1
	movdqa	xmm1,xmm4

	paddd	xmm0,xmm3
	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[(-32)+rax],xmm2
	movdqa	xmm2,xmm4
	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
	movdqa	XMMWORD[(-16)+rax],xmm3
	movdqa	xmm3,xmm4

	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[rax],xmm0
	movdqa	xmm0,xmm4

	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[16+rax],xmm1
	movdqa	xmm1,xmm4

	paddd	xmm0,xmm3
	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[32+rax],xmm2
	movdqa	xmm2,xmm4
	paddd	xmm1,xmm0
	pcmpeqd	xmm0,xmm5
	movdqa	XMMWORD[48+rax],xmm3
	movdqa	xmm3,xmm4

	paddd	xmm2,xmm1
	pcmpeqd	xmm1,xmm5
	movdqa	XMMWORD[64+rax],xmm0
	movdqa	xmm0,xmm4

	paddd	xmm3,xmm2
	pcmpeqd	xmm2,xmm5
	movdqa	XMMWORD[80+rax],xmm1
	movdqa	xmm1,xmm4

	paddd	xmm0,xmm3
	pcmpeqd	xmm3,xmm5
	movdqa	XMMWORD[96+rax],xmm2
	movdqa	xmm2,xmm4
	movdqa	XMMWORD[112+rax],xmm3
	jmp	NEAR $L$gather

ALIGN	32
$L$gather:
	pxor	xmm4,xmm4
	pxor	xmm5,xmm5
	movdqa	xmm0,XMMWORD[((-128))+r11]
	movdqa	xmm1,XMMWORD[((-112))+r11]
	movdqa	xmm2,XMMWORD[((-96))+r11]
	pand	xmm0,XMMWORD[((-128))+rax]
	movdqa	xmm3,XMMWORD[((-80))+r11]
	pand	xmm1,XMMWORD[((-112))+rax]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[((-96))+rax]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[((-80))+rax]
	por	xmm4,xmm2
	por	xmm5,xmm3
	movdqa	xmm0,XMMWORD[((-64))+r11]
	movdqa	xmm1,XMMWORD[((-48))+r11]
	movdqa	xmm2,XMMWORD[((-32))+r11]
	pand	xmm0,XMMWORD[((-64))+rax]
	movdqa	xmm3,XMMWORD[((-16))+r11]
	pand	xmm1,XMMWORD[((-48))+rax]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[((-32))+rax]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[((-16))+rax]
	por	xmm4,xmm2
	por	xmm5,xmm3
	movdqa	xmm0,XMMWORD[r11]
	movdqa	xmm1,XMMWORD[16+r11]
	movdqa	xmm2,XMMWORD[32+r11]
	pand	xmm0,XMMWORD[rax]
	movdqa	xmm3,XMMWORD[48+r11]
	pand	xmm1,XMMWORD[16+rax]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[32+rax]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[48+rax]
	por	xmm4,xmm2
	por	xmm5,xmm3
	movdqa	xmm0,XMMWORD[64+r11]
	movdqa	xmm1,XMMWORD[80+r11]
	movdqa	xmm2,XMMWORD[96+r11]
	pand	xmm0,XMMWORD[64+rax]
	movdqa	xmm3,XMMWORD[112+r11]
	pand	xmm1,XMMWORD[80+rax]
	por	xmm4,xmm0
	pand	xmm2,XMMWORD[96+rax]
	por	xmm5,xmm1
	pand	xmm3,XMMWORD[112+rax]
	por	xmm4,xmm2
	por	xmm5,xmm3
	por	xmm4,xmm5
	lea	r11,[256+r11]
	pshufd	xmm0,xmm4,0x4e
	por	xmm0,xmm4
	movq	QWORD[rcx],xmm0
	lea	rcx,[8+rcx]
	sub	edx,1
	jnz	NEAR $L$gather

	lea	rsp,[r10]
	DB	0F3h,0C3h		;repret
$L$SEH_end_bn_gather5:


ALIGN	64
$L$inc:
	DD	0,0,1,1
	DD	2,2,2,2
DB	77,111,110,116,103,111,109,101,114,121,32,77,117,108,116,105
DB	112,108,105,99,97,116,105,111,110,32,119,105,116,104,32,115
DB	99,97,116,116,101,114,47,103,97,116,104,101,114,32,102,111
DB	114,32,120,56,54,95,54,52,44,32,67,82,89,80,84,79
DB	71,65,77,83,32,98,121,32,60,97,112,112,114,111,64,111
DB	112,101,110,115,115,108,46,111,114,103,62,0
EXTERN	__imp_RtlVirtualUnwind

ALIGN	16
mul_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	sub	rsp,64

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$common_seh_tail

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$common_pop_regs

	mov	rax,QWORD[152+r8]

	mov	r10d,DWORD[8+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$common_seh_tail

	lea	r10,[$L$mul_epilogue]
	cmp	rbx,r10
	ja	NEAR $L$body_40

	mov	r10,QWORD[192+r8]
	mov	rax,QWORD[8+r10*8+rax]

	jmp	NEAR $L$common_pop_regs

$L$body_40:
	mov	rax,QWORD[40+rax]
$L$common_pop_regs:
	mov	rbx,QWORD[((-8))+rax]
	mov	rbp,QWORD[((-16))+rax]
	mov	r12,QWORD[((-24))+rax]
	mov	r13,QWORD[((-32))+rax]
	mov	r14,QWORD[((-40))+rax]
	mov	r15,QWORD[((-48))+rax]
	mov	QWORD[144+r8],rbx
	mov	QWORD[160+r8],rbp
	mov	QWORD[216+r8],r12
	mov	QWORD[224+r8],r13
	mov	QWORD[232+r8],r14
	mov	QWORD[240+r8],r15

$L$common_seh_tail:
	mov	rdi,QWORD[8+rax]
	mov	rsi,QWORD[16+rax]
	mov	QWORD[152+r8],rax
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi

	mov	rdi,QWORD[40+r9]
	mov	rsi,r8
	mov	ecx,154
	DD	0xa548f3fc

	mov	rsi,r9
	xor	rcx,rcx
	mov	rdx,QWORD[8+rsi]
	mov	r8,QWORD[rsi]
	mov	r9,QWORD[16+rsi]
	mov	r10,QWORD[40+rsi]
	lea	r11,[56+rsi]
	lea	r12,[24+rsi]
	mov	QWORD[32+rsp],r10
	mov	QWORD[40+rsp],r11
	mov	QWORD[48+rsp],r12
	mov	QWORD[56+rsp],rcx
	call	QWORD[__imp_RtlVirtualUnwind]

	mov	eax,1
	add	rsp,64
	popfq
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	pop	rbx
	pop	rdi
	pop	rsi
	DB	0F3h,0C3h		;repret


section	.pdata rdata align=4
ALIGN	4
	DD	$L$SEH_begin_bn_mul_mont_gather5 wrt ..imagebase
	DD	$L$SEH_end_bn_mul_mont_gather5 wrt ..imagebase
	DD	$L$SEH_info_bn_mul_mont_gather5 wrt ..imagebase

	DD	$L$SEH_begin_bn_mul4x_mont_gather5 wrt ..imagebase
	DD	$L$SEH_end_bn_mul4x_mont_gather5 wrt ..imagebase
	DD	$L$SEH_info_bn_mul4x_mont_gather5 wrt ..imagebase

	DD	$L$SEH_begin_bn_power5 wrt ..imagebase
	DD	$L$SEH_end_bn_power5 wrt ..imagebase
	DD	$L$SEH_info_bn_power5 wrt ..imagebase
	DD	$L$SEH_begin_bn_mulx4x_mont_gather5 wrt ..imagebase
	DD	$L$SEH_end_bn_mulx4x_mont_gather5 wrt ..imagebase
	DD	$L$SEH_info_bn_mulx4x_mont_gather5 wrt ..imagebase

	DD	$L$SEH_begin_bn_powerx5 wrt ..imagebase
	DD	$L$SEH_end_bn_powerx5 wrt ..imagebase
	DD	$L$SEH_info_bn_powerx5 wrt ..imagebase
	DD	$L$SEH_begin_bn_gather5 wrt ..imagebase
	DD	$L$SEH_end_bn_gather5 wrt ..imagebase
	DD	$L$SEH_info_bn_gather5 wrt ..imagebase

section	.xdata rdata align=8
ALIGN	8
$L$SEH_info_bn_mul_mont_gather5:
DB	9,0,0,0
	DD	mul_handler wrt ..imagebase
	DD	$L$mul_body wrt ..imagebase,$L$mul_body wrt ..imagebase,$L$mul_epilogue wrt ..imagebase
ALIGN	8
$L$SEH_info_bn_mul4x_mont_gather5:
DB	9,0,0,0
	DD	mul_handler wrt ..imagebase
	DD	$L$mul4x_prologue wrt ..imagebase,$L$mul4x_body wrt ..imagebase,$L$mul4x_epilogue wrt ..imagebase
ALIGN	8
$L$SEH_info_bn_power5:
DB	9,0,0,0
	DD	mul_handler wrt ..imagebase
	DD	$L$power5_prologue wrt ..imagebase,$L$power5_body wrt ..imagebase,$L$power5_epilogue wrt ..imagebase
ALIGN	8
$L$SEH_info_bn_mulx4x_mont_gather5:
DB	9,0,0,0
	DD	mul_handler wrt ..imagebase
	DD	$L$mulx4x_prologue wrt ..imagebase,$L$mulx4x_body wrt ..imagebase,$L$mulx4x_epilogue wrt ..imagebase
ALIGN	8
$L$SEH_info_bn_powerx5:
DB	9,0,0,0
	DD	mul_handler wrt ..imagebase
	DD	$L$powerx5_prologue wrt ..imagebase,$L$powerx5_body wrt ..imagebase,$L$powerx5_epilogue wrt ..imagebase
ALIGN	8
$L$SEH_info_bn_gather5:
DB	0x01,0x0b,0x03,0x0a
DB	0x0b,0x01,0x21,0x00
DB	0x04,0xa3,0x00,0x00
ALIGN	8
                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/buildinf.h                          0000664 0000000 0000000 00000001371 14746647661 0025765 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        /*
 * WARNING: do not edit!
 * Generated by util/mkbuildinf.pl
 *
 * Copyright 2014-2017 The OpenSSL Project Authors. All Rights Reserved.
 *
 * Licensed under the Apache License 2.0 (the "License").  You may not use
 * this file except in compliance with the License.  You can obtain a copy
 * in the file LICENSE in the source distribution or at
 * https://www.openssl.org/source/license.html
 */

#define PLATFORM "platform: "
#define DATE "built on: Mon Sep 30 17:15:29 2024 UTC"

/*
 * Generate compiler_flags as an array of individual characters. This is a
 * workaround for the situation where CFLAGS gets too long for a C90 string
 * literal
 */
static const char compiler_flags[] = {
    'c','o','m','p','i','l','e','r',':',' ','c','c',' ',' ','\0'
};
                                                                                                                                                                                                                                                                       node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/camellia/                           0000775 0000000 0000000 00000000000 14746647661 0025565 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/camellia/cmll-x86_64.asm            0000664 0000000 0000000 00000116715 14746647661 0030165 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        default	rel
%define XMMWORD
%define YMMWORD
%define ZMMWORD
section	.text code align=64



global	Camellia_EncryptBlock

ALIGN	16
Camellia_EncryptBlock:

	mov	eax,128
	sub	eax,ecx
	mov	ecx,3
	adc	ecx,0
	jmp	NEAR $L$enc_rounds



global	Camellia_EncryptBlock_Rounds

ALIGN	16
$L$enc_rounds:
Camellia_EncryptBlock_Rounds:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_Camellia_EncryptBlock_Rounds:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9



	push	rbx

	push	rbp

	push	r13

	push	r14

	push	r15

$L$enc_prologue:


	mov	r13,rcx
	mov	r14,rdx

	shl	edi,6
	lea	rbp,[$L$Camellia_SBOX]
	lea	r15,[rdi*1+r14]

	mov	r8d,DWORD[rsi]
	mov	r9d,DWORD[4+rsi]
	mov	r10d,DWORD[8+rsi]
	bswap	r8d
	mov	r11d,DWORD[12+rsi]
	bswap	r9d
	bswap	r10d
	bswap	r11d

	call	_x86_64_Camellia_encrypt

	bswap	r8d
	bswap	r9d
	bswap	r10d
	mov	DWORD[r13],r8d
	bswap	r11d
	mov	DWORD[4+r13],r9d
	mov	DWORD[8+r13],r10d
	mov	DWORD[12+r13],r11d

	mov	r15,QWORD[rsp]

	mov	r14,QWORD[8+rsp]

	mov	r13,QWORD[16+rsp]

	mov	rbp,QWORD[24+rsp]

	mov	rbx,QWORD[32+rsp]

	lea	rsp,[40+rsp]

$L$enc_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_Camellia_EncryptBlock_Rounds:


ALIGN	16
_x86_64_Camellia_encrypt:

	xor	r9d,DWORD[r14]
	xor	r8d,DWORD[4+r14]
	xor	r11d,DWORD[8+r14]
	xor	r10d,DWORD[12+r14]
ALIGN	16
$L$eloop:
	mov	ebx,DWORD[16+r14]
	mov	eax,DWORD[20+r14]

	xor	eax,r8d
	xor	ebx,r9d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[24+r14]
	mov	eax,DWORD[28+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r10d,ecx
	xor	r11d,ecx
	xor	r11d,edx
	xor	eax,r10d
	xor	ebx,r11d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[32+r14]
	mov	eax,DWORD[36+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r8d,ecx
	xor	r9d,ecx
	xor	r9d,edx
	xor	eax,r8d
	xor	ebx,r9d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[40+r14]
	mov	eax,DWORD[44+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r10d,ecx
	xor	r11d,ecx
	xor	r11d,edx
	xor	eax,r10d
	xor	ebx,r11d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[48+r14]
	mov	eax,DWORD[52+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r8d,ecx
	xor	r9d,ecx
	xor	r9d,edx
	xor	eax,r8d
	xor	ebx,r9d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[56+r14]
	mov	eax,DWORD[60+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r10d,ecx
	xor	r11d,ecx
	xor	r11d,edx
	xor	eax,r10d
	xor	ebx,r11d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[64+r14]
	mov	eax,DWORD[68+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r8d,ecx
	xor	r9d,ecx
	xor	r9d,edx
	lea	r14,[64+r14]
	cmp	r14,r15
	mov	edx,DWORD[8+r14]
	mov	ecx,DWORD[12+r14]
	je	NEAR $L$edone

	and	eax,r8d
	or	edx,r11d
	rol	eax,1
	xor	r10d,edx
	xor	r9d,eax
	and	ecx,r10d
	or	ebx,r9d
	rol	ecx,1
	xor	r8d,ebx
	xor	r11d,ecx
	jmp	NEAR $L$eloop

ALIGN	16
$L$edone:
	xor	eax,r10d
	xor	ebx,r11d
	xor	ecx,r8d
	xor	edx,r9d

	mov	r8d,eax
	mov	r9d,ebx
	mov	r10d,ecx
	mov	r11d,edx

DB	0xf3,0xc3




global	Camellia_DecryptBlock

ALIGN	16
Camellia_DecryptBlock:

	mov	eax,128
	sub	eax,ecx
	mov	ecx,3
	adc	ecx,0
	jmp	NEAR $L$dec_rounds



global	Camellia_DecryptBlock_Rounds

ALIGN	16
$L$dec_rounds:
Camellia_DecryptBlock_Rounds:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_Camellia_DecryptBlock_Rounds:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9



	push	rbx

	push	rbp

	push	r13

	push	r14

	push	r15

$L$dec_prologue:


	mov	r13,rcx
	mov	r15,rdx

	shl	edi,6
	lea	rbp,[$L$Camellia_SBOX]
	lea	r14,[rdi*1+r15]

	mov	r8d,DWORD[rsi]
	mov	r9d,DWORD[4+rsi]
	mov	r10d,DWORD[8+rsi]
	bswap	r8d
	mov	r11d,DWORD[12+rsi]
	bswap	r9d
	bswap	r10d
	bswap	r11d

	call	_x86_64_Camellia_decrypt

	bswap	r8d
	bswap	r9d
	bswap	r10d
	mov	DWORD[r13],r8d
	bswap	r11d
	mov	DWORD[4+r13],r9d
	mov	DWORD[8+r13],r10d
	mov	DWORD[12+r13],r11d

	mov	r15,QWORD[rsp]

	mov	r14,QWORD[8+rsp]

	mov	r13,QWORD[16+rsp]

	mov	rbp,QWORD[24+rsp]

	mov	rbx,QWORD[32+rsp]

	lea	rsp,[40+rsp]

$L$dec_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_Camellia_DecryptBlock_Rounds:


ALIGN	16
_x86_64_Camellia_decrypt:

	xor	r9d,DWORD[r14]
	xor	r8d,DWORD[4+r14]
	xor	r11d,DWORD[8+r14]
	xor	r10d,DWORD[12+r14]
ALIGN	16
$L$dloop:
	mov	ebx,DWORD[((-8))+r14]
	mov	eax,DWORD[((-4))+r14]

	xor	eax,r8d
	xor	ebx,r9d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[((-16))+r14]
	mov	eax,DWORD[((-12))+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r10d,ecx
	xor	r11d,ecx
	xor	r11d,edx
	xor	eax,r10d
	xor	ebx,r11d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[((-24))+r14]
	mov	eax,DWORD[((-20))+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r8d,ecx
	xor	r9d,ecx
	xor	r9d,edx
	xor	eax,r8d
	xor	ebx,r9d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[((-32))+r14]
	mov	eax,DWORD[((-28))+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r10d,ecx
	xor	r11d,ecx
	xor	r11d,edx
	xor	eax,r10d
	xor	ebx,r11d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[((-40))+r14]
	mov	eax,DWORD[((-36))+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r8d,ecx
	xor	r9d,ecx
	xor	r9d,edx
	xor	eax,r8d
	xor	ebx,r9d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[((-48))+r14]
	mov	eax,DWORD[((-44))+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r10d,ecx
	xor	r11d,ecx
	xor	r11d,edx
	xor	eax,r10d
	xor	ebx,r11d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[((-56))+r14]
	mov	eax,DWORD[((-52))+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r8d,ecx
	xor	r9d,ecx
	xor	r9d,edx
	lea	r14,[((-64))+r14]
	cmp	r14,r15
	mov	edx,DWORD[r14]
	mov	ecx,DWORD[4+r14]
	je	NEAR $L$ddone

	and	eax,r8d
	or	edx,r11d
	rol	eax,1
	xor	r10d,edx
	xor	r9d,eax
	and	ecx,r10d
	or	ebx,r9d
	rol	ecx,1
	xor	r8d,ebx
	xor	r11d,ecx

	jmp	NEAR $L$dloop

ALIGN	16
$L$ddone:
	xor	ecx,r10d
	xor	edx,r11d
	xor	eax,r8d
	xor	ebx,r9d

	mov	r8d,ecx
	mov	r9d,edx
	mov	r10d,eax
	mov	r11d,ebx

DB	0xf3,0xc3


global	Camellia_Ekeygen

ALIGN	16
Camellia_Ekeygen:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_Camellia_Ekeygen:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8



	push	rbx

	push	rbp

	push	r13

	push	r14

	push	r15

$L$key_prologue:

	mov	r15d,edi
	mov	r13,rdx

	mov	r8d,DWORD[rsi]
	mov	r9d,DWORD[4+rsi]
	mov	r10d,DWORD[8+rsi]
	mov	r11d,DWORD[12+rsi]

	bswap	r8d
	bswap	r9d
	bswap	r10d
	bswap	r11d
	mov	DWORD[r13],r9d
	mov	DWORD[4+r13],r8d
	mov	DWORD[8+r13],r11d
	mov	DWORD[12+r13],r10d
	cmp	r15,128
	je	NEAR $L$1st128

	mov	r8d,DWORD[16+rsi]
	mov	r9d,DWORD[20+rsi]
	cmp	r15,192
	je	NEAR $L$1st192
	mov	r10d,DWORD[24+rsi]
	mov	r11d,DWORD[28+rsi]
	jmp	NEAR $L$1st256
$L$1st192:
	mov	r10d,r8d
	mov	r11d,r9d
	not	r10d
	not	r11d
$L$1st256:
	bswap	r8d
	bswap	r9d
	bswap	r10d
	bswap	r11d
	mov	DWORD[32+r13],r9d
	mov	DWORD[36+r13],r8d
	mov	DWORD[40+r13],r11d
	mov	DWORD[44+r13],r10d
	xor	r9d,DWORD[r13]
	xor	r8d,DWORD[4+r13]
	xor	r11d,DWORD[8+r13]
	xor	r10d,DWORD[12+r13]

$L$1st128:
	lea	r14,[$L$Camellia_SIGMA]
	lea	rbp,[$L$Camellia_SBOX]

	mov	ebx,DWORD[r14]
	mov	eax,DWORD[4+r14]
	xor	eax,r8d
	xor	ebx,r9d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[8+r14]
	mov	eax,DWORD[12+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r10d,ecx
	xor	r11d,ecx
	xor	r11d,edx
	xor	eax,r10d
	xor	ebx,r11d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[16+r14]
	mov	eax,DWORD[20+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r8d,ecx
	xor	r9d,ecx
	xor	r9d,edx
	xor	r9d,DWORD[r13]
	xor	r8d,DWORD[4+r13]
	xor	r11d,DWORD[8+r13]
	xor	r10d,DWORD[12+r13]
	xor	eax,r8d
	xor	ebx,r9d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[24+r14]
	mov	eax,DWORD[28+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r10d,ecx
	xor	r11d,ecx
	xor	r11d,edx
	xor	eax,r10d
	xor	ebx,r11d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[32+r14]
	mov	eax,DWORD[36+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r8d,ecx
	xor	r9d,ecx
	xor	r9d,edx
	cmp	r15,128
	jne	NEAR $L$2nd256

	lea	r13,[128+r13]
	shl	r8,32
	shl	r10,32
	or	r8,r9
	or	r10,r11
	mov	rax,QWORD[((-128))+r13]
	mov	rbx,QWORD[((-120))+r13]
	mov	QWORD[((-112))+r13],r8
	mov	QWORD[((-104))+r13],r10
	mov	r11,rax
	shl	rax,15
	mov	r9,rbx
	shr	r9,49
	shr	r11,49
	or	rax,r9
	shl	rbx,15
	or	rbx,r11
	mov	QWORD[((-96))+r13],rax
	mov	QWORD[((-88))+r13],rbx
	mov	r11,r8
	shl	r8,15
	mov	r9,r10
	shr	r9,49
	shr	r11,49
	or	r8,r9
	shl	r10,15
	or	r10,r11
	mov	QWORD[((-80))+r13],r8
	mov	QWORD[((-72))+r13],r10
	mov	r11,r8
	shl	r8,15
	mov	r9,r10
	shr	r9,49
	shr	r11,49
	or	r8,r9
	shl	r10,15
	or	r10,r11
	mov	QWORD[((-64))+r13],r8
	mov	QWORD[((-56))+r13],r10
	mov	r11,rax
	shl	rax,30
	mov	r9,rbx
	shr	r9,34
	shr	r11,34
	or	rax,r9
	shl	rbx,30
	or	rbx,r11
	mov	QWORD[((-48))+r13],rax
	mov	QWORD[((-40))+r13],rbx
	mov	r11,r8
	shl	r8,15
	mov	r9,r10
	shr	r9,49
	shr	r11,49
	or	r8,r9
	shl	r10,15
	or	r10,r11
	mov	QWORD[((-32))+r13],r8
	mov	r11,rax
	shl	rax,15
	mov	r9,rbx
	shr	r9,49
	shr	r11,49
	or	rax,r9
	shl	rbx,15
	or	rbx,r11
	mov	QWORD[((-24))+r13],rbx
	mov	r11,r8
	shl	r8,15
	mov	r9,r10
	shr	r9,49
	shr	r11,49
	or	r8,r9
	shl	r10,15
	or	r10,r11
	mov	QWORD[((-16))+r13],r8
	mov	QWORD[((-8))+r13],r10
	mov	r11,rax
	shl	rax,17
	mov	r9,rbx
	shr	r9,47
	shr	r11,47
	or	rax,r9
	shl	rbx,17
	or	rbx,r11
	mov	QWORD[r13],rax
	mov	QWORD[8+r13],rbx
	mov	r11,rax
	shl	rax,17
	mov	r9,rbx
	shr	r9,47
	shr	r11,47
	or	rax,r9
	shl	rbx,17
	or	rbx,r11
	mov	QWORD[16+r13],rax
	mov	QWORD[24+r13],rbx
	mov	r11,r8
	shl	r8,34
	mov	r9,r10
	shr	r9,30
	shr	r11,30
	or	r8,r9
	shl	r10,34
	or	r10,r11
	mov	QWORD[32+r13],r8
	mov	QWORD[40+r13],r10
	mov	r11,rax
	shl	rax,17
	mov	r9,rbx
	shr	r9,47
	shr	r11,47
	or	rax,r9
	shl	rbx,17
	or	rbx,r11
	mov	QWORD[48+r13],rax
	mov	QWORD[56+r13],rbx
	mov	r11,r8
	shl	r8,17
	mov	r9,r10
	shr	r9,47
	shr	r11,47
	or	r8,r9
	shl	r10,17
	or	r10,r11
	mov	QWORD[64+r13],r8
	mov	QWORD[72+r13],r10
	mov	eax,3
	jmp	NEAR $L$done
ALIGN	16
$L$2nd256:
	mov	DWORD[48+r13],r9d
	mov	DWORD[52+r13],r8d
	mov	DWORD[56+r13],r11d
	mov	DWORD[60+r13],r10d
	xor	r9d,DWORD[32+r13]
	xor	r8d,DWORD[36+r13]
	xor	r11d,DWORD[40+r13]
	xor	r10d,DWORD[44+r13]
	xor	eax,r8d
	xor	ebx,r9d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[40+r14]
	mov	eax,DWORD[44+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r10d,ecx
	xor	r11d,ecx
	xor	r11d,edx
	xor	eax,r10d
	xor	ebx,r11d
	movzx	esi,ah
	movzx	edi,bl
	mov	edx,DWORD[2052+rsi*8+rbp]
	mov	ecx,DWORD[rdi*8+rbp]
	movzx	esi,al
	shr	eax,16
	movzx	edi,bh
	xor	edx,DWORD[4+rsi*8+rbp]
	shr	ebx,16
	xor	ecx,DWORD[4+rdi*8+rbp]
	movzx	esi,ah
	movzx	edi,bl
	xor	edx,DWORD[rsi*8+rbp]
	xor	ecx,DWORD[2052+rdi*8+rbp]
	movzx	esi,al
	movzx	edi,bh
	xor	edx,DWORD[2048+rsi*8+rbp]
	xor	ecx,DWORD[2048+rdi*8+rbp]
	mov	ebx,DWORD[48+r14]
	mov	eax,DWORD[52+r14]
	xor	ecx,edx
	ror	edx,8
	xor	r8d,ecx
	xor	r9d,ecx
	xor	r9d,edx
	mov	rax,QWORD[r13]
	mov	rbx,QWORD[8+r13]
	mov	rcx,QWORD[32+r13]
	mov	rdx,QWORD[40+r13]
	mov	r14,QWORD[48+r13]
	mov	r15,QWORD[56+r13]
	lea	r13,[128+r13]
	shl	r8,32
	shl	r10,32
	or	r8,r9
	or	r10,r11
	mov	QWORD[((-112))+r13],r8
	mov	QWORD[((-104))+r13],r10
	mov	r11,rcx
	shl	rcx,15
	mov	r9,rdx
	shr	r9,49
	shr	r11,49
	or	rcx,r9
	shl	rdx,15
	or	rdx,r11
	mov	QWORD[((-96))+r13],rcx
	mov	QWORD[((-88))+r13],rdx
	mov	r11,r14
	shl	r14,15
	mov	r9,r15
	shr	r9,49
	shr	r11,49
	or	r14,r9
	shl	r15,15
	or	r15,r11
	mov	QWORD[((-80))+r13],r14
	mov	QWORD[((-72))+r13],r15
	mov	r11,rcx
	shl	rcx,15
	mov	r9,rdx
	shr	r9,49
	shr	r11,49
	or	rcx,r9
	shl	rdx,15
	or	rdx,r11
	mov	QWORD[((-64))+r13],rcx
	mov	QWORD[((-56))+r13],rdx
	mov	r11,r8
	shl	r8,30
	mov	r9,r10
	shr	r9,34
	shr	r11,34
	or	r8,r9
	shl	r10,30
	or	r10,r11
	mov	QWORD[((-48))+r13],r8
	mov	QWORD[((-40))+r13],r10
	mov	r11,rax
	shl	rax,45
	mov	r9,rbx
	shr	r9,19
	shr	r11,19
	or	rax,r9
	shl	rbx,45
	or	rbx,r11
	mov	QWORD[((-32))+r13],rax
	mov	QWORD[((-24))+r13],rbx
	mov	r11,r14
	shl	r14,30
	mov	r9,r15
	shr	r9,34
	shr	r11,34
	or	r14,r9
	shl	r15,30
	or	r15,r11
	mov	QWORD[((-16))+r13],r14
	mov	QWORD[((-8))+r13],r15
	mov	r11,rax
	shl	rax,15
	mov	r9,rbx
	shr	r9,49
	shr	r11,49
	or	rax,r9
	shl	rbx,15
	or	rbx,r11
	mov	QWORD[r13],rax
	mov	QWORD[8+r13],rbx
	mov	r11,rcx
	shl	rcx,30
	mov	r9,rdx
	shr	r9,34
	shr	r11,34
	or	rcx,r9
	shl	rdx,30
	or	rdx,r11
	mov	QWORD[16+r13],rcx
	mov	QWORD[24+r13],rdx
	mov	r11,r8
	shl	r8,30
	mov	r9,r10
	shr	r9,34
	shr	r11,34
	or	r8,r9
	shl	r10,30
	or	r10,r11
	mov	QWORD[32+r13],r8
	mov	QWORD[40+r13],r10
	mov	r11,rax
	shl	rax,17
	mov	r9,rbx
	shr	r9,47
	shr	r11,47
	or	rax,r9
	shl	rbx,17
	or	rbx,r11
	mov	QWORD[48+r13],rax
	mov	QWORD[56+r13],rbx
	mov	r11,r14
	shl	r14,32
	mov	r9,r15
	shr	r9,32
	shr	r11,32
	or	r14,r9
	shl	r15,32
	or	r15,r11
	mov	QWORD[64+r13],r14
	mov	QWORD[72+r13],r15
	mov	r11,rcx
	shl	rcx,34
	mov	r9,rdx
	shr	r9,30
	shr	r11,30
	or	rcx,r9
	shl	rdx,34
	or	rdx,r11
	mov	QWORD[80+r13],rcx
	mov	QWORD[88+r13],rdx
	mov	r11,r14
	shl	r14,17
	mov	r9,r15
	shr	r9,47
	shr	r11,47
	or	r14,r9
	shl	r15,17
	or	r15,r11
	mov	QWORD[96+r13],r14
	mov	QWORD[104+r13],r15
	mov	r11,rax
	shl	rax,34
	mov	r9,rbx
	shr	r9,30
	shr	r11,30
	or	rax,r9
	shl	rbx,34
	or	rbx,r11
	mov	QWORD[112+r13],rax
	mov	QWORD[120+r13],rbx
	mov	r11,r8
	shl	r8,51
	mov	r9,r10
	shr	r9,13
	shr	r11,13
	or	r8,r9
	shl	r10,51
	or	r10,r11
	mov	QWORD[128+r13],r8
	mov	QWORD[136+r13],r10
	mov	eax,4
$L$done:
	mov	r15,QWORD[rsp]

	mov	r14,QWORD[8+rsp]

	mov	r13,QWORD[16+rsp]

	mov	rbp,QWORD[24+rsp]

	mov	rbx,QWORD[32+rsp]

	lea	rsp,[40+rsp]

$L$key_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_Camellia_Ekeygen:
ALIGN	64
$L$Camellia_SIGMA:
	DD	0x3bcc908b,0xa09e667f,0x4caa73b2,0xb67ae858
	DD	0xe94f82be,0xc6ef372f,0xf1d36f1c,0x54ff53a5
	DD	0xde682d1d,0x10e527fa,0xb3e6c1fd,0xb05688c2
	DD	0,0,0,0
$L$Camellia_SBOX:
	DD	0x70707000,0x70700070
	DD	0x82828200,0x2c2c002c
	DD	0x2c2c2c00,0xb3b300b3
	DD	0xececec00,0xc0c000c0
	DD	0xb3b3b300,0xe4e400e4
	DD	0x27272700,0x57570057
	DD	0xc0c0c000,0xeaea00ea
	DD	0xe5e5e500,0xaeae00ae
	DD	0xe4e4e400,0x23230023
	DD	0x85858500,0x6b6b006b
	DD	0x57575700,0x45450045
	DD	0x35353500,0xa5a500a5
	DD	0xeaeaea00,0xeded00ed
	DD	0x0c0c0c00,0x4f4f004f
	DD	0xaeaeae00,0x1d1d001d
	DD	0x41414100,0x92920092
	DD	0x23232300,0x86860086
	DD	0xefefef00,0xafaf00af
	DD	0x6b6b6b00,0x7c7c007c
	DD	0x93939300,0x1f1f001f
	DD	0x45454500,0x3e3e003e
	DD	0x19191900,0xdcdc00dc
	DD	0xa5a5a500,0x5e5e005e
	DD	0x21212100,0x0b0b000b
	DD	0xededed00,0xa6a600a6
	DD	0x0e0e0e00,0x39390039
	DD	0x4f4f4f00,0xd5d500d5
	DD	0x4e4e4e00,0x5d5d005d
	DD	0x1d1d1d00,0xd9d900d9
	DD	0x65656500,0x5a5a005a
	DD	0x92929200,0x51510051
	DD	0xbdbdbd00,0x6c6c006c
	DD	0x86868600,0x8b8b008b
	DD	0xb8b8b800,0x9a9a009a
	DD	0xafafaf00,0xfbfb00fb
	DD	0x8f8f8f00,0xb0b000b0
	DD	0x7c7c7c00,0x74740074
	DD	0xebebeb00,0x2b2b002b
	DD	0x1f1f1f00,0xf0f000f0
	DD	0xcecece00,0x84840084
	DD	0x3e3e3e00,0xdfdf00df
	DD	0x30303000,0xcbcb00cb
	DD	0xdcdcdc00,0x34340034
	DD	0x5f5f5f00,0x76760076
	DD	0x5e5e5e00,0x6d6d006d
	DD	0xc5c5c500,0xa9a900a9
	DD	0x0b0b0b00,0xd1d100d1
	DD	0x1a1a1a00,0x04040004
	DD	0xa6a6a600,0x14140014
	DD	0xe1e1e100,0x3a3a003a
	DD	0x39393900,0xdede00de
	DD	0xcacaca00,0x11110011
	DD	0xd5d5d500,0x32320032
	DD	0x47474700,0x9c9c009c
	DD	0x5d5d5d00,0x53530053
	DD	0x3d3d3d00,0xf2f200f2
	DD	0xd9d9d900,0xfefe00fe
	DD	0x01010100,0xcfcf00cf
	DD	0x5a5a5a00,0xc3c300c3
	DD	0xd6d6d600,0x7a7a007a
	DD	0x51515100,0x24240024
	DD	0x56565600,0xe8e800e8
	DD	0x6c6c6c00,0x60600060
	DD	0x4d4d4d00,0x69690069
	DD	0x8b8b8b00,0xaaaa00aa
	DD	0x0d0d0d00,0xa0a000a0
	DD	0x9a9a9a00,0xa1a100a1
	DD	0x66666600,0x62620062
	DD	0xfbfbfb00,0x54540054
	DD	0xcccccc00,0x1e1e001e
	DD	0xb0b0b000,0xe0e000e0
	DD	0x2d2d2d00,0x64640064
	DD	0x74747400,0x10100010
	DD	0x12121200,0x00000000
	DD	0x2b2b2b00,0xa3a300a3
	DD	0x20202000,0x75750075
	DD	0xf0f0f000,0x8a8a008a
	DD	0xb1b1b100,0xe6e600e6
	DD	0x84848400,0x09090009
	DD	0x99999900,0xdddd00dd
	DD	0xdfdfdf00,0x87870087
	DD	0x4c4c4c00,0x83830083
	DD	0xcbcbcb00,0xcdcd00cd
	DD	0xc2c2c200,0x90900090
	DD	0x34343400,0x73730073
	DD	0x7e7e7e00,0xf6f600f6
	DD	0x76767600,0x9d9d009d
	DD	0x05050500,0xbfbf00bf
	DD	0x6d6d6d00,0x52520052
	DD	0xb7b7b700,0xd8d800d8
	DD	0xa9a9a900,0xc8c800c8
	DD	0x31313100,0xc6c600c6
	DD	0xd1d1d100,0x81810081
	DD	0x17171700,0x6f6f006f
	DD	0x04040400,0x13130013
	DD	0xd7d7d700,0x63630063
	DD	0x14141400,0xe9e900e9
	DD	0x58585800,0xa7a700a7
	DD	0x3a3a3a00,0x9f9f009f
	DD	0x61616100,0xbcbc00bc
	DD	0xdedede00,0x29290029
	DD	0x1b1b1b00,0xf9f900f9
	DD	0x11111100,0x2f2f002f
	DD	0x1c1c1c00,0xb4b400b4
	DD	0x32323200,0x78780078
	DD	0x0f0f0f00,0x06060006
	DD	0x9c9c9c00,0xe7e700e7
	DD	0x16161600,0x71710071
	DD	0x53535300,0xd4d400d4
	DD	0x18181800,0xabab00ab
	DD	0xf2f2f200,0x88880088
	DD	0x22222200,0x8d8d008d
	DD	0xfefefe00,0x72720072
	DD	0x44444400,0xb9b900b9
	DD	0xcfcfcf00,0xf8f800f8
	DD	0xb2b2b200,0xacac00ac
	DD	0xc3c3c300,0x36360036
	DD	0xb5b5b500,0x2a2a002a
	DD	0x7a7a7a00,0x3c3c003c
	DD	0x91919100,0xf1f100f1
	DD	0x24242400,0x40400040
	DD	0x08080800,0xd3d300d3
	DD	0xe8e8e800,0xbbbb00bb
	DD	0xa8a8a800,0x43430043
	DD	0x60606000,0x15150015
	DD	0xfcfcfc00,0xadad00ad
	DD	0x69696900,0x77770077
	DD	0x50505000,0x80800080
	DD	0xaaaaaa00,0x82820082
	DD	0xd0d0d000,0xecec00ec
	DD	0xa0a0a000,0x27270027
	DD	0x7d7d7d00,0xe5e500e5
	DD	0xa1a1a100,0x85850085
	DD	0x89898900,0x35350035
	DD	0x62626200,0x0c0c000c
	DD	0x97979700,0x41410041
	DD	0x54545400,0xefef00ef
	DD	0x5b5b5b00,0x93930093
	DD	0x1e1e1e00,0x19190019
	DD	0x95959500,0x21210021
	DD	0xe0e0e000,0x0e0e000e
	DD	0xffffff00,0x4e4e004e
	DD	0x64646400,0x65650065
	DD	0xd2d2d200,0xbdbd00bd
	DD	0x10101000,0xb8b800b8
	DD	0xc4c4c400,0x8f8f008f
	DD	0x00000000,0xebeb00eb
	DD	0x48484800,0xcece00ce
	DD	0xa3a3a300,0x30300030
	DD	0xf7f7f700,0x5f5f005f
	DD	0x75757500,0xc5c500c5
	DD	0xdbdbdb00,0x1a1a001a
	DD	0x8a8a8a00,0xe1e100e1
	DD	0x03030300,0xcaca00ca
	DD	0xe6e6e600,0x47470047
	DD	0xdadada00,0x3d3d003d
	DD	0x09090900,0x01010001
	DD	0x3f3f3f00,0xd6d600d6
	DD	0xdddddd00,0x56560056
	DD	0x94949400,0x4d4d004d
	DD	0x87878700,0x0d0d000d
	DD	0x5c5c5c00,0x66660066
	DD	0x83838300,0xcccc00cc
	DD	0x02020200,0x2d2d002d
	DD	0xcdcdcd00,0x12120012
	DD	0x4a4a4a00,0x20200020
	DD	0x90909000,0xb1b100b1
	DD	0x33333300,0x99990099
	DD	0x73737300,0x4c4c004c
	DD	0x67676700,0xc2c200c2
	DD	0xf6f6f600,0x7e7e007e
	DD	0xf3f3f300,0x05050005
	DD	0x9d9d9d00,0xb7b700b7
	DD	0x7f7f7f00,0x31310031
	DD	0xbfbfbf00,0x17170017
	DD	0xe2e2e200,0xd7d700d7
	DD	0x52525200,0x58580058
	DD	0x9b9b9b00,0x61610061
	DD	0xd8d8d800,0x1b1b001b
	DD	0x26262600,0x1c1c001c
	DD	0xc8c8c800,0x0f0f000f
	DD	0x37373700,0x16160016
	DD	0xc6c6c600,0x18180018
	DD	0x3b3b3b00,0x22220022
	DD	0x81818100,0x44440044
	DD	0x96969600,0xb2b200b2
	DD	0x6f6f6f00,0xb5b500b5
	DD	0x4b4b4b00,0x91910091
	DD	0x13131300,0x08080008
	DD	0xbebebe00,0xa8a800a8
	DD	0x63636300,0xfcfc00fc
	DD	0x2e2e2e00,0x50500050
	DD	0xe9e9e900,0xd0d000d0
	DD	0x79797900,0x7d7d007d
	DD	0xa7a7a700,0x89890089
	DD	0x8c8c8c00,0x97970097
	DD	0x9f9f9f00,0x5b5b005b
	DD	0x6e6e6e00,0x95950095
	DD	0xbcbcbc00,0xffff00ff
	DD	0x8e8e8e00,0xd2d200d2
	DD	0x29292900,0xc4c400c4
	DD	0xf5f5f500,0x48480048
	DD	0xf9f9f900,0xf7f700f7
	DD	0xb6b6b600,0xdbdb00db
	DD	0x2f2f2f00,0x03030003
	DD	0xfdfdfd00,0xdada00da
	DD	0xb4b4b400,0x3f3f003f
	DD	0x59595900,0x94940094
	DD	0x78787800,0x5c5c005c
	DD	0x98989800,0x02020002
	DD	0x06060600,0x4a4a004a
	DD	0x6a6a6a00,0x33330033
	DD	0xe7e7e700,0x67670067
	DD	0x46464600,0xf3f300f3
	DD	0x71717100,0x7f7f007f
	DD	0xbababa00,0xe2e200e2
	DD	0xd4d4d400,0x9b9b009b
	DD	0x25252500,0x26260026
	DD	0xababab00,0x37370037
	DD	0x42424200,0x3b3b003b
	DD	0x88888800,0x96960096
	DD	0xa2a2a200,0x4b4b004b
	DD	0x8d8d8d00,0xbebe00be
	DD	0xfafafa00,0x2e2e002e
	DD	0x72727200,0x79790079
	DD	0x07070700,0x8c8c008c
	DD	0xb9b9b900,0x6e6e006e
	DD	0x55555500,0x8e8e008e
	DD	0xf8f8f800,0xf5f500f5
	DD	0xeeeeee00,0xb6b600b6
	DD	0xacacac00,0xfdfd00fd
	DD	0x0a0a0a00,0x59590059
	DD	0x36363600,0x98980098
	DD	0x49494900,0x6a6a006a
	DD	0x2a2a2a00,0x46460046
	DD	0x68686800,0xbaba00ba
	DD	0x3c3c3c00,0x25250025
	DD	0x38383800,0x42420042
	DD	0xf1f1f100,0xa2a200a2
	DD	0xa4a4a400,0xfafa00fa
	DD	0x40404000,0x07070007
	DD	0x28282800,0x55550055
	DD	0xd3d3d300,0xeeee00ee
	DD	0x7b7b7b00,0x0a0a000a
	DD	0xbbbbbb00,0x49490049
	DD	0xc9c9c900,0x68680068
	DD	0x43434300,0x38380038
	DD	0xc1c1c100,0xa4a400a4
	DD	0x15151500,0x28280028
	DD	0xe3e3e300,0x7b7b007b
	DD	0xadadad00,0xc9c900c9
	DD	0xf4f4f400,0xc1c100c1
	DD	0x77777700,0xe3e300e3
	DD	0xc7c7c700,0xf4f400f4
	DD	0x80808000,0xc7c700c7
	DD	0x9e9e9e00,0x9e9e009e
	DD	0x00e0e0e0,0x38003838
	DD	0x00050505,0x41004141
	DD	0x00585858,0x16001616
	DD	0x00d9d9d9,0x76007676
	DD	0x00676767,0xd900d9d9
	DD	0x004e4e4e,0x93009393
	DD	0x00818181,0x60006060
	DD	0x00cbcbcb,0xf200f2f2
	DD	0x00c9c9c9,0x72007272
	DD	0x000b0b0b,0xc200c2c2
	DD	0x00aeaeae,0xab00abab
	DD	0x006a6a6a,0x9a009a9a
	DD	0x00d5d5d5,0x75007575
	DD	0x00181818,0x06000606
	DD	0x005d5d5d,0x57005757
	DD	0x00828282,0xa000a0a0
	DD	0x00464646,0x91009191
	DD	0x00dfdfdf,0xf700f7f7
	DD	0x00d6d6d6,0xb500b5b5
	DD	0x00272727,0xc900c9c9
	DD	0x008a8a8a,0xa200a2a2
	DD	0x00323232,0x8c008c8c
	DD	0x004b4b4b,0xd200d2d2
	DD	0x00424242,0x90009090
	DD	0x00dbdbdb,0xf600f6f6
	DD	0x001c1c1c,0x07000707
	DD	0x009e9e9e,0xa700a7a7
	DD	0x009c9c9c,0x27002727
	DD	0x003a3a3a,0x8e008e8e
	DD	0x00cacaca,0xb200b2b2
	DD	0x00252525,0x49004949
	DD	0x007b7b7b,0xde00dede
	DD	0x000d0d0d,0x43004343
	DD	0x00717171,0x5c005c5c
	DD	0x005f5f5f,0xd700d7d7
	DD	0x001f1f1f,0xc700c7c7
	DD	0x00f8f8f8,0x3e003e3e
	DD	0x00d7d7d7,0xf500f5f5
	DD	0x003e3e3e,0x8f008f8f
	DD	0x009d9d9d,0x67006767
	DD	0x007c7c7c,0x1f001f1f
	DD	0x00606060,0x18001818
	DD	0x00b9b9b9,0x6e006e6e
	DD	0x00bebebe,0xaf00afaf
	DD	0x00bcbcbc,0x2f002f2f
	DD	0x008b8b8b,0xe200e2e2
	DD	0x00161616,0x85008585
	DD	0x00343434,0x0d000d0d
	DD	0x004d4d4d,0x53005353
	DD	0x00c3c3c3,0xf000f0f0
	DD	0x00727272,0x9c009c9c
	DD	0x00959595,0x65006565
	DD	0x00ababab,0xea00eaea
	DD	0x008e8e8e,0xa300a3a3
	DD	0x00bababa,0xae00aeae
	DD	0x007a7a7a,0x9e009e9e
	DD	0x00b3b3b3,0xec00ecec
	DD	0x00020202,0x80008080
	DD	0x00b4b4b4,0x2d002d2d
	DD	0x00adadad,0x6b006b6b
	DD	0x00a2a2a2,0xa800a8a8
	DD	0x00acacac,0x2b002b2b
	DD	0x00d8d8d8,0x36003636
	DD	0x009a9a9a,0xa600a6a6
	DD	0x00171717,0xc500c5c5
	DD	0x001a1a1a,0x86008686
	DD	0x00353535,0x4d004d4d
	DD	0x00cccccc,0x33003333
	DD	0x00f7f7f7,0xfd00fdfd
	DD	0x00999999,0x66006666
	DD	0x00616161,0x58005858
	DD	0x005a5a5a,0x96009696
	DD	0x00e8e8e8,0x3a003a3a
	DD	0x00242424,0x09000909
	DD	0x00565656,0x95009595
	DD	0x00404040,0x10001010
	DD	0x00e1e1e1,0x78007878
	DD	0x00636363,0xd800d8d8
	DD	0x00090909,0x42004242
	DD	0x00333333,0xcc00cccc
	DD	0x00bfbfbf,0xef00efef
	DD	0x00989898,0x26002626
	DD	0x00979797,0xe500e5e5
	DD	0x00858585,0x61006161
	DD	0x00686868,0x1a001a1a
	DD	0x00fcfcfc,0x3f003f3f
	DD	0x00ececec,0x3b003b3b
	DD	0x000a0a0a,0x82008282
	DD	0x00dadada,0xb600b6b6
	DD	0x006f6f6f,0xdb00dbdb
	DD	0x00535353,0xd400d4d4
	DD	0x00626262,0x98009898
	DD	0x00a3a3a3,0xe800e8e8
	DD	0x002e2e2e,0x8b008b8b
	DD	0x00080808,0x02000202
	DD	0x00afafaf,0xeb00ebeb
	DD	0x00282828,0x0a000a0a
	DD	0x00b0b0b0,0x2c002c2c
	DD	0x00747474,0x1d001d1d
	DD	0x00c2c2c2,0xb000b0b0
	DD	0x00bdbdbd,0x6f006f6f
	DD	0x00363636,0x8d008d8d
	DD	0x00222222,0x88008888
	DD	0x00383838,0x0e000e0e
	DD	0x00646464,0x19001919
	DD	0x001e1e1e,0x87008787
	DD	0x00393939,0x4e004e4e
	DD	0x002c2c2c,0x0b000b0b
	DD	0x00a6a6a6,0xa900a9a9
	DD	0x00303030,0x0c000c0c
	DD	0x00e5e5e5,0x79007979
	DD	0x00444444,0x11001111
	DD	0x00fdfdfd,0x7f007f7f
	DD	0x00888888,0x22002222
	DD	0x009f9f9f,0xe700e7e7
	DD	0x00656565,0x59005959
	DD	0x00878787,0xe100e1e1
	DD	0x006b6b6b,0xda00dada
	DD	0x00f4f4f4,0x3d003d3d
	DD	0x00232323,0xc800c8c8
	DD	0x00484848,0x12001212
	DD	0x00101010,0x04000404
	DD	0x00d1d1d1,0x74007474
	DD	0x00515151,0x54005454
	DD	0x00c0c0c0,0x30003030
	DD	0x00f9f9f9,0x7e007e7e
	DD	0x00d2d2d2,0xb400b4b4
	DD	0x00a0a0a0,0x28002828
	DD	0x00555555,0x55005555
	DD	0x00a1a1a1,0x68006868
	DD	0x00414141,0x50005050
	DD	0x00fafafa,0xbe00bebe
	DD	0x00434343,0xd000d0d0
	DD	0x00131313,0xc400c4c4
	DD	0x00c4c4c4,0x31003131
	DD	0x002f2f2f,0xcb00cbcb
	DD	0x00a8a8a8,0x2a002a2a
	DD	0x00b6b6b6,0xad00adad
	DD	0x003c3c3c,0x0f000f0f
	DD	0x002b2b2b,0xca00caca
	DD	0x00c1c1c1,0x70007070
	DD	0x00ffffff,0xff00ffff
	DD	0x00c8c8c8,0x32003232
	DD	0x00a5a5a5,0x69006969
	DD	0x00202020,0x08000808
	DD	0x00898989,0x62006262
	DD	0x00000000,0x00000000
	DD	0x00909090,0x24002424
	DD	0x00474747,0xd100d1d1
	DD	0x00efefef,0xfb00fbfb
	DD	0x00eaeaea,0xba00baba
	DD	0x00b7b7b7,0xed00eded
	DD	0x00151515,0x45004545
	DD	0x00060606,0x81008181
	DD	0x00cdcdcd,0x73007373
	DD	0x00b5b5b5,0x6d006d6d
	DD	0x00121212,0x84008484
	DD	0x007e7e7e,0x9f009f9f
	DD	0x00bbbbbb,0xee00eeee
	DD	0x00292929,0x4a004a4a
	DD	0x000f0f0f,0xc300c3c3
	DD	0x00b8b8b8,0x2e002e2e
	DD	0x00070707,0xc100c1c1
	DD	0x00040404,0x01000101
	DD	0x009b9b9b,0xe600e6e6
	DD	0x00949494,0x25002525
	DD	0x00212121,0x48004848
	DD	0x00666666,0x99009999
	DD	0x00e6e6e6,0xb900b9b9
	DD	0x00cecece,0xb300b3b3
	DD	0x00ededed,0x7b007b7b
	DD	0x00e7e7e7,0xf900f9f9
	DD	0x003b3b3b,0xce00cece
	DD	0x00fefefe,0xbf00bfbf
	DD	0x007f7f7f,0xdf00dfdf
	DD	0x00c5c5c5,0x71007171
	DD	0x00a4a4a4,0x29002929
	DD	0x00373737,0xcd00cdcd
	DD	0x00b1b1b1,0x6c006c6c
	DD	0x004c4c4c,0x13001313
	DD	0x00919191,0x64006464
	DD	0x006e6e6e,0x9b009b9b
	DD	0x008d8d8d,0x63006363
	DD	0x00767676,0x9d009d9d
	DD	0x00030303,0xc000c0c0
	DD	0x002d2d2d,0x4b004b4b
	DD	0x00dedede,0xb700b7b7
	DD	0x00969696,0xa500a5a5
	DD	0x00262626,0x89008989
	DD	0x007d7d7d,0x5f005f5f
	DD	0x00c6c6c6,0xb100b1b1
	DD	0x005c5c5c,0x17001717
	DD	0x00d3d3d3,0xf400f4f4
	DD	0x00f2f2f2,0xbc00bcbc
	DD	0x004f4f4f,0xd300d3d3
	DD	0x00191919,0x46004646
	DD	0x003f3f3f,0xcf00cfcf
	DD	0x00dcdcdc,0x37003737
	DD	0x00797979,0x5e005e5e
	DD	0x001d1d1d,0x47004747
	DD	0x00525252,0x94009494
	DD	0x00ebebeb,0xfa00fafa
	DD	0x00f3f3f3,0xfc00fcfc
	DD	0x006d6d6d,0x5b005b5b
	DD	0x005e5e5e,0x97009797
	DD	0x00fbfbfb,0xfe00fefe
	DD	0x00696969,0x5a005a5a
	DD	0x00b2b2b2,0xac00acac
	DD	0x00f0f0f0,0x3c003c3c
	DD	0x00313131,0x4c004c4c
	DD	0x000c0c0c,0x03000303
	DD	0x00d4d4d4,0x35003535
	DD	0x00cfcfcf,0xf300f3f3
	DD	0x008c8c8c,0x23002323
	DD	0x00e2e2e2,0xb800b8b8
	DD	0x00757575,0x5d005d5d
	DD	0x00a9a9a9,0x6a006a6a
	DD	0x004a4a4a,0x92009292
	DD	0x00575757,0xd500d5d5
	DD	0x00848484,0x21002121
	DD	0x00111111,0x44004444
	DD	0x00454545,0x51005151
	DD	0x001b1b1b,0xc600c6c6
	DD	0x00f5f5f5,0x7d007d7d
	DD	0x00e4e4e4,0x39003939
	DD	0x000e0e0e,0x83008383
	DD	0x00737373,0xdc00dcdc
	DD	0x00aaaaaa,0xaa00aaaa
	DD	0x00f1f1f1,0x7c007c7c
	DD	0x00dddddd,0x77007777
	DD	0x00595959,0x56005656
	DD	0x00141414,0x05000505
	DD	0x006c6c6c,0x1b001b1b
	DD	0x00929292,0xa400a4a4
	DD	0x00545454,0x15001515
	DD	0x00d0d0d0,0x34003434
	DD	0x00787878,0x1e001e1e
	DD	0x00707070,0x1c001c1c
	DD	0x00e3e3e3,0xf800f8f8
	DD	0x00494949,0x52005252
	DD	0x00808080,0x20002020
	DD	0x00505050,0x14001414
	DD	0x00a7a7a7,0xe900e9e9
	DD	0x00f6f6f6,0xbd00bdbd
	DD	0x00777777,0xdd00dddd
	DD	0x00939393,0xe400e4e4
	DD	0x00868686,0xa100a1a1
	DD	0x00838383,0xe000e0e0
	DD	0x002a2a2a,0x8a008a8a
	DD	0x00c7c7c7,0xf100f1f1
	DD	0x005b5b5b,0xd600d6d6
	DD	0x00e9e9e9,0x7a007a7a
	DD	0x00eeeeee,0xbb00bbbb
	DD	0x008f8f8f,0xe300e3e3
	DD	0x00010101,0x40004040
	DD	0x003d3d3d,0x4f004f4f
global	Camellia_cbc_encrypt

ALIGN	16
Camellia_cbc_encrypt:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_Camellia_cbc_encrypt:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]
	mov	r9,QWORD[48+rsp]



DB	243,15,30,250
	cmp	rdx,0
	je	NEAR $L$cbc_abort
	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

$L$cbc_prologue:

	mov	rbp,rsp

	sub	rsp,64
	and	rsp,-64



	lea	r10,[((-64-63))+rcx]
	sub	r10,rsp
	neg	r10
	and	r10,0x3C0
	sub	rsp,r10


	mov	r12,rdi
	mov	r13,rsi
	mov	rbx,r8
	mov	r14,rcx
	mov	r15d,DWORD[272+rcx]

	mov	QWORD[40+rsp],r8
	mov	QWORD[48+rsp],rbp


$L$cbc_body:
	lea	rbp,[$L$Camellia_SBOX]

	mov	ecx,32
ALIGN	4
$L$cbc_prefetch_sbox:
	mov	rax,QWORD[rbp]
	mov	rsi,QWORD[32+rbp]
	mov	rdi,QWORD[64+rbp]
	mov	r11,QWORD[96+rbp]
	lea	rbp,[128+rbp]
	loop	$L$cbc_prefetch_sbox
	sub	rbp,4096
	shl	r15,6
	mov	rcx,rdx
	lea	r15,[r15*1+r14]

	cmp	r9d,0
	je	NEAR $L$CBC_DECRYPT

	and	rdx,-16
	and	rcx,15
	lea	rdx,[rdx*1+r12]
	mov	QWORD[rsp],r14
	mov	QWORD[8+rsp],rdx
	mov	QWORD[16+rsp],rcx

	cmp	rdx,r12
	mov	r8d,DWORD[rbx]
	mov	r9d,DWORD[4+rbx]
	mov	r10d,DWORD[8+rbx]
	mov	r11d,DWORD[12+rbx]
	je	NEAR $L$cbc_enc_tail
	jmp	NEAR $L$cbc_eloop

ALIGN	16
$L$cbc_eloop:
	xor	r8d,DWORD[r12]
	xor	r9d,DWORD[4+r12]
	xor	r10d,DWORD[8+r12]
	bswap	r8d
	xor	r11d,DWORD[12+r12]
	bswap	r9d
	bswap	r10d
	bswap	r11d

	call	_x86_64_Camellia_encrypt

	mov	r14,QWORD[rsp]
	bswap	r8d
	mov	rdx,QWORD[8+rsp]
	bswap	r9d
	mov	rcx,QWORD[16+rsp]
	bswap	r10d
	mov	DWORD[r13],r8d
	bswap	r11d
	mov	DWORD[4+r13],r9d
	mov	DWORD[8+r13],r10d
	lea	r12,[16+r12]
	mov	DWORD[12+r13],r11d
	cmp	r12,rdx
	lea	r13,[16+r13]
	jne	NEAR $L$cbc_eloop

	cmp	rcx,0
	jne	NEAR $L$cbc_enc_tail

	mov	r13,QWORD[40+rsp]
	mov	DWORD[r13],r8d
	mov	DWORD[4+r13],r9d
	mov	DWORD[8+r13],r10d
	mov	DWORD[12+r13],r11d
	jmp	NEAR $L$cbc_done

ALIGN	16
$L$cbc_enc_tail:
	xor	rax,rax
	mov	QWORD[((0+24))+rsp],rax
	mov	QWORD[((8+24))+rsp],rax
	mov	QWORD[16+rsp],rax

$L$cbc_enc_pushf:
	pushfq
	cld
	mov	rsi,r12
	lea	rdi,[((8+24))+rsp]
	DD	0x9066A4F3
	popfq
$L$cbc_enc_popf:

	lea	r12,[24+rsp]
	lea	rax,[((16+24))+rsp]
	mov	QWORD[8+rsp],rax
	jmp	NEAR $L$cbc_eloop

ALIGN	16
$L$CBC_DECRYPT:
	xchg	r15,r14
	add	rdx,15
	and	rcx,15
	and	rdx,-16
	mov	QWORD[rsp],r14
	lea	rdx,[rdx*1+r12]
	mov	QWORD[8+rsp],rdx
	mov	QWORD[16+rsp],rcx

	mov	rax,QWORD[rbx]
	mov	rbx,QWORD[8+rbx]
	jmp	NEAR $L$cbc_dloop
ALIGN	16
$L$cbc_dloop:
	mov	r8d,DWORD[r12]
	mov	r9d,DWORD[4+r12]
	mov	r10d,DWORD[8+r12]
	bswap	r8d
	mov	r11d,DWORD[12+r12]
	bswap	r9d
	mov	QWORD[((0+24))+rsp],rax
	bswap	r10d
	mov	QWORD[((8+24))+rsp],rbx
	bswap	r11d

	call	_x86_64_Camellia_decrypt

	mov	r14,QWORD[rsp]
	mov	rdx,QWORD[8+rsp]
	mov	rcx,QWORD[16+rsp]

	bswap	r8d
	mov	rax,QWORD[r12]
	bswap	r9d
	mov	rbx,QWORD[8+r12]
	bswap	r10d
	xor	r8d,DWORD[((0+24))+rsp]
	bswap	r11d
	xor	r9d,DWORD[((4+24))+rsp]
	xor	r10d,DWORD[((8+24))+rsp]
	lea	r12,[16+r12]
	xor	r11d,DWORD[((12+24))+rsp]
	cmp	r12,rdx
	je	NEAR $L$cbc_ddone

	mov	DWORD[r13],r8d
	mov	DWORD[4+r13],r9d
	mov	DWORD[8+r13],r10d
	mov	DWORD[12+r13],r11d

	lea	r13,[16+r13]
	jmp	NEAR $L$cbc_dloop

ALIGN	16
$L$cbc_ddone:
	mov	rdx,QWORD[40+rsp]
	cmp	rcx,0
	jne	NEAR $L$cbc_dec_tail

	mov	DWORD[r13],r8d
	mov	DWORD[4+r13],r9d
	mov	DWORD[8+r13],r10d
	mov	DWORD[12+r13],r11d

	mov	QWORD[rdx],rax
	mov	QWORD[8+rdx],rbx
	jmp	NEAR $L$cbc_done
ALIGN	16
$L$cbc_dec_tail:
	mov	DWORD[((0+24))+rsp],r8d
	mov	DWORD[((4+24))+rsp],r9d
	mov	DWORD[((8+24))+rsp],r10d
	mov	DWORD[((12+24))+rsp],r11d

$L$cbc_dec_pushf:
	pushfq
	cld
	lea	rsi,[((8+24))+rsp]
	lea	rdi,[r13]
	DD	0x9066A4F3
	popfq
$L$cbc_dec_popf:

	mov	QWORD[rdx],rax
	mov	QWORD[8+rdx],rbx
	jmp	NEAR $L$cbc_done

ALIGN	16
$L$cbc_done:
	mov	rcx,QWORD[48+rsp]

	mov	r15,QWORD[rcx]

	mov	r14,QWORD[8+rcx]

	mov	r13,QWORD[16+rcx]

	mov	r12,QWORD[24+rcx]

	mov	rbp,QWORD[32+rcx]

	mov	rbx,QWORD[40+rcx]

	lea	rsp,[48+rcx]

$L$cbc_abort:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_Camellia_cbc_encrypt:

DB	67,97,109,101,108,108,105,97,32,102,111,114,32,120,56,54
DB	95,54,52,32,98,121,32,60,97,112,112,114,111,64,111,112
DB	101,110,115,115,108,46,111,114,103,62,0
EXTERN	__imp_RtlVirtualUnwind

ALIGN	16
common_se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	lea	rsp,[((-64))+rsp]

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	mov	rsi,QWORD[8+r9]
	mov	r11,QWORD[56+r9]

	mov	r10d,DWORD[r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jb	NEAR $L$in_prologue

	mov	rax,QWORD[152+r8]

	mov	r10d,DWORD[4+r11]
	lea	r10,[r10*1+rsi]
	cmp	rbx,r10
	jae	NEAR $L$in_prologue

	lea	rax,[40+rax]
	mov	rbx,QWORD[((-8))+rax]
	mov	rbp,QWORD[((-16))+rax]
	mov	r13,QWORD[((-24))+rax]
	mov	r14,QWORD[((-32))+rax]
	mov	r15,QWORD[((-40))+rax]
	mov	QWORD[144+r8],rbx
	mov	QWORD[160+r8],rbp
	mov	QWORD[224+r8],r13
	mov	QWORD[232+r8],r14
	mov	QWORD[240+r8],r15

$L$in_prologue:
	mov	rdi,QWORD[8+rax]
	mov	rsi,QWORD[16+rax]
	mov	QWORD[152+r8],rax
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi

	jmp	NEAR $L$common_seh_exit



ALIGN	16
cbc_se_handler:
	push	rsi
	push	rdi
	push	rbx
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	pushfq
	lea	rsp,[((-64))+rsp]

	mov	rax,QWORD[120+r8]
	mov	rbx,QWORD[248+r8]

	lea	r10,[$L$cbc_prologue]
	cmp	rbx,r10
	jb	NEAR $L$in_cbc_prologue

	lea	r10,[$L$cbc_body]
	cmp	rbx,r10
	jb	NEAR $L$in_cbc_frame_setup

	mov	rax,QWORD[152+r8]

	lea	r10,[$L$cbc_abort]
	cmp	rbx,r10
	jae	NEAR $L$in_cbc_prologue


	lea	r10,[$L$cbc_enc_pushf]
	cmp	rbx,r10
	jbe	NEAR $L$in_cbc_no_flag
	lea	rax,[8+rax]
	lea	r10,[$L$cbc_enc_popf]
	cmp	rbx,r10
	jb	NEAR $L$in_cbc_no_flag
	lea	rax,[((-8))+rax]
	lea	r10,[$L$cbc_dec_pushf]
	cmp	rbx,r10
	jbe	NEAR $L$in_cbc_no_flag
	lea	rax,[8+rax]
	lea	r10,[$L$cbc_dec_popf]
	cmp	rbx,r10
	jb	NEAR $L$in_cbc_no_flag
	lea	rax,[((-8))+rax]

$L$in_cbc_no_flag:
	mov	rax,QWORD[48+rax]
	lea	rax,[48+rax]

$L$in_cbc_frame_setup:
	mov	rbx,QWORD[((-8))+rax]
	mov	rbp,QWORD[((-16))+rax]
	mov	r12,QWORD[((-24))+rax]
	mov	r13,QWORD[((-32))+rax]
	mov	r14,QWORD[((-40))+rax]
	mov	r15,QWORD[((-48))+rax]
	mov	QWORD[144+r8],rbx
	mov	QWORD[160+r8],rbp
	mov	QWORD[216+r8],r12
	mov	QWORD[224+r8],r13
	mov	QWORD[232+r8],r14
	mov	QWORD[240+r8],r15

$L$in_cbc_prologue:
	mov	rdi,QWORD[8+rax]
	mov	rsi,QWORD[16+rax]
	mov	QWORD[152+r8],rax
	mov	QWORD[168+r8],rsi
	mov	QWORD[176+r8],rdi

ALIGN	4
$L$common_seh_exit:

	mov	rdi,QWORD[40+r9]
	mov	rsi,r8
	mov	ecx,154
	DD	0xa548f3fc

	mov	rsi,r9
	xor	rcx,rcx
	mov	rdx,QWORD[8+rsi]
	mov	r8,QWORD[rsi]
	mov	r9,QWORD[16+rsi]
	mov	r10,QWORD[40+rsi]
	lea	r11,[56+rsi]
	lea	r12,[24+rsi]
	mov	QWORD[32+rsp],r10
	mov	QWORD[40+rsp],r11
	mov	QWORD[48+rsp],r12
	mov	QWORD[56+rsp],rcx
	call	QWORD[__imp_RtlVirtualUnwind]

	mov	eax,1
	lea	rsp,[64+rsp]
	popfq
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	pop	rbx
	pop	rdi
	pop	rsi
	DB	0F3h,0C3h		;repret


section	.pdata rdata align=4
ALIGN	4
	DD	$L$SEH_begin_Camellia_EncryptBlock_Rounds wrt ..imagebase
	DD	$L$SEH_end_Camellia_EncryptBlock_Rounds wrt ..imagebase
	DD	$L$SEH_info_Camellia_EncryptBlock_Rounds wrt ..imagebase

	DD	$L$SEH_begin_Camellia_DecryptBlock_Rounds wrt ..imagebase
	DD	$L$SEH_end_Camellia_DecryptBlock_Rounds wrt ..imagebase
	DD	$L$SEH_info_Camellia_DecryptBlock_Rounds wrt ..imagebase

	DD	$L$SEH_begin_Camellia_Ekeygen wrt ..imagebase
	DD	$L$SEH_end_Camellia_Ekeygen wrt ..imagebase
	DD	$L$SEH_info_Camellia_Ekeygen wrt ..imagebase

	DD	$L$SEH_begin_Camellia_cbc_encrypt wrt ..imagebase
	DD	$L$SEH_end_Camellia_cbc_encrypt wrt ..imagebase
	DD	$L$SEH_info_Camellia_cbc_encrypt wrt ..imagebase

section	.xdata rdata align=8
ALIGN	8
$L$SEH_info_Camellia_EncryptBlock_Rounds:
DB	9,0,0,0
	DD	common_se_handler wrt ..imagebase
	DD	$L$enc_prologue wrt ..imagebase,$L$enc_epilogue wrt ..imagebase
$L$SEH_info_Camellia_DecryptBlock_Rounds:
DB	9,0,0,0
	DD	common_se_handler wrt ..imagebase
	DD	$L$dec_prologue wrt ..imagebase,$L$dec_epilogue wrt ..imagebase
$L$SEH_info_Camellia_Ekeygen:
DB	9,0,0,0
	DD	common_se_handler wrt ..imagebase
	DD	$L$key_prologue wrt ..imagebase,$L$key_epilogue wrt ..imagebase
$L$SEH_info_Camellia_cbc_encrypt:
DB	9,0,0,0
	DD	cbc_se_handler wrt ..imagebase
                                                   node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/chacha/                             0000775 0000000 0000000 00000000000 14746647661 0025225 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/VC-WIN64A/asm_avx2/crypto/chacha/chacha-x86_64.asm            0000664 0000000 0000000 00000251625 14746647661 0030105 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        default	rel
%define XMMWORD
%define YMMWORD
%define ZMMWORD
section	.text code align=64


EXTERN	OPENSSL_ia32cap_P

ALIGN	64
$L$zero:
	DD	0,0,0,0
$L$one:
	DD	1,0,0,0
$L$inc:
	DD	0,1,2,3
$L$four:
	DD	4,4,4,4
$L$incy:
	DD	0,2,4,6,1,3,5,7
$L$eight:
	DD	8,8,8,8,8,8,8,8
$L$rot16:
DB	0x2,0x3,0x0,0x1,0x6,0x7,0x4,0x5,0xa,0xb,0x8,0x9,0xe,0xf,0xc,0xd
$L$rot24:
DB	0x3,0x0,0x1,0x2,0x7,0x4,0x5,0x6,0xb,0x8,0x9,0xa,0xf,0xc,0xd,0xe
$L$twoy:
	DD	2,0,0,0,2,0,0,0
ALIGN	64
$L$zeroz:
	DD	0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0
$L$fourz:
	DD	4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0
$L$incz:
	DD	0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
$L$sixteen:
	DD	16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16
$L$sigma:
DB	101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107
DB	0
DB	67,104,97,67,104,97,50,48,32,102,111,114,32,120,56,54
DB	95,54,52,44,32,67,82,89,80,84,79,71,65,77,83,32
DB	98,121,32,60,97,112,112,114,111,64,111,112,101,110,115,115
DB	108,46,111,114,103,62,0
global	ChaCha20_ctr32

ALIGN	64
ChaCha20_ctr32:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_ChaCha20_ctr32:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]



	cmp	rdx,0
	je	NEAR $L$no_data
	mov	r10,QWORD[((OPENSSL_ia32cap_P+4))]
	bt	r10,48
	jc	NEAR $L$ChaCha20_avx512
	test	r10,r10
	js	NEAR $L$ChaCha20_avx512vl
	test	r10d,512
	jnz	NEAR $L$ChaCha20_ssse3

	push	rbx

	push	rbp

	push	r12

	push	r13

	push	r14

	push	r15

	sub	rsp,64+24

$L$ctr32_body:


	movdqu	xmm1,XMMWORD[rcx]
	movdqu	xmm2,XMMWORD[16+rcx]
	movdqu	xmm3,XMMWORD[r8]
	movdqa	xmm4,XMMWORD[$L$one]


	movdqa	XMMWORD[16+rsp],xmm1
	movdqa	XMMWORD[32+rsp],xmm2
	movdqa	XMMWORD[48+rsp],xmm3
	mov	rbp,rdx
	jmp	NEAR $L$oop_outer

ALIGN	32
$L$oop_outer:
	mov	eax,0x61707865
	mov	ebx,0x3320646e
	mov	ecx,0x79622d32
	mov	edx,0x6b206574
	mov	r8d,DWORD[16+rsp]
	mov	r9d,DWORD[20+rsp]
	mov	r10d,DWORD[24+rsp]
	mov	r11d,DWORD[28+rsp]
	movd	r12d,xmm3
	mov	r13d,DWORD[52+rsp]
	mov	r14d,DWORD[56+rsp]
	mov	r15d,DWORD[60+rsp]

	mov	QWORD[((64+0))+rsp],rbp
	mov	ebp,10
	mov	QWORD[((64+8))+rsp],rsi
DB	102,72,15,126,214
	mov	QWORD[((64+16))+rsp],rdi
	mov	rdi,rsi
	shr	rdi,32
	jmp	NEAR $L$oop

ALIGN	32
$L$oop:
	add	eax,r8d
	xor	r12d,eax
	rol	r12d,16
	add	ebx,r9d
	xor	r13d,ebx
	rol	r13d,16
	add	esi,r12d
	xor	r8d,esi
	rol	r8d,12
	add	edi,r13d
	xor	r9d,edi
	rol	r9d,12
	add	eax,r8d
	xor	r12d,eax
	rol	r12d,8
	add	ebx,r9d
	xor	r13d,ebx
	rol	r13d,8
	add	esi,r12d
	xor	r8d,esi
	rol	r8d,7
	add	edi,r13d
	xor	r9d,edi
	rol	r9d,7
	mov	DWORD[32+rsp],esi
	mov	DWORD[36+rsp],edi
	mov	esi,DWORD[40+rsp]
	mov	edi,DWORD[44+rsp]
	add	ecx,r10d
	xor	r14d,ecx
	rol	r14d,16
	add	edx,r11d
	xor	r15d,edx
	rol	r15d,16
	add	esi,r14d
	xor	r10d,esi
	rol	r10d,12
	add	edi,r15d
	xor	r11d,edi
	rol	r11d,12
	add	ecx,r10d
	xor	r14d,ecx
	rol	r14d,8
	add	edx,r11d
	xor	r15d,edx
	rol	r15d,8
	add	esi,r14d
	xor	r10d,esi
	rol	r10d,7
	add	edi,r15d
	xor	r11d,edi
	rol	r11d,7
	add	eax,r9d
	xor	r15d,eax
	rol	r15d,16
	add	ebx,r10d
	xor	r12d,ebx
	rol	r12d,16
	add	esi,r15d
	xor	r9d,esi
	rol	r9d,12
	add	edi,r12d
	xor	r10d,edi
	rol	r10d,12
	add	eax,r9d
	xor	r15d,eax
	rol	r15d,8
	add	ebx,r10d
	xor	r12d,ebx
	rol	r12d,8
	add	esi,r15d
	xor	r9d,esi
	rol	r9d,7
	add	edi,r12d
	xor	r10d,edi
	rol	r10d,7
	mov	DWORD[40+rsp],esi
	mov	DWORD[44+rsp],edi
	mov	esi,DWORD[32+rsp]
	mov	edi,DWORD[36+rsp]
	add	ecx,r11d
	xor	r13d,ecx
	rol	r13d,16
	add	edx,r8d
	xor	r14d,edx
	rol	r14d,16
	add	esi,r13d
	xor	r11d,esi
	rol	r11d,12
	add	edi,r14d
	xor	r8d,edi
	rol	r8d,12
	add	ecx,r11d
	xor	r13d,ecx
	rol	r13d,8
	add	edx,r8d
	xor	r14d,edx
	rol	r14d,8
	add	esi,r13d
	xor	r11d,esi
	rol	r11d,7
	add	edi,r14d
	xor	r8d,edi
	rol	r8d,7
	dec	ebp
	jnz	NEAR $L$oop
	mov	DWORD[36+rsp],edi
	mov	DWORD[32+rsp],esi
	mov	rbp,QWORD[64+rsp]
	movdqa	xmm1,xmm2
	mov	rsi,QWORD[((64+8))+rsp]
	paddd	xmm3,xmm4
	mov	rdi,QWORD[((64+16))+rsp]

	add	eax,0x61707865
	add	ebx,0x3320646e
	add	ecx,0x79622d32
	add	edx,0x6b206574
	add	r8d,DWORD[16+rsp]
	add	r9d,DWORD[20+rsp]
	add	r10d,DWORD[24+rsp]
	add	r11d,DWORD[28+rsp]
	add	r12d,DWORD[48+rsp]
	add	r13d,DWORD[52+rsp]
	add	r14d,DWORD[56+rsp]
	add	r15d,DWORD[60+rsp]
	paddd	xmm1,XMMWORD[32+rsp]

	cmp	rbp,64
	jb	NEAR $L$tail

	xor	eax,DWORD[rsi]
	xor	ebx,DWORD[4+rsi]
	xor	ecx,DWORD[8+rsi]
	xor	edx,DWORD[12+rsi]
	xor	r8d,DWORD[16+rsi]
	xor	r9d,DWORD[20+rsi]
	xor	r10d,DWORD[24+rsi]
	xor	r11d,DWORD[28+rsi]
	movdqu	xmm0,XMMWORD[32+rsi]
	xor	r12d,DWORD[48+rsi]
	xor	r13d,DWORD[52+rsi]
	xor	r14d,DWORD[56+rsi]
	xor	r15d,DWORD[60+rsi]
	lea	rsi,[64+rsi]
	pxor	xmm0,xmm1

	movdqa	XMMWORD[32+rsp],xmm2
	movd	DWORD[48+rsp],xmm3

	mov	DWORD[rdi],eax
	mov	DWORD[4+rdi],ebx
	mov	DWORD[8+rdi],ecx
	mov	DWORD[12+rdi],edx
	mov	DWORD[16+rdi],r8d
	mov	DWORD[20+rdi],r9d
	mov	DWORD[24+rdi],r10d
	mov	DWORD[28+rdi],r11d
	movdqu	XMMWORD[32+rdi],xmm0
	mov	DWORD[48+rdi],r12d
	mov	DWORD[52+rdi],r13d
	mov	DWORD[56+rdi],r14d
	mov	DWORD[60+rdi],r15d
	lea	rdi,[64+rdi]

	sub	rbp,64
	jnz	NEAR $L$oop_outer

	jmp	NEAR $L$done

ALIGN	16
$L$tail:
	mov	DWORD[rsp],eax
	mov	DWORD[4+rsp],ebx
	xor	rbx,rbx
	mov	DWORD[8+rsp],ecx
	mov	DWORD[12+rsp],edx
	mov	DWORD[16+rsp],r8d
	mov	DWORD[20+rsp],r9d
	mov	DWORD[24+rsp],r10d
	mov	DWORD[28+rsp],r11d
	movdqa	XMMWORD[32+rsp],xmm1
	mov	DWORD[48+rsp],r12d
	mov	DWORD[52+rsp],r13d
	mov	DWORD[56+rsp],r14d
	mov	DWORD[60+rsp],r15d

$L$oop_tail:
	movzx	eax,BYTE[rbx*1+rsi]
	movzx	edx,BYTE[rbx*1+rsp]
	lea	rbx,[1+rbx]
	xor	eax,edx
	mov	BYTE[((-1))+rbx*1+rdi],al
	dec	rbp
	jnz	NEAR $L$oop_tail

$L$done:
	lea	rsi,[((64+24+48))+rsp]

	mov	r15,QWORD[((-48))+rsi]

	mov	r14,QWORD[((-40))+rsi]

	mov	r13,QWORD[((-32))+rsi]

	mov	r12,QWORD[((-24))+rsi]

	mov	rbp,QWORD[((-16))+rsi]

	mov	rbx,QWORD[((-8))+rsi]

	lea	rsp,[rsi]

$L$no_data:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_ChaCha20_ctr32:

ALIGN	32
ChaCha20_ssse3:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_ChaCha20_ssse3:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]



$L$ChaCha20_ssse3:
	mov	r9,rsp

	test	r10d,2048
	jnz	NEAR $L$ChaCha20_4xop
	cmp	rdx,128
	je	NEAR $L$ChaCha20_128
	ja	NEAR $L$ChaCha20_4x

$L$do_sse3_after_all:
	sub	rsp,64+168
	movaps	XMMWORD[(-40)+r9],xmm6
	movaps	XMMWORD[(-24)+r9],xmm7
$L$ssse3_body:
	movdqa	xmm0,XMMWORD[$L$sigma]
	movdqu	xmm1,XMMWORD[rcx]
	movdqu	xmm2,XMMWORD[16+rcx]
	movdqu	xmm3,XMMWORD[r8]
	movdqa	xmm6,XMMWORD[$L$rot16]
	movdqa	xmm7,XMMWORD[$L$rot24]

	movdqa	XMMWORD[rsp],xmm0
	movdqa	XMMWORD[16+rsp],xmm1
	movdqa	XMMWORD[32+rsp],xmm2
	movdqa	XMMWORD[48+rsp],xmm3
	mov	r8,10
	jmp	NEAR $L$oop_ssse3

ALIGN	32
$L$oop_outer_ssse3:
	movdqa	xmm3,XMMWORD[$L$one]
	movdqa	xmm0,XMMWORD[rsp]
	movdqa	xmm1,XMMWORD[16+rsp]
	movdqa	xmm2,XMMWORD[32+rsp]
	paddd	xmm3,XMMWORD[48+rsp]
	mov	r8,10
	movdqa	XMMWORD[48+rsp],xmm3
	jmp	NEAR $L$oop_ssse3

ALIGN	32
$L$oop_ssse3:
	paddd	xmm0,xmm1
	pxor	xmm3,xmm0
DB	102,15,56,0,222
	paddd	xmm2,xmm3
	pxor	xmm1,xmm2
	movdqa	xmm4,xmm1
	psrld	xmm1,20
	pslld	xmm4,12
	por	xmm1,xmm4
	paddd	xmm0,xmm1
	pxor	xmm3,xmm0
DB	102,15,56,0,223
	paddd	xmm2,xmm3
	pxor	xmm1,xmm2
	movdqa	xmm4,xmm1
	psrld	xmm1,25
	pslld	xmm4,7
	por	xmm1,xmm4
	pshufd	xmm2,xmm2,78
	pshufd	xmm1,xmm1,57
	pshufd	xmm3,xmm3,147
	nop
	paddd	xmm0,xmm1
	pxor	xmm3,xmm0
DB	102,15,56,0,222
	paddd	xmm2,xmm3
	pxor	xmm1,xmm2
	movdqa	xmm4,xmm1
	psrld	xmm1,20
	pslld	xmm4,12
	por	xmm1,xmm4
	paddd	xmm0,xmm1
	pxor	xmm3,xmm0
DB	102,15,56,0,223
	paddd	xmm2,xmm3
	pxor	xmm1,xmm2
	movdqa	xmm4,xmm1
	psrld	xmm1,25
	pslld	xmm4,7
	por	xmm1,xmm4
	pshufd	xmm2,xmm2,78
	pshufd	xmm1,xmm1,147
	pshufd	xmm3,xmm3,57
	dec	r8
	jnz	NEAR $L$oop_ssse3
	paddd	xmm0,XMMWORD[rsp]
	paddd	xmm1,XMMWORD[16+rsp]
	paddd	xmm2,XMMWORD[32+rsp]
	paddd	xmm3,XMMWORD[48+rsp]

	cmp	rdx,64
	jb	NEAR $L$tail_ssse3

	movdqu	xmm4,XMMWORD[rsi]
	movdqu	xmm5,XMMWORD[16+rsi]
	pxor	xmm0,xmm4
	movdqu	xmm4,XMMWORD[32+rsi]
	pxor	xmm1,xmm5
	movdqu	xmm5,XMMWORD[48+rsi]
	lea	rsi,[64+rsi]
	pxor	xmm2,xmm4
	pxor	xmm3,xmm5

	movdqu	XMMWORD[rdi],xmm0
	movdqu	XMMWORD[16+rdi],xmm1
	movdqu	XMMWORD[32+rdi],xmm2
	movdqu	XMMWORD[48+rdi],xmm3
	lea	rdi,[64+rdi]

	sub	rdx,64
	jnz	NEAR $L$oop_outer_ssse3

	jmp	NEAR $L$done_ssse3

ALIGN	16
$L$tail_ssse3:
	movdqa	XMMWORD[rsp],xmm0
	movdqa	XMMWORD[16+rsp],xmm1
	movdqa	XMMWORD[32+rsp],xmm2
	movdqa	XMMWORD[48+rsp],xmm3
	xor	r8,r8

$L$oop_tail_ssse3:
	movzx	eax,BYTE[r8*1+rsi]
	movzx	ecx,BYTE[r8*1+rsp]
	lea	r8,[1+r8]
	xor	eax,ecx
	mov	BYTE[((-1))+r8*1+rdi],al
	dec	rdx
	jnz	NEAR $L$oop_tail_ssse3

$L$done_ssse3:
	movaps	xmm6,XMMWORD[((-40))+r9]
	movaps	xmm7,XMMWORD[((-24))+r9]
	lea	rsp,[r9]

$L$ssse3_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_ChaCha20_ssse3:

ALIGN	32
ChaCha20_128:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_ChaCha20_128:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]



$L$ChaCha20_128:
	mov	r9,rsp

	sub	rsp,64+104
	movaps	XMMWORD[(-104)+r9],xmm6
	movaps	XMMWORD[(-88)+r9],xmm7
	movaps	XMMWORD[(-72)+r9],xmm8
	movaps	XMMWORD[(-56)+r9],xmm9
	movaps	XMMWORD[(-40)+r9],xmm10
	movaps	XMMWORD[(-24)+r9],xmm11
$L$128_body:
	movdqa	xmm8,XMMWORD[$L$sigma]
	movdqu	xmm9,XMMWORD[rcx]
	movdqu	xmm2,XMMWORD[16+rcx]
	movdqu	xmm3,XMMWORD[r8]
	movdqa	xmm1,XMMWORD[$L$one]
	movdqa	xmm6,XMMWORD[$L$rot16]
	movdqa	xmm7,XMMWORD[$L$rot24]

	movdqa	xmm10,xmm8
	movdqa	XMMWORD[rsp],xmm8
	movdqa	xmm11,xmm9
	movdqa	XMMWORD[16+rsp],xmm9
	movdqa	xmm0,xmm2
	movdqa	XMMWORD[32+rsp],xmm2
	paddd	xmm1,xmm3
	movdqa	XMMWORD[48+rsp],xmm3
	mov	r8,10
	jmp	NEAR $L$oop_128

ALIGN	32
$L$oop_128:
	paddd	xmm8,xmm9
	pxor	xmm3,xmm8
	paddd	xmm10,xmm11
	pxor	xmm1,xmm10
DB	102,15,56,0,222
DB	102,15,56,0,206
	paddd	xmm2,xmm3
	paddd	xmm0,xmm1
	pxor	xmm9,xmm2
	pxor	xmm11,xmm0
	movdqa	xmm4,xmm9
	psrld	xmm9,20
	movdqa	xmm5,xmm11
	pslld	xmm4,12
	psrld	xmm11,20
	por	xmm9,xmm4
	pslld	xmm5,12
	por	xmm11,xmm5
	paddd	xmm8,xmm9
	pxor	xmm3,xmm8
	paddd	xmm10,xmm11
	pxor	xmm1,xmm10
DB	102,15,56,0,223
DB	102,15,56,0,207
	paddd	xmm2,xmm3
	paddd	xmm0,xmm1
	pxor	xmm9,xmm2
	pxor	xmm11,xmm0
	movdqa	xmm4,xmm9
	psrld	xmm9,25
	movdqa	xmm5,xmm11
	pslld	xmm4,7
	psrld	xmm11,25
	por	xmm9,xmm4
	pslld	xmm5,7
	por	xmm11,xmm5
	pshufd	xmm2,xmm2,78
	pshufd	xmm9,xmm9,57
	pshufd	xmm3,xmm3,147
	pshufd	xmm0,xmm0,78
	pshufd	xmm11,xmm11,57
	pshufd	xmm1,xmm1,147
	paddd	xmm8,xmm9
	pxor	xmm3,xmm8
	paddd	xmm10,xmm11
	pxor	xmm1,xmm10
DB	102,15,56,0,222
DB	102,15,56,0,206
	paddd	xmm2,xmm3
	paddd	xmm0,xmm1
	pxor	xmm9,xmm2
	pxor	xmm11,xmm0
	movdqa	xmm4,xmm9
	psrld	xmm9,20
	movdqa	xmm5,xmm11
	pslld	xmm4,12
	psrld	xmm11,20
	por	xmm9,xmm4
	pslld	xmm5,12
	por	xmm11,xmm5
	paddd	xmm8,xmm9
	pxor	xmm3,xmm8
	paddd	xmm10,xmm11
	pxor	xmm1,xmm10
DB	102,15,56,0,223
DB	102,15,56,0,207
	paddd	xmm2,xmm3
	paddd	xmm0,xmm1
	pxor	xmm9,xmm2
	pxor	xmm11,xmm0
	movdqa	xmm4,xmm9
	psrld	xmm9,25
	movdqa	xmm5,xmm11
	pslld	xmm4,7
	psrld	xmm11,25
	por	xmm9,xmm4
	pslld	xmm5,7
	por	xmm11,xmm5
	pshufd	xmm2,xmm2,78
	pshufd	xmm9,xmm9,147
	pshufd	xmm3,xmm3,57
	pshufd	xmm0,xmm0,78
	pshufd	xmm11,xmm11,147
	pshufd	xmm1,xmm1,57
	dec	r8
	jnz	NEAR $L$oop_128
	paddd	xmm8,XMMWORD[rsp]
	paddd	xmm9,XMMWORD[16+rsp]
	paddd	xmm2,XMMWORD[32+rsp]
	paddd	xmm3,XMMWORD[48+rsp]
	paddd	xmm1,XMMWORD[$L$one]
	paddd	xmm10,XMMWORD[rsp]
	paddd	xmm11,XMMWORD[16+rsp]
	paddd	xmm0,XMMWORD[32+rsp]
	paddd	xmm1,XMMWORD[48+rsp]

	movdqu	xmm4,XMMWORD[rsi]
	movdqu	xmm5,XMMWORD[16+rsi]
	pxor	xmm8,xmm4
	movdqu	xmm4,XMMWORD[32+rsi]
	pxor	xmm9,xmm5
	movdqu	xmm5,XMMWORD[48+rsi]
	pxor	xmm2,xmm4
	movdqu	xmm4,XMMWORD[64+rsi]
	pxor	xmm3,xmm5
	movdqu	xmm5,XMMWORD[80+rsi]
	pxor	xmm10,xmm4
	movdqu	xmm4,XMMWORD[96+rsi]
	pxor	xmm11,xmm5
	movdqu	xmm5,XMMWORD[112+rsi]
	pxor	xmm0,xmm4
	pxor	xmm1,xmm5

	movdqu	XMMWORD[rdi],xmm8
	movdqu	XMMWORD[16+rdi],xmm9
	movdqu	XMMWORD[32+rdi],xmm2
	movdqu	XMMWORD[48+rdi],xmm3
	movdqu	XMMWORD[64+rdi],xmm10
	movdqu	XMMWORD[80+rdi],xmm11
	movdqu	XMMWORD[96+rdi],xmm0
	movdqu	XMMWORD[112+rdi],xmm1
	movaps	xmm6,XMMWORD[((-104))+r9]
	movaps	xmm7,XMMWORD[((-88))+r9]
	movaps	xmm8,XMMWORD[((-72))+r9]
	movaps	xmm9,XMMWORD[((-56))+r9]
	movaps	xmm10,XMMWORD[((-40))+r9]
	movaps	xmm11,XMMWORD[((-24))+r9]
	lea	rsp,[r9]

$L$128_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_ChaCha20_128:

ALIGN	32
ChaCha20_4x:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_ChaCha20_4x:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]



$L$ChaCha20_4x:
	mov	r9,rsp

	mov	r11,r10
	shr	r10,32
	test	r10,32
	jnz	NEAR $L$ChaCha20_8x
	cmp	rdx,192
	ja	NEAR $L$proceed4x

	and	r11,71303168
	cmp	r11,4194304
	je	NEAR $L$do_sse3_after_all

$L$proceed4x:
	sub	rsp,0x140+168
	movaps	XMMWORD[(-168)+r9],xmm6
	movaps	XMMWORD[(-152)+r9],xmm7
	movaps	XMMWORD[(-136)+r9],xmm8
	movaps	XMMWORD[(-120)+r9],xmm9
	movaps	XMMWORD[(-104)+r9],xmm10
	movaps	XMMWORD[(-88)+r9],xmm11
	movaps	XMMWORD[(-72)+r9],xmm12
	movaps	XMMWORD[(-56)+r9],xmm13
	movaps	XMMWORD[(-40)+r9],xmm14
	movaps	XMMWORD[(-24)+r9],xmm15
$L$4x_body:
	movdqa	xmm11,XMMWORD[$L$sigma]
	movdqu	xmm15,XMMWORD[rcx]
	movdqu	xmm7,XMMWORD[16+rcx]
	movdqu	xmm3,XMMWORD[r8]
	lea	rcx,[256+rsp]
	lea	r10,[$L$rot16]
	lea	r11,[$L$rot24]

	pshufd	xmm8,xmm11,0x00
	pshufd	xmm9,xmm11,0x55
	movdqa	XMMWORD[64+rsp],xmm8
	pshufd	xmm10,xmm11,0xaa
	movdqa	XMMWORD[80+rsp],xmm9
	pshufd	xmm11,xmm11,0xff
	movdqa	XMMWORD[96+rsp],xmm10
	movdqa	XMMWORD[112+rsp],xmm11

	pshufd	xmm12,xmm15,0x00
	pshufd	xmm13,xmm15,0x55
	movdqa	XMMWORD[(128-256)+rcx],xmm12
	pshufd	xmm14,xmm15,0xaa
	movdqa	XMMWORD[(144-256)+rcx],xmm13
	pshufd	xmm15,xmm15,0xff
	movdqa	XMMWORD[(160-256)+rcx],xmm14
	movdqa	XMMWORD[(176-256)+rcx],xmm15

	pshufd	xmm4,xmm7,0x00
	pshufd	xmm5,xmm7,0x55
	movdqa	XMMWORD[(192-256)+rcx],xmm4
	pshufd	xmm6,xmm7,0xaa
	movdqa	XMMWORD[(208-256)+rcx],xmm5
	pshufd	xmm7,xmm7,0xff
	movdqa	XMMWORD[(224-256)+rcx],xmm6
	movdqa	XMMWORD[(240-256)+rcx],xmm7

	pshufd	xmm0,xmm3,0x00
	pshufd	xmm1,xmm3,0x55
	paddd	xmm0,XMMWORD[$L$inc]
	pshufd	xmm2,xmm3,0xaa
	movdqa	XMMWORD[(272-256)+rcx],xmm1
	pshufd	xmm3,xmm3,0xff
	movdqa	XMMWORD[(288-256)+rcx],xmm2
	movdqa	XMMWORD[(304-256)+rcx],xmm3

	jmp	NEAR $L$oop_enter4x

ALIGN	32
$L$oop_outer4x:
	movdqa	xmm8,XMMWORD[64+rsp]
	movdqa	xmm9,XMMWORD[80+rsp]
	movdqa	xmm10,XMMWORD[96+rsp]
	movdqa	xmm11,XMMWORD[112+rsp]
	movdqa	xmm12,XMMWORD[((128-256))+rcx]
	movdqa	xmm13,XMMWORD[((144-256))+rcx]
	movdqa	xmm14,XMMWORD[((160-256))+rcx]
	movdqa	xmm15,XMMWORD[((176-256))+rcx]
	movdqa	xmm4,XMMWORD[((192-256))+rcx]
	movdqa	xmm5,XMMWORD[((208-256))+rcx]
	movdqa	xmm6,XMMWORD[((224-256))+rcx]
	movdqa	xmm7,XMMWORD[((240-256))+rcx]
	movdqa	xmm0,XMMWORD[((256-256))+rcx]
	movdqa	xmm1,XMMWORD[((272-256))+rcx]
	movdqa	xmm2,XMMWORD[((288-256))+rcx]
	movdqa	xmm3,XMMWORD[((304-256))+rcx]
	paddd	xmm0,XMMWORD[$L$four]

$L$oop_enter4x:
	movdqa	XMMWORD[32+rsp],xmm6
	movdqa	XMMWORD[48+rsp],xmm7
	movdqa	xmm7,XMMWORD[r10]
	mov	eax,10
	movdqa	XMMWORD[(256-256)+rcx],xmm0
	jmp	NEAR $L$oop4x

ALIGN	32
$L$oop4x:
	paddd	xmm8,xmm12
	paddd	xmm9,xmm13
	pxor	xmm0,xmm8
	pxor	xmm1,xmm9
DB	102,15,56,0,199
DB	102,15,56,0,207
	paddd	xmm4,xmm0
	paddd	xmm5,xmm1
	pxor	xmm12,xmm4
	pxor	xmm13,xmm5
	movdqa	xmm6,xmm12
	pslld	xmm12,12
	psrld	xmm6,20
	movdqa	xmm7,xmm13
	pslld	xmm13,12
	por	xmm12,xmm6
	psrld	xmm7,20
	movdqa	xmm6,XMMWORD[r11]
	por	xmm13,xmm7
	paddd	xmm8,xmm12
	paddd	xmm9,xmm13
	pxor	xmm0,xmm8
	pxor	xmm1,xmm9
DB	102,15,56,0,198
DB	102,15,56,0,206
	paddd	xmm4,xmm0
	paddd	xmm5,xmm1
	pxor	xmm12,xmm4
	pxor	xmm13,xmm5
	movdqa	xmm7,xmm12
	pslld	xmm12,7
	psrld	xmm7,25
	movdqa	xmm6,xmm13
	pslld	xmm13,7
	por	xmm12,xmm7
	psrld	xmm6,25
	movdqa	xmm7,XMMWORD[r10]
	por	xmm13,xmm6
	movdqa	XMMWORD[rsp],xmm4
	movdqa	XMMWORD[16+rsp],xmm5
	movdqa	xmm4,XMMWORD[32+rsp]
	movdqa	xmm5,XMMWORD[48+rsp]
	paddd	xmm10,xmm14
	paddd	xmm11,xmm15
	pxor	xmm2,xmm10
	pxor	xmm3,xmm11
DB	102,15,56,0,215
DB	102,15,56,0,223
	paddd	xmm4,xmm2
	paddd	xmm5,xmm3
	pxor	xmm14,xmm4
	pxor	xmm15,xmm5
	movdqa	xmm6,xmm14
	pslld	xmm14,12
	psrld	xmm6,20
	movdqa	xmm7,xmm15
	pslld	xmm15,12
	por	xmm14,xmm6
	psrld	xmm7,20
	movdqa	xmm6,XMMWORD[r11]
	por	xmm15,xmm7
	paddd	xmm10,xmm14
	paddd	xmm11,xmm15
	pxor	xmm2,xmm10
	pxor	xmm3,xmm11
DB	102,15,56,0,214
DB	102,15,56,0,222
	paddd	xmm4,xmm2
	paddd	xmm5,xmm3
	pxor	xmm14,xmm4
	pxor	xmm15,xmm5
	movdqa	xmm7,xmm14
	pslld	xmm14,7
	psrld	xmm7,25
	movdqa	xmm6,xmm15
	pslld	xmm15,7
	por	xmm14,xmm7
	psrld	xmm6,25
	movdqa	xmm7,XMMWORD[r10]
	por	xmm15,xmm6
	paddd	xmm8,xmm13
	paddd	xmm9,xmm14
	pxor	xmm3,xmm8
	pxor	xmm0,xmm9
DB	102,15,56,0,223
DB	102,15,56,0,199
	paddd	xmm4,xmm3
	paddd	xmm5,xmm0
	pxor	xmm13,xmm4
	pxor	xmm14,xmm5
	movdqa	xmm6,xmm13
	pslld	xmm13,12
	psrld	xmm6,20
	movdqa	xmm7,xmm14
	pslld	xmm14,12
	por	xmm13,xmm6
	psrld	xmm7,20
	movdqa	xmm6,XMMWORD[r11]
	por	xmm14,xmm7
	paddd	xmm8,xmm13
	paddd	xmm9,xmm14
	pxor	xmm3,xmm8
	pxor	xmm0,xmm9
DB	102,15,56,0,222
DB	102,15,56,0,198
	paddd	xmm4,xmm3
	paddd	xmm5,xmm0
	pxor	xmm13,xmm4
	pxor	xmm14,xmm5
	movdqa	xmm7,xmm13
	pslld	xmm13,7
	psrld	xmm7,25
	movdqa	xmm6,xmm14
	pslld	xmm14,7
	por	xmm13,xmm7
	psrld	xmm6,25
	movdqa	xmm7,XMMWORD[r10]
	por	xmm14,xmm6
	movdqa	XMMWORD[32+rsp],xmm4
	movdqa	XMMWORD[48+rsp],xmm5
	movdqa	xmm4,XMMWORD[rsp]
	movdqa	xmm5,XMMWORD[16+rsp]
	paddd	xmm10,xmm15
	paddd	xmm11,xmm12
	pxor	xmm1,xmm10
	pxor	xmm2,xmm11
DB	102,15,56,0,207
DB	102,15,56,0,215
	paddd	xmm4,xmm1
	paddd	xmm5,xmm2
	pxor	xmm15,xmm4
	pxor	xmm12,xmm5
	movdqa	xmm6,xmm15
	pslld	xmm15,12
	psrld	xmm6,20
	movdqa	xmm7,xmm12
	pslld	xmm12,12
	por	xmm15,xmm6
	psrld	xmm7,20
	movdqa	xmm6,XMMWORD[r11]
	por	xmm12,xmm7
	paddd	xmm10,xmm15
	paddd	xmm11,xmm12
	pxor	xmm1,xmm10
	pxor	xmm2,xmm11
DB	102,15,56,0,206
DB	102,15,56,0,214
	paddd	xmm4,xmm1
	paddd	xmm5,xmm2
	pxor	xmm15,xmm4
	pxor	xmm12,xmm5
	movdqa	xmm7,xmm15
	pslld	xmm15,7
	psrld	xmm7,25
	movdqa	xmm6,xmm12
	pslld	xmm12,7
	por	xmm15,xmm7
	psrld	xmm6,25
	movdqa	xmm7,XMMWORD[r10]
	por	xmm12,xmm6
	dec	eax
	jnz	NEAR $L$oop4x

	paddd	xmm8,XMMWORD[64+rsp]
	paddd	xmm9,XMMWORD[80+rsp]
	paddd	xmm10,XMMWORD[96+rsp]
	paddd	xmm11,XMMWORD[112+rsp]

	movdqa	xmm6,xmm8
	punpckldq	xmm8,xmm9
	movdqa	xmm7,xmm10
	punpckldq	xmm10,xmm11
	punpckhdq	xmm6,xmm9
	punpckhdq	xmm7,xmm11
	movdqa	xmm9,xmm8
	punpcklqdq	xmm8,xmm10
	movdqa	xmm11,xmm6
	punpcklqdq	xmm6,xmm7
	punpckhqdq	xmm9,xmm10
	punpckhqdq	xmm11,xmm7
	paddd	xmm12,XMMWORD[((128-256))+rcx]
	paddd	xmm13,XMMWORD[((144-256))+rcx]
	paddd	xmm14,XMMWORD[((160-256))+rcx]
	paddd	xmm15,XMMWORD[((176-256))+rcx]

	movdqa	XMMWORD[rsp],xmm8
	movdqa	XMMWORD[16+rsp],xmm9
	movdqa	xmm8,XMMWORD[32+rsp]
	movdqa	xmm9,XMMWORD[48+rsp]

	movdqa	xmm10,xmm12
	punpckldq	xmm12,xmm13
	movdqa	xmm7,xmm14
	punpckldq	xmm14,xmm15
	punpckhdq	xmm10,xmm13
	punpckhdq	xmm7,xmm15
	movdqa	xmm13,xmm12
	punpcklqdq	xmm12,xmm14
	movdqa	xmm15,xmm10
	punpcklqdq	xmm10,xmm7
	punpckhqdq	xmm13,xmm14
	punpckhqdq	xmm15,xmm7
	paddd	xmm4,XMMWORD[((192-256))+rcx]
	paddd	xmm5,XMMWORD[((208-256))+rcx]
	paddd	xmm8,XMMWORD[((224-256))+rcx]
	paddd	xmm9,XMMWORD[((240-256))+rcx]

	movdqa	XMMWORD[32+rsp],xmm6
	movdqa	XMMWORD[48+rsp],xmm11

	movdqa	xmm14,xmm4
	punpckldq	xmm4,xmm5
	movdqa	xmm7,xmm8
	punpckldq	xmm8,xmm9
	punpckhdq	xmm14,xmm5
	punpckhdq	xmm7,xmm9
	movdqa	xmm5,xmm4
	punpcklqdq	xmm4,xmm8
	movdqa	xmm9,xmm14
	punpcklqdq	xmm14,xmm7
	punpckhqdq	xmm5,xmm8
	punpckhqdq	xmm9,xmm7
	paddd	xmm0,XMMWORD[((256-256))+rcx]
	paddd	xmm1,XMMWORD[((272-256))+rcx]
	paddd	xmm2,XMMWORD[((288-256))+rcx]
	paddd	xmm3,XMMWORD[((304-256))+rcx]

	movdqa	xmm8,xmm0
	punpckldq	xmm0,xmm1
	movdqa	xmm7,xmm2
	punpckldq	xmm2,xmm3
	punpckhdq	xmm8,xmm1
	punpckhdq	xmm7,xmm3
	movdqa	xmm1,xmm0
	punpcklqdq	xmm0,xmm2
	movdqa	xmm3,xmm8
	punpcklqdq	xmm8,xmm7
	punpckhqdq	xmm1,xmm2
	punpckhqdq	xmm3,xmm7
	cmp	rdx,64*4
	jb	NEAR $L$tail4x

	movdqu	xmm6,XMMWORD[rsi]
	movdqu	xmm11,XMMWORD[16+rsi]
	movdqu	xmm2,XMMWORD[32+rsi]
	movdqu	xmm7,XMMWORD[48+rsi]
	pxor	xmm6,XMMWORD[rsp]
	pxor	xmm11,xmm12
	pxor	xmm2,xmm4
	pxor	xmm7,xmm0

	movdqu	XMMWORD[rdi],xmm6
	movdqu	xmm6,XMMWORD[64+rsi]
	movdqu	XMMWORD[16+rdi],xmm11
	movdqu	xmm11,XMMWORD[80+rsi]
	movdqu	XMMWORD[32+rdi],xmm2
	movdqu	xmm2,XMMWORD[96+rsi]
	movdqu	XMMWORD[48+rdi],xmm7
	movdqu	xmm7,XMMWORD[112+rsi]
	lea	rsi,[128+rsi]
	pxor	xmm6,XMMWORD[16+rsp]
	pxor	xmm11,xmm13
	pxor	xmm2,xmm5
	pxor	xmm7,xmm1

	movdqu	XMMWORD[64+rdi],xmm6
	movdqu	xmm6,XMMWORD[rsi]
	movdqu	XMMWORD[80+rdi],xmm11
	movdqu	xmm11,XMMWORD[16+rsi]
	movdqu	XMMWORD[96+rdi],xmm2
	movdqu	xmm2,XMMWORD[32+rsi]
	movdqu	XMMWORD[112+rdi],xmm7
	lea	rdi,[128+rdi]
	movdqu	xmm7,XMMWORD[48+rsi]
	pxor	xmm6,XMMWORD[32+rsp]
	pxor	xmm11,xmm10
	pxor	xmm2,xmm14
	pxor	xmm7,xmm8

	movdqu	XMMWORD[rdi],xmm6
	movdqu	xmm6,XMMWORD[64+rsi]
	movdqu	XMMWORD[16+rdi],xmm11
	movdqu	xmm11,XMMWORD[80+rsi]
	movdqu	XMMWORD[32+rdi],xmm2
	movdqu	xmm2,XMMWORD[96+rsi]
	movdqu	XMMWORD[48+rdi],xmm7
	movdqu	xmm7,XMMWORD[112+rsi]
	lea	rsi,[128+rsi]
	pxor	xmm6,XMMWORD[48+rsp]
	pxor	xmm11,xmm15
	pxor	xmm2,xmm9
	pxor	xmm7,xmm3
	movdqu	XMMWORD[64+rdi],xmm6
	movdqu	XMMWORD[80+rdi],xmm11
	movdqu	XMMWORD[96+rdi],xmm2
	movdqu	XMMWORD[112+rdi],xmm7
	lea	rdi,[128+rdi]

	sub	rdx,64*4
	jnz	NEAR $L$oop_outer4x

	jmp	NEAR $L$done4x

$L$tail4x:
	cmp	rdx,192
	jae	NEAR $L$192_or_more4x
	cmp	rdx,128
	jae	NEAR $L$128_or_more4x
	cmp	rdx,64
	jae	NEAR $L$64_or_more4x


	xor	r10,r10

	movdqa	XMMWORD[16+rsp],xmm12
	movdqa	XMMWORD[32+rsp],xmm4
	movdqa	XMMWORD[48+rsp],xmm0
	jmp	NEAR $L$oop_tail4x

ALIGN	32
$L$64_or_more4x:
	movdqu	xmm6,XMMWORD[rsi]
	movdqu	xmm11,XMMWORD[16+rsi]
	movdqu	xmm2,XMMWORD[32+rsi]
	movdqu	xmm7,XMMWORD[48+rsi]
	pxor	xmm6,XMMWORD[rsp]
	pxor	xmm11,xmm12
	pxor	xmm2,xmm4
	pxor	xmm7,xmm0
	movdqu	XMMWORD[rdi],xmm6
	movdqu	XMMWORD[16+rdi],xmm11
	movdqu	XMMWORD[32+rdi],xmm2
	movdqu	XMMWORD[48+rdi],xmm7
	je	NEAR $L$done4x

	movdqa	xmm6,XMMWORD[16+rsp]
	lea	rsi,[64+rsi]
	xor	r10,r10
	movdqa	XMMWORD[rsp],xmm6
	movdqa	XMMWORD[16+rsp],xmm13
	lea	rdi,[64+rdi]
	movdqa	XMMWORD[32+rsp],xmm5
	sub	rdx,64
	movdqa	XMMWORD[48+rsp],xmm1
	jmp	NEAR $L$oop_tail4x

ALIGN	32
$L$128_or_more4x:
	movdqu	xmm6,XMMWORD[rsi]
	movdqu	xmm11,XMMWORD[16+rsi]
	movdqu	xmm2,XMMWORD[32+rsi]
	movdqu	xmm7,XMMWORD[48+rsi]
	pxor	xmm6,XMMWORD[rsp]
	pxor	xmm11,xmm12
	pxor	xmm2,xmm4
	pxor	xmm7,xmm0

	movdqu	XMMWORD[rdi],xmm6
	movdqu	xmm6,XMMWORD[64+rsi]
	movdqu	XMMWORD[16+rdi],xmm11
	movdqu	xmm11,XMMWORD[80+rsi]
	movdqu	XMMWORD[32+rdi],xmm2
	movdqu	xmm2,XMMWORD[96+rsi]
	movdqu	XMMWORD[48+rdi],xmm7
	movdqu	xmm7,XMMWORD[112+rsi]
	pxor	xmm6,XMMWORD[16+rsp]
	pxor	xmm11,xmm13
	pxor	xmm2,xmm5
	pxor	xmm7,xmm1
	movdqu	XMMWORD[64+rdi],xmm6
	movdqu	XMMWORD[80+rdi],xmm11
	movdqu	XMMWORD[96+rdi],xmm2
	movdqu	XMMWORD[112+rdi],xmm7
	je	NEAR $L$done4x

	movdqa	xmm6,XMMWORD[32+rsp]
	lea	rsi,[128+rsi]
	xor	r10,r10
	movdqa	XMMWORD[rsp],xmm6
	movdqa	XMMWORD[16+rsp],xmm10
	lea	rdi,[128+rdi]
	movdqa	XMMWORD[32+rsp],xmm14
	sub	rdx,128
	movdqa	XMMWORD[48+rsp],xmm8
	jmp	NEAR $L$oop_tail4x

ALIGN	32
$L$192_or_more4x:
	movdqu	xmm6,XMMWORD[rsi]
	movdqu	xmm11,XMMWORD[16+rsi]
	movdqu	xmm2,XMMWORD[32+rsi]
	movdqu	xmm7,XMMWORD[48+rsi]
	pxor	xmm6,XMMWORD[rsp]
	pxor	xmm11,xmm12
	pxor	xmm2,xmm4
	pxor	xmm7,xmm0

	movdqu	XMMWORD[rdi],xmm6
	movdqu	xmm6,XMMWORD[64+rsi]
	movdqu	XMMWORD[16+rdi],xmm11
	movdqu	xmm11,XMMWORD[80+rsi]
	movdqu	XMMWORD[32+rdi],xmm2
	movdqu	xmm2,XMMWORD[96+rsi]
	movdqu	XMMWORD[48+rdi],xmm7
	movdqu	xmm7,XMMWORD[112+rsi]
	lea	rsi,[128+rsi]
	pxor	xmm6,XMMWORD[16+rsp]
	pxor	xmm11,xmm13
	pxor	xmm2,xmm5
	pxor	xmm7,xmm1

	movdqu	XMMWORD[64+rdi],xmm6
	movdqu	xmm6,XMMWORD[rsi]
	movdqu	XMMWORD[80+rdi],xmm11
	movdqu	xmm11,XMMWORD[16+rsi]
	movdqu	XMMWORD[96+rdi],xmm2
	movdqu	xmm2,XMMWORD[32+rsi]
	movdqu	XMMWORD[112+rdi],xmm7
	lea	rdi,[128+rdi]
	movdqu	xmm7,XMMWORD[48+rsi]
	pxor	xmm6,XMMWORD[32+rsp]
	pxor	xmm11,xmm10
	pxor	xmm2,xmm14
	pxor	xmm7,xmm8
	movdqu	XMMWORD[rdi],xmm6
	movdqu	XMMWORD[16+rdi],xmm11
	movdqu	XMMWORD[32+rdi],xmm2
	movdqu	XMMWORD[48+rdi],xmm7
	je	NEAR $L$done4x

	movdqa	xmm6,XMMWORD[48+rsp]
	lea	rsi,[64+rsi]
	xor	r10,r10
	movdqa	XMMWORD[rsp],xmm6
	movdqa	XMMWORD[16+rsp],xmm15
	lea	rdi,[64+rdi]
	movdqa	XMMWORD[32+rsp],xmm9
	sub	rdx,192
	movdqa	XMMWORD[48+rsp],xmm3

$L$oop_tail4x:
	movzx	eax,BYTE[r10*1+rsi]
	movzx	ecx,BYTE[r10*1+rsp]
	lea	r10,[1+r10]
	xor	eax,ecx
	mov	BYTE[((-1))+r10*1+rdi],al
	dec	rdx
	jnz	NEAR $L$oop_tail4x

$L$done4x:
	movaps	xmm6,XMMWORD[((-168))+r9]
	movaps	xmm7,XMMWORD[((-152))+r9]
	movaps	xmm8,XMMWORD[((-136))+r9]
	movaps	xmm9,XMMWORD[((-120))+r9]
	movaps	xmm10,XMMWORD[((-104))+r9]
	movaps	xmm11,XMMWORD[((-88))+r9]
	movaps	xmm12,XMMWORD[((-72))+r9]
	movaps	xmm13,XMMWORD[((-56))+r9]
	movaps	xmm14,XMMWORD[((-40))+r9]
	movaps	xmm15,XMMWORD[((-24))+r9]
	lea	rsp,[r9]

$L$4x_epilogue:
	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
	mov	rsi,QWORD[16+rsp]
	DB	0F3h,0C3h		;repret

$L$SEH_end_ChaCha20_4x:

ALIGN	32
ChaCha20_4xop:
	mov	QWORD[8+rsp],rdi	;WIN64 prologue
	mov	QWORD[16+rsp],rsi
	mov	rax,rsp
$L$SEH_begin_ChaCha20_4xop:
	mov	rdi,rcx
	mov	rsi,rdx
	mov	rdx,r8
	mov	rcx,r9
	mov	r8,QWORD[40+rsp]



$L$ChaCha20_4xop:
	mov	r9,rsp

	sub	rsp,0x140+168
	movaps	XMMWORD[(-168)+r9],xmm6
	movaps	XMMWORD[(-152)+r9],xmm7
	movaps	XMMWORD[(-136)+r9],xmm8
	movaps	XMMWORD[(-120)+r9],xmm9
	movaps	XMMWORD[(-104)+r9],xmm10
	movaps	XMMWORD[(-88)+r9],xmm11
	movaps	XMMWORD[(-72)+r9],xmm12
	movaps	XMMWORD[(-56)+r9],xmm13
	movaps	XMMWORD[(-40)+r9],xmm14
	movaps	XMMWORD[(-24)+r9],xmm15
$L$4xop_body:
	vzeroupper

	vmovdqa	xmm11,XMMWORD[$L$sigma]
	vmovdqu	xmm3,XMMWORD[rcx]
	vmovdqu	xmm15,XMMWORD[16+rcx]
	vmovdqu	xmm7,XMMWORD[r8]
	lea	rcx,[256+rsp]

	vpshufd	xmm8,xmm11,0x00
	vpshufd	xmm9,xmm11,0x55
	vmovdqa	XMMWORD[64+rsp],xmm8
	vpshufd	xmm10,xmm11,0xaa
	vmovdqa	XMMWORD[80+rsp],xmm9
	vpshufd	xmm11,xmm11,0xff
	vmovdqa	XMMWORD[96+rsp],xmm10
	vmovdqa	XMMWORD[112+rsp],xmm11

	vpshufd	xmm0,xmm3,0x00
	vpshufd	xmm1,xmm3,0x55
	vmovdqa	XMMWORD[(128-256)+rcx],xmm0
	vpshufd	xmm2,xmm3,0xaa
	vmovdqa	XMMWORD[(144-256)+rcx],xmm1
	vpshufd	xmm3,xmm3,0xff
	vmovdqa	XMMWORD[(160-256)+rcx],xmm2
	vmovdqa	XMMWORD[(176-256)+rcx],xmm3

	vpshufd	xmm12,xmm15,0x00
	vpshufd	xmm13,xmm15,0x55
	vmovdqa	XMMWORD[(192-256)+rcx],xmm12
	vpshufd	xmm14,xmm15,0xaa
	vmovdqa	XMMWORD[(208-256)+rcx],xmm13
	vpshufd	xmm15,xmm15,0xff
	vmovdqa	XMMWORD[(224-256)+rcx],xmm14
	vmovdqa	XMMWORD[(240-256)+rcx],xmm15

	vpshufd	xmm4,xmm7,0x00
	vpshufd	xmm5,xmm7,0x55
	vpaddd	xmm4,xmm4,XMMWORD[$L$inc]
	vpshufd	xmm6,xmm7,0xaa
	vmovdqa	XMMWORD[(272-256)+rcx],xmm5
	vpshufd	xmm7,xmm7,0xff
	vmovdqa	XMMWORD[(288-256)+rcx],xmm6
	vmovdqa	XMMWORD[(304-256)+rcx],xmm7

	jmp	NEAR $L$oop_enter4xop

ALIGN	32
$L$oop_outer4xop:
	vmovdqa	xmm8,XMMWORD[64+rsp]
	vmovdqa	xmm9,XMMWORD[80+rsp]
	vmovdqa	xmm10,XMMWORD[96+rsp]
	vmovdqa	xmm11,XMMWORD[112+rsp]
	vmovdqa	xmm0,XMMWORD[((128-256))+rcx]
	vmovdqa	xmm1,XMMWORD[((144-256))+rcx]
	vmovdqa	xmm2,XMMWORD[((160-256))+rcx]
	vmovdqa	xmm3,XMMWORD[((176-256))+rcx]
	vmovdqa	xmm12,XMMWORD[((192-256))+rcx]
	vmovdqa	xmm13,XMMWORD[((208-256))+rcx]
	vmovdqa	xmm14,XMMWORD[((224-256))+rcx]
	vmovdqa	xmm15,XMMWORD[((240-256))+rcx]
	vmovdqa	xmm4,XMMWORD[((256-256))+rcx]
	vmovdqa	xmm5,XMMWORD[((272-256))+rcx]
	vmovdqa	xmm6,XMMWORD[((288-256))+rcx]
	vmovdqa	xmm7,XMMWORD[((304-256))+rcx]
	vpaddd	xmm4,xmm4,XMMWORD[$L$four]

$L$oop_enter4xop:
	mov	eax,10
	vmovdqa	XMMWORD[(256-256)+rcx],xmm4
	jmp	NEAR $L$oop4xop

ALIGN	32
$L$oop4xop:
	vpaddd	xmm8,xmm8,xmm0
	vpaddd	xmm9,xmm9,xmm1
	vpaddd	xmm10,xmm10,xmm2
	vpaddd	xmm11,xmm11,xmm3
	vpxor	xmm4,xmm8,xmm4
	vpxor	xmm5,xmm9,xmm5
	vpxor	xmm6,xmm10,xmm6
	vpxor	xmm7,xmm11,xmm7
DB	143,232,120,194,228,16
DB	143,232,120,194,237,16
DB	143,232,120,194,246,16
DB	143,232,120,194,255,16
	vpaddd	xmm12,xmm12,xmm4
	vpaddd	xmm13,xmm13,xmm5
	vpaddd	xmm14,xmm14,xmm6
	vpaddd	xmm15,xmm15,xmm7
	vpxor	xmm0,xmm12,xmm0
	vpxor	xmm1,xmm13,xmm1
	vpxor	xmm2,xmm2,xmm14
	vpxor	xmm3,xmm3,xmm15
DB	143,232,120,194,192,12
DB	143,232,120,194,201,12
DB	143,232,120,194,210,12
DB	143,232,120,194,219,12
	vpaddd	xmm8,xmm0,xmm8
	vpaddd	xmm9,xmm1,xmm9
	vpaddd	xmm10,xmm10,xmm2
	vpaddd	xmm11,xmm11,xmm3
	vpxor	xmm4,xmm8,xmm4
	vpxor	xmm5,xmm9,xmm5
	vpxor	xmm6,xmm10,xmm6
	vpxor	xmm7,xmm11,xmm7
DB	143,232,120,194,228,8
DB	143,232,120,194,237,8
DB	143,232,120,194,246,8
DB	143,232,120,194,255,8
	vpaddd	xmm12,xmm12,xmm4
	vpaddd	xmm13,xmm13,xmm5
	vpaddd	xmm14,xmm14,xmm6
	vpaddd	xmm15,xmm15,xmm7
	vpxor	xmm0,xmm12,xmm0
	vpxor	xmm1,xmm13,xmm1
	vpxor	xmm2,xmm2,xmm14
	vpxor	xmm3,xmm3,xmm15
DB	143,232,120,194,192,7
DB	143,232,120,194,201,7
DB	143,232,120,194,210,7
DB	143,232,120,194,219,7
	vpaddd	xmm8,xmm8,xmm1
	vpaddd	xmm9,xmm9,xmm2
	vpaddd	xmm10,xmm10,xmm3
	vpaddd	xmm11,xmm11,xmm0
	vpxor	xmm7,xmm8,xmm7
	vpxor	xmm4,xmm9,xmm4
	vpxor	xmm5,xmm10,xmm5
	vpxor	xmm6,xmm11,xmm6
DB	143,232,120,194,255,16
DB	143,232,120,194,228,16
DB	143,232,120,194,237,16
DB	143,232,120,194,246,16
	vpaddd	xmm14,xmm14,xmm7
	vpaddd	xmm15,xmm15,xmm4
	vpaddd	xmm12,xmm12,xmm5
	vpaddd	xmm13,xmm13,xmm6
	vpxor	xmm1,xmm14,xmm1
	vpxor	xmm2,xmm15,xmm2
	vpxor	xmm3,xmm3,xmm12
	vpxor	xmm0,xmm0,xmm13
DB	143,232,120,194,201,12
DB	143,232,120,194,210,12
DB	143,232,120,194,219,12
DB	143,232,120,194,192,12
	vpaddd	xmm8,xmm1,xmm8
	vpaddd	xmm9,xmm2,xmm9
	vpaddd	xmm10,xmm10,xmm3
	vpaddd	xmm11,xmm11,xmm0
	vpxor	xmm7,xmm8,xmm7
	vpxor	xmm4,xmm9,xmm4
	vpxor	xmm5,xmm10,xmm5
	vpxor	xmm6,xmm11,xmm6
DB	143,232,120,194,255,8
DB	143,232,120,194,228,8
DB	143,232,120,194,237,8
DB	143,232,120,194,246,8
	vpaddd	xmm14,xmm14,xmm7
	vpaddd	xmm15,xmm15,xmm4
	vpaddd	xmm12,xmm12,xmm5
	vpaddd	xmm13,xmm13,xmm6
	vpxor	xmm1,xmm14,xmm1
	vpxor	xmm2,xmm15,xmm2
	vpxor	xmm3,xmm3,xmm12
	vpxor	xmm0,xmm0,xmm13
DB	143,232,120,194,201,7
DB	143,232,120,194,210,7
DB	143,232,120,194,219,7
DB	143,232,120,194,192,7
	dec	eax
	jnz	NEAR $L$oop4xop

	vpaddd	xmm8,xmm8,XMMWORD[64+rsp]
	vpaddd	xmm9,xmm9,XMMWORD[80+rsp]
	vpaddd	xmm10,xmm10,XMMWORD[96+rsp]
	vpaddd	xmm11,xmm11,XMMWORD[112+rsp]

	vmovdqa	XMMWORD[32+rsp],xmm14
	vmovdqa	XMMWORD[48+rsp],xmm15

	vpunpckldq	xmm14,xmm8,xmm9
	vpunpckldq	xmm15,xmm10,xmm11
	vpunpckhdq	xmm8,xmm8,xmm9
	vpunpckhdq	xmm10,xmm10,xmm11
	vpunpcklqdq	xmm9,xmm14,xmm15
	vpunpckhqdq	xmm14,xmm14,xmm15
	vpunpcklqdq	xmm11,xmm8,xmm10
	vpunpckhqdq	xmm8,xmm8,xmm10
	vpaddd	xmm0,xmm0,XMMWORD[((128-256))+rcx]
	vpaddd	xmm1,xmm1,XMMWORD[((144-256))+rcx]
	vpaddd	xmm2,xmm2,XMMWORD[((160-256))+rcx]
	vpaddd	xmm3,xmm3,XMMWORD[((176-256))+rcx]

	vmovdqa	XMMWORD[rsp],xmm9
	vmovdqa	XMMWORD[16+rsp],xmm14
	vmovdqa	xmm9,XMMWORD[32+rsp]
	vmovdqa	xmm14,XMMWORD[48+rsp]

	vpunpckldq	xmm10,xmm0,xmm1
	vpunpckldq	xmm15,xmm2,xmm3
	vpunpckhdq	xmm0,xmm0,xmm1
	vpunpckhdq	xmm2,xmm2,xmm3
	vpunpcklqdq	xmm1,xmm10,xmm15
	vpunpckhqdq	xmm10,xmm10,xmm15
	vpunpcklqdq	xmm3,xmm0,xmm2
	vpunpckhqdq	xmm0,xmm0,xmm2
	vpaddd	xmm12,xmm12,XMMWORD[((192-256))+rcx]
	vpaddd	xmm13,xmm13,XMMWORD[((208-256))+rcx]
	vpaddd	xmm9,xmm9,XMMWORD[((224-256))+rcx]
	vpaddd	xmm14,xmm14,XMMWORD[((240-256))+rcx]

	vpunpckldq	xmm2,xmm12,xmm13
	vpunpckldq	xmm15,xmm9,xmm14
	vpunpckhdq	xmm12,xmm12,xmm13
	vpunpckhdq	xmm9,xmm9,xmm14
	vpunpcklqdq	xmm13,xmm2,xmm15
	vpunpckhqdq	xmm2,xmm2,xmm15
	vpunpcklqdq	xmm14,xmm12,xmm9
	vpunpckhqdq	xmm12,xmm12,xmm9
	vpaddd	xmm4,xmm4,XMMWORD[((256-256))+rcx]
	vpaddd	xmm5,xmm5,XMMWORD[((272-256))+rcx]
	vpaddd	xmm6,xmm6,XMMWORD[((288-256))+rcx]
	vpaddd	xmm7,xmm7,XMMWORD[((304-256))+rcx]

	vpunpckldq	xmm9,xmm4,xmm5
	vpunpckldq	xmm15,xmm6,xmm7
	vpunpckhdq	xmm4,xmm4,xmm5
	vpunpckhdq	xmm6,xmm6,xmm7
	vpunpcklqdq	xmm5,xmm9,xmm15
	vpunpckhqdq	xmm9,xmm9,xmm15
	vpunpcklqdq	xmm7,xmm4,xmm6
	vpunpckhqdq	xmm4,xmm4,xmm6
	v