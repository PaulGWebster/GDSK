x1f,0x13,0x57,0xbb,0x7c,0x4a,0x10,0x84,0x8c,0x57,0x36,0x13,0x22,0x00,0x04,0x2d,0xcf,0x27,0x3d,0xf4,0x27,0x3e,0x32,0xb3,0x87,0xda,0x82,0xaa,0xad,0xd7,0xa7,0xc5,0x3c,0x45,0xec,0x28,0x82,0x79,0x95,0x8f,0x56
.byte	0x50,0x5f,0xc2,0x15,0xab,0x18,0x58,0x4f,0x69,0x46,0xce,0x29,0x33,0x42,0x53,0xe9,0xea,0xe5,0xa8,0x5b,0x90,0xc4,0xf4,0xbf,0x8a,0x20,0x62,0xad,0xa5,0xea,0x6a,0x4e,0xb4,0x20,0x2d,0xca,0x90,0xdf,0xbd,0xab,0x5b,0xc3,0x33,0x7c,0x53,0x1f,0xf5,0x2e,0xc0,0xbf,0x19,0xe1,0xa1,0x5a,0x63,0xf3,0x13,0x4d,0x6e,0xef,0x4f,0x3a,0x94,0x18
.byte	0xbe,0x79,0xdb,0xbf,0xc2,0x2c,0xb3,0x36,0x59,0xab,0x21,0x1d,0x98,0x60,0x70,0xdd,0x95,0x51,0x19,0x07,0xd6,0x68,0x0e,0x2a,0xd4,0x4c,0x30,0x18,0x1c,0xe4,0xe1,0x89,0x15,0x25,0xea,0x27,0xcf,0x51,0x56,0xc9,0xa9,0xa7,0x31,0x08,0x17,0xfb,0xfc,0xf6,0x0c,0x5d,0xf1,0x7c,0x36,0xcb,0xad,0xef,0x29,0xf5,0x2e,0x23,0x09,0xcf,0x31,0x6f
.byte	0x74,0x12,0xd2,0xc2,0xc7,0x19,0xa5,0x6e,0x20,0x09,0x67,0xdc,0x41,0x69,0xbe,0x15,0xd6,0xeb,0x7b,0xba,0x63,0xae,0x65,0xd8,0x67,0xec,0x6e,0xcc,0x1d,0x04,0x08,0xfb,0x7c,0x34,0x1d,0x5f,0x1e,0x51,0x1c,0x30,0x72,0xd3,0x0c,0x48,0x60,0x3d,0x52,0xae,0xe6,0x78,0x44,0x6d,0xb8,0x40,0x08,0xb7,0x7a,0xa9,0xfc,0xa0,0x86,0xff,0x32,0xd6
.byte	0x5a,0x31,0x4e,0xe2,0x65,0xab,0xb0,0x84,0xb6,0x74,0x3e,0xa6,0x67,0x7c,0xa2,0x0f,0x23,0x22,0xab,0x72,0x7e,0xeb,0x45,0xa9,0x2a,0xb4,0xd3,0xcc,0x27,0x5c,0x12,0xdb,0x14,0x68,0x73,0x0f,0x36,0xbf,0x9f,0x14,0x12,0xe9,0xef,0x04,0x2a,0x63,0x41,0x4b,0x04,0x9b,0x4c,0xc4,0xb2,0xb9,0x1c,0xc0,0xb8,0xcc,0x23,0x61,0xc4,0xed,0x27,0x1e
.byte	0x1d,0x97,0x3d,0x40,0x4c,0x1f,0xeb,0x6e,0xc4,0xfb,0x5c,0x2d,0xf5,0xf1,0xbb,0x05,0x47,0xa2,0x1a,0x9c,0x2b,0x8f,0xce,0x98,0x09,0x6b,0x86,0x22,0xf8,0x3a,0xae,0xf3,0xb4,0x66,0x2f,0xdb,0x20,0xa5,0xc6,0xb6,0x35,0xb5,0x5a,0x68,0xb5,0x37,0x2c,0xab,0x13,0x3d,0x2d,0xcb,0x38,0xed,0x3c,0x7a,0x1f,0x26,0x08,0x58,0x94,0x52,0x30,0xec
.byte	0x06,0x9f,0x90,0x97,0x4d,0x90,0x49,0x23,0xaf,0x00,0x90,0x6b,0x96,0x37,0x02,0x4c,0x35,0xc0,0x3e,0x66,0x2c,0x52,0xbc,0x75,0x28,0xd7,0x8f,0x25,0xbe,0x91,0x10,0x22,0x67,0xbf,0x4a,0x4d,0x62,0xc4,0xe9,0xda,0xe2,0x79,0xcc,0x76,0xeb,0x99,0x87,0xac,0x39,0x7d,0xf6,0x5a,0x37,0x85,0x30,0x33,0x65,0x3f,0xd9,0xd6,0x17,0xf8,0xf0,0x86
.byte	0xee,0x5c,0x2f,0xb0,0xb3,0x4f,0x83,0x6c,0x4a,0x8f,0xfc,0x80,0x91,0xaf,0x4b,0x21,0x9c,0x9b,0x44,0x3c,0xed,0x67,0xfb,0xa3,0x31,0x7f,0xd4,0x73,0x72,0xb9,0xc1,0x31,0x96,0x47,0x8e,0x99,0x8e,0x62,0x1a,0xfd,0xc7,0x9d,0x2f,0x4c,0xda,0xe5,0xae,0x17,0xb6,0x40,0x5f,0x9e,0xa8,0xf2,0xcc,0xd7,0xd5,0x40,0x33,0x88,0x57,0x63,0x9b,0xde
.byte	0x82,0x71,0x68,0xfe,0xaf,0x29,0x6c,0xc1,0x2c,0x2f,0x02,0x42,0xd7,0xa5,0x28,0x05,0xca,0xa0,0xb6,0x8c,0x43,0x90,0x05,0xe2,0x1c,0xb7,0x76,0x79,0x39,0xd3,0x23,0xe1,0xe7,0xbb,0x19,0x65,0x1a,0xb4,0xbb,0x5a,0xcf,0x43,0x70,0x26,0x1a,0x2f,0x61,0x78,0x75,0x08,0xb0,0x88,0xe5,0x4a,0x46,0x0a,0xfc,0xcb,0x46,0x18,0xb0,0x8d,0x9b,0xeb
.byte	0xf5,0xe1,0x83,0x04,0x84,0x4f,0xd6,0xa0,0x4f,0xb2,0x4c,0x44,0x08,0xde,0xd6,0x82,0xb5,0x9a,0x45,0x15,0xb8,0x21,0xc7,0xf5,0xe2,0xfd,0x02,0x27,0x18,0x13,0x24,0x18,0x01,0xd1,0x2a,0xff,0x63,0xf2,0xa4,0x97,0xc8,0x4b,0x3b,0xae,0x49,0x47,0x54,0xe8,0x75,0xe7,0x16,0x77,0x22,0x10,0x7b,0x3c,0xf0,0xdb,0x49,0x6e,0xd6,0x55,0x9d,0x43
.byte	0x6f,0x6e,0x2d,0x97,0xea,0x16,0x2e,0x0c,0x85,0x89,0x67,0xe1,0x7b,0x38,0xa6,0x2b,0x89,0xf0,0xcd,0x90,0xcd,0xba,0x9a,0x70,0xa9,0xe3,0xff,0xe0,0xbd,0x15,0x3e,0x4b,0x13,0x62,0x7b,0x59,0x64,0x18,0x96,0xe9,0x6a,0xf3,0x69,0x2d,0x2d,0x25,0xe7,0x91,0xd3,0xbc,0x74,0x58,0x66,0x2f,0x5e,0x8b,0x52,0xf6,0x91,0x24,0xa8,0x6f,0xa5,0xce
.byte	0xa1,0x4e,0x3b,0xe9,0xc5,0x30,0x7e,0xa5,0xc7,0xe2,0xb3,0x71,0x3b,0x25,0xb9,0x5f,0xe5,0x9c,0xf8,0x46,0x23,0xc5,0xa2,0xc1,0x1f,0x3f,0x43,0xa6,0xaa,0xf1,0x36,0x27,0xc6,0xa8,0xed,0x0d,0x50,0x71,0xf1,0x38,0x27,0xb7,0x16,0x43,0x7c,0x7f,0x77,0x5b,0x25,0x59,0xb7,0x08,0x0d,0xc8,0x84,0xe4,0xc2,0x03,0x95,0xe5,0xf3,0x0a,0x9c,0x1f
.byte	0xde,0x98,0x7c,0xa9,0xe2,0x70,0x9e,0xde,0xf6,0x80,0xd0,0xf8,0x86,0x4a,0x7a,0x0d,0x16,0xaa,0xde,0xba,0x02,0x30,0x8a,0xe6,0x03,0x0f,0xa1,0xf1,0xe8,0xd6,0xf8,0xce,0x7b,0xba,0x74,0xa8,0x25,0xb0,0x49,0x22,0xa6,0x81,0x7e,0x71,0xc5,0x97,0x9e,0xa8,0x46,0xa7,0xe9,0x8b,0x7c,0x7c,0x4c,0xc5,0x3c,0x93,0x08,0xb9,0x8b,0x3c,0x33,0xd6
.byte	0xc4,0x37,0xc8,0x05,0xe7,0xfe,0xc2,0x7c,0x02,0xe6,0xda,0x09,0x52,0x2c,0xc6,0xa8,0x6e,0x44,0x7e,0x55,0xf0,0x32,0x10,0xcb,0x1e,0xa7,0x77,0x8d,0xc7,0xfe,0xb5,0xf6,0x3b,0x49,0xf2,0xfb,0xe0,0x41,0x98,0xd3,0x17,0xa6,0x5d,0x3f,0x4c,0x95,0xb0,0x02,0x8d,0xab,0x36,0xb7,0xa0,0x92,0x40,0x5e,0x15,0xfb,0xa9,0xb4,0xa3,0x04,0x8b,0x6b
.byte	0x81,0x44,0x59,0x22,0x10,0xcb,0xc5,0x52,0x3f,0x78,0x70,0x00,0xe2,0xa2,0xf7,0x76,0x62,0x72,0x06,0x8b,0xbb,0x56,0x0f,0x8c,0x67,0x2f,0x52,0x3f,0x3b,0xdc,0x15,0x79,0x55,0x89,0x6c,0x61,0x23,0xcc,0x6b,0x41,0x77,0xe5,0xc4,0x90,0x51,0xc3,0x87,0x22,0x1e,0x89,0xf5,0x5b,0x41,0xd7,0x34,0x22,0x3c,0xbd,0x29,0xaa,0x54,0xed,0x5a,0x90
.byte	0x17,0x24,0xba,0x7a,0x46,0x5f,0x54,0x33,0x56,0x7e,0x2d,0x03,0x59,0xcb,0xbb,0x7a,0xce,0xbb,0x8d,0xf7,0xb6,0x38,0x00,0x18,0x6a,0xa1,0x6c,0xdf,0x42,0x49,0x4d,0x9b,0x4f,0xd6,0x85,0x54,0x1f,0xad,0x17,0xdd,0x66,0x0e,0x7c,0x30,0x86,0x82,0x1c,0x5a,0x81,0x08,0x55,0x51,0x5b,0x06,0x54,0x52,0x3e,0x8b,0x6e,0x72,0x92,0xd2,0x05,0x5d
.byte	0xe4,0xe8,0x0e,0x62,0x1d,0xec,0xb1,0x7f,0x42,0x05,0xd5,0xd3,0x60,0xd4,0xdc,0xa4,0x48,0xc0,0xf0,0x89,0xef,0x5b,0xae,0x5f,0xcd,0xf0,0x62,0xaa,0x3e,0xd5,0x1a,0xbe,0xe3,0x08,0xd5,0xe8,0x00,0x21,0x8c,0x0b,0x0c,0x8e,0x24,0xac,0xb2,0xea,0x44,0x9f,0xce,0x53,0x45,0x9a,0x85,0x67,0x99,0x85,0xea,0x92,0xa7,0x1d,0x86,0xb4,0x3b,0x22
.byte	0xa2,0xcd,0x35,0x65,0xb5,0xa6,0xdb,0x6d,0x48,0xd1,0xa4,0x76,0x0c,0x00,0x30,0x62,0x86,0x06,0xda,0xa8,0xfe,0xec,0x70,0x87,0x4a,0xe8,0x2e,0x4d,0xe3,0x94,0x0b,0xdf,0x81,0xcd,0xfe,0x23,0x79,0x2c,0x2b,0xae,0xf7,0x75,0x49,0x47,0x24,0x46,0x09,0x10,0x62,0x39,0x3b,0x50,0xf1,0xfa,0xf7,0x5f,0xe4,0x7c,0xa5,0xc0,0x25,0x9e,0x20,0x4d
.byte	0xc8,0x6b,0x93,0xc5,0x4a,0x6b,0x62,0xb8,0x3b,0xe5,0x0d,0x92,0x70,0x26,0xa5,0x2b,0xd0,0x9f,0x03,0x8b,0xd3,0x1a,0xc4,0xb0,0xa3,0xc7,0xf4,0x35,0xe5,0x1d,0xe0,0xaa,0x43,0xab,0x64,0x10,0x2b,0xa4,0x09,0x42,0xee,0xba,0xb7,0xbf,0xfd,0xa6,0xff,0x76,0xe5,0x12,0xd6,0x50,0x9a,0x26,0x6b,0x3a,0xd3,0xe6,0x7d,0x3e,0x0e,0x9b,0x95,0xd7
.byte	0xbf,0xb6,0x7e,0xfb,0x3c,0x24,0xa4,0x26,0x98,0x88,0x81,0xf4,0x56,0xa4,0xf7,0xe8,0x87,0x15,0x5e,0x9f,0x84,0xdd,0x04,0x66,0x43,0xd8,0x76,0xc2,0xa3,0xfd,0x4b,0x58,0x09,0x06,0xa6,0x60,0x5c,0x3f,0x75,0x80,0xd7,0xc4,0x29,0xf9,0x0b,0x1e,0x4d,0xe5,0x26,0xf6,0xae,0x7a,0xc1,0x05,0xf3,0xf1,0x6c,0xee,0xed,0x56,0x0b,0x51,0x66,0xbe
.byte	0x99,0xec,0x9c,0xc2,0x97,0xe2,0xed,0x09,0x1d,0xa8,0x18,0xaa,0x1c,0x9e,0x20,0x62,0xb1,0x80,0x68,0x3e,0x28,0x1f,0x4f,0x50,0x0e,0x41,0xaf,0x17,0x44,0x79,0x16,0xca,0x17,0xe9,0x13,0x66,0x0a,0x04,0x68,0x41,0xe2,0x1d,0xc7,0x00,0x1e,0x66,0xa3,0x6c,0x2d,0x52,0x8c,0x0b,0x7c,0x03,0x48,0x73,0x3b,0xa9,0x84,0xe5,0x31,0x12,0x0f,0xe8
.byte	0x1e,0x58,0x4d,0xd0,0x1b,0xb7,0xcf,0x75,0xd5,0x2c,0xca,0x33,0x17,0x95,0x9c,0x30,0xc7,0x7f,0xe9,0xde,0xae,0x19,0x72,0x00,0x2a,0xf5,0xde,0x93,0x3f,0xf5,0x44,0xe5,0xf8,0xc7,0xeb,0x1a,0x5d,0x5b,0x11,0x30,0x09,0xf5,0x49,0x66,0x70,0x1a,0xd5,0xe6,0xfc,0xe6,0x59,0x3d,0x17,0x6c,0xb5,0x0c,0xdf,0x1e,0x9c,0x48,0xd1,0xde,0x12,0xd6
.byte	0xc8,0x48,0xc8,0x73,0x6d,0xfc,0xec,0x07,0xce,0x02,0xe5,0xb3,0x18,0xb9,0x55,0x4d,0x64,0x07,0xf3,0xaa,0x3c,0xf1,0x71,0x22,0x31,0xbb,0x74,0x2c,0x9f,0x7b,0x68,0x9d,0x80,0x49,0x32,0x48,0x9b,0x54,0xf3,0x74,0x37,0xac,0x4e,0xb2,0x96,0xdf,0x9d,0xeb,0x43,0xe0,0xd0,0xa0,0xe3,0x77,0xbd,0x8b,0x92,0x95,0x9d,0x63,0x8d,0xa8,0x23,0x07
.byte	0xb0,0xcb,0x9d,0x8d,0x3f,0xe2,0xd5,0x81,0x6a,0xe5,0xc2,0xfe,0xda,0x1c,0x25,0x25,0x5b,0xa8,0xad,0x06,0xec,0x0d,0x4b,0x68,0xc3,0x45,0x81,0x38,0xb0,0x22,0x71,0xa4,0x2b,0xf3,0xa6,0x05,0xae,0x0c,0x48,0x94,0x0d,0x3d,0x48,0x51,0x76,0xdf,0x79,0x66,0x0e,0x28,0xc0,0xc1,0x6f,0xc8,0x8f,0xf7,0x7d,0x37,0x06,0xa2,0x8a,0x3a,0x6b,0xab
.byte	0xe0,0x55,0x8e,0xec,0x89,0xe2,0xca,0xc4,0x01,0x03,0x5d,0xa1,0x84,0x21,0x44,0xbb,0x6b,0x36,0x63,0x57,0x4f,0x54,0x88,0x81,0xbe,0xf8,0x53,0xf7,0x57,0xee,0x30,0x85,0x03,0x11,0x86,0xff,0xe4,0xd6,0xc4,0xf0,0x3c,0xcf,0xfd,0x38,0xd8,0xcb,0xd0,0x96,0x03,0xf2,0xc7,0xfa,0x18,0xc8,0x1b,0xe6,0x77,0x3c,0x61,0xa9,0x14,0xdb,0xb4,0x5c
.byte	0x2d,0xee,0xd7,0xe8,0xc4,0x0c,0x69,0x0c,0x55,0xe2,0x99,0x4b,0xc4,0x89,0xc8,0xee,0x48,0x0e,0x16,0xd7,0xa4,0x78,0x25,0xda,0xd3,0xa8,0xac,0x89,0x66,0x67,0x0d,0x51,0x21,0x0e,0x91,0xfb,0xb5,0xab,0x33,0xcb,0x3e,0xc7,0x0f,0x03,0x22,0x51,0x71,0x03,0xa0,0x3c,0xa9,0x35,0xcb,0x40,0xa7,0xbe,0xe7,0xc3,0x51,0x43,0xd8,0x9a,0x24,0xb7
.byte	0x7e,0xfb,0x26,0x8d,0xa5,0x1a,0x6b,0xe7,0x97,0xe4,0xdd,0xc0,0x3e,0x98,0x67,0x55,0x79,0x56,0xb9,0x7e,0x25,0x4c,0x5c,0x5a,0x47,0x0a,0xce,0xb6,0x4d,0x2c,0x69,0x73,0xaa,0xf0,0x12,0xbb,0x9d,0xe1,0x60,0xc4,0x5b,0x10,0x32,0x6d,0x89,0x54,0xb1,0xfe,0x36,0xbe,0xb2,0x60,0x9a,0x91,0x73,0x9c,0x32,0x61,0xad,0x9a,0xf7,0x56,0x5f,0x5a
.byte	0x54,0xaf,0xb2,0x0c,0x5b,0x1a,0xe6,0x98,0x94,0xed,0x69,0x0b,0x8d,0x06,0x87,0xc9,0x20,0xdc,0x92,0x2d,0x5e,0xba,0xbb,0x15,0xef,0xc1,0x07,0x18,0x44,0x3f,0xf4,0x48,0x3e,0x7b,0xa4,0x9e,0x14,0x6b,0x97,0xdd,0x68,0x33,0x18,0xdd,0x47,0x08,0xa6,0x3b,0x8d,0x79,0x58,0x92,0xd9,0xda,0x82,0x34,0xa7,0x99,0xbc,0x43,0xa3,0x0a,0x7e,0x85
.byte	0x0b,0xab,0x0e,0xc2,0x94,0x22,0x2d,0x05,0x99,0x9d,0x5c,0xc7,0xb2,0x7b,0x18,0x3e,0xb2,0xdd,0x47,0xb3,0xd7,0xcf,0x19,0xc7,0x55,0x5e,0x64,0xd8,0x7b,0xb4,0xf6,0x11,0x72,0xed,0xbd,0xfc,0xd8,0xe9,0x9f,0xcd,0x9a,0xeb,0xb2,0x6c,0x04,0xb9,0x88,0xf7,0x60,0x68,0xc3,0xf2,0xfd,0xa0,0x8c,0x82,0xc5,0xf7,0x5d,0xc3,0x9a,0x1e,0x49,0x27
.byte	0x69,0x35,0xb0,0x8f,0xe9,0xb3,0xe4,0x09,0xd8,0x1a,0x73,0x9e,0x56,0x41,0xfa,0xe0,0x94,0x9e,0x0e,0x65,0xe6,0x5b,0xe2,0x12,0x39,0xca,0x86,0x0c,0xae,0xee,0x24,0x58,0xfd,0x85,0x09,0x7a,0xad,0x54,0xde,0xda,0x06,0x73,0x7d,0x11,0x7e,0x91,0x44,0xf3,0x4b,0x61,0xce,0x8a,0xff,0x76,0x92,0x2e,0x43,0x52,0xcf,0x63,0x3f,0xc4,0x1f,0x7f
.byte	0x4d,0x67,0x21,0xed,0xd7,0x88,0xdb,0x36,0x56,0x11,0xb2,0x3b,0xee,0x5f,0x2d,0x5f,0x17,0x98,0xa1,0xd5,0xcc,0x82,0xfd,0xc2,0x56,0x69,0xaa,0x68,0x86,0xaf,0x48,0x77,0xba,0xe9,0xd9,0x42,0xcd,0xaa,0xe3,0xad,0x2b,0x17,0xef,0xd3,0x54,0xc5,0x4e,0x31,0x0b,0x14,0xb7,0x73,0xc1,0x6f,0xc3,0x06,0x41,0x1a,0x11,0x19,0x9f,0xe9,0x9f,0x61
.byte	0x4f,0x13,0x9b,0x3e,0xcd,0x7c,0xd6,0x2a,0xb3,0x87,0x84,0x58,0x58,0x10,0x1f,0xa0,0x2e,0x5c,0x15,0x8b,0x5e,0x37,0xd4,0x22,0x93,0xd9,0x67,0xe1,0xa8,0x35,0xe2,0x95,0xd8,0x4c,0x2c,0x65,0xc9,0x21,0xaf,0xf9,0xdd,0x3d,0x2c,0x0e,0x0c,0xcc,0x6b,0xad,0xb3,0x6d,0xd2,0x3e,0x65,0x8e,0x82,0x70,0x41,0xd6,0xaa,0x97,0xab,0x38,0x78,0xe4
.byte	0x62,0x7c,0x5f,0x22,0xa3,0x1e,0xf2,0x6c,0xfe,0x3c,0xa9,0xb5,0x57,0xcd,0x96,0x11,0xd0,0x8b,0xcf,0x6d,0x06,0xcf,0x7c,0xda,0x1d,0xe4,0x22,0x5c,0x5d,0x9f,0xa8,0x24,0x55,0x45,0x93,0xc6,0xeb,0xfc,0xb5,0x71,0x5a,0x1d,0x52,0x40,0x95,0xc7,0x76,0x32,0xfb,0x2b,0x0c,0x7d,0x64,0xfa,0x5b,0x5e,0x7a,0x3b,0x0b,0xa0,0x99,0x5d,0x19,0x16
.byte	0xe4,0x8e,0xae,0x49,0xee,0xc5,0xb2,0x24,0xd7,0x0b,0xa4,0x20,0xa6,0x74,0xc4,0x36,0x1d,0x43,0x25,0xd6,0x71,0x54,0x69,0x79,0xea,0xa3,0xd5,0xe9,0x75,0x53,0xcf,0x99,0x4e,0x3b,0xc0,0x52,0x28,0x80,0xe5,0x07,0x65,0x83,0xb3,0x24,0xfe,0x13,0x92,0xd6,0x18,0xf7,0xa3,0xeb,0x9e,0xf0,0xd5,0x69,0x93,0x79,0xda,0xb7,0x2e,0xe2,0x01,0xdd
.byte	0x9a,0xc3,0x7b,0x3b,0x17,0x88,0xe5,0xe9,0x9b,0x46,0x5c,0x5f,0x0e,0x1e,0x80,0x9b,0x11,0x1f,0xa4,0x08,0x90,0x14,0x08,0xb4,0x73,0x32,0x72,0xbe,0x43,0x4f,0x70,0x90,0xe7,0x80,0xdd,0xfd,0xa7,0xea,0x13,0xd9,0x5d,0xae,0x93,0x24,0x2b,0x1e,0xc7,0xf4,0x81,0xbb,0x5f,0xb0,0xb9,0xe4,0x35,0x39,0xf4,0x9a,0x49,0xb5,0xc0,0x47,0x18,0xc3
.byte	0xcc,0xbe,0x26,0x36,0x44,0x2d,0x65,0x24,0xa3,0x09,0xde,0x69,0x3b,0xb8,0xdc,0x52,0x98,0x2e,0x38,0x5f,0xf7,0xb1,0x84,0xdd,0xea,0xe2,0xe5,0xec,0x96,0x31,0xb1,0x93,0xc0,0x5b,0xc4,0x87,0x4a,0x51,0x58,0x2d,0xea,0x47,0xab,0xfd,0xd3,0x76,0xf1,0xbc,0x52,0xa7,0x94,0x6c,0x74,0x1e,0x84,0x07,0x1f,0x5c,0x18,0xb9,0x06,0x37,0xf0,0xfb
.byte	0xbd,0x5d,0xaf,0xa8,0x06,0xc9,0x86,0xf0,0xd1,0x78,0x84,0x95,0x01,0xdd,0x70,0x9d,0x71,0x51,0xb7,0x80,0x69,0xbe,0xe8,0xfb,0x8f,0x43,0x72,0xd9,0xa9,0xf1,0x90,0xbb,0xf1,0xb5,0xc0,0x75,0x93,0x4e,0x14,0xc5,0x14,0x77,0x59,0xf8,0xe5,0x81,0x11,0x25,0x48,0x51,0x46,0x2a,0x69,0x59,0x92,0xe7,0xa7,0x39,0x96,0xad,0x67,0x30,0xaa,0xb2
.byte	0x5d,0x95,0x94,0x83,0x83,0x93,0xf3,0x52,0x81,0x1c,0x27,0x78,0x1d,0x19,0x35,0x6e,0x8f,0x16,0xe5,0x3b,0xce,0x80,0x2a,0x3a,0x89,0xb7,0x51,0xfc,0x34,0x24,0xa2,0x61,0x95,0x9e,0xd4,0x69,0xa1,0x2f,0x49,0x16,0x2d,0x12,0x05,0xfe,0x69,0x62,0x12,0xa4,0x2c,0x04,0x7b,0xce,0x3f,0x34,0xc4,0x48,0x1a,0xe6,0x64,0x4b,0x8a,0xbf,0x68,0xdd
.byte	0x54,0x15,0xd3,0x25,0x49,0xdd,0xed,0x5e,0x2c,0x0e,0x25,0xbe,0x77,0xcf,0x94,0xf4,0xe9,0xf3,0xcc,0xe6,0x94,0xf9,0xb2,0x5d,0x24,0x53,0x63,0xbb,0x66,0x8d,0x73,0xef,0x79,0x5c,0x95,0x1a,0x64,0xc3,0xfd,0xc0,0xd3,0x71,0xf4,0x79,0x19,0x79,0xa5,0x30,0xf8,0x2c,0x28,0xc2,0xc2,0x9d,0x12,0x50,0x95,0x38,0xec,0xd5,0xc6,0x28,0x94,0xaa
.byte	0x83,0x66,0x3b,0xe3,0x51,0xc7,0x6a,0x75,0x2a,0x9b,0xb9,0xb0,0xa2,0xe1,0xfd,0xaf,0x58,0xd2,0x4b,0xf4,0x22,0xef,0x77,0x1e,0xa0,0x00,0xd7,0x9e,0x20,0x63,0x87,0x1d,0x98,0xab,0x0e,0x57,0x31,0x4b,0xda,0x90,0x3a,0xe6,0x6e,0x5e,0xd4,0x17,0x06,0x83,0x4f,0x90,0x33,0x1c,0xe5,0xea,0xf7,0x8d,0x95,0xa2,0x1e,0x7d,0x27,0x15,0x49,0x68
.byte	0x3a,0x54,0xe3,0x1e,0x60,0x72,0x42,0xa6,0x8c,0x5b,0x63,0x1d,0x7d,0xb1,0xe2,0x7e,0x8b,0x19,0xf4,0x25,0x6c,0x77,0x64,0x15,0x5e,0x4c,0xfa,0x35,0x68,0xd2,0x54,0x11,0x5a,0xac,0x85,0xb0,0xb3,0xe8,0xa8,0x70,0x36,0xa8,0xe5,0x04,0xd1,0x82,0xdc,0x62,0x63,0xe6,0x3f,0x86,0x46,0x77,0x08,0x6b,0xa8,0x09,0xd0,0x56,0x09,0x87,0x9c,0x65
.byte	0x8e,0x53,0xae,0xa6,0x2b,0x59,0x23,0xca,0xe9,0xc7,0xc4,0xb5,0xb9,0xca,0x20,0xf6,0xcc,0x62,0xfd,0xb5,0x66,0x66,0x86,0x99,0xb2,0x5a,0xeb,0xac,0xff,0x22,0xf4,0x94,0x9c,0x6d,0xc9,0xce,0xf3,0x8d,0x26,0x7f,0x06,0x40,0x71,0x8b,0x3e,0x5c,0x3e,0xe6,0x11,0x64,0x91,0x79,0xbe,0x66,0x80,0xd2,0xf6,0x2d,0x28,0x4b,0x6c,0x8d,0x9c,0x5b
.byte	0x1e,0xd1,0x15,0xb0,0xdf,0xfb,0x57,0xaf,0x4a,0xab,0xde,0x12,0xe9,0xb8,0x41,0x3d,0xc3,0xff,0xb2,0xc1,0x86,0xb0,0x06,0x5b,0xaf,0xa4,0x30,0x62,0xd0,0xd8,0x91,0x36,0x28,0xc1,0xc2,0xef,0x60,0x5d,0x42,0x04,0xd5,0x6b,0x10,0xa9,0x6c,0x88,0x5c,0x56,0x59,0x4a,0x87,0xdc,0x7c,0x41,0x03,0xb3,0x7c,0x35,0x8c,0x52,0x0e,0xc1,0xd5,0xdf
.byte	0x9b,0x8a,0x2e,0xc2,0x6b,0x06,0x7f,0xb4,0x93,0xc9,0x52,0xd0,0xc5,0x57,0x78,0x9e,0xf9,0x08,0x36,0xbc,0x4b,0xc1,0xbd,0x71,0x35,0xf8,0x73,0xae,0x9c,0xbc,0xf1,0xd1,0xba,0xe3,0x7f,0x49,0x9b,0x9b,0xb3,0xe2,0x7d,0x7d,0x18,0x6d,0x0d,0x96,0xe3,0x50,0x28,0xf2,0x7c,0x7a,0x71,0x27,0x33,0x3c,0xd3,0xeb,0x3d,0x5a,0x79,0xb5,0x69,0xed
.byte	0x40,0x38,0xbe,0xc9,0xad,0x11,0x7b,0x9d,0xe6,0x71,0xc8,0x89,0x54,0x51,0xf0,0x8f,0xdc,0xad,0x96,0xc3,0x04,0x60,0x5f,0x6d,0xa0,0x37,0xba,0x1c,0x69,0xca,0x42,0x26,0xeb,0x31,0x34,0x8d,0xae,0x25,0xe2,0x29,0x8d,0x19,0x9f,0xfa,0x75,0x91,0x4b,0x51,0xcd,0x76,0xd6,0x8f,0xa2,0x40,0x79,0xc3,0xbb,0x61,0xaf,0xc4,0x69,0xf5,0x8b,0x8a
.byte	0xb6,0x2c,0x25,0xb9,0x3c,0x8e,0x13,0xa4,0x0f,0x52,0x72,0x11,0x4b,0x89,0x63,0x01,0x05,0x54,0xd5,0x0d,0x5f,0x91,0x59,0x84,0x64,0xac,0xf7,0x9c,0xa3,0x48,0x31,0x4a,0x2e,0xea,0xf8,0xf8,0x0e,0xf0,0xd9,0x4d,0x06,0x60,0x11,0x4a,0x72,0x6f,0x93,0x93,0x85,0xf0,0x20,0x55,0x8b,0x37,0xf1,0x29,0x92,0x2d,0x1f,0xa1,0x6c,0x7c,0x90,0x4f
.byte	0xdb,0x78,0xcc,0x6c,0xb2,0x14,0x85,0x07,0x34,0xc8,0x98,0x18,0x52,0x2d,0x6b,0x13,0x63,0xc5,0x31,0x20,0x8e,0xa9,0x88,0x6b,0xb3,0x3f,0x1a,0x68,0x2f,0xf9,0xf3,0x97,0x29,0x68,0x22,0x89,0xb0,0x45,0xc4,0xf4,0x1f,0x31,0xba,0x97,0x14,0x59,0xae,0x05,0xe0,0x99,0x5b,0x29,0xcf,0xe3,0xf0,0x2a,0x0c,0xca,0x5f,0xc1,0xe7,0xe7,0x11,0x48
.byte	0x73,0xc0,0x86,0x0b,0x59,0xc2,0x8a,0xfa,0x44,0x51,0x1c,0x84,0xdf,0x2f,0x4d,0xab,0xca,0xea,0xe1,0x48,0x9a,0xa1,0x86,0x60,0x47,0x7a,0x86,0x30,0x6a,0xba,0xbe,0x6a,0x9b,0x34,0xf4,0x52,0x0e,0xae,0x7f,0xbd,0xe0,0xf4,0x5f,0xfd,0xbc,0x57,0x02,0x95,0x6f,0xad,0x78,0x2e,0xa7,0x46,0x1c,0x2d,0x98,0x40,0xb7,0xfa,0xb5,0x08,0xee,0xb5
.byte	0x25,0x51,0xaa,0x1a,0x14,0x41,0x48,0xe0,0x8f,0xe7,0x2f,0xfc,0xfd,0x47,0x10,0x55,0x90,0x02,0xeb,0x7f,0x0d,0x40,0xa8,0x4b,0x82,0xdc,0xab,0x43,0x35,0x62,0xa1,0x1d,0x5a,0xb0,0xc0,0x93,0x75,0x3d,0x68,0xd9,0xf8,0x31,0x22,0xfd,0x30,0xda,0xea,0xea,0x7c,0x30,0xf8,0x6f,0x75,0x5f,0x07,0x39,0xfe,0x69,0x93,0x73,0x22,0xa2,0x72,0xed
.byte	0x39,0x2f,0x00,0x5c,0xc3,0x14,0x86,0x90,0xda,0xc9,0x09,0x43,0x80,0x85,0x22,0x98,0xb0,0x4e,0x05,0x47,0x8f,0xc7,0xba,0x2e,0x4c,0x8f,0x57,0x8a,0xe9,0xb0,0x97,0x3b,0x51,0x12,0xcb,0x88,0xfd,0x5e,0x7f,0xa6,0xc6,0x00,0xd0,0x3a,0x3a,0x70,0x9e,0x56,0x28,0xa0,0x08,0x76,0x58,0x57,0x4a,0x0f,0xff,0x31,0x44,0x08,0x6c,0x23,0x79,0xad
.byte	0x35,0x95,0xc5,0xc8,0x26,0x0f,0xb3,0x17,0x04,0x1d,0xde,0x16,0x5d,0xb8,0x71,0x76,0x89,0x0b,0xd6,0xd8,0x9d,0xa1,0xdf,0xcb,0xb5,0x1c,0x86,0xc3,0x15,0x8d,0xaa,0x25,0x82,0xbf,0x6b,0x06,0xfb,0x1b,0xf5,0x11,0xaa,0x14,0x0e,0x67,0x7f,0xbd,0x46,0x21,0x8f,0x6d,0xbd,0x63,0xe6,0x14,0x05,0xa2,0xee,0x56,0xee,0xe6,0x37,0xf9,0xc0,0x2f
.byte	0xc9,0xe0,0x8e,0xdb,0xf7,0xf6,0xcb,0x83,0x79,0xcc,0xe3,0xf6,0x30,0x9d,0x56,0x31,0x40,0xd2,0x50,0x25,0xb6,0x89,0x16,0x97,0x65,0xd8,0x8d,0x1a,0xa5,0xf4,0x47,0xfc,0x4c,0x73,0x07,0x42,0x9c,0x8f,0x7f,0x10,0xb4,0x96,0x33,0x1e,0xe2,0xff,0x0c,0x33,0x35,0xbc,0x37,0x01,0x2b,0x67,0xda,0xca,0xcf,0x87,0xa2,0x38,0x71,0x6b,0xf4,0xcf
.byte	0xa6,0xc6,0x6a,0x90,0x5c,0xa0,0x8b,0x66,0x44,0xc7,0xc2,0x05,0x24,0xee,0x53,0x99,0xf3,0x07,0x78,0xb0,0x17,0xf8,0x11,0xf9,0x52,0x20,0x41,0xc5,0xdb,0x4e,0x92,0xd3,0xeb,0xd2,0x86,0xea,0x9b,0xc3,0x4c,0x1b,0x75,0xcd,0x15,0x0c,0xe0,0x28,0xe9,0xe1,0x99,0x98,0x96,0x33,0x06,0xea,0xa8,0x4e,0xde,0xc1,0x1c,0xfe,0x6c,0xca,0xac,0x6d
.byte	0xc4,0x3a,0x7d,0xd2,0x41,0xf5,0xb3,0x7d,0x1c,0x28,0x93,0x72,0xf8,0x08,0xc1,0x71,0x72,0x4c,0x41,0x68,0x38,0x80,0x2e,0x4b,0xa6,0xc5,0xc7,0xb4,0x24,0x29,0xd0,0xce,0xb2,0x3d,0xc4,0x60,0x5b,0xeb,0x2d,0x80,0x13,0xee,0x95,0x41,0xfe,0x49,0x6d,0x89,0xc0,0x7a,0x61,0x51,0x3f,0xbb,0x24,0x7c,0x64,0x5e,0x9f,0xf7,0x60,0x88,0x95,0xe8
.byte	0x60,0xc5,0xf6,0xc3,0xc3,0xd4,0x43,0xce,0xf9,0x4e,0x35,0xf2,0xfa,0xb0,0x2b,0xe3,0xfe,0xb8,0x88,0x19,0xf2,0x89,0xc0,0xb5,0x00,0x61,0xc8,0xe5,0xaa,0xde,0x18,0xb4,0xd4,0x21,0xbe,0xcc,0x61,0xc7,0xc9,0xfe,0x22,0xcc,0x65,0xf6,0x79,0xe8,0x4d,0x1c,0x30,0x31,0x7a,0xd4,0xbc,0x98,0x2d,0x72,0x5e,0x5c,0x4f,0x7e,0x52,0x9c,0x95,0x20
.byte	0x29,0xa4,0x0b,0xf7,0xb2,0x7d,0xcc,0xc3,0x8c,0x94,0xb0,0x09,0xf4,0x6f,0x59,0x63,0x91,0x2a,0x06,0x80,0x09,0x01,0x3c,0x73,0x83,0x42,0xa1,0x5c,0x0f,0x42,0xf4,0x74,0x3c,0x24,0x8c,0xbe,0x91,0x73,0xdf,0xf1,0xea,0x21,0xbd,0xc9,0x36,0x17,0xca,0x81,0x28,0xd9,0x4a,0xc4,0x2e,0xdf,0x4c,0x4f,0xbd,0x1e,0xbc,0xe9,0x32,0x12,0xd3,0x8f
.byte	0x48,0x9b,0x4f,0x49,0x23,0x54,0x15,0x15,0x14,0x8b,0x18,0x64,0x7d,0x08,0x7f,0xc4,0x56,0x01,0x94,0x4e,0x50,0xe8,0xf2,0x4a,0xb5,0x3c,0xa0,0xb5,0xaf,0x55,0x70,0x44,0x41,0x5c,0xe6,0x61,0x5a,0xbb,0xf2,0xe6,0xc9,0x05,0x33,0x45,0x8f,0xbc,0xe5,0x59,0x7f,0x66,0xc5,0x61,0x4d,0x1b,0xc7,0xee,0x45,0x7d,0x57,0x8f,0x6c,0x9d,0x8b,0x87
.byte	0x98,0xa8,0x58,0xac,0x4a,0x31,0x79,0xd6,0x26,0x08,0x2f,0x28,0x3f,0x31,0x77,0xad,0xff,0xe1,0x9d,0xa8,0xf7,0xe0,0x76,0x66,0x48,0x00,0x52,0xe8,0x9a,0xb2,0x47,0x5e,0x0a,0x87,0x86,0xaf,0xf6,0x7d,0x46,0x78,0x66,0x68,0xf7,0x68,0x0c,0x6f,0x5c,0xd7,0x09,0xc0,0xd7,0x90,0x98,0xe2,0x5c,0x07,0xe9,0xd1,0x58,0x48,0x57,0x9f,0x48,0x99
.byte	0x87,0xdf,0x06,0xc1,0x35,0x0f,0xd8,0xb0,0xa9,0xfa,0xdc,0x31,0x76,0xd1,0xad,0x47,0x80,0xe4,0x74,0xe0,0xda,0x4b,0x77,0x8b,0x71,0xab,0x9a,0x8e,0xd7,0x6b,0x91,0xb1,0xdb,0x78,0xd2,0x86,0xf7,0x61,0x1b,0xdc,0x34,0x57,0x32,0x51,0xee,0xd3,0xff,0xb2,0x6c,0x6a,0x79,0x90,0x9c,0x1f,0x6b,0xe7,0x43,0x20,0x05,0x4f,0x66,0x83,0xd0,0x56
.byte	0xe1,0x21,0x63,0xf4,0xd6,0x96,0x91,0xcb,0x51,0x3c,0x13,0x88,0x97,0x26,0x88,0xda,0x7c,0xd4,0x0d,0xcb,0xdf,0xc2,0x7d,0xcd,0x2c,0x0e,0x28,0x23,0x21,0x5f,0xbe,0x5d,0x62,0x58,0x6c,0xa7,0x45,0xae,0x1f,0xac,0x35,0x53,0xdb,0x2c,0xa6,0x71,0xe4,0x11,0x5e,0x59,0xbe,0xd5,0x20,0x2a,0xc4,0xcd,0x4c,0x1b,0xe0,0x38,0xef,0x02,0x0c,0x5f
.byte	0x5a,0x1b,0xf9,0x1e,0x32,0x63,0xd7,0xa6,0x0f,0x1d,0x98,0xd5,0x3a,0x0f,0xf6,0xcc,0xfc,0xd6,0xb4,0x87,0xc5,0x76,0xd8,0x3e,0x72,0xb0,0x20,0xfe,0xb3,0xfc,0x48,0x4c,0xd1,0x71,0xcd,0x13,0xef,0xe8,0x40,0xd9,0x0d,0xf6,0x1d,0x5b,0xa4,0x26,0x56,0x8c,0x66,0xcb,0x18,0x5a,0x5f,0x86,0x43,0x2c,0xa4,0x1e,0x00,0x3f,0x09,0xbf,0x8e,0x61
.byte	0xad,0x2a,0x44,0x97,0x35,0xb2,0xf3,0x50,0x5f,0xfa,0x01,0x74,0xbf,0x70,0x46,0x38,0xf1,0x15,0xaa,0x04,0xfe,0xe9,0x3f,0x43,0x2f,0x53,0xcb,0xea,0x5c,0x04,0x8e,0xe6,0x43,0xeb,0xc0,0xd9,0xbf,0x4a,0xc1,0xbc,0xf9,0x11,0xd5,0x33,0xdc,0x41,0x8e,0xfe,0x5e,0xf3,0x8c,0x80,0x47,0x46,0x01,0x9e,0xa9,0x2c,0x2d,0xd2,0x90,0x7f,0xce,0x7c
.byte	0x59,0x78,0xaa,0xbb,0x96,0x52,0x0a,0xf3,0x18,0x1f,0x0b,0x41,0xc1,0xd5,0x12,0x14,0x1a,0xe1,0x4e,0xac,0xf8,0x2a,0x56,0xfe,0x66,0x34,0x21,0xdf,0x1f,0x6a,0x02,0x85,0xd2,0x38,0xc0,0x39,0x5c,0xa7,0x3f,0xcc,0x2b,0x6f,0x69,0xe7,0xa7,0x0a,0x36,0xf1,0xa9,0x77,0x59,0x2c,0x44,0x8b,0x72,0xc9,0xc2,0x74,0x32,0x48,0x76,0x19,0x1e,0x49
.byte	0x10,0xe6,0x46,0xdf,0x82,0x9b,0xad,0x4e,0x40,0x20,0xd7,0xd3,0xf5,0x5c,0xbc,0x25,0x94,0xd1,0x68,0xaf,0x29,0xc5,0xcd,0x1b,0x86,0x4b,0x88,0x21,0x6e,0xeb,0x06,0x14,0xb5,0x15,0xe7,0x26,0x01,0x05,0x4e,0x3a,0x2a,0x24,0xbe,0xf2,0x64,0x6e,0xf4,0x9c,0x60,0xf8,0xd4,0xfd,0x4b,0xc0,0x0e,0x68,0x0d,0x19,0x26,0x87,0xa5,0xbf,0xe1,0x16
.byte	0xf0,0x27,0x58,0xa8,0x3a,0xed,0x27,0x5b,0x73,0x4f,0x19,0x40,0x58,0x36,0xf6,0xfd,0x60,0x37,0x09,0x74,0x3c,0xb9,0x76,0x9a,0x32,0xfd,0x98,0x79,0x53,0xb3,0xea,0x3a,0x98,0x21,0xf9,0xb2,0x97,0xe4,0x00,0xb6,0xed,0x67,0xc4,0x76,0x8f,0x1e,0x4d,0xc8,0x2e,0xf4,0x54,0xd9,0x09,0xd7,0xcb,0xa0,0x91,0x1e,0x5a,0x60,0x53,0xbc,0x3e,0x35
.byte	0x69,0xa6,0xca,0xf3,0xce,0x41,0x84,0x71,0xee,0xf3,0x75,0xd4,0x7a,0x71,0x36,0x62,0xe3,0x08,0xae,0x40,0x05,0xde,0x01,0x34,0x92,0x5f,0x71,0xa9,0x08,0xb3,0x43,0xcd,0xe7,0x2f,0x42,0x7e,0x9c,0x1e,0xfe,0x9a,0x40,0x99,0x58,0x31,0xd9,0x8d,0x5d,0xda,0x75,0x14,0x3f,0xae,0x45,0x27,0x85,0x47,0x7d,0x41,0x0e,0x94,0x20,0xee,0x11,0xd0
.byte	0x1e,0xcd,0x00,0x56,0xb7,0x59,0xe6,0x58,0xab,0x2c,0xa6,0x44,0x14,0x8c,0xff,0x49,0x7b,0xe5,0xf7,0x93,0xd5,0x78,0x1a,0xe0,0x16,0xd8,0x24,0x08,0x1e,0x70,0xce,0x1a,0x84,0x87,0x6b,0xe5,0xf2,0x43,0x5f,0xb3,0x34,0xaa,0x85,0x3e,0x9e,0x2e,0x86,0x22,0x74,0xe2,0x1a,0x87,0xfb,0x1b,0x6c,0x08,0x8c,0x43,0xb4,0x85,0x75,0x2c,0x13,0xc2
.byte	0x18,0x94,0xe8,0x0d,0x09,0xd5,0x8f,0xd4,0xca,0x50,0x93,0x9f,0xa3,0x9f,0x3b,0x3c,0x54,0x68,0xa9,0xb1,0xdd,0x0a,0x0b,0xe2,0x15,0x92,0x9c,0x6f,0xfa,0x45,0x6f,0x0a,0xb4,0x6b,0xcb,0xdc,0xa4,0xf3,0xf0,0xa6,0x1c,0x8a,0x60,0x42,0x35,0xa8,0xe3,0xdf,0xc8,0xdc,0xbb,0xbe,0x95,0xa7,0xac,0x08,0x08,0xbc,0x56,0x1a,0xa4,0xc2,0xd2,0x53
.byte	0xfa,0xb2,0x89,0x4f,0xb8,0xe4,0xb9,0x90,0x95,0x91,0x2f,0x0f,0x93,0xa9,0x8c,0xc6,0xf8,0x01,0x34,0x08,0xe6,0x8c,0x58,0x43,0x57,0x40,0xf9,0x78,0x83,0xea,0x92,0x70,0xa8,0xa5,0xc8,0x9e,0xf8,0xc6,0x39,0x4c,0xb4,0xe9,0xbb,0xdf,0xd2,0x52,0x43,0x6b,0x6c,0x8b,0x2c,0x47,0xd7,0x11,0x42,0x3d,0xc7,0x3f,0xce,0xd1,0xd9,0x28,0x5b,0xce
.byte	0xec,0xb6,0x31,0x3a,0xc9,0xad,0x0c,0x93,0x82,0x2b,0xf6,0xdc,0xd4,0xcd,0x80,0xe1,0x75,0x45,0xeb,0x3b,0xbf,0x12,0x42,0xeb,0x71,0xc1,0x8b,0x27,0xd5,0xcb,0xd9,0xb6,0xe8,0xe9,0xc6,0x79,0xff,0x38,0x88,0x87,0x72,0xf2,0x71,0x4a,0x44,0x55,0x0f,0x9c,0x93,0xcf,0x15,0x18,0x44,0x62,0x2a,0xc5,0x0a,0x80,0x69,0x91,0x6e,0x4b,0x30,0x4e
.byte	0x3f,0x2f,0xb5,0x65,0x9e,0x65,0x07,0x36,0x9b,0xba,0x5f,0x81,0xd9,0x60,0xbe,0x1f,0xf5,0x98,0x20,0xf9,0x9e,0x53,0xf7,0x5d,0x57,0x7f,0x22,0xaf,0x8e,0x82,0x9e,0x0f,0x33,0x74,0x37,0x26,0x61,0x67,0xf6,0xfd,0x2c,0xab,0xd8,0x18,0x1d,0x10,0x48,0x7a,0x1d,0xed,0xbb,0x57,0x83,0xf9,0x82,0xf5,0xe3,0xf9,0x98,0x5c,0xc0,0x3e,0xee,0x38
.byte	0x0a,0x57,0x10,0x22,0xc4,0xe8,0x1d,0xe3,0x46,0xa3,0x81,0x5e,0x92,0xba,0xcc,0x53,0x48,0x85,0x33,0x58,0xa2,0x3e,0xea,0x0a,0xfb,0x72,0x5c,0xcd,0xd9,0xa4,0x3f,0x56,0x99,0x35,0x92,0x6c,0xe8,0xf2,0x59,0x0f,0xc8,0x6a,0x21,0xb2,0x9f,0xa2,0xf6,0xf3,0x1b,0xec,0x38,0x95,0xed,0xef,0x00,0x09,0x16,0x6e,0xf7,0xf8,0x1a,0xef,0x0d,0x2b
.byte	0xef,0x83,0x8a,0xc2,0x22,0x3d,0x50,0xa3,0x70,0x52,0xe8,0xad,0x11,0x44,0x83,0x80,0xfe,0x88,0x7e,0x40,0x02,0x8f,0x4a,0x5d,0xd3,0x28,0x66,0x75,0x5a,0xf2,0x38,0xb5,0xdc,0x54,0xa8,0xb3,0xaa,0x76,0xdb,0x73,0xe0,0xd1,0xd7,0x51,0x20,0x8c,0x38,0x18,0x46,0x25,0x2e,0x0d,0x5b,0x61,0x9d,0x36,0x9a,0x14,0xfb,0xc8,0x4e,0x5a,0xba,0xa1
.byte	0x98,0x34,0xfd,0x05,0x2c,0x87,0x58,0x8d,0xe3,0x5d,0x79,0x5a,0x45,0xff,0x75,0x25,0x98,0xbd,0xe4,0x9d,0x1a,0x70,0x79,0xaa,0x44,0x1a,0x10,0x7f,0xfb,0xe9,0x30,0x81,0xc7,0xa2,0x81,0x41,0x49,0x41,0x4e,0x42,0x5f,0x8a,0x9b,0x10,0xe2,0xdc,0xd9,0xdf,0xbd,0x61,0x29,0x72,0xa5,0x39,0xb7,0xf6,0x9f,0x4e,0x98,0xb8,0x04,0xae,0xd7,0xda
.byte	0x9a,0x9f,0x08,0xb8,0x2c,0x40,0x14,0x6d,0x01,0xb7,0x86,0x58,0x55,0x42,0xe5,0xdb,0x5f,0x4a,0xef,0xd8,0xed,0xdf,0x3b,0x24,0x1c,0xe4,0xb1,0x73,0xd1,0xce,0x29,0x96,0xde,0x8e,0xf3,0x1d,0x8d,0x75,0x57,0xd3,0x9a,0xf8,0xff,0x1a,0x4c,0x0c,0x47,0x82,0x83,0x73,0x34,0x43,0x55,0xfa,0xf2,0xd4,0x38,0xed,0xde,0x6d,0x24,0x55,0x90,0x06
.byte	0xd6,0x03,0x52,0x28,0xc7,0x38,0x4a,0x16,0x95,0x4d,0xf4,0x46,0x56,0xf7,0x63,0x1f,0xe4,0xa9,0x51,0xc6,0x0b,0x85,0x42,0x40,0x8e,0x49,0x1e,0xc2,0xab,0xeb,0xda,0x99,0x26,0xf6,0x6e,0x00,0x8f,0x26,0x82,0xef,0x03,0xb0,0xd4,0xdb,0x54,0x46,0xdf,0xdc,0x23,0xaf,0xa8,0x6a,0x9f,0xb7,0xf9,0x41,0x07,0x5e,0x2d,0xcf,0x85,0xfd,0x9c,0x46
.byte	0x30,0xb9,0x14,0xca,0xe2,0x30,0x12,0x06,0x88,0x08,0x05,0x2c,0x9a,0x4b,0x52,0x98,0xa9,0x99,0xd7,0xca,0xb5,0x1e,0x60,0x44,0xd9,0x5c,0x19,0x42,0xbe,0xa5,0x04,0xfd,0x7a,0xfc,0xb9,0xdf,0xd6,0xe3,0x6d,0x02,0xe3,0x96,0xf6,0xae,0xf3,0x78,0x1d,0x90,0x6d,0x86,0x17,0xf7,0xb7,0x6b,0x1d,0x52,0x32,0x5b,0xc0,0x31,0xaf,0x09,0x90,0x5e
.byte	0x81,0x75,0x17,0x47,0x6b,0x5e,0x9a,0x40,0xa5,0xa8,0x84,0x60,0xdc,0xdb,0xd2,0x89,0xcd,0xb2,0x72,0xf4,0x74,0xda,0x5d,0x34,0xf8,0xc6,0x1b,0x26,0x3e,0x8b,0xc7,0x73,0xf9,0x0c,0x93,0xf4,0x40,0x02,0xe0,0xed,0xe5,0xa0,0xae,0x91,0x03,0x85,0xa8,0x2f,0xe2,0x72,0xfe,0x17,0x7d,0x2b,0xa6,0x39,0x10,0x80,0x4c,0x58,0xaa,0xd8,0x22,0x7d
.byte	0x2f,0xbf,0x0c,0x40,0x48,0xfa,0xbe,0x40,0x4c,0x32,0x96,0x69,0xa5,0xab,0x0b,0x1e,0x33,0x9b,0xcf,0xe6,0x4e,0x2b,0x41,0x5a,0x21,0x23,0xa1,0xbb,0xd3,0xd6,0xd1,0xfd,0xbd,0x55,0xfc,0x92,0x92,0xcb,0x4b,0x72,0x39,0x8b,0xeb,0x72,0xdd,0xf7,0x77,0x43,0x52,0x2f,0x99,0x14,0x6e,0x41,0xce,0x1d,0x57,0x2c,0x09,0xd2,0x18,0xec,0x1b,0x89
.byte	0xa0,0xe9,0xfe,0x1e,0x41,0xda,0x0f,0x76,0x02,0x38,0xec,0x9a,0x30,0xb7,0x5a,0x54,0x70,0xbc,0xe8,0xfa,0x06,0xd0,0x80,0xfb,0x27,0xd2,0xd8,0x00,0x80,0x65,0x9d,0x23,0xfd,0xad,0x26,0xb8,0xdc,0x09,0x4f,0xfb,0x52,0xcd,0xe4,0x41,0x68,0xca,0xdd,0xbc,0x2a,0x62,0xeb,0xa6,0x32,0x71,0xb0,0x08,0xb6,0x9f,0x3e,0x74,0xfe,0xb0,0xd4,0x9d
.byte	0x9e,0x6c,0x50,0x96,0x8a,0xde,0xd6,0xe9,0xde,0x2c,0xa6,0xf0,0x9f,0x67,0x00,0x50,0x0a,0x8c,0xe5,0xc2,0x37,0xcc,0xf0,0x53,0xeb,0x72,0xf2,0x87,0x77,0xee,0x80,0xe8,0xb2,0xa1,0x13,0x52,0x70,0xe6,0x8f,0x70,0x17,0x90,0x60,0xcb,0xac,0xb2,0x72,0xef,0xd9,0xb5,0xc3,0x68,0x57,0xdf,0x2d,0xcb,0x5a,0x35,0xf9,0x2e,0xfb,0xef,0x6e,0x77
.byte	0x5d,0x21,0x37,0x4b,0x36,0x9b,0x3f,0x03,0x65,0xc9,0x84,0xb1,0x12,0x99,0xd1,0x6b,0x00,0x71,0x37,0xc7,0x57,0x82,0x44,0x7f,0xe1,0x81,0x24,0x70,0x96,0xd5,0x27,0xba,0x36,0xf7,0x25,0xc6,0x1c,0x7c,0x1b,0xdb,0xa3,0x6a,0x3e,0xb9,0x69,0x78,0xf7,0x51,0x46,0xe2,0x74,0xd3,0xfc,0xef,0x58,0x63,0x53,0x1d,0xd7,0xd0,0x8a,0x6a,0xd3,0xb0
.byte	0xb9,0xbb,0xba,0x43,0xbf,0x8b,0x6b,0x04,0xd2,0xb1,0xe8,0xd1,0x72,0x3f,0xdc,0x2b,0x01,0xa6,0x2f,0x9c,0x7d,0x65,0xa1,0x9f,0x9b,0x4d,0x70,0x26,0x11,0x4c,0xb2,0xe1,0x01,0x0e,0x78,0xf2,0x32,0x87,0x2d,0x8e,0x95,0x02,0x76,0xca,0xe5,0x71,0x5f,0x36,0x35,0xb9,0xbb,0xc3,0xdf,0xf3,0x1e,0x1a,0x7a,0xe4,0x2c,0xdf,0x64,0x5d,0x96,0x12
.byte	0xea,0x5c,0x14,0x73,0xa0,0xf1,0xbc,0xa9,0x6e,0x30,0x8a,0x47,0xf0,0x4b,0x9b,0x4c,0xc5,0xb0,0xbe,0x15,0x32,0x1b,0xde,0x0c,0x39,0x6a,0x6d,0x4e,0x3b,0x69,0x4c,0xb4,0x1f,0x56,0xf0,0xa1,0xb1,0x8c,0x29,0x5c,0x87,0x54,0xf2,0x5b,0x51,0x03,0x20,0x70,0x90,0x38,0x66,0x07,0xcc,0xd7,0xde,0x96,0x40,0x82,0xee,0xb5,0x87,0x2a,0x86,0xec
.byte	0x66,0x09,0xb7,0x4a,0xfe,0x4e,0x92,0x89,0x07,0xde,0x35,0xc4,0x6e,0x91,0x25,0xfd,0x18,0xfa,0xd9,0x8f,0xa7,0xa6,0xa7,0x6b,0x32,0xba,0xd3,0x1c,0x90,0xb9,0x8a,0x6c,0x9f,0x3f,0xb5,0x16,0x81,0x81,0xee,0xd7,0x55,0xc1,0x41,0x62,0xfd,0xe9,0x4c,0x5d,0xd7,0x70,0xdd,0xc6,0x4a,0x2b,0x42,0x77,0xe7,0x74,0xed,0x02,0x80,0x0d,0x7c,0x73
.byte	0x8e,0xf0,0xd3,0xb0,0x20,0xbb,0xc8,0x82,0x06,0xdd,0x56,0x64,0xcb,0x9c,0xda,0xa1,0xa9,0x92,0xbc,0x8c,0x65,0x03,0xcd,0x68,0x87,0xa2,0x94,0x41,0x3c,0x36,0x96,0x1f,0xa4,0xd2,0x6d,0x5d,0x9f,0x2d,0x0c,0xf9,0x8a,0x82,0x19,0x93,0x47,0x62,0x71,0x8e,0x59,0xaa,0xf1,0x87,0xe0,0xb8,0xab,0x10,0x7f,0x4e,0xa8,0xa3,0xe2,0x32,0x58,0xb0
.byte	0xcf,0x12,0xc0,0xf8,0x94,0x4a,0x61,0x36,0xdc,0x2d,0xb5,0x91,0xf9,0x0f,0x7d,0x91,0xd3,0xc7,0x03,0x8a,0xae,0x5c,0x22,0x8c,0x60,0x30,0xf4,0x71,0x51,0x00,0xf5,0x5d,0xe9,0x37,0x6c,0xae,0x64,0xff,0x45,0x35,0x4b,0x47,0x08,0xca,0xda,0x7b,0xe9,0xef,0xcb,0x27,0xcb,0x7e,0x3c,0xa6,0xd2,0x38,0x54,0x74,0xc3,0x7c,0xf8,0x71,0xb7,0x47
.byte	0xe9,0xe0,0x43,0x03,0x3b,0x41,0x57,0xc3,0xda,0xa1,0xcb,0x64,0xb1,0x31,0x0d,0x12,0x45,0x3a,0xa0,0xad,0x6b,0xc7,0x26,0x62,0x50,0xcf,0x94,0x5a,0x30,0x8d,0xf6,0x91,0x49,0x9e,0xd5,0x84,0x0e,0x0c,0xe3,0x47,0x08,0x7f,0xa1,0x54,0x78,0x1b,0xa8,0x2c,0xbc,0x12,0x4f,0x7e,0x53,0x1b,0xca,0xfb,0x09,0x35,0xe0,0x9c,0x15,0xea,0xf6,0x3e
.byte	0xb2,0x20,0x9e,0x2c,0x81,0x6f,0xa4,0xb5,0x6b,0x04,0x6d,0xd1,0x90,0x66,0x46,0xdc,0x4b,0x71,0x7e,0x4b,0x3f,0xd6,0xe1,0xa8,0xc0,0xa7,0x45,0x85,0xe3,0x98,0x30,0xda,0x23,0x68,0x55,0xd8,0x96,0xb1,0xcc,0xeb,0xe1,0x95,0x0b,0x20,0xf3,0x4c,0xf2,0xc5,0xfa,0x0e,0xca,0xf5,0xc9,0xb3,0xd7,0xb4,0x1b,0x9f,0xef,0x82,0x56,0x4c,0xc5,0xa5
.byte	0x21,0xda,0xcc,0x19,0x69,0x68,0xcb,0x37,0xb2,0x0c,0x73,0xb1,0x13,0x61,0x6b,0xca,0xda,0xfc,0xf7,0x1c,0xbc,0xd1,0x72,0x56,0xb8,0x7d,0xa1,0xef,0xc4,0x32,0x38,0xa3,0xdb,0x8b,0x2d,0x0a,0xce,0xcb,0x86,0x51,0x60,0xd2,0x47,0xf0,0x97,0x58,0xd8,0xa5,0x12,0x77,0xfc,0x32,0x04,0x29,0x61,0xfc,0xab,0xc2,0x42,0x86,0xd9,0x57,0x80,0xad
.byte	0x00,0xf0,0x9a,0x2a,0xac,0x52,0x27,0xd6,0xf8,0xd6,0x38,0xc8,0xfc,0xc1,0xab,0x4f,0x41,0xbf,0x8e,0x60,0x20,0xeb,0x24,0x36,0xd8,0xd8,0x25,0x6f,0xc8,0x5d,0x6b,0x00,0xdd,0x7a,0xe2,0x37,0xe4,0x13,0xd0,0xaa,0x5c,0x56,0x32,0x98,0x00,0x4b,0x8a,0x81,0xb1,0xfa,0xe8,0xf3,0xfa,0x0d,0xbb,0x66,0x6e,0x24,0xfd,0x3c,0x50,0x63,0x3a,0xf1
.byte	0x72,0x63,0x18,0x71,0x6d,0xee,0x6f,0xf1,0x0e,0x1f,0x9e,0x9d,0x87,0x12,0x5c,0xdf,0x1d,0x9e,0xc0,0x0b,0x39,0x0e,0xd6,0x56,0x79,0x30,0xcb,0x07,0x7b,0x88,0xa5,0xbe,0xfd,0xd4,0x49,0xcc,0x92,0x6a,0xcc,0x78,0x1e,0xaf,0xee,0x89,0xc8,0x51,0x08,0x98,0x14,0x20,0xe5,0x52,0x93,0x18,0x6f,0xbb,0xdc,0xb2,0x68,0x14,0xd1,0xdb,0xe8,0x56
.byte	0x24,0xd0,0x34,0xab,0xa6,0xfa,0xfe,0x72,0x5a,0xe3,0xe1,0x87,0x0d,0xf4,0xfa,0xa6,0xa6,0x6c,0xb6,0xcb,0xf8,0xfc,0x59,0xac,0xd9,0xb0,0xcd,0x15,0xa4,0x37,0x73,0x6e,0x70,0xc9,0x74,0xef,0x87,0x78,0x61,0xc2,0xd0,0x52,0x51,0xa9,0x2c,0xdb,0x9d,0xd9,0x3d,0xac,0xcd,0x52,0x39,0x69,0x2d,0x2a,0x4f,0xf3,0xb2,0x69,0xb9,0x01,0x3c,0x57
.byte	0xeb,0x1b,0x0e,0x87,0xe9,0x42,0x58,0x83,0x6b,0xbc,0x72,0xc8,0x46,0x32,0x42,0x17,0x6a,0x19,0xa0,0xb3,0xf1,0x1c,0x96,0x9c,0x11,0x09,0x8b,0xc1,0x9e,0xe9,0x7f,0x18,0x8e,0xca,0xea,0x24,0x1b,0xce,0x12,0x57,0x1d,0x34,0xbe,0x60,0x60,0x2c,0xd8,0xa0,0x61,0x73,0xd6,0xf8,0xaf,0x15,0x26,0x84,0xd7,0xec,0xc0,0xbe,0x7e,0xa1,0xa8,0xba
.byte	0x2b,0xcc,0x20,0x67,0x6e,0xea,0x48,0x79,0x23,0xea,0x14,0x36,0x85,0x0a,0x56,0x3a,0xcd,0x5b,0x51,0xa4,0xf5,0x92,0x49,0xc2,0x55,0x62,0xed,0x88,0xde,0xd0,0x0c,0x01,0x36,0xb9,0x2e,0x94,0x80,0x75,0x8a,0x21,0x0a,0x07,0x45,0x68,0xd8,0x9d,0x49,0x7b,0xa7,0xb2,0x84,0xfa,0x3c,0xc4,0xd5,0x59,0xf9,0xc3,0xff,0xcf,0xe4,0x5f,0xea,0xbb
.byte	0x0f,0xae,0x7d,0x96,0xd3,0xe9,0x38,0xd1,0xb1,0x02,0xf6,0x4b,0x95,0x43,0x1c,0x69,0xa6,0x99,0xf5,0xdb,0x46,0x62,0xea,0x69,0x5a,0x08,0x2d,0x01,0x11,0xed,0x70,0x03,0x60,0x54,0xba,0x32,0x2c,0x0e,0x44,0x1f,0x8d,0xee,0x2e,0x39,0xab,0xc0,0xd4,0x88,0x11,0xef,0x07,0x3a,0x47,0xb9,0x6e,0x0c,0x22,0x9a,0xf3,0x89,0x01,0xfb,0xb8,0x2d
.byte	0x52,0xa0,0x42,0x4c,0xb3,0x9e,0xf5,0x4b,0x0c,0x78,0x0a,0x3b,0x29,0xae,0x4a,0xc0,0xb2,0xa3,0xc0,0x0d,0x38,0x07,0x49,0x9c,0xda,0x7c,0x48,0x81,0xba,0x53,0x0d,0x0d,0x78,0x8c,0xac,0x9b,0x3d,0x1f,0xaa,0xc1,0x32,0x54,0xca,0x54,0xe1,0xef,0x46,0x82,0x61,0xd0,0x88,0x04,0x53,0xb0,0x34,0xc2,0x23,0x9a,0x90,0xe3,0x73,0x9c,0x0d,0x46
.byte	0x61,0xe5,0xc0,0x42,0x87,0x4a,0x3b,0x3a,0xf9,0xab,0xbe,0x4c,0xba,0x2f,0x88,0x03,0x6b,0x52,0x25,0x8c,0x9b,0xc0,0x13,0xb6,0x80,0x09,0x85,0x97,0x64,0x6d,0x65,0xcd,0x18,0x42,0x00,0xdf,0x76,0x4d,0x67,0xbf,0x04,0x7a,0x5f,0x7e,0x3a,0x5c,0x6f,0x1d,0x12,0x5b,0xbe,0xd2,0xc8,0xe5,0x09,0x45,0x4d,0xae,0xed,0xd8,0x77,0xc5,0x6f,0xb6
.byte	0x43,0x09,0xe2,0xee,0xc9,0x5a,0x76,0xc5,0xeb,0xdd,0x96,0x23,0xb9,0xe5,0xfc,0xf2,0x3c,0xe1,0x67,0x5f,0x1b,0x10,0x39,0x47,0x67,0x8b,0x48,0x32,0xd0,0xbc,0xa0,0xa8,0x3e,0xc3,0x30,0x21,0x18,0x54,0x49,0xfe,0x8a,0x14,0x7a,0xe5,0x6e,0xbe,0x70,0xec,0xf6,0x97,0xa0,0xa4,0xf4,0xdd,0xaf,0xf2,0xde,0x50,0x1a,0x68,0xb9,0x1a,0x4b,0x37
.byte	0xf8,0x29,0x16,0x4f,0x8c,0xa5,0x9e,0xd2,0x72,0x7f,0xf6,0x6b,0x7d,0xac,0xe4,0x17,0x93,0x39,0x8f,0xd9,0xdf,0x50,0x1f,0xce,0xf5,0x58,0xdd,0xcd,0xc2,0xb9,0x64,0xfc,0xad,0x8a,0x3c,0x2e,0x52,0x58,0x91,0x3b,0x78,0xb4,0xfd,0x4a,0x3b,0x13,0x5d,0x20,0xd5,0xdf,0xe7,0x52,0x3d,0x4c,0x2f,0x02,0x30,0xfc,0x24,0x17,0x99,0x6e,0x4b,0xfe
.byte	0x1d,0xf0,0xe6,0x86,0x32,0x37,0xb5,0xd5,0x09,0xa3,0xa5,0x3b,0xc1,0x88,0x9f,0x01,0x57,0x12,0x03,0x1d,0x60,0xd8,0x57,0xba,0xc6,0xfc,0xda,0xab,0x02,0xbe,0xab,0x89,0xf9,0x08,0x63,0xbd,0x42,0x11,0xf7,0xbf,0xd3,0x45,0x2b,0xa5,0x34,0x91,0x18,0xb9,0xb3,0x79,0xb4,0x15,0xa1,0x01,0x1a,0xf9,0x74,0x91,0x08,0x94,0xb2,0xf3,0xb2,0xca
.byte	0x0a,0x3a,0x4f,0x42,0x8a,0x16,0xf7,0x9e,0xbf,0x27,0x72,0x7b,0xff,0xd3,0xb9,0x4e,0xf5,0x8e,0x68,0xb5,0x91,0x23,0xef,0xeb,0x5d,0x7d,0xd8,0xc9,0xda,0x07,0x33,0xc9,0x1c,0x4a,0x7a,0xf2,0x72,0x64,0xb3,0x35,0x2e,0x54,0xec,0xc4,0xd9,0xee,0xea,0xda,0xfe,0x8b,0x1c,0x21,0x93,0x52,0x95,0x7c,0x2d,0xfe,0x56,0x05,0xdd,0x57,0x37,0xf2
.byte	0x54,0x1c,0xe2,0x6c,0xc0,0xaa,0x71,0x67,0xdd,0x73,0x43,0x17,0x3e,0x76,0xdb,0x60,0xb4,0x66,0x62,0xc7,0x74,0x08,0x91,0x1f,0xd5,0x4c,0xa9,0xd0,0x34,0x33,0xea,0xb0,0x2c,0x0a,0x88,0xda,0xf7,0xca,0x91,0xf6,0x5f,0x9e,0x72,0xf6,0x18,0xf9,0x19,0x9d,0x84,0xf8,0x4c,0xe1,0xeb,0x45,0x29,0xaa,0xf2,0xa6,0xfd,0x64,0xf9,0x0b,0xfe,0x09
.byte	0x1c,0xc2,0xde,0x19,0xdd,0x0f,0x02,0x16,0x65,0x70,0x33,0xd4,0x32,0x67,0x7b,0xc4,0xbb,0x11,0x60,0x4f,0xc3,0x4d,0x29,0x23,0x7e,0x84,0x58,0x51,0x43,0x7e,0x25,0x4f,0x3d,0xd4,0xe0,0x20,0x79,0xfd,0xce,0x59,0x49,0xf8,0xd1,0x53,0xca,0x2d,0x66,0xec,0xe5,0x7f,0xc8,0x14,0x06,0xc1,0x96,0x40,0xf2,0x61,0xa7,0x1b,0xf9,0x5e,0x97,0xfe
.byte	0x62,0x57,0x05,0xcc,0x6f,0x26,0x4b,0xa6,0x40,0x33,0x72,0x20,0xd3,0x1e,0x2b,0xb2,0x60,0xe7,0x56,0xda,0x87,0xd3,0xb4,0x5a,0x73,0x04,0xc9,0xc2,0x68,0xe3,0x18,0x74,0xd9,0x46,0x74,0x31,0xf4,0xf4,0xab,0xc4,0x0a,0xbc,0x66,0x4e,0x23,0x5f,0x92,0x7c,0x0a,0x81,0xdd,0xcc,0x79,0xee,0xb3,0x3d,0xc0,0x91,0x81,0xd0,0x79,0x39,0xd2,0x69
.byte	0x5d,0xdc,0xc1,0x5c,0x61,0xb9,0x5e,0x87,0x32,0x73,0x70,0xd0,0xa8,0x7d,0xb5,0xd0,0xfc,0xf4,0xb6,0x55,0x9f,0x1f,0x8a,0xec,0xf4,0xb0,0x47,0xeb,0x3b,0x68,0x80,0x0b,0x79,0xd0,0x71,0x99,0xb1,0xd0,0xed,0x1f,0x9f,0x6c,0x2d,0x9d,0xae,0x1c,0x62,0x3b,0xec,0x3e,0x2f,0xb4,0x6f,0xbb,0x2e,0x1e,0xa9,0x7c,0xe8,0x5d,0x14,0x7d,0x0d,0x17
.byte	0x6d,0x9c,0x54,0xce,0x64,0x93,0x8e,0x3b,0xa4,0xa9,0xfb,0xd9,0x44,0x06,0xbb,0xb8,0x7f,0xdf,0xd3,0xc2,0xa2,0xcf,0x5a,0xa2,0xa7,0xbb,0xb5,0x08,0xe2,0x67,0xdf,0x0e,0x4e,0xc6,0xcf,0x0a,0x79,0x1e,0xa5,0x60,0x1a,0x81,0xb1,0x8e,0x1b,0x27,0x7f,0x8d,0x28,0x50,0xa7,0x4a,0xe4,0x4b,0x61,0x6b,0xa9,0xfa,0xaf,0x82,0x83,0xfb,0x1f,0x2e
.byte	0xfa,0xce,0x18,0x0e,0x32,0x5f,0x5a,0xcf,0xac,0xaf,0x22,0x30,0x16,0xd7,0x97,0x99,0x0d,0xb8,0x92,0xa5,0x1d,0x44,0xb2,0xa5,0xc7,0x74,0xd2,0x81,0x8d,0x5c,0x38,0xda,0x9f,0x76,0xcb,0x47,0x6c,0xb7,0x08,0xd9,0xc1,0x52,0xd0,0x64,0x0a,0xf9,0xdd,0x3e,0xe8,0x99,0x15,0x4d,0xcb,0x7b,0x25,0x53,0x8c,0x13,0xb1,0xbf,0xb7,0xca,0x2d,0xce
.byte	0x71,0x48,0xee,0x5b,0x3a,0x01,0x5b,0xfd,0x22,0xfa,0x6f,0x17,0xcb,0x52,0xcc,0x0a,0x2b,0xbb,0x6d,0xce,0x2d,0x00,0xf5,0x9e,0x0d,0x58,0xf1,0xf4,0xa4,0x9f,0x13,0xf9,0x68,0x15,0xd7,0x02,0x41,0x6c,0x19,0x6b,0x66,0x9a,0x74,0xee,0xb4,0xb3,0xc7,0xec,0x60,0x19,0xbd,0xbb,0x97,0x22,0x7c,0x4e,0xe6,0xc6,0x00,0x03,0xa5,0x36,0x52,0xec
.byte	0x21,0xcf,0xc8,0xda,0x2c,0x14,0xa9,0xd8,0x75,0xab,0xea,0x05,0x8c,0x24,0x28,0x63,0xbd,0x58,0x35,0xd7,0x95,0xcb,0x14,0x89,0x04,0x99,0x7e,0x67,0x0d,0x07,0x35,0xdb,0x17,0x7c,0x72,0x2d,0xbc,0x89,0x9b,0xb4,0x16,0x21,0x2f,0x90,0xe8,0x8f,0xeb,0xc3,0x8d,0x86,0x0d,0x92,0xf6,0x4b,0x80,0x36,0x96,0x6b,0xd8,0x95,0x7b,0xad,0xe8,0xbf
.byte	0x77,0x9e,0xf4,0x93,0xcd,0xa5,0x06,0xbc,0x38,0xf2,0x57,0x25,0x54,0xfa,0x8e,0x19,0x8e,0x25,0x8e,0x3c,0x28,0xaa,0xf2,0x02,0x30,0xd4,0x47,0x89,0x36,0xb9,0xb7,0x01,0x5f,0x0c,0xd1,0x8d,0x93,0x7e,0xf0,0xf0,0xff,0x2f,0x8f,0xb5,0x97,0xa7,0x02,0xe8,0x9b,0xf2,0x51,0xe6,0x51,0x62,0xa5,0x27,0x26,0xc6,0x7a,0x39,0x7a,0xa9,0xaf,0x1e
.byte	0x03,0xd5,0x25,0xbe,0x3b,0x19,0x46,0xc4,0xdd,0xd6,0x5e,0x6a,0x18,0xc0,0x41,0x5f,0x53,0x89,0xd3,0x16,0xfb,0x3a,0x10,0xce,0x0d,0x8c,0x04,0x4c,0xcf,0xab,0xb9,0x0d,0x6c,0x45,0x6c,0x29,0xed,0x77,0x37,0x1f,0xd8,0x10,0x8a,0xfe,0x07,0xbd,0x7e,0xd7,0xa6,0x6b,0x80,0xde,0x3e,0x2c,0xa8,0xb1,0x38,0xcc,0xab,0x10,0x69,0x8f,0x58,0x3d
.byte	0x12,0xc7,0x9c,0xc1,0x0a,0xeb,0x3d,0x5e,0xf1,0x65,0xc6,0x09,0xcb,0x4b,0x09,0x24,0xa7,0x56,0x1d,0x1d,0x4c,0xd7,0x06,0xbd,0xe2,0x72,0x70,0xae,0x7e,0xe9,0xaa,0x97,0x6d,0xec,0xcb,0x55,0x0b,0x5d,0x45,0x3a,0x25,0x3d,0x52,0x0f,0x48,0x2f,0xe4,0xd0,0x5e,0x85,0x87,0xb6,0xa7,0x70,0x2f,0x9c,0x19,0x89,0x95,0x45,0x76,0x00,0xfe,0x27
.byte	0xff,0xf8,0x73,0x59,0xba,0x98,0x92,0x4e,0x76,0x1a,0x90,0x1d,0xbc,0x1b,0xae,0x44,0xb6,0x63,0x86,0x4c,0x3c,0x8a,0x8f,0x3e,0x03,0x95,0x50,0x30,0xd8,0x0f,0x7f,0x6f,0xb6,0xe9,0xbe,0x2e,0xc9,0x55,0xe7,0x73,0xd6,0x77,0xdc,0xbc,0x67,0x54,0x31,0x47,0x30,0x46,0xe1,0xa4,0xf8,0xf3,0x90,0x4f,0x68,0x5a,0x52,0xe2,0xe7,0xdb,0xd9,0xfd
.byte	0xf6,0x36,0x2a,0xc1,0xdb,0x35,0x82,0x69,0xff,0xf9,0xea,0x53,0xff,0xcd,0x21,0x2c,0x26,0x79,0xd6,0x8c,0x74,0xe7,0x9e,0x85,0x1a,0x04,0xf5,0xed,0x89,0x16,0xf5,0xd7,0xf1,0x89,0xf1,0xb3,0x5b,0x47,0x42,0xcb,0x92,0x2e,0x70,0xf6,0x3e,0xfc,0x20,0x87,0x70,0xec,0x30,0x16,0xcc,0x88,0x64,0x13,0x58,0xf1,0x0d,0x17,0x90,0xc4,0xdb,0x07
.byte	0xf5,0xe3,0x34,0x31,0x10,0x9c,0xa4,0x6a,0x4a,0xe6,0x6c,0x80,0x49,0x07,0x23,0x21,0xd6,0xf1,0xcb,0x4a,0xd1,0xb5,0xb7,0x63,0x94,0x4c,0x0a,0xce,0x90,0xf2,0x63,0x31,0x4f,0x96,0x6c,0x5d,0x3e,0xaa,0x10,0x20,0xd6,0xb6,0xbe,0xfa,0x3f,0x83,0xbc,0xa8,0x08,0x38,0xec,0x38,0xe4,0xe9,0xf5,0xb3,0x8e,0x32,0x31,0xcd,0x7c,0x08,0x98,0xf6
.byte	0x0f,0x8a,0x8f,0xc1,0xd8,0x9e,0x05,0xb6,0x74,0x11,0x94,0xef,0x4f,0x8f,0xa1,0xc6,0x8c,0xdb,0xc3,0x27,0x4e,0xa3,0x30,0x94,0xf5,0xe8,0x2a,0x18,0x0a,0x51,0x9b,0x79,0xb2,0x1f,0xc3,0xa0,0x26,0xa9,0xf5,0xc4,0x9e,0x39,0xda,0x6a,0x53,0x8f,0x8c,0x4c,0x54,0x50,0x81,0xa0,0x0a,0xd3,0x7c,0x99,0x91,0xc7,0x3e,0x56,0x7d,0x53,0x8c,0x3c
.byte	0x51,0x44,0xa5,0x22,0x9d,0xd2,0x9b,0x13,0xcf,0xb8,0x0c,0xb8,0xd4,0xaa,0xb4,0xaa,0x8d,0xab,0x7c,0x06,0xca,0xbb,0x85,0xac,0x01,0xee,0xef,0xe7,0x74,0xd5,0x0d,0x64,0x91,0x1c,0xde,0x6c,0x05,0x37,0x1e,0x23,0x05,0x7e,0x38,0xdc,0x17,0xaf,0xa7,0x95,0x85,0x1f,0xaf,0xc8,0xe1,0xc2,0xda,0xda,0xf1,0x14,0x56,0x66,0x68,0x70,0x36,0x38
.byte	0x7b,0xb8,0x22,0x9f,0xc4,0xeb,0x5d,0x76,0x97,0xc5,0xa3,0xb9,0x06,0x86,0x4f,0x20,0xab,0x7d,0xce,0x7d,0x78,0x59,0xc5,0x1f,0x73,0x81,0xf6,0x6d,0xb4,0xcc,0x10,0xc5,0x4d,0xe3,0x81,0xaf,0xbc,0x37,0x42,0x28,0x5f,0x51,0x1e,0xaa,0xc7,0x81,0x20,0xc3,0x89,0x35,0xf1,0x74,0x3a,0xe8,0x04,0x24,0xef,0x8b,0x70,0xe1,0x74,0xdf,0x87,0xd5
.byte	0x3c,0x32,0x32,0x7d,0x03,0xd7,0xda,0x6d,0x8b,0x25,0x8d,0x11,0xa3,0xc2,0x27,0xdc,0xa3,0xfc,0xdf,0x70,0xa4,0x41,0xad,0xda,0xce,0x12,0x45,0x14,0xa1,0x96,0x16,0xd8,0x54,0x89,0x9e,0x78,0x7f,0x23,0x12,0xd1,0x15,0x08,0x7f,0xbd,0xf0,0x9a,0xf1,0x5b,0x07,0xd5,0xbc,0xab,0xab,0x15,0xae,0xda,0xf1,0x26,0x12,0x4e,0xd6,0x6c,0x35,0xc1
.byte	0x6e,0x27,0x4d,0xa8,0x71,0x51,0x1e,0xae,0xa8,0x35,0x26,0x06,0x18,0x03,0xd8,0xae,0x9e,0x8b,0x07,0x30,0x10,0xfb,0x47,0x05,0x02,0xcc,0x0a,0xbd,0x57,0x43,0x15,0x0a,0x7a,0xb5,0x30,0x0b,0xa6,0x3c,0xa8,0xc9,0xf5,0x68,0xe1,0xfb,0xd1,0xe0,0xe7,0x44,0x6c,0xb4,0x44,0xb6,0xd1,0x2b,0x30,0x5e,0x17,0x89,0x40,0xcc,0x10,0x8f,0x97,0x8a
.byte	0xf3,0xf4,0x52,0x55,0xc4,0x8e,0x46,0xe5,0x24,0x0b,0x2a,0x5d,0x84,0xc1,0x4e,0xa8,0x5a,0x53,0xa8,0xce,0xc6,0x3f,0xa2,0xaa,0x3a,0x8f,0x51,0xed,0x4c,0xa6,0x34,0x6a,0x8c,0x18,0x9b,0x36,0x49,0x40,0x34,0xa3,0xe4,0xd8,0x3c,0x8a,0xfc,0x41,0xc9,0x35,0xfe,0x6e,0x3e,0x29,0xbc,0x04,0x61,0xaf,0x04,0x03,0x43,0x79,0xb5,0x77,0x27,0x25
.byte	0xbe,0x85,0xc9,0x56,0xa4,0x17,0xc4,0x27,0x3d,0x53,0x1b,0x49,0x86,0xb2,0xb6,0x52,0x62,0x12,0x5d,0xe9,0x47,0x6f,0x65,0x78,0xf8,0x95,0x63,0xbc,0x73,0x6d,0xa6,0xb9,0xcd,0x17,0x39,0x56,0xb0,0xab,0x3a,0x15,0x5f,0x9a,0x98,0xfb,0xcd,0x51,0x4a,0x35,0x21,0xaf,0x07,0x4a,0x3d,0xfd,0x39,0x11,0x42,0xed,0xfc,0x7e,0x10,0x24,0xa5,0x0c
.byte	0xb2,0x4f,0x27,0xe4,0x78,0x32,0xfe,0xfc,0x8e,0x46,0x68,0xbb,0x2e,0x85,0x87,0x0f,0x01,0xde,0x1c,0x02,0xdd,0x82,0xa0,0x9e,0x30,0x31,0x8d,0x86,0x36,0x33,0xa6,0x59,0x16,0x78,0xae,0x1f,0x1d,0x27,0x0b,0x29,0x42,0x16,0x93,0x3b,0xe6,0xfb,0x8d,0xd5,0x48,0x42,0x61,0x39,0x5b,0xf7,0xea,0xd0,0x6f,0x67,0xd9,0x03,0x72,0xed,0x54,0xe1
.byte	0xab,0x3f,0xa0,0xdc,0x4b,0x19,0xe6,0xe3,0xfe,0x5f,0x65,0x64,0x4c,0xa9,0x5c,0x52,0x36,0xb3,0x65,0x28,0x3e,0xe5,0x07,0x50,0xed,0xec,0x2f,0xc9,0xff,0x47,0x27,0xf6,0xfe,0xb8,0x60,0x60,0x52,0xe5,0xec,0x3c,0x4f,0x69,0x9f,0xaa,0x06,0x8a,0x99,0x9f,0xac,0xfc,0x0a,0x6f,0x8a,0xa4,0x0e,0x5c,0x58,0xb4,0x09,0xba,0x93,0x95,0x94,0x12
.byte	0x9b,0x23,0x4f,0x93,0x28,0x6d,0xd0,0x76,0xfd,0xc9,0x87,0x3b,0xf1,0x8c,0x7d,0x56,0x84,0x5a,0x04,0x08,0x30,0xf7,0xf6,0x52,0x15,0xba,0xd6,0x7a,0x39,0x8c,0x5a,0xbf,0xeb,0x02,0x6d,0x31,0x30,0x92,0xbc,0xe2,0x07,0x21,0x16,0x96,0x70,0x66,0x00,0xe0,0x04,0xc5,0xa8,0xe4,0x08,0x6d,0x08,0x69,0x35,0xe2,0xb1,0x83,0x03,0x37,0xca,0xff
.byte	0x06,0x37,0x80,0xd5,0x1a,0xc5,0x31,0xfc,0x9a,0xb0,0x8a,0x4b,0x58,0xf3,0x00,0x4e,0xa4,0xfe,0x9e,0xe0,0x60,0xc7,0x3d,0x2c,0x52,0xb5,0x39,0xf0,0xa4,0x88,0x39,0x37,0xa5,0x26,0x8a,0xa3,0xe6,0x31,0xce,0xf3,0xa1,0x54,0x73,0xe7,0x69,0x38,0xef,0xa2,0xab,0x52,0x50,0x1a,0x45,0xcc,0x29,0x9c,0xb6,0xf4,0xde,0xc2,0xfe,0x7a,0x26,0xf7
.byte	0x7a,0x6e,0x07,0xb6,0xd8,0x3f,0x77,0x60,0x35,0xae,0x6a,0x90,0xd6,0xb8,0x37,0xed,0x73,0x59,0x54,0xd9,0x0c,0x87,0x0e,0x81,0xef,0x69,0xc7,0xd4,0x8f,0x00,0x74,0x57,0x12,0xcf,0xa1,0x76,0xe8,0x45,0xf5,0x9a,0x4f,0xe2,0x5d,0x8a,0x89,0xb1,0x8b,0xea,0x9c,0x0a,0x1e,0x00,0x61,0x3b,0x66,0xbd,0xb5,0xd6,0xff,0xa3,0xff,0x52,0xc2,0x35
.byte	0x81,0x05,0x08,0x2b,0xf9,0x52,0xda,0x74,0xd1,0x76,0x13,0xba,0x28,0x4c,0xb1,0xb1,0x82,0x5b,0x4e,0x79,0x39,0x22,0xf9,0x96,0x91,0x07,0x4f,0xf9,0xf2,0x25,0x25,0xb1,0x3e,0xda,0x07,0x5c,0x01,0x7b,0xfa,0x3e,0x95,0x92,0x1d,0xf8,0x44,0x06,0xc1,0xed,0x64,0x74,0x14,0x84,0x25,0xee,0x75,0xaf,0xe3,0x7c,0xd3,0xbe,0x7a,0x51,0x6b,0x80
.byte	0x20,0x43,0x20,0x10,0x5f,0xf5,0xfc,0xd5,0xe8,0x06,0x43,0xad,0x10,0x6b,0x67,0x48,0xca,0xca,0x6e,0x3e,0x1c,0xdf,0x8f,0x7a,0x65,0xc8,0x5d,0xba,0x3b,0x67,0xeb,0x1f,0xc4,0x37,0xad,0xef,0x73,0x9e,0x18,0x8e,0xc1,0x99,0xaf,0x75,0xd3,0x91,0x73,0xc3,0x3a,0xb2,0xfe,0xff,0x30,0x81,0xc4,0x4f,0x37,0x37,0x23,0x96,0x17,0xf1,0xa2,0x9b
.byte	0x55,0x6e,0xd6,0xb3,0xc4,0x98,0xa3,0x32,0xb6,0xff,0x86,0x87,0x77,0xf4,0xad,0x16,0x3e,0xf0,0x24,0x01,0xb4,0x8e,0x1e,0x0f,0x10,0xa4,0x2e,0xe4,0x79,0xe6,0x88,0xe7,0x09,0x58,0x5e,0x97,0xad,0x0d,0x72,0x05,0xbf,0x2f,0x3f,0x99,0xee,0x8a,0x84,0xc3,0x62,0x43,0x52,0x6d,0xab,0x66,0xcf,0x9f,0x4e,0xf2,0x0d,0x13,0x15,0x49,0x84,0x5e
.byte	0x6c,0x8d,0x2d,0xef,0x53,0x16,0xa0,0x63,0xbe,0x05,0xb8,0x9b,0x23,0xca,0xca,0xb8,0xdd,0xbc,0x96,0x68,0x35,0x43,0x63,0x30,0x8e,0xaf,0x53,0x98,0xe2,0x76,0xe8,0x89,0x00,0x29,0x11,0x70,0xd5,0x94,0xbd,0x78,0xff,0xf6,0x88,0x4a,0x3d,0x99,0xd9,0x7e,0xdf,0xa8,0x33,0x92,0xa2,0xc0,0x32,0x42,0x73,0x08,0xd4,0x55,0x5d,0x18,0x93,0xca
.byte	0x7e,0x33,0xe3,0x51,0xc7,0xb7,0x24,0x62,0x69,0xf4,0xab,0x36,0xe3,0x22,0x10,0x9b,0xe0,0xbd,0x48,0x65,0x30,0x9c,0xfe,0xeb,0x3f,0x7f,0x22,0x67,0xcc,0x87,0x5a,0x71,0xb0,0xd1,0x19,0x82,0x1c,0xb2,0xf1,0x73,0xd2,0xd6,0x3f,0xef,0xe3,0x2f,0x25,0xf3,0x8b,0x21,0x4e,0xbf,0x0e,0xc1,0xd2,0x8a,0xbb,0x04,0xde,0xcf,0xd1,0x77,0xba,0xaa
.byte	0xc7,0x41,0x68,0xce,0xc4,0x64,0xf9,0x3a,0x2f,0x1c,0x0b,0x22,0xf8,0x60,0x09,0x76,0x31,0x88,0x62,0x3a,0xf3,0x49,0xe6,0xda,0x4b,0xd3,0xf3,0x35,0xaa,0x56,0x4c,0x2f,0x7f,0x03,0x3e,0xf8,0xcb,0x5e,0xed,0x37,0xa1,0x29,0xe8,0x20,0xf5,0x4a,0x32,0x73,0x30,0xfd,0xd1,0xf6,0xb4,0xa1,0x30,0x87,0xcb,0x21,0x63,0xf5,0x3a,0xad,0x05,0x1a
.byte	0x34,0xf5,0x32,0xf6,0x02,0xf3,0x10,0x52,0xfd,0x86,0x37,0x1f,0x5d,0xe4,0x2e,0x31,0xcb,0xb8,0x4c,0xeb,0xdd,0xea,0x01,0x0d,0x94,0x13,0xa8,0x8f,0xf0,0x52,0x4e,0x0d,0x4f,0xd1,0x24,0xeb,0x0f,0x2b,0xb1,0xaa,0xc5,0xc8,0x52,0xb9,0xbe,0x21,0x48,0x2a,0x53,0x98,0xe4,0x00,0x72,0x64,0xdb,0x44,0x48,0x36,0x60,0xe7,0x81,0xdc,0x25,0x85
.byte	0x4d,0xaf,0xa8,0x0d,0xfb,0x07,0x76,0x4f,0x6a,0x30,0x3c,0x7c,0x3b,0x36,0xa9,0xf8,0xae,0x81,0x03,0xe9,0x19,0xdf,0xdb,0xd9,0x7f,0x59,0xe0,0xd7,0x50,0x14,0x9f,0x67,0x3d,0xc7,0xdf,0xa8,0x44,0x86,0x29,0x81,0x65,0x44,0x9e,0x37,0x27,0xdd,0x2f,0x33,0x59,0xf7,0xaa,0x17,0x34,0x8c,0x1c,0xa7,0x8e,0x06,0x46,0xf1,0x43,0x87,0xa9,0xb7
.byte	0x85,0xec,0x92,0x0d,0xdd,0x78,0x55,0x99,0xfb,0x1c,0x66,0x85,0x0d,0x59,0x31,0x00,0xbc,0xd9,0x9b,0xbb,0xfb,0xfc,0xb2,0x36,0x3c,0x34,0x8f,0x4a,0xb6,0x74,0x9c,0x32,0x6f,0x69,0x6c,0x3e,0x68,0x7e,0xec,0xeb,0x58,0x6a,0xf5,0xa2,0xbb,0x04,0x68,0xdb,0x8c,0xf0,0x04,0xba,0xf7,0xf7,0x50,0xd0,0x60,0xba,0x45,0x73,0x0f,0x2c,0x2f,0x97
.byte	0x58,0xcc,0xa2,0xbe,0xfe,0x5e,0xf9,0x44,0x03,0x8b,0x99,0x56,0xb0,0x4f,0xe1,0xd0,0xa5,0x9f,0xd1,0xfc,0x95,0x44,0x4b,0x01,0x24,0xc0,0x4c,0x91,0xc1,0xb5,0x99,0xe7,0x5f,0x2f,0xcf,0x5d,0x4f,0x64,0x6e,0x54,0x51,0x0c,0x35,0x5f,0xa8,0x7b,0x27,0xa0,0x7d,0xb1,0x90,0xc2,0xdd,0x50,0xef,0x09,0x6f,0xed,0x25,0x6b,0xf5,0x6f,0xc1,0x97
.byte	0xea,0xd5,0x49,0xf5,0x40,0x60,0xc3,0xbb,0x0d,0x82,0x15,0xa5,0xf7,0xfe,0xa1,0x20,0x13,0x9e,0xbb,0x43,0x58,0xba,0xd2,0xe8,0x89,0xaa,0xfc,0xe0,0x47,0x6b,0xac,0x91,0x8b,0xeb,0x4f,0xf5,0xda,0xf5,0xc8,0x11,0x64,0x7c,0x8d,0x43,0x92,0xf2,0x84,0xeb,0xfb,0x5c,0x1b,0x6b,0x68,0x8e,0x3c,0x66,0xb2,0xd1,0x8e,0x67,0x44,0xbf,0x69,0x3b
.byte	0xb9,0x41,0x78,0x8d,0xc8,0x7b,0x81,0x61,0x70,0x6e,0xe2,0xfc,0xd2,0x96,0x31,0x31,0x2f,0x27,0x90,0xf2,0xc4,0xed,0xbd,0xb5,0x0e,0x91,0x7d,0xd0,0xec,0x3c,0xe9,0xcf,0xf2,0x07,0xac,0x54,0x44,0x9a,0x24,0x41,0xcb,0x2a,0x86,0x30,0x18,0xba,0x65,0x59,0x41,0x00,0x59,0xbf,0x3d,0x01,0x8a,0x51,0xe5,0xd2,0x90,0x8c,0x7d,0xd7,0xad,0x71
.byte	0xdc,0x45,0x62,0x95,0xf9,0x9f,0xe8,0x55,0x6d,0x48,0x22,0x32,0xcb,0x9a,0x55,0x65,0xe5,0xdf,0xee,0x22,0x99,0x91,0xd7,0xed,0x33,0x04,0x72,0xc7,0xc5,0xb2,0x56,0x5e,0x8f,0x38,0x4b,0xd0,0x61,0x4b,0x4b,0x04,0x4c,0x4c,0x2b,0x23,0x00,0xd4,0x5c,0xdd,0x84,0x8d,0x73,0xf4,0xf7,0xef,0xd5,0xdb,0x2b,0xec,0x54,0x86,0x37,0x01,0x64,0x56
.byte	0xef,0x73,0x9f,0xb4,0xb6,0xd2,0xf4,0x33,0x93,0xbd,0xd7,0xd9,0x6e,0x8f,0x60,0x85,0xbc,0xa6,0x16,0x3f,0x3f,0xc3,0xd7,0xfc,0xb6,0x82,0xf0,0xe5,0x1e,0x2c,0x51,0x48,0x27,0x50,0x3e,0xdb,0xe6,0x86,0x3b,0xa1,0xfa,0x09,0x39,0x04,0x6f,0xb1,0x85,0xbd,0xda,0x4d,0x2f,0xd1,0x40,0x6f,0x2e,0x2b,0xf2,0x9a,0x4d,0x8e,0xb2,0xc5,0x6e,0x21
.byte	0xf9,0xdd,0xc9,0x2e,0x81,0x18,0x7b,0x88,0xb9,0x86,0x36,0xe5,0xb2,0xdd,0x19,0xb4,0x7f,0x5d,0xc0,0x20,0x34,0xdc,0x63,0x7d,0x8c,0x80,0x0f,0xe6,0x85,0x14,0xbb,0x87,0x6c,0x3e,0x39,0x53,0x60,0x3d,0xc5,0x46,0x11,0xa3,0x96,0x60,0x6f,0xe9,0xfe,0x59,0xcc,0xed,0x4d,0xdb,0xa3,0xa1,0xf1,0x71,0x0b,0xb0,0x1f,0x89,0x4c,0x32,0x59,0xa5
.byte	0x7d,0xf7,0x3e,0x5b,0xca,0xa4,0xe1,0xc3,0x50,0xac,0xdf,0x00,0xad,0x45,0x59,0x9e,0x23,0x5f,0x52,0xbd,0x36,0x78,0x55,0xcf,0x90,0x91,0x41,0x14,0xdb,0x76,0x3a,0x43,0x39,0x89,0xe1,0x93,0xc8,0x66,0x91,0xc7,0x42,0x06,0x6f,0xbb,0x35,0x1e,0x07,0x52,0x5a,0xe4,0x41,0x9f,0x65,0xe0,0xdc,0x49,0x8c,0xd3,0x5f,0x16,0x21,0xc9,0xb8,0x8a
.byte	0xc2,0x56,0x91,0xcb,0x18,0x6b,0x38,0x7b,0x3a,0xeb,0x91,0x3c,0x0d,0x6a,0x1f,0xd6,0xc6,0xd7,0x56,0x8d,0xd3,0x76,0x1c,0x9d,0xed,0x3d,0xb6,0x92,0x71,0x6e,0x73,0xc6,0xb8,0xa2,0x1c,0x25,0xb9,0x3c,0xd4,0x41,0xf7,0x8f,0x39,0x60,0xe6,0x27,0xf2,0xc6,0x5f,0x56,0x08,0x7c,0xd3,0x16,0x9d,0x06,0xc0,0xca,0x3d,0xc6,0x61,0xb0,0x21,0x51
.byte	0x6d,0xca,0x82,0x59,0xe6,0xbb,0x99,0xa2,0x4f,0xfc,0x71,0x66,0x2b,0x4e,0x40,0x62,0x97,0x34,0x73,0x4a,0xe5,0xf0,0x4f,0x4c,0x36,0x4c,0xdb,0x03,0xa9,0x87,0x29,0x21,0x5d,0x91,0x5b,0x89,0xb8,0x3d,0x65,0xc7,0x58,0x0a,0x81,0xb5,0x3e,0x22,0xa1,0x57,0x95,0xbe,0x60,0xf5,0xeb,0xb3,0x49,0xdf,0xd9,0xa2,0x31,0x36,0x5f,0xb2,0xa6,0xf6
.byte	0x66,0x88,0x88,0x8e,0xa3,0x2c,0xac,0x5e,0xa1,0x33,0x16,0x64,0x08,0x47,0xc8,0xbc,0xc2,0xe9,0xdb,0x73,0x57,0x50,0xd4,0x24,0x01,0x26,0x26,0x04,0x4f,0x8a,0xc0,0x7a,0x97,0x14,0xf2,0xd0,0xbe,0x03,0xea,0x8a,0x25,0xcb,0x98,0xe7,0xbd,0x67,0xff,0x32,0xfd,0x8a,0x7d,0x11,0xe1,0xb2,0x91,0xb5,0xa0,0xb6,0x3c,0x2c,0xb3,0x6e,0x35,0x61
.byte	0x86,0xbc,0x37,0x15,0xf8,0x3b,0x0d,0x84,0x83,0x69,0x76,0xb0,0xaa,0x8f,0x4f,0xca,0xba,0x54,0xfe,0x42,0xc8,0xba,0x9a,0xd5,0x53,0x69,0x67,0x29,0x23,0x3a,0x6a,0x75,0x97,0xb4,0x29,0x2e,0x62,0xe3,0x95,0x82,0xb3,0xa0,0xa1,0xb7,0xdf,0xc2,0x66,0x4d,0xdd,0x0d,0xda,0xda,0xc2,0x42,0xe0,0x69,0xb1,0xab,0x3c,0x44,0x39,0x11,0x3b,0x0a
.byte	0xd6,0x96,0x2c,0x36,0xb0,0xa0,0xed,0x3d,0x0c,0x63,0x8b,0x90,0xe4,0xb9,0x5f,0x4c,0x27,0x70,0x87,0xb3,0x54,0xe2,0x36,0x74,0x6f,0x3e,0x22,0xb1,0x3b,0x1b,0xba,0xdb,0x1c,0xbd,0x9c,0x6d,0x84,0xbd,0x33,0xfb,0xc0,0x98,0x4c,0xcf,0x7a,0xe8,0x41,0xdb,0x32,0x1f,0xb7,0x64,0x19,0xdb,0x87,0xe7,0xf9,0x52,0x40,0x8c,0xc6,0x89,0x98,0x15
.byte	0x69,0xde,0xfa,0x29,0x9a,0x0f,0xaf,0xb0,0xad,0x71,0x35,0xab,0xab,0x34,0xe0,0xf4,0x03,0x24,0x6f,0x94,0x38,0x87,0xba,0x68,0xd5,0x1f,0x58,0x88,0x3e,0x12,0x20,0x57,0x43,0xde,0xd0,0xbc,0xaa,0x31,0x8f,0xbc,0x88,0xa0,0xdf,0x5a,0xcc,0xd1,0xba,0x9c,0x18,0x80,0x4e,0x8f,0x68,0x91,0x9c,0x57,0x3b,0x5a,0x62,0xc7,0x29,0x3e,0x49,0xc7
.byte	0x23,0x26,0xfd,0x9e,0xd0,0xb0,0x4f,0xd4,0xb2,0xa9,0xa8,0x4c,0x66,0x54,0x52,0x75,0x6b,0xbf,0x63,0x76,0x49,0x3b,0xa3,0xb2,0x8f,0x87,0x9d,0xb4,0x8f,0x07,0x3c,0x8e,0xae,0xe1,0x0e,0x9a,0x86,0x90,0x58,0x73,0x8a,0xb3,0xa9,0xab,0xe6,0x27,0xd7,0x70,0x94,0x77,0x12,0xdc,0x71,0xdf,0xcf,0xba,0xdd,0x85,0xfe,0x28,0xaa,0xcd,0xcc,0xe8
.byte	0x5f,0xd4,0xd8,0x45,0x6f,0x20,0xa8,0x5e,0x40,0x91,0x3b,0xd7,0x59,0x92,0xb8,0x7d,0x2b,0x8b,0x38,0xbd,0xfe,0x7b,0xae,0x5c,0xee,0x47,0x9b,0x20,0xb7,0xf3,0xad,0x75,0xa9,0xe1,0x96,0xc8,0xb2,0x30,0xfe,0x0c,0x36,0xa2,0x02,0xf4,0x3b,0x30,0xfd,0x91,0xfa,0x5f,0xd6,0x18,0x1a,0xcb,0xd2,0x26,0xbb,0x67,0xbe,0x1c,0x99,0xa5,0x4f,0x57
.byte	0x40,0xb5,0xed,0xd6,0x84,0xfd,0x6b,0x00,0xc8,0xe7,0x18,0x1a,0x9f,0xf7,0x3b,0xd1,0xcc,0x12,0xeb,0x9d,0x61,0xf0,0x8d,0x64,0x08,0x93,0x61,0xc4,0x3e,0xdb,0xda,0x15,0xb1,0xd6,0x2c,0x84,0x2a,0xd8,0xd2,0xa1,0x66,0x4e,0xc9,0xd6,0xbf,0x7e,0xb6,0x22,0xfa,0x35,0x5e,0xdc,0xc0,0x31,0x02,0xb8,0x17,0x46,0x9e,0x67,0xd3,0x6a,0x8f,0x33
.byte	0x85,0xc3,0xfe,0x36,0xbc,0x6f,0x18,0x8a,0xef,0x47,0xf1,0xf2,0x6e,0x15,0x6c,0xb1,0x4a,0x4b,0x13,0x84,0xd5,0x1b,0xf9,0xa2,0x69,0xcd,0xc7,0x49,0xce,0x36,0x8e,0xe5,0xd5,0x35,0x05,0x7c,0x7f,0xc6,0x15,0x29,0x2e,0x64,0xa6,0x91,0x9d,0xe5,0x9d,0x90,0xe7,0x26,0xec,0x75,0x19,0x58,0x57,0xf2,0x19,0x7b,0x24,0x7d,0x19,0xd3,0x72,0x69
.byte	0xaa,0xa2,0x8c,0xe3,0x3d,0x38,0xb9,0xf0,0x5b,0xe9,0x3b,0xaa,0x96,0xef,0x2c,0xfc,0xf5,0x13,0xa6,0xa9,0x57,0x8c,0xa9,0x3a,0xc1,0xf0,0x2d,0x57,0x06,0x08,0xe3,0x9c,0xfe,0x82,0x8a,0x6a,0x79,0x5b,0xef,0x2b,0x81,0x83,0x01,0x53,0xac,0xdc,0x79,0x93,0x9b,0x23,0xd4,0xae,0x17,0x6f,0x62,0xaa,0x33,0x41,0xa6,0x31,0x1c,0x7b,0x46,0x2b
.byte	0x17,0xd3,0x6f,0x66,0x73,0x54,0xee,0xa1,0x08,0xee,0x8f,0x0f,0x0e,0x53,0xa7,0x49,0x17,0xdb,0x35,0xaf,0x4e,0x94,0x87,0x8e,0xff,0xf4,0x2b,0x29,0x01,0x45,0xa3,0x0a,0xd9,0x13,0x38,0x09,0x46,0x2c,0x56,0x97,0xd7,0xee,0x24,0x43,0xd1,0x20,0xed,0x38,0xde,0x52,0x13,0x38,0x06,0xd3,0x97,0xc7,0x48,0x8b,0x72,0x0a,0xc5,0xca,0x75,0x2c
.byte	0x04,0x9e,0xee,0x14,0xe7,0xda,0x59,0xc2,0x54,0x7a,0x72,0x55,0x35,0x00,0x93,0xb7,0xb9,0x81,0x01,0x46,0xae,0x43,0x81,0x34,0xd7,0xb4,0x7a,0xfc,0xfc,0x98,0x2b,0x29,0xe5,0x5e,0x9d,0x8e,0xef,0xd4,0x44,0x9d,0x9a,0xbe,0xdb,0x83,0x33,0x18,0x9e,0xbd,0x0f,0x34,0x4d,0xd9,0x34,0xe0,0x2c,0x1f,0x10,0xaa,0x06,0x5e,0x54,0x51,0x72,0xec
.byte	0xbf,0x6b,0x3e,0xb9,0xdd,0x37,0xc3,0xe1,0xbe,0xbe,0x1d,0x86,0xde,0x12,0xca,0x82,0xc5,0xe5,0x47,0xf8,0xbe,0xef,0xb6,0x79,0xd5,0x3c,0x69,0x0a,0x35,0x3e,0xd3,0xf8,0xaf,0x5b,0x8e,0x69,0xff,0xb2,0xf7,0x91,0xc2,0x70,0x22,0x97,0x1c,0x5c,0x56,0x25,0x5a,0xcf,0x31,0x7a,0x37,0xce,0xc7,0xf2,0x98,0xdc,0xb5,0x58,0x71,0x5a,0x60,0xe2
.byte	0xfe,0x4f,0xf3,0xe2,0x2a,0xca,0x22,0x3e,0x07,0xc2,0xea,0x23,0xc8,0x04,0x97,0x7f,0xca,0xf6,0xf8,0x12,0x06,0x88,0x81,0xee,0xb7,0xdd,0x56,0x9e,0x0f,0x36,0xd3,0x09,0xa8,0x74,0x4d,0x8b,0x8f,0x31,0x64,0xbe,0x9d,0x7b,0x68,0x50,0xc8,0x64,0x40,0x3b,0x0c,0x04,0xb9,0x4b,0x9e,0xff,0x7e,0x5d,0xd8,0x57,0xa0,0xe5,0x6d,0xc2,0x37,0xe7
.byte	0xd1,0xd9,0x96,0xaa,0x16,0x3e,0xa2,0x9d,0x32,0xe7,0x1e,0x11,0x6e,0x41,0xe2,0xa0,0xe1,0x6f,0x32,0x6d,0xd5,0x38,0x0c,0x27,0x27,0xa9,0xc2,0x04,0xc6,0xe7,0x8d,0x7d,0x7b,0x30,0xbe,0x54,0x6b,0x82,0x37,0x39,0x53,0x54,0xc9,0xac,0xcb,0xd1,0x31,0x79,0xd4,0x7b,0x85,0x07,0xf4,0xf4,0x5d,0x33,0xc7,0x91,0x4e,0xe5,0x13,0x78,0x09,0x42
.byte	0x29,0x48,0xaf,0x82,0xb1,0x88,0xd4,0xd3,0x57,0x50,0x38,0xa7,0x66,0x41,0x63,0x34,0x2a,0x3c,0x5e,0x8f,0xc4,0xc1,0x00,0xa1,0x22,0xbe,0x5e,0x64,0xb0,0x60,0x9b,0x42,0x9d,0xc6,0x59,0x5c,0xcc,0x29,0x6f,0x64,0x5b,0x5c,0x0f,0xb2,0xae,0x21,0x0c,0x9a,0x6a,0x19,0xb9,0xa6,0x32,0xf8,0xdc,0x82,0xea,0xba,0x27,0xcf,0x42,0xd3,0xde,0x78
.byte	0xfe,0x9c,0xa5,0x36,0xb6,0x24,0xb6,0x0d,0x5b,0x67,0x6c,0xf5,0x16,0xbf,0x67,0x54,0x4f,0xe4,0x83,0x29,0x75,0x42,0x9a,0xbb,0xd5,0xe7,0x01,0x1f,0xbd,0x80,0x1a,0x7a,0xb6,0xe1,0x2b,0x5d,0x71,0x93,0x00,0xad,0xf6,0x11,0x8d,0x67,0xdc,0x9c,0x8f,0xf0,0x09,0x3f,0xf9,0xa4,0xd6,0xe0,0xdd,0x95,0xea,0xfb,0x71,0x76,0x21,0x31,0x6d,0x48
.byte	0x0a,0x27,0xa8,0xa6,0x3a,0x7f,0x42,0x6b,0x7e,0xd7,0x6e,0xd5,0x42,0x97,0xad,0x55,0xae,0x26,0x3c,0xde,0x3f,0xaf,0xfd,0x1d,0x6d,0xd3,0xeb,0x84,0xad,0x6d,0xd1,0x4a,0x85,0x1a,0xf7,0x99,0xa4,0xd0,0x48,0xfb,0xf6,0xfe,0xc6,0xea,0x61,0x77,0xe2,0x56,0x87,0xc1,0x36,0x44,0xb4,0xe3,0xd7,0xd9,0x6d,0x3e,0x1b,0xf4,0x72,0x3e,0xfe,0xa5
.byte	0x47,0xf8,0x3f,0x1a,0x6e,0x43,0xf5,0x67,0xfe,0x90,0x96,0x9b,0x52,0xde,0xab,0xfb,0x45,0x7d,0x93,0xea,0xc3,0x40,0xe1,0x5f,0xcd,0xad,0x3b,0xe9,0x4e,0x36,0xc5,0x38,0xf4,0x66,0xde,0x4b,0xc8,0x2a,0xc3,0xa2,0x3a,0x2a,0xf1,0xd1,0xe8,0x01,0x07,0x37,0xca,0x42,0xbf,0x4f,0xd8,0xc5,0x50,0x93,0x1a,0x01,0x1d,0x51,0x41,0x6e,0xbf,0x68
.byte	0x93,0x2e,0xdc,0x41,0x23,0xf3,0x13,0xe7,0x09,0xfa,0x39,0x6d,0xee,0x41,0x49,0xbb,0x78,0x04,0xcf,0xc9,0xbb,0x11,0xaa,0x57,0xb5,0x3e,0x4c,0x3a,0x77,0xb7,0x0b,0x38,0x34,0x48,0xd0,0x99,0x20,0x55,0xcd,0x43,0x2f,0x68,0x66,0xb0,0xe6,0x75,0x41,0xe4,0xae,0xfd,0x96,0xe8,0x01,0x4c,0x0b,0x5c,0xbc,0x4f,0x45,0x70,0x08,0x9e,0xf7,0x68
.byte	0x9e,0xbb,0xe5,0x39,0x20,0x3f,0xbe,0xd3,0xe3,0x95,0xba,0x98,0xd5,0x12,0x2e,0x87,0xd4,0xf4,0x12,0xa2,0xcb,0xd4,0x51,0x53,0x93,0x67,0x06,0xf1,0x21,0x0e,0x92,0x8f,0x9f,0x9e,0x6c,0x16,0xa4,0x2c,0x6d,0xb0,0xd0,0xe1,0x87,0x2f,0x09,0x2c,0x8f,0x4b,0x89,0x1f,0xab,0x66,0xf1,0xcd,0x6e,0x67,0xaf,0x07,0x99,0x18,0x1b,0xda,0xc8,0x65
.byte	0x81,0xa3,0x37,0x8a,0xad,0xe4,0x1d,0xfd,0x82,0xa0,0xf1,0xe1,0x1e,0x8d,0x0b,0xf7,0x07,0x7c,0xb3,0x10,0xc8,0x5a,0xa9,0xcc,0xc8,0xd0,0x2e,0x5a,0x71,0x45,0x4c,0x30,0xf0,0x10,0xe0,0xf6,0x0d,0x0d,0x11,0xb4,0x83,0x40,0x75,0xee,0xb9,0x24,0x04,0xe3,0xba,0xb3,0xd3,0x00,0x57,0x71,0x98,0xf0,0x4b,0x35,0x8d,0xd8,0x71,0xa0,0xcc,0xaf
.byte	0x46,0x54,0x67,0x65,0x70,0x0b,0x9c,0x61,0xf8,0xd4,0xb2,0x35,0xfd,0xcf,0x2b,0x3a,0x48,0x5b,0x03,0x86,0xd8,0x13,0x48,0x8a,0x55,0xa5,0x4d,0xef,0x42,0x41,0xbb,0x6a,0x8c,0x92,0x46,0x87,0x82,0x09,0x43,0xf3,0x94,0x1d,0x23,0x36,0xfe,0x6f,0xb8,0x9f,0xfa,0xf9,0x92,0x27,0x3c,0xcc,0x47,0x89,0x5c,0x7f,0x81,0x42,0x74,0x12,0x14,0xff
.byte	0x98,0x63,0xc0,0xfb,0x70,0xff,0xc7,0x65,0x5a,0xc3,0xb9,0x74,0x1b,0x71,0x3c,0x2c,0x47,0x79,0x07,0xb9,0x3c,0xc2,0x5f,0x48,0x4f,0xbd,0xaf,0x03,0x05,0x57,0xa9,0x84,0x33,0xc8,0x0d,0xd5,0xac,0x42,0xdb,0x4b,0x57,0x46,0x41,0xf0,0xe4,0x08,0x0d,0xf3,0x43,0x41,0xa5,0x14,0xb7,0xcd,0x64,0x23,0xc9,0xfe,0xff,0x12,0x97,0xc6,0x2f,0x8d
.byte	0x9e,0xf2,0x1d,0x33,0x26,0x3c,0x57,0x17,0xe1,0x7b,0x92,0x3f,0xb6,0xf4,0xd9,0xf8,0xe0,0x37,0xe6,0x18,0x7d,0xa7,0x8a,0x1e,0xe8,0xd8,0x56,0xa6,0x63,0xdf,0xa3,0x99,0x16,0x74,0x48,0x01,0xaf,0x95,0x55,0x40,0xce,0xa8,0x0d,0x30,0x01,0x09,0x40,0xc9,0x9d,0x3d,0xdf,0x4e,0x00,0xe0,0x2a,0xe6,0xdb,0xa2,0x79,0x42,0x57,0xd0,0x3d,0x81
.byte	0x7f,0x67,0x3a,0xa9,0x63,0xb3,0xd4,0x60,0xa7,0xab,0x54,0x46,0xb0,0xbe,0xb0,0x83,0x72,0xec,0x47,0x0f,0xc7,0xd1,0xed,0x16,0x96,0xbc,0xa5,0x62,0x38,0xdb,0x88,0x2b,0x25,0x26,0x27,0x56,0x7f,0x46,0x39,0xe8,0x4e,0xc0,0x6c,0x62,0xf8,0x80,0x68,0x56,0x8a,0x93,0x51,0x95,0x77,0xe3,0x11,0x7b,0xaf,0xc4,0xcf,0x34,0x5a,0xd5,0x26,0xfc
.byte	0xa2,0x18,0xb0,0xc0,0xa5,0x8b,0x25,0x70,0x40,0x70,0x29,0xc3,0xda,0x80,0x3d,0xe2,0x59,0x49,0x7f,0xdd,0x62,0x6e,0x5a,0xe6,0x27,0x73,0xce,0xb6,0x32,0x37,0x5f,0x73,0x12,0x2b,0x34,0x84,0xff,0x85,0xe3,0xb5,0x93,0x41,0x47,0xc5,0xf5,0x0e,0x21,0xfb,0x24,0x0f,0xdf,0x7b,0xb4,0x29,0x7f,0x67,0x2a,0x38,0x79,0xf0,0x54,0x8a,0x94,0x68
.byte	0xe2,0x0b,0xb0,0xd4,0xb2,0xa4,0xe4,0xfb,0x3b,0xe6,0xe7,0x59,0x41,0xbd,0xed,0x62,0xce,0x50,0x1a,0x47,0x92,0x92,0x8d,0x80,0xa6,0x05,0x7a,0xb0,0xce,0x48,0x9c,0xb0,0x64,0xea,0xe0,0xa5,0x77,0xff,0xc1,0x82,0x99,0x7b,0xfb,0x74,0x53,0xfa,0x41,0x9a,0x2c,0xb4,0xbb,0xd2,0x26,0xa1,0x80,0x68,0x17,0xaa,0x8f,0x14,0x52,0xb6,0x5d,0xe0
.byte	0x69,0x5b,0x31,0xc5,0xf5,0x32,0x0d,0xff,0xa4,0x7b,0x28,0x38,0x9b,0x61,0xfc,0xd0,0x92,0xb8,0x6e,0x23,0x8a,0xf3,0xc7,0x85,0x11,0xb8,0xd0,0x19,0xaf,0xca,0xa7,0xb4,0xcc,0xeb,0x5d,0xf6,0xa1,0x1c,0x56,0xdf,0x78,0x7a,0xe3,0x6a,0xa4,0x07,0x71,0xce,0xf1,0xb2,0xd5,0x38,0x3c,0xfa,0xf7,0x7a,0xbf,0x4b,0x43,0xa6,0xb3,0x4d,0xff,0x82
.byte	0x96,0x46,0xb5,0xec,0xda,0xb4,0x5e,0x35,0x78,0xeb,0x4a,0x7e,0xc5,0x7b,0x05,0xd4,0xdd,0xf7,0xb7,0xf3,0xf0,0x04,0x26,0x7e,0x5e,0xc1,0x23,0xca,0x7f,0x14,0x27,0xac,0xda,0xe7,0xdb,0x31,0x05,0x9d,0xd4,0xda,0x20,0xc7,0x6d,0x9a,0x47,0x14,0x38,0xbd,0x7c,0xfe,0xbe,0x8d,0x42,0x7c,0xba,0x36,0xe2,0x2c,0x26,0xd2,0x46,0xa5,0x6b,0xbd
.byte	0x6a,0x75,0x6b,0x52,0x8c,0x10,0xc6,0x0e,0x76,0x60,0x46,0xcc,0x93,0x54,0xc4,0x6e,0xc7,0x70,0x5b,0xb4,0x81,0x51,0x56,0x03,0x22,0x33,0x21,0xe4,0x36,0xee,0x01,0xc3,0x0d,0x17,0x23,0x15,0xae,0x79,0xbc,0xe6,0x13,0x0f,0xfc,0x77,0xa2,0x06,0xed,0x76,0x4a,0xf7,0x2d,0x99,0xc8,0x5c,0xfd,0xac,0xd0,0x11,0xe8,0xfa,0x55,0x17,0x56,0x63
.byte	0x3e,0xd5,0x23,0x71,0xf8,0xe9,0x1f,0x62,0x95,0xae,0x7c,0x2d,0xcd,0xb8,0x6e,0xb0,0xfe,0xf3,0xd0,0xba,0x72,0x8e,0xe3,0x95,0x82,0x00,0x85,0xdb,0x25,0xe4,0xf2,0xaa,0xbc,0x8d,0xb9,0x4d,0x69,0xa4,0xcd,0x39,0x52,0x9e,0x10,0xae,0x90,0xf0,0x74,0x2f,0xc6,0x5e,0x01,0x99,0x03,0xd5,0x88,0x59,0xfd,0x1b,0x80,0x56,0x0a,0x04,0x27,0xd9
.byte	0x04,0x51,0xb0,0xb7,0x7a,0x65,0x79,0xa8,0xe2,0x6d,0x7f,0xb2,0xba,0x37,0x40,0xa0,0xbb,0xaf,0x15,0x46,0x23,0x5f,0x22,0xd0,0x2c,0x6c,0x7a,0x58,0x76,0x6f,0xb8,0x19,0xfe,0xb5,0x3d,0xf0,0x77,0x00,0x6b,0x4c,0x83,0x36,0x90,0xe6,0x57,0x29,0x6e,0x27,0x76,0xd4,0x7d,0x9a,0x6a,0xf1,0xf6,0x1b,0x1a,0x45,0xf5,0xf6,0x2d,0xb8,0x30,0x33
.byte	0x65,0x51,0x37,0x26,0xbc,0xf7,0xb7,0xf9,0x56,0x05,0x6b,0xd4,0xd6,0x00,0x1d,0x13,0x15,0x45,0x24,0x0d,0x28,0x69,0xc6,0x50,0xe1,0x48,0x48,0x34,0x69,0x31,0x3c,0x58,0x71,0xd6,0x4a,0xd9,0xda,0x0d,0x28,0xbd,0xe9,0x5d,0x5d,0x8a,0x6e,0x71,0xc0,0x8b,0x7a,0xba,0x17,0x8e,0x82,0xcb,0xe9,0x95,0xc4,0x43,0x37,0xd0,0x58,0xed,0xec,0x77
.byte	0x1e,0x22,0xf0,0xf0,0x7c,0x9d,0xeb,0x64,0x30,0x7b,0xb2,0x7b,0x86,0xdb,0xef,0x92,0x79,0xd9,0x9c,0x1c,0x1a,0xf6,0x98,0x26,0x18,0xa2,0x83,0x45,0x08,0xd4,0x1d,0x84,0xd4,0x28,0x6d,0x1f,0xb5,0x1f,0xab,0x97,0xc9,0x0d,0x1f,0x83,0x34,0x18,0xa3,0x20,0x63,0x60,0x6c,0xf3,0xd8,0xb2,0x0a,0xd9,0x35,0xa6,0xce,0x44,0x50,0xc6,0xf3,0x91
.byte	0xe3,0x95,0x89,0x49,0x99,0x32,0x1d,0xf2,0x54,0x39,0x09,0xca,0xd1,0xc4,0x7f,0xa1,0x1d,0xce,0x94,0x67,0xf1,0x88,0x04,0x29,0xcb,0x5d,0xf7,0xfa,0xcd,0x69,0x16,0x17,0x05,0xc3,0x93,0x45,0xbf,0xd3,0x74,0x63,0xdc,0xe2,0x84,0xab,0x27,0x60,0x56,0x61,0x72,0x5d,0xdf,0xb4,0xa4,0x0f,0xb0,0x21,0x82,0x9b,0x73,0x0a,0x11,0x22,0x2d,0x65
.byte	0xa2,0xff,0x29,0x8a,0x19,0x28,0x4f,0x4f,0xdd,0x64,0x0a,0x48,0x35,0x70,0x30,0x9f,0x41,0x4d,0x0c,0x7b,0xa6,0xcb,0x63,0x83,0xd1,0x79,0xfa,0x5f,0xc9,0x9b,0x6e,0x09,0x12,0x87,0xcd,0x1e,0x39,0xd6,0x40,0x08,0x0f,0xfd,0x79,0xc8,0xcb,0x77,0x8f,0x7a,0x52,0x42,0xc0,0xb2,0xc8,0xa0,0x2a,0xff,0xbc,0x60,0x13,0xbc,0x41,0x4a,0xc6,0x8b
.byte	0x08,0xb0,0x9f,0x75,0x87,0xa1,0x75,0x42,0x4b,0x3a,0xf7,0xf7,0x84,0x39,0xa5,0x88,0x25,0x2d,0x4f,0x73,0x4e,0x30,0x27,0x92,0xea,0x93,0x70,0x5c,0xb5,0xeb,0xb0,0x10,0xda,0x0f,0xaa,0xb3,0x3f,0xb5,0x55,0x64,0x65,0xae,0xb5,0xf8,0x0a,0xe4,0x9f,0x86,0x02,0x6f,0x63,0x8a,0x0b,0x6b,0x82,0x85,0x3c,0x6a,0xdf,0x68,0x4c,0x1e,0xe9,0x5c
.byte	0xd0,0x99,0xe5,0x0c,0xfc,0x63,0xfb,0xce,0x2d,0x63,0xd5,0x7d,0x8a,0x7d,0x14,0x22,0xbd,0x71,0x5e,0x79,0x3f,0x44,0x95,0xe5,0x6c,0x58,0x94,0x84,0x41,0x65,0x52,0x94,0x50,0xec,0xd3,0x2a,0x16,0x88,0xdb,0x71,0xb9,0xe4,0xb6,0xbf,0xc5,0x3c,0x48,0x37,0x62,0x32,0x79,0xbe,0x1d,0xdb,0xc9,0x79,0x37,0x40,0x65,0x20,0x62,0x45,0xb4,0xda
.byte	0x24,0xef,0x33,0xf1,0x05,0x49,0xef,0x36,0x17,0x17,0x0f,0xdc,0x65,0xb4,0xdc,0x57,0xc3,0xc6,0x82,0x57,0x08,0xf2,0x20,0x57,0x5c,0x25,0x0e,0x46,0x75,0xa7,0x4f,0x9e,0xa4,0x00,0xf7,0x79,0xb9,0x0a,0xef,0x4f,0x50,0x79,0xf8,0x59,0x01,0xf2,0x74,0x9f,0x16,0x27,0xa5,0xc1,0x32,0xcc,0x58,0xa7,0x40,0xa1,0xa1,0x26,0x80,0x00,0xb5,0x64
.byte	0x0a,0xd8,0x53,0x1f,0x72,0xf7,0x60,0xf7,0x0a,0xaa,0xdf,0x31,0x95,0xff,0xfc,0xb4,0xca,0xbc,0xf8,0x2a,0x33,0x20,0x04,0x16,0x1a,0xe7,0xeb,0x22,0xd1,0x25,0xa6,0x03,0xc9,0x9e,0x9e,0xca,0x7a,0x46,0x7c,0xcb,0x8a,0x63,0x4a,0xf0,0x1b,0xd0,0x34,0xc3,0xbb,0x89,0xcf,0x16,0x38,0xcb,0xe0,0xce,0xd5,0x0b,0xfd,0x4e,0xbc,0xce,0xba,0x28
.byte	0x68,0x00,0x2a,0x31,0x52,0xe6,0xaf,0x81,0x3c,0x12,0x09,0x2f,0x11,0x0d,0x96,0xc7,0x07,0x42,0xd6,0xa4,0x2e,0xc1,0xa5,0x82,0xa5,0xbe,0xb3,0x67,0x7a,0x38,0xf0,0x5e,0xd8,0xff,0x09,0xf6,0xab,0x6b,0x5d,0xec,0x2b,0x9f,0xf4,0xe6,0xcc,0x9b,0x71,0x72,0xd1,0xcf,0x29,0x10,0xe6,0xe3,0x27,0x1c,0x41,0xc8,0x21,0xdf,0x55,0x27,0xa6,0x73
.byte	0xb7,0x45,0xa1,0x09,0x66,0x2f,0x08,0x26,0xf1,0x50,0xe0,0xec,0x9d,0xf2,0x08,0xf3,0x49,0x56,0x50,0xe0,0xba,0x73,0x3a,0x93,0xf5,0xab,0x64,0xb6,0x50,0xf4,0xfa,0xce,0x8d,0x79,0x0b,0xad,0x73,0xf2,0x8c,0x1e,0xe4,0xdd,0x24,0x38,0x1a,0xde,0x77,0x99,0xb8,0x92,0xca,0xc0,0xc0,0xbc,0x3d,0x01,0x6f,0x93,0x3a,0x6e,0xc5,0x28,0x6e,0x24
.byte	0x9c,0xf9,0xd9,0xcb,0x4b,0xbe,0x9e,0xda,0x0d,0x10,0xfb,0x9d,0x15,0xfe,0x28,0xdc,0xd9,0x09,0x72,0xd3,0x9f,0x6d,0x77,0x14,0x84,0x86,0x56,0x10,0xdc,0x8e,0x6a,0xa7,0x62,0xf0,0x0b,0x65,0x2c,0xa2,0xd1,0x7f,0xae,0x32,0xfa,0x9b,0x46,0x0f,0x12,0x08,0x22,0x8c,0x87,0x15,0x4b,0xc4,0x6d,0x85,0xfb,0x69,0xfe,0xce,0xfb,0xb4,0x3e,0x7b
.byte	0xcf,0x88,0xa7,0x97,0x52,0x56,0xd0,0x9f,0xb4,0x33,0xf9,0x08,0xd2,0x28,0x46,0x5e,0xc4,0xec,0x22,0xc6,0x1e,0x7b,0x34,0x99,0x0c,0x5b,0x04,0x19,0xe2,0xca,0x09,0x11,0x50,0x45,0xcc,0xb2,0x90,0x25,0x51,0x68,0xc9,0x20,0x6c,0x99,0x2e,0xdb,0x5b,0x07,0x91,0xb2,0x69,0xbf,0x3c,0x05,0x50,0xfb,0x21,0x33,0x4f,0x6e,0x18,0x19,0xd5,0xff
.byte	0xce,0x9d,0xb5,0x7f,0xd4,0xd5,0x8f,0x41,0x26,0x1f,0xa1,0x4c,0x34,0xd3,0x98,0x08,0x5d,0xb5,0x56,0xa7,0x04,0x63,0x76,0x7d,0xae,0xee,0xea,0xbf,0x69,0x8d,0xff,0xa1,0x62,0x86,0x19,0x7b,0xe5,0x08,0x7a,0xe5,0x9e,0xe5,0x44,0xca,0x24,0xde,0x00,0x43,0xc7,0xcd,0xc8,0x5b,0x21,0x00,0xb9,0x56,0x3f,0xba,0xef,0xcd,0xc4,0xe0,0xd7,0x90
.byte	0xa7,0xe1,0xf9,0x83,0x2c,0x1d,0x8d,0xc3,0x1b,0xa2,0xab,0xcd,0x7d,0xbc,0xd1,0x2b,0xf8,0x30,0x9e,0xb6,0x95,0xe0,0xd1,0xe6,0x81,0x89,0xa7,0xda,0xf0,0x54,0xc1,0xcb,0x3a,0x85,0x85,0xb5,0x03,0xb4,0x8c,0x7d,0x98,0x16,0xa8,0x83,0x29,0xbb,0x1c,0x1d,0xe1,0x7e,0x0e,0xb5,0x04,0xba,0xbf,0x89,0x30,0x3c,0x44,0xa2,0xc5,0xbf,0xf1,0x70
.byte	0xdb,0xf3,0x13,0xf4,0x44,0xac,0x63,0xc4,0x9c,0x93,0xa9,0x13,0x1b,0xf1,0xcc,0x16,0x66,0xdf,0x56,0x10,0x88,0x0c,0x76,0xab,0x43,0xcb,0x75,0xf8,0x4f,0x04,0x26,0x95,0x4c,0x6d,0x55,0xc8,0xbd,0xf8,0x94,0x0f,0xca,0x29,0x2b,0xcd,0xce,0x05,0x1e,0xea,0xae,0x02,0x01,0x8b,0x60,0x6a,0x6a,0x03,0x14,0xe5,0xa7,0xdf,0x9e,0x9f,0x94,0x92
.byte	0x41,0x2c,0xf0,0x1a,0xa7,0xc2,0xc1,0xfc,0x11,0xf3,0x00,0xe1,0xfc,0x7a,0x97,0xc0,0xe1,0x81,0x90,0x3f,0xea,0x1e,0x7f,0xf8,0xb0,0xd8,0x4c,0x2d,0xdc,0x83,0xfa,0x27,0x8b,0xf2,0xef,0x3b,0x3a,0x44,0xdc,0xa5,0xa9,0xd5,0x24,0x5f,0xb1,0xdd,0x1d,0x3f,0x03,0x76,0x3b,0x92,0x0d,0xb4,0x84,0xa4,0x5b,0xef,0x9f,0x89,0x9d,0xef,0xff,0xcf
.byte	0xc2,0x28,0x3b,0x9d,0xd2,0x28,0x75,0x3e,0xdc,0x14,0x79,0x7c,0x0c,0xaa,0x6c,0xf2,0x05,0x9d,0x27,0x01,0x15,0x19,0x60,0x48,0x5a,0x7d,0x04,0x27,0x2d,0x82,0x92,0x3e,0x0b,0x62,0xd7,0x5a,0xfb,0x72,0xfb,0xdd,0x43,0xfa,0xf4,0x6f,0x16,0xd2,0x8f,0x8f,0x21,0xdc,0x81,0x48,0x7a,0xe8,0x39,0xd5,0xdf,0x54,0x0f,0xe1,0xbe,0x65,0xc9,0x49
.byte	0x98,0xb1,0xff,0x8d,0x52,0x31,0x6a,0xcd,0x5e,0x83,0x17,0x41,0x93,0xcd,0x23,0x76,0x18,0xe9,0x82,0x71,0x15,0xb7,0xd8,0xde,0x0d,0x57,0x8b,0x90,0xe6,0xf4,0x57,0xc1,0xfd,0x3d,0x0d,0x6a,0xae,0xd1,0xd6,0x02,0x3e,0xb9,0x82,0xb2,0x82,0x80,0x48,0xa4,0x14,0x29,0x80,0x55,0x1d,0xaf,0x3e,0xf8,0x7e,0x36,0x5f,0x77,0x4c,0x73,0x6c,0x35
.byte	0xd2,0x7c,0x36,0xca,0x2f,0xec,0x1e,0x3f,0x74,0xee,0xa5,0xe7,0x7d,0xce,0x81,0xf1,0xd5,0xc1,0xb3,0xaf,0x90,0x2c,0xc6,0x5b,0x81,0x37,0x85,0x98,0x78,0x3c,0x4f,0x2a,0x55,0xea,0x06,0x30,0x77,0x73,0x97,0x39,0x75,0xcf,0x4a,0x9b,0x55,0xb8,0x64,0x5c,0x86,0xfd,0x26,0x3e,0x8d,0x68,0xd2,0x70,0xe8,0xd7,0x99,0x57,0x6f,0x96,0x47,0x6d
.byte	0xa7,0x1a,0x0e,0x85,0xcd,0x00,0xa5,0x3e,0x11,0xec,0x76,0xd2,0x47,0x26,0x71,0xda,0x5c,0xf4,0xb1,0xd5,0x23,0xe1,0x62,0x71,0x43,0x30,0xa7,0x95,0xf6,0xc1,0xcf,0x8a,0x1b,0x75,0x53,0x39,0x6d,0x9d,0x18,0x7c,0xe3,0x48,0x27,0x33,0x1c,0x38,0x45,0xdf,0x75,0x22,0x05,0x6d,0x81,0x5d,0xfc,0xeb,0x0e,0x05,0x26,0x45,0x81,0x9f,0xce,0x0f
.byte	0xc9,0xdd,0x95,0x11,0x04,0x47,0x40,0xa4,0x07,0x3b,0x52,0x92,0xe0,0x91,0xdb,0xdd,0x3c,0x9f,0xd3,0xa1,0xb7,0xf9,0xeb,0xd6,0x6d,0x64,0x88,0xe9,0xf5,0x4e,0x98,0x8e,0x7b,0xd3,0xec,0xc0,0x22,0xe0,0xf2,0x14,0xf2,0x20,0xa2,0xa3,0xb3,0x0d,0x75,0x1a,0xbb,0xde,0x4a,0x41,0x04,0x43,0x0d,0xd9,0xd0,0x1d,0x73,0xc8,0x67,0x8e,0x58,0xe5
.byte	0x4b,0x28,0x4d,0x8f,0x2f,0xab,0x1a,0x4a,0xfc,0x7c,0xd1,0x27,0x3e,0x4a,0x10,0x6a,0x5f,0x55,0x3a,0xf7,0x63,0x14,0xe9,0xad,0xb4,0x95,0xef,0x3d,0x5c,0xc3,0x7d,0xe4,0xb7,0x15,0xd7,0x0b,0x68,0xf0,0x23,0xa8,0xd4,0x8e,0x27,0xf6,0x55,0x11,0xbc,0xc0,0xff,0x3e,0x2c,0x24,0x59,0xb7,0xb7,0xb5,0x0b,0xd2,0x99,0xa5,0xd5,0xe2,0x24,0x33
.byte	0x21,0xb8,0x96,0x48,0x18,0x94,0xb5,0xb2,0x50,0x5e,0x04,0x24,0x86,0x17,0x62,0x1e,0xc9,0xf8,0x22,0x6a,0xd0,0xec,0xc5,0xbc,0x90,0xf7,0x55,0xcf,0x3f,0x4c,0x7c,0xf7,0x51,0x19,0x95,0xa4,0x81,0x38,0x0c,0xa5,0x58,0x22,0xf3,0x10,0x05,0x05,0x44,0xbf,0x7e,0x2a,0xbd,0x5f,0x79,0x56,0x08,0xd5,0x68,0xea,0x85,0xa1,0xeb,0x0b,0xe1,0xd4
.byte	0xfd,0x3a,0x38,0xd2,0x5a,0x49,0x17,0x9a,0x58,0x8f,0x52,0xf5,0xf4,0x7b,0x1f,0x58,0xa8,0xc0,0x1c,0x46,0x38,0xa6,0xe4,0x7d,0xcc,0x88,0x97,0x10,0x2b,0x5e,0x61,0xf5,0x73,0x7d,0x79,0x1b,0x53,0xf1,0xac,0xb4,0x3f,0xbd,0x9d,0xb6,0xc2,0x57,0xd5,0x84,0x4d,0x60,0xd6,0x45,0x56,0xa1,0x36,0x28,0xf5,0x74,0xc6,0x29,0xd7,0xc9,0x63,0x5e
.byte	0x7c,0x97,0x46,0xde,0x56,0x3f,0xd8,0x8e,0x75,0x29,0x87,0xe7,0xd1,0x24,0x78,0x26,0xdc,0x17,0x97,0xc9,0xf0,0x8e,0x95,0xbc,0xe5,0xfe,0xe3,0x3a,0x75,0x70,0x52,0xa9,0x31,0x97,0x79,0x3a,0xc2,0x53,0x6a,0x73,0xe2,0x76,0xf8,0x85,0xe6,0x0d,0x85,0x9b,0xfc,0x72,0x08,0x2a,0xa5,0x8e,0x42,0xb2,0x7c,0x8d,0x8b,0x28,0x4b,0xf5,0xcb,0x66
.byte	0x80,0x46,0xb3,0x87,0xdf,0x38,0xa7,0x08,0xc8,0xea,0x85,0x0e,0x6f,0x13,0xe0,0x57,0x99,0xc6,0xb8,0xed,0x9c,0xb0,0xa9,0x89,0xd7,0xc5,0xa9,0x71,0xfd,0x8a,0x21,0xb1,0xec,0xc8,0x65,0x78,0x72,0xc6,0x77,0x69,0xd4,0x0b,0x47,0x4d,0x79,0x93,0xcf,0x2a,0x34,0xf1,0x1b,0x0e,0x6f,0x0d,0xd1,0xbb,0xe7,0xd7,0xb5,0x6f,0x57,0x01,0xd4,0xcd
.byte	0x56,0xbe,0xf0,0xd9,0xe2,0x8e,0x0e,0xb8,0x3d,0xdb,0xf6,0x97,0x39,0x0b,0x3e,0xe2,0xb2,0xa3,0x93,0x0b,0x74,0xe5,0x6a,0x21,0x04,0x29,0x5a,0x3e,0x07,0x9c,0x11,0x4e,0xfe,0x01,0x6e,0x96,0x1e,0x8f,0xe0,0xfe,0x24,0x24,0x7e,0x04,0x2f,0x65,0xf4,0xe2,0x1f,0x36,0x56,0x43,0x3a,0x6c,0xeb,0xd7,0x20,0x13,0x71,0x45,0x6a,0xe8,0xc6,0xfa
.byte	0xba,0x26,0x6f,0x7d,0x9a,0x62,0x76,0x34,0x7d,0xed,0x47,0x71,0xd1,0x0e,0x5b,0x04,0x39,0xd6,0xc0,0xe5,0xa5,0xd8,0xf5,0x73,0xf9,0xf4,0xc2,0x2a,0x54,0x25,0x67,0xdf,0x83,0xa3,0xcd,0xfd,0x1e,0x46,0x87,0x06,0x17,0x6d,0x78,0x8e,0x0c,0x7b,0x08,0x06,0x1b,0xd9,0x5d,0x3d,0x03,0x40,0xbc,0xe7,0x02,0xc4,0xe0,0xe0,0x49,0xb2,0x6c,0x6f
.byte	0x97,0x76,0x0f,0xc7,0x14,0xd8,0x7c,0xc0,0xad,0x8a,0xbb,0xbc,0x2a,0x7e,0x68,0x46,0xcd,0xa7,0x26,0x16,0x77,0x1b,0x89,0x38,0xd8,0x2a,0x69,0x43,0xc4,0xaa,0x0d,0xf6,0xd1,0x65,0xda,0x41,0x75,0x77,0xcd,0xf7,0xd2,0x38,0x9c,0xdb,0x81,0x17,0x27,0x2f,0xba,0x2e,0xa5,0xb5,0xbe,0x05,0xe8,0xdd,0x5f,0xa9,0xad,0xbe,0xb2,0x0e,0x0b,0x69
.byte	0xb6,0x8d,0xd2,0xf2,0xde,0x76,0x32,0x26,0xd9,0x06,0x1d,0x42,0x26,0x8c,0xf7,0xca,0x4c,0xe1,0x59,0x82,0x6c,0xea,0x96,0x70,0x39,0xb8,0x0d,0xf3,0x67,0x9d,0x5e,0x94,0x99,0x77,0xf2,0x0a,0x9a,0xde,0xa5,0xd2,0xe1,0xaa,0x91,0x85,0xc7,0x0f,0x92,0x35,0x04,0xd3,0x7a,0x13,0xfa,0xf2,0x86,0x5a,0x38,0xd1,0x7f,0x10,0xd8,0x30,0x0e,0x33
.byte	0xe3,0xa0,0x8a,0xad,0x4f,0x6c,0x24,0xdd,0x9d,0x1c,0x4e,0xff,0x4c,0xfc,0x74,0x01,0xab,0x08,0x6c,0xe6,0x4c,0x78,0x75,0xc9,0x67,0x83,0x1f,0x75,0x22,0xb0,0x7c,0x44,0xa0,0xa1,0xee,0x4e,0xf6,0x3e,0xd3,0x35,0x70,0xbe,0x36,0x1e,0x90,0xa6,0xaa,0x64,0x67,0x7f,0x52,0x84,0xd9,0x27,0xab,0x37,0x30,0x68,0x46,0xcc,0x0e,0x57,0x58,0x6f
.byte	0xdb,0xb2,0x5f,0x24,0xf7,0xeb,0x97,0xea,0x64,0xec,0x6c,0x1e,0xe1,0xc4,0x72,0xfb,0x00,0xa7,0x62,0xa0,0x59,0xb9,0x17,0x8a,0x33,0x32,0x59,0xb8,0xbe,0x84,0xd4,0x62,0xb7,0xf6,0x35,0xd4,0xf1,0x1c,0xdb,0x7e,0xa6,0xbc,0x2c,0x54,0x3c,0xf5,0x63,0x4a,0x22,0x26,0x58,0xa0,0x35,0x98,0xa7,0x32,0xb2,0xa0,0x2b,0xd5,0xfa,0x2f,0x9b,0xb4
.byte	0xea,0xd6,0x58,0x61,0xb2,0x24,0x45,0x46,0x1e,0xac,0x79,0xa4,0xf7,0xc1,0x13,0x2f,0xf5,0x6b,0xfa,0x70,0x50,0x2b,0x83,0xee,0x7c,0xc1,0x55,0x27,0x7b,0x4f,0xa6,0x0a,0x72,0x26,0x82,0xcd,0x4d,0xe2,0xe8,0x45,0xe6,0xd7,0x39,0x7e,0xed,0x35,0xdf,0x9e,0xb1,0x41,0x55,0xa2,0x5d,0x68,0x4b,0x0b,0xd1,0x73,0x5a,0x2b,0x81,0x35,0x28,0xfc
.byte	0x64,0x08,0xd7,0xc4,0x9f,0x30,0x77,0x3d,0x9d,0x80,0x15,0x67,0x9a,0x84,0xe4,0x34,0xea,0x8c,0xf7,0x73,0x9e,0x33,0xb4,0x09,0x33,0xbd,0xd8,0x82,0x43,0x7d,0xc5,0x1f,0x0e,0x7b,0xa0,0x53,0x59,0x20,0x12,0x57,0xed,0xda,0xc7,0x19,0x8e,0x62,0xe4,0x09,0xc1,0x4b,0x20,0x32,0x9e,0x18,0x11,0x1c,0x42,0x49,0x62,0x76,0xa8,0x83,0x72,0x11
.byte	0x45,0xe7,0xb5,0x60,0xa7,0xc0,0x07,0xbd,0xb4,0x7c,0xc6,0x5c,0x03,0x34,0xa3,0x85,0x47,0x24,0x75,0xd2,0xab,0x46,0xbb,0xc7,0x0d,0xcd,0x40,0xe2,0x5e,0x5b,0xa7,0x98,0x67,0xe4,0xe2,0x02,0xe9,0xdc,0xd7,0xc2,0xaf,0x90,0x43,0x94,0xfe,0xf3,0x53,0xc1,0x10,0x28,0xa7,0x90,0xba,0x73,0x57,0x0c,0x4d,0x6d,0xbd,0xda,0x81,0xd5,0x90,0xce
.byte	0x02,0x40,0xb3,0xf0,0xec,0x50,0x82,0xc9,0xfb,0xf1,0x22,0x6d,0xc8,0xd2,0x7b,0xed,0x0b,0x43,0x7e,0x0b,0x60,0x9b,0x69,0x9e,0x58,0x26,0xc3,0x9f,0x6b,0xd0,0x31,0xeb,0xb7,0x0a,0xf3,0x9a,0x9a,0xf5,0x72,0xcf,0x29,0xc8,0x19,0x08,0x4d,0x67,0xd5,0xa1,0x8f,0x68,0x0e,0xee,0x59,0x14,0xf8,0x86,0xc0,0x08,0x5a,0x56,0xfe,0x6a,0xb7,0xac
.byte	0x78,0x8d,0x77,0x39,0x5e,0xb1,0x01,0x4d,0x31,0x81,0x56,0xdc,0x5b,0x10,0xda,0x4d,0xd2,0xfd,0xfc,0xa3,0xe3,0xaa,0x46,0x29,0x1a,0xea,0x9c,0x47,0x1b,0xd0,0xa6,0x84,0x1f,0x71,0x1a,0xd3,0x35,0x59,0x7f,0xef,0xf7,0x81,0x39,0x7a,0x9f,0x4a,0x01,0x4d,0x46,0xcf,0xa4,0x6a,0x9c,0x7e,0x07,0x8b,0x98,0x17,0x49,0x5c,0x46,0xac,0xc8,0xfd
.byte	0x1c,0xaf,0x91,0x30,0x0c,0x36,0x63,0xef,0x69,0xd3,0x47,0xf4,0x76,0xc1,0xf7,0x40,0x03,0x98,0x9e,0xcb,0x61,0x65,0x46,0x45,0x1c,0x1b,0xfd,0x13,0x36,0xe9,0x19,0xbf,0x2b,0x59,0x51,0xe8,0x04,0x44,0xe3,0xc2,0x4b,0x66,0x78,0x69,0x66,0xa3,0x1a,0xe5,0x2a,0xad,0xf8,0xc5,0x0f,0xb7,0x3e,0xe8,0xab,0xe0,0xe4,0xd9,0xc2,0xb8,0x61,0x5b
.byte	0xef,0x6b,0x4d,0x5f,0xb8,0xdc,0x06,0xa5,0xce,0x08,0x5b,0x1f,0xf4,0x29,0x4d,0x0a,0x3e,0xb3,0x60,0xf4,0x63,0x3c,0x70,0x5d,0x02,0x9c,0x55,0x5e,0x5e,0xd1,0x9b,0xed,0x20,0x75,0x54,0xa1,0x8e,0xae,0xce,0x5a,0xb2,0x2d,0xe4,0xc3,0x9b,0x7d,0x72,0xce,0x7c,0x0c,0xa9,0x99,0xa4,0x12,0xaa,0x31,0xe9,0x61,0x47,0x8a,0x41,0x93,0xd5,0x69
.byte	0xc5,0xf3,0x9f,0xf4,0x97,0x69,0x64,0x6f,0xf9,0x5b,0xbf,0x58,0xf6,0x3b,0x3e,0xd6,0x93,0x94,0x89,0xcc,0xc0,0x25,0x7d,0xf8,0x40,0x9e,0xb2,0xc8,0x75,0x9d,0x4d,0xf0,0x5f,0xa5,0x3d,0x38,0x67,0xea,0x8d,0x1b,0x60,0x5e,0xfe,0xa8,0x26,0xb9,0xed,0xc0,0xe9,0xc8,0xec,0xb1,0x77,0x0f,0xf2,0xaa,0x77,0x2a,0xcd,0xa8,0x70,0xb7,0xda,0x60
.byte	0x49,0xb3,0x01,0x95,0xc8,0xac,0x71,0x6a,0xd0,0x49,0x67,0x2a,0x04,0xfc,0x55,0x38,0x08,0x37,0xd9,0x21,0x37,0xce,0x41,0xaf,0x7c,0x33,0xdd,0xcd,0xe0,0x92,0x27,0x38,0x63,0x77,0xea,0x86,0x04,0x99,0x4e,0x61,0x8b,0x8f,0xfe,0x4e,0xc1,0x16,0x6c,0x89,0xac,0x1f,0x0b,0x67,0x75,0x49,0xf4,0xdb,0x6d,0xd3,0xb8,0x1d,0x9c,0xb2,0xe6,0x98
.byte	0x81,0xae,0x3f,0xe0,0xdd,0xda,0xfa,0x4c,0x8b,0x30,0x18,0x88,0xa1,0x1d,0xa1,0x18,0xb8,0x28,0xc2,0x04,0x6a,0x80,0x02,0x5a,0xe6,0x04,0x85,0xfa,0x54,0x38,0x45,0x64,0xe1,0x50,0x4a,0x38,0x4c,0x85,0xf7,0x00,0x0c,0xd3,0x16,0xcb,0xfa,0x38,0xb4,0x1b,0x6a,0x95,0x3d,0xc3,0x24,0x79,0x0e,0x3e,0x81,0xe6,0xc3,0xd9,0xdb,0x05,0x19,0x7c
.byte	0xb4,0x4d,0xef,0x71,0x22,0x53,0x97,0x8a,0xc9,0xe3,0x69,0x20,0x5b,0x83,0xb1,0x44,0xd7,0xd1,0x1e,0x87,0xa7,0xbf,0xe4,0x84,0x68,0x9c,0x77,0xfe,0x83,0xdb,0x7a,0x53,0xa8,0x53,0x1f,0xc7,0xd1,0x6a,0x26,0x87,0x71,0x06,0x23,0xa7,0xe0,0x18,0x5d,0xfa,0x8c,0xa7,0x24,0xee,0xf6,0x74,0xab,0x17,0xd3,0x46,0x33,0xe9,0xc3,0xcd,0xa6,0xaf
.byte	0xcf,0xa1,0x60,0x75,0x7b,0x77,0xc3,0x58,0xa2,0xe8,0x87,0x7b,0x4b,0x57,0xb1,0x96,0xc1,0x91,0x6d,0xbf,0x71,0xb3,0xbf,0xe2,0x62,0x86,0x72,0xa9,0x01,0x64,0x62,0x32,0x33,0xc8,0xa4,0x26,0x7d,0xfa,0x0d,0xd4,0xd8,0xc3,0xaa,0xc0,0xc8,0x7c,0x51,0xe8,0x10,0x08,0x6f,0xf6,0xc1,0x46,0x89,0xc4,0xd2,0x00,0x1d,0x14,0x05,0x89,0x64,0x52
.byte	0xcd,0x1f,0x97,0x0b,0x1d,0x94,0xbe,0x9d,0xa0,0x6b,0x03,0x9b,0x83,0x87,0x38,0x0f,0x65,0xdd,0x6a,0xaf,0xf1,0x22,0x74,0x7e,0x11,0xa0,0xdf,0x1e,0x95,0xef,0x1a,0xdc,0x8b,0x29,0x4a,0xbe,0xfd,0x2f,0xc7,0x48,0x94,0x3f,0xb9,0x8c,0x8e,0xe1,0x0c,0x54,0xa6,0x2f,0xa5,0x2b,0x71,0xdd,0x16,0x68,0x91,0x35,0xd0,0x22,0x48,0x1f,0xf2,0xe2
.byte	0xe8,0x57,0x83,0xd7,0x49,0x43,0xfd,0xf9,0x77,0xb5,0xfa,0x70,0x19,0xeb,0xae,0xf6,0x31,0xfe,0xd6,0x81,0x6c,0xcc,0x14,0x28,0xa6,0x9f,0x74,0x56,0xc5,0xf6,0x51,0xba,0xc8,0xbd,0x32,0x80,0x5f,0xdb,0x28,0x3f,0x4a,0x55,0x01,0xe1,0x39,0xf5,0x9c,0xda,0xb3,0x42,0xee,0x43,0x17,0xc3,0xc7,0xf5,0xd1,0xda,0xd2,0x2e,0x56,0xcf,0x77,0x0e
.byte	0xdd,0x72,0xcf,0xe5,0xab,0xfb,0xd6,0xa2,0x6c,0x03,0xa6,0x77,0x25,0xf8,0x2a,0x8c,0xfa,0x6f,0x45,0x79,0x59,0x84,0x92,0xd1,0x00,0x58,0xc7,0xb8,0x95,0x4d,0xc8,0x49,0xad,0xe0,0x1e,0x64,0x47,0x00,0xfb,0x93,0x7f,0x3e,0xf1,0x65,0x70,0x47,0x64,0xbb,0x36,0x63,0xe3,0x09,0xcb,0xdb,0x5a,0xd1,0x72,0x83,0xfd,0x15,0x91,0xa2,0x03,0x81
.byte	0x04,0x98,0x45,0x0f,0x7f,0x23,0x48,0x6c,0xb1,0x2d,0xd0,0x2c,0x61,0x52,0x1b,0x4a,0x52,0x08,0x92,0xe1,0x7a,0xf1,0x8c,0x1f,0x1f,0xdf,0x1c,0xfd,0xd9,0x46,0x99,0x71,0x05,0x58,0x71,0x82,0x5c,0x05,0xa0,0xb2,0x6a,0x50,0xd2,0x6e,0x35,0xf4,0x6c,0xfb,0x50,0x99,0xb3,0xc1,0x2b,0x05,0xaf,0x02,0xe5,0x18,0xfa,0x74,0x09,0xcc,0xa5,0x2c
.byte	0x26,0xfd,0xc5,0xe7,0x2c,0x96,0x0f,0xa4,0x7c,0x88,0xc6,0x7f,0xf9,0x74,0x9d,0x1c,0xe5,0xd2,0x27,0xf0,0xae,0x5b,0x4c,0xbf,0x0a,0x99,0x2e,0xaa,0x54,0xba,0x0d,0x75,0xd9,0x48,0x76,0xf3,0xe9,0xd9,0x01,0xbe,0xaa,0x97,0x09,0xfe,0xb2,0x4a,0xcb,0x55,0xd0,0xe1,0x58,0xec,0x31,0x0c,0xd9,0xdf,0xd9,0x01,0xf9,0x3c,0x28,0x40,0x91,0xbb
.byte	0x4d,0x2d,0x88,0x60,0x31,0xc7,0xc9,0x1d,0xaf,0x22,0x44,0x21,0x05,0x06,0xdd,0x07,0x60,0x29,0x7d,0x49,0x30,0x9d,0x35,0x1d,0x9f,0x37,0xbd,0x32,0xb2,0x21,0xa6,0x4f,0x89,0xd8,0xe6,0x85,0x44,0xcf,0x13,0x12,0x4f,0x5f,0x50,0x71,0x01,0x39,0xff,0x6e,0xa0,0x07,0xff,0xf0,0xa6,0x3b,0x39,0x59,0x17,0xae,0x93,0xb2,0x86,0xcc,0xe5,0x59
.byte	0x5a,0xf2,0x82,0x62,0xc6,0x8d,0x13,0x2f,0x6b,0x92,0x28,0xbe,0xd1,0xc0,0xf6,0xc9,0xe1,0xd6,0x98,0x94,0x65,0xd4,0x2a,0xdb,0x37,0xb1,0xd3,0x83,0xf2,0xaa,0xa5,0x00,0xf9,0x08,0xe6,0x22,0x38,0x30,0xb6,0x49,0x8d,0x9d,0x1c,0xa4,0xf7,0xdb,0x3c,0x6f,0x75,0x08,0xa0,0xda,0xe9,0xc0,0x01,0x54,0x09,0x68,0xc6,0x7c,0x5b,0x4d,0x88,0x71
.byte	0xa7,0x2f,0xb3,0x50,0x18,0x4a,0xfb,0x55,0x29,0xf2,0x56,0x1d,0x4c,0x12,0x22,0x1c,0x54,0xd2,0x63,0x67,0xfa,0xe9,0x5b,0x74,0x3b,0x38,0xf6,0xa0,0x85,0x63,0x1c,0x41,0x6a,0x6d,0x71,0x1d,0xb1,0x39,0x28,0x88,0x96,0x9b,0x9c,0x50,0x9e,0x57,0x4e,0xf5,0xa7,0xf4,0x17,0xc6,0xca,0x42,0x84,0x83,0xca,0xa4,0x28,0x72,0x08,0x74,0x62,0xe1
.byte	0xf0,0x73,0xc5,0x86,0x6c,0x76,0x9d,0xd3,0xa6,0xb8,0x5d,0x73,0x1b,0x02,0xe2,0x69,0x8b,0x59,0xd6,0x6a,0x53,0xe9,0x13,0x88,0x41,0x95,0xe9,0x97,0x5f,0x07,0x62,0xa5,0x21,0x97,0x7e,0x5e,0xc2,0x2c,0xc7,0xaf,0x0a,0xdb,0x9e,0x4f,0x44,0x4b,0xd6,0x3d,0xc0,0x24,0x38,0x50,0x47,0x98,0xa3,0xfc,0xda,0xfc,0xae,0x0e,0x2b,0x9b,0x53,0x0f
.byte	0x6b,0xb1,0x2f,0xd5,0xd7,0x68,0xc9,0xab,0xb9,0xff,0x7f,0x54,0xd6,0x2f,0x88,0xbc,0x5e,0x6a,0x22,0x49,0x0f,0x98,0xbe,0x1f,0xef,0x3e,0xcc,0xa2,0x72,0x6b,0x16,0xbe,0xe8,0x5f,0x0e,0x36,0xa2,0x68,0xe0,0x65,0xd9,0x7c,0xdc,0x8c,0x6a,0x66,0xf0,0x6a,0xfc,0x2b,0x85,0x28,0x2a,0x1a,0xfc,0x92,0x64,0x3d,0x38,0x5b,0xc1,0x0c,0x68,0x45
.byte	0x94,0x85,0x58,0x82,0x99,0xfc,0x20,0xdd,0x62,0xae,0xed,0x35,0x7c,0x02,0x16,0x9b,0x00,0x8a,0x44,0x02,0x80,0x00,0xca,0x7d,0x95,0x03,0x5d,0xa6,0xec,0xe1,0x0c,0x50,0x34,0x61,0x55,0xee,0xb5,0x11,0xff,0xc3,0xaa,0xf2,0xbc,0xa3,0xa9,0xc7,0x6b,0x16,0xab,0x56,0x7b,0x55,0x54,0x95,0x88,0x15,0x15,0x6a,0x2c,0x97,0xd7,0x7c,0x26,0x65
.byte	0xaf,0x8d,0xd1,0x05,0x57,0xb2,0x63,0xd1,0x22,0xf7,0x7d,0x77,0x54,0x6c,0x87,0x03,0x1f,0x0e,0x2b,0xae,0xa6,0xa4,0xb5,0xd6,0x95,0x34,0xd0,0x62,0x4e,0xfb,0xcb,0xee,0x01,0xc1,0xf7,0x36,0x94,0xa6,0x54,0x94,0x90,0x0e,0x45,0x9c,0x95,0x89,0x96,0x88,0x32,0x90,0x27,0x48,0xc5,0x96,0xf0,0x7e,0x7f,0x69,0x99,0xdf,0x7b,0xfb,0x2b,0x7b
.byte	0x38,0x10,0x6b,0xd1,0x1a,0xfb,0xf2,0xcd,0x2d,0x8b,0x47,0x21,0xca,0x92,0x64,0x28,0xd1,0x53,0x1d,0xed,0xa7,0x7d,0xa4,0x88,0xab,0xd0,0xfe,0x9b,0x2b,0xf8,0x48,0x94,0x8d,0xd5,0xfa,0x5c,0xef,0x12,0x43,0xdf,0xb6,0x5b,0x83,0x43,0xf3,0xf7,0x1d,0x6f,0x3e,0x44,0xe6,0x20,0xd8,0xbc,0x4a,0x9a,0xed,0xa0,0x79,0x66,0x8d,0x23,0xca,0x35
.byte	0x15,0x87,0x11,0x50,0xa4,0x40,0x6e,0xfa,0xf7,0xaf,0xa2,0xb7,0x3b,0x9b,0x8b,0x44,0x19,0x90,0xb3,0x47,0x92,0x08,0x2f,0x0c,0xe2,0x95,0x5d,0x80,0xb5,0x93,0x5e,0x1c,0xb5,0xce,0x52,0x0b,0x12,0xc1,0x72,0x2e,0x66,0x8c,0xd1,0x13,0x94,0x36,0xf7,0x17,0xe3,0xad,0x69,0xc9,0x2d,0x21,0x64,0xcd,0x8f,0x2d,0x8f,0x0c,0x85,0xa5,0x23,0x8b
.byte	0x6c,0x00,0x13,0xf7,0x6a,0xb4,0x68,0x1a,0xcc,0xc4,0x03,0x5b,0xd6,0x7b,0x5b,0x34,0x90,0x34,0x3e,0x0a,0x07,0x19,0x81,0x99,0xe9,0xd2,0xa8,0x73,0x2c,0xa2,0xcf,0xdf,0x29,0x69,0xbf,0xec,0xdd,0xa5,0xd3,0x16,0xb0,0xd2,0x9c,0x2f,0xeb,0x70,0x50,0x20,0x3c,0x22,0x1a,0x5b,0x55,0x79,0x76,0x0f,0x1f,0xd0,0x34,0xa9,0x55,0xad,0x75,0x75
.byte	0x7f,0xa7,0x9b,0xa7,0x3d,0x5d,0x73,0xce,0x91,0xf6,0x9b,0xcd,0xa5,0xee,0x48,0x44,0xba,0xd5,0xad,0xbe,0x1e,0xc6,0xd2,0x8b,0x05,0x21,0x20,0xb5,0x7d,0x78,0x88,0x10,0x20,0x85,0x90,0x8f,0x47,0x74,0x68,0xe6,0x32,0x2a,0x13,0x7a,0xb3,0x5d,0xfe,0x24,0x97,0xd1,0x65,0x55,0x60,0xb3,0x88,0xfb,0x59,0xc9,0x29,0x70,0xf1,0x45,0xbd,0xbe
.byte	0x4d,0x01,0x4e,0x5e,0x5f,0x99,0x52,0xf8,0x5f,0x38,0xcf,0xa8,0x5d,0x69,0x54,0x87,0x72,0x41,0xca,0xc4,0x63,0xc1,0x52,0x58,0x66,0x8b,0xda,0x8b,0x61,0xd1,0xab,0x7d,0x8d,0xfe,0x51,0x8d,0xf6,0xd0,0x21,0x4d,0x0b,0xc5,0xea,0x74,0xcd,0x21,0x93,0x4a,0x91,0xe5,0x3f,0xce,0x35,0x3b,0x3f,0xc0,0xab,0xa4,0x23,0x76,0xd1,0x8c,0xa7,0xbe
.byte	0x15,0xab,0x8e,0xd7,0x0d,0x86,0xac,0xc3,0x06,0xff,0x33,0xf2,0x41,0x6f,0x69,0x58,0x49,0xd1,0x73,0xcf,0x5e,0x4e,0x1e,0x46,0x12,0xfa,0x30,0x0d,0x4b,0xb1,0xfb,0xc6,0xe6,0x0d,0xcd,0x8d,0xca,0x34,0x28,0x5a,0xed,0x85,0x55,0x31,0xee,0xba,0xbf,0xa4,0x6f,0x9c,0x7d,0xeb,0x4b,0x1b,0x73,0xea,0x4e,0xb9,0x62,0x5d,0xac,0xe3,0x53,0xdf
.byte	0x27,0x87,0x2f,0x39,0xca,0x5b,0xd6,0x72,0xcf,0x95,0xc6,0x2a,0xa5,0x3f,0x57,0xfd,0xdc,0xa9,0x4a,0x86,0x0f,0xcd,0xd5,0xea,0xfe,0x85,0xeb,0x9b,0x84,0xc6,0xf7,0xba,0xc2,0x37,0xbc,0x18,0x85,0x49,0xa6,0x7f,0xd9,0x3e,0xfb,0xf0,0x0c,0x39,0xe3,0x1c,0x06,0xfe,0xb6,0x49,0xa3,0x8b,0x72,0x2b,0x39,0xa1,0x48,0xfd,0x1f,0xfe,0xa4,0xf7
.byte	0xcc,0x7a,0xef,0x64,0xa0,0x0d,0xeb,0x78,0x71,0x8c,0xd6,0x59,0x7c,0xf4,0xaa,0x81,0x7a,0x89,0xe6,0x22,0xc9,0x57,0xe8,0x13,0x9c,0xca,0xc4,0x6f,0xb5,0xbf,0x08,0x31,0x93,0x56,0x2a,0x82,0x00,0x95,0xdc,0x4b,0xfd,0x9b,0xc7,0x8b,0x31,0x72,0xa0,0xff,0xbe,0xb4,0xd6,0x07,0x16,0x0a,0x4a,0x0a,0x96,0x02,0x83,0x53,0x2a,0x4d,0x33,0x72
.byte	0x1f,0x20,0x20,0xc3,0x63,0xee,0x4e,0x05,0x90,0x7d,0x21,0xd0,0xf1,0xda,0xde,0x0d,0x4a,0x59,0xb9,0xca,0x81,0xe3,0x1f,0x83,0x19,0xdc,0x09,0x03,0x5f,0xaa,0xee,0xbc,0x5a,0xfa,0xc6,0x4d,0x3d,0xfe,0xfe,0xf3,0xdb,0xc3,0x77,0x31,0x74,0xb4,0x94,0xb5,0x09,0xb1,0xb5,0x13,0x47,0x2e,0x4f,0x3b,0x38,0x83,0xf5,0xfc,0xe9,0xcc,0x45,0xea
.byte	0x5b,0x88,0x21,0xba,0x53,0xc5,0xf6,0xd4,0x63,0xc5,0x37,0x1d,0xa1,0x42,0x2e,0x9c,0x9a,0x50,0x2c,0xfe,0xdb,0xf6,0x31,0x36,0x5f,0x9d,0xed,0x63,0x42,0x20,0xdd,0x27,0xe5,0x34,0x3c,0x0f,0x06,0x8b,0x8f,0x32,0xb6,0x47,0xce,0x07,0xcb,0x27,0xc1,0xb7,0xfe,0xb2,0x69,0x81,0x79,0x20,0xd7,0x47,0xbb,0xab,0x61,0x5f,0x09,0x99,0xdf,0x9f
.byte	0xde,0x59,0x33,0x75,0xd1,0xcc,0xfe,0x92,0x79,0x1f,0x2d,0x59,0x88,0xef,0x4b,0x80,0x0c,0x38,0xa3,0xb1,0xef,0xae,0x53,0x84,0x2f,0xbd,0xd3,0x0c,0xcf,0xd5,0xf7,0xb7,0x6f,0xa7,0x22,0x1f,0xf1,0x56,0x76,0x0c,0x78,0x52,0xa3,0xc0,0xd0,0x2f,0xbc,0xdf,0x29,0x0d,0xa8,0x54,0x0d,0x2b,0x65,0x1b,0x7f,0xeb,0x21,0x22,0xaf,0x10,0xc1,0xd6
.byte	0x30,0xa8,0x2f,0xb1,0x25,0xbf,0xdc,0xee,0xe9,0x35,0x40,0x69,0xa0,0xa0,0x27,0x85,0x2e,0x18,0xc1,0x36,0x24,0xc5,0x96,0x9a,0x85,0x3f,0xbb,0xfd,0xf5,0x02,0xa2,0xa1,0x92,0x3c,0x16,0x48,0x9f,0xc5,0x00,0x7c,0x7b,0xaf,0x31,0xba,0x68,0x0e,0x58,0x88,0xf4,0x10,0xb9,0xa6,0xe0,0x46,0x2a,0xb8,0x8d,0xc7,0x8e,0xad,0x7c,0xec,0xd2,0x74
.byte	0x92,0xfe,0x1b,0xd0,0x73,0x79,0x0b,0x4e,0xcc,0x2d,0x5c,0xe7,0x80,0x2d,0x21,0x1c,0x97,0xfc,0x2a,0xc9,0x9c,0x07,0x10,0x64,0x8b,0xf7,0xf5,0x1c,0x54,0xb6,0x6c,0x73,0x1c,0x50,0xd3,0x1a,0x2a,0x63,0xcb,0xba,0xd3,0x95,0xe2,0xa6,0xc3,0xca,0x45,0xfd,0x5e,0x1b,0xbb,0x6b,0x4d,0xb3,0xf7,0xfd,0xaa,0xf9,0x73,0xb8,0x74,0x4d,0x36,0x7e
.byte	0xcc,0xaa,0x1e,0xf3,0x20,0x68,0xa5,0x0c,0x03,0xe3,0xbe,0xee,0x82,0x03,0x8d,0x10,0xa6,0xf6,0x6c,0x73,0xc2,0x9d,0x74,0xba,0x57,0x17,0xd7,0xfa,0x85,0xf5,0x1e,0x3d,0xf8,0xc7,0x80,0xef,0xcd,0xf0,0xf4,0x46,0xfc,0x07,0xb5,0xc4,0x5f,0xd2,0x04,0x6a,0x90,0xf5,0x76,0xb6,0xf9,0x73,0x22,0xa6,0x09,0x2f,0xbf,0xb5,0x93,0x9a,0x95,0x05
.byte	0x95,0xaa,0xf9,0x8c,0x71,0xd6,0xc6,0xd9,0x72,0x50,0xf6,0x58,0x77,0x09,0x47,0x97,0x21,0x42,0xf0,0x30,0x5c,0x3c,0xec,0x60,0x67,0xdf,0x5e,0xd2,0xed,0x0f,0xab,0x25,0x11,0xbb,0xf8,0x34,0x1e,0xbd,0x7f,0xc6,0x52,0x19,0xf5,0x53,0x28,0x46,0x75,0x93,0xce,0xc2,0x0b,0xdf,0xfd,0xa5,0xf1,0xb0,0xa2,0x0b,0x97,0xb5,0x76,0xb4,0x8a,0x2b
.byte	0x82,0x55,0x23,0x29,0xc2,0xd3,0x32,0x94,0x2f,0xf0,0xe6,0x77,0x2c,0xe4,0x6a,0x7f,0xd7,0xee,0x84,0xfb,0xba,0xb8,0x4b,0xae,0x13,0x34,0xbd,0xa8,0x12,0x7a,0x3c,0x28,0x40,0x74,0x5d,0x9a,0x11,0x1a,0xe9,0x74,0x31,0x28,0x3d,0x3d,0x64,0xb7,0x54,0xa0,0x51,0x0d,0xed,0x97,0x94,0x56,0x7a,0x48,0x8e,0x36,0xc9,0xae,0x5f,0xc6,0x79,0x45
.byte	0x4f,0x07,0xdd,0x13,0x52,0x8b,0xfc,0x3b,0x73,0x44,0x68,0x64,0x51,0x0d,0x95,0x6f,0x0f,0x94,0xba,0xf8,0x40,0x64,0x51,0x43,0x49,0x63,0xc1,0xbd,0xf3,0x39,0x7f,0x6e,0x6f,0x45,0xeb,0xd2,0x33,0x44,0x2d,0x10,0xb4,0x68,0xcb,0xcb,0x8c,0x84,0xc5,0xd4,0x63,0x1d,0x23,0x85,0x30,0x4d,0x6c,0xfc,0xc9,0xa4,0x8c,0xd2,0x42,0x69,0x2f,0x17
.byte	0x86,0xf0,0x17,0xd0,0xb2,0xaa,0xfd,0x62,0xcb,0xb4,0xfd,0xba,0x29,0xf8,0x85,0x45,0x84,0x9d,0xae,0xf8,0x9c,0x8f,0x64,0xd5,0xb8,0xb6,0xa9,0x64,0xf9,0x39,0x86,0x68,0x29,0xac,0x32,0x87,0x84,0x6c,0xb0,0x09,0xd2,0xdd,0xf2,0xec,0xa1,0x3a,0xfd,0x11,0x37,0x54,0x67,0x29,0x62,0x25,0x62,0xe8,0x6a,0x4b,0x5e,0xde,0x9a,0xf0,0x97,0x73
.byte	0x66,0x69,0x2a,0x21,0xbe,0x95,0x86,0xca,0xf9,0x17,0xe9,0x4b,0x23,0x83,0x1e,0x8c,0x37,0x47,0x91,0x03,0x3f,0x9f,0xb8,0x60,0x2c,0xdd,0x82,0xbd,0x2a,0xc3,0xe7,0x30,0x8f,0x91,0x2b,0xa4,0x23,0x01,0x03,0xb2,0x8b,0xbd,0xd2,0x1d,0x16,0xf7,0x6a,0x86,0xa8,0xe4,0x54,0x6f,0x9c,0x47,0xa5,0x0f,0xbe,0x94,0x56,0xfa,0x18,0x69,0xbe,0x92
.byte	0xe9,0xf8,0x24,0x4d,0x65,0x42,0x81,0x1f,0x85,0x52,0xb7,0xc9,0x49,0xde,0xa5,0x4c,0x8f,0x0d,0x5f,0x12,0x68,0x68,0x35,0xce,0x29,0x22,0x5c,0x55,0x3e,0xbd,0xce,0xf2,0x2a,0xec,0x7e,0xe1,0x29,0x0a,0x88,0xf3,0x5e,0xeb,0x27,0xe5,0x52,0xee,0x72,0x37,0xba,0xff,0x82,0x97,0xa9,0x5d,0x77,0x6f,0xb9,0xc3,0xa7,0x73,0xba,0x7f,0x2f,0x7a
.byte	0x19,0x32,0x87,0x56,0xa2,0x89,0xb2,0xb4,0x48,0xbe,0x2e,0x30,0x89,0x0a,0x8f,0x75,0x25,0x25,0x5c,0x46,0xe8,0x02,0x45,0xcb,0x03,0xd1,0xa3,0xeb,0x70,0x71,0x08,0x1c,0x46,0xf1,0x2c,0x43,0xe2,0x44,0x30,0x6a,0x61,0x31,0x45,0x3e,0xbb,0x47,0x33,0x24,0x25,0x13,0xeb,0xf7,0x24,0x66,0x15,0x4c,0xf3,0x07,0x2f,0xff,0xdc,0x37,0x0f,0x71
.byte	0x85,0xc8,0x56,0xa7,0x2a,0x22,0x87,0x8b,0xae,0x35,0x31,0x29,0x96,0xf0,0x81,0xfb,0x2c,0xbf,0x44,0x69,0x69,0x9a,0x77,0xfd,0xc0,0x2b,0x42,0x16,0x67,0xd6,0xbd,0xd0,0xf1,0xb9,0x40,0x8f,0xd2,0x9a,0x1b,0x2c,0x64,0x78,0x6b,0xda,0x37,0x26,0xae,0x4c,0xee,0x36,0xaf,0x84,0x61,0xe4,0x93,0x22,0x64,0xaf,0xee,0x6d,0x69,0x5c,0xe5,0x85
.byte	0xd8,0xcc,0xcf,0xf3,0xe8,0x05,0xcd,0xd2,0x09,0x66,0xaf,0xbb,0xc4,0x79,0xb2,0xa7,0xa5,0x09,0xd9,0xf5,0xa2,0x83,0x4f,0xd5,0xf5,0xf3,0x7d,0x7a,0xab,0x94,0x83,0xb3,0x15,0xfb,0x0d,0x1a,0x1d,0x77,0xc5,0x63,0x0b,0x54,0xde,0xa8,0x0d,0xc4,0x16,0xe3,0x89,0xeb,0xa3,0x1b,0xd4,0x77,0x13,0xe3,0x55,0x98,0x15,0xab,0x3b,0x32,0xc8,0xd4
.byte	0x0c,0x91,0x80,0x57,0xf7,0x1e,0x24,0xd0,0x56,0x78,0x29,0xd2,0x03,0xe7,0xc4,0xd2,0x09,0xca,0xee,0x9b,0x60,0x5f,0xa1,0xfd,0xaa,0x85,0x4b,0x68,0x35,0xa4,0x3b,0xef,0x29,0xb8,0x49,0x85,0xee,0xbb,0x39,0xc0,0xc6,0x99,0x97,0xc6,0x86,0x6c,0x27,0xf9,0x1a,0x19,0x6e,0x7c,0xae,0x75,0x41,0x0d,0x08,0x1e,0xf0,0xb4,0xc3,0x9e,0xdb,0x40
.byte	0x86,0x94,0x9d,0x90,0x09,0x3f,0xdc,0xb9,0xfc,0x59,0x41,0xc5,0x5b,0x89,0x97,0x49,0x4a,0x1a,0x06,0x68,0x83,0xd8,0x7e,0x09,0x51,0xe1,0x86,0xd8,0x88,0xbe,0x8a,0x36,0x48,0xb3,0x83,0x7b,0x57,0xdd,0x8f,0x18,0x67,0x4a,0x7d,0x68,0xab,0xb9,0x05,0xf0,0xe4,0x27,0x4e,0x33,0x44,0xa7,0x13,0x04,0x94,0xc5,0x57,0xaf,0x36,0x03,0xe8,0x09
.byte	0x36,0x5b,0xe8,0x92,0xad,0x0a,0x79,0x02,0x24,0x43,0x62,0xc7,0xa5,0xce,0x7c,0xac,0x6d,0x0a,0xf2,0x83,0x33,0x05,0x3b,0x6f,0x9d,0xda,0x96,0x9f,0x8b,0x79,0x3e,0x6c,0xd6,0xba,0x7f,0xea,0x84,0xd8,0x23,0xb6,0x92,0xc3,0x9c,0x7f,0x0d,0xcb,0x7b,0x9f,0xbd,0xc2,0xf5,0x6f,0x71,0x67,0x5f,0x0b,0xd1,0x73,0xb5,0x8c,0x46,0x07,0xcd,0xd8
.byte	0xee,0x28,0xcf,0x8f,0x8e,0x5c,0xde,0x14,0x78,0xc7,0x60,0xd5,0xf4,0x49,0x97,0x46,0x5f,0x49,0x4a,0xb4,0x8f,0xc9,0xd1,0x52,0x34,0x01,0x29,0xa1,0x46,0x55,0xf8,0x29,0x53,0xbb,0x32,0x1e,0x4b,0x89,0x96,0x53,0x0b,0xf2,0x16,0xf9,0xa7,0x70,0x93,0x59,0x78,0xc0,0x77,0x78,0x9f,0x6c,0xb3,0x0e,0x3f,0x6f,0x40,0x09,0x1d,0xd6,0x66,0x4e
.byte	0xe8,0xb0,0xa1,0x14,0x65,0xc8,0xc7,0x3f,0xd2,0xf0,0x1f,0xfd,0x51,0xe0,0x29,0xd6,0x39,0x26,0x60,0xfe,0x62,0xc2,0xe4,0x45,0x6d,0x01,0xdb,0xd3,0x7c,0xdf,0x48,0x10,0x2f,0xf2,0x8e,0x6c,0xc6,0x58,0xc3,0x7d,0x26,0xb1,0x9d,0x52,0x02,0x2a,0x5f,0x2b,0x57,0xca,0x84,0x9d,0x74,0x31,0x01,0x0f,0xda,0x3d,0x7c,0xbb,0xdc,0x71,0x82,0x8b
.byte	0x42,0xaf,0x49,0x9e,0x2c,0xe8,0xdc,0xa1,0xfb,0x23,0x6d,0xdb,0xdc,0x36,0x01,0xc9,0xb3,0x93,0xd4,0x2e,0x8b,0xd1,0xe4,0xed,0x1b,0xd0,0x4c,0xeb,0xaf,0x96,0x57,0xde,0xee,0x90,0xf4,0xa7,0x58,0x46,0x8a,0xd4,0xa9,0x44,0xe0,0xb3,0x13,0x96,0xb2,0x8a,0xb0,0xd3,0xbe,0x71,0x38,0xb7,0x35,0xa9,0xa8,0x48,0x37,0xa3,0x11,0x0e,0x61,0x36
.byte	0x6c,0xaf,0x6c,0xf2,0x3f,0xd6,0x55,0xb3,0xa5,0xe0,0xaf,0x18,0x6a,0xf5,0x78,0xb5,0x7c,0xc7,0x48,0x24,0x6c,0xea,0x1e,0x7f,0x52,0xb4,0xe8,0x72,0x46,0xd2,0xbd,0x1c,0x9e,0xe6,0x5b,0x3e,0x9c,0x6c,0x6c,0x6b,0x45,0x0c,0x3a,0xb7,0x67,0x3c,0x8e,0x77,0x77,0xbf,0x50,0xb6,0x30,0x6e,0xe1,0x28,0x0d,0x2a,0x85,0x44,0xf8,0xbb,0xf1,0x14
.byte	0x89,0xaa,0xc2,0x27,0xf5,0x8e,0xa1,0xd3,0x07,0xba,0xe8,0x03,0xcf,0x27,0x1c,0xa6,0xc4,0x63,0x70,0x40,0xe7,0xca,0x1e,0x05,0xb7,0xb7,0xdc,0xc0,0x07,0x4c,0x0d,0x21,0x12,0x60,0x02,0xe3,0x86,0x65,0xe7,0x1c,0x42,0x86,0xdd,0xdb,0x7f,0x26,0x60,0x01,0x3d,0xd8,0x18,0xcd,0x7a,0x9f,0xf8,0xb2,0xf6,0x6d,0xd3,0xe0,0x57,0x1f,0x80,0x30
.byte	0x2d,0x5e,0x71,0xdf,0x4d,0x7f,0xcd,0x63,0x77,0x19,0x5e,0x2d,0xd5,0xb5,0xfa,0xa9,0x26,0x02,0xb9,0x62,0x2b,0x57,0x80,0x0a,0xe9,0xbc,0xa4,0x3b,0xa7,0xf1,0xf3,0x77,0x2b,0x6b,0x41,0x5e,0xf7,0xe8,0x66,0x23,0x63,0xac,0xcd,0x58,0xfc,0xa9,0x97,0x6b,0x5a,0x1e,0xe5,0x7d,0xfd,0xb1,0x42,0x7f,0x99,0xdd,0x60,0xaf,0x39,0x46,0x36,0xdd
.byte	0xc2,0x70,0x83,0x53,0xd1,0xc3,0x69,0xc8,0x90,0x0e,0x2b,0x34,0xb2,0x0c,0xb9,0x7a,0xb8,0x6b,0x7c,0xc2,0xf3,0xae,0x41,0x24,0xb8,0x94,0x5f,0xdd,0xce,0xda,0x95,0xda,0x49,0x81,0xb6,0xf8,0xa9,0x8e,0xb3,0x79,0xf8,0x55,0xf9,0xcf,0x8c,0x24,0x99,0xfc,0x6b,0x15,0x0f,0x39,0xac,0xd0,0x3e,0x89,0x9d,0xc2,0x46,0x8c,0x99,0x45,0xfd,0xce
.byte	0x13,0x4c,0x9c,0xc8,0x80,0x87,0x8f,0x7b,0x28,0xe3,0x5e,0x2b,0xe3,0x89,0x7e,0x13,0x52,0x52,0xe9,0x3a,0xed,0x33,0xe7,0x28,0xc7,0x7a,0x48,0x8d,0x0e,0xee,0x24,0xc4,0x61,0x04,0x3c,0xd4,0x7e,0xf3,0x30,0x22,0x07,0x58,0xae,0x02,0xc5,0xd1,0x7d,0x04,0x18,0xca,0xd6,0x04,0xd4,0xc5,0xa4,0xff,0x8d,0x0d,0x68,0xd4,0x1a,0x3a,0x72,0x6f
.byte	0x41,0x1e,0xda,0xc0,0x97,0x7c,0x55,0x2c,0x13,0x20,0x9a,0x07,0x35,0xcc,0xc5,0x83,0xee,0x41,0x77,0x51,0x28,0x07,0xe0,0x81,0xe3,0x9b,0x1f,0xdb,0x73,0x5c,0x8d,0x82,0xa2,0x8b,0xf4,0x92,0x4f,0x70,0xa8,0x6a,0xcf,0xbf,0xcf,0x0b,0x71,0xbc,0xeb,0x81,0xb4,0xc9,0x65,0xe7,0x43,0xef,0x25,0x45,0x27,0xea,0xcd,0x60,0x68,0xcd,0x2d,0x7a
.byte	0xfd,0x88,0x6d,0x06,0xd5,0x92,0x32,0xc3,0x18,0x88,0x64,0xa7,0xde,0x39,0xeb,0x0b,0x5c,0x9c,0xf6,0xf6,0x93,0x90,0x24,0x0c,0x9e,0x0b,0x89,0x1c,0xcb,0xc8,0x96,0x72,0x17,0xae,0x46,0x61,0x69,0x6e,0xbe,0x6c,0xf1,0xa4,0xa4,0x50,0xa9,0x2a,0x47,0xd7,0x80,0xe4,0x72,0xd2,0x3f,0x1a,0xdd,0x82,0xdc,0x12,0x66,0x10,0x26,0x15,0x80,0x56
.byte	0x4d,0xbe,0x02,0xae,0xe1,0x24,0x8a,0x41,0x52,0xc8,0x5d,0x8d,0x62,0x85,0xbe,0x7c,0x35,0xdd,0x88,0xd3,0xf5,0xf7,0x9b,0xf1,0x5a,0x4e,0x70,0x48,0x31,0x5a,0xaa,0x96,0x1e,0xf8,0x73,0xb4,0x0f,0xb2,0x82,0xf4,0x13,0xac,0xba,0x3b,0x12,0x36,0x1e,0x23,0xbf,0x09,0x8a,0x1c,0x96,0x47,0x56,0x2d,0x16,0x24,0xc3,0x23,0x65,0xe2,0x99,0xd0
.byte	0xf0,0xa0,0x2c,0x64,0x35,0xad,0x16,0x34,0x67,0x52,0xbc,0x8f,0x17,0x90,0xf9,0xc7,0x4f,0x64,0x6c,0x75,0x3f,0xd7,0x48,0xa4,0x6b,0x43,0xe6,0x2e,0x7a,0xe3,0x79,0xe8,0x47,0x51,0xe9,0x52,0x36,0x30,0xa4,0x24,0x89,0x00,0xd5,0x77,0xbd,0x34,0x2e,0xa9,0x74,0x02,0x25,0xc0,0x0c,0x10,0x31,0xf0,0xa7,0xcb,0x01,0xed,0x43,0x70,0x15,0xe6
.byte	0xda,0x01,0xb4,0x7a,0x13,0xbc,0xf1,0x57,0x34,0xb1,0xb7,0xb3,0x26,0x18,0x5f,0x42,0x6b,0xcb,0x78,0x25,0x48,0xe9,0xe6,0xe8,0xf5,0x45,0xa2,0x61,0x97,0x10,0xa5,0x7e,0x7a,0x48,0xf3,0x23,0xa5,0x88,0xc0,0xc4,0xc7,0x3b,0x5c,0x0c,0xfc,0xe0,0xf4,0x68,0x64,0xc6,0x9f,0xd9,0x17,0xcb,0xe5,0xba,0x4a,0xa4,0xe0,0x27,0xf8,0x2b,0x4e,0x67
.byte	0x13,0xab,0xd2,0xce,0xbc,0x8d,0xdf,0x6e,0x49,0xaf,0x72,0x8a,0x51,0xa1,0x78,0x38,0x0a,0x58,0x2e,0x72,0xec,0x94,0x70,0x8d,0xdf,0x0b,0x5a,0x52,0x81,0xb1,0x9b,0xda,0x2c,0xd2,0x85,0xbb,0x8f,0xb0,0x99,0x64,0x24,0xbe,0x03,0xd9,0x92,0x8d,0x29,0xf3,0x41,0x9c,0xd6,0xef,0xef,0xb2,0x5c,0x22,0x90,0xff,0x27,0x4d,0xb3,0x91,0x72,0x9f
.byte	0x42,0xca,0x66,0xc5,0x66,0xb7,0x50,0x3e,0x83,0x6f,0x2d,0xe3,0x7b,0x2a,0xc4,0x5a,0x93,0x92,0x80,0xdb,0x1a,0xdd,0xef,0xfd,0x96,0xcb,0x6a,0xd8,0x4a,0xc5,0x6e,0x36,0x4a,0xe4,0x10,0x15,0xb3,0x12,0xb4,0xd9,0x9e,0x37,0x48,0x96,0xcb,0xe5,0x3a,0x4f,0x57,0xa6,0x46,0x2f,0xd3,0x06,0xb8,0x61,0x1c,0x17,0x3a,0xb8,0xad,0x40,0x50,0x57
.byte	0x10,0xd9,0xd0,0xe9,0x1b,0xe3,0x18,0x8c,0xc4,0xfa,0x08,0x8d,0x82,0x3c,0x22,0x22,0x1b,0x97,0x64,0xa6,0x8b,0x7c,0x70,0x2b,0xa0,0xd8,0x4c,0x64,0xcf,0xbc,0x49,0x78,0xcb,0x92,0x0f,0xe1,0x60,0x12,0x4e,0x92,0x0d,0xaf,0xa4,0x1f,0xe0,0x2a,0xa5,0x69,0xc6,0xa1,0x91,0x5c,0xdd,0xb8,0xae,0xfa,0xc5,0xb9,0x18,0x31,0x81,0x32,0x6e,0x97
.byte	0x44,0x2a,0xda,0x58,0xcd,0x9e,0x0d,0x57,0xe0,0xe3,0x5f,0x7b,0x04,0xd8,0xc8,0x68,0xf5,0xa2,0xac,0x0c,0x29,0xf0,0x7e,0xff,0x32,0xfb,0x53,0x1a,0xc2,0xe3,0xae,0xa5,0xe4,0x9c,0x50,0xaf,0xf4,0xde,0x0b,0xdd,0x4d,0xfa,0x65,0x3c,0xbe,0x3c,0xb8,0xda,0x88,0xd9,0x6c,0x55,0x58,0xe1,0x4d,0x00,0xa8,0x1e,0xe2,0x3a,0x9c,0x53,0x9b,0xca
.byte	0xb7,0x5d,0x3a,0x83,0xe0,0xbb,0x95,0xc4,0xd5,0x45,0x48,0xdc,0x12,0xab,0x24,0xfc,0x5d,0x91,0xe1,0xc8,0x0a,0x5c,0x10,0xc4,0xc9,0xaf,0xb6,0x54,0x80,0xfd,0xa0,0x70,0xb9,0xab,0xdf,0x34,0x9f,0x5c,0xff,0xde,0x8e,0xa0,0x0b,0x21,0xcf,0x28,0xc4,0xdf,0x67,0xb5,0xc0,0x20,0x49,0x0c,0x7e,0xe6,0xf7,0x41,0x6b,0x75,0xd9,0x1d,0x3b,0x49
.byte	0xb7,0x4f,0x01,0xd1,0x20,0x62,0x15,0x1e,0x9f,0x16,0xb0,0xbd,0x30,0x09,0x05,0x00,0x0f,0x25,0x5a,0x37,0xe9,0xa6,0xc6,0xef,0xe5,0x39,0x2b,0xd7,0x6b,0xc5,0x96,0xd2,0xad,0x46,0xaf,0xd3,0xc0,0xfd,0xea,0xff,0x4c,0xaa,0x44,0x48,0x9a,0xdb,0x99,0x44,0x3f,0x4a,0xf0,0x3f,0x81,0x75,0xf2,0x79,0x31,0x3c,0xed,0x56,0xc6,0xf0,0xf1,0x8c
.byte	0xdb,0x1d,0x6c,0x6c,0xcc,0xfb,0xc2,0x30,0xf6,0x24,0x14,0x69,0xc4,0x89,0x4d,0xd0,0x10,0x77,0x37,0x00,0xe8,0xc9,0xf2,0x32,0xf1,0x43,0x8b,0xe1,0x09,0xc4,0x59,0x17,0xf9,0x20,0x2b,0x01,0x76,0x20,0xb8,0x03,0x84,0xf6,0xd7,0x2e,0xef,0x20,0xa6,0xfa,0x8b,0x74,0x7f,0x4a,0x14,0x33,0xad,0xac,0x45,0x66,0x18,0x2b,0x6b,0xd2,0xb8,0x20
.byte	0x1a,0xff,0xca,0x25,0x69,0xfd,0xba,0x4b,0x5b,0x9c,0x38,0x35,0x4c,0x30,0xa2,0x24,0x3d,0xbb,0xd4,0xf3,0x67,0x24,0xa5,0x93,0xc6,0xf5,0xb2,0xb4,0xa5,0x04,0x53,0xb6,0xe4,0xc7,0xdc,0xf1,0xe5,0x43,0xb7,0x73,0xaa,0xab,0x5c,0xea,0xcb,0xf1,0xeb,0x5b,0x04,0x7a,0xff,0x0f,0x5e,0xb4,0xd3,0x2a,0x39,0x50,0x1b,0x54,0x1f,0x32,0xd7,0x7c
.byte	0xea,0x3f,0xee,0xa5,0xc8,0x46,0x48,0x7e,0x75,0x60,0x7a,0x42,0x42,0xd3,0x15,0x07,0x69,0x46,0x1c,0xe2,0x21,0x31,0x94,0x31,0x24,0x9e,0x39,0xab,0x7a,0xf9,0xc2,0x0b,0x2d,0x6b,0x55,0xa3,0x36,0xb2,0x65,0xf2,0x17,0x08,0xde,0x15,0x83,0x07,0x36,0x12,0x54,0x8f,0x0b,0x23,0xa8,0x7e,0xb5,0x57,0x1c,0x9e,0x29,0xd7,0xd4,0x9b,0xc1,0xf6
.byte	0x94,0x23,0xf3,0x92,0xbf,0xba,0xc8,0xf5,0x78,0x3e,0x67,0x48,0x14,0x3b,0xd4,0xe9,0x8f,0x78,0xc1,0x4b,0x9a,0x59,0x08,0xaa,0x50,0xf4,0x9d,0xc4,0xc3,0x2c,0xbc,0x56,0x2c,0x13,0x30,0x75,0xfb,0xed,0x48,0xab,0x90,0xec,0x64,0x18,0xb5,0xd5,0xb5,0x7f,0xc1,0x7f,0x83,0xf2,0xdb,0xae,0xde,0xf5,0xb5,0x29,0x03,0xbe,0x80,0xb1,0x5d,0x97
.byte	0xd3,0x7a,0xa4,0xd0,0xe0,0xce,0x04,0xda,0xaa,0x82,0x19,0xc9,0x02,0xb7,0x1c,0xe1,0x66,0xd9,0x3e,0x86,0x6d,0xb5,0xd1,0x35,0x63,0x8e,0x4b,0xc6,0x58,0x41,0xf9,0xb7,0xba,0xf3,0x06,0x91,0xb7,0xa2,0xfb,0xb5,0x5f,0x53,0xf3,0xe0,0xc1,0xf6,0x91,0x66,0xc7,0x93,0x3a,0x0a,0x72,0xb1,0xed,0x36,0x9d,0xde,0x21,0xdd,0x7d,0x0a,0x7b,0x35
.byte	0x1f,0xc3,0x56,0xde,0xbb,0xcb,0xb2,0x0a,0xb6,0x84,0xce,0xa1,0xc6,0x1a,0x46,0x2f,0x9f,0x48,0xd5,0x98,0x73,0xa4,0xbd,0xbd,0xa3,0xe9,0xc9,0xc4,0x64,0x89,0xb7,0x9c,0x97,0x7c,0x2f,0x88,0x22,0xe4,0x4b,0x71,0x3d,0x2a,0x47,0xee,0xf8,0xfe,0xe0,0xf7,0x03,0x14,0xe6,0x7c,0x9e,0x57,0xbb,0x8e,0xf5,0xea,0x63,0xfc,0x5b,0x18,0x3b,0xa2
.byte	0xa1,0x4a,0x28,0x82,0x37,0x77,0x5b,0xc4,0xd3,0xc1,0xf2,0x87,0x13,0x2b,0x2a,0xc8,0xac,0x70,0xe1,0x82,0x38,0x9c,0x12,0xa0,0xc4,0x9e,0x6b,0xac,0x33,0x8a,0xe9,0x31,0x6f,0xa1,0x76,0x94,0x48,0xcf,0xbc,0x78,0x22,0x82,0x6a,0xb0,0xb9,0x49,0x71,0xdb,0xde,0x8b,0x90,0x09,0x82,0x4d,0x79,0x17,0xe8,0xcf,0xd8,0x50,0xc3,0x08,0x07,0x81
.byte	0x5f,0x9a,0x72,0xce,0x0a,0xe4,0x29,0xc9,0xdd,0x95,0x67,0x58,0xa1,0x14,0xec,0xcf,0x2f,0x29,0xcf,0xce,0xb3,0x35,0x54,0x77,0x67,0x56,0xec,0x95,0x68,0xee,0xbf,0x9c,0x9f,0x74,0x78,0x12,0xd5,0x30,0x83,0x28,0xd5,0x36,0x96,0x57,0xa0,0x8d,0x1c,0x99,0x19,0x04,0xaf,0x25,0xe5,0x71,0x83,0x88,0xb0,0x74,0x38,0xdd,0x8a,0xff,0x39,0x7a
.byte	0xfd,0x34,0x8f,0x9c,0x67,0xa8,0xc8,0x6f,0x13,0x5d,0xf2,0x5b,0x22,0xd3,0x8e,0x63,0x51,0x58,0x9b,0xfc,0xaa,0x89,0x65,0x4e,0x36,0xc4,0xa7,0xef,0x98,0xf9,0xaf,0xcd,0x35,0x8c,0x16,0xbc,0x70,0x4f,0xcd,0x71,0x2a,0xf4,0x13,0xb3,0x3d,0xa3,0x92,0x71,0x45,0xe5,0x9a,0x45,0xbd,0xc5,0x1d,0x82,0x60,0x3a,0x97,0xf3,0x0f,0x96,0x21,0x3d
.byte	0xe5,0x6e,0xfb,0x9d,0x9b,0xeb,0x15,0xc2,0xa6,0x73,0x76,0xf2,0xcd,0xec,0xfd,0x0f,0xf4,0x3f,0x46,0xc9,0x9c,0x73,0xa1,0x21,0x08,0xdc,0x31,0x00,0xaa,0x95,0x07,0xf0,0x3d,0x51,0x57,0xfa,0x6b,0xc3,0x8e,0xe9,0xa4,0x65,0xdc,0xff,0x57,0xb9,0x1f,0x4f,0xc6,0x6d,0x03,0x00,0xa7,0x19,0xb8,0x24,0xb5,0x3d,0x87,0xcb,0x84,0xb7,0xf5,0xfe
.byte	0x51,0x16,0x5b,0xc7,0xed,0x4b,0xff,0xa3,0x66,0x17,0x93,0x60,0x69,0x84,0x8c,0x95,0x74,0xa7,0x30,0x2d,0x09,0xf7,0x4e,0x0e,0x2f,0x99,0xda,0x46,0x34,0x0f,0x93,0x90,0x97,0x4c,0xa6,0x25,0x15,0xb8,0x6f,0x1d,0xd5,0xe1,0xc1,0x39,0x50,0xfd,0xd5,0x79,0x4f,0x04,0x2f,0x76,0x50,0x3f,0x67,0x56,0xad,0x02,0x82,0x30,0x1a,0xaa,0x6e,0xe2
.byte	0x05,0x6a,0x93,0xb7,0xbe,0xde,0x84,0xce,0xd8,0x53,0xed,0xad,0x95,0xab,0x45,0x1f,0x4c,0x3b,0x22,0x36,0x27,0x45,0x19,0xa4,0x7f,0x12,0x20,0x6c,0x9d,0xeb,0xd2,0xfe,0xd6,0x7d,0x25,0xf9,0xe3,0x64,0x77,0x56,0x89,0x12,0x57,0x80,0xd5,0x40,0xbb,0x2a,0xcc,0xac,0x34,0x8e,0x87,0xfd,0x58,0xc3,0xbd,0x92,0x48,0xd8,0x7f,0xc4,0x39,0x6a
.byte	0x4e,0x1c,0x50,0x93,0xef,0xae,0x81,0x93,0x50,0x95,0x6e,0x46,0x7c,0xf5,0x27,0x44,0x6c,0x21,0x06,0x49,0x89,0x7e,0xf4,0xfa,0x08,0xa5,0xbc,0x0a,0xbd,0xb6,0x7b,0x55,0xac,0x87,0x19,0x33,0xfa,0xab,0xf3,0x15,0xc9,0x1b,0x83,0xf2,0x41,0xf1,0x26,0x6f,0xdf,0x15,0x60,0xdb,0xa6,0x03,0x43,0x3e,0x34,0x7a,0xa9,0xb1,0x38,0x57,0xe4,0x09
.byte	0x1a,0x4a,0xd8,0x6e,0x28,0xee,0x7d,0x74,0x54,0x03,0xb3,0x29,0x24,0xb3,0xf0,0xc6,0x20,0x7c,0x47,0x01,0x66,0x36,0x7a,0x14,0x18,0x09,0xd6,0xaa,0xa6,0x82,0x5b,0xe4,0x0a,0xf9,0x41,0x52,0x3b,0x56,0xa2,0xf8,0xa2,0xa1,0x2b,0xe0,0x0d,0x1f,0x5b,0xe4,0x0e,0xe1,0x94,0x84,0x6f,0xed,0x2e,0x11,0xfa,0x4a,0xbd,0x41,0xf4,0x3c,0x8c,0x7e
.byte	0x94,0x46,0xec,0x79,0x81,0xb0,0x36,0xfd,0x9c,0x73,0x0f,0x84,0x1a,0x59,0x4e,0x1b,0xd5,0xd1,0x0d,0xff,0xfd,0xb7,0xfb,0x73,0x35,0x8a,0x66,0xed,0xf3,0xee,0x6d,0xf7,0x86,0x0a,0xb9,0xc0,0xf1,0xa3,0xb7,0x32,0x49,0x01,0xe8,0xcd,0xfe,0x82,0x7b,0xf6,0x46,0xd8,0x73,0x47,0x8b,0x7b,0x6e,0x31,0x92,0x0f,0x4b,0x16,0x11,0x86,0x1d,0x02
.byte	0x5d,0x12,0x79,0x59,0xdc,0x8c,0xaa,0x1b,0xc1,0x75,0x63,0xb2,0xd6,0xbf,0x19,0xb0,0x81,0x70,0x34,0x12,0xd2,0x09,0xbe,0x6d,0xa1,0x31,0x77,0xd2,0x9b,0x59,0xdc,0xcb,0x67,0xb5,0x14,0xcd,0x37,0x31,0x2c,0xa6,0x17,0x58,0x2b,0x24,0xfc,0x2a,0x9e,0x8f,0x38,0x38,0x7a,0x80,0xda,0x8b,0x54,0x1d,0xc9,0x99,0xc7,0x1f,0x98,0x7a,0x1f,0x32
.byte	0x23,0x1c,0xb5,0x6e,0x53,0xd3,0x61,0xe7,0x78,0x19,0x6c,0xd5,0x2f,0x85,0xde,0xd1,0x67,0x6b,0x9b,0xa1,0x09,0x87,0x5e,0x89,0x5e,0x89,0x21,0x36,0xf2,0x94,0xc1,0xfd,0x6c,0x4e,0xd9,0x6b,0xd2,0xb1,0x1b,0x48,0x37,0x9a,0x7b,0xc9,0x52,0xfd,0xe2,0x6d,0x07,0x19,0xf2,0xa5,0x69,0xdc,0x0b,0x52,0x8f,0xb3,0x87,0x03,0x1a,0xd8,0x43,0x20
.byte	0x68,0xcf,0x08,0xcc,0xce,0x37,0xf6,0x96,0x7f,0x03,0x62,0xb2,0xce,0x6a,0xfb,0x22,0x54,0xd6,0xfc,0x84,0x5c,0xf5,0x55,0x32,0x36,0x77,0x1d,0x15,0x6a,0x2c,0x3a,0x01,0x34,0xff,0x5b,0x7f,0x3f,0xab,0x97,0x8f,0xbd,0x1d,0x07,0xb9,0x47,0xb1,0xcc,0xc0,0xdf,0x17,0x38,0x54,0x07,0xc0,0x1b,0xb9,0xa2,0x29,0xa6,0x25,0x73,0x32,0x4d,0x5e
.byte	0x51,0x60,0xb3,0x27,0xe5,0xb6,0xdb,0x56,0x81,0x95,0x03,0x7e,0xca,0xc6,0x15,0x8f,0x48,0xd4,0xac,0x71,0x41,0xdc,0x9c,0x86,0x5d,0xd8,0x90,0x90,0x54,0xdd,0x3d,0xf3,0xa8,0xbb,0xe5,0x55,0x69,0x26,0xdf,0xd1,0x8e,0x75,0x2a,0xe4,0xfe,0xe0,0x80,0x1d,0x6b,0xd2,0x8a,0x06,0x49,0x4e,0x60,0xf8,0xbd,0x3d,0x99,0x27,0x80,0x27,0x42,0x66
.byte	0x01,0x32,0xe1,0x9e,0xa6,0xde,0x7b,0x14,0xa4,0x49,0x68,0x70,0xbe,0xa4,0xe1,0x44,0x2e,0xce,0xa3,0xe9,0x1d,0x7a,0xbd,0xf1,0xe4,0x25,0x11,0x47,0xd8,0xaa,0x32,0x34,0xf8,0xca,0x3d,0xec,0xf3,0x5d,0x8a,0x55,0xe7,0xd4,0x7c,0xfb,0xcf,0xe7,0xa6,0x13,0xaa,0x16,0x5f,0xaa,0x02,0x19,0xdd,0xf1,0xf8,0x5c,0xb2,0x1e,0x68,0x9a,0x21,0x93
.byte	0xd1,0x38,0x31,0xbb,0x26,0x76,0x44,0xf8,0x84,0x3b,0xf5,0xd1,0x52,0xbe,0x1b,0x8e,0x4d,0xa0,0xb4,0x4a,0x5a,0x7e,0x89,0xe5,0x36,0xb0,0x76,0x77,0xc5,0xc2,0x22,0x73,0xc2,0x19,0x12,0x7f,0xdf,0x9c,0xb8,0xc0,0xf5,0x0e,0xd5,0xa3,0x55,0xae,0x61,0xf8,0xf1,0x6b,0x79,0xc8,0x2e,0xbc,0xa5,0xef,0xd4,0xb1,0x84,0x0c,0x15,0xc4,0xed,0xb3
.byte	0x18,0x29,0xd6,0x31,0x83,0x79,0x30,0x1a,0x8f,0xf0,0x3b,0xe9,0xd1,0xf2,0x1d,0xec,0xcb,0xe8,0xc5,0x1c,0xb5,0xcb,0x8e,0x01,0xd1,0xb2,0x86,0x43,0x33,0x95,0x70,0x7e,0x75,0xa9,0xa1,0xe7,0xcb,0xd9,0xf4,0xd3,0xe1,0xe2,0xe9,0x46,0x21,0x20,0x3b,0xe9,0x48,0x1c,0x3f,0x93,0x57,0x31,0xeb,0x15,0x9c,0xa7,0xa6,0xcb,0xb5,0xb7,0xa7,0x24
.byte	0xbe,0x66,0x4c,0x92,0x7c,0xe8,0x8e,0x3f,0x9c,0xa9,0xd7,0xad,0x73,0x68,0x19,0x19,0xd4,0xb5,0x57,0x82,0xdc,0x67,0x3c,0xec,0xac,0x06,0xec,0x86,0x9b,0x65,0xff,0xbb,0xc3,0x90,0x48,0xdb,0x52,0xcc,0xa4,0xf5,0xdf,0x2c,0xc5,0x5a,0xe3,0x30,0xed,0xad,0x37,0x40,0x8c,0xaa,0x32,0x4f,0x94,0x1e,0x14,0x59,0x48,0x1d,0xd3,0xaf,0x80,0xe7
.byte	0xcf,0x6b,0xa7,0x70,0xe7,0x98,0x22,0x4b,0x40,0x02,0x0c,0x29,0x09,0x0a,0x53,0xf7,0xd4,0xeb,0xbb,0x75,0xb4,0x30,0x1c,0x67,0xea,0xd2,0xb5,0x40,0xfe,0x57,0x2c,0x3c,0x44,0x8d,0x8d,0x02,0x78,0xf0,0x76,0x8f,0x92,0xab,0xb4,0xc9,0xc0,0x2f,0xf5,0xde,0xa7,0x09,0x14,0xf1,0xe5,0x34,0xeb,0x86,0xfa,0xcf,0xcc,0x85,0x1c,0x9c,0xa6,0xe1
.byte	0x72,0x9e,0xc1,0xe4,0x74,0xc4,0x96,0x5d,0xf4,0x4b,0x23,0x4f,0xa5,0x32,0xff,0x38,0x21,0x8f,0x43,0xe5,0x96,0x20,0x3c,0x78,0xb8,0xb4,0xcd,0x29,0x62,0x84,0x59,0xb5,0xb4,0x57,0x07,0xa8,0x79,0x77,0x21,0xf4,0x82,0xa7,0xb1,0x36,0xee,0x16,0x8e,0xb5,0x9a,0xf7,0x03,0xac,0x64,0x03,0x20,0x48,0x24,0xbc,0xbb,0xec,0x50,0xed,0xa1,0xf3
.byte	0x67,0xd9,0x34,0xe1,0x0c,0x0b,0xc3,0xd0,0x46,0x0b,0x55,0x85,0x59,0x3c,0xb4,0x7d,0xd0,0xc2,0xe7,0x95,0x24,0x1f,0x53,0x76,0xf1,0x81,0x4a,0x61,0x6a,0x2e,0x3b,0x3f,0x92,0x14,0x7c,0xe0,0x33,0x7f,0xb4,0x85,0x92,0x78,0x0c,0x0b,0xe7,0xbd,0x7a,0x08,0x31,0x7d,0x47,0x3b,0xfa,0xdd,0x90,0x9e,0xf0,0xa9,0xd1,0xa7,0x7c,0x2a,0x37,0xb1
.byte	0x23,0x71,0x34,0xa0,0x63,0xfb,0x9e,0x8f,0x39,0x00,0xa0,0x09,0xd4,0x1f,0xf4,0xba,0x2d,0xc1,0xac,0x6c,0x94,0x18,0x56,0x3e,0x89,0x92,0x63,0x10,0x5e,0xfe,0x76,0xec,0x4e,0xb6,0x5d,0x59,0xf9,0x94,0x46,0x4f,0xda,0xd5,0x3e,0x6c,0x48,0x49,0x7e,0x7c,0x77,0xe7,0x7e,0x22,0x31,0xb5,0x9d,0x15,0xd3,0x08,0x24,0xdb,0x67,0x98,0x6b,0xfc
.byte	0x45,0x54,0x85,0x29,0x9a,0x47,0xa5,0x60,0xe2,0x46,0x36,0x45,0x16,0x54,0xd6,0xb1,0x5c,0x38,0x45,0xf8,0x43,0x28,0x58,0x81,0xc9,0x57,0x10,0xda,0x3b,0xfc,0x3e,0xe4,0xf4,0xb2,0x16,0xb6,0x16,0x1d,0xa4,0x68,0xa6,0xe0,0x36,0xdb,0xe2,0x19,0x1c,0xce,0x9f,0x94,0xa9,0x94,0xad,0x20,0xcb,0x17,0xd0,0x92,0x37,0x75,0x88,0x0d,0xaf,0xdf
.byte	0x98,0x6d,0x19,0x9e,0x8e,0x61,0xe4,0x8c,0xfc,0x27,0x27,0x6a,0xa7,0xa4,0x66,0x7f,0x08,0x03,0xef,0x5c,0x4a,0xb7,0x89,0xa1,0xae,0xe8,0x70,0x3f,0x13,0x27,0x0a,0x7d,0x5d,0x5e,0x2b,0x69,0xb5,0x98,0x1f,0x25,0x1e,0x41,0xff,0x46,0x5a,0x25,0x1f,0xb4,0x90,0x8e,0x81,0x91,0x19,0x63,0x10,0xd4,0xa9,0xdf,0x3b,0xae,0xe6,0x63,0x1a,0xdc
.byte	0x09,0x5f,0xac,0xaa,0xb8,0x6b,0xbd,0x6a,0x90,0x70,0xce,0x2c,0x63,0x6d,0x48,0x78,0xca,0xc1,0x59,0x94,0xe2,0xc7,0x89,0x17,0x73,0xfa,0x73,0x34,0xb7,0xd3,0x9c,0x4e,0xd8,0xac,0x18,0x80,0x25,0xbf,0xbe,0x75,0x0a,0x9a,0x05,0x5e,0x54,0xcb,0xba,0xab,0xca,0x7f,0x96,0xf7,0x26,0x8c,0x82,0xe0,0x23,0xa5,0x86,0xb5,0xdf,0x31,0xd0,0x2f
.byte	0xe3,0x66,0x96,0x83,0xd2,0x04,0x43,0x8a,0x28,0x59,0x49,0xdc,0x11,0x38,0xd9,0x5f,0xc2,0x31,0xaa,0xa8,0x1a,0xff,0x57,0xf1,0x84,0x18,0x28,0xe8,0x04,0xae,0x98,0xa4,0x17,0xc4,0x35,0x75,0xf5,0x37,0xf5,0x27,0x3e,0x7e,0x32,0xa4,0xcb,0xd4,0x43,0x59,0x02,0x63,0x7b,0x7c,0x9d,0xa7,0x61,0x12,0xf7,0xdc,0x12,0xe0,0x07,0xac,0x96,0xf3
.byte	0x71,0x43,0xe5,0x30,0xe0,0x4c,0x51,0x2a,0x19,0xf5,0x79,0x59,0x5a,0xc5,0x74,0xfa,0x54,0x18,0xb4,0xb1,0xfb,0x4b,0x9b,0xf8,0xe4,0xa4,0x63,0x25,0xc3,0x84,0xeb,0x2e,0xa1,0xf8,0xf8,0x7b,0x25,0x6a,0x7d,0x14,0x38,0x06,0xeb,0xae,0x9f,0xa5,0x80,0x9a,0x8a,0xb6,0x46,0x95,0xdf,0x52,0x11,0xd4,0x30,0xcc,0x11,0x8f,0x4a,0x5e,0x56,0x26
.byte	0x60,0x3d,0x5f,0x0b,0x04,0x94,0xcd,0xca,0x1d,0x6b,0x83,0x51,0x83,0x8d,0xf8,0x33,0x4a,0x91,0x00,0xa4,0xf5,0x44,0x5b,0xad,0xa0,0x4a,0x72,0xaf,0xe6,0x4a,0x0d,0x1e,0x9f,0x18,0x6b,0xb4,0xdf,0x85,0x61,0x2a,0x3b,0xe1,0x4c,0xaa,0xc3,0x17,0xef,0x51,0x9f,0xae,0xb5,0xca,0xaa,0x6c,0xd9,0xa1,0xf5,0xa3,0x6f,0x1c,0xca,0xb3,0x37,0xda
.byte	0x27,0xea,0xcb,0xb7,0x36,0xb2,0x11,0xda,0x9f,0x07,0x78,0xaa,0x6c,0xad,0x63,0x9b,0x49,0x6b,0xfe,0x1f,0x93,0x82,0x73,0xc9,0xc8,0xf6,0x68,0x54,0x50,0x77,0xba,0x78,0xc7,0x82,0xee,0xbd,0x97,0x66,0xb9,0x22,0x49,0x0d,0x7a,0x1f,0x0f,0x4e,0xe5,0x02,0x8b,0xa6,0x1b,0x11,0xfc,0xa6,0x37,0x2a,0x5c,0x66,0xaf,0xac,0xa5,0x9f,0xbf,0x26
.byte	0x98,0x9b,0x25,0x44,0x48,0x09,0xe6,0x76,0xb9,0x08,0xf1,0x37,0xcf,0x86,0xc9,0xdf,0xa8,0xf3,0x88,0x2f,0xc1,0x33,0x15,0x95,0x59,0xf7,0x9b,0xf2,0x48,0x76,0xcb,0xd0,0x31,0xe4,0x27,0x74,0x2d,0x6e,0xd2,0xc3,0x29,0xea,0xef,0xff,0x4e,0x3d,0xda,0x3e,0xef,0x94,0x94,0x40,0xcd,0x93,0xcf,0xb8,0x56,0x29,0xf8,0x20,0x20,0xa3,0x66,0x83
.byte	0xba,0xc8,0x4f,0xe6,0x22,0x96,0xb5,0xb2,0x44,0x75,0x55,0x98,0xed,0x11,0xd0,0x58,0x50,0x26,0xf1,0x4a,0xf6,0x80,0x5c,0x17,0x92,0xba,0xc2,0xd6,0x68,0xd4,0x7a,0x4f,0xdf,0x16,0x97,0xbd,0xad,0xd7,0x1b,0x0c,0xe5,0x23,0xa9,0xaa,0xf4,0x1c,0x8d,0xec,0xbf,0xf0,0xb5,0xaa,0x49,0xfd,0xf1,0x31,0x9b,0xf9,0xe9,0x21,0xa1,0x20,0xab,0xbe
.byte	0x56,0x8c,0xf2,0x85,0xdc,0x1f,0xea,0x25,0xce,0xf5,0x6c,0x18,0x7d,0xc4,0x1a,0x01,0x08,0x01,0xed,0x02,0xa8,0xac,0x7f,0x74,0x2c,0xd7,0x28,0x25,0x6e,0x68,0x19,0x38,0x8d,0x20,0x51,0x8f,0x38,0x8b,0x03,0x36,0xae,0x50,0x35,0x28,0x65,0x7e,0x15,0x2a,0x80,0x2c,0xae,0xcd,0xb3,0xb6,0x91,0xf1,0x8c,0xf2,0x8c,0xc5,0xce,0x3e,0x3a,0x97
.byte	0x5a,0xff,0xe1,0x37,0x13,0xf7,0x6b,0x07,0xb2,0xaa,0xaa,0x57,0x18,0xb7,0xb2,0x19,0x52,0xbf,0x59,0x0b,0x6f,0xba,0x56,0x54,0x14,0xac,0x21,0xfd,0x7d,0x03,0x4b,0x0b,0x39,0x54,0xba,0xf9,0xba,0x73,0xcd,0x67,0x13,0x30,0xca,0x19,0x80,0x4f,0x18,0xb4,0x75,0x2a,0xec,0x78,0xa7,0xd0,0x5c,0x53,0xe2,0x43,0x2c,0x08,0x5f,0x5c,0xe6,0x60
.byte	0xde,0x04,0xf6,0x75,0xca,0x35,0x3b,0xf6,0x68,0x53,0x60,0xc0,0xed,0xb0,0x15,0xa1,0xa4,0x89,0x23,0x34,0x49,0x35,0xd2,0x78,0x4b,0x8f,0x7c,0x8d,0x59,0x22,0x9f,0xad,0x72,0x47,0x5b,0xde,0xf2,0x09,0x08,0xa0,0x8d,0x5f,0x4d,0xc3,0xd1,0x83,0x17,0xbc,0x39,0x8e,0xa5,0x53,0xaa,0xe3,0x31,0x03,0x93,0x14,0xb4,0x57,0xf0,0xdf,0x54,0x1d
.byte	0x79,0x4d,0x21,0x1a,0x8f,0x3f,0x6e,0x07,0x41,0xcc,0x2d,0x94,0x55,0x4e,0x50,0xfd,0xac,0xe3,0xef,0xa7,0x50,0x3b,0x3c,0xda,0x32,0x25,0xee,0xd9,0x01,0x37,0x8e,0xb3,0x23,0xc5,0x5e,0x12,0x88,0x6d,0xd5,0x41,0xfd,0x3f,0xfa,0x75,0xb8,0xcb,0x82,0x10,0x81,0x38,0x1b,0x10,0x2d,0x2c,0x6b,0x62,0xa1,0x7c,0xd1,0x75,0xd8,0x8c,0x0c,0x2f
.byte	0xe8,0x97,0xff,0x18,0xb3,0x12,0xa2,0xef,0x6c,0xc5,0x79,0x9f,0x64,0xf3,0xc7,0xdc,0xdb,0x54,0xa4,0x25,0xc7,0x30,0xfb,0x6c,0x5a,0x50,0x24,0xf9,0xb6,0xc9,0xe7,0xda,0x78,0xcc,0x1b,0x5e,0xf3,0xe7,0x32,0xd8,0x36,0x47,0x10,0xe5,0x2c,0xeb,0xea,0xf7,0x25,0x30,0x93,0x64,0x88,0xc8,0x59,0xf8,0x5c,0x02,0x43,0x4c,0x23,0x8e,0x1c,0x42
.byte	0xe4,0x36,0x39,0xbf,0xba,0x8b,0xe3,0x53,0x01,0x32,0x0d,0x89,0xc2,0xea,0x35,0x94,0xf1,0x0d,0x29,0x45,0x08,0x07,0x15,0xcb,0xd7,0x3e,0x4d,0x9f,0x04,0xd8,0x18,0x8a,0x56,0xa3,0xb1,0x1c,0x46,0x19,0x8b,0xd0,0x51,0x30,0xf3,0xca,0x52,0x2a,0x16,0xc4,0x90,0xc1,0x00,0x50,0x87,0x8b,0x4c,0x71,0x61,0x48,0x69,0xb2,0xf1,0x33,0xaa,0x79
.byte	0x81,0x8b,0x36,0x33,0x19,0x41,0x6b,0xc1,0x91,0x40,0xf2,0xcc,0x1d,0x83,0x09,0xab,0xcc,0x6f,0x6c,0x54,0x91,0x62,0x80,0xac,0xe6,0x1f,0xcd,0x5d,0x05,0x2b,0xe5,0xac,0xbc,0xd6,0x1b,0x8b,0xef,0x95,0xa0,0xf3,0xfe,0x8e,0x4d,0x32,0x77,0xe8,0x02,0x8f,0x44,0xad,0xc4,0x40,0xc3,0x99,0x68,0x81,0x47,0x15,0xbd,0x3b,0x8f,0x0b,0x9b,0x3a
.byte	0xb3,0x9d,0x8f,0x3d,0x86,0xd1,0x89,0x5f,0x67,0x19,0x33,0x2d,0x18,0x64,0x0e,0x3a,0x13,0xa4,0xe9,0xb4,0xc9,0x90,0x09,0x6a,0xcb,0x5d,0x0d,0x83,0x13,0x04,0x29,0xe5,0xa5,0xf4,0x00,0x56,0xf4,0x80,0x96,0x33,0x93,0xe4,0x9b,0xc4,0x6e,0x38,0xbf,0x0a,0xe0,0xee,0x8c,0x89,0x5d,0x60,0x36,0x7e,0x69,0xc2,0xc7,0x28,0x6f,0x2b,0x97,0xfb
.byte	0xb3,0x5b,0x82,0xe8,0x9a,0x36,0x44,0xd7,0x1f,0x9b,0x1b,0xd0,0x14,0xe4,0xd4,0x0d,0x35,0xcd,0xee,0x88,0x50,0x37,0x5c,0x88,0x09,0xa5,0x16,0x4d,0xe1,0xbc,0xe8,0x79,0x8f,0xa9,0x18,0xb8,0x43,0xb4,0xd7,0x32,0xcd,0x26,0xdd,0x78,0x29,0x59,0xad,0x29,0xe3,0xe0,0xe7,0xcf,0x16,0x03,0xc6,0x8a,0xb6,0xa2,0x09,0x9a,0x6e,0x90,0x7b,0x0c
.byte	0x9d,0x20,0xb6,0xc4,0x28,0x3f,0x44,0x06,0xa9,0x45,0x72,0x27,0xa7,0x56,0x3f,0x07,0xff,0x13,0xd9,0x80,0xda,0xbd,0x25,0xad,0xd3,0x74,0x2c,0xd8,0xd2,0x93,0xa5,0xda,0xbc,0x5f,0xa5,0xde,0xb7,0x3a,0xf0,0xd2,0x17,0xb1,0xc3,0x70,0x2a,0x85,0xde,0xf0,0x97,0x7b,0x96,0xb2,0x0e,0x45,0x7f,0x63,0xd4,0x94,0xd8,0x78,0x05,0xcf,0xea,0xb3
.byte	0xfb,0x7a,0x79,0xb5,0x91,0x53,0xb8,0x8c,0xa2,0x03,0xf4,0xc3,0xed,0xf0,0xab,0x33,0x5c,0x6e,0xcd,0xbd,0x73,0xe3,0xe9,0xd0,0x83,0x2a,0x2a,0x68,0x32,0xf1,0x69,0x4f,0xd0,0x8b,0xe8,0xa1,0x7d,0x5b,0x0f,0x69,0xc2,0x33,0xbf,0xc1,0x54,0x29,0x47,0xed,0x9f,0xdb,0x35,0x0a,0x3d,0x2b,0x9d,0x8b,0x91,0xb6,0xe0,0xbc,0x53,0xba,0xb7,0xcd
.byte	0x2c,0xd9,0xeb,0x81,0xa0,0x2e,0x14,0x6e,0xdc,0xe1,0x90,0x36,0x14,0x9d,0xa8,0x8b,0x6b,0x1b,0xac,0x4c,0x09,0x8b,0x1a,0x87,0xf4,0x66,0xf6,0xfb,0x62,0x92,0x13,0xcf,0xb2,0x96,0xf0,0xc9,0x8b,0x12,0x99,0xf1,0x16,0xae,0x5c,0x27,0x24,0xa8,0xfd,0xb3,0x4c,0xc2,0xe6,0x3f,0xd2,0xc6,0x0c,0xf2,0x65,0x4e,0xdf,0xf1,0x06,0xb8,0x99,0xc4
.byte	0x3a,0x35,0xba,0xed,0x18,0x3e,0xfa,0x03,0x51,0x8d,0x45,0x68,0x12,0x7b,0xb6,0xac,0x63,0x99,0x47,0xee,0x6f,0x8b,0xcb,0xc1,0x0a,0xf9,0x23,0xf0,0x05,0xe1,0x03,0x4a,0xb5,0xe0,0x65,0x71,0xc8,0x64,0x7e,0x0d,0x39,0xe7,0x96,0xdb,0x34,0x63,0x2e,0x1a,0x27,0x85,0x52,0x63,0x8e,0x44,0xfb,0x61,0xca,0x79,0xe5,0x91,0x99,0x83,0x2d,0xe0
.byte	0x26,0x04,0xad,0x43,0x26,0xf2,0x7e,0x56,0xae,0x35,0x6a,0xfb,0xec,0xc6,0x27,0xe4,0x3a,0xa3,0x6b,0x63,0x72,0xba,0x98,0x03,0x9f,0x2a,0x4c,0xb1,0x33,0x22,0x9d,0x53,0xf6,0x00,0xa3,0x1e,0x32,0xcb,0xbe,0xe0,0xc2,0xf8,0x71,0xcd,0x3f,0xe3,0x4d,0x83,0xf2,0x9f,0x1c,0x91,0x35,0x97,0x52,0x95,0xba,0x24,0x04,0x04,0xca,0x32,0x6d,0xd7
.byte	0x4b,0xd4,0x9e,0x8b,0x73,0x42,0xfb,0x9f,0xfc,0x93,0xea,0xc2,0x41,0x56,0xa9,0xe5,0xdd,0xd0,0x37,0x8a,0xe2,0x92,0x9f,0x45,0x4f,0xd8,0xef,0xe6,0x6f,0x58,0x41,0x5f,0x7b,0xe7,0x0f,0x32,0xce,0x06,0x02,0x7f,0xe2,0x37,0x87,0xb7,0x35,0x72,0x68,0x87,0xc9,0x35,0xa8,0x51,0xce,0xd8,0xde,0xc3,0x8c,0xb4,0xab,0xf4,0xa7,0x3b,0xcd,0xc8
.byte	0x0a,0x56,0x5b,0x48,0xb1,0xa4,0x27,0xa8,0x9e,0x3e,0x04,0xbc,0xb3,0x63,0x3e,0xd5,0xf7,0xae,0xec,0x0c,0x6e,0x4a,0x73,0xb6,0xed,0x66,0xea,0xc1,0x7a,0xc4,0xaa,0x21,0x27,0x62,0xef,0x3d,0x1d,0x51,0x8b,0x63,0xe6,0xe2,0x8a,0xed,0x7a,0x4b,0x90,0xc3,0x9f,0x91,0xb4,0x8f,0x78,0x65,0x9c,0xdd,0x0a,0x7a,0x50,0x36,0x33,0x30,0x3b,0xb4
.byte	0xdf,0x67,0xbd,0xfd,0x71,0xfc,0x40,0x49,0xaa,0x01,0xdf,0x68,0x67,0x73,0x31,0x2c,0x98,0x2f,0x8c,0x9e,0x2d,0xce,0x4a,0x71,0xbc,0x6f,0x90,0x1d,0xc0,0x37,0x07,0x30,0x0c,0xa3,0x04,0xfb,0xd1,0xd0,0x0e,0xcb,0xdc,0x94,0x06,0x7f,0x83,0xe5,0x45,0x47,0xd0,0x71,0x06,0x94,0x23,0x7c,0x03,0x80,0x46,0xa5,0x10,0x08,0xd1,0xdb,0xfb,0x9d
.byte	0xd4,0x05,0x01,0x5e,0x66,0x4d,0xf9,0x32,0x9b,0x5b,0xfe,0x7a,0x60,0x63,0x77,0x9a,0x31,0x34,0xe5,0x9a,0x82,0x2d,0x2b,0xb7,0xe0,0x04,0x8f,0x86,0xf3,0xb2,0x16,0x86,0x50,0x37,0x9d,0x80,0xe7,0x62,0xdf,0x77,0xda,0xf4,0xfc,0xb7,0x42,0x9d,0xac,0xcb,0x11,0xff,0x0c,0x6f,0x4e,0x16,0x0c,0x59,0x04,0x05,0x8f,0x88,0x64,0x37,0xe6,0x6c
.byte	0xee,0x64,0x58,0x79,0x60,0xd4,0x2f,0xb7,0x90,0x59,0xfb,0x82,0x3b,0x20,0x2e,0x2b,0xba,0x15,0xfb,0xf7,0x5b,0x1d,0x81,0x8a,0x8a,0x8f,0xe3,0x39,0x92,0x34,0xfc,0x3a,0x67,0xce,0xb6,0xa0,0x9b,0x56,0x78,0x96,0x4d,0x32,0xbf,0x9c,0x83,0x9e,0x19,0x66,0x20,0x42,0xb2,0x78,0x62,0x42,0xdd,0xdf,0x98,0xab,0x0c,0x3d,0x41,0xb5,0x74,0xc1
.byte	0x2d,0xf0,0x02,0x58,0x6e,0xb3,0x4d,0x7b,0x41,0x1c,0xf1,0x09,0xc1,0xbb,0x84,0x67,0xf8,0x24,0x77,0x32,0xcd,0x7a,0x63,0x87,0x0d,0xf2,0xc5,0xaf,0xe4,0xb5,0xc6,0x3b,0xad,0x66,0x5e,0xae,0x90,0xc2,0x24,0x27,0x7a,0x0b,0xed,0x1b,0x86,0x5d,0x02,0x19,0x85,0x78,0xc8,0xb1,0xce,0xe7,0xc9,0x5c,0xce,0x43,0x58,0xac,0x1c,0x4e,0xcd,0xb8
.byte	0x3a,0xb8,0x7a,0xf3,0x79,0x4b,0x97,0xcf,0xbe,0x88,0x24,0xd0,0x9a,0x5a,0x55,0x43,0x0c,0x48,0xa2,0x7f,0xaf,0x4b,0xd8,0x16,0x02,0xfb,0xe6,0x0c,0x6b,0x85,0xb4,0xb8,0x5e,0x40,0x60,0x5d,0x93,0x51,0xc6,0x32,0xb9,0x4a,0x23,0x96,0x71,0xeb,0xe8,0xe8,0x01,0x1e,0x85,0xb0,0x47,0xde,0x86,0x15,0x52,0x3a,0xb2,0xd3,0x86,0x4b,0x78,0x09
.byte	0x9c,0x6e,0x9d,0xd9,0xef,0xe8,0x64,0x2d,0x2a,0xec,0x21,0x5a,0x60,0xa5,0xe4,0x26,0xbb,0x79,0x0c,0xdb,0x48,0xd6,0x4b,0x5c,0x5b,0xe3,0x34,0xc9,0x96,0xf0,0xcb,0x68,0x8a,0x2d,0xee,0xa3,0x37,0x34,0x5f,0x3e,0x65,0x40,0xce,0xe1,0xc8,0x2e,0x11,0xca,0x42,0x51,0x53,0x72,0x3d,0xa9,0x68,0x54,0xb4,0xd8,0xd7,0x72,0x84,0x8d,0xcd,0x6d
.byte	0x1f,0x0e,0x0c,0x0f,0x32,0x3a,0x7d,0xdd,0xc1,0xd3,0xe7,0x2d,0x1f,0x52,0x8b,0x73,0x86,0x70,0x2a,0xcb,0x71,0x37,0xa1,0xab,0xe3,0x94,0x5a,0xd7,0x9d,0x68,0xc1,0x6e,0x5d,0x72,0x25,0x81,0xe8,0x45,0xad,0x6c,0xf8,0xdb,0x9b,0x70,0x31,0xb9,0xf0,0x4f,0x23,0xd7,0x03,0xc8,0x87,0x43,0x51,0x7a,0x55,0xfe,0x6f,0x2d,0x40,0xbc,0xfe,0xdf
.byte	0xe6,0x21,0x4b,0x4d,0xc6,0x02,0x48,0xe7,0x7a,0x2a,0xef,0x91,0xdf,0xbc,0x98,0x91,0x6f,0x59,0xc4,0x47,0x77,0x2e,0x45,0x45,0x23,0x47,0x5d,0xf8,0x50,0x41,0x84,0x75,0x8a,0xe7,0x4d,0xfb,0xeb,0x58,0x00,0xcf,0x42,0xca,0x02,0x05,0xc7,0xfa,0x11,0xfb,0x6e,0x90,0x7d,0x53,0xa0,0x19,0x23,0x24,0x8f,0x89,0x17,0x40,0xbe,0x11,0xfb,0xd9
.byte	0x04,0xf8,0x84,0xeb,0x90,0x7c,0x84,0x45,0x9c,0x53,0x45,0x5e,0x45,0x51,0x55,0xfc,0xf1,0x6b,0x02,0x24,0xfd,0x95,0x4a,0x40,0x80,0xdc,0xa6,0x94,0x15,0x2c,0x1d,0x85,0xa0,0x07,0x8d,0xf8,0xf2,0x95,0x0c,0xa0,0x4e,0x5a,0x5b,0x29,0x09,0xcc,0xf3,0x4e,0x8e,0xea,0xe8,0x26,0xb8,0xbe,0xb2,0x6f,0x76,0x6f,0xa4,0xe5,0x6a,0x50,0xcf,0xc8
.byte	0x7d,0xb6,0x1e,0x9d,0x90,0x6b,0xde,0xe2,0x55,0x49,0x97,0x00,0xa5,0xc5,0x1f,0x1c,0x41,0x66,0xe7,0x6b,0x20,0xb2,0x1e,0xc7,0xb3,0xd4,0xa9,0x75,0xbb,0x83,0x24,0xd0,0xdf,0xbd,0xba,0x2c,0x2f,0xa4,0x03,0x1d,0x17,0xc5,0x74,0xc2,0x6a,0x20,0x71,0x18,0xd1,0xc5,0xb0,0x78,0xfe,0xda,0x55,0xd2,0x43,0x2a,0xd8,0x88,0x74,0x75,0x86,0x07
.byte	0xe9,0x8b,0x0d,0x0f,0xe5,0x8d,0xe8,0x3d,0xf4,0x93,0xde,0x4c,0x97,0x98,0xe2,0x9b,0x22,0xde,0x13,0x18,0x8b,0xc5,0xe1,0x6f,0x6d,0xb4,0x19,0x46,0xff,0xbd,0xa6,0x2e,0xe6,0x48,0xcd,0x66,0x22,0x7d,0xf4,0x0e,0xeb,0x74,0x25,0x5c,0x90,0x0e,0x26,0xce,0x17,0xe9,0xdb,0x30,0xb9,0x25,0x99,0x96,0x46,0x3a,0x78,0xa3,0x76,0x2d,0x9e,0x42
.byte	0x06,0x8a,0x1e,0x62,0x46,0xa4,0xd0,0x1d,0xe2,0x4c,0x3c,0xb4,0x4c,0xc0,0xd1,0xf7,0x05,0x5b,0xe4,0xd4,0x71,0x73,0x31,0xfc,0x98,0x2a,0x55,0xb0,0x78,0x92,0x59,0x8b,0x25,0x97,0x15,0xf2,0xf9,0x57,0x8b,0x7c,0xd4,0xc4,0x47,0x2f,0x10,0x3b,0x76,0xde,0x5f,0xb1,0xdf,0xdc,0xb0,0x15,0xd5,0x4a,0xd2,0x54,0xad,0x5e,0x32,0xf4,0x5a,0x1a
.byte	0x8d,0xe8,0xa0,0x4a,0x4e,0x04,0xdc,0xdd,0xd2,0x57,0xe5,0x24,0x4b,0x93,0x51,0xef,0xd4,0xba,0x3f,0x77,0xfc,0x0a,0x5c,0x7d,0x6e,0xa7,0x86,0xe5,0x88,0xd1,0xac,0x74,0x46,0x9a,0x39,0xb6,0x98,0x3d,0xae,0x89,0x4e,0xea,0x8d,0xdc,0xc7,0xb9,0x0c,0xd7,0xa6,0x06,0x4d,0x28,0x2b,0x51,0x2b,0xdb,0x30,0x4a,0x91,0x1c,0x40,0x89,0xe4,0xba
.byte	0x72,0xd5,0xed,0x16,0x66,0xb8,0xef,0x81,0xd9,0x51,0xf8,0x1b,0xff,0xab,0x8b,0x52,0xb8,0xf3,0x11,0xb3,0xe5,0x04,0x5a,0xb0,0x60,0xa3,0x35,0x12,0x6a,0xa0,0x75,0x5c,0x21,0xa9,0x5a,0xe8,0xd3,0xd7,0x8a,0x1f,0xe0,0x9b,0xb7,0x1e,0x7d,0xbe,0x81,0xaa,0x56,0x5a,0xd8,0x2d,0x7e,0x0c,0x60,0xb2,0x68,0x26,0x6d,0xaa,0x8b,0xcc,0x11,0x40
.byte	0x25,0xea,0xc9,0x94,0xfb,0x3b,0x9b,0xa7,0x3a,0xde,0xd9,0xfe,0x6b,0x4b,0xfc,0x3f,0xbf,0xdd,0x51,0x9b,0xa1,0xca,0x2f,0xed,0x33,0xd8,0x3d,0x92,0xa4,0x1d,0xee,0xb2,0x47,0xd0,0x72,0x6a,0x96,0x33,0x0f,0xdd,0x0a,0xd9,0xbd,0x86,0xdb,0x25,0x53,0x0e,0x3c,0x31,0xad,0x05,0xb9,0x24,0x13,0x00,0xdf,0xc2,0x7c,0x3d,0x03,0x9b,0xf6,0x6d
.byte	0x93,0xd9,0xdf,0x73,0xf8,0x1c,0x98,0xe2,0x77,0x46,0x46,0xdc,0x07,0xe6,0xbb,0xc1,0xa7,0xb6,0xbe,0x21,0x07,0xae,0xdb,0xca,0x69,0x2d,0x8a,0x2b,0x59,0x27,0xe0,0x7c,0xf0,0xf1,0x34,0x69,0x97,0x44,0xba,0xbb,0x48,0x9f,0xd9,0xd8,0x16,0x1a,0xef,0x11,0x68,0xb6,0xaf,0x3a,0x10,0xc6,0x7c,0xd1,0x12,0xc7,0x89,0x47,0xe3,0xd1,0x24,0xc6
.byte	0x44,0x9f,0x7e,0x6a,0x66,0x43,0x48,0xd6,0x9f,0x7b,0xf0,0x1f,0xd2,0x5f,0x2b,0xa7,0x13,0x6a,0x7c,0x70,0x08,0x38,0xb0,0x00,0xbc,0x7c,0xd3,0x01,0x9b,0xf6,0x29,0xd3,0x9c,0xa4,0x11,0x90,0xe4,0x9f,0x04,0xd6,0x21,0xec,0xfd,0xcb,0xb8,0xe6,0xb6,0x49,0x2b,0xfa,0x4b,0x90,0x9e,0xc6,0x0c,0x87,0xff,0x5e,0x2e,0xcc,0xf8,0x09,0x70,0x52
.byte	0x42,0xec,0x88,0xac,0x1e,0x76,0x2b,0xeb,0xfc,0xb3,0x65,0x81,0x34,0xb1,0x06,0x90,0xde,0xb2,0xc4,0xd3,0xfd,0xd4,0x9c,0x78,0x1a,0x5c,0x8f,0x65,0x0a,0xbd,0x88,0xe5,0x95,0x06,0xb5,0x94,0xe5,0xbf,0x90,0x31,0xbb,0xcb,0xce,0x19,0x51,0x25,0x4a,0x47,0x35,0x26,0x93,0xdb,0xe2,0x93,0x36,0x47,0x7d,0xdd,0x4e,0xd5,0xeb,0xdd,0x63,0x1c
.byte	0xbc,0x2d,0x75,0xdb,0xd4,0xfa,0x60,0x4b,0x51,0x45,0x32,0x0f,0x01,0xf9,0x73,0x9b,0xd8,0xbc,0xee,0xaa,0x7d,0x2e,0xfe,0xbf,0x9d,0x45,0xae,0xe2,0x01,0xe3,0xbf,0x58,0xdc,0xc0,0xb8,0xe8,0x44,0x16,0x3b,0xd8,0xaa,0x3b,0x13,0xca,0xfb,0x5f,0x8d,0xb3,0x2a,0x83,0x66,0x49,0xae,0x54,0x02,0x4e,0xd8,0x68,0xee,0x21,0x1a,0xbb,0xf4,0xf7
.byte	0xdf,0xf1,0x51,0x7b,0x62,0xa8,0xb2,0xdc,0x4b,0xd4,0x04,0xd2,0x05,0x49,0xdd,0xa4,0x75,0xe6,0x64,0x82,0xe7,0x25,0x55,0x60,0x2c,0x9f,0x8a,0x7a,0x11,0xe9,0xf2,0x72,0xfe,0x89,0xe1,0xaf,0xca,0x0c,0xb9,0xf5,0xcc,0xcf,0x07,0xef,0x8f,0xbb,0xef,0x53,0x1e,0xe2,0xfb,0x98,0xe8,0x05,0xab,0x4e,0x7e,0x38,0x56,0x24,0xd5,0x74,0x1c,0x95
.byte	0x1a,0x0e,0x62,0x92,0x80,0x16,0x45,0x78,0x2f,0xb1,0xe1,0x83,0x24,0x2b,0x16,0x5c,0x05,0x52,0x17,0xe9,0xe8,0x9e,0x5d,0x63,0x8f,0x77,0xc4,0x89,0x22,0x76,0x43,0x31,0xfd,0x09,0xc0,0x51,0x70,0x57,0x2d,0x51,0x91,0xe5,0x61,0x3f,0x77,0xff,0x17,0xfc,0xa6,0x19,0x9d,0x82,0x46,0x11,0x0c,0x77,0x19,0x2a,0xf5,0x19,0xb4,0x3d,0xa6,0xd4
.byte	0x8b,0x07,0x4b,0xc6,0xa3,0x1e,0x8c,0xf5,0xe8,0x2d,0xe7,0xcc,0xa1,0x38,0x57,0x66,0x76,0x1d,0xdd,0xe3,0xb9,0x0a,0x1e,0x2c,0xad,0x09,0x07,0x26,0xff,0x7a,0xc0,0xb0,0x51,0x71,0x44,0x6d,0x2c,0x39,0x3d,0xa6,0x14,0x4e,0x74,0x2c,0x54,0x3d,0xfa,0xdc,0x2e,0x0c,0xc4,0x88,0x32,0xda,0xb0,0x9d,0xf4,0x2c,0x0a,0x1b,0xb7,0xb4,0x78,0x6f
.byte	0x1b,0x6a,0x21,0x03,0x4e,0xe0,0x87,0xa0,0x1c,0xd8,0xe6,0x0c,0x97,0x47,0xde,0x98,0x81,0x3d,0x39,0x93,0x3d,0xcb,0x29,0xa3,0x93,0x8d,0x27,0x5d,0x29,0xb5,0x85,0xc4,0x32,0xd8,0xdc,0x19,0xb1,0x63,0xdc,0x76,0x32,0xc3,0x52,0x9a,0xfd,0x3d,0xff,0xf9,0x94,0x55,0x72,0xbb,0x4d,0xe2,0x42,0xd2,0xf7,0xb2,0xac,0xac,0x5d,0x50,0x95,0xda
.byte	0x3a,0x87,0xb6,0x0f,0x27,0x72,0x34,0xe7,0xe8,0x9f,0xc7,0xba,0xca,0x8d,0xf3,0xb9,0xa1,0xdd,0xd7,0xa5,0x70,0x3b,0xcc,0x72,0x0e,0x9d,0x85,0x75,0x01,0x11,0xe1,0xc2,0xca,0xcb,0x40,0x3a,0x31,0xf2,0x5d,0x0c,0x63,0xc8,0xbf,0x38,0xde,0x09,0x3b,0x32,0xaa,0x6c,0x07,0xd2,0x2b,0x3b,0x94,0x37,0xd0,0xd9,0xe0,0x4c,0x25,0xa3,0x22,0x64
.byte	0x05,0xcc,0x69,0x9e,0x73,0xd4,0x46,0x2c,0x73,0x23,0xd0,0x6f,0x09,0xff,0x8b,0xef,0x7a,0x08,0x3e,0xa2,0xa7,0x9d,0xf5,0xc9,0x40,0xd1,0x06,0xd6,0xe3,0x89,0xa5,0xcc,0x9f,0x40,0x67,0x80,0x11,0xec,0x5d,0x23,0x19,0xf3,0x66,0xaf,0x06,0xcc,0xe4,0xb6,0x5e,0x20,0xf7,0x19,0xce,0x1a,0xb6,0x86,0x0d,0x39,0x1d,0xc8,0x0a,0xdb,0x50,0x52
.byte	0x7e,0x3b,0x96,0x9f,0x05,0xdd,0xd8,0xdf,0x40,0xdf,0xe4,0x66,0x14,0x4d,0x4e,0xb3,0x9f,0x86,0x7b,0xc2,0x99,0xc3,0x8f,0xb9,0xe7,0xc3,0x50,0xa4,0xab,0xb8,0x8e,0xc5,0x28,0xce,0x8b,0x51,0xcb,0xad,0xd8,0x1a,0x23,0x7d,0x12,0xc2,0xaf,0x1a,0x93,0x4c,0x57,0xe9,0x59,0x6a,0x03,0x65,0x81,0x07,0x40,0x84,0x92,0x9d,0x22,0x8a,0x3d,0x27
.byte	0x39,0x05,0xdd,0xf7,0x20,0xad,0xc2,0x03,0x27,0x87,0x8e,0xc1,0x23,0xad,0xe5,0x59,0x16,0xe7,0xde,0xe4,0x44,0x6b,0x06,0xb5,0x1d,0xaf,0xda,0x08,0x4a,0xfa,0x75,0x1a,0x0b,0x35,0xe8,0x6e,0x29,0xd3,0x79,0x19,0x80,0xb9,0x5f,0x36,0xec,0x43,0x25,0x3c,0xbc,0xcf,0x70,0x0c,0xc7,0x2c,0xbc,0x2e,0x72,0x40,0x73,0x98,0x11,0xc9,0x72,0x9f
.byte	0xd9,0x95,0x9f,0x8d,0x4a,0x52,0xbb,0x89,0x30,0x5b,0xa2,0x7e,0x0c,0x21,0x11,0xda,0x4e,0xa1,0x7c,0xc1,0x0f,0x95,0x1b,0x5b,0x2e,0xbd,0xae,0x8a,0x56,0x82,0x8f,0x84,0x43,0xdf,0x24,0xac,0x99,0xaa,0x8a,0xaf,0x82,0x33,0xf7,0x0a,0xbf,0x5e,0xfd,0xf2,0x91,0xf0,0xe1,0x5d,0x4e,0xa5,0x16,0x6e,0xb4,0x39,0x8b,0x99,0x32,0x6b,0xc8,0x16
.byte	0xc1,0x84,0x10,0xc2,0x74,0x54,0xfc,0x02,0x71,0x44,0xfc,0x52,0xfa,0xc2,0x3c,0x8d,0xf7,0x8b,0x1e,0xcc,0x5e,0x43,0x66,0x29,0x29,0x93,0xe7,0xf6,0x9f,0xa8,0xa3,0x35,0xc9,0xde,0xb0,0xbe,0x4d,0xdf,0x8c,0x61,0x5a,0x6b,0x16,0x88,0x33,0x65,0x47,0x98,0xd2,0xf8,0x71,0x09,0x9f,0x00,0xb6,0x9e,0x21,0x37,0x2a,0x0b,0xb4,0x74,0x6b,0x0e
.byte	0x6e,0x4d,0x14,0x45,0x6c,0x1b,0xa8,0x4c,0xa7,0xc6,0xc3,0x36,0x6e,0x9e,0x63,0x5a,0x36,0x76,0x04,0x06,0x7f,0xdd,0x74,0x24,0x19,0xd8,0xb7,0xbc,0x6c,0x52,0x82,0x67,0x6b,0xd5,0xcb,0x81,0xdf,0xd7,0xe4,0xdd,0x14,0x33,0x71,0xcf,0x6b,0x7f,0xaf,0x66,0x27,0x8a,0x70,0xb8,0x45,0xae,0x8c,0x1a,0x65,0xd3,0x16,0x5c,0x05,0x65,0xd0,0xfb
.byte	0x07,0xe3,0x98,0xa9,0x94,0x27,0x6c,0xac,0xfc,0xee,0x1b,0x35,0x43,0xd6,0x3b,0x41,0x1c,0x86,0xc0,0x4f,0xf3,0x63,0xf4,0xba,0x4d,0xdf,0x6a,0xda,0xcf,0xb5,0x9f,0x69,0x3f,0x3d,0x0c,0x80,0x79,0x02,0x34,0x4a,0x9a,0xfd,0xb6,0xea,0x0b,0x61,0x32,0x67,0x2d,0x6a,0x6b,0xcb,0xcf,0xa6,0xee,0x6a,0x93,0x11,0x00,0xb8,0x6e,0x27,0x88,0x62
.byte	0xf7,0x4c,0x7b,0xe1,0x13,0xe1,0x47,0xaf,0x96,0x24,0x3b,0x46,0x8c,0xf4,0xbe,0x13,0xed,0x65,0xe1,0xf2,0x36,0x2d,0xa4,0x6d,0x5e,0xa6,0x93,0xfb,0x64,0x0e,0xbd,0x50,0xdc,0x29,0x4f,0x90,0x8e,0xe1,0x7f,0x5e,0x47,0x08,0x9b,0x1c,0xb7,0xce,0x06,0x80,0x52,0xc0,0xb5,0x82,0x77,0x49,0x3c,0xe0,0x70,0x1f,0x84,0x75,0x9e,0x19,0xb2,0x83
.byte	0xda,0x40,0xf8,0xd7,0x27,0x1e,0xbc,0x39,0xb5,0x1d,0x25,0x75,0x63,0x7d,0x85,0x2f,0x09,0x07,0xe9,0x73,0x8e,0x2b,0xb8,0x9a,0xbe,0xd6,0x90,0x91,0x6e,0xdb,0x7c,0x9d,0x9b,0x43,0x1d,0x21,0x88,0x76,0xb0,0xaa,0x7b,0x68,0xe4,0xa7,0x92,0x64,0xe4,0x1f,0xff,0x53,0x1d,0xf7,0xc0,0x44,0x5c,0x0a,0x1e,0xcd,0xa7,0x6e,0x41,0x1c,0x8c,0x7d
.byte	0x66,0xa7,0xf6,0xfc,0xa9,0x0d,0x3f,0x9c,0xfb,0x15,0x87,0x14,0x20,0x43,0x1b,0x05,0xf5,0xea,0x5c,0x07,0x61,0xb3,0x0e,0x7c,0x52,0x57,0x1c,0x09,0x33,0xb4,0xd8,0x3d,0x9d,0x17,0xee,0x86,0x25,0xdc,0x6b,0xcd,0x58,0xb7,0x18,0xbd,0x85,0x39,0x0b,0xb9,0xb8,0x35,0x3a,0x86,0xbb,0x88,0xb5,0x5e,0x4b,0x0a,0x7e,0x9c,0x02,0xb5,0x45,0xe5
.byte	0xc7,0x38,0x56,0x1e,0xe4,0xe7,0xf7,0x88,0xac,0x75,0x9a,0x97,0xa8,0x15,0xb6,0x2d,0xcf,0x2a,0x59,0x65,0x0e,0x00,0x9f,0x8e,0xa9,0x94,0x23,0x1c,0x40,0xe4,0xb9,0x6b,0xcf,0xf0,0x53,0x7f,0x98,0xd1,0xa7,0x72,0xd7,0xe3,0x22,0xfd,0x5f,0x3d,0x3f,0xd6,0x21,0xb4,0x84,0x0c,0x1b,0x1d,0x00,0x2d,0x8f,0x72,0x22,0x2d,0x2c,0x8c,0x54,0x46
.byte	0xe5,0x53,0xca,0x66,0x67,0x5e,0xb3,0x62,0x6f,0xaf,0x33,0x81,0xc1,0xf6,0x77,0x92,0x3e,0xdb,0x74,0x68,0x93,0xca,0x38,0xf8,0x18,0x50,0xef,0xe4,0xc9,0x45,0x40,0xc9,0xf0,0xc5,0x7a,0x4b,0xf2,0xd8,0xca,0x72,0x62,0x5f,0x67,0x10,0x10,0xcc,0xff,0x1a,0xc7,0x9c,0x3a,0x7f,0xca,0x11,0x67,0x3e,0xca,0xa6,0x9c,0x48,0x15,0xaf,0x68,0xb7
.byte	0x2b,0xa7,0xa2,0x68,0x7b,0x40,0xb2,0xe3,0x27,0x18,0x7e,0x94,0x4c,0xca,0x0e,0x5b,0x3a,0x30,0xcb,0xc3,0x72,0x31,0x6b,0xe6,0x3e,0xa7,0x09,0x3e,0xf2,0x53,0xda,0x7d,0x6f,0x55,0x08,0xd2,0x26,0xc3,0x07,0x52,0x38,0x90,0x04,0xc6,0x3c,0xb6,0xb5,0x2a,0x7b,0x38,0x07,0x9e,0xb4,0xa5,0x48,0x36,0xf5,0x5e,0xac,0xa8,0x97,0x4e,0x37,0xc2
.byte	0xee,0x12,0x88,0x28,0xd0,0x7d,0xd1,0xae,0xc0,0xc7,0x84,0x69,0x25,0x79,0x9a,0x8a,0x16,0x49,0x50,0x72,0x69,0x1a,0x02,0xc9,0xfe,0xd5,0x2c,0x40,0xc6,0xc8,0x8b,0x7d,0xe3,0xab,0x89,0xe3,0x78,0xf1,0xe9,0xbd,0x3c,0xbd,0x02,0x96,0xfe,0x0c,0x5c,0xc4,0x9e,0x89,0x3a,0x4b,0xe9,0xcd,0x41,0x1c,0x59,0x71,0x52,0xb0,0xc9,0x36,0xf1,0x80
.byte	0xab,0x5e,0xbc,0xf1,0x20,0x99,0xc0,0xab,0x0c,0x59,0x43,0xc2,0xcd,0x09,0xa6,0x30,0x91,0xfa,0x12,0x23,0xbe,0x18,0x24,0xa6,0xbf,0x55,0x4c,0xe8,0x22,0xff,0x01,0xbd,0xde,0x2c,0x72,0x3c,0x0a,0x36,0xd5,0x7e,0xed,0x6a,0xe3,0x63,0x14,0x60,0xa3,0x0a,0x6f,0x04,0x90,0x64,0xc1,0xd1,0x78,0x54,0xae,0x19,0x74,0xe2,0xea,0xec,0x86,0x22
.byte	0xc7,0xdb,0xf6,0x48,0x0e,0x75,0x43,0x04,0xf7,0x62,0xe6,0xa9,0x46,0x65,0xcc,0xa5,0xa4,0x1a,0xb2,0x94,0x7b,0x7a,0x8c,0x9a,0x80,0x62,0x32,0x17,0x80,0xc3,0xc6,0x54,0x0e,0x4e,0xe3,0x46,0x74,0xa8,0xae,0xcd,0xd0,0xc1,0x19,0x84,0x61,0xb4,0x1d,0x18,0x4d,0x80,0xf1,0x70,0x40,0xbe,0xa2,0xa3,0x38,0xcc,0x21,0x1c,0x2f,0x72,0x85,0x72
.byte	0x0a,0xa1,0x0d,0xa3,0xdc,0xa2,0xf4,0x64,0x84,0x3c,0x43,0x6d,0xfb,0x45,0x11,0xf9,0x40,0xdc,0x25,0x85,0x80,0x41,0x84,0xa7,0x06,0x2e,0x79,0xbf,0x0c,0xa7,0x8f,0x17,0xea,0xa2,0xc4,0x6f,0xd8,0xc6,0x9e,0xab,0xdc,0x45,0x6f,0xaa,0xda,0xe9,0xe6,0x84,0xf0,0x5f,0x8a,0x90,0x99,0x33,0x9b,0xcf,0x03,0xe6,0xce,0x19,0x0c,0xad,0x2f,0xad
.byte	0x81,0xb8,0x17,0xff,0x6b,0xff,0xc8,0x14,0xa6,0xf4,0x37,0x55,0xdc,0xbb,0x09,0x3c,0x3c,0xe7,0x29,0x95,0x23,0x5c,0x58,0x92,0x2e,0x95,0xe8,0x3b,0x8b,0x81,0x2d,0xfd,0x58,0x8a,0x1f,0xdf,0xf1,0x54,0xa3,0xd0,0x01,0xaa,0x3d,0x32,0x61,0xe5,0x8e,0x62,0xa7,0xf6,0x3b,0x2d,0x0e,0xff,0xf4,0xe9,0x08,0xe7,0xef,0x3a,0x63,0x10,0x34,0x49
.byte	0x14,0xe1,0x88,0xd0,0xb2,0x1d,0xb7,0x31,0xc9,0xa4,0x48,0xa8,0xaf,0x64,0x29,0xab,0x1f,0x14,0x13,0xa7,0xb8,0xb8,0xa4,0x24,0x1d,0xf9,0xb6,0x3e,0x62,0xa6,0x5e,0x10,0xcb,0x44,0x5c,0x9d,0x2c,0x58,0x3a,0x36,0xa3,0x81,0x9f,0xa9,0xa4,0xa1,0x06,0x1d,0xbf,0x97,0x03,0x88,0xf2,0xf4,0x81,0x3e,0x1b,0x35,0xea,0xd0,0xb6,0x96,0xa1,0xf7
.byte	0x1e,0x49,0xb7,0xe8,0x23,0x6f,0x05,0x7c,0x9f,0xc4,0x53,0xb1,0x63,0xdc,0x07,0xbb,0xd6,0x57,0x85,0x4d,0x77,0x33,0x21,0xbf,0x77,0xfe,0xfe,0x34,0x52,0x02,0xe7,0xe4,0x87,0x11,0xa0,0xfd,0x11,0x4a,0x34,0x36,0x88,0x69,0xdf,0x77,0xfd,0x83,0x71,0xa8,0x68,0xed,0x49,0x39,0xb4,0x06,0x32,0x48,0xf1,0xd2,0x4e,0x61,0x47,0x65,0x26,0x87
.byte	0xba,0x2b,0x2e,0xf4,0x12,0xfc,0xd0,0x84,0x81,0xa1,0x59,0xdc,0xe3,0x13,0x51,0x9e,0xea,0x57,0x56,0x3b,0x7c,0x71,0x6b,0xff,0xe9,0xf8,0xec,0x3e,0xe7,0xbe,0x65,0x47,0xe1,0x6f,0x8f,0x7c,0x3a,0x77,0xdb,0x75,0x4a,0x43,0x43,0x39,0x37,0xb2,0x68,0x16,0x72,0xdb,0x49,0xf7,0x13,0x3c,0x09,0x93,0xef,0xc1,0x2a,0x99,0xff,0xc7,0xdb,0xd9
.byte	0x80,0xd2,0xfe,0x7c,0x39,0x50,0x21,0xdc,0x1d,0xae,0x9b,0xfc,0xd4,0x5f,0x56,0xae,0x6a,0xd9,0x35,0xa1,0x2b,0xd6,0x53,0x90,0xe8,0x8c,0x31,0x73,0x0f,0xa3,0x9e,0xa1,0x2f,0x76,0xa8,0x72,0x4d,0x5e,0x58,0xca,0x9f,0x8f,0xdf,0xf0,0xf9,0x6a,0x54,0xb1,0x5f,0x39,0x03,0x7a,0x26,0x06,0x71,0x74,0x6f,0x42,0xee,0x63,0x76,0x13,0xb9,0xed
.byte	0x74,0xad,0xf9,0xe0,0xa7,0x35,0x9c,0x18,0xe0,0xf7,0xc5,0xb2,0x27,0x14,0x0f,0xd7,0xaa,0x17,0x1c,0x8f,0x50,0xc8,0xb0,0xc2,0x63,0xff,0x38,0x65,0x87,0x69,0xb3,0xd5,0x3f,0xb4,0xf2,0xe8,0x8b,0x7b,0x24,0xdc,0x1f,0x62,0x2f,0x0a,0xd7,0x2d,0x0f,0x6f,0x48,0x1d,0xf0,0x3c,0xb1,0xb4,0x10,0x8d,0xc6,0x5c,0x79,0x30,0xde,0x20,0x9e,0x7b
.byte	0xf1,0xa5,0x73,0x38,0x05,0x1b,0x13,0x78,0xb1,0x02,0x2f,0x32,0x2a,0x07,0x59,0xa4,0xfc,0x88,0x08,0x0c,0xff,0x42,0x72,0x6a,0xb0,0x8a,0xc9,0x3d,0xdb,0x04,0x90,0xdd,0x0b,0xbc,0x3a,0x4e,0xfa,0xd4,0x57,0xd8,0x2f,0x7b,0xcb,0xd9,0x6a,0xe7,0xfd,0x32,0x17,0x99,0x20,0x64,0x1e,0x76,0x07,0xb9,0xa3,0x58,0x7f,0x79,0xda,0x0c,0xe0,0xec
.byte	0x30,0xbf,0xa4,0x85,0x0a,0x39,0xc0,0xe9,0xf7,0xbe,0xd1,0xa7,0x94,0x1f,0xa6,0x6d,0xe8,0xc5,0x1b,0x04,0x27,0xf4,0xdc,0xc2,0x4d,0x9a,0x0e,0x9b,0xe8,0xec,0x56,0x99,0x90,0x5f,0x8b,0x28,0x0a,0x92,0xaf,0x0b,0xa1,0xd2,0x85,0x86,0x26,0xc7,0x8a,0x01,0xa4,0x08,0x29,0x32,0x7d,0x3d,0xa5,0x74,0x9c,0x90,0x63,0x83,0x1f,0xd4,0xee,0x98
.byte	0xf5,0x14,0xff,0x39,0xeb,0xbf,0x40,0xa4,0xc9,0x70,0x4f,0x81,0x03,0x19,0xef,0xf5,0xdf,0xf7,0x00,0x75,0xcb,0x2e,0x81,0x41,0xc5,0xda,0xfb,0x67,0x6a,0xf0,0xa3,0xd3,0x5a,0x60,0xaf,0x72,0x27,0x3e,0xad,0x37,0x3e,0x3d,0xe6,0x85,0x4c,0xa1,0xb0,0xe9,0xab,0xc5,0xd3,0x8b,0x04,0x0d,0x64,0x7f,0xa2,0xb9,0x6d,0x6d,0x28,0xf8,0x4b,0x43
.byte	0x78,0x51,0xf4,0x84,0xf1,0x3c,0x67,0xd8,0xdd,0xd7,0x0b,0x67,0xc3,0xd9,0x95,0x7b,0xfc,0x7d,0xc4,0x33,0x05,0x90,0xec,0x0a,0x98,0xfb,0x6b,0x0d,0xe9,0x8c,0x74,0x94,0x20,0xf8,0xcb,0xca,0xb6,0x72,0x07,0x7c,0xef,0xfa,0xd0,0x3f,0x51,0xc5,0x6e,0xf8,0x3f,0x37,0xe3,0xfe,0xb9,0x9a,0x9c,0xb3,0xf6,0x96,0x4e,0x65,0x77,0x21,0xcf,0xaf
.byte	0xe7,0x20,0x06,0xc2,0x93,0xc5,0x2e,0xc0,0x7f,0xe5,0x0a,0x42,0xad,0x89,0x64,0x6e,0x95,0xbf,0x95,0x1d,0x24,0x47,0xf8,0xd5,0xec,0x7c,0x1f,0x98,0x67,0x9c,0x5f,0x6e,0xaf,0x74,0x95,0x65,0x4c,0xb6,0xe0,0xd3,0xb7,0x5b,0xc7,0x76,0xe6,0x87,0x19,0xf5,0xc7,0xb0,0x2d,0xe0,0x8b,0xaf,0x6d,0x3c,0x31,0x6e,0x84,0xc8,0x86,0x51,0xff,0x29
.byte	0x2a,0x1f,0xea,0xd4,0x2d,0x1a,0x8f,0x04,0xb4,0xc0,0x6a,0x93,0xc2,0xc5,0xe7,0x98,0x8c,0xc7,0xff,0xbf,0xb8,0x8e,0x5b,0x29,0x5b,0xa6,0x87,0xc7,0x02,0x88,0x51,0x29,0x66,0xd8,0xf3,0x68,0x38,0xd4,0xa6,0xbd,0xa2,0x5c,0x1b,0xb7,0x13,0xd7,0x64,0xed,0x68,0x21,0x88,0x2b,0x59,0xba,0x95,0x84,0xda,0xce,0x61,0x3b,0x51,0x04,0x3e,0xc2
.byte	0xdd,0xec,0x0c,0x6b,0xbe,0x35,0x51,0x63,0x29,0x40,0xcb,0xa5,0x62,0xe4,0x27,0x35,0x15,0x1f,0x7c,0x8b,0xe5,0xd0,0x2e,0xde,0x8c,0x3d,0xa0,0xd2,0xbe,0x51,0x3d,0x65,0xed,0x94,0x8b,0x8c,0x00,0xda,0x0e,0x78,0x4d,0x25,0xef,0x8e,0x3c,0x55,0x77,0xeb,0x58,0x06,0x7d,0xd1,0xfc,0x73,0xad,0x76,0x0a,0x81,0xbe,0xda,0x50,0x30,0xf3,0xfd
.byte	0x58,0x25,0x0a,0x4b,0x1b,0x1e,0x0b,0xd0,0x9b,0xbc,0xb9,0x31,0x26,0xbc,0x4c,0x7b,0x05,0xd7,0x5c,0xe4,0x7a,0xdd,0xff,0x04,0xac,0x5d,0xcb,0xfd,0x91,0x34,0x68,0x26,0x1e,0xb4,0x86,0xcc,0xe3,0x90,0xaf,0x6a,0x65,0xda,0x6b,0x3e,0xec,0x44,0x90,0x72,0x7a,0x34,0xfc,0x7b,0x65,0x83,0x34,0x93,0xbc,0x85,0x50,0xdf,0x03,0x89,0x35,0xb8
.byte	0x6a,0x39,0xd3,0xb6,0x38,0x66,0x5b,0xa7,0x9e,0x93,0xa2,0x3b,0xb6,0xe7,0xee,0x1e,0x5c,0xd6,0xa8,0xd9,0x1f,0xf7,0xd1,0x0a,0x2f,0x87,0x63,0xf4,0xf9,0x8c,0xd4,0x7c,0x02,0xaf,0x7e,0xb6,0xc7,0xfc,0xc9,0x4d,0x35,0x0c,0x8c,0x3c,0x13,0x9d,0xe6,0xd7,0x2e,0x4b,0x91,0xcc,0x88,0xdb,0xfc,0x68,0x3a,0xd1,0x15,0x07,0x16,0x66,0x11,0x9b
.byte	0x66,0x9f,0x3f,0x37,0xae,0x11,0xba,0x5f,0xc7,0x3a,0x1a,0x49,0xbc,0x14,0x21,0x75,0xdc,0xcc,0xbb,0x5c,0xed,0xdc,0x8b,0x21,0x9a,0x8f,0x5f,0x91,0x6a,0x9b,0x26,0x33,0x64,0x45,0xa0,0xdf,0xc4,0xa1,0x32,0xc4,0x4c,0xc2,0x42,0x1b,0x59,0x37,0x1f,0xdb,0x01,0x6d,0xed,0xd8,0x05,0x5b,0x90,0x59,0x32,0x45,0x50,0x5d,0xf1,0x34,0xc4,0xb7
.byte	0x52,0x97,0xbb,0x42,0x12,0xf1,0xa5,0x76,0xe4,0x1a,0xbc,0x4a,0x64,0xd3,0x08,0xac,0xe1,0x49,0x70,0x61,0xc8,0xcf,0xb1,0xd3,0xc4,0x7f,0x38,0x31,0x6b,0xd3,0xe1,0xe1,0xe9,0x5b,0xaa,0x7a,0xec,0x26,0x81,0x44,0xd3,0xb9,0x63,0xea,0x37,0x98,0x15,0x41,0xf1,0xa1,0x72,0x87,0xcc,0x3b,0x6a,0x27,0x9b,0x85,0xa8,0x7b,0xb6,0x25,0xf9,0xd4
.byte	0x84,0x3e,0x66,0x12,0xce,0x24,0xee,0x22,0x51,0x73,0x7e,0xba,0x1e,0x95,0x64,0xc5,0xbf,0x4e,0x4f,0x73,0xc1,0xc3,0x98,0xb9,0x6b,0x90,0x1f,0x39,0xfc,0x03,0x55,0x76,0x8c,0x57,0xea,0xe8,0xc1,0x25,0x09,0x69,0xc0,0xe8,0x54,0x91,0xc1,0x7c,0x52,0x8e,0x82,0x6d,0xf2,0x0e,0x3f,0xa9,0x98,0x04,0x40,0xda,0x1c,0xc0,0xbb,0x42,0xf0,0x7d
.byte	0xed,0x78,0xb0,0x4f,0x94,0xba,0x0d,0xbf,0x60,0xbe,0x09,0x67,0x42,0xc5,0x41,0x4c,0x80,0x8d,0x30,0x10,0xa9,0xd2,0x07,0x8c,0xa8,0x40,0xc6,0xe2,0x08,0x42,0x7f,0x99,0xad,0xc5,0x66,0x1f,0xfd,0xd2,0xc5,0x79,0x77,0x9b,0x60,0x7d,0x25,0x2d,0x69,0x14,0x94,0xa5,0xf0,0x0a,0x14,0xb6,0xf9,0xbe,0x3a,0x4a,0x3d,0xc6,0x45,0x2e,0x27,0x4a
.byte	0xd1,0x1d,0xcf,0x08,0xee,0x93,0x3c,0xb5,0x8a,0xee,0xdd,0xf3,0x33,0xa6,0x35,0x9d,0xd8,0xb4,0x68,0xc5,0x98,0x09,0x78,0xcc,0xb3,0xeb,0x0f,0xcd,0x25,0xf8,0x17,0x9c,0x45,0x77,0xc7,0x06,0x40,0x44,0x90,0xec,0x6a,0xd9,0xf5,0x05,0xd4,0x88,0x17,0x47,0xeb,0x29,0x85,0x32,0x76,0x7b,0xa4,0xe3,0x65,0x30,0x50,0x9a,0x99,0x26,0x91,0x60
.byte	0xb0,0xb8,0xe5,0x8d,0x35,0x9e,0x9a,0x13,0x65,0x82,0xb2,0x4b,0xf1,0xed,0x1f,0xb7,0xb4,0xc0,0x03,0xe6,0x1d,0x2b,0xaa,0x1e,0x01,0x92,0x0b,0xcb,0x34,0x77,0x80,0x94,0xc2,0x4e,0x3b,0x73,0xd8,0x2e,0xd8,0x95,0x33,0x05,0x65,0xa2,0x99,0x29,0x7a,0xd1,0xb3,0xed,0x5a,0x8d,0x4d,0x6a,0x6d,0x69,0x2b,0x5a,0xa1,0x3a,0xc0,0x81,0x96,0xf1
.byte	0xc2,0xa7,0x4e,0x07,0x90,0x04,0x99,0x70,0xea,0x1a,0x3a,0x26,0xb5,0xed,0x92,0xbd,0x57,0x80,0x11,0x06,0xf2,0xb4,0x05,0x69,0x7a,0xbf,0x27,0xa1,0xbd,0xdb,0x09,0xe5,0xb3,0x2d,0x86,0x41,0xcc,0x5d,0x68,0x37,0x9e,0x98,0xa5,0x4a,0x20,0x8a,0x5f,0x54,0xae,0x4f,0x73,0xd0,0x22,0x18,0x8d,0x2b,0x91,0xcb,0xbb,0x83,0x1e,0x04,0x93,0xc8
.byte	0xc3,0x89,0x35,0xfd,0xda,0xeb,0x52,0x53,0x9f,0xdc,0x33,0xf0,0xe0,0x99,0x19,0x11,0xeb,0x55,0xd3,0x3c,0x5f,0xca,0x29,0x52,0xe7,0x6b,0xd1,0xad,0xeb,0xed,0x8e,0x68,0x82,0x91,0x85,0x81,0x68,0x70,0x78,0x61,0x1e,0x0c,0x09,0x3a,0x82,0xdc,0xdb,0x26,0x66,0x1c,0xa3,0x80,0x99,0x23,0x8a,0x45,0xd7,0xb8,0x10,0x97,0x80,0x70,0x49,0x78
.byte	0xa9,0x4c,0xf0,0xec,0xcc,0x05,0xd0,0x6a,0x6a,0x1a,0xa0,0xf7,0xde,0x78,0xc6,0x42,0xbe,0xbd,0xa0,0x24,0x1d,0x3f,0xdd,0xfb,0x92,0xc2,0xbd,0xd6,0x5c,0x25,0x74,0x3d,0x2b,0xb8,0x60,0x67,0xdb,0x70,0x1e,0xe8,0x9f,0xcd,0xb4,0x82,0x90,0x9e,0x2a,0x94,0xa5,0xa2,0xd4,0xd2,0x24,0xa7,0xca,0xbf,0xe1,0x8b,0xab,0xf3,0xd2,0x7c,0xa6,0xc8
.byte	0xe6,0xaf,0xef,0xe3,0x86,0xb1,0x42,0x1d,0xc6,0xa2,0x37,0x9b,0x26,0x46,0x0b,0xfd,0xee,0x88,0xa4,0xf1,0xa8,0x72,0xaf,0xda,0x30,0x56,0x22,0xd3,0x1b,0x31,0x76,0xd7,0x03,0xef,0xf3,0x98,0x16,0x4d,0x36,0x57,0x1b,0xd5,0x90,0xb8,0x67,0x50,0x7f,0x22,0xa8,0xdc,0x9c,0xf1,0x6e,0xa4,0x65,0x45,0xf0,0x73,0xd8,0x7e,0x41,0xb0,0x68,0x52
.byte	0x00,0x0a,0xda,0x99,0x6c,0x84,0xce,0xf0,0x73,0x65,0x93,0x52,0xc8,0x4b,0xb4,0x72,0xda,0x2c,0xa1,0x47,0xb5,0xe3,0x00,0x63,0xc0,0x4e,0x84,0x16,0x00,0xe6,0x1f,0xbd,0xba,0x49,0xcb,0xd3,0x7d,0xd2,0xeb,0x4a,0xb2,0xd5,0xb2,0x53,0x96,0xfb,0x04,0x73,0xc0,0x09,0x31,0xf3,0xf2,0xc0,0xd3,0xa6,0xe1,0xea,0xe1,0x58,0xbe,0x90,0xc9,0xfb
.byte	0x6e,0x13,0x69,0xbe,0x17,0xd4,0x16,0x5b,0xcb,0xf4,0x93,0x0a,0x38,0x46,0xea,0x64,0xad,0xb0,0x0d,0xc0,0x3b,0xfc,0xe3,0xd4,0x20,0x75,0x0c,0x3e,0x71,0x1b,0x5f,0xde,0xff,0xd6,0xfa,0x6f,0xe4,0x10,0xb0,0x14,0x05,0xaa,0x05,0x70,0x5e,0xbd,0x58,0x9f,0x3c,0x9d,0x4f,0xa7,0x5a,0x65,0x57,0x02,0x05,0x44,0xe0,0x95,0x9d,0xa2,0x60,0x06
.byte	0xcb,0xfd,0x91,0x8e,0x7f,0xce,0xa1,0x80,0x94,0xbb,0x88,0xf2,0xa6,0xe7,0x83,0xf9,0x38,0x8f,0x09,0x8e,0xe4,0xa9,0xc2,0xc7,0x84,0x9d,0x25,0x09,0x52,0x8b,0x32,0xaa,0x3b,0xde,0xb6,0x82,0x9f,0x6d,0xc4,0xdf,0x11,0xf7,0x72,0x1a,0xe4,0x00,0x51,0x41,0x01,0xba,0x21,0xea,0x0a,0xda,0xf2,0xbb,0x66,0xae,0x51,0x2b,0xb0,0x6d,0x1d,0xe8
.byte	0x4b,0x1e,0x42,0x68,0x3a,0xed,0xe6,0x59,0x13,0x42,0x07,0x54,0xae,0x2e,0x15,0x93,0xd7,0xff,0xad,0x49,0x09,0x41,0x52,0x6b,0x3b,0x9c,0x41,0x43,0x0d,0xed,0xed,0x6f,0xb8,0xe9,0x0d,0xcc,0xde,0x0d,0xaa,0x91,0xef,0x89,0x2f,0x2d,0x94,0xd0,0x03,0x2b,0x51,0x7f,0x85,0x9b,0x7b,0x08,0xc8,0xb6,0xe2,0x82,0x22,0xa9,0x57,0x71,0xf2,0xae
.byte	0x08,0xfa,0x6c,0xd8,0xca,0x78,0x42,0x98,0x23,0xfd,0x38,0x4b,0x6c,0xd3,0x9f,0xc6,0xa3,0xb2,0xc1,0x8c,0x4a,0xa3,0xcd,0x9f,0x56,0xe7,0xc2,0x06,0xd7,0xc5,0xc2,0xd9,0x98,0x57,0xc8,0x5a,0xaa,0xf4,0xaa,0x44,0x02,0x83,0x11,0x1e,0xf6,0x64,0x8d,0xf7,0x3b,0x86,0x3c,0x04,0x53,0x5f,0x62,0xc8,0x7a,0x0e,0x1c,0x4f,0xa8,0xe3,0x5c,0xe8
.byte	0x64,0xf7,0xe3,0x5d,0xea,0xb5,0x2d,0xdb,0x7b,0x0e,0xdb,0x91,0x34,0xd5,0x87,0x4f,0xe6,0x73,0xee,0x3d,0x79,0x7c,0x67,0x48,0xb5,0xbb,0x42,0x96,0x0d,0x9d,0xbd,0x68,0x98,0xe5,0x59,0x51,0x16,0x45,0x15,0xac,0x80,0x41,0xae,0x45,0xdb,0xe4,0x2a,0x44,0x0d,0xe4,0x25,0xc7,0xd3,0x06,0xf7,0x98,0x15,0xe1,0xc5,0x9b,0x34,0x0e,0x87,0xb8
.byte	0x90,0x1b,0x24,0x84,0x06,0x24,0xb0,0x80,0xbe,0x03,0xa0,0x95,0x10,0x1e,0x72,0xde,0x0f,0xd4,0x15,0x7b,0xa0,0xf5,0x42,0xc3,0x6f,0x10,0xe9,0x76,0x44,0xe3,0xa9,0xb7,0xef,0xf6,0xc2,0x80,0xe2,0x0c,0x2d,0xad,0xe0,0xb9,0x45,0xca,0x67,0x6f,0xb6,0xc5,0xc0,0x8d,0x25,0xee,0x50,0xeb,0x51,0xc6,0x87,0x87,0x61,0x3a,0x75,0x95,0x41,0x47
.byte	0x26,0xfd,0x35,0xf6,0x46,0xf4,0xe9,0x42,0xc6,0xef,0x37,0x97,0xb3,0x0a,0x1d,0xc8,0xdf,0x07,0x24,0xb1,0x0d,0x07,0x43,0x67,0x7d,0x81,0x09,0x58,0xdd,0xf6,0xcf,0xf1,0x47,0x42,0xbd,0x3c,0xa3,0xd7,0xe8,0x73,0xf9,0x5b,0xff,0x2c,0xcd,0xe6,0xd1,0xe9,0x47,0x6d,0x19,0x9b,0x6a,0x63,0x69,0xf4,0x4a,0xdf,0x69,0xab,0xa9,0xb7,0xe5,0x8d
.byte	0x1c,0x44,0x52,0x0c,0x7e,0xa1,0xfe,0x9d,0xd5,0xa4,0x71,0x62,0x0b,0x3c,0xf6,0xd2,0xd3,0xe9,0x70,0x09,0x68,0xf7,0xd6,0x0a,0x00,0x61,0xf1,0xf3,0xd0,0x41,0x4a,0x14,0xc6,0xf5,0x49,0xb1,0xde,0x10,0xd3,0x20,0x8b,0xfe,0x78,0x6a,0x87,0x79,0x15,0xd3,0x43,0x00,0xbe,0x71,0x40,0xaa,0xca,0x1a,0x64,0xe3,0x96,0x34,0x2f,0xea,0x0c,0x11
.byte	0x41,0x21,0xf8,0xa7,0x65,0x9b,0x75,0xe2,0x1e,0x6f,0x5e,0xe0,0x68,0x42,0xca,0xd3,0x19,0x35,0xe8,0x88,0x0f,0x05,0xa3,0xb1,0x73,0xea,0x53,0x79,0x40,0x24,0x00,0x86,0x20,0xbb,0x25,0x58,0x89,0x6b,0xde,0xd6,0xd0,0x36,0xbb,0x33,0x30,0x59,0x4b,0x30,0x92,0xac,0xe5,0x95,0x94,0x22,0xab,0xc1,0x10,0x35,0x9c,0xa1,0x20,0x11,0x5d,0x4f
.byte	0x57,0x5c,0x9c,0xb8,0x3a,0xdc,0x97,0xa5,0xf3,0x0b,0xf5,0x96,0xe7,0xef,0x90,0x72,0x01,0x52,0x70,0x5a,0xf0,0xd9,0x7e,0x59,0x05,0x8c,0xd1,0x45,0x47,0xbf,0x16,0x15,0xa2,0xc9,0xdd,0xe7,0x5f,0x4b,0x94,0x5f,0xe6,0xf9,0x78,0xbb,0x8f,0xf9,0x79,0x9f,0x5e,0xd7,0x1f,0x0b,0xef,0x8d,0xfe,0x75,0xd4,0x8a,0x12,0x28,0xa5,0xf9,0x6e,0x14
.byte	0x3c,0x52,0x80,0x57,0xc6,0x96,0xae,0x67,0x27,0xc1,0x1c,0xb6,0xd6,0x1c,0x74,0x8c,0x6f,0xc7,0x71,0x3e,0xd5,0x73,0xf2,0x3e,0x02,0x15,0x67,0x18,0xb8,0x5b,0x61,0x9e,0xfa,0x7e,0xba,0x00,0xe9,0xd9,0x51,0x91,0x63,0x7e,0xf7,0xab,0xc0,0xc6,0xee,0x66,0xdd,0x66,0x88,0x7a,0x8a,0xc5,0xc2,0x08,0x45,0x62,0xde,0xe1,0xfb,0x35,0x65,0x34
.byte	0x00,0x9e,0x1d,0x25,0xdf,0x69,0xb6,0xe3,0xfe,0xbb,0x13,0xac,0xd3,0x13,0xb2,0x64,0x5a,0xf3,0x47,0xf1,0x36,0x55,0x5f,0x1b,0x87,0xea,0x5d,0x5c,0xfd,0x8a,0x68,0x69,0x8a,0x00,0x9f,0x83,0xbe,0x79,0x7d,0x01,0x9e,0xf2,0xb2,0x5d,0x56,0xe0,0xe6,0x49,0xe5,0xe1,0x76,0x57,0x7a,0x85,0xac,0x94,0x16,0xe3,0x68,0x05,0x14,0xb5,0x33,0x54
.byte	0x64,0x5a,0xbe,0xa3,0x04,0x90,0x5c,0x1c,0xf8,0x97,0x16,0x36,0xce,0x76,0xe7,0xf0,0xaf,0x8a,0xea,0x65,0xa8,0x15,0x5b,0x1e,0x0a,0x91,0xad,0x62,0x62,0x67,0xb4,0xf0,0x94,0x1f,0x64,0x50,0xa8,0xc0,0x6b,0x38,0x80,0xd7,0x53,0xbb,0x70,0xbd,0x54,0x01,0xb0,0xa5,0xbc,0x00,0xe0,0xd6,0x23,0x37,0xe6,0x9f,0x0f,0x2f,0x96,0x21,0xc2,0x90
.byte	0x55,0x26,0x55,0xa4,0xcd,0x3e,0x54,0x6b,0xa6,0xb0,0x2c,0xf2,0xd4,0xcc,0x6a,0x44,0xea,0x18,0x61,0xc5,0x1a,0x8e,0x60,0x64,0xf4,0x5f,0x21,0x36,0x01,0x5d,0x9f,0xc4,0x2c,0x67,0x1c,0x48,0x94,0x16,0xae,0xa8,0x13,0x5c,0xee,0x18,0x88,0x61,0xe4,0x54,0x6b,0xa2,0xe8,0x7f,0xf0,0x15,0xc3,0xce,0xbc,0x5b,0x91,0x25,0x7b,0x1d,0xd3,0x9f
.byte	0x13,0x1b,0x01,0x5d,0x43,0xe8,0xa1,0x77,0x5a,0x87,0x79,0x8b,0xd5,0x69,0xf7,0xdf,0x66,0xa2,0x84,0x0c,0x66,0xac,0x15,0x65,0xbf,0x74,0xc0,0xd2,0x78,0x6a,0x3a,0x9c,0x98,0x62,0x04,0x41,0x95,0xb2,0x23,0x59,0xc6,0xb0,0xc5,0x22,0xc0,0xfa,0xaa,0xc8,0x94,0x73,0x91,0x5b,0x64,0x1b,0x74,0xbe,0xcb,0xa1,0x81,0xb1,0xc1,0x26,0xa1,0x94
.byte	0x55,0x04,0xb3,0x9c,0x80,0xb7,0x00,0x6f,0x36,0xc7,0x7f,0x6d,0x97,0xea,0xf3,0xf5,0x55,0xc5,0xfe,0x61,0xd9,0xb1,0x6d,0x8c,0xa1,0x02,0x08,0xb3,0x41,0xe6,0xe6,0x57,0xc6,0xff,0x6e,0x47,0xa4,0x22,0x2e,0x2d,0x21,0x53,0xbe,0xe3,0xbe,0x15,0xec,0x23,0x9d,0x87,0xe0,0x2e,0xcc,0x6c,0xd0,0xc7,0xb7,0x3d,0xa4,0x07,0x5f,0x69,0x4e,0x2b
.byte	0x07,0x69,0x4f,0xc5,0xa3,0x66,0x52,0x91,0x8f,0xa4,0x48,0xb9,0x40,0x76,0xd9,0xcb,0x6e,0x1a,0x35,0x9e,0x50,0x9f,0xd1,0x78,0xb2,0xb8,0x0d,0xa8,0xf8,0x6e,0x07,0xa5,0x3a,0xdf,0x3c,0x32,0xa6,0x10,0xbd,0x73,0x2f,0x07,0x45,0x66,0x0f,0x61,0xce,0xc2,0x08,0x19,0x98,0x33,0x4b,0x59,0x81,0xb5,0x78,0x4f,0x46,0x88,0xae,0x29,0xf8,0xf5
.byte	0xc2,0x29,0x6f,0x8f,0xe5,0x8f,0xb0,0x53,0xc8,0x7a,0x48,0xda,0x6f,0x7e,0x8a,0x69,0x68,0xab,0xba,0xd9,0x20,0x0f,0x96,0x69,0x41,0xa6,0x92,0x94,0x8e,0x0f,0x86,0xdf,0x8d,0x70,0xaf,0xfe,0xf1,0x20,0x50,0x01,0xff,0xca,0x30,0x24,0x67,0x4a,0x04,0xa2,0xde,0x06,0xdc,0x26,0x1e,0x17,0xbc,0x52,0x9a,0x62,0x72,0xc1,0xd8,0xd7,0xe0,0xed
.byte	0xcf,0x4b,0x13,0x80,0x9a,0xbf,0x72,0x4f,0xf4,0x24,0x26,0xcd,0xe0,0x21,0x99,0x7b,0x5c,0x4f,0xbf,0x5c,0x41,0x08,0x8b,0x17,0x69,0x62,0x60,0x2c,0x74,0xb0,0x2d,0x22,0x7e,0x25,0x95,0x6a,0x84,0x0f,0x45,0x8f,0x9a,0x92,0xa1,0xcd,0xa5,0x50,0xf0,0x52,0x7f,0x60,0xd8,0x91,0xe1,0x17,0xe1,0x66,0x8f,0xd3,0x1f,0x41,0x7f,0x6f,0xf1,0x72
.byte	0xa3,0xb6,0x12,0x62,0x46,0x16,0xea,0x26,0x9e,0xda,0x61,0x13,0x0b,0x17,0xf7,0xe1,0xec,0xc0,0x38,0xfe,0x40,0x31,0x6b,0x38,0x2a,0x4b,0xa5,0x8e,0xfb,0x99,0x60,0xd6,0x4a,0xbd,0xfb,0x75,0x2b,0x41,0xd4,0x33,0x5d,0x35,0xfe,0x2d,0xfc,0x1a,0xac,0x02,0xb3,0xf0,0xa2,0x6d,0xfa,0x8b,0x12,0x99,0xdd,0x54,0xf2,0x1c,0x35,0xd3,0x60,0x5a
.byte	0xdb,0x65,0xa7,0x58,0x1b,0x82,0xb4,0xf6,0x49,0x77,0xf2,0xea,0xa3,0xa9,0x57,0x94,0xb7,0x6e,0x19,0xda,0x7e,0xa5,0x70,0xb8,0xff,0x39,0x81,0x7d,0xfa,0xea,0xd6,0xc6,0x12,0x84,0x0a,0x8a,0x16,0xde,0x99,0xa6,0xe7,0xe0,0x77,0x76,0xb8,0xa3,0x6f,0xfb,0xb4,0x8f,0xc3,0xbd,0x90,0xd8,0x2a,0x04,0xed,0x42,0x91,0x9b,0x84,0x40,0x2d,0x01
.byte	0x94,0xdb,0xbb,0x58,0x25,0xed,0xa3,0xdd,0xaa,0x0c,0xce,0x25,0x12,0xcd,0x11,0xbf,0xd0,0x57,0xe9,0x51,0x74,0xa7,0x45,0x6c,0x58,0xe7,0x4d,0x43,0xc6,0xd0,0x09,0x93,0x2d,0xe0,0xe3,0xae,0x7b,0x8f,0x53,0xa0,0x80,0xa1,0xef,0xcb,0xf5,0xfe,0x38,0x4d,0x31,0xa2,0x5c,0xd3,0x4a,0x66,0x1a,0x5c,0x07,0xbe,0x25,0xba,0x30,0xb6,0x00,0x27
.byte	0x52,0xb9,0x1f,0xa3,0xed,0xd7,0x31,0x33,0x4a,0xf6,0x3f,0xed,0x75,0xe7,0xa4,0xf4,0xdf,0x97,0xc1,0x78,0x90,0x9b,0x4b,0xbd,0x06,0xc6,0x72,0x5c,0xdf,0x57,0x60,0xbe,0xbc,0x88,0x02,0xb6,0x5a,0x65,0xea,0x3a,0x3a,0x74,0x03,0xc8,0x66,0xef,0xf0,0x63,0xc7,0x9d,0x58,0x8e,0xa1,0xb2,0x25,0x4f,0xc4,0x14,0x5f,0x80,0x78,0x08,0x06,0x21
.byte	0x50,0x34,0x01,0x2b,0x15,0xf4,0x7d,0x1f,0x1f,0x32,0x36,0x0a,0x52,0x1f,0x50,0xa2,0x50,0xbc,0x9a,0xdf,0x4e,0x84,0x49,0x2d,0x08,0xaa,0x46,0xc0,0x0e,0xcf,0x27,0x17,0x91,0x78,0x8c,0xb9,0x72,0xc5,0x8e,0x25,0x85,0x11,0xff,0x2f,0x4a,0x71,0x7c,0x14,0xfe,0x86,0xfe,0xb4,0x3a,0xd0,0x67,0xfd,0xaa,0x9b,0xee,0x89,0x66,0x03,0x59,0x4e
.byte	0x1c,0x96,0xaf,0x2b,0x8d,0x4d,0x6f,0xf6,0x72,0xc6,0x13,0xc7,0x14,0xce,0x19,0x0c,0x0b,0xa3,0x01,0x12,0x7c,0x8e,0x10,0xb8,0x63,0x41,0x57,0xb9,0xfe,0x6e,0x3e,0xda,0x20,0xfb,0x92,0x08,0x7d,0x66,0x31,0x9d,0x4f,0xdb,0x14,0xf4,0xb6,0xb8,0xea,0xee,0x54,0x0f,0xaf,0xc1,0x99,0xf0,0x8f,0x55,0x44,0x20,0x44,0xd0,0xa6,0x98,0xa3,0xa8
.byte	0x8b,0x8e,0x26,0x03,0xec,0x2d,0x50,0x4f,0xb0,0x8d,0xd0,0xf2,0x96,0xcc,0x18,0xa9,0xb1,0x0f,0x79,0xe3,0x9f,0x08,0xb3,0x53,0x0b,0x9c,0x9f,0x22,0xdb,0x45,0x57,0xd6,0xaa,0x3b,0x6a,0xcb,0xdc,0xc9,0xda,0x57,0x75,0x65,0x0a,0xc1,0x17,0xb3,0x97,0xa9,0x07,0x40,0x20,0xfb,0x72,0x2d,0xc6,0x37,0x1e,0x44,0xb7,0x7e,0x0b,0x38,0xcc,0xfc
.byte	0xa0,0xed,0x48,0xa9,0x9b,0x87,0xbc,0x71,0x0f,0x8b,0xda,0x4f,0x09,0x27,0x1e,0x3d,0x9c,0x03,0x62,0x81,0xa8,0x7c,0x7b,0x8a,0x14,0xa7,0x22,0x69,0xa8,0xba,0x0e,0xcc,0x1f,0x2b,0xb3,0x0f,0x7d,0xce,0x3f,0xec,0xb5,0x9d,0xe0,0x3a,0x67,0x56,0x08,0x5d,0x03,0x8b,0x71,0x01,0x44,0x11,0x1b,0x7b,0xcf,0xcc,0x2e,0xfc,0xa5,0x52,0x9b,0xeb
.byte	0x1e,0x8a,0xa1,0x86,0x64,0xcf,0x32,0x03,0x6b,0x3e,0x29,0xe7,0x9a,0x16,0x7e,0xe2,0x21,0x2f,0x5f,0xe2,0x86,0x7f,0xf8,0x22,0x36,0x10,0x99,0xc8,0x27,0x43,0xa1,0xb9,0xf4,0xb4,0xb8,0xe1,0xa3,0x1d,0x80,0x9c,0x81,0x92,0xef,0x1f,0x28,0x54,0x51,0xf3,0x62,0x9c,0x7a,0x24,0xd4,0x5a,0xdc,0x38,0x4f,0xa5,0x57,0xdd,0x4d,0xa1,0x52,0xf3
.byte	0xd3,0x9d,0xa1,0x93,0x5e,0xbe,0x9b,0xd1,0x2a,0x52,0xf1,0xbb,0xa5,0x3f,0x3a,0x94,0x7c,0x7d,0x41,0x61,0x36,0x14,0x25,0x5f,0xab,0xef,0x32,0xf3,0x0f,0x6c,0xc5,0xf5,0x5f,0xe5,0x88,0x51,0x17,0x60,0x8b,0xd5,0xa6,0xea,0x8b,0x21,0xec,0x1a,0xa7,0x69,0xa0,0x59,0xf9,0xeb,0x51,0x94,0x70,0x2b,0x96,0x2e,0x71,0xa9,0x8c,0x12,0x15,0xce
.byte	0x7d,0x59,0x6b,0xf2,0xca,0x2c,0xbd,0x85,0xfb,0x23,0xab,0xcb,0x89,0x89,0xda,0x28,0x49,0x7e,0xfc,0x90,0x2a,0x9a,0x3d,0x6d,0x24,0x57,0xba,0xd9,0x30,0xe0,0x10,0x04,0xb1,0x7f,0x8a,0xcf,0xc8,0x27,0x63,0xd6,0xbd,0xea,0xef,0x90,0x6f,0xc2,0xfc,0x78,0xfd,0xc4,0x5b,0x45,0x0c,0x41,0x8a,0x53,0x5b,0xbc,0x62,0x32,0x86,0x7f,0x19,0xb7
.byte	0x8b,0x03,0x50,0xed,0xca,0x8e,0x8b,0xa0,0xe3,0xc2,0x0e,0x81,0xe5,0x8a,0xe8,0xf1,0x6a,0x0b,0x1a,0xa7,0xb6,0xed,0x74,0x23,0x34,0xad,0x5b,0xd8,0xf7,0x17,0x8d,0xa5,0x05,0xf3,0x00,0x4a,0xad,0x7e,0x91,0xc9,0x6b,0x13,0xff,0x76,0x78,0xf0,0xd1,0xf4,0x99,0x43,0x73,0xd9,0xba,0x59,0xbe,0xb5,0xa3,0xbd,0x5e,0xc5,0xd3,0x88,0x06,0x9c
.byte	0x86,0x32,0xb4,0xd5,0x30,0x77,0x78,0x8e,0xd5,0x6a,0x1d,0xeb,0xfd,0x6b,0xe6,0xf8,0x4b,0xe8,0xf3,0xba,0xbb,0x86,0x8e,0xe6,0x63,0x83,0x92,0x23,0x05,0x58,0x2e,0x61,0xdd,0x38,0xad,0x8d,0x19,0x7d,0xfa,0x7c,0x3e,0xc8,0x9f,0xae,0xea,0x6d,0x12,0xf0,0xa4,0x08,0xed,0x12,0x0c,0x97,0x87,0x58,0xd8,0xbc,0x3f,0xde,0x7c,0xee,0x0c,0xc0
.byte	0xa2,0x2e,0xf0,0x25,0x6d,0xf3,0x30,0x23,0xa7,0xc2,0xc8,0x09,0x67,0x01,0xe1,0x25,0x26,0x46,0x38,0xf5,0x5e,0x55,0x8b,0xd6,0x43,0x6a,0xb8,0xe4,0xdf,0x0f,0x5d,0x6c,0xc3,0xb2,0x56,0x38,0xda,0xbc,0xbf,0x5e,0x85,0x8c,0xd5,0x2a,0x6a,0xe2,0xff,0x4f,0x36,0xf7,0x52,0x2c,0xe2,0xae,0x65,0x65,0xd1,0xfc,0xd3,0xc6,0xf7,0x26,0xa6,0xd0
.byte	0x0b,0xc8,0xf0,0x68,0x5d,0x07,0x89,0x06,0xb3,0xfb,0x39,0x1d,0xd8,0xd8,0xd7,0x53,0xd0,0xc9,0x76,0x56,0xc0,0xd3,0xf5,0x66,0x80,0x5b,0xff,0x4a,0xdf,0xae,0x52,0x86,0x54,0x24,0x53,0xcf,0xcf,0xd2,0x89,0xde,0x71,0x62,0x9c,0x31,0xa5,0x3d,0x62,0x07,0xa1,0x33,0x49,0xbb,0x06,0x88,0xd8,0xa1,0xdd,0x0e,0x47,0x8d,0x72,0x00,0x2d,0x51
.byte	0xa3,0x35,0x6e,0xb6,0x1f,0xbf,0xe5,0x42,0x68,0x6f,0x62,0xfa,0xf3,0x12,0xa9,0x1a,0xbd,0xe8,0xa4,0xf1,0x6d,0x07,0xe7,0x70,0x87,0x44,0xb7,0x3d,0xea,0xdc,0x3a,0x24,0xbd,0xa0,0x9b,0xb8,0xc5,0xa8,0xd9,0x06,0xde,0x02,0x68,0x7e,0xd5,0x2d,0x3b,0x5f,0x12,0x31,0x72,0x35,0x77,0xf6,0x10,0x6e,0x81,0x7d,0x3c,0xac,0x95,0x5b,0xbe,0x90
.byte	0x74,0xf3,0x3e,0x9b,0x07,0x54,0x97,0xe3,0x1d,0xcf,0xe2,0xc5,0x80,0x6b,0x5f,0x0b,0x96,0x00,0x0f,0x0e,0x53,0x36,0x76,0x6e,0x99,0x0c,0x32,0xa2,0xc9,0xaa,0xa0,0xa1,0xb7,0xee,0x9d,0xd6,0x46,0xe7,0x2d,0x10,0x7a,0xf2,0x22,0x50,0x52,0xbf,0xec,0xcc,0xbc,0x0d,0x81,0x55,0x2d,0xac,0x2e,0xf7,0x99,0xbe,0x68,0x09,0xb0,0x11,0xc3,0xc8
.byte	0xca,0x63,0xa7,0xc2,0x0f,0x37,0x2a,0x9e,0x85,0x79,0x6b,0x44,0xc1,0x4f,0xb9,0xd6,0x6c,0x56,0x0e,0x59,0x33,0xc3,0x00,0x53,0xe2,0xf4,0x30,0x90,0x4e,0x4b,0x09,0x4d,0x6f,0x9a,0x9e,0xb9,0x8d,0x0b,0xa1,0x80,0xfd,0xfb,0xde,0x74,0x49,0x53,0x04,0x3a,0x35,0xcb,0x45,0xe2,0x67,0x2c,0x4d,0x6e,0x39,0x7b,0xbd,0x68,0xaa,0x93,0x1e,0xee
.byte	0x1e,0x35,0xae,0x1e,0xf2,0xe7,0xb1,0x80,0x92,0x45,0x27,0x85,0xd0,0xc7,0x26,0x17,0x54,0x30,0xba,0x0c,0x8e,0x48,0xf3,0x08,0x51,0xa6,0x41,0x70,0xba,0x5b,0x90,0x69,0x7c,0x64,0x1d,0x61,0xb5,0x23,0x4a,0xef,0x97,0xe4,0x9a,0xd0,0xff,0x47,0x7a,0x93,0x1a,0x28,0xb3,0x8a,0x32,0x29,0xf8,0xe9,0x08,0xc3,0xf3,0x24,0xd7,0x2e,0x18,0x6d
.byte	0x99,0x40,0x77,0x43,0x9f,0x98,0xe4,0xe5,0x3a,0x34,0x9d,0x46,0x52,0x9f,0x84,0x79,0x8c,0x70,0xbc,0x88,0x30,0xaf,0x87,0x69,0x57,0x6e,0xde,0x2e,0xfe,0x0f,0x3b,0x8d,0xc8,0x95,0xcf,0x69,0x78,0xff,0xa1,0xb1,0x81,0x49,0x1e,0x45,0xc0,0x83,0x1b,0xa3,0x5a,0xee,0x3e,0x9a,0x15,0x7c,0xf0,0xa2,0xfd,0x04,0x22,0x55,0x2d,0x74,0x61,0x29
.byte	0x0e,0x4f,0x31,0xdb,0x35,0x99,0x37,0xb7,0x7d,0x11,0xde,0x87,0x4f,0x84,0xeb,0x6c,0x14,0xcc,0xbb,0x71,0x47,0xab,0x5b,0x61,0x51,0xeb,0xa1,0xc1,0x5f,0xe4,0x5c,0x3c,0xab,0x04,0xf1,0x60,0x50,0xe1,0xd0,0x58,0xdf,0x42,0xed,0x73,0x5f,0x31,0xdf,0x8d,0xb8,0xb8,0xdc,0x4e,0x2f,0xe3,0x7f,0x89,0x9e,0x62,0xc9,0xef,0xfd,0x60,0xae,0x58
.byte	0xa9,0xa5,0x8b,0xa8,0x3b,0xd8,0x5f,0xd4,0x09,0xff,0x61,0x8c,0x25,0xde,0x84,0x7f,0x35,0xc9,0x5c,0x2b,0xe8,0x46,0xe4,0x1c,0xbd,0x77,0x51,0x31,0x55,0x3d,0xb4,0x35,0xf3,0xdc,0xa5,0x55,0xd3,0xe3,0x24,0xf9,0x41,0xe2,0xf0,0xbd,0xf5,0xff,0x81,0x87,0x64,0xc9,0xe7,0x69,0x29,0x86,0xaf,0x98,0x33,0x33,0x62,0x9c,0x7b,0x16,0xbb,0xfe
.byte	0x0b,0xa7,0x92,0xa5,0x7b,0x81,0xbc,0x50,0x88,0xf6,0xe7,0xfc,0x73,0xd6,0x37,0x43,0x09,0xa5,0xc6,0xd6,0x4d,0x28,0xb5,0xaa,0x53,0x52,0x8c,0x2c,0x06,0x64,0x6c,0x21,0x6b,0xe7,0x67,0x4a,0xa5,0xcc,0xa1,0x32,0xf0,0xd9,0x78,0xb9,0xc3,0xdb,0x41,0xee,0x10,0x11,0x81,0x04,0x03,0x73,0x48,0xc6,0x3e,0x60,0x6d,0x82,0xef,0xe2,0xa8,0xe8
.byte	0xd7,0xda,0xd9,0xb5,0x34,0x42,0xc8,0x1c,0xa7,0xa4,0x8e,0x88,0x2e,0xbc,0x96,0x0a,0xfc,0x40,0x36,0x80,0xdf,0x60,0xe9,0x03,0x02,0x0c,0x51,0xf7,0x7d,0x01,0xd2,0x21,0x38,0x44,0x4b,0x34,0x80,0xbf,0x5e,0xc1,0x86,0xf2,0x35,0xeb,0xa8,0x21,0x15,0x74,0x7c,0x99,0x55,0x64,0xf4,0x48,0xd6,0xd1,0x47,0x1f,0x4d,0xbf,0x0c,0x20,0x5d,0x86
.byte	0xb9,0xab,0x4e,0xc8,0x86,0x08,0x71,0x1d,0x13,0xf6,0xd3,0x17,0xac,0x61,0x10,0x5d,0x2a,0xb4,0x48,0xa1,0xb9,0x79,0x5a,0x09,0x3a,0x65,0x4c,0xbd,0x97,0xbe,0x48,0xc6,0x66,0xd8,0xce,0x0c,0x19,0xb5,0x44,0x02,0xfa,0xb7,0xa8,0x3f,0x9b,0x86,0xec,0xd1,0xef,0x1d,0x7d,0xb3,0x82,0x5c,0x92,0x48,0x02,0x2c,0x56,0x0f,0xff,0xf7,0x19,0x74
.byte	0xc2,0x38,0x24,0x8d,0xb2,0x87,0xb6,0xeb,0x49,0x50,0x6a,0x33,0x74,0x4e,0x2a,0xcb,0xf4,0x13,0x2c,0xfa,0x3b,0x0e,0x3d,0x98,0x3e,0x33,0xd9,0x55,0xfa,0xb9,0x74,0xb8,0x6f,0xc1,0xd8,0xfd,0x8f,0xff,0xb9,0x1a,0x17,0xf8,0xb6,0x21,0xc4,0x9d,0x47,0x5e,0x84,0xf6,0xe5,0xbf,0x93,0x98,0xac,0x8f,0x68,0x85,0xf8,0xe8,0x79,0x7f,0x6f,0x0d
.byte	0x62,0x2c,0xaa,0x1e,0xe4,0xab,0x73,0xf8,0x6f,0x02,0xda,0x6b,0x3c,0x14,0x2e,0xc9,0xdb,0xb0,0x4e,0x39,0xb5,0xcf,0x05,0xae,0x9c,0x63,0x2f,0x6a,0x25,0x61,0x9d,0x40,0xeb,0x7e,0xd8,0x97,0x97,0x33,0x67,0x5c,0x78,0x84,0x68,0xc2,0x7a,0x26,0x58,0xe3,0x6c,0x0a,0x2e,0x6a,0x82,0xd6,0x43,0xed,0x79,0xa5,0x8d,0x4e,0x7c,0xf7,0x80,0x01
.byte	0xe7,0x02,0x5e,0x3a,0xf7,0x8a,0x4a,0x85,0xe9,0x98,0x1e,0x69,0x33,0xf3,0x54,0x96,0x79,0xc8,0x03,0x0a,0x9f,0x0c,0x5d,0x66,0x44,0x88,0x3c,0xd7,0x9e,0xd1,0xde,0x01,0xfd,0x5e,0xa5,0x6a,0x82,0x00,0x36,0xe6,0x12,0xe3,0x62,0x46,0x45,0x69,0xfb,0x4f,0x44,0x8e,0xe5,0x8d,0x21,0x57,0x6a,0x61,0x8e,0x56,0xcb,0x5b,0x2c,0x5f,0x65,0x41
.byte	0x2c,0xad,0xf2,0x98,0x34,0xbb,0x06,0x0d,0x8a,0x3c,0x34,0x0d,0xa3,0xe2,0x6e,0x86,0xfa,0xa9,0xfb,0x6f,0xbb,0x32,0xd6,0x0d,0x76,0x6b,0x77,0xf3,0x83,0x41,0xc0,0x80,0x63,0x55,0x47,0xb8,0x13,0x6b,0x99,0x96,0x08,0x9b,0xc0,0x82,0xae,0x49,0x4a,0x51,0x63,0x74,0xf2,0xec,0xfa,0x0d,0xbc,0x3a,0xde,0xf5,0x4b,0x4f,0x08,0x41,0x23,0x88
.byte	0x14,0x88,0x6a,0x3a,0xf0,0x5f,0x0c,0x45,0x7f,0x65,0x7a,0x67,0xd8,0x17,0xed,0x04,0x47,0x60,0x0e,0x74,0x8f,0xfd,0x48,0xda,0xcd,0xe9,0xfe,0xf5,0x6f,0x43,0xcd,0xa5,0x05,0xa2,0x2e,0x78,0x5b,0xff,0xb8,0x6f,0x2e,0xfd,0x3e,0x4b,0xef,0xcf,0xe0,0x06,0x57,0x28,0xf4,0x2e,0x3b,0xb5,0x9e,0x3c,0xbd,0x63,0xa6,0x78,0x8e,0xd5,0xb8,0x81
.byte	0x4e,0xf0,0xbf,0x14,0x65,0xc8,0x00,0x9f,0x0e,0x25,0x6a,0x7a,0x63,0x58,0xe4,0xe7,0xa9,0x82,0x16,0xc9,0x86,0x20,0x94,0x71,0x5b,0x9f,0x9b,0xc3,0xc5,0x32,0xb0,0x6c,0x2b,0x8c,0x54,0x67,0x36,0x94,0xb1,0x47,0x33,0xfd,0x9f,0x7c,0x7f,0x7e,0x08,0x51,0x1f,0x7e,0xbf,0x09,0x57,0xf3,0xaa,0x77,0x94,0xf3,0x20,0x1b,0x95,0xf6,0x04,0xb2
.byte	0x09,0x9d,0xe2,0xbb,0x4d,0xfe,0x6b,0x99,0x06,0x58,0x40,0x84,0x90,0xfa,0x0e,0x9b,0x58,0x6d,0x02,0xbe,0x53,0x73,0xd1,0xc9,0xc7,0x31,0x2a,0x4a,0x12,0x2c,0xb6,0x1c,0xfb,0x49,0xc6,0x1a,0x93,0x33,0x1f,0x29,0x8b,0x94,0xe9,0x20,0xa7,0xe6,0x20,0xe6,0xbf,0xcd,0x5c,0xb6,0x52,0x42,0xf0,0x9c,0x6c,0x21,0x61,0x10,0xe7,0x0e,0x9f,0x33
.byte	0x5f,0xc8,0xd0,0x20,0xe0,0x3e,0xc5,0x7a,0x10,0xf1,0xe5,0x19,0x52,0xcd,0xe1,0xa8,0x62,0x43,0x20,0x79,0xc3,0xac,0x93,0x27,0x02,0x8e,0x21,0x06,0xb9,0x66,0xd9,0xc8,0x40,0xe0,0xd1,0xf0,0x64,0x81,0xa6,0xc4,0x87,0x85,0x2b,0x92,0x1c,0xd6,0x48,0x85,0xb1,0xbe,0x78,0xf3,0x89,0xa2,0xf0,0xe5,0x39,0xac,0xbf,0x59,0x5d,0xf8,0x4f,0x74
.byte	0x44,0x85,0x98,0x03,0x81,0x4b,0x7e,0x6f,0x5c,0xa1,0x11,0xd2,0xfd,0x30,0x7f,0xcd,0xd0,0xe2,0xcc,0xd4,0x80,0x16,0x46,0xa6,0x64,0x8b,0x9e,0xfc,0x2a,0x1a,0x65,0x5c,0x90,0x82,0xf9,0x23,0x48,0x11,0xf6,0xf2,0x50,0x3f,0xed,0x44,0xf2,0x9a,0x5a,0xca,0x1c,0x9a,0xd2,0x71,0x1b,0xd6,0x4c,0x51,0xf6,0x89,0x6f,0x65,0xe4,0x97,0x41,0x47
.byte	0x1b,0x86,0xbd,0x83,0xa0,0xfe,0xac,0x16,0xe8,0xab,0x28,0x96,0x2f,0xa2,0x12,0x5f,0x7c,0xb3,0x18,0x2b,0x05,0x51,0x49,0xba,0xb4,0x1f,0x1e,0xe6,0x8a,0x82,0xca,0x33,0x7d,0xe6,0x8c,0x95,0xba,0x08,0x60,0x47,0x6d,0x79,0xac,0x0f,0xba,0x46,0xff,0xed,0xe0,0x34,0x03,0xfe,0xa7,0x85,0xe5,0x61,0xe3,0xe4,0x6c,0x5c,0x1b,0x9d,0x8a,0x54
.byte	0x17,0xaf,0x08,0x4c,0x44,0x7f,0xb7,0xb0,0x6a,0x3a,0xff,0xb7,0xf6,0x10,0xc4,0x8f,0x31,0xd6,0x1a,0x25,0x27,0x35,0xca,0x87,0xa9,0x61,0x0b,0x35,0x96,0x89,0x0f,0x1a,0xbd,0x1e,0xf6,0xee,0xaa,0x95,0x16,0xe4,0x38,0x7b,0xb2,0xbe,0xea,0xc9,0x5a,0xcd,0x3b,0xb8,0x9e,0xd7,0x20,0xcd,0x3f,0x90,0xaa,0x8b,0x2a,0x42,0xed,0xab,0xc1,0x53
.byte	0x83,0xc7,0xb8,0x3f,0xa1,0xb9,0xf4,0xf4,0xb0,0xe0,0x1f,0xb0,0xeb,0xa9,0x81,0x9f,0x31,0x67,0x1e,0x6c,0x96,0x9f,0x09,0xea,0x04,0xfe,0x37,0x22,0x87,0x60,0xb9,0x91,0x8f,0xa9,0x11,0xa3,0x68,0x5e,0x29,0x21,0x41,0xa3,0x02,0x08,0x82,0xd0,0x2b,0x66,0x6d,0x3c,0x46,0xc7,0x23,0x09,0x86,0x7f,0x53,0x11,0x3e,0x83,0x52,0x0a,0x4a,0xe4
.byte	0x93,0xc6,0xc1,0x96,0x17,0x94,0x51,0x17,0x69,0xea,0x72,0xb8,0x85,0xde,0x7e,0x13,0x4a,0x08,0x26,0xae,0x31,0x19,0x0f,0x6f,0x48,0xa1,0xf2,0x57,0xa2,0x01,0x8e,0x84,0xee,0x63,0x23,0xc0,0x97,0x84,0xa2,0xf5,0x3f,0xeb,0x30,0x9e,0xdd,0xd2,0x43,0x24,0xa2,0x57,0xb7,0x57,0x86,0x26,0xa3,0xe6,0x6e,0xf2,0xcd,0xfb,0x7b,0x34,0x74,0x53
.byte	0x07,0x95,0x51,0xb7,0xfd,0xf3,0xd1,0x83,0xbd,0x25,0xd6,0x2c,0x69,0x73,0x02,0x8e,0x76,0x19,0xea,0xb0,0x83,0x60,0x8c,0x53,0x9d,0x77,0x86,0x1e,0x65,0xc7,0x57,0x31,0x29,0xd9,0xa9,0x3a,0xb2,0x0d,0xd8,0xf4,0xf9,0x48,0x49,0xfb,0x3c,0x40,0x3d,0x1b,0xc4,0x8b,0x94,0x0e,0x50,0x7f,0xd5,0x39,0x5e,0x57,0x86,0xd1,0xba,0x0c,0x38,0x10
.byte	0x01,0x5f,0x44,0xf3,0xe5,0xb0,0xf8,0xae,0x17,0xdf,0xd2,0xb3,0x10,0xc5,0x3b,0xfd,0xd9,0x68,0x90,0x9c,0x6c,0x26,0xdf,0x12,0x50,0xfa,0xbf,0x8b,0xce,0x68,0x80,0x8c,0x04,0x60,0xbf,0x34,0x81,0xbd,0x29,0xa3,0xa2,0xe4,0xe0,0x2d,0x25,0xb2,0xff,0x9f,0xd1,0x20,0x07,0xd5,0x8c,0x19,0xfa,0x3f,0x47,0xec,0xc1,0x8d,0xc9,0x36,0xf8,0x51
.byte	0x4c,0xaa,0x40,0xe3,0x6a,0x21,0xd5,0xe6,0xa6,0xcf,0x8c,0xd9,0x10,0x47,0x66,0xfd,0x32,0x48,0x36,0x8f,0x14,0xed,0x09,0x80,0x50,0x27,0xaa,0xd5,0x1f,0x69,0xb8,0xe4,0x96,0x27,0x56,0x78,0xd6,0xd5,0x2d,0xf0,0x4f,0x14,0x30,0x17,0x9e,0x5b,0x69,0x8c,0x7c,0x1c,0x97,0x38,0x65,0x77,0x75,0x49,0xac,0x4b,0x06,0xda,0x74,0x11,0x86,0xbc
.byte	0xad,0x01,0xf2,0x03,0x29,0x5d,0xa7,0x74,0xd3,0x44,0xae,0x1d,0xbf,0xf9,0xc5,0x5b,0x83,0x8c,0xd6,0x84,0x8a,0x8e,0xe9,0xa6,0x08,0xf4,0x88,0x13,0xcb,0x16,0x45,0x13,0x9c,0xc7,0x75,0xa9,0xa7,0x55,0x04,0x91,0xd6,0xe9,0xd4,0xe5,0x65,0xa0,0x3a,0x53,0xa0,0xfc,0x62,0xce,0x91,0x01,0xb4,0x06,0x8b,0x10,0x79,0x6f,0x2c,0xd6,0x0a,0xa2
.byte	0x31,0x8f,0x75,0x32,0x0e,0xfa,0x0d,0xec,0xfd,0x71,0x7f,0x74,0x97,0x30,0xe9,0xee,0x9f,0x04,0x21,0xb5,0xc9,0xd1,0x52,0x2a,0x0f,0x18,0xbe,0x3e,0xbb,0x98,0xaf,0x59,0x9b,0x85,0x79,0x5e,0x52,0x93,0x1c,0x42,0x67,0x67,0x6b,0xd5,0x41,0xaf,0xba,0x09,0x3a,0xb4,0x0e,0x97,0x22,0xe6,0xbb,0xe1,0x27,0xa1,0xf9,0xf0,0xcd,0xa2,0x3d,0xdb
.byte	0x81,0x2f,0x65,0x90,0xb7,0xe5,0xe5,0xce,0x1d,0x3b,0xfe,0x34,0x57,0xcd,0x3a,0xbd,0x19,0x59,0x23,0x12,0xf1,0xb6,0xf2,0xf7,0xc1,0xf5,0x1d,0x0b,0x46,0x8f,0x16,0x6a,0x81,0xfe,0xc1,0x97,0x8d,0x69,0x55,0x60,0xdd,0xf0,0x61,0xe9,0x22,0x30,0x72,0x1a,0x24,0x30,0xd7,0xbc,0x1c,0xfa,0x02,0x55,0xfc,0xb9,0x4b,0x0a,0xe4,0x90,0x90,0x3a
.byte	0xe3,0xce,0xd4,0xa0,0x7d,0x21,0x5a,0xf7,0x79,0x6e,0x03,0x4f,0x4e,0x93,0xad,0xc4,0x8e,0x9d,0x9f,0x8a,0x39,0x59,0x20,0xc1,0x5d,0x6a,0x4d,0x8f,0x69,0x78,0xea,0xba,0xde,0xc0,0x87,0xb2,0xf2,0x20,0xd6,0x7a,0x9c,0xf9,0x09,0x03,0x2a,0x4d,0xb9,0x10,0xfc,0xe5,0x05,0x90,0xed,0x45,0x4f,0x5f,0x7c,0x5d,0xfa,0xe6,0x0d,0x07,0xae,0xcc
.byte	0x21,0xc8,0x1c,0x7a,0xfb,0x1d,0xb9,0xe3,0x69,0xa1,0xb7,0x5f,0xb5,0x6a,0xb9,0x58,0x9d,0xcd,0x99,0xf8,0x38,0xbb,0xa0,0xfe,0xf8,0x41,0x51,0x72,0xce,0x76,0x89,0x59,0xa2,0xab,0xef,0xea,0xab,0x79,0xbc,0xda,0x73,0xdb,0x18,0xda,0x60,0x1b,0xc4,0xb7,0x4f,0xb3,0x86,0x21,0x2a,0xc3,0xec,0x7f,0x0e,0x89,0x16,0x0e,0xd2,0xbd,0xea,0x0e
.byte	0xcf,0xc1,0x4b,0x2c,0x97,0x69,0xce,0xd3,0x94,0xad,0x81,0xe9,0x70,0xf4,0xf8,0xe5,0x77,0xe6,0x92,0xe0,0x23,0x38,0xd3,0xc1,0xdd,0x2e,0x58,0x77,0xc5,0xc3,0x29,0x34,0x66,0x48,0xf9,0x75,0x3c,0x8a,0x6a,0xb8,0xbf,0xf8,0xba,0xf0,0xb9,0xa1,0x81,0x0b,0xa1,0xaa,0x17,0x34,0x1a,0xbb,0xa3,0xa2,0xba,0x21,0x45,0xc0,0x1d,0x57,0x11,0x4d
.byte	0x9b,0xd4,0x64,0x84,0xd7,0x0b,0xd6,0xfb,0x72,0x2c,0xdb,0xc3,0xe6,0x24,0xa9,0xf3,0x30,0x9f,0x21,0x05,0x1e,0xcc,0x48,0x58,0xed,0xfd,0xb2,0x34,0xe3,0xf7,0x7e,0x56,0xee,0xdf,0xa4,0xbb,0xb1,0xcc,0x7f,0x81,0x40,0xe9,0xdf,0x3f,0x82,0xc4,0x0d,0x14,0x9b,0x3b,0x80,0x15,0x24,0x6e,0xa4,0xce,0xfa,0x28,0xa7,0x7f,0x89,0xfb,0xc6,0x83
.byte	0xe8,0x2a,0x70,0xfb,0x9c,0x75,0xb8,0xfd,0xec,0xbc,0xbb,0xf5,0xef,0x0a,0xa5,0x77,0x0b,0x38,0xa0,0x63,0xa5,0x71,0x12,0xc9,0xaa,0xc3,0xf9,0x72,0x30,0x45,0x4e,0x19,0x44,0x2d,0x09,0xf4,0xf1,0xa8,0xe8,0xde,0x58,0x87,0x70,0xa8,0x91,0x86,0xef,0x5d,0x02,0x90,0x55,0x63,0x99,0xde,0xd7,0xb7,0x5f,0x07,0x01,0xdf,0xb1,0xe5,0x55,0xf5
.byte	0x87,0x69,0xd2,0x7a,0x71,0xbc,0x0e,0x4b,0x8b,0x98,0xf7,0xf6,0x0a,0x01,0xbb,0x9f,0x1b,0x15,0xb6,0x76,0xe0,0xc0,0x4b,0x5d,0x08,0xba,0xba,0x73,0x3f,0x36,0x5a,0x29,0xd7,0x7c,0xc2,0x87,0x03,0x75,0xff,0x26,0x21,0xae,0xbe,0x66,0x70,0xa2,0x99,0x11,0x35,0x49,0x78,0x7b,0x3a,0xfe,0x94,0xf7,0x37,0xe0,0x69,0x56,0x39,0xf7,0x3f,0x71
.byte	0x39,0x74,0x75,0x32,0x1f,0xfb,0x3a,0x87,0x07,0xab,0xf1,0xed,0xe3,0xe2,0xbf,0x3f,0xb1,0x73,0x11,0xc9,0x34,0x4b,0xb1,0x1e,0x62,0x4e,0xc1,0x8a,0xae,0xcc,0xc7,0xb3,0xa7,0x70,0x01,0x73,0xad,0xb3,0xc3,0x59,0x70,0x14,0x31,0x94,0x9f,0x6b,0x18,0x11,0x50,0x52,0xc9,0xf0,0xf8,0x12,0x9d,0x7c,0x90,0x64,0x9d,0xd9,0x41,0xa6,0x45,0xe3
.byte	0xc9,0x25,0x73,0xe7,0x48,0x9d,0xdc,0xe0,0x2c,0x71,0xd3,0x68,0xc5,0xab,0xac,0xe3,0x16,0x95,0xe3,0xa5,0xae,0x2f,0x57,0x60,0x4b,0x11,0x90,0xaa,0xe7,0x48,0xca,0xc7,0xde,0x2e,0x56,0x10,0x8e,0xc3,0x0a,0x7d,0x66,0xf1,0xc3,0xf7,0x2d,0xdd,0xfa,0x5e,0xb2,0xcb,0x99,0x4d,0xaa,0x4e,0x91,0xc1,0x94,0x60,0x27,0x33,0x82,0xa6,0x2a,0xba
.byte	0x05,0x32,0x33,0x0a,0x30,0x47,0xb0,0xac,0x68,0x7d,0xef,0x25,0x09,0xcf,0x51,0xf4,0x06,0x28,0x14,0xb2,0xb4,0x1f,0xaf,0x37,0xdc,0x70,0x88,0x4d,0xb9,0xfc,0x2d,0x61,0x25,0x13,0x1f,0x32,0x48,0x6d,0xeb,0x46,0x05,0x66,0x44,0xa1,0xec,0xce,0xe9,0x51,0xa9,0xba,0xf8,0xde,0x95,0x1b,0x20,0xe1,0x21,0x75,0x4b,0x25,0x7f,0x3c,0x16,0xf7
.byte	0xe2,0xbe,0xeb,0xca,0x2b,0x77,0x92,0x16,0x32,0xe2,0x74,0x21,0x52,0x3f,0x08,0xba,0x41,0xb0,0xd3,0xd2,0xf7,0xf3,0x29,0xb6,0x10,0xfa,0xa5,0x29,0x35,0x29,0x21,0x0d,0xec,0xba,0x5a,0xf3,0x63,0x0f,0x9d,0xbc,0x42,0x02,0x46,0xe9,0x07,0x4a,0x9a,0xe8,0xd3,0x78,0x92,0xa2,0xe5,0x03,0xec,0xd4,0xe2,0xc8,0x8f,0x92,0x4a,0xae,0xbc,0xd7
.byte	0xdf,0x4b,0x07,0x22,0x47,0xbd,0xb4,0xb5,0xa0,0x7e,0xfb,0x21,0x40,0x62,0xb1,0x6c,0x07,0x00,0x64,0xf6,0xb2,0x75,0x5c,0x29,0x84,0xff,0x38,0x0c,0xc8,0x08,0x38,0x92,0xf9,0xad,0xd7,0xcc,0xc3,0x1c,0x03,0x80,0x49,0x39,0x1c,0xdb,0xae,0x60,0x87,0x8a,0x5c,0xe9,0x17,0xbd,0x2b,0x0f,0xa5,0xa1,0xf9,0x0d,0x4b,0x8c,0x4d,0x39,0xda,0x15
.byte	0x8c,0xc4,0x69,0xaf,0x2b,0xb0,0xa1,0xfd,0xd9,0x65,0x3c,0x87,0x4b,0xf2,0x5a,0xd7,0xd8,0xb9,0xef,0x78,0x67,0x30,0x4c,0x6c,0x92,0xc5,0x1e,0x15,0xf8,0xd9,0x74,0x1b,0x54,0x0c,0x10,0x1b,0xb5,0x11,0x13,0xd6,0xb4,0xc0,0x53,0x03,0x2c,0x4b,0xee,0xac,0xf9,0x87,0x17,0x51,0x35,0xb8,0x1a,0xdc,0x16,0x61,0x5b,0xe9,0x5a,0x43,0x94,0x42
.byte	0x8f,0x68,0xbd,0xb6,0x52,0x00,0x63,0xa3,0x52,0x6e,0x5d,0x8e,0xe9,0x4f,0xf5,0x69,0xd8,0x4f,0xf5,0x5c,0x89,0x7e,0x1c,0xb9,0xdc,0x7b,0x92,0x8a,0x2b,0xfc,0xb8,0xad,0xbb,0xff,0x61,0x2e,0xc0,0xdc,0xfb,0x2f,0x78,0x2a,0x50,0x32,0x9b,0x4c,0xfd,0x9e,0xab,0x80,0x5c,0x7d,0xc8,0x6b,0xb3,0x2d,0x0a,0xfe,0x43,0xa2,0x10,0x10,0x79,0xbc
.byte	0x8c,0xa0,0x86,0x09,0x8c,0x8b,0x28,0xf3,0x8a,0xc9,0xeb,0xcb,0xb5,0x0e,0x56,0x19,0xae,0xe0,0xa1,0x22,0x72,0xc5,0xad,0x01,0x12,0x69,0xb6,0x52,0xb8,0xdd,0x36,0x25,0x21,0xae,0x73,0x06,0xc1,0xe0,0x23,0x20,0xe1,0x8e,0xe4,0x99,0xcd,0x86,0xca,0xf5,0x93,0x0e,0x6b,0xb8,0xba,0x18,0x4a,0x36,0xed,0xd0,0x37,0xc8,0xc7,0x8a,0xb2,0x63
.byte	0x2e,0xa4,0x22,0x76,0x6f,0xf7,0xdd,0x81,0xd6,0x6f,0xcd,0xb9,0x65,0xf0,0x95,0x77,0xae,0xca,0x54,0x62,0xce,0x5d,0x47,0x9e,0x10,0x89,0xb9,0xfa,0x72,0x0a,0xef,0x24,0x17,0x45,0xb0,0xb0,0xc7,0x51,0x85,0xa1,0xb1,0x6a,0xd2,0xea,0x48,0xe2,0x6a,0x03,0x2a,0xdf,0xa8,0x0e,0x62,0xa2,0x1e,0xe2,0xa7,0x20,0x57,0xbd,0x73,0xeb,0xef,0x86
.byte	0xc9,0xd4,0xfa,0x96,0xfe,0xfa,0xb3,0xc6,0xbf,0x7a,0x16,0xa2,0x43,0x73,0x56,0x71,0x78,0x32,0x3b,0xc1,0xd8,0x26,0xbf,0xde,0x39,0x5d,0xbd,0x3b,0xff,0xd7,0x4f,0xa0,0x67,0xa6,0x09,0x9a,0x81,0xfd,0xec,0x34,0x73,0xcd,0x90,0x15,0x8b,0x3e,0x2d,0x6f,0x7d,0xcc,0xf5,0x20,0x15,0x07,0xa8,0x2f,0xa5,0x5b,0x2b,0x4f,0xb8,0x2f,0x14,0x6c
.byte	0x52,0x78,0xbd,0x92,0x98,0xda,0x69,0x19,0x58,0x4c,0x76,0xe4,0x20,0xb2,0x48,0xa4,0x9f,0x2f,0x4c,0x9b,0x45,0x7f,0x7d,0x1c,0x46,0xe9,0x1e,0x43,0x26,0x49,0x39,0xb6,0x42,0x3a,0x4c,0x59,0x95,0x6b,0x28,0xd5,0xbe,0xa7,0x2e,0xd0,0x0c,0x00,0xa0,0x67,0x06,0x4e,0xee,0xae,0x7f,0xc2,0xb5,0x12,0x46,0x3f,0xb4,0x35,0x16,0x2a,0xda,0xbf
.byte	0x41,0x34,0xbe,0x30,0x2a,0x0f,0x7b,0x60,0xa6,0x8b,0xcd,0xae,0x7a,0x8c,0xd6,0x97,0xab,0x06,0x1e,0x14,0x87,0x45,0xa3,0x3c,0x9c,0xc4,0xa0,0x1d,0xee,0xf0,0xca,0xb8,0xa6,0x8d,0x37,0x92,0xad,0xbc,0xe6,0x1f,0x65,0x75,0xd3,0xbc,0x72,0x66,0xe2,0xff,0xbc,0x19,0x93,0xae,0xee,0xd0,0x63,0x6d,0x97,0x6f,0x57,0xf3,0x77,0xcd,0xe3,0x57
.byte	0x3f,0x00,0xc8,0xe1,0x63,0x83,0x15,0x84,0xc6,0x08,0xdb,0x03,0xc9,0x27,0x47,0x4c,0x17,0x12,0x40,0x6e,0xac,0x74,0x6f,0x3c,0x22,0x57,0x36,0x29,0xbb,0x6a,0xc7,0x5a,0xfe,0x60,0x1c,0x0f,0x32,0x95,0x1b,0xf2,0x3c,0xed,0x04,0x87,0x4c,0x48,0xc7,0x63,0x79,0x24,0xb3,0x12,0xbf,0x55,0x3b,0x32,0xbf,0x52,0x4e,0x1e,0xc1,0x1f,0xf2,0xfd
.byte	0xe6,0xb8,0x56,0x38,0x0e,0xd2,0x75,0x3d,0x41,0x99,0x0c,0x7a,0x12,0x3f,0xa7,0x3a,0x79,0xa0,0xd7,0x6f,0x47,0x97,0x7e,0x9e,0xf6,0xfe,0x29,0xc0,0x16,0x34,0x38,0x80,0x2f,0xde,0x65,0x79,0xc9,0xfd,0xa0,0x84,0xc3,0x39,0xbc,0x0b,0xbe,0x18,0xba,0x0d,0xe3,0x35,0x11,0xba,0x9f,0xde,0x5d,0x0c,0xae,0x8e,0x0c,0x0f,0x66,0x9c,0xe6,0xfc
.byte	0x3d,0xdb,0x46,0xf1,0x84,0x57,0x62,0xb0,0x00,0xd4,0x8c,0xaa,0x93,0xeb,0xf7,0xa7,0x8e,0x82,0xba,0x89,0x67,0xbb,0x38,0xb0,0xb6,0x13,0x0c,0x96,0x22,0x9c,0x6a,0x86,0xea,0x83,0xad,0x5f,0x7b,0x3a,0x28,0xd8,0x53,0x90,0x2d,0xab,0xc9,0xbe,0x99,0xfb,0x68,0x42,0x27,0xf6,0xe3,0x5a,0xaf,0xf3,0xd6,0xee,0xb6,0xa2,0xe0,0x32,0x3c,0x1d
.byte	0xd4,0x3c,0x2b,0x58,0xc2,0x4f,0x3d,0x20,0x39,0xdb,0x80,0x89,0x20,0x20,0x7b,0xe6,0x1d,0xd0,0xa2,0x1a,0xd4,0x88,0xc9,0xe0,0xb9,0xf6,0xb2,0xa1,0xcd,0xf2,0x67,0x60,0x44,0xd8,0xce,0x6a,0xe2,0x52,0xc3,0xf3,0x61,0xa3,0x14,0x58,0xd6,0xe5,0x43,0x4a,0x8d,0xcc,0x4f,0xf8,0x17,0xdd,0xd2,0x5d,0xd5,0x5a,0x86,0x8e,0xc4,0x74,0xdc,0x1b
.byte	0xad,0xca,0x63,0x75,0xf0,0x43,0x41,0x16,0x02,0x49,0x6a,0x3a,0xe3,0xb9,0xa9,0xdc,0xfb,0x99,0xbc,0x60,0x0d,0xdb,0xa0,0xcf,0x27,0xaa,0xd5,0xc5,0x42,0x0b,0x02,0x00,0x43,0xaf,0xb5,0x4f,0xe1,0x88,0xa1,0x9d,0xca,0xfb,0x9f,0x1f,0x08,0x9c,0x66,0x23,0xca,0x4b,0x88,0xb4,0x40,0xdc,0xd3,0xd3,0x1a,0x64,0xe3,0x9b,0x43,0xea,0x20,0x90
.byte	0x30,0x2e,0xc4,0x75,0xc5,0x52,0xc5,0x7c,0x0e,0x35,0x56,0xf5,0x1f,0x50,0x2b,0xf6,0x28,0x93,0x6f,0xde,0x10,0xc6,0x49,0x2b,0x77,0xb1,0x6d,0xce,0xfd,0x37,0xd4,0x8d,0x11,0xed,0x88,0x1e,0xca,0x68,0x0c,0x4e,0x38,0x7f,0x0f,0xab,0x6f,0x8d,0x1c,0x7d,0xd4,0x7d,0xd8,0xa9,0x5c,0x24,0x5a,0x7d,0xf4,0x5b,0xb6,0xb7,0x28,0xc7,0x93,0xd6
.byte	0xa9,0xe5,0xac,0x62,0x16,0x9c,0x4e,0x5c,0x24,0xa0,0x2a,0x76,0xce,0x7d,0x5c,0x4b,0xbe,0xbc,0x83,0x5c,0x9a,0xc8,0x06,0x7b,0x1e,0xac,0x98,0x67,0x17,0x32,0x94,0xda,0xd1,0x8b,0x58,0xad,0x8e,0x26,0x03,0x81,0x7c,0x48,0xd1,0x83,0x03,0xba,0x6c,0x51,0xe9,0x25,0x82,0xd2,0xb9,0x7f,0xd8,0x33,0x3f,0x77,0x29,0x45,0x41,0xa9,0x17,0x3d
.byte	0x62,0xc6,0xd2,0xfb,0xd1,0x24,0xc7,0xee,0x10,0xc0,0x64,0xc3,0x46,0xc6,0x2b,0xe8,0x9c,0xc8,0x99,0x23,0x77,0xa9,0xb5,0x12,0xc4,0x53,0xde,0xbc,0x20,0xb2,0xc4,0x12,0xdb,0xc2,0x0b,0x63,0x70,0x6a,0x41,0x31,0x65,0x48,0xa0,0xfc,0xbc,0xd6,0x3f,0x55,0x18,0x17,0x65,0x35,0x58,0xe3,0x33,0xac,0xaf,0xca,0xb2,0x51,0xc1,0xcc,0x60,0x38
.byte	0x94,0x8f,0x13,0xb8,0xcc,0x8c,0xc4,0x12,0xea,0xd5,0x39,0xd3,0x46,0x55,0x17,0x27,0x7a,0x07,0x01,0x02,0x74,0xa6,0xe7,0xc8,0xa7,0xd0,0x76,0xc8,0x5e,0x57,0x50,0xc5,0x19,0xf1,0x95,0xa3,0x52,0x10,0xa3,0x1e,0xcd,0xb1,0x05,0x64,0xe5,0x69,0xd9,0x5e,0xfc,0x71,0xef,0xe1,0xf6,0xb3,0xa7,0xf7,0xf9,0x71,0xfd,0xbb,0x5b,0x2b,0x7a,0xd2
.byte	0x72,0x7c,0xc7,0x73,0x89,0xf7,0xe2,0x0b,0xcd,0x05,0x4f,0x0c,0x10,0xed,0xcc,0xda,0xb6,0x81,0x19,0xe6,0x2b,0x06,0x66,0xef,0xc5,0xfd,0xd5,0xc6,0x66,0x20,0x86,0x2a,0x4f,0x05,0x49,0xf1,0x54,0x4a,0x6e,0x1d,0xcd,0xad,0x18,0xeb,0x6c,0x58,0xd6,0x75,0x3e,0x62,0x48,0xab,0xea,0x1f,0x7f,0x05,0x45,0x6e,0x75,0x2a,0x5e,0x97,0x5b,0xde
.byte	0x5a,0x99,0x42,0xc1,0x62,0xab,0xc7,0x01,0x4d,0xac,0xd6,0xdc,0xc9,0x71,0x24,0xd1,0x33,0xe2,0x4b,0x1f,0x09,0x04,0x1f,0x0d,0x42,0x45,0xcf,0x7c,0xa0,0xee,0x48,0xfd,0x8b,0x1f,0xaa,0x50,0x48,0x6d,0x8e,0x34,0x76,0x09,0x23,0x8a,0x40,0x0d,0x5d,0xc1,0x2a,0xba,0x5f,0x9c,0x86,0xfb,0x37,0xdf,0x24,0xff,0x27,0x88,0xbf,0xf6,0xa4,0xc3
.byte	0xf0,0xd3,0x02,0xa8,0x7c,0x6d,0xc4,0xc5,0x14,0xc3,0x64,0x28,0xa8,0x05,0x33,0xc2,0xda,0x12,0xfc,0xbe,0x0d,0x8e,0xf4,0xf5,0x48,0x5a,0x8e,0x8a,0xd2,0x50,0x7c,0xc0,0xbc,0xde,0xdb,0x9a,0xf6,0xa0,0x92,0x8d,0x19,0xbc,0x5a,0xdc,0xbf,0xfb,0x13,0x8f,0x41,0x09,0xba,0xd9,0x0b,0x91,0x7a,0xdb,0x92,0x10,0xac,0xf2,0xb5,0x76,0xb5,0x7d
.byte	0x80,0x04,0xd6,0xec,0x98,0x09,0x5f,0x63,0x0d,0x58,0x00,0x8a,0x07,0x76,0xfa,0xe6,0x6e,0xdf,0xbf,0x73,0xe5,0xc9,0xe5,0x12,0x44,0x58,0xf9,0x2e,0xb1,0xe6,0x2c,0xf5,0x0d,0x94,0xa9,0x51,0x0d,0x01,0x03,0xab,0x79,0xf9,0xee,0x7e,0x10,0x4b,0xcb,0x20,0xbb,0x01,0x19,0xd6,0x12,0xd1,0xac,0x96,0xe9,0x0e,0xde,0xbf,0x7e,0x80,0xf6,0x58
.byte	0xc9,0xec,0xaf,0xf7,0x2d,0x98,0xbc,0x2b,0xb1,0xf1,0x34,0x94,0x39,0x8e,0xbc,0x13,0x13,0x41,0x8f,0xf3,0x4e,0x4e,0x6b,0x2a,0xaa,0xea,0x70,0x5c,0xf8,0x42,0xf7,0xbc,0xfd,0xbd,0x6f,0x62,0x1b,0xcb,0xb9,0x39,0xdc,0x6a,0x47,0x81,0xaf,0xff,0x5b,0x7e,0x80,0xb9,0xbf,0xfa,0x15,0x7e,0xd1,0xc3,0xb2,0x80,0x99,0xbd,0xb9,0x30,0x8d,0xb5
.byte	0x43,0x6b,0x7a,0x31,0xaf,0x45,0xf7,0xdd,0x21,0x8f,0x54,0xb1,0xf6,0x2d,0x7d,0x96,0x63,0x4a,0x93,0x98,0x37,0x7f,0x48,0x02,0x4b,0x0f,0x71,0xe4,0x70,0xce,0x66,0x6a,0x36,0xde,0x58,0x84,0x69,0xd6,0xbd,0x1a,0x9a,0x8b,0xc5,0xda,0x97,0xc5,0xe1,0x4e,0xec,0x9b,0x7a,0x65,0xe0,0xa5,0xdd,0x39,0x3c,0x9f,0xfd,0x45,0x17,0x4c,0x2f,0xb4
.byte	0xb1,0xb1,0x42,0xe8,0x88,0x75,0x9f,0xb4,0xc1,0xdf,0x44,0xf9,0x4f,0x9a,0xf7,0x3d,0x35,0xc5,0x32,0xbe,0x43,0xd0,0x0d,0x71,0x4e,0x21,0xbf,0x31,0x99,0x73,0x5a,0x84,0x45,0x2e,0x00,0x8b,0x42,0x2b,0x14,0x86,0x51,0xcb,0xa0,0x98,0xa9,0x68,0x8d,0xdb,0x58,0x3d,0x73,0x9d,0xf9,0x2d,0x86,0x76,0x62,0xcb,0x93,0x29,0x48,0x92,0x38,0xfb
.byte	0xeb,0x1d,0xda,0xc3,0x10,0x1f,0x32,0x68,0xee,0xcb,0xb7,0x8a,0xcb,0xcb,0xe0,0x37,0x31,0xe8,0xad,0x7b,0x4a,0x29,0x2c,0x10,0x9e,0xdf,0x86,0xeb,0x13,0x0c,0xab,0xa4,0x30,0x36,0xf0,0xe0,0xac,0x14,0x41,0xa4,0xf4,0xf8,0x44,0x95,0xe8,0x8f,0x28,0xc2,0x35,0x0a,0x44,0x61,0xc7,0x60,0xc5,0x3b,0xc4,0x1d,0x67,0xfd,0xac,0x0b,0x2e,0x49
.byte	0x62,0xea,0x17,0x3c,0xf5,0x4b,0xbe,0xba,0xba,0x42,0x02,0x0d,0x13,0xf1,0x15,0xff,0x2e,0x47,0x46,0xd1,0x27,0x64,0xb7,0x35,0x28,0x31,0xb5,0xde,0x1e,0xf9,0x26,0x6c,0x04,0x3c,0x0e,0x06,0x9d,0x4d,0xc7,0x1c,0x97,0x67,0x2c,0x6d,0x36,0x0d,0x4c,0x61,0x08,0xe9,0xbd,0x04,0x1d,0x8d,0xfb,0x0c,0x03,0x3d,0xb4,0x40,0xd5,0x1b,0x69,0x3b
.byte	0x68,0xcf,0x46,0x27,0xcf,0xb3,0xda,0x1e,0xdc,0x85,0x6f,0x4f,0x6b,0x09,0x9d,0xe9,0x6c,0x73,0x40,0x27,0xc9,0x8b,0x12,0x97,0xea,0x34,0xd7,0x51,0x32,0x90,0x4e,0xd7,0x91,0x41,0x3a,0xee,0xbc,0x97,0xb0,0x4a,0x39,0xdb,0xe3,0xe5,0x12,0x73,0xbf,0x5d,0x68,0xe0,0xc6,0x7c,0x6f,0x0d,0x14,0x1c,0xaa,0xde,0x29,0xb7,0xc7,0xa5,0x90,0x62
.byte	0xe9,0xc5,0x75,0x16,0xe6,0xc0,0x9d,0xc5,0xb8,0xd6,0xfa,0xb0,0x72,0xb7,0x27,0xa6,0xa8,0x3f,0xbf,0x18,0x8b,0xaa,0x94,0xb3,0x47,0x50,0x2f,0x1c,0x49,0xab,0x46,0x38,0x7f,0x3e,0xf3,0xf1,0xb8,0xb3,0x44,0xaa,0x1f,0x76,0xb4,0x67,0xff,0xcf,0x7c,0x4b,0xa9,0xe1,0x62,0x93,0x4d,0x3e,0x96,0xdb,0x56,0xf6,0x26,0x5d,0x95,0x4c,0xfa,0x5f
.byte	0x06,0x2b,0x5c,0x33,0x2d,0xf8,0xfa,0x68,0x8a,0xed,0x28,0x2a,0x6e,0x95,0x86,0x59,0x71,0xef,0x86,0x47,0x60,0xec,0x35,0x79,0xa9,0x98,0x2d,0x6e,0x20,0x26,0x3a,0x21,0xec,0x59,0x15,0x65,0xcd,0xb9,0x91,0x19,0x6e,0x74,0x89,0x3b,0x10,0x00,0xab,0x8a,0x45,0x23,0x20,0x94,0x03,0x02,0x77,0xb7,0xcf,0x9c,0x71,0x18,0x0c,0x5b,0x40,0x62
.byte	0x3b,0x8f,0xc9,0xf6,0x4c,0x8f,0x60,0x66,0x05,0x87,0x05,0x90,0xd4,0x08,0x76,0xd7,0xa3,0xb6,0x37,0xa8,0x83,0x05,0xb2,0x48,0xe9,0x24,0xc4,0xfb,0x79,0xa1,0xce,0xac,0x29,0x13,0x4e,0x72,0xdf,0xad,0x9e,0x5b,0xcd,0x9c,0x39,0x1d,0x3e,0x57,0x9d,0xf2,0x96,0x13,0xa4,0x79,0x4c,0x76,0x40,0x03,0xb3,0x18,0xcf,0xd7,0x45,0x2a,0x2d,0x07
.byte	0xe5,0x2e,0xb7,0x74,0xda,0x94,0xea,0x32,0x74,0xb0,0xca,0xf4,0xd1,0x09,0x97,0x3c,0x69,0x17,0xf6,0x5b,0x13,0x7b,0xb8,0xb1,0xd9,0x0e,0x12,0x44,0x29,0xea,0x26,0xd8,0xaa,0x9d,0x26,0x87,0x0c,0x89,0x4e,0xec,0x29,0x48,0x43,0x66,0x21,0x0b,0xab,0xce,0x40,0x57,0x4c,0xa7,0xdd,0x56,0xde,0xac,0x5c,0x62,0xea,0xc4,0x54,0x4a,0xe0,0x8d
.byte	0x54,0xc8,0x65,0x44,0xcc,0x6f,0x2a,0xcd,0x0e,0xb3,0xad,0xa3,0x30,0xd1,0xb7,0x19,0x70,0x51,0xd3,0x9a,0xcf,0xe5,0x42,0x6c,0xa1,0xc1,0x0f,0xe2,0xda,0x86,0xb4,0x51,0x50,0x62,0xdc,0x51,0x3f,0xd2,0xff,0xde,0x7f,0x38,0x5a,0xff,0x2d,0x21,0x1d,0x59,0xb9,0xdd,0xde,0x83,0x13,0xb0,0x25,0xf5,0xbb,0x11,0x47,0x4a,0xaf,0x81,0x15,0xa0
.byte	0x39,0x5b,0x30,0x17,0x2b,0xbf,0x5a,0x03,0x60,0xb6,0xbb,0x86,0x9f,0x50,0x45,0x15,0x0b,0xba,0x42,0xf4,0x3d,0x05,0x62,0xcd,0x9b,0x8c,0xcf,0x93,0x5c,0x33,0x6c,0xea,0x4b,0xd0,0x1d,0x91,0x3e,0xbf,0xa4,0x9d,0x7c,0x2c,0x87,0x9c,0x42,0x9f,0x03,0x98,0x03,0x1b,0x98,0x66,0x4f,0x8f,0x29,0x12,0xc5,0xb5,0xec,0x81,0xf8,0xb2,0x5e,0x44
.byte	0x4f,0xb0,0x31,0xe4,0x2a,0x73,0x83,0xac,0x5a,0x3f,0xfa,0xcf,0x8b,0x7c,0xa3,0xf1,0x01,0x14,0xa1,0xca,0x60,0x8d,0x6a,0x6c,0x04,0x31,0xcc,0xba,0x12,0xe0,0x4e,0xaf,0x01,0x8d,0xf5,0x60,0x23,0x79,0x8a,0x80,0xcc,0x32,0x31,0x69,0x83,0xb6,0x83,0xaa,0xd9,0x3b,0x86,0x4a,0xd8,0x10,0x28,0x09,0x82,0x36,0xee,0x6a,0xc0,0x80,0x3f,0xfd
.byte	0xb1,0xd2,0xde,0x34,0xf9,0x4c,0x87,0x5b,0xdd,0xd0,0xb6,0x2d,0x99,0x69,0xd3,0x2c,0xb7,0x0b,0xfc,0x16,0x88,0x7b,0x80,0x21,0xbc,0x30,0x7b,0x56,0xe5,0x7b,0x41,0x43,0x4d,0xaf,0x40,0x5e,0x74,0x14,0x17,0x66,0x32,0xd6,0x81,0x53,0x94,0x35,0xf0,0x0f,0x4f,0x99,0x54,0x9a,0x38,0xc0,0x2a,0xa9,0xd3,0x53,0xdd,0x9a,0xc5,0x29,0x18,0x62
.byte	0xf6,0x93,0xa3,0x02,0xf0,0x13,0xcb,0xcb,0xcc,0x64,0x0b,0x00,0xf4,0x43,0x03,0x26,0xe6,0x2f,0x39,0xa1,0x83,0xea,0x94,0x2f,0xde,0x61,0xbd,0xe1,0xbe,0x08,0xf8,0xd4,0x01,0x6e,0x61,0x98,0x01,0x39,0x4b,0x93,0x39,0x38,0x34,0x58,0x24,0xc1,0xf5,0x03,0x05,0x15,0x9c,0xf0,0x30,0x20,0x24,0xd4,0x7e,0x73,0xb2,0x60,0x06,0x3b,0xd3,0xb7
.byte	0x2c,0x47,0x17,0xc4,0x79,0x4e,0x45,0x0b,0x89,0xf0,0xfc,0x42,0xa0,0x0d,0x80,0xd2,0x44,0x36,0x70,0xaa,0x9e,0x72,0x85,0xa8,0xc8,0x1d,0x35,0x28,0xc3,0x5a,0x72,0x4c,0x06,0x6d,0xf4,0xae,0x54,0x86,0x9a,0x32,0x3c,0xa5,0x06,0x63,0xc1,0x37,0xbb,0xaf,0xa6,0xae,0xce,0x94,0xea,0x9c,0x4a,0x9e,0x56,0xb1,0xc3,0x84,0x84,0xef,0x3d,0xe9
.byte	0x24,0xf4,0xbf,0xc3,0xf6,0x45,0x74,0x4e,0xbb,0x86,0xd3,0x7f,0xab,0x19,0xe3,0x63,0x67,0x81,0xb6,0x18,0xc8,0x78,0x8e,0xf8,0x83,0x5f,0xfb,0x2e,0x49,0x97,0x2b,0x34,0xbb,0x76,0x2e,0x93,0xec,0xe9,0x7f,0x4d,0x7e,0x52,0x0c,0x92,0xbc,0x6d,0x3a,0x34,0x9b,0x5e,0x61,0x6f,0xea,0x45,0xe7,0x5c,0x34,0x6b,0xcb,0xc0,0x31,0x61,0x64,0x9d
.byte	0xad,0x7f,0x98,0xca,0xfe,0x3d,0xad,0xf7,0x21,0xf6,0x4c,0x2a,0x21,0x07,0x80,0x25,0xa2,0xea,0x26,0x85,0xc3,0xb1,0x74,0x04,0x7f,0xd1,0x1c,0x1b,0xa5,0x7e,0x96,0x45,0xfe,0x6f,0xa6,0x34,0xdf,0x94,0x1f,0x7e,0xfb,0xcf,0xfd,0x29,0xeb,0x3a,0xb0,0xfc,0xb6,0xd5,0x80,0x8b,0x37,0x71,0xfb,0x70,0x19,0x30,0xc4,0x6f,0xa0,0x5b,0xae,0x5b
.byte	0x75,0x51,0x98,0x89,0x9e,0xf0,0xf5,0x79,0xaf,0x1c,0x07,0xb6,0x5e,0xcf,0x34,0x70,0x0f,0x0b,0xbc,0x0a,0xa6,0x40,0xc7,0xf8,0xe4,0xef,0xe6,0xb7,0x94,0x6e,0x98,0x75,0x22,0x73,0x5c,0xca,0xcc,0xfb,0x09,0x2f,0x9c,0xfe,0x49,0x0f,0xd3,0x65,0xfe,0xd4,0xf0,0x9b,0xeb,0x8c,0xd7,0x8c,0xff,0x4b,0x18,0x3e,0xf3,0x9d,0x3f,0xf5,0x83,0xd6
.byte	0x1d,0x3d,0x23,0x79,0x0f,0xae,0x17,0x62,0x33,0x07,0xc3,0xac,0x98,0x07,0x72,0x9b,0xd9,0x26,0x5c,0x1a,0x9d,0xf1,0x35,0x92,0xf9,0x38,0x17,0xf8,0xee,0x26,0xf9,0x64,0xfc,0x5e,0x8b,0x80,0xce,0xdb,0x64,0xf7,0xde,0x20,0x19,0x5c,0x26,0xf6,0x23,0xd6,0x99,0x8e,0x75,0x77,0x3d,0x17,0x0f,0xea,0x31,0x5a,0x65,0x32,0x1b,0x78,0x78,0xe4
.byte	0xfe,0x76,0xf8,0xa7,0x81,0x34,0xf1,0x2a,0x13,0x22,0xe4,0x8a,0xe1,0x42,0x5a,0x3f,0x44,0x22,0xeb,0x7e,0xcd,0x20,0xcd,0xf7,0x44,0x1a,0x87,0xb9,0x7a,0x0e,0xf8,0xcb,0xb5,0x0a,0x1f,0x6a,0xe6,0x0b,0x70,0x59,0x38,0xa3,0x6b,0x64,0x7b,0x61,0xfe,0xbd,0xa4,0xb7,0x89,0x7a,0x28,0x70,0xfe,0x9d,0x64,0x2c,0xe9,0xc4,0xc9,0x2f,0xc8,0x3e
.byte	0xfa,0x70,0xce,0x21,0x9b,0xa8,0x10,0x6a,0x16,0xdd,0x28,0xce,0x4e,0xd4,0x6c,0x8c,0x47,0x83,0x13,0x8b,0xec,0x1c,0x76,0xdc,0x4d,0x81,0x25,0x08,0xd8,0xf9,0xde,0x66,0x1d,0xe2,0xf3,0xe7,0xdc,0x3e,0x3c,0x6b,0x98,0x25,0x55,0x88,0xe8,0xda,0x7f,0x16,0xe5,0x7d,0xad,0x8a,0x36,0x00,0xf0,0x68,0xc5,0xe4,0xfc,0xe9,0xe3,0x54,0xeb,0x4c
.byte	0xd1,0xff,0x07,0x1a,0x5c,0x5e,0xd4,0xb1,0xff,0x7d,0xfc,0x5b,0x34,0x42,0x95,0x89,0x01,0x24,0x8e,0x30,0xec,0xfe,0x67,0xf8,0xe2,0xaa,0xd5,0x6a,0x9f,0xe3,0xc3,0xa5,0x53,0x7f,0xd3,0xf4,0x98,0xa5,0x47,0x11,0xad,0xac,0xea,0xba,0x20,0x34,0x03,0x65,0x8c,0xec,0xb6,0xa3,0x2b,0xf6,0x93,0xe1,0xc8,0xad,0x34,0x30,0x8f,0x0e,0x3b,0xf6
.byte	0x63,0xc6,0x58,0xc3,0xe8,0xa3,0x85,0xf8,0x24,0x8e,0x21,0xb9,0x36,0x7c,0xe0,0x11,0x64,0x31,0x6a,0x6a,0xa2,0xad,0xd3,0x94,0xbb,0x13,0x5b,0xb4,0xe9,0xee,0x09,0xdc,0xfe,0xb2,0xad,0xa8,0x43,0x02,0xba,0x85,0x1f,0x56,0xcb,0xb5,0x95,0x32,0xcc,0x7e,0xe0,0x00,0xde,0xfa,0x3f,0x91,0x71,0xde,0x21,0x19,0xff,0xc9,0x97,0x43,0x95,0xd8
.byte	0x0d,0xc2,0x8a,0xde,0xcc,0x34,0x48,0xf4,0x35,0x41,0xb8,0x56,0x52,0xce,0x06,0xb3,0xcf,0xd4,0xae,0x7a,0xcb,0xe9,0xed,0x37,0xd6,0x76,0xa0,0x77,0x04,0xfb,0xb7,0x41,0x25,0x38,0xe1,0xd1,0xb5,0xde,0x21,0xe0,0x64,0xd8,0x83,0x13,0x7b,0x4b,0xb8,0xc9,0x12,0x02,0x51,0x56,0x52,0xe9,0x1c,0x49,0x48,0x83,0xd0,0x99,0x73,0x60,0x4a,0x4c
.byte	0x7d,0x8d,0x43,0xf9,0x06,0xa4,0xbb,0x0e,0xb6,0xdd,0x5f,0xc7,0x5e,0x35,0xcb,0xa0,0xc1,0x66,0x4a,0xe3,0x4a,0xa9,0xec,0xa4,0x5a,0xd7,0xd6,0xea,0xa5,0x20,0xa6,0xc3,0x1b,0xc0,0xa8,0xd1,0xf1,0x08,0x05,0xab,0x40,0x14,0x35,0xf2,0xdd,0x0f,0xc5,0xda,0xb3,0xa6,0xb1,0x07,0x36,0x17,0x5d,0xe9,0x96,0x23,0x96,0x46,0xd4,0xa7,0x71,0x64
.byte	0x13,0x72,0x4e,0x83,0xe0,0x65,0x40,0x41,0xaf,0xb6,0x5b,0x00,0xa2,0xab,0x09,0x7f,0xa5,0xd5,0xc2,0xd9,0xc0,0x68,0x2a,0x44,0xdc,0x43,0x37,0x81,0xb8,0x88,0x4c,0x85,0x1b,0xb1,0x83,0xb2,0x56,0xa3,0x91,0x0f,0xa6,0x70,0x3f,0xbd,0xe9,0xda,0x40,0x9b,0xf5,0x9e,0x53,0xed,0x5f,0x84,0x70,0xd2,0x4c,0x1c,0xb6,0x87,0xd6,0xbb,0x3b,0xec
.byte	0xe5,0x35,0x1b,0x2c,0x9b,0xf1,0xe5,0xf8,0x0e,0x07,0x98,0xcc,0x58,0x38,0x57,0x74,0xdb,0x0e,0x08,0xd9,0x56,0xe8,0x08,0x63,0x3d,0x94,0x4a,0xdc,0x59,0xfc,0x3d,0xc1,0xa4,0x36,0xc3,0xe8,0xbe,0x4b,0xd7,0x47,0x69,0x33,0xb8,0x72,0x30,0x59,0x28,0x4e,0xf1,0xc1,0x25,0xa3,0xa4,0xe3,0x12,0xcf,0x31,0xf6,0xf8,0xae,0x31,0x06,0x76,0x92
.byte	0x64,0x87,0x8e,0xb0,0x9f,0x1d,0xf4,0x56,0x73,0xc5,0x5d,0xbb,0x80,0x0d,0x19,0x3f,0x56,0x8c,0xe4,0xd6,0x8a,0x9a,0x62,0x26,0x4e,0x8a,0x21,0x7d,0x72,0x34,0x87,0xb6,0x7e,0x49,0xdc,0xfd,0x27,0x95,0xba,0x25,0xdd,0xf4,0x58,0x2b,0x11,0x3f,0xd1,0xd7,0x13,0x1d,0xb0,0xec,0xe2,0x55,0x5e,0x72,0xea,0x36,0xc9,0xd8,0x61,0xc0,0xee,0xc4
.byte	0x9f,0x35,0x7e,0x73,0xd3,0xf6,0xd7,0x6a,0xce,0xd6,0xd2,0x80,0xe6,0x10,0x4b,0x65,0x18,0x6f,0xab,0xd3,0x41,0xbb,0x39,0x36,0x95,0x84,0x3c,0x99,0x9a,0xfd,0xf0,0xa3,0x46,0xdf,0x48,0x7c,0xd5,0x57,0x9d,0x10,0x59,0xca,0x70,0xc4,0xb5,0xbe,0x47,0x9e,0xca,0x2b,0x49,0x54,0xbb,0x34,0x8e,0x39,0xf4,0xf8,0x8c,0xa5,0xa1,0xab,0xf6,0x51
.byte	0xd8,0x22,0x9a,0xd5,0xc2,0x12,0xf8,0x26,0xc6,0x19,0x2a,0xa6,0x6e,0xab,0xd3,0xac,0xd1,0x21,0x97,0x67,0x3e,0x39,0x90,0x5c,0x37,0x65,0x7b,0x06,0x54,0x1a,0xb8,0x2a,0x56,0x02,0xa3,0x92,0xee,0xf3,0x38,0x53,0x25,0x4d,0x5d,0x0a,0x37,0x9e,0xbb,0xf4,0xb2,0x13,0x77,0xbb,0x93,0xa9,0x85,0xf2,0x15,0xfd,0x71,0x17,0x00,0x89,0xe7,0x7b
.byte	0xa9,0xdc,0x10,0xd9,0xc7,0x44,0xa5,0x7b,0x3f,0x2f,0x1e,0x6d,0xa7,0xfe,0x0c,0x0e,0x83,0x3e,0x38,0x27,0xa7,0x4e,0x85,0x3c,0x84,0xfe,0x95,0x48,0x85,0x09,0x75,0x62,0x1d,0xa4,0x64,0x54,0xed,0x89,0xd5,0x28,0x62,0x52,0x18,0xef,0xf0,0x57,0x05,0x30,0xf0,0xce,0x87,0x05,0x0d,0x81,0xe8,0x2a,0x3c,0x8c,0x22,0xe1,0x4b,0x32,0x42,0x9d
.byte	0x02,0xc5,0xe4,0x6a,0xa4,0x4d,0x9b,0xc4,0x82,0x47,0xdc,0x61,0xbd,0x82,0x01,0xcd,0x5e,0x64,0x9f,0x4c,0xe3,0x31,0xe9,0x48,0x53,0x85,0x07,0xc7,0x47,0x49,0x35,0xd8,0x6a,0xab,0x4f,0x73,0x3f,0xd3,0xde,0x87,0x29,0xac,0xbc,0x35,0x0a,0xb4,0x74,0xc2,0xa7,0x0b,0xb1,0x93,0x92,0x29,0x3b,0x3e,0xa8,0xde,0x12,0x49,0x75,0xda,0x16,0x27
.byte	0x52,0x2f,0x93,0x23,0xd6,0xf7,0x10,0xfe,0x1e,0x93,0x97,0x06,0x9d,0xef,0x4f,0xe4,0x3d,0x5d,0xde,0x30,0x70,0x3d,0x78,0x3a,0x30,0x00,0x9b,0x77,0x12,0x90,0x62,0xda,0x32,0x9b,0x6a,0x47,0xd7,0x0f,0xee,0x75,0x18,0xdd,0x4d,0x8a,0xe2,0x35,0x5b,0x60,0xb8,0xf9,0xa4,0x6c,0x93,0x3e,0x47,0x23,0xed,0x7a,0xe2,0x58,0x42,0xd6,0x3f,0x90
.byte	0xc0,0x12,0x38,0x8b,0x70,0xe0,0xf8,0x1a,0xb5,0x8d,0xe1,0x39,0xdf,0x93,0x25,0x72,0x2e,0xa9,0x3f,0x58,0x12,0x40,0xc4,0x92,0x46,0x08,0xf0,0x64,0xdd,0x34,0x42,0xfe,0x74,0x35,0x0c,0xda,0xef,0x06,0x0b,0x33,0x59,0xd9,0xee,0x4c,0xf9,0x02,0x3a,0x93,0x40,0xa3,0x99,0x0e,0x64,0x11,0x2f,0x52,0x9d,0x28,0x4d,0xe8,0x45,0xd0,0x22,0xd7
.byte	0x8f,0xd6,0x28,0x8c,0x0e,0x18,0x87,0x24,0xf9,0x88,0xd2,0xc0,0xe8,0xd4,0x9d,0xa2,0x5a,0x79,0x83,0x37,0x18,0x84,0x12,0xca,0xc7,0x10,0xd5,0x5a,0xa8,0xe5,0xa8,0xe7,0x79,0xb6,0x2c,0xb3,0x90,0x6c,0xc5,0xa4,0x99,0x1b,0x85,0x29,0x78,0x0b,0x09,0x77,0x05,0xf4,0x23,0x79,0x5c,0x91,0xf3,0xe0,0xe4,0x6f,0x82,0x33,0x4e,0xa2,0x2e,0xa2
.byte	0x65,0x79,0xad,0x98,0x36,0x34,0x72,0x97,0xd7,0x39,0x89,0x5e,0x82,0x9f,0x4c,0xe2,0xea,0x51,0x85,0x62,0x0c,0x39,0xf6,0xdc,0xc6,0x80,0x48,0xcf,0x98,0x93,0x64,0x7d,0xf9,0x63,0xf4,0xf5,0x18,0x2a,0xb6,0x04,0xb7,0x44,0xc4,0x60,0xc0,0xcf,0x3d,0x88,0xa8,0xb6,0x81,0xa3,0x99,0x2a,0xf0,0x1a,0x8d,0x76,0x20,0x1d,0xcc,0x10,0x50,0x58
.byte	0x09,0xf9,0xda,0x65,0x60,0xc3,0xb1,0xc1,0xc0,0x4d,0x62,0x52,0x22,0x45,0x32,0xbc,0x11,0x93,0x15,0xb6,0x25,0x8f,0x65,0xa0,0x4c,0x88,0xc9,0x83,0xe1,0x5c,0xbb,0xfb,0x1a,0xab,0xdb,0x35,0x40,0x66,0xc0,0x2f,0xdc,0xf5,0x92,0x08,0x4c,0xc7,0xb8,0x49,0x05,0xe0,0xe1,0x61,0x2b,0xde,0xc7,0x6a,0x04,0x05,0x4d,0x9f,0xe9,0x59,0x22,0x56
.byte	0x63,0x77,0x9d,0xe3,0x1e,0x36,0xdf,0x87,0x4a,0xeb,0xba,0x42,0x3d,0x1b,0xa5,0xd0,0xc5,0x44,0x07,0xbe,0x37,0x37,0x70,0x10,0x2d,0x02,0x9b,0xf6,0x52,0xf3,0x54,0x6d,0x50,0xdb,0xdb,0x57,0x01,0x0b,0x9b,0xd5,0x99,0x99,0x69,0x9b,0x10,0x76,0x48,0xea,0x28,0x27,0x06,0x30,0x63,0x3b,0xdf,0x06,0x30,0x37,0x28,0x75,0xcf,0x9c,0xe7,0x52
.byte	0x43,0xe2,0xd5,0x7b,0xfa,0x88,0x98,0x9c,0x3e,0x27,0x30,0x21,0xcc,0x11,0x71,0x14,0x24,0x04,0x1a,0x8c,0xe9,0xfe,0x2f,0x9d,0xec,0xb1,0x10,0x33,0x05,0x31,0x01,0x1b,0xde,0x6b,0x30,0x20,0x6d,0xf4,0x7c,0xbf,0x41,0x04,0x5f,0xb9,0x9c,0x24,0x63,0x74,0x98,0x3e,0x60,0xc7,0xf1,0xb1,0xc6,0x94,0xf3,0x6f,0x95,0x24,0xdf,0x97,0xd5,0xc7
.byte	0x50,0x19,0xaf,0xa5,0xae,0x51,0xde,0x6d,0x44,0x0c,0x90,0x72,0x11,0x82,0x04,0xf9,0xda,0x17,0xd8,0xf3,0x03,0xf2,0x03,0x3f,0x65,0x7f,0xd7,0x66,0x84,0x9a,0x02,0x90,0x2b,0x65,0x00,0xd9,0x9c,0xfb,0xaa,0xe2,0xde,0x5f,0x1e,0x19,0x1e,0x6d,0x20,0x1e,0x01,0xf1,0xca,0x7b,0x90,0x06,0x96,0x1d,0x7a,0x34,0x0c,0x66,0x57,0xd7,0x61,0x1f
.byte	0x74,0x03,0xcb,0xae,0xea,0xaf,0x65,0x8e,0x32,0xbe,0xb8,0xe6,0xd8,0x6d,0xf7,0x51,0x6d,0xec,0x7e,0xc6,0x9d,0x20,0x01,0xbf,0xd7,0xbc,0xcb,0x34,0x7c,0xe5,0x1f,0x92,0x72,0x2f,0x6f,0xa3,0x1f,0xe8,0x4d,0x7e,0xa5,0x85,0x3b,0xed,0xc7,0x25,0x53,0xe3,0x77,0x90,0x1f,0xda,0xb7,0x48,0x7d,0xbe,0x20,0x48,0x9f,0xb4,0x05,0x5d,0x41,0xc5
.byte	0x48,0xd0,0xc9,0x83,0xbe,0xf8,0xd8,0x6b,0x0d,0x26,0x66,0x2e,0xef,0x6b,0x13,0x58,0x6b,0x5f,0x0e,0x8b,0x4e,0x57,0xb2,0x6b,0x3d,0x4d,0xcd,0xcb,0x9a,0x9b,0xda,0x4d,0x7f,0xea,0x17,0x06,0x7f,0xcd,0xaf,0x18,0xda,0x3d,0xf0,0x30,0x2e,0xbb,0xc2,0x1d,0xcf,0xde,0xf7,0xee,0xda,0xd6,0x3d,0x75,0xcf,0x19,0xcf,0xfc,0xdf,0x7a,0xb6,0x1f
.byte	0x89,0xf5,0x0c,0xe9,0xd5,0xf1,0xd0,0x40,0xbd,0xae,0xb5,0x16,0xf6,0x05,0x1e,0xba,0xcd,0x18,0x80,0x4a,0xb3,0x87,0x93,0x6b,0x19,0xfc,0x47,0xa8,0x45,0x4b,0x75,0xe8,0x06,0xc0,0xbd,0x86,0xf7,0xcf,0x2c,0x39,0xc6,0x0b,0x3f,0x32,0xcd,0x1c,0x02,0xec,0x4b,0xd5,0x90,0x84,0xaf,0xc9,0x5c,0x9e,0x64,0x82,0x13,0x81,0x05,0x03,0xe4,0xed
.byte	0x48,0x23,0xc3,0x53,0x2c,0x5a,0x22,0x0a,0x27,0x7e,0x55,0x79,0xdc,0x46,0xf5,0x4b,0x04,0xcc,0x43,0x87,0x6c,0xb5,0xa4,0x2d,0x78,0x70,0x02,0x43,0x0e,0x76,0x62,0x99,0x86,0x40,0x2a,0xe4,0x62,0xe6,0xee,0x4e,0x03,0x64,0x83,0x9c,0x38,0x6d,0x62,0xa6,0x85,0xb8,0xce,0xd7,0xf8,0xcb,0x78,0x00,0x7a,0x48,0x72,0x75,0x4e,0x9c,0x6f,0x0c
.byte	0x61,0xc7,0x93,0x4e,0x6d,0x65,0xa3,0x1b,0x17,0x84,0xc6,0xd2,0x29,0xc3,0x4d,0xe3,0x14,0x21,0x5f,0x9e,0xa9,0x28,0x11,0xf3,0xb2,0xe8,0xe7,0x60,0x9e,0x24,0xab,0x88,0x9c,0x9c,0x5e,0x17,0xe4,0xe1,0xa7,0x74,0xb4,0x82,0xd5,0xaa,0x92,0x08,0xa7,0xa2,0x04,0x6f,0x77,0x14,0x54,0x44,0x5d,0x13,0x10,0xa2,0x40,0x1d,0xf0,0x44,0x16,0x17
.byte	0xda,0x8c,0x80,0x83,0x2b,0x19,0xb8,0xab,0xf2,0xb8,0xb1,0x92,0xb5,0xc5,0x05,0x3e,0xd2,0x1a,0xfc,0xfd,0x21,0xa6,0xb2,0xbd,0x89,0xee,0x9c,0x3c,0x90,0xd9,0xf1,0xd2,0xe8,0xc3,0x21,0xb9,0x0e,0x0c,0x98,0xbc,0x5e,0xa1,0x0d,0x89,0xfe,0x0f,0x3c,0x45,0xea,0xe1,0x6e,0x06,0x59,0xff,0x79,0xf4,0x7e,0xf4,0x82,0xc0,0x6b,0xd9,0x53,0x30
.byte	0x98,0xed,0x8d,0x6f,0x3d,0x0e,0xfb,0x42,0x66,0xab,0x41,0xa8,0x4a,0xef,0x73,0xa4,0x54,0x99,0x4f,0xb6,0x65,0x44,0xf9,0xd9,0x3c,0x6b,0x59,0x36,0xb0,0xe3,0x7c,0x4a,0x85,0x80,0x6c,0x77,0x6f,0x34,0x4e,0x9e,0x54,0xfd,0x0c,0x25,0x72,0xc3,0x5a,0xb6,0x3b,0xad,0x2b,0xd5,0x29,0x55,0x31,0xab,0x62,0xe4,0x15,0xed,0xef,0x16,0xef,0x43
.byte	0xd5,0xdd,0x3d,0x64,0x8c,0x13,0xbc,0xcd,0x4d,0xfb,0x4f,0x86,0x3b,0x73,0x1e,0xc4,0xe8,0x54,0xb4,0xcc,0x49,0xba,0x4f,0x81,0xcd,0xe8,0x30,0x92,0x4b,0x57,0xd1,0x7c,0x0c,0x65,0x7d,0xe1,0x59,0xc6,0x8c,0x7d,0xad,0xd5,0xcf,0x6c,0xc4,0x9d,0xc5,0x3f,0x23,0x1f,0xb0,0x6d,0x1c,0x07,0xbf,0x38,0xc9,0x16,0xdc,0x5b,0x51,0xa1,0xdb,0x8f
.byte	0xf8,0x25,0xc6,0x4d,0xc0,0x4d,0xa1,0x02,0xd9,0xd3,0xb5,0x63,0xda,0xe1,0x91,0x60,0x71,0x39,0x46,0x1a,0x13,0xe0,0xf2,0xca,0xcc,0xd3,0xbb,0x6b,0xd0,0x64,0xaa,0x0e,0xc0,0x89,0xa3,0xc6,0x14,0x56,0xe4,0x44,0x97,0xa9,0xcc,0x17,0x68,0xe6,0xfc,0xe5,0xfd,0xf0,0xa6,0x69,0xcd,0xac,0x20,0xc7,0xeb,0x53,0x1b,0x4f,0xdd,0xd3,0xb0,0xed
.byte	0x30,0x4e,0x36,0x73,0x63,0xef,0x51,0x3e,0x9a,0x3e,0x41,0x2b,0x9c,0xda,0x67,0x96,0x46,0x33,0xe3,0x3f,0x87,0x01,0xd8,0xc5,0x26,0x80,0xe4,0x7e,0xf4,0x78,0x8c,0x2b,0x81,0x2a,0x01,0x7c,0xe3,0xfc,0x8d,0x6b,0xdc,0x84,0xb9,0xff,0x43,0x37,0x57,0xce,0x3f,0x5e,0x63,0xd3,0xbe,0xb6,0x4a,0x31,0xbf,0xb8,0x74,0x64,0x9c,0xf3,0xc5,0x8a
.byte	0xae,0xe8,0x5f,0x68,0xcf,0xce,0xff,0x3f,0xc5,0xb5,0xfd,0x13,0x08,0x11,0x9d,0x1a,0x0f,0x06,0x08,0x4d,0x7c,0xf9,0xd4,0x20,0xdf,0x82,0xf9,0x86,0xfc,0xf3,0x67,0xa0,0x14,0x99,0xe5,0x47,0xf0,0x02,0x7b,0x16,0xca,0xcf,0xb9,0x0f,0x68,0x08,0x5d,0x1d,0x65,0xee,0x23,0x56,0xeb,0x11,0x5b,0xca,0xf1,0xa7,0xad,0x50,0xb2,0xd1,0x37,0x65
.byte	0xe9,0x7e,0xf6,0xe9,0x64,0x42,0x49,0x80,0x40,0x17,0xe3,0x43,0x00,0xda,0xe1,0x7a,0x1c,0xb3,0xde,0xd9,0xf7,0x33,0xeb,0xb3,0xb8,0xf5,0x40,0x1b,0xcd,0x71,0x97,0x30,0xf9,0x9c,0x4d,0xac,0x7e,0x8e,0xd9,0x36,0x92,0x39,0xb5,0x56,0x0f,0x4f,0xbf,0x58,0xb8,0xba,0xc3,0xbd,0x79,0xb0,0xd7,0x6c,0x45,0x49,0xe2,0xde,0x94,0x04,0x9d,0x3e
.byte	0x91,0x0a,0xb2,0x9b,0x90,0x57,0x2e,0x69,0xa4,0x4f,0x61,0xbf,0xdb,0xfb,0xe3,0xe9,0x81,0x26,0xe0,0x48,0x90,0x8c,0x32,0x95,0x8d,0x38,0xec,0x8e,0xa7,0x5e,0xc3,0x36,0xc6,0xd1,0xbc,0x9a,0xb3,0xba,0xdb,0x2c,0xe4,0xa0,0x50,0x74,0xef,0x98,0x48,0x14,0xc9,0x38,0x4d,0xa9,0x48,0x13,0xd4,0x08,0x60,0xfd,0xcf,0x5e,0xf2,0xcd,0xc7,0xeb
.byte	0xaf,0x88,0x32,0x30,0x6f,0x19,0x01,0xec,0x87,0xae,0x6d,0x63,0xa3,0xa7,0x7b,0xcd,0x53,0xa7,0xf2,0xf2,0x9f,0x43,0xcb,0x0a,0x3f,0x8c,0xd2,0x55,0x8d,0xa7,0x95,0xcf,0x5b,0xae,0x64,0x23,0xda,0xb4,0xbd,0x32,0x34,0x95,0x8a,0x03,0xe7,0x6e,0xef,0x3f,0xb4,0xcf,0xc6,0x8a,0x2f,0xc6,0x59,0x99,0xdf,0xad,0x3c,0x15,0xed,0x83,0x0b,0x59
.byte	0x8b,0xcd,0x0d,0xa6,0xcf,0x3a,0xc3,0xdb,0xc3,0x01,0xa9,0x32,0x38,0x45,0x5c,0xc8,0x56,0x81,0xef,0x21,0x7f,0x52,0xc4,0xb5,0x48,0x97,0x6a,0x60,0x75,0x3a,0x1a,0xd3,0xb0,0x60,0x9a,0x83,0x61,0xad,0x3b,0x4b,0x65,0xaa,0x9e,0x77,0x47,0x6f,0x3b,0x48,0xb0,0xc6,0x36,0x9a,0x59,0x5e,0x26,0xc4,0xb9,0xed,0x04,0xf3,0xc7,0x09,0x33,0xda
.byte	0x81,0x63,0xa6,0x5d,0xe1,0x54,0x6b,0x04,0x17,0x2b,0xb9,0x2f,0xbd,0x55,0xdb,0xa1,0x69,0x00,0xcd,0xba,0xfa,0x36,0xaa,0x47,0x5a,0x7c,0xf4,0x1f,0x53,0x94,0x95,0x2f,0xf8,0x2a,0x4b,0xa8,0xcc,0x73,0xab,0xfd,0x25,0xb2,0x4e,0xd6,0x62,0x90,0x8c,0x8f,0x02,0xe4,0xdc,0x22,0x79,0x04,0x34,0x9b,0x54,0x5c,0x54,0xca,0x9b,0x8a,0xf8,0x05
.byte	0xd1,0xb0,0x9e,0x8f,0xa3,0x0b,0x53,0xa8,0x6f,0x1b,0x2e,0xf2,0x71,0x78,0x28,0xce,0xa9,0xdb,0x4c,0x5b,0x83,0xfe,0xaa,0xff,0x99,0x2f,0x03,0x14,0xb2,0xe0,0x5f,0xaa,0x65,0x15,0x1f,0xd2,0x31,0x95,0x70,0x3c,0x8b,0x55,0x8e,0x87,0xed,0xbb,0x0c,0x91,0x87,0xaa,0xbe,0x49,0xdb,0x18,0x7b,0x1d,0x26,0xa7,0xdf,0x00,0xff,0x73,0x70,0x2e
.byte	0x10,0xaf,0x46,0xea,0x7f,0xca,0xfa,0x09,0x13,0x02,0xac,0x3f,0xa0,0x02,0xa6,0x67,0xb7,0xec,0x18,0x73,0x91,0x25,0xa0,0x28,0xe3,0xd8,0xfa,0x11,0x6d,0x34,0x79,0x1d,0xe4,0x8f,0x7c,0x73,0x66,0x77,0x3e,0x43,0x23,0xb0,0xee,0x84,0xb5,0x75,0xc9,0x23,0x87,0x6a,0x4f,0x59,0x3d,0xb5,0xf1,0xd6,0x06,0xf8,0xa6,0x5d,0x0c,0x24,0xed,0x94
.byte	0xd7,0xa8,0x31,0x37,0x10,0x60,0xb6,0x03,0x33,0x27,0x38,0xdd,0xd3,0x74,0x02,0xa3,0xa6,0x01,0x94,0xa9,0x56,0x11,0x23,0x0e,0xdb,0xfd,0x25,0x92,0xa8,0xfb,0x79,0xc8,0x8e,0x0e,0x10,0x1f,0xca,0x95,0xf6,0xad,0x28,0xe7,0xaa,0x2b,0xf1,0x40,0xf6,0xef,0x7b,0x40,0x28,0x57,0xbb,0x4c,0xac,0x0b,0x8b,0xb3,0xe3,0xec,0x53,0xf2,0x15,0x61
.byte	0x2e,0x91,0xdf,0x91,0xfb,0x55,0xb6,0x7f,0x6c,0xfc,0xb7,0x4b,0x91,0xdc,0xf7,0xe5,0x91,0xd8,0x70,0x92,0x94,0xea,0x3f,0x62,0x98,0x14,0xc3,0x43,0x34,0x02,0x87,0xc7,0xca,0x60,0x4a,0xfb,0x50,0xe4,0xa9,0x92,0x10,0x04,0x7c,0x55,0xd3,0x9a,0x89,0xba,0x8e,0x6f,0x02,0xd6,0xc7,0x6f,0x91,0xb5,0x87,0xb9,0x0e,0xbe,0xe4,0x9f,0x01,0x0b
.byte	0x20,0x60,0xc8,0x16,0xe6,0x23,0x1d,0x5f,0x4d,0x82,0xf4,0x42,0x25,0xe6,0x05,0xe3,0x5b,0xbb,0xd1,0xb0,0xad,0x0b,0x05,0x71,0x3a,0x7b,0xee,0x0e,0xe1,0xe4,0x08,0x9f,0xda,0xdf,0x59,0x57,0x4f,0x05,0x5a,0x51,0x9a,0x60,0xfd,0x85,0x21,0xd1,0x0a,0x3b,0x0a,0x15,0x61,0x28,0x98,0x0a,0x8f,0x1e,0x33,0x15,0xb3,0x5f,0xf3,0xbb,0x89,0x22
.byte	0x0c,0xaf,0x91,0xce,0x44,0xb1,0x54,0xd0,0x80,0x86,0x43,0xa1,0xb9,0x07,0xde,0xab,0x1f,0x9b,0xae,0xef,0x07,0xf2,0x40,0x33,0x31,0x4d,0xf9,0x45,0x97,0xf6,0xcc,0xe5,0x3c,0x49,0xcd,0x83,0x6e,0x38,0x81,0xab,0x40,0x18,0xda,0xf6,0xfe,0xe7,0x96,0xd1,0x17,0x98,0xae,0xec,0xe9,0x93,0x37,0xbc,0x0b,0xa8,0x12,0xe7,0x65,0xca,0x27,0x37
.byte	0x6a,0x74,0x81,0xf1,0xe0,0x6c,0x0d,0xba,0x86,0x48,0x94,0xd0,0x72,0xd5,0x4d,0x71,0xcf,0xa8,0x5e,0xd1,0x97,0xd1,0xed,0xf0,0xd3,0xe4,0xe3,0x41,0xc9,0x8f,0xfc,0x89,0xe8,0xbf,0x96,0x8b,0x86,0xb0,0x97,0x79,0x95,0xdf,0x69,0x56,0x6d,0x61,0x0a,0x37,0xcb,0x36,0xe1,0x95,0x88,0xf5,0xf0,0xe2,0x5c,0xb2,0x44,0x73,0xda,0x83,0xa7,0xdc
.byte	0x8b,0x35,0x3e,0xc1,0xd5,0x88,0x17,0x3b,0xeb,0xcf,0x36,0x9c,0xef,0x40,0xb2,0x72,0xde,0x4f,0x16,0x6c,0x8c,0x9d,0x15,0xce,0x7d,0x0d,0xc3,0x2f,0xea,0xab,0x50,0xdf,0x02,0xe0,0x24,0xcc,0xf4,0xa7,0x25,0xba,0x85,0x0d,0x62,0x9a,0x39,0xc7,0x5a,0xd1,0x9a,0xd1,0xa7,0x45,0x5f,0xc2,0x44,0xf5,0xa9,0x8d,0xd8,0xbc,0xd3,0xc8,0x75,0x0d
.byte	0x06,0xc6,0x4b,0x24,0xc6,0xe5,0x72,0xf7,0xd5,0x87,0xca,0x3c,0xc0,0x1c,0x18,0xa9,0x40,0xc6,0x7b,0xe5,0x4c,0xe6,0xb7,0x01,0x57,0xc1,0xcf,0x63,0x83,0x58,0x63,0x47,0xcf,0xa4,0xd3,0xf6,0x1d,0x2c,0xbf,0x17,0xe6,0x0a,0x7b,0x2d,0xa9,0x34,0x23,0xfc,0x1f,0x06,0x31,0x47,0x7b,0x31,0x34,0x8c,0x3c,0x15,0x9b,0xac,0xfd,0x38,0xe6,0xa3
.byte	0x9e,0xa7,0xdf,0xa6,0x37,0x61,0xfd,0x85,0xb8,0x2e,0x67,0x73,0x7f,0x60,0x12,0x8b,0x62,0xb0,0x38,0xd0,0xaa,0xc4,0xad,0x3b,0xa9,0x04,0x66,0xdd,0xbb,0x9c,0xb1,0x95,0xe1,0x9c,0x0a,0x72,0x80,0x12,0xaa,0xa8,0x0c,0x3f,0x90,0x20,0x33,0xb4,0x76,0xdd,0x26,0xfe,0x1e,0x8f,0x6a,0x2d,0xea,0x4a,0xdc,0x28,0x47,0x66,0x36,0x5b,0x50,0x60
.byte	0x7e,0x3e,0x93,0xf3,0xe9,0x37,0x31,0x3b,0x43,0x46,0x85,0xb3,0xa9,0xb2,0x14,0x95,0x96,0x49,0xf9,0x2a,0xe7,0x9e,0x3a,0x3e,0xd8,0x12,0xf7,0xbc,0x43,0x8c,0x35,0x31,0x44,0x08,0x7f,0x25,0x39,0x86,0x98,0x6a,0xe8,0xe3,0x2e,0x73,0x2d,0x3b,0xac,0x2d,0x75,0x4c,0xc8,0xca,0x21,0x2d,0x96,0x9b,0x4f,0x56,0xff,0x2d,0xc2,0xe2,0x98,0x3d
.byte	0xe2,0x3f,0xee,0x10,0xb7,0xc3,0x3d,0xa8,0x50,0x88,0x7f,0xd5,0x4e,0xbd,0xc7,0x9d,0xdc,0x01,0x49,0x27,0xf2,0xae,0xea,0x93,0x72,0xdf,0x00,0xcd,0xe6,0xa1,0xdd,0xd1,0x18,0xeb,0xa7,0xe1,0x4a,0x7b,0x38,0x72,0x73,0x29,0x46,0xa3,0xb3,0x25,0x23,0x6d,0x26,0xab,0x86,0xdc,0x67,0x52,0xe5,0x4a,0x5e,0x8f,0x16,0x67,0x8a,0x28,0x13,0xba
.byte	0x44,0x42,0xb5,0x21,0x9f,0x30,0x66,0x7f,0xc9,0x87,0x40,0xcb,0x75,0x58,0x2e,0xcd,0x09,0xb9,0x8a,0x84,0xa3,0xbd,0x63,0x53,0x75,0x2f,0x77,0x8b,0x7e,0x19,0x31,0x33,0x3b,0x9a,0xfb,0x86,0x39,0xa6,0xd9,0xeb,0x9b,0x43,0xc6,0xd9,0xc2,0x10,0xab,0x42,0xe5,0xc6,0x4a,0xe6,0x3e,0xde,0x9d,0xac,0x8e,0x95,0xf0,0xdb,0x48,0x95,0xc2,0x87
.byte	0x6b,0x7f,0xde,0x09,0xdb,0xed,0x49,0x19,0x73,0x2d,0xa4,0x5c,0xdf,0xfa,0x2e,0x15,0xd0,0xb6,0x46,0x32,0xc9,0x7f,0x7e,0x01,0xd3,0x25,0x45,0x0e,0x5b,0x0d,0xf0,0x67,0xe3,0xd9,0xdf,0x4f,0x3b,0x6f,0xb3,0x15,0xc5,0x6b,0x91,0x75,0xa2,0xaf,0x42,0x3a,0x14,0x50,0xd9,0x4f,0x19,0x65,0x12,0x83,0x5d,0x8f,0x8a,0x01,0x0b,0x89,0xcc,0x7f
.byte	0x1a,0xde,0x5b,0x44,0x34,0x98,0x0f,0x8e,0x5a,0x5e,0x03,0x41,0x3e,0x66,0x9b,0x16,0xf5,0x91,0x7c,0xb0,0xc1,0xbf,0xa2,0x10,0x0b,0x60,0x3a,0x63,0x0c,0xcf,0xd8,0x49,0xdb,0x42,0x88,0x1f,0x36,0x8e,0x15,0xdb,0x5d,0x3f,0xe7,0xf1,0x9a,0x73,0x2b,0x74,0x0c,0xd5,0x09,0xab,0x01,0x2e,0x52,0x6f,0x03,0xf6,0xc9,0x0b,0xeb,0xa5,0xce,0x2e
.byte	0x1c,0x02,0x35,0xca,0xce,0xfe,0x4b,0xad,0x67,0x21,0xf8,0x44,0xea,0x70,0xf2,0x3d,0xfc,0x43,0x77,0x05,0x26,0xbe,0xaf,0x99,0xab,0x41,0xd4,0xcc,0x53,0x33,0x33,0xcd,0xb4,0x2d,0x76,0xfb,0xae,0x0c,0xac,0xc1,0xd0,0x42,0xfb,0x45,0x4a,0x6e,0x55,0xd2,0x93,0xef,0xb9,0x06,0xbc,0x38,0xce,0x94,0xc2,0x01,0xdf,0x27,0xc8,0x47,0xff,0x74
.byte	0xfb,0x84,0xc5,0xa2,0x78,0x1f,0x4f,0x73,0x12,0xec,0x2d,0x82,0x5b,0xeb,0x3c,0xb6,0x1c,0x5a,0x29,0x9c,0xba,0x9e,0xa4,0x85,0x94,0x84,0x68,0x01,0xd7,0xb1,0x27,0x84,0x4a,0x7d,0x62,0x9c,0x32,0x12,0x89,0xd8,0x66,0xb5,0xe9,0x07,0xf4,0x5f,0x6b,0x0e,0x90,0x87,0xe5,0xc1,0x8b,0xaf,0x8f,0xf7,0xca,0x54,0xe0,0xc6,0x5f,0xa5,0xec,0xd1
.byte	0xdc,0xdc,0x17,0x9e,0xca,0x4b,0x72,0x72,0x03,0x96,0x62,0xaa,0xc1,0xfe,0x23,0x7e,0xd2,0x06,0x61,0xb6,0xc9,0x0d,0x7e,0xbf,0x72,0x1c,0x66,0x46,0x0b,0x31,0x96,0x81,0x11,0x3d,0xac,0x5e,0xd0,0x35,0xaf,0xac,0x4c,0x74,0xce,0xf9,0x9c,0x64,0x3d,0xe5,0x9d,0xfe,0xc7,0x05,0x09,0xe1,0x70,0xc5,0x37,0xd5,0x4e,0xd8,0x7d,0xdb,0xfa,0x1c
.byte	0x28,0xfc,0x10,0x2a,0xe8,0x62,0x18,0x09,0x97,0xe0,0x98,0x2e,0x9f,0x1d,0x18,0xff,0x22,0xe9,0x5d,0x37,0xd2,0x74,0xf1,0x81,0x08,0x8a,0x55,0xc0,0x40,0x0f,0x70,0xbe,0x82,0x23,0x78,0x35,0xc8,0xf8,0x59,0x6e,0x0d,0x2e,0xd5,0xe7,0xf5,0x2e,0xbd,0xcd,0x1a,0xcf,0x76,0x43,0x1f,0xca,0x15,0x6c,0x4a,0xb7,0xc7,0xb9,0xaf,0x68,0xd7,0x31
.byte	0x1e,0x0c,0x9c,0x78,0x74,0x66,0x80,0xc6,0x74,0xbe,0x86,0x59,0x0c,0x12,0xdc,0xf3,0x1b,0xaf,0x63,0x74,0xce,0x1e,0xac,0xf0,0x65,0xa0,0xab,0x7f,0x96,0x08,0x32,0xb2,0xca,0x9c,0xfb,0x9d,0x66,0x63,0x76,0xf9,0x69,0x08,0x6e,0xd3,0x46,0xde,0xdf,0x54,0x06,0x0d,0x25,0x81,0xd9,0x5a,0x45,0xeb,0xe5,0xc0,0xf6,0x86,0x0f,0xe9,0x27,0x7c
.byte	0xdc,0x52,0x28,0xb5,0xd0,0x7d,0x07,0xc1,0xb6,0x9b,0xdc,0xea,0xd3,0x2a,0xba,0xb0,0xd5,0xa3,0xd8,0x25,0x07,0x9c,0x6c,0xd6,0x16,0xa5,0x93,0x43,0x52,0xa7,0x5c,0x2b,0xe2,0xfa,0x8e,0x6e,0xaa,0x04,0x84,0x63,0x80,0x0f,0x90,0x10,0x41,0x1c,0xf6,0x67,0xea,0x39,0xb0,0x16,0xfc,0x6f,0x85,0x28,0x8c,0x8e,0xfb,0x79,0x39,0xdf,0xf6,0x6e
.byte	0x57,0xa1,0xaa,0xf1,0x0b,0x99,0xde,0xad,0x69,0xe2,0xf4,0x74,0x8e,0x8c,0x2d,0x20,0xdb,0xf3,0x2d,0xc2,0x75,0xe7,0xd6,0xc8,0x9d,0x46,0x3b,0x8b,0x8b,0x18,0xd8,0x41,0xfd,0xc2,0x7d,0xec,0x66,0x78,0xe7,0xbe,0xee,0x2b,0x07,0xd8,0x7e,0x13,0x61,0x7e,0xab,0x7d,0x2b,0x3f,0x83,0x96,0xf5,0xab,0x0b,0x20,0xd2,0x5b,0xb0,0xeb,0xf7,0x1b
.byte	0xac,0x1a,0x16,0x46,0x21,0x90,0xdb,0x67,0x66,0x42,0xe2,0x54,0x34,0xae,0x34,0xae,0x21,0x33,0x8c,0x48,0x19,0xdb,0x1f,0xa8,0x25,0x76,0xe0,0x03,0x1c,0x35,0x8d,0xd3,0xab,0x6b,0x93,0xf3,0xad,0x7d,0x3c,0x76,0x1d,0xaa,0x43,0x80,0x0f,0x5f,0x20,0xd9,0xf0,0xff,0x8b,0xf4,0xdb,0xbc,0xf2,0xff,0xf2,0x8a,0xfc,0xf5,0x0e,0x4e,0xd9,0xb0
.byte	0xd6,0xb3,0x86,0x5b,0x3e,0x10,0x87,0x50,0xf1,0xd2,0x8f,0x8d,0xa4,0x39,0x85,0xf5,0x90,0xd6,0x53,0x69,0x40,0x42,0xc1,0xc3,0x7c,0xc1,0x3e,0x97,0xb4,0x08,0x49,0x93,0x4e,0x4c,0x67,0xd9,0x2e,0x05,0x70,0x04,0x98,0x0a,0xed,0xd0,0xff,0x0c,0x13,0xe4,0xde,0x75,0x81,0x24,0xb1,0x27,0x79,0xeb,0x80,0x68,0x52,0x50,0x66,0x77,0x4f,0xf6
.byte	0x64,0x2f,0x85,0x9e,0xc1,0xbf,0x9f,0x0e,0x31,0x9a,0x36,0x24,0xcd,0xa8,0xe8,0xce,0x41,0x86,0xd1,0x02,0x96,0xdc,0x1a,0xa0,0x48,0xca,0x61,0xd5,0x87,0xdb,0x0a,0xeb,0x69,0x95,0xca,0xf8,0xe5,0xa0,0x5b,0x91,0x8f,0xb9,0x59,0x5f,0x68,0x60,0x58,0xc5,0xe0,0xc7,0x02,0x68,0xa5,0x67,0x1e,0xfc,0xa9,0x27,0x9f,0x83,0x4c,0x05,0x60,0xee
.byte	0xcb,0x79,0x31,0x73,0x36,0xf4,0x39,0x44,0xdb,0xea,0x62,0x89,0x97,0x69,0xd1,0x0d,0xf6,0x27,0xcf,0x47,0xfe,0x3d,0x5c,0xe9,0x92,0x54,0x0a,0x66,0xaf,0x82,0xb1,0x49,0x87,0x3f,0xa2,0x95,0x91,0x0e,0x72,0x1e,0x7b,0xde,0x32,0x31,0x51,0x40,0x24,0x4f,0x30,0x59,0x7d,0x97,0x28,0x30,0x7e,0x93,0xcd,0x1e,0x16,0xef,0xe1,0xb5,0xa8,0xff
.byte	0x3a,0xd0,0x62,0x94,0x8b,0x72,0xe7,0x97,0x8f,0x2f,0x58,0x3e,0x62,0x43,0x6b,0x28,0x05,0xc9,0x0d,0xf0,0x09,0xbd,0x12,0x3b,0xd8,0x15,0xd3,0x7c,0x97,0x96,0x5a,0xf4,0x9f,0x8d,0x25,0xb7,0xc5,0x66,0xf7,0xf7,0x5f,0x7e,0xca,0x2f,0xcd,0x9a,0xf2,0xa3,0x9b,0x4f,0x6f,0xc3,0xd9,0x64,0x38,0xda,0x87,0x97,0x8a,0x49,0x2d,0x80,0x16,0x73
.byte	0x88,0x62,0xd2,0xdf,0x4f,0xf7,0x79,0xc0,0x83,0xeb,0x2b,0x66,0x5a,0x21,0x3a,0xa2,0x2a,0xed,0x8c,0xe7,0x91,0x6d,0x56,0x18,0xfc,0x59,0x68,0xea,0x9f,0x5c,0x3c,0xd5,0x0f,0x64,0x70,0x89,0x22,0x83,0xed,0xfa,0xc9,0x21,0x68,0x3c,0x69,0xb8,0x3e,0x89,0xb5,0x9d,0x8b,0xc8,0xf7,0x57,0x17,0x27,0x90,0x12,0xa7,0xd2,0x4d,0x2c,0x30,0x64
.byte	0x42,0xbe,0xa6,0x49,0x4e,0xa3,0x3b,0xdb,0xdb,0x64,0x0e,0x89,0x66,0x87,0x72,0x90,0x86,0x1d,0x0b,0x61,0x32,0x47,0x3d,0x55,0x81,0xb2,0x50,0x5a,0x76,0x6c,0xa3,0x46,0x12,0x1b,0xaf,0x6e,0xbf,0xfd,0x98,0x2f,0xb7,0xd2,0x31,0x92,0xb5,0x26,0x1a,0x3d,0xfa,0x5d,0xc0,0x24,0x44,0xd2,0x6b,0x1c,0x81,0xf5,0x5d,0x50,0xb0,0x33,0x18,0xe0
.byte	0xc5,0xb3,0x6b,0xf4,0xfd,0xde,0xf7,0x2f,0x69,0x1d,0x5a,0xfe,0x03,0x6d,0xca,0xad,0x29,0xe0,0x6e,0x70,0xcd,0xe3,0x6d,0x38,0xef,0xf1,0x3a,0x76,0x2b,0x2c,0xb6,0xcd,0xff,0xeb,0xbc,0xe7,0xd9,0x40,0xbe,0x23,0x61,0x20,0xd5,0xb8,0x66,0x77,0x65,0xc9,0x33,0xf5,0x75,0x8e,0x15,0x98,0x3f,0xb1,0x4a,0xb8,0x1c,0x47,0x73,0x45,0x0f,0x73
.byte	0x2a,0xa1,0xb7,0x73,0x76,0x94,0x16,0x45,0xcf,0xd6,0x8f,0xe3,0x62,0x8a,0x42,0xfd,0xe3,0x1e,0xe0,0x7d,0xb5,0x99,0xbd,0x1c,0xf2,0x60,0xb2,0x72,0xa8,0x4b,0x19,0xd6,0xd0,0xdb,0x0b,0x1f,0xc9,0x68,0xc0,0xf3,0x65,0x04,0x50,0x41,0xf0,0xb3,0x0e,0x0a,0x9d,0x7f,0x0b,0x1f,0xeb,0x5b,0x4c,0x58,0x6a,0xf2,0x02,0x95,0xd2,0xf3,0xac,0xe5
.byte	0x69,0x81,0xb1,0x3f,0x08,0xfc,0xba,0xcb,0x36,0xcd,0x54,0x28,0xac,0x65,0xd8,0x81,0xab,0xc1,0x6a,0x51,0x97,0x21,0xe4,0xc6,0xaf,0xd8,0x76,0x76,0xa4,0xc4,0xd0,0x58,0x63,0xdf,0x32,0xf5,0x04,0xfb,0x11,0xeb,0x76,0x39,0xda,0x55,0xf4,0x7e,0x1c,0x7b,0x04,0x07,0x4d,0x5a,0xeb,0x74,0x0a,0x57,0xcf,0x10,0xf6,0x0e,0x73,0x02,0x25,0x67
.byte	0x4f,0x8f,0x37,0x75,0x8f,0x44,0x2a,0x1a,0x6d,0x05,0xda,0xe0,0xa0,0xaa,0xd2,0x78,0xaa,0x7e,0x76,0x0a,0xde,0x2a,0x54,0xae,0x1e,0x39,0xcc,0x3c,0x1c,0xa6,0xd5,0x8a,0xca,0xb4,0xcc,0x76,0xb9,0x30,0xd2,0xe2,0x46,0x31,0xb6,0x51,0xcf,0xe2,0x24,0x77,0xc9,0x9b,0x57,0x3c,0xa3,0x84,0x60,0x59,0x28,0x5f,0x23,0x74,0x17,0x79,0x42,0xbe
.byte	0x60,0x3f,0x09,0x6a,0x43,0x8e,0x40,0x25,0x79,0xb5,0xbb,0xbb,0x72,0x50,0xad,0x4f,0xaa,0xa2,0xd4,0xb2,0xc6,0x7d,0x50,0x7b,0x98,0x59,0x22,0x06,0x7d,0x2c,0x35,0xdd,0x44,0x34,0x9c,0x28,0x98,0xf3,0xe5,0xd0,0x7e,0x09,0xbe,0xc4,0x00,0x72,0xd5,0xa6,0x3b,0x0e,0xb1,0x18,0x91,0x0a,0x4d,0x5d,0xe2,0x0a,0x98,0x79,0x30,0x9b,0xaa,0x38
.byte	0x03,0x2b,0x6c,0xb2,0x8e,0x0a,0x1d,0x30,0x59,0x8a,0xe8,0x6c,0x6d,0xb5,0xd4,0x91,0xc5,0x28,0x1d,0x5e,0x49,0xe0,0xfc,0x26,0x7f,0x40,0xc0,0x6a,0x81,0x0d,0xb9,0xc6,0x05,0xc6,0x18,0x82,0x70,0xf6,0xea,0x0e,0xb4,0x85,0xba,0x5d,0xfa,0xfd,0xe3,0xd6,0x08,0x7c,0x3d,0x99,0x03,0xd4,0xdc,0x9b,0x50,0x12,0xc8,0xbd,0x8c,0x47,0x67,0x28
.byte	0x83,0x97,0xca,0xef,0xc3,0x1c,0x2b,0x6e,0x3b,0xf7,0xca,0x7a,0x68,0x6e,0x39,0x25,0x58,0xf7,0xa4,0x11,0x9d,0x8d,0x49,0x29,0xd6,0x6e,0x0b,0x0a,0xcf,0xa7,0x04,0x14,0x6f,0xc4,0x4c,0x36,0x1a,0x16,0x3e,0x8f,0x99,0x69,0x94,0x1d,0xa8,0x66,0x93,0xeb,0x1d,0x82,0xfd,0x3f,0x84,0xb0,0x9d,0xa4,0xe1,0xb0,0xd4,0x9d,0xb2,0x60,0x20,0xfb
.byte	0xd3,0xa0,0xdc,0x79,0x83,0xb0,0xfc,0x50,0x18,0x57,0xe1,0xeb,0x44,0x25,0x05,0xab,0x27,0xfb,0x5f,0x83,0xcd,0x51,0xd0,0x3b,0x80,0x4a,0xce,0xbf,0xe9,0xfe,0x46,0xd2,0x5f,0xea,0x8c,0x89,0x48,0xc8,0x65,0xdd,0x2a,0xa4,0xda,0x54,0xc2,0x37,0x7e,0xd7,0xff,0x80,0x5b,0xf0,0xc3,0x40,0x44,0x40,0x72,0x63,0x23,0xc6,0x9a,0x48,0xf3,0x4b
.byte	0x91,0x64,0x26,0xfc,0xf3,0xa0,0xb9,0x06,0x0c,0x88,0xbb,0xc0,0x93,0x73,0x63,0xf6,0x9c,0x0d,0xe2,0xf6,0xee,0xe0,0x51,0xfd,0xae,0x4d,0x21,0xb9,0x6b,0x7d,0x1e,0x34,0xa0,0x4d,0xe4,0x25,0x30,0xe6,0x81,0x2e,0x32,0xef,0xb9,0x9e,0xaf,0xa0,0x22,0xe0,0x67,0xe6,0x07,0x55,0x3a,0xed,0xef,0x4f,0x87,0x2f,0x44,0xd2,0xef,0xc1,0xfb,0xc4
.byte	0x7b,0x27,0x20,0x44,0xd2,0xd6,0xf9,0xf3,0x67,0xc1,0xbf,0xaa,0xd5,0x9c,0xd9,0x2c,0xd5,0xf1,0x42,0x2d,0xec,0x39,0xb5,0xc1,0x18,0xed,0x6c,0x47,0x80,0xf8,0x6f,0x66,0x10,0xee,0x1d,0xd6,0x79,0x01,0x4e,0x2a,0xd0,0x83,0xa7,0x9d,0x1d,0x81,0xce,0xf5,0x6f,0x26,0x86,0xd2,0xd7,0x56,0x15,0x65,0x48,0x4c,0xf1,0xf9,0x21,0x77,0xd1,0x84
.byte	0x22,0xce,0x4d,0x8d,0x83,0xda,0x8c,0x50,0x56,0xc8,0x3b,0xc5,0xb6,0xcf,0x3e,0x0d,0x50,0xe5,0x9d,0x6c,0xb5,0x2a,0x5a,0x58,0x28,0xf5,0x0a,0x05,0xf3,0x0e,0x40,0x8e,0xb6,0xb4,0xdf,0x11,0x1b,0x34,0x81,0xc5,0x0e,0x09,0xa6,0xfc,0x46,0x14,0x02,0x78,0x94,0xbb,0x63,0x9d,0x3e,0x25,0x2c,0xc8,0x1b,0x5c,0xef,0x64,0x77,0x0c,0x04,0x40
.byte	0xe1,0x45,0x85,0xf8,0x07,0xbf,0x14,0x65,0xe9,0xfc,0xba,0xe4,0x9c,0xa7,0x91,0x56,0x2a,0x3a,0x8e,0x33,0xae,0x56,0x04,0x9d,0x35,0xbc,0xad,0x64,0x0e,0x99,0x8e,0xb5,0x84,0x72,0xcf,0xcc,0x81,0x14,0x11,0x9e,0xe6,0xac,0x0d,0x41,0x43,0x4e,0x2a,0x0d,0xda,0x98,0x42,0xfa,0x8c,0x21,0x79,0x93,0xa3,0xdf,0x84,0x88,0x76,0x14,0x5b,0xb9
.byte	0xff,0xe1,0xab,0x94,0xc3,0xcd,0x10,0x69,0xee,0x53,0xea,0xfe,0xfb,0xaa,0x43,0x8f,0xdd,0x55,0x88,0x34,0x5d,0x55,0x0f,0x42,0x4d,0x1d,0x93,0xce,0x96,0x67,0xf8,0x33,0xc7,0xca,0x34,0x11,0x28,0xb2,0xed,0x0f,0x00,0x40,0x84,0xee,0x51,0x26,0x6e,0x7b,0x2d,0x77,0xeb,0x18,0xb8,0x9a,0xad,0x28,0xb6,0x6c,0x5e,0xde,0x10,0x4c,0x29,0x1d
.byte	0x79,0x3c,0x2e,0x1c,0xf0,0xc8,0xb3,0xee,0x19,0x7a,0x10,0xe1,0xe3,0x05,0x1e,0x63,0xe9,0x00,0xd7,0xfe,0x83,0xe7,0x54,0xff,0x65,0x9a,0x27,0xa3,0x86,0x72,0x5c,0xb6,0xef,0xf5,0x84,0x68,0x1e,0xae,0xe6,0xf8,0x66,0x9c,0x1b,0x86,0xab,0xfa,0x1a,0xe3,0xb8,0x97,0x16,0xb1,0xb7,0x42,0xfa,0x85,0xa3,0x3a,0x0d,0x21,0xd2,0x35,0xb1,0x89
.byte	0xf0,0x4f,0x1a,0x1d,0x45,0x34,0x2f,0x31,0x12,0x8c,0x19,0xe7,0x4b,0x14,0xa7,0xcf,0x0f,0xf9,0xcd,0x77,0x40,0xbe,0x09,0xeb,0xc3,0x3e,0x4a,0x37,0x55,0xab,0xbb,0x9c,0xe5,0x22,0x56,0x8a,0x66,0xfa,0xb1,0xff,0x73,0x29,0x52,0xb1,0x89,0xf7,0xab,0xa6,0x58,0x53,0x97,0xfd,0x44,0xda,0xbd,0x0b,0x1f,0xc8,0x88,0x01,0xcc,0x5e,0xf7,0x05
.byte	0xbd,0xf7,0x0a,0x4d,0xcb,0xef,0xbf,0xd9,0x8e,0x15,0xc3,0x40,0xb9,0xc9,0x14,0xe5,0x05,0x3c,0x20,0x67,0xfe,0xdc,0xa6,0xb8,0x92,0xbd,0xf5,0x33,0xb5,0x77,0x11,0x28,0x47,0x21,0x28,0x18,0x61,0xf8,0x1c,0xdb,0x65,0xad,0x89,0x0d,0x98,0x79,0xca,0x2b,0xa3,0x4f,0x16,0xa6,0xb3,0xb9,0xcc,0x47,0x5b,0x13,0x96,0x2e,0x39,0x78,0x24,0xc5
.byte	0xf9,0xf5,0xae,0xdc,0x34,0x3c,0xf7,0x48,0x0d,0x75,0xaf,0x51,0x75,0x48,0xbe,0x4d,0x73,0x89,0x5a,0xfc,0xd7,0x51,0xd3,0x93,0xa8,0xbc,0xc3,0xa6,0x6b,0x63,0xc1,0xc3,0x7b,0x48,0xf1,0x57,0xe4,0xb4,0xce,0x5f,0x18,0xae,0xdc,0x61,0x99,0xaa,0x7e,0x49,0xd6,0xb5,0x2c,0x62,0xb8,0x8c,0x4a,0x94,0xc1,0xc2,0x13,0x23,0xdc,0x7c,0x48,0xc2
.byte	0xaa,0xc4,0xd9,0xc0,0x09,0x11,0x6e,0x35,0x07,0x14,0x77,0x7e,0xeb,0x87,0x00,0x05,0x30,0xec,0xb2,0xc6,0xde,0x6e,0x42,0x0b,0x2a,0xb6,0xca,0xb1,0xdc,0x69,0x57,0x1b,0xad,0x52,0xa8,0x22,0x1e,0xb5,0x2b,0xb5,0x8e,0x39,0x4b,0xbf,0x38,0xf4,0xb2,0xf5,0xa1,0x9c,0x7b,0x7f,0x6c,0x14,0x48,0x37,0xa9,0xf9,0xcd,0x85,0x50,0x53,0xb0,0xc1
.byte	0x15,0x28,0x19,0x3b,0xb1,0x04,0x44,0x93,0x7a,0x16,0x76,0x69,0xa1,0x5c,0x67,0xcc,0x8d,0x02,0x56,0xcd,0xd9,0x91,0x49,0x8c,0x1b,0xc9,0x89,0x98,0x09,0x2e,0x5b,0xf8,0x7c,0xe6,0x0f,0x46,0xb0,0xcc,0xe5,0x75,0x63,0xaf,0x40,0xd5,0xa3,0x45,0x4a,0x76,0x67,0x1d,0x81,0xc2,0x25,0x85,0x7f,0x52,0xc5,0xf8,0x6d,0xd9,0xb6,0xa8,0xa4,0x96
.byte	0x63,0xcc,0x15,0xc5,0xec,0x40,0x0e,0x08,0xf7,0x6f,0x85,0xa5,0xe7,0x2e,0xbe,0x3f,0xf4,0xc8,0x74,0xc7,0xed,0x86,0x85,0xc0,0x44,0x9e,0x80,0xc8,0x89,0xdc,0x16,0x47,0xb1,0x68,0x0e,0x65,0x66,0x0f,0xbc,0x33,0xb1,0x78,0x1e,0x5e,0xd7,0xde,0x97,0x96,0xb8,0x74,0x5c,0x90,0x7a,0xed,0x36,0xf4,0x10,0x91,0x5a,0x42,0x92,0x81,0x11,0x73
.byte	0x3e,0xf1,0x5e,0xfb,0xc2,0x38,0xe6,0xe5,0x41,0xce,0x96,0xed,0x44,0x14,0x9c,0xc0,0x1f,0x83,0x5f,0xdd,0x50,0x87,0x90,0x86,0x50,0x61,0x87,0x99,0x7c,0x64,0x2d,0x50,0x17,0xa3,0xb0,0x7e,0x69,0xd3,0x86,0xb4,0x7c,0xe7,0x15,0x34,0x9e,0x3b,0x17,0xc0,0x2d,0x08,0x60,0x8b,0xae,0xec,0xa2,0xf6,0xf1,0xa4,0xbc,0x7b,0xc2,0x75,0x91,0x13
.byte	0xf6,0xd0,0x71,0xf0,0x3c,0x9c,0x51,0xb3,0x33,0x53,0x57,0x47,0x8b,0x47,0xb0,0x0b,0x95,0x9a,0x39,0x70,0x63,0x91,0xcc,0xd8,0xd0,0x23,0x32,0xc0,0xb6,0x0f,0x91,0x30,0x29,0x45,0xf1,0xfc,0xa1,0x83,0x10,0x9a,0xa4,0x05,0x05,0x9f,0x33,0xbd,0xaf,0x16,0x3e,0x53,0x39,0xb1,0x4b,0x76,0x55,0x3e,0x6f,0x47,0x23,0x59,0x4c,0xbb,0x82,0x31
.byte	0x19,0xe2,0xb1,0x49,0x20,0x91,0x2d,0xb0,0xfe,0xa6,0xae,0x7f,0x6e,0xd1,0x5b,0xb9,0x84,0x18,0x0f,0x68,0xc6,0x56,0x8a,0x22,0x81,0x3f,0x38,0x42,0x7a,0x31,0xa1,0xc1,0xf7,0x10,0x6a,0xc3,0xb1,0xaf,0x19,0xad,0x06,0x3a,0x53,0x9d,0x44,0x9f,0xe7,0x25,0xac,0x59,0x06,0xb9,0xd2,0xf6,0xce,0xb6,0x1e,0x4d,0x65,0x2e,0x05,0xb4,0x14,0x91
.byte	0xfb,0x5b,0x26,0xd0,0xee,0xfa,0x45,0x5b,0x0c,0xd5,0x5c,0x1f,0x0c,0xe0,0xf6,0x50,0x78,0x77,0x7e,0x83,0x04,0xec,0x3b,0x53,0x28,0x97,0x56,0x61,0xeb,0xa0,0x78,0xe5,0xc0,0xb2,0x3c,0xcd,0x6f,0x4b,0xda,0x11,0x00,0x93,0x49,0x9f,0x03,0x22,0x39,0x3a,0xc8,0xef,0x01,0x91,0x12,0x36,0x15,0x0c,0x47,0xd5,0x8b,0x77,0x5e,0x5f,0x91,0x4b
.byte	0x44,0x98,0xa0,0xa0,0x46,0x0f,0x17,0xef,0xf9,0x52,0x0b,0x92,0xc1,0xe0,0xfc,0x63,0x9b,0x6d,0xe2,0xde,0x88,0x89,0x32,0x89,0x93,0x44,0x6d,0x69,0xe7,0x26,0xfd,0x77,0xc0,0x18,0x58,0xdb,0x74,0xec,0x04,0x0c,0x60,0x51,0x74,0xca,0x49,0x3e,0x4f,0x5f,0xaa,0x53,0xf2,0xc1,0xcb,0x89,0x1f,0x69,0xaa,0xbb,0x97,0x17,0x04,0x49,0x5e,0x44
.byte	0xf3,0xf3,0xc4,0x98,0x9d,0x49,0x1e,0xb0,0x27,0x7d,0xff,0x54,0xa5,0xed,0xbe,0xb0,0x52,0xf6,0x00,0x87,0x67,0x2d,0x28,0xdb,0x09,0x4e,0xa2,0xee,0x4f,0x81,0xeb,0xa1,0xca,0x2b,0x07,0x2f,0x54,0x6d,0x5a,0x2e,0x13,0xa4,0xd0,0xac,0x21,0x7c,0x44,0xc0,0x98,0xac,0xe4,0x6e,0x94,0xd1,0x5b,0x5e,0xd6,0xf1,0x3c,0x45,0x88,0xe1,0xbd,0x58
.byte	0xf1,0xc7,0xba,0x36,0x2c,0x15,0xb9,0xf4,0xa3,0xea,0x73,0xb4,0x91,0x53,0xd8,0x18,0x86,0x23,0x87,0x0b,0x7a,0x4a,0x2d,0x2d,0x3d,0x73,0xcb,0x05,0x11,0x4c,0x19,0x26,0xf2,0x05,0x89,0xc8,0x29,0x26,0xa7,0xe4,0xcb,0x43,0xd0,0xf6,0xbc,0x76,0xbd,0x9a,0x17,0x4a,0xf1,0x39,0xe3,0xde,0x05,0x10,0x8a,0xd3,0x11,0x53,0x61,0xef,0x33,0xd9
.byte	0x65,0x0d,0x99,0x0b,0x39,0xa4,0x1b,0x4f,0x0b,0xa5,0xf1,0x37,0xa3,0x4f,0x54,0xa7,0x29,0xc1,0xae,0x88,0x5c,0x13,0x2f,0xb2,0xbf,0xcf,0x1b,0x0d,0xa0,0x68,0x21,0xe2,0x20,0x3f,0x02,0x9f,0x08,0x39,0xc6,0x20,0x2d,0x08,0x01,0x5d,0xf1,0x47,0xde,0x88,0xad,0x49,0x09,0xf7,0x1a,0x0c,0xa7,0x29,0x91,0xe5,0xfc,0xc5,0xde,0xd7,0x92,0x3f
.byte	0xe5,0x0c,0x91,0xea,0x24,0xfb,0x02,0x9a,0x13,0x3a,0x61,0x01,0x9d,0x7e,0x9d,0x11,0xf8,0xbd,0xe0,0x05,0xbb,0x13,0xf0,0x00,0x67,0x90,0x6f,0x80,0xe7,0x2e,0xfc,0xe0,0xea,0x8a,0x9d,0x2c,0x13,0x57,0x4c,0x78,0x1c,0x44,0xe2,0xa6,0x62,0x01,0x46,0xf8,0xbe,0xf4,0x51,0x32,0x15,0xd4,0x3c,0x7d,0x3b,0xcc,0xfd,0xc3,0x46,0x43,0xf1,0xfa
.byte	0x9e,0xee,0xad,0x47,0x8f,0x32,0x31,0x94,0x70,0x92,0xea,0x45,0xe3,0x63,0xd6,0x28,0x23,0xa5,0xdf,0x61,0xee,0x19,0x1a,0x5e,0xb0,0xe7,0x17,0xab,0xac,0xb4,0x03,0xed,0xf6,0x9e,0xba,0xdf,0x52,0x88,0xb7,0xca,0x7c,0x27,0xcd,0x7b,0xf8,0x1e,0x54,0x4b,0xe6,0xa3,0x91,0xf7,0xeb,0x22,0x65,0x95,0x13,0xe1,0xac,0xb6,0x22,0x80,0xe3,0xeb
.byte	0xf9,0xde,0xf1,0xb7,0x6a,0xfd,0xc7,0xb8,0x9b,0x9c,0x49,0x4f,0x84,0x7f,0x68,0x93,0x6c,0x3c,0xea,0xb1,0x8a,0xeb,0x23,0xca,0x2d,0x5e,0x29,0xb5,0x52,0x49,0x98,0x12,0x3f,0xed,0xf0,0xb7,0xbc,0x22,0x14,0x73,0x92,0x84,0x1b,0x3e,0x2f,0xed,0x24,0x1e,0x62,0xcc,0x09,0xe8,0x7c,0x5a,0x08,0xd4,0xc6,0xd9,0xd1,0x55,0x66,0x18,0x2c,0x6a
.byte	0x99,0xc3,0x0e,0x1e,0x7b,0xb7,0xd4,0xbd,0x0e,0x1f,0x22,0x85,0x09,0x2c,0xcf,0xff,0x79,0x9f,0x93,0xbe,0xec,0xed,0x63,0xb7,0x97,0xbb,0xeb,0xd6,0x70,0x76,0xa9,0x4f,0xb7,0x9a,0x60,0x5b,0x50,0xdf,0x85,0x46,0x69,0xa0,0x9a,0x86,0xe3,0xe2,0x13,0x2b,0x8c,0x0f,0x3b,0xab,0xa8,0xce,0xa3,0xb0,0x78,0x72,0x40,0xfb,0xd1,0x26,0x72,0xc1
.byte	0x91,0x25,0x7b,0x29,0xde,0xcf,0x99,0xf3,0x8e,0x87,0x39,0x81,0x04,0xad,0x3b,0x11,0x6a,0xda,0x00,0xdd,0xe9,0x41,0xc1,0xd8,0xcc,0xf9,0x59,0xac,0x9b,0xb1,0x64,0x6f,0xb8,0xf4,0x9f,0x20,0xde,0x67,0x09,0x1b,0xdf,0x11,0xa5,0x94,0x56,0xab,0x76,0xba,0xc5,0xda,0x6c,0x86,0xe6,0xa4,0x73,0x59,0xa9,0xe3,0x68,0xb9,0xc0,0x50,0x1b,0x55
.byte	0x21,0x9e,0xea,0x8d,0xcc,0x5d,0xee,0x88,0xe1,0x18,0x7c,0xcd,0x8f,0xff,0x18,0xbd,0x13,0xea,0x95,0xc4,0x8e,0xd3,0x92,0xfe,0x3d,0xda,0x6f,0xa5,0xbc,0xa0,0x77,0x5a,0x1d,0x61,0xff,0x7b,0x77,0xc4,0x06,0x25,0xc5,0xa7,0x76,0x36,0x55,0xe7,0xc0,0xf0,0x46,0x7e,0xca,0xe7,0xc1,0xe8,0x88,0x65,0xff,0xa7,0xb6,0x9c,0x83,0x1d,0x2e,0x6e
.byte	0xd6,0xd3,0x07,0x22,0x65,0x79,0x4f,0x3c,0x0a,0x5c,0x4f,0x95,0xb3,0x14,0x37,0x9b,0x0b,0x97,0x69,0xd9,0x5b,0x37,0x09,0xc3,0x70,0x5b,0x4f,0x11,0xcb,0xce,0xc0,0x06,0xf2,0xb9,0x32,0xdd,0x24,0x7b,0x8c,0xe6,0x0c,0x91,0x3b,0xa8,0xb0,0x82,0x56,0x4d,0xde,0xa0,0x5c,0x0b,0x5b,0x70,0x53,0x64,0x9d,0xab,0xbb,0x51,0x6b,0x8c,0x8f,0xe5
.byte	0x1f,0xc0,0xb8,0xfe,0x1b,0xf6,0x24,0x26,0x62,0xcb,0x78,0x84,0x90,0x76,0x67,0x30,0x18,0x37,0xa9,0xca,0xb7,0x0d,0xac,0x17,0x86,0xb1,0x87,0x59,0x18,0xc3,0x9e,0x62,0x1b,0xb1,0x04,0x52,0xfc,0x7c,0x86,0xa0,0x37,0xb9,0x8b,0x7a,0x85,0x79,0x21,0xe0,0x0f,0x87,0x28,0x91,0xd0,0xe5,0x24,0x63,0x5c,0x7c,0xe8,0x47,0xfa,0x42,0x55,0xe9
.byte	0x66,0xad,0xdf,0xc3,0x43,0x90,0x47,0x83,0x24,0x09,0x54,0x5f,0x14,0x27,0x53,0xb3,0x22,0x15,0x52,0x84,0x2f,0x61,0x8c,0x01,0x9e,0x34,0x61,0x3f,0x76,0x44,0x1c,0xca,0x79,0x2c,0x40,0x4e,0xa0,0x36,0x11,0xe0,0x23,0x0f,0xa7,0x78,0xf9,0xf9,0x2a,0x2c,0x98,0x5c,0xa9,0x2d,0x66,0xb9,0x87,0x43,0xd5,0xbc,0x64,0xe5,0x52,0x2f,0x1d,0xdc
.byte	0x1d,0xf4,0xb3,0x18,0x6b,0xd1,0x3b,0x8b,0xa3,0x47,0x65,0x62,0xcc,0xca,0x5f,0x00,0xbb,0x78,0x9d,0x35,0xd4,0x79,0x45,0x33,0xc7,0xa8,0x29,0x96,0x98,0xa4,0x23,0x2c,0x23,0x7f,0x5a,0x1d,0x09,0xb4,0xcf,0xac,0x54,0xcd,0x27,0xda,0x88,0x21,0xe2,0xb4,0x85,0xdc,0xc9,0x4a,0x6b,0xc4,0xfa,0x48,0xc5,0x91,0xc1,0x53,0x4b,0xa1,0x7a,0x9c
.byte	0x8a,0x7d,0x35,0x52,0xf1,0x58,0x9d,0x20,0x36,0xc2,0x78,0xdb,0x37,0xf8,0xa4,0x2f,0x50,0x98,0xb0,0x34,0x51,0x66,0x93,0xcf,0xe7,0xf0,0x06,0xf1,0xcd,0x0e,0x4f,0x33,0xcc,0x9b,0x73,0x3b,0xc9,0x51,0x63,0x6d,0x29,0x6b,0xf4,0x9d,0x2c,0x76,0x59,0xcd,0xfc,0x11,0x35,0x52,0xbd,0x3b,0x2e,0x7d,0x8a,0x0d,0xb0,0xbb,0x90,0x9b,0x9c,0xac
.byte	0x1c,0x80,0x89,0xd6,0x6f,0xaf,0xea,0x89,0x38,0x74,0xef,0x83,0x82,0x91,0xf7,0x74,0x96,0x30,0x40,0xe2,0x18,0x2b,0xb4,0xf6,0x15,0xf0,0x8e,0x63,0xe1,0x82,0x55,0x7b,0x65,0x70,0x33,0x14,0xef,0x7a,0x7c,0x2d,0xa9,0x17,0x1b,0x53,0x1e,0xf8,0x98,0x1b,0xbe,0xc8,0x00,0xf5,0xbf,0x79,0xe7,0x8e,0xf2,0xdb,0x59,0x0d,0x46,0xab,0x43,0xd0
.byte	0xe4,0xa0,0xeb,0x29,0x6a,0x8b,0xc1,0x99,0xa6,0xcc,0x8e,0xe5,0xde,0x67,0xdf,0x49,0x09,0x62,0x8d,0x4b,0xa1,0x1c,0x3b,0x01,0xe2,0x95,0x65,0x10,0xa5,0x91,0xd0,0x48,0x35,0x96,0xcf,0xe4,0x51,0xd2,0x7f,0x93,0x49,0xab,0x1a,0xba,0x08,0x33,0x54,0x34,0xd7,0x00,0xc9,0xa0,0x07,0x03,0xc7,0x8a,0x65,0xa2,0x84,0x60,0xcd,0xaa,0xa2,0x46
.byte	0x8c,0x67,0xd9,0xc1,0xe7,0x58,0xc5,0x1d,0xc0,0xb3,0xc6,0xb2,0x2a,0xfb,0x70,0x04,0xa2,0x25,0x7f,0x75,0x3c,0xd5,0x8e,0x9c,0x33,0xa2,0xdc,0x20,0x4c,0x26,0x5b,0xbe,0xd9,0x00,0x5d,0xa2,0xbd,0x42,0xbd,0x0d,0xd6,0x52,0x79,0xb5,0x67,0xf6,0x27,0x62,0xc8,0x64,0x05,0xc5,0x0f,0xae,0xe1,0x78,0x39,0xd1,0xb5,0x28,0xe9,0xd4,0x2a,0xaa
.byte	0xd4,0xc4,0x3e,0x43,0x27,0x83,0xfa,0xdb,0x46,0x73,0x20,0xcd,0x2c,0xba,0x33,0xb4,0x77,0x10,0x32,0x3d,0x8e,0x56,0x88,0x81,0xe1,0x4c,0x8b,0x46,0x60,0xcb,0xb7,0x67,0xd7,0x7b,0xc2,0x47,0x7d,0xd8,0x2d,0x4c,0x09,0x9f,0x07,0x8e,0x34,0x45,0xf4,0x50,0x69,0xfd,0x35,0x0a,0x09,0x9e,0xac,0x49,0x5f,0xdf,0x72,0x84,0x97,0x93,0x30,0x2c
.byte	0xc6,0x20,0x6f,0xb5,0x18,0x03,0xb6,0x30,0x23,0xc8,0xcd,0xa1,0x43,0xbd,0xbb,0x6f,0xde,0xb3,0xcb,0x1c,0xdd,0x41,0x71,0xfa,0x37,0xa7,0xa9,0x57,0x5a,0xf7,0xee,0xcd,0xb1,0xc1,0xb6,0x78,0x1c,0xe3,0xde,0x5c,0x02,0xc8,0xce,0xb7,0x8e,0x72,0xce,0xfd,0x79,0xcf,0x1a,0xef,0xcb,0x5b,0x5d,0x3c,0x1d,0xc8,0x1e,0x9f,0x67,0x26,0x86,0xd3
.byte	0x3b,0x98,0x49,0x04,0xcd,0x1b,0x48,0x7c,0xa6,0xbe,0x37,0x0b,0x19,0xb1,0xb7,0x8a,0x74,0x0a,0xd9,0x4f,0x7b,0xbb,0x8e,0xc6,0x9b,0xdd,0xbc,0x61,0xfd,0xdd,0x86,0x7e,0x70,0x2e,0xe4,0x94,0xb4,0x62,0x47,0x6b,0x7c,0x92,0x41,0xda,0x05,0xdc,0xaf,0x5c,0x93,0xbc,0x7d,0xad,0xce,0x44,0x9e,0x27,0x1c,0x74,0x30,0x01,0xf2,0x8a,0x22,0xce
.byte	0x88,0x61,0xf5,0xb8,0xe2,0xf0,0xca,0x14,0x21,0x53,0xd3,0xbe,0x95,0x8f,0x52,0x10,0x21,0xc5,0x25,0x16,0xa1,0x4f,0xef,0x9a,0x6f,0xce,0xe9,0xee,0x06,0xa8,0x32,0xa4,0xac,0xee,0xd8,0x95,0x0b,0x65,0x10,0xbc,0xb3,0x15,0x48,0xf9,0x96,0xee,0xde,0x5d,0xf6,0x38,0x5f,0x32,0x70,0xd1,0x29,0xa8,0x1d,0xdc,0xf4,0x34,0x2d,0x0c,0x93,0x48
.byte	0x8c,0x40,0xed,0x35,0x41,0xfe,0x4b,0xab,0x20,0x7d,0x95,0x74,0x02,0xe5,0x71,0x76,0x7e,0x59,0x35,0xb3,0xd7,0x43,0x1f,0xd4,0xe6,0x02,0x86,0xba,0x4f,0x53,0xd9,0xc3,0x7d,0x7f,0x3d,0xb6,0xd8,0x92,0x07,0x89,0x99,0x46,0xf8,0x09,0xcd,0x19,0x43,0x93,0xa7,0xc1,0xb2,0x5d,0xec,0xbf,0x09,0xf4,0xba,0xfc,0xf7,0xf1,0xa7,0x2e,0xfe,0x71
.byte	0x04,0x58,0xab,0x16,0xd7,0xc0,0xf7,0x03,0xd4,0xc4,0xb9,0xe4,0xd8,0xfc,0x5b,0x66,0xa6,0xb3,0x6a,0x94,0x0e,0xba,0x8c,0x54,0x5c,0x8c,0x02,0x0a,0x33,0xcb,0xde,0x1c,0xad,0x6d,0xef,0x48,0x05,0xa6,0xca,0x9a,0x27,0xd6,0x1c,0xc3,0xea,0x3a,0x46,0x20,0xec,0x72,0xc4,0x94,0x89,0x7e,0xba,0xa9,0x2f,0xe5,0xec,0x1a,0xe4,0x50,0x54,0xeb
.byte	0xd9,0x5a,0x08,0xc5,0x84,0xc1,0x9a,0xdf,0xb0,0xd4,0x9a,0x6d,0xa2,0x93,0x52,0xd2,0x4d,0x69,0x88,0xc8,0x40,0x2d,0x26,0xbd,0x7a,0x37,0x04,0x21,0xe1,0x9d,0xc9,0xed,0xda,0x7a,0x4c,0x11,0x49,0x14,0x42,0xa1,0xdb,0x6e,0xed,0x1b,0x37,0xbf,0x09,0xac,0x35,0xda,0x80,0xf6,0x75,0xd4,0x32,0x54,0xb5,0x18,0xe8,0x79,0x25,0xc4,0x95,0xe8
.byte	0x74,0xcf,0x6d,0xac,0x34,0x1f,0xea,0xd4,0x2e,0xd1,0x77,0x5e,0x90,0x8f,0x12,0x51,0xbb,0x3c,0xdf,0xe6,0xf4,0x49,0x8c,0x0f,0x9a,0x8e,0xe3,0x96,0xbd,0xba,0xe6,0x47,0x4b,0x50,0xc7,0xa9,0x29,0xea,0x09,0x5d,0xef,0x3c,0x91,0x48,0xc6,0x37,0xfd,0xac,0x7b,0xe5,0x04,0x25,0x93,0x0b,0xe3,0xce,0x32,0x46,0x38,0x81,0x97,0x57,0xbe,0x1f
.byte	0x3c,0x61,0x2d,0xd1,0x4e,0xca,0xbb,0x44,0xc6,0xfd,0xdf,0xdd,0x11,0xbf,0xbf,0xa8,0xc0,0x32,0x67,0xc1,0x2e,0xd7,0xbe,0x3c,0xe3,0xcb,0x57,0xa5,0x6d,0xbb,0x8e,0x0f,0x69,0x22,0x42,0xef,0x53,0x0f,0xce,0x09,0x6a,0xda,0xbf,0xd6,0xed,0x61,0x67,0x82,0x83,0x13,0x63,0x97,0x7d,0x1a,0xad,0x34,0x77,0x37,0xa6,0xe0,0x89,0xaa,0xd4,0xb6
.byte	0x8f,0x93,0xff,0xb8,0x8f,0x63,0x14,0xfd,0x17,0xff,0xe5,0x7c,0x83,0x23,0xaa,0xe0,0xb9,0xd9,0x94,0x3a,0x1a,0xe7,0xa5,0xbd,0xa6,0x2b,0xd3,0x49,0xca,0xeb,0x7d,0x87,0x1d,0x54,0x16,0x93,0xec,0x14,0x8b,0x77,0x3c,0xb4,0xbe,0x33,0x76,0x5e,0xcb,0x33,0x27,0xd3,0x20,0xd6,0xed,0x0c,0x66,0xb8,0xe0,0x00,0xa6,0x76,0xcd,0x8b,0xb4,0xef
.byte	0x11,0xbc,0xe5,0x59,0xcf,0x1d,0xf5,0x15,0x58,0x4a,0xe1,0xfd,0x87,0x8c,0x7b,0xb9,0xa4,0x42,0x5a,0xed,0x51,0x7e,0x8d,0xa6,0x19,0xaa,0xc4,0xa6,0x14,0x74,0x45,0xb1,0xda,0x87,0x0f,0xd7,0xe7,0x66,0x3b,0xcd,0x04,0x02,0x14,0x20,0x41,0x15,0x4c,0x33,0x79,0x80,0x7d,0xd4,0x44,0x2c,0xab,0x6c,0xf4,0xa8,0xd4,0x31,0x43,0x7b,0xa7,0xc7
.byte	0x65,0x0e,0x32,0xc8,0xc8,0x6d,0xf5,0x65,0x1b,0x26,0xf1,0xe4,0x68,0x15,0x88,0x1b,0x00,0x60,0x23,0x31,0xd7,0x4b,0x57,0xda,0xf1,0x19,0xa9,0xd9,0xaf,0xe6,0xa9,0x1e,0x2c,0x0d,0x23,0xe4,0x5b,0xcb,0x43,0x38,0xf0,0x93,0xd3,0xfb,0x6a,0x9b,0x83,0x30,0x55,0x96,0x9f,0x53,0x06,0x3f,0xaf,0x40,0x69,0xef,0x9a,0x47,0x6b,0xba,0x7c,0x10
.byte	0x10,0x44,0x89,0xfa,0xb9,0x9e,0x70,0xed,0x25,0x59,0x68,0xae,0x9b,0x17,0xcf,0x80,0x6f,0x34,0xb8,0x07,0x40,0xe5,0x27,0x6d,0xcd,0x46,0x2c,0x36,0x90,0xf3,0x83,0x74,0x68,0x35,0xf2,0x05,0xa8,0xdf,0x4e,0x34,0xc5,0xb4,0xeb,0x5a,0x7d,0xe6,0x10,0x8a,0x23,0x54,0xeb,0x9b,0x27,0xf2,0x07,0xee,0xf9,0x05,0xc2,0x5a,0x88,0xbd,0x49,0x2e
.byte	0x1b,0x00,0x31,0x68,0x4a,0xc9,0x3a,0xc5,0x93,0x82,0xa8,0x39,0xba,0x55,0xcd,0xc1,0xda,0x49,0xc2,0x4c,0xf4,0x93,0x00,0xcf,0x61,0xa4,0xbb,0x8c,0x64,0x33,0x90,0x14,0x6d,0x1d,0xad,0x75,0x97,0xd9,0x1d,0xfb,0x27,0x67,0x43,0x04,0xdc,0x4e,0xdf,0x0e,0x0c,0x7e,0x1c,0x89,0xfe,0x31,0xb7,0x9b,0x07,0x5e,0x99,0x08,0x22,0xef,0x6e,0x4d
.byte	0x8b,0xd6,0x27,0xe6,0x24,0x1a,0x28,0xb0,0x22,0xa5,0x69,0x17,0x82,0x46,0xe3,0x90,0xe8,0x04,0xae,0x90,0x66,0x14,0xec,0xa2,0x1b,0x7e,0x09,0x13,0x32,0x9d,0xec,0x8b,0x51,0x5f,0xa8,0x96,0x8f,0x4c,0xc6,0xbd,0x5c,0x70,0x29,0x21,0xac,0xe9,0x6e,0xb0,0x0c,0x61,0x50,0xba,0xcc,0x55,0x71,0xda,0x2a,0x92,0x86,0x0c,0xff,0xaf,0x7a,0xcf
.byte	0xaf,0x2a,0xbd,0xd6,0x15,0xa4,0x4c,0x2e,0x76,0x0d,0xcf,0x10,0x11,0x4a,0xd1,0x89,0xdd,0x46,0x5f,0x6b,0x5a,0x02,0x05,0x49,0x6f,0x98,0x6a,0xa7,0x8a,0x66,0x87,0x59,0x23,0xb5,0x3f,0x2e,0x95,0x73,0xfe,0x48,0xe9,0x0d,0x17,0xa6,0xa5,0x4e,0x40,0x98,0x79,0x40,0x1a,0x10,0x1d,0x84,0xdd,0x6f,0x17,0xa7,0xb7,0xfb,0x49,0xbd,0x54,0x97
.byte	0x0f,0x42,0x25,0x95,0x83,0xf0,0x97,0xe7,0x4c,0x24,0xb5,0xe8,0x23,0x0a,0xd6,0xbf,0xef,0x2c,0x03,0x4f,0x87,0x59,0xe8,0x80,0x87,0xcc,0x51,0x1b,0x94,0xd8,0x60,0xe7,0x10,0x4d,0x01,0xfd,0x83,0xf2,0xd8,0x8d,0x1b,0x33,0xbf,0xaf,0x36,0x41,0x47,0x51,0xe0,0x45,0x2a,0x05,0x5f,0xe1,0x92,0xf8,0xa5,0x15,0x46,0x35,0xd8,0x9b,0xe0,0xff
.byte	0xee,0xa6,0x4e,0x7d,0xfd,0x96,0xa5,0x75,0xdf,0x7e,0xb0,0x7d,0x14,0x73,0xdd,0xbe,0x17,0x6d,0xdd,0xec,0xac,0x9a,0x92,0x68,0xe3,0x44,0x16,0x63,0x22,0xa8,0x15,0x58,0x8c,0x11,0x23,0x46,0x18,0xae,0x47,0x39,0x87,0xc7,0x4c,0x30,0x09,0xce,0xe5,0xc4,0xd8,0x82,0xc6,0xc6,0x3d,0x31,0xf6,0x0f,0xb5,0x69,0x61,0x63,0x88,0xd6,0xb8,0xda
.byte	0x89,0x29,0x87,0x69,0x6e,0x3f,0x55,0x2f,0xbc,0x91,0x91,0x43,0x7d,0xb3,0x7b,0x99,0x5a,0x5a,0xb0,0x7d,0x90,0xa7,0xe7,0x30,0x0d,0x32,0xb2,0x43,0x43,0x78,0x59,0x6e,0xbb,0xd7,0x76,0xd4,0x5b,0x4d,0xc4,0xa9,0x99,0xdd,0xd3,0xce,0x3d,0x13,0x41,0x38,0x33,0xed,0xb8,0x76,0x1a,0xbb,0xfd,0x26,0xcd,0x69,0x89,0x22,0x16,0x9a,0x21,0x35
.byte	0x38,0x77,0x14,0x10,0x42,0x17,0x1f,0xa1,0xbf,0x55,0xb4,0x51,0x62,0x15,0xac,0xd0,0xa2,0x71,0xe4,0x32,0x89,0x33,0x8b,0x74,0xc6,0x61,0x38,0xd0,0xfe,0x28,0x69,0xe6,0x88,0x1b,0x11,0x7e,0x46,0x39,0xba,0x24,0xdd,0x1f,0x61,0xf4,0x74,0xad,0x58,0x94,0xa9,0x3e,0xc7,0x2a,0x9e,0xc0,0xe1,0x1c,0xee,0x21,0xab,0x3e,0x65,0x0c,0xe8,0xd8
.byte	0x71,0x52,0xf3,0x6c,0x64,0x53,0x75,0x17,0x87,0x55,0x14,0x42,0x25,0x7f,0xe7,0x0d,0x89,0x1b,0x77,0x26,0xc4,0xaa,0xcc,0x91,0x47,0xe5,0x54,0xae,0x1a,0x0d,0x04,0x99,0xeb,0x56,0xd8,0xb4,0x6d,0xeb,0xec,0x2f,0x6c,0xc5,0x8e,0x76,0xe1,0xa0,0xa7,0x42,0x06,0xc9,0xc3,0x03,0xee,0xa9,0x9b,0x1e,0xfc,0x11,0xf5,0x2f,0x2b,0x14,0xb8,0x9f
.byte	0x87,0x61,0x9b,0xc7,0x38,0x0e,0x58,0xf1,0xd4,0x36,0xca,0x82,0x85,0x9c,0xde,0xec,0xd3,0x1e,0x29,0x4e,0x70,0x9e,0x9a,0xe0,0x8b,0x6f,0xfe,0xd0,0xe9,0x95,0x51,0xcf,0x36,0x31,0x9c,0xff,0x63,0xc6,0x04,0x8e,0x61,0xc2,0xcb,0x3a,0xfa,0xd0,0xd7,0x29,0xbd,0xe7,0x8a,0x2b,0x8e,0xa0,0xac,0x58,0x93,0xb3,0x52,0xca,0x80,0x17,0xd2,0x2d
.byte	0x93,0x5f,0xe0,0x8a,0x47,0x3c,0x67,0x95,0x64,0x91,0xa4,0x76,0xa4,0x5f,0xfa,0x93,0x4d,0xc7,0x6e,0x5d,0x23,0x9f,0xe1,0x4a,0x16,0xff,0xa5,0xf0,0x94,0xa8,0x02,0xcc,0x9a,0x84,0xd5,0x9d,0xb6,0xe5,0x7c,0x76,0x3f,0xc9,0xfd,0xdc,0x8e,0x59,0x9a,0x22,0x18,0x3c,0xe6,0x90,0x85,0x10,0x73,0x2d,0x65,0xa7,0xa7,0xe1,0xeb,0xc5,0x05,0x24
.byte	0x1e,0x0b,0x31,0x19,0xb5,0xb0,0x8d,0xc0,0xb5,0x04,0xfe,0x9d,0xfa,0xf7,0xcd,0x71,0x29,0x40,0x19,0x23,0xed,0x2c,0xdb,0x89,0x89,0x8d,0x69,0x22,0x4c,0x9c,0xa7,0xf7,0xb1,0x56,0x87,0xa3,0x44,0xa9,0xa3,0x16,0x28,0xce,0x94,0x40,0x6f,0x71,0x77,0x0e,0x6d,0xe9,0x78,0xa2,0x2a,0x17,0x45,0x03,0xeb,0x1e,0xf1,0xfa,0x56,0x3e,0xa7,0x6b
.byte	0x08,0x06,0x6a,0xcb,0x8f,0x5e,0x0f,0xd3,0x6e,0x4b,0x21,0x31,0x73,0x50,0x94,0x56,0xf9,0xb9,0xc7,0x38,0x69,0xe8,0x09,0x3f,0x03,0xb3,0xb5,0xe8,0x2a,0x5e,0xf6,0xad,0xae,0x6f,0xab,0x6a,0x49,0xdd,0x93,0x6d,0xfb,0x8b,0xde,0xea,0x8b,0xb0,0xa1,0x44,0xf0,0xb3,0xf6,0xaa,0xe3,0xc8,0x04,0x87,0x9f,0x8b,0xee,0xab,0x13,0x1d,0x2d,0xeb
.byte	0x09,0x62,0x21,0x49,0x5f,0xb6,0x95,0xab,0xc4,0xee,0x69,0xfb,0x31,0xff,0xbf,0x1a,0xa6,0x4c,0x67,0x66,0x84,0xe6,0x0c,0xb7,0xb2,0x3e,0x3f,0xa4,0xb3,0x52,0xde,0x15,0xc9,0xa7,0xa9,0xb5,0x0d,0xe5,0x0b,0x99,0xa6,0xb6,0x8f,0x69,0xc5,0x6d,0x6c,0xbb,0x83,0x89,0x4e,0xfc,0x49,0x79,0x4d,0x46,0x31,0xa0,0x09,0x5f,0x5d,0xd0,0x5b,0x80
.byte	0xa1,0xf4,0x36,0x48,0x97,0x6a,0xfd,0x34,0xcb,0x20,0xa8,0x01,0x25,0x04,0xe7,0x13,0x12,0x87,0x66,0x27,0x96,0x36,0xba,0x92,0xbd,0xda,0x94,0x11,0xef,0x90,0xbd,0xbc,0x9e,0xf9,0x63,0xb3,0xa6,0xc1,0xbb,0x46,0xe8,0x86,0x3f,0x2d,0xf9,0x11,0x3a,0x23,0xa8,0x7a,0x33,0x41,0x3e,0x2e,0x5d,0xde,0xc0,0xd2,0x23,0xca,0x41,0xa0,0xb9,0x70
.byte	0x6d,0x31,0xf3,0x89,0x87,0x9b,0x72,0xd9,0x15,0x4d,0x8b,0x51,0xdd,0x56,0xa1,0xb4,0x68,0x52,0x65,0x81,0x12,0x46,0xea,0x24,0xb4,0x34,0xcc,0xa0,0xdb,0x7d,0x96,0xd9,0x8e,0x64,0x61,0x10,0x7c,0x2a,0x00,0x4d,0x82,0x61,0x54,0xa4,0x70,0x3d,0x9c,0xa5,0x0b,0xd2,0x08,0x71,0xa8,0x94,0xb1,0xb4,0x30,0x61,0x59,0x9f,0x72,0x61,0x56,0x2d
.byte	0xa3,0xf4,0x9d,0x1c,0xfc,0x49,0x9d,0x39,0x27,0xcb,0x54,0xb2,0xce,0x3c,0xb6,0x76,0xe5,0x8e,0xa5,0xe7,0x08,0xd4,0xc7,0x2c,0xa6,0x28,0xc8,0x3e,0x22,0x14,0x06,0x75,0x68,0x0d,0x6b,0xb5,0xa3,0x68,0x14,0x17,0xfe,0xb8,0xcc,0x26,0x5b,0x9d,0x0b,0xcc,0x3e,0xd7,0x6c,0xe0,0xec,0x5e,0x1e,0x1e,0xb8,0x9a,0xbe,0x91,0xb5,0xa6,0xb5,0x83
.byte	0x28,0xc2,0x35,0x65,0xd3,0xde,0xdd,0x71,0x29,0x13,0xc1,0xee,0x78,0x22,0x34,0x0b,0x77,0x3a,0x48,0x98,0x26,0x43,0xc2,0xce,0x03,0xe8,0x75,0xf8,0x8a,0xdf,0x6a,0xb0,0xb4,0x8c,0x11,0x8c,0xe5,0x95,0x96,0x17,0xfb,0x06,0x5e,0x8f,0x36,0x10,0xc5,0x04,0x43,0x1b,0xed,0xd3,0xad,0xd4,0xa4,0xe0,0x17,0x85,0xed,0x9b,0xd8,0xae,0x98,0x46
.byte	0x58,0x57,0x0e,0x46,0xea,0x3f,0x07,0x6d,0x0e,0x46,0xda,0x2f,0x68,0x2b,0xd6,0xe7,0x0d,0x4b,0xbe,0x32,0xee,0x10,0x73,0x18,0x7d,0x6b,0x2d,0x04,0x27,0x72,0xb1,0xe1,0xbf,0x89,0xaa,0x4d,0x1a,0xfc,0xbd,0xf2,0xc3,0x9f,0xf0,0x01,0x85,0x62,0x09,0x4d,0x08,0x2c,0x57,0x9a,0x7b,0xad,0x0b,0x79,0xff,0x14,0xa1,0x45,0xde,0x21,0x8f,0xe2
.byte	0x93,0xd0,0x35,0x26,0xc3,0xbc,0x8c,0xb7,0x57,0x6a,0xdf,0x98,0xa7,0x75,0xc6,0xf6,0x4b,0x5f,0x91,0x6e,0x71,0x3a,0x5c,0x5f,0x57,0x63,0x34,0x87,0xf8,0x20,0x6a,0xa1,0xbf,0xf8,0xca,0x8e,0xf9,0xa9,0x10,0x8b,0xab,0x0b,0xc2,0xcc,0x71,0x89,0x7c,0xef,0x70,0x3a,0xb0,0xf6,0x90,0xcc,0x6b,0x2c,0xcc,0x8b,0x2a,0x21,0x78,0x23,0xa0,0x71
.byte	0x8c,0x7b,0xc1,0x0f,0x27,0x72,0x40,0xe4,0x9e,0x35,0xf3,0x0a,0xc0,0x7e,0x7f,0xe5,0x9b,0xdb,0x93,0x49,0x08,0xc3,0x6b,0xb7,0xea,0xea,0xd4,0x5a,0x96,0x97,0x3c,0xdf,0xc7,0x02,0x39,0x9f,0xa3,0xca,0xdd,0x62,0xf3,0x68,0xc7,0xae,0x37,0xc1,0x35,0x73,0xb2,0x5d,0x99,0xe4,0xae,0x27,0x55,0x5e,0x6a,0xae,0x6f,0x1a,0x95,0x51,0xb1,0x3b
.byte	0xd7,0xb4,0x4d,0x3d,0x88,0x54,0x01,0xbe,0x2c,0x12,0x17,0x29,0x4f,0xf3,0xed,0x5a,0x1f,0xa9,0xf0,0x67,0xbd,0x7c,0xad,0xe5,0x58,0x52,0xd4,0xd1,0xfe,0x1e,0x1b,0xd6,0xce,0x7c,0xc3,0xa2,0xa9,0x72,0x9b,0x6a,0xe5,0xf9,0x39,0x22,0xaa,0x7f,0x2e,0xa2,0x53,0x75,0xf0,0x99,0x2e,0x36,0x86,0x83,0x10,0x63,0xd7,0xac,0xa3,0x52,0xa6,0x23
.byte	0x80,0x46,0xe4,0xa9,0x07,0x79,0xe1,0x61,0x75,0xbf,0x08,0x31,0x6c,0xdd,0xe1,0x30,0xd0,0x35,0xc2,0xbd,0x30,0xb8,0x85,0xf3,0xd2,0x2c,0x90,0x7a,0xf0,0xd3,0x80,0xe5,0xf1,0xc2,0x58,0x3d,0xf7,0x3c,0xbc,0xff,0x03,0x4d,0xf7,0xad,0x2f,0xa6,0xfe,0x73,0xde,0xa8,0x60,0xd7,0x89,0x4a,0xcf,0x3d,0xf3,0xab,0x62,0xfa,0x9d,0x46,0xad,0xd0
.byte	0x97,0x6f,0x89,0x84,0x16,0x9b,0x84,0xb2,0x6c,0x63,0x6d,0x29,0xee,0x8e,0x97,0x3c,0x48,0x19,0x92,0x62,0xdc,0x1d,0x35,0x9d,0xec,0x01,0x00,0x64,0xbf,0x4d,0x8b,0xa3,0x13,0x48,0x9f,0xb4,0x01,0x0d,0xb1,0xc4,0xf2,0xf2,0x6a,0x84,0x1a,0x07,0x3c,0x46,0xa6,0xb5,0x41,0x9a,0x32,0x7e,0xc3,0x4f,0x87,0x95,0x71,0x7a,0xbf,0x74,0xf8,0x0b
.byte	0xfb,0xa5,0xde,0xa8,0x35,0xf1,0xcb,0x04,0x8d,0x8b,0xd3,0xb0,0xc8,0x1d,0x6c,0xaf,0xb4,0x21,0x79,0x1c,0x34,0x71,0x2f,0xf5,0xc4,0xbe,0xad,0xbc,0xaf,0x2f,0x54,0x81,0xd9,0xf8,0xff,0x59,0xf9,0x4e,0x62,0x9f,0x7d,0x7c,0xe9,0xdc,0x67,0xae,0xa3,0x32,0x4b,0xf7,0x4e,0x53,0x4c,0x55,0x7d,0xc5,0xdd,0xd4,0x5d,0x93,0xb8,0x98,0x3e,0xd3
.byte	0x15,0x65,0x52,0x78,0x5a,0xd2,0x21,0x84,0x5d,0x28,0xaf,0x44,0x7d,0x18,0xf8,0xdd,0x5c,0xc3,0x6e,0xc8,0x05,0x05,0x30,0xd0,0x82,0xf8,0x00,0x0f,0x3d,0x5c,0x62,0x7e,0xa6,0xd5,0x7b,0x9f,0xb1,0x44,0xb7,0x0d,0x22,0x81,0xe1,0x4a,0x2b,0x79,0x7e,0x39,0x4d,0x8a,0x9a,0xfd,0x94,0x0c,0xf7,0x23,0x10,0x99,0xd2,0xd2,0x8b,0x98,0xe5,0x9d
.byte	0xb0,0xbf,0xcf,0x06,0x08,0x80,0x32,0x69,0xfd,0x81,0x5f,0xb3,0x66,0x11,0x63,0xeb,0x30,0x1d,0xcd,0x5b,0x5b,0xec,0x0c,0xca,0x30,0x37,0xa0,0x82,0x79,0x75,0x87,0xc1,0xfa,0x5b,0x38,0x4b,0xe3,0xea,0x46,0x49,0x36,0x92,0x92,0xf0,0xc9,0x15,0xa5,0xec,0x9e,0x21,0xb6,0x9f,0xb4,0x6d,0xf6,0xef,0x5c,0x2f,0x7d,0xa4,0xb3,0x25,0xfb,0x13
.byte	0x40,0xe1,0xa0,0x20,0x4a,0x3a,0xe2,0x3e,0xf5,0xe0,0x68,0x61,0x11,0x9a,0xfb,0x1e,0xe8,0x1b,0xe0,0x17,0x9c,0x8a,0xe5,0x53,0x74,0xdd,0xec,0xc6,0x03,0xc6,0xd0,0x9b,0xc2,0x0b,0x77,0x4c,0x36,0x2b,0xac,0x4e,0x4d,0xd2,0x26,0x70,0x39,0x96,0xb4,0x11,0x1a,0x5b,0xcc,0x3f,0xb9,0xcf,0x0d,0x04,0x55,0x05,0x00,0x66,0x8f,0xa9,0xec,0x31
.byte	0xe5,0x47,0x4c,0x9b,0xb7,0x6e,0xa5,0xe7,0x9e,0x70,0xf4,0x02,0x2a,0x3c,0xa2,0x03,0x04,0x30,0x9e,0x3f,0x7c,0xaa,0x0a,0x8f,0x55,0x61,0xca,0x50,0x35,0xe6,0xa4,0x24,0x61,0x26,0x31,0x9e,0x9e,0x77,0x0d,0x15,0x3a,0xc0,0x88,0x32,0xb5,0xbb,0x3d,0x3e,0x59,0x25,0x52,0x81,0x2e,0x4b,0xc6,0x5d,0x9f,0x87,0x0f,0x1f,0x5e,0xec,0xdd,0xbe
.byte	0x32,0x6c,0x71,0xef,0xd2,0x9c,0xfd,0x70,0xc8,0xf6,0x1f,0xb9,0xc9,0xdd,0x4d,0x39,0x61,0x92,0xbd,0x0c,0x48,0x63,0x4b,0xd2,0x2b,0x8c,0x4b,0x35,0xb1,0x8e,0x04,0x44,0x3c,0xe1,0xde,0xfd,0x6e,0xde,0xeb,0x94,0x51,0xea,0x36,0x7b,0xc6,0x87,0x15,0x34,0x68,0xa0,0xb8,0x94,0xb6,0x56,0x33,0xf4,0xab,0x84,0xed,0x1c,0x36,0x91,0xa7,0x1b
.byte	0x03,0xca,0x48,0x64,0x16,0x5b,0x4b,0x69,0x47,0xae,0xd7,0xc9,0xcf,0x74,0xd2,0xbd,0x60,0x04,0x7c,0x66,0xe9,0x12,0x92,0x40,0x78,0x23,0x0b,0x5b,0xa0,0xda,0xf7,0xe4,0x9a,0xad,0x9c,0x31,0xe7,0xaa,0xad,0x5a,0xc3,0x45,0x00,0x6c,0xd3,0x4d,0x93,0xdf,0xb6,0x68,0x11,0x3f,0x2a,0xbc,0x9a,0x8d,0xeb,0x0f,0xb5,0xa9,0x8e,0xa5,0x2c,0x99
.byte	0x94,0x8d,0x21,0xa9,0x41,0x6b,0x11,0x2e,0x02,0x21,0xd8,0xc1,0xbc,0xf0,0x2a,0x87,0xae,0x35,0xa9,0x78,0x5c,0x43,0xb8,0xb7,0x63,0x2d,0x09,0x31,0xae,0x6f,0xfc,0x39,0x7b,0x18,0xc3,0xce,0xe3,0xfa,0x51,0x70,0xc7,0x6b,0x5e,0xc3,0xce,0xc8,0xa2,0x3a,0x66,0x9e,0xfe,0x45,0xb4,0xa2,0xaf,0x81,0x03,0x74,0xbf,0x0c,0x65,0x4c,0x30,0x27
.byte	0xd5,0x34,0x29,0x2d,0x83,0xa8,0xb9,0x1d,0xf8,0x12,0x09,0x51,0xdd,0x0e,0x66,0x95,0xf3,0x94,0xaa,0x83,0x3a,0x6f,0x8a,0x7c,0x3a,0x29,0x82,0xbb,0x80,0xa1,0x37,0x8c,0x79,0xf4,0x4a,0xa8,0xe4,0x17,0x72,0x77,0xee,0xc4,0xaa,0x25,0xd3,0x8f,0x2e,0xaf,0xb9,0xb2,0x3c,0xa6,0xd5,0x72,0x97,0x07,0x23,0x38,0xae,0x9e,0x22,0x08,0x85,0x70
.byte	0xfa,0xff,0x38,0xe6,0x96,0x9f,0x2c,0x11,0x14,0x16,0x9a,0xfa,0x5a,0x7b,0x05,0x31,0x3e,0x20,0xbf,0x4d,0x87,0xaa,0xba,0x94,0xcd,0xdb,0xeb,0xec,0x29,0x58,0x4e,0x43,0x12,0xe8,0xf9,0x01,0x50,0xc8,0x51,0x7a,0x61,0x12,0xe9,0xed,0xc2,0xd6,0x2e,0xd3,0xed,0x54,0x72,0xf7,0x1b,0x0c,0x8c,0xb4,0x65,0xea,0x22,0x31,0x22,0xeb,0xcd,0x53
.byte	0x66,0xf1,0xa5,0x34,0xe9,0x81,0x74,0xcb,0xb5,0x6b,0x45,0x71,0x69,0x6d,0x84,0xe8,0xc6,0x86,0xc9,0xdd,0x0c,0xa4,0x30,0x12,0x08,0x42,0x10,0x6b,0xcd,0x65,0x6c,0xfd,0x9c,0xde,0x77,0x3c,0x32,0x09,0xef,0x99,0x27,0x0e,0x4a,0x72,0x03,0x8d,0xb5,0x68,0xa0,0x67,0xf7,0xc2,0xae,0xb8,0xce,0x41,0x70,0x4e,0xdd,0x13,0xcb,0x3f,0x05,0x4e
.byte	0xf4,0xbc,0x88,0x98,0x2f,0x42,0x4e,0x5f,0x3e,0xcb,0x2c,0xd3,0x2f,0xb8,0x92,0xbb,0xd8,0x95,0xc8,0xaf,0xa9,0x44,0x8b,0xf0,0x2f,0x81,0xd4,0xe7,0x06,0x19,0xf7,0xa7,0x0a,0x73,0x3e,0x30,0xd9,0x00,0xe4,0x2d,0x76,0xb1,0x0d,0xfa,0x12,0x1f,0xbe,0x59,0x4f,0xf7,0xc8,0x5b,0xab,0xd7,0x16,0x3d,0x7e,0x97,0x9e,0xec,0xf8,0xcb,0x31,0x2e
.byte	0xe0,0x41,0x0b,0x00,0xa6,0x6d,0xe9,0x5e,0xd5,0x4a,0xc5,0xbf,0x1c,0xcc,0xa5,0x71,0x94,0x29,0x3d,0x17,0x43,0x27,0x63,0xc4,0xc7,0x8f,0x1b,0xb7,0x5f,0xcf,0xdf,0x8e,0x6a,0x69,0x87,0xc1,0x29,0xab,0x7b,0x8d,0xdf,0x07,0x95,0x50,0xa3,0x1c,0x8e,0xdc,0x7f,0x8a,0x21,0x37,0x1e,0x26,0xa7,0x67,0x28,0xb2,0xc8,0x23,0x5a,0x1d,0x94,0x46
.byte	0x1b,0x3e,0x72,0x87,0x73,0x08,0xe2,0x3b,0x46,0x51,0xbe,0x5b,0xa9,0x72,0xb9,0xf8,0x45,0x6d,0x0c,0x89,0x80,0x0d,0x7a,0xfb,0x4c,0x3f,0x7f,0x3d,0x29,0xff,0xef,0xb2,0xec,0x23,0xc2,0x26,0xcf,0x8c,0x2e,0x28,0xbf,0xc5,0x68,0x47,0xd9,0x49,0x95,0xf1,0x67,0x7e,0x3a,0x48,0xe2,0x43,0x5c,0xc8,0x95,0x5b,0xb2,0xf3,0x22,0xc9,0x73,0x91
.byte	0xb5,0x78,0x96,0x1b,0x9a,0x75,0x5f,0xb2,0x6b,0x8c,0x66,0x8c,0x8e,0xc1,0xe1,0xde,0xd6,0x64,0x31,0xe1,0x7b,0x12,0xd2,0x85,0x8f,0x52,0x68,0xec,0x80,0x26,0x3d,0xcc,0x9b,0xe3,0x57,0xbe,0x19,0x42,0xb9,0xdd,0x7d,0x2b,0x5b,0x6d,0x1b,0x9e,0x96,0xd7,0x75,0x83,0x82,0x3c,0x3e,0x5f,0xf8,0xa9,0x36,0xbe,0x14,0xc7,0xce,0x9d,0x05,0x7e
.byte	0xd7,0x38,0x37,0x35,0xc9,0x37,0x8b,0x9f,0xc6,0x2d,0xff,0x00,0x41,0xff,0x1b,0x09,0xea,0xd2,0xb0,0x04,0x48,0xff,0xfc,0xb5,0x67,0x54,0x39,0x3d,0x23,0x68,0x0b,0x7d,0x97,0xf3,0x65,0x20,0xa2,0xf8,0x33,0x96,0xd1,0xf4,0xc7,0xba,0x6f,0x00,0x95,0x36,0xf6,0x33,0xd1,0x8d,0xde,0xee,0x1e,0xfa,0x60,0x8e,0x5e,0x4c,0x70,0xbb,0x53,0x79
.byte	0xc9,0x9a,0xdf,0x3c,0x53,0xe4,0x35,0x87,0xc3,0xe6,0x8e,0x0e,0x1a,0xd0,0xf8,0x57,0x2b,0x33,0x51,0x4d,0x7d,0x43,0x17,0x3e,0x6f,0x0e,0xca,0x86,0xb2,0xc6,0x09,0xf3,0x2f,0xc1,0x5f,0x0e,0x9a,0x5e,0x7d,0x9d,0xf7,0xff,0x09,0x46,0xe5,0x30,0x91,0x61,0x93,0xb5,0x2f,0xc5,0x7f,0x09,0x0b,0x55,0x94,0x17,0x25,0x19,0x9b,0xa9,0x0e,0x68
.byte	0x71,0x18,0x1b,0x4b,0x1b,0xa3,0x75,0x90,0x56,0x96,0x5e,0x33,0x71,0xf2,0x06,0x69,0x07,0x04,0xcb,0x8c,0x79,0x9b,0xa5,0x17,0xd8,0xd8,0x77,0xc7,0xca,0x95,0x58,0x12,0xec,0xdd,0x41,0xc9,0x12,0x16,0x9a,0xc4,0xf0,0x27,0x7a,0x8e,0xeb,0x19,0x79,0x27,0x7b,0x2e,0x55,0x96,0x57,0x19,0xbe,0x55,0x8c,0x7f,0x97,0x90,0x80,0x40,0x5d,0x5a
.byte	0xf6,0x07,0xd6,0xb4,0xc5,0xe8,0x0e,0x54,0xde,0x78,0x23,0xca,0x39,0x90,0x42,0xb6,0x8b,0x14,0x22,0x06,0x71,0x77,0xd5,0xf7,0x8d,0x05,0x9d,0xbf,0xfe,0x38,0x91,0xba,0x79,0x85,0x30,0x47,0x25,0xf0,0xa2,0x72,0x55,0x94,0x2a,0x8a,0xc8,0x28,0xc8,0xa9,0x23,0xab,0xf0,0x4e,0x49,0x2f,0x58,0x53,0x35,0xd1,0xb6,0x16,0x81,0xc2,0x25,0x18
.byte	0xd9,0x71,0x91,0xc4,0x81,0x3e,0xf4,0xd7,0x87,0x9e,0x57,0x78,0xf7,0x7d,0x4b,0xb2,0xfd,0x91,0x9f,0xa8,0x0e,0x77,0xb3,0xc7,0xe5,0x6a,0x95,0x17,0xc3,0xf4,0xcb,0x7f,0x96,0xc1,0xa8,0xee,0x6a,0x0f,0x1f,0x5d,0x20,0x28,0x93,0xe5,0xf3,0x13,0x46,0x53,0x47,0x9f,0x98,0xc6,0xf5,0x29,0x69,0xb9,0x83,0x36,0x03,0xa1,0x9a,0xb4,0xa9,0x4e
.byte	0xd6,0xda,0x25,0xe2,0x5b,0xbb,0x95,0xdf,0x0f,0x37,0x0b,0x02,0x51,0x03,0xd1,0x0e,0x84,0xef,0xdd,0x85,0xdd,0xae,0x10,0x32,0x65,0x03,0x65,0xf0,0x8e,0x0c,0x69,0x90,0x35,0x26,0x36,0xe8,0x05,0x46,0xe6,0xce,0x52,0x4d,0xb5,0x93,0x9f,0xe3,0xe5,0xb0,0x43,0x57,0x32,0x5d,0xca,0xd4,0xc9,0x89,0x2e,0x5b,0x03,0x8a,0x82,0x78,0x21,0x6b
.byte	0x41,0xa9,0x0a,0x9f,0xe0,0x50,0xec,0x72,0x01,0x67,0xe7,0x1c,0x92,0xe3,0xe4,0x83,0x4d,0x4b,0xcf,0x01,0x37,0x2f,0x34,0x86,0xcf,0x36,0xf7,0x3a,0x57,0xa3,0x89,0x73,0x0f,0x9c,0x06,0x82,0x75,0x7a,0x4b,0xd8,0x44,0x40,0xf2,0xc5,0xc4,0x22,0xa6,0x99,0x1b,0x73,0x2f,0xad,0x09,0xe9,0x84,0x6f,0xc3,0xca,0x72,0x3a,0x8a,0x55,0x55,0x0a
.byte	0xcd,0x33,0x51,0xef,0x5b,0x36,0x77,0x6c,0xb4,0x4a,0xae,0xdd,0xbd,0xec,0x65,0x99,0x43,0xd6,0x8a,0x16,0xba,0x89,0x4d,0x0c,0x11,0xb4,0x0d,0x5d,0x3e,0x76,0xcb,0x48,0x9d,0x31,0x40,0x71,0xe2,0xe4,0xa9,0xd9,0x6e,0x3c,0x3d,0xd1,0x6e,0xaf,0xb9,0x28,0x71,0x5a,0x07,0x6f,0xab,0xdb,0xf8,0x4f,0x11,0xbc,0xe0,0x14,0x01,0x43,0x4d,0xe2
.byte	0xad,0x5d,0x2a,0xb2,0x58,0x66,0x05,0x50,0x66,0xf6,0x2f,0x66,0x11,0xd1,0xd7,0x05,0x85,0xb0,0x7f,0xa8,0x89,0xbd,0x41,0xda,0x35,0x1e,0xbb,0xff,0x70,0x1a,0xe8,0x65,0x96,0xe9,0x50,0x18,0x7f,0x4c,0xb2,0xe2,0x95,0x26,0xf6,0x37,0x09,0x8c,0x8d,0x7b,0x02,0xb0,0x7f,0x32,0xb5,0x70,0x22,0xd6,0x83,0x0b,0x85,0x25,0x00,0xc5,0x55,0x3f
.byte	0xfa,0x7a,0xc9,0xaf,0x87,0xc1,0x1c,0x11,0x96,0x71,0x18,0xd8,0xdb,0xab,0x86,0x57,0x0a,0x16,0x23,0x32,0x40,0xd3,0xaf,0x17,0x55,0xe3,0xe7,0x01,0x65,0x1f,0x87,0xda,0xb5,0x46,0x67,0x18,0x34,0xcc,0x28,0x77,0xc3,0x12,0x62,0x6c,0x8b,0x8a,0x11,0x7a,0x5a,0xd1,0xdf,0xb3,0x13,0x6b,0x29,0xce,0xf8,0x03,0xba,0xad,0x7c,0x14,0x60,0x42
.byte	0x17,0xf6,0x7b,0x0c,0xb7,0x5f,0xd6,0xc1,0xb5,0xa5,0x2b,0xb1,0x9f,0x6c,0x65,0x29,0xe5,0xf4,0x84,0x85,0x11,0x82,0xf1,0x4c,0xcd,0xff,0x99,0x29,0x53,0x7b,0x43,0x04,0x60,0xc4,0x6c,0x01,0x5c,0xcb,0x33,0x4f,0xdb,0xc4,0xad,0x8c,0xea,0xff,0xd6,0xcd,0x8e,0x85,0x6e,0x54,0xd5,0x18,0x63,0x84,0x78,0xea,0xff,0x08,0x95,0xdc,0x2a,0x07
.byte	0xac,0xea,0x44,0x79,0x52,0x07,0xf3,0xf1,0x03,0x7f,0x71,0x53,0xd8,0x85,0xdb,0x70,0xde,0x5e,0xd5,0x9a,0x18,0x9f,0xcc,0x3f,0xc0,0xc0,0x49,0x82,0x70,0x09,0xce,0x29,0x04,0x0a,0x19,0x81,0xd9,0x81,0x22,0x71,0x48,0x8e,0x79,0x08,0x1c,0xb4,0xc8,0x7e,0x60,0x43,0x4a,0xe3,0xd5,0x6b,0x09,0x5c,0x01,0x6e,0x20,0x9e,0xd2,0xaf,0x80,0xb7
.byte	0xa2,0x0a,0x5b,0x26,0x08,0x32,0x73,0xbc,0xc6,0xfd,0x06,0xaa,0x2e,0x55,0xa0,0x5b,0xa9,0x3c,0x85,0xb2,0x04,0xdc,0x9a,0x94,0x02,0x93,0x96,0x6b,0x3e,0xc3,0x5e,0x37,0x9b,0x6f,0xef,0xb9,0x65,0x52,0x42,0x1c,0xa7,0x84,0x09,0x0c,0x49,0x3a,0x95,0x06,0x94,0xd7,0xc7,0x40,0xf5,0xf1,0x69,0x41,0xfb,0xf8,0x57,0xb5,0x1e,0x0c,0xf3,0xd9
.byte	0xb1,0x2e,0x58,0x33,0xbe,0xb1,0x3d,0x61,0xc6,0xca,0x01,0xe5,0xda,0x60,0x8f,0x87,0xf7,0x9a,0xb5,0x92,0xb4,0x8c,0x2a,0xaf,0xd4,0x1e,0x9c,0x97,0x39,0x83,0x99,0x4a,0x07,0x54,0x75,0x7d,0xde,0x72,0x06,0xc1,0x8f,0xb4,0xde,0x12,0x43,0xf2,0x62,0xae,0xe7,0xec,0xfe,0xb2,0xe5,0x63,0x35,0xb7,0xee,0xaa,0xf0,0x09,0xb8,0x61,0xf2,0x42
.byte	0x28,0x87,0xd7,0x47,0xa8,0xfc,0x51,0x85,0x6f,0xa2,0xb1,0xa6,0x82,0xd6,0x0e,0x1b,0x3f,0xea,0xa1,0xe1,0x91,0xc9,0xd2,0x5b,0x3e,0xff,0x18,0x39,0x14,0xe0,0x44,0xda,0x3d,0xd8,0xca,0xdb,0xd9,0xbf,0x3f,0xa4,0xdb,0x99,0x2e,0x31,0x32,0x7c,0xf4,0x61,0x2f,0xa1,0xf9,0xa9,0xbe,0x26,0x94,0xea,0xb4,0xe3,0x25,0x8d,0x93,0x3b,0xa1,0x7e
.byte	0x1e,0x99,0x87,0x6c,0xaf,0x14,0x54,0xd0,0xc0,0x37,0x39,0x76,0x3c,0x07,0x2e,0xce,0x98,0x25,0x81,0xe4,0x01,0x0c,0x07,0x79,0x4e,0xcd,0x82,0x44,0x83,0x04,0x07,0xa6,0x52,0xb7,0x96,0x7c,0x43,0x12,0xe1,0xc5,0x12,0x18,0x25,0x47,0xe4,0x19,0x6d,0x26,0x1e,0x55,0x66,0xca,0x28,0x4c,0xfa,0xd2,0xd9,0xcc,0x7e,0xad,0x9f,0x2a,0x2f,0xc6
.byte	0x6c,0x77,0xaa,0x0f,0x5b,0xeb,0x15,0x97,0x62,0x52,0x3c,0x6f,0x4b,0xf3,0xcc,0x80,0x7b,0x1f,0x1d,0x58,0xf8,0xfe,0xc1,0x8c,0x3b,0xe3,0xd7,0x05,0xc3,0xd6,0xa9,0xda,0xcf,0x85,0x1c,0x68,0xd6,0x6d,0x2b,0x06,0x30,0x5f,0x58,0x39,0xea,0xfa,0x99,0xaa,0x04,0x10,0x05,0xaf,0xb0,0xf7,0x32,0x60,0x8d,0xe4,0xd1,0x40,0x32,0xd6,0xa3,0xf2
.byte	0xba,0x5a,0x79,0x58,0x92,0x75,0xf0,0x3a,0xce,0xb2,0xee,0x66,0x3e,0xe3,0xbe,0x4d,0x53,0x9d,0xbb,0xdb,0x45,0xf0,0x09,0xeb,0xd5,0x83,0x39,0x20,0x06,0xa9,0x44,0x35,0xeb,0x6d,0x9b,0xd9,0xa4,0xda,0x4b,0x9d,0xde,0x3d,0x26,0xa2,0x2d,0xcf,0x8e,0x3e,0xbc,0xb4,0x8c,0x3a,0xbf,0x56,0x7c,0x48,0x50,0xb5,0xc5,0xbe,0x84,0x5e,0x63,0x82
.byte	0x5f,0x87,0x77,0x4a,0xa7,0xf6,0x66,0x07,0x42,0x6a,0xb0,0xcf,0x19,0xaf,0x6c,0x16,0x85,0x78,0x88,0x3b,0xa5,0xbc,0x42,0xd2,0x4c,0xdf,0x51,0x3b,0xc4,0x0e,0xf5,0xc5,0x70,0x57,0x40,0xf6,0xed,0xd2,0x37,0x3e,0x14,0x0c,0x31,0xda,0x94,0x87,0x6b,0xd9,0x8c,0x15,0x41,0xa9,0xc0,0x2a,0x61,0xd3,0x52,0xe0,0xb6,0x0a,0x83,0x6b,0x75,0x1b
.byte	0x1e,0xd1,0x7f,0x26,0x19,0x34,0x9b,0x70,0xc9,0xba,0xdc,0xa2,0x03,0x6d,0xc7,0xac,0xbd,0x2c,0x63,0x8a,0x7b,0xb1,0x62,0x51,0xc1,0x1d,0x54,0x0d,0x34,0x0e,0xfb,0xa6,0xb8,0x9d,0x79,0x4f,0xc3,0xaa,0x8d,0xa0,0xcc,0x80,0x96,0x86,0x37,0xd6,0x80,0x9c,0x3d,0x91,0xd0,0xe7,0xe2,0xb4,0x00,0xba,0x86,0xe9,0xeb,0x86,0xea,0x84,0x78,0x81
.byte	0x20,0x29,0x28,0x02,0x4d,0xd8,0x1b,0x5e,0x4f,0x41,0xfc,0x13,0x3e,0x4c,0x7f,0x64,0x55,0x35,0x41,0x0d,0x74,0xc5,0x6a,0x7c,0x37,0x82,0x41,0xbd,0x67,0x39,0xd9,0x83,0xfa,0x7f,0x8c,0xe1,0x9f,0x23,0x0d,0xe4,0x1d,0x40,0xe6,0x6e,0x94,0x5d,0xec,0x77,0xf7,0x5e,0xb4,0xa1,0x03,0xfb,0xa0,0x0e,0xba,0xf8,0x28,0x50,0x3c,0x38,0x47,0xf7
.byte	0xed,0x2d,0xe5,0x0b,0xa8,0x7a,0xbd,0xbf,0x7e,0x38,0xc0,0x60,0xe7,0x7e,0xb1,0x03,0xef,0x4a,0x8c,0xc7,0x98,0xf1,0x94,0xf6,0xa0,0x50,0xb2,0x0b,0x7c,0x66,0x0a,0x62,0x10,0x24,0xb0,0xa1,0x69,0x02,0x33,0x79,0xbf,0xd0,0xb5,0xcb,0x17,0x20,0x55,0x02,0x70,0x44,0x5b,0xac,0x20,0x35,0xea,0x05,0x2d,0x68,0x51,0xe7,0x5f,0x1b,0xcd,0x4c
.byte	0x33,0x4d,0x04,0x21,0xfd,0x06,0x67,0x82,0x60,0x98,0x1f,0x79,0xf4,0x28,0xe0,0xa8,0x18,0xeb,0xf5,0x86,0x58,0xe6,0x9f,0xb5,0x29,0x0f,0xe8,0x37,0xeb,0x09,0xf4,0xc6,0x08,0xf2,0xde,0x4d,0x96,0x48,0x62,0x36,0x63,0x10,0x3f,0x63,0xeb,0x44,0x84,0xc8,0xf5,0x74,0x19,0x03,0x50,0xf7,0x7c,0xd2,0x06,0x20,0x6e,0x9b,0xa2,0x37,0xb0,0x68
.byte	0x78,0x31,0xb6,0x05,0xfa,0xc9,0xcd,0x1d,0x4c,0xbd,0x33,0xb7,0xf3,0x93,0x38,0x7d,0x5f,0x00,0x85,0x5b,0x10,0x7f,0xc4,0x3f,0x3e,0xfe,0x62,0xca,0x51,0x83,0x95,0xcf,0x00,0x65,0x83,0x0e,0xd3,0x78,0xd0,0x51,0xcb,0x70,0x34,0x42,0xc6,0x3a,0x04,0xb9,0x10,0x92,0xe0,0x09,0x06,0xb0,0x66,0x9b,0x37,0x02,0x8d,0x0d,0x3e,0x2f,0xc5,0x17
.byte	0x6a,0x87,0x7d,0x48,0xa4,0xcc,0x55,0x20,0x7b,0x77,0x07,0xcf,0x44,0x2f,0x88,0x8a,0xcc,0xf2,0x5d,0xa6,0x3e,0x5f,0xda,0xe2,0xde,0xd2,0x7f,0x7f,0xb7,0x90,0x53,0x64,0x6b,0x79,0x42,0x52,0x69,0xc6,0xd6,0xaa,0x9f,0xf9,0x19,0xbe,0x65,0x10,0x99,0x49,0xaf,0x36,0x49,0x1b,0x8a,0x3d,0x7f,0xdb,0xa2,0x1a,0xb5,0xd6,0x34,0x51,0xc8,0xc8
.byte	0x06,0xca,0xf6,0xb8,0x76,0xa8,0x9d,0x43,0xae,0xf0,0x51,0xe5,0x9a,0x42,0xa2,0x83,0xed,0x20,0x8d,0xe8,0x1c,0xca,0x15,0x4e,0x37,0x3f,0xd8,0x06,0xa0,0xe1,0xf8,0x05,0xfd,0x42,0xf3,0x7a,0x96,0x44,0x36,0x02,0xca,0x11,0x2a,0xc3,0x24,0x58,0xdd,0x85,0x55,0xb2,0xe5,0x1d,0x92,0xc2,0x2d,0x5f,0x7c,0xb5,0x02,0x37,0x7c,0x07,0x35,0x25
.byte	0x2b,0x33,0x80,0xe2,0xd4,0xfd,0xc7,0xa7,0x19,0x7e,0xba,0x36,0xaf,0xa0,0x4e,0xab,0x8b,0x28,0x4f,0x3b,0x92,0x72,0x42,0x49,0xaa,0x3b,0x08,0x0f,0x1e,0xff,0x2d,0xbf,0x9c,0x48,0x16,0x72,0xbe,0x28,0x05,0x8b,0x3a,0x20,0x6b,0x38,0x43,0xa2,0x35,0xea,0xf7,0x4e,0x50,0xa0,0x43,0x40,0x5c,0xbf,0xe5,0x75,0x13,0x4c,0x36,0x61,0xa1,0x5d
.byte	0x46,0xd7,0x7a,0x94,0x06,0x2f,0x63,0x32,0x9c,0x6e,0x54,0x18,0x31,0x79,0xf2,0x83,0xcf,0xb4,0x47,0x40,0xe5,0x9a,0xd6,0x99,0x12,0xb3,0x61,0x3d,0x0f,0x5e,0xc8,0x95,0xa3,0x5f,0xc3,0xd5,0x6b,0x6e,0xa0,0xf2,0x2f,0xeb,0x66,0xd0,0x68,0x67,0x10,0x85,0x64,0x27,0xd8,0xb8,0x68,0x00,0x36,0xa5,0xab,0x3e,0xe1,0x43,0x65,0x81,0x2d,0xb9
.byte	0x0f,0x87,0xfe,0xa1,0x52,0xe9,0x8d,0x82,0x3a,0xd1,0x10,0x52,0x34,0x48,0x7c,0x1c,0xc6,0xd0,0xfe,0xa0,0x1a,0x92,0x07,0x88,0x57,0x9e,0xd7,0x5e,0x9f,0xc8,0xb0,0x93,0x73,0x03,0x28,0x36,0x8c,0x25,0x8c,0x0f,0x4e,0x0f,0x5b,0x26,0x58,0xed,0x5c,0x33,0x75,0x20,0x08,0x11,0x47,0xe1,0x47,0x85,0x47,0xeb,0x54,0xbf,0x58,0xe3,0xd4,0x5b
.byte	0xf9,0xc6,0x5e,0x42,0x58,0xe6,0xaf,0x79,0x66,0x3c,0xa5,0xa3,0x30,0x33,0xe3,0xbe,0x21,0x4b,0x42,0x98,0x6e,0x44,0xd7,0x68,0xc0,0xff,0xbe,0x7f,0xc5,0xb3,0x4f,0x4a,0x93,0xb0,0x11,0x88,0xcf,0x36,0xb2,0x03,0xbe,0x30,0x52,0x71,0x20,0x0d,0x16,0xc5,0xbb,0xf5,0x92,0x12,0x67,0x6a,0x35,0x66,0x00,0x09,0xd7,0xc6,0x67,0xb0,0x6a,0x04
.byte	0x19,0x3e,0xbf,0xe2,0x82,0x74,0x78,0x2f,0x77,0x44,0xdc,0xad,0x0f,0x66,0x2a,0x23,0x62,0x2c,0x5a,0x4e,0x3a,0x82,0x2a,0x75,0x16,0x0d,0x74,0x64,0x35,0x53,0xc5,0xf6,0xda,0x36,0x44,0xba,0xe2,0xfa,0x1e,0xc2,0xcf,0x29,0x01,0x36,0x66,0xc3,0xca,0x40,0xf7,0xc4,0xba,0x67,0xac,0xf6,0x17,0xcc,0xa3,0x96,0x2d,0x08,0x5f,0x0a,0xea,0x5e
.byte	0x97,0xdc,0xc8,0xf9,0x59,0x24,0x6e,0xc5,0x0b,0x02,0xb9,0x1a,0xde,0xac,0x60,0x1d,0xaf,0x9f,0x5a,0x6f,0xe1,0xa6,0xdf,0x75,0xc5,0x9b,0xb7,0xde,0xa4,0xf7,0xf6,0xa4,0xdc,0xb6,0x96,0x08,0xde,0x2a,0x0e,0xb3,0x9d,0xf5,0x75,0x7d,0x7e,0x96,0x91,0x79,0xd4,0xa7,0x30,0x97,0x3a,0xbd,0x7c,0xe0,0xc5,0x87,0x24,0xb0,0x65,0xb7,0x58,0x00
.byte	0xd9,0x0e,0x97,0xa6,0xa4,0x6a,0xe8,0x0a,0xac,0xac,0x9f,0x3a,0xe3,0x2a,0x9a,0x43,0x41,0x92,0x6e,0x0e,0xc4,0x63,0xc3,0x18,0xb6,0xe1,0xef,0x3d,0xe8,0x0b,0xb0,0x9f,0x2e,0x19,0xa0,0x98,0x98,0x34,0xf8,0x86,0x6d,0xc5,0x8c,0x41,0x26,0xb7,0xf2,0x1d,0xd4,0x72,0x39,0xeb,0x79,0x06,0xaf,0x53,0xaa,0x34,0x80,0x53,0xf8,0x1b,0xf4,0x53
.byte	0x19,0xfa,0x16,0x8b,0x39,0xea,0x63,0x7f,0x38,0xc4,0x66,0x1d,0xd1,0x90,0xe4,0x2f,0x20,0x43,0x0d,0x5f,0x98,0xcc,0xae,0xef,0x86,0xc8,0xe5,0xf6,0xd2,0xa5,0x49,0xd0,0x3f,0xb5,0x7e,0x42,0xb5,0x6e,0x5e,0x13,0xa5,0xb4,0x71,0x2c,0x5d,0x57,0x24,0x06,0xd2,0x29,0x7c,0x4c,0x90,0xb6,0xea,0xdb,0x62,0xa4,0x2c,0x6c,0x38,0x57,0x97,0xbd
.byte	0xfd,0x41,0x6e,0x26,0xc1,0xe1,0x6b,0xbb,0xf0,0xe7,0x71,0xf1,0xcf,0x6a,0x7f,0xfa,0xe7,0xfb,0x17,0xe7,0x81,0x19,0x9a,0xf2,0xf6,0x86,0x22,0x4f,0x62,0x59,0xd6,0xc2,0x33,0xbd,0x11,0xe7,0x07,0x3a,0xfe,0x74,0x0d,0xf8,0xd9,0xdb,0xbd,0x05,0xf4,0xf4,0xb1,0x41,0xc9,0xb3,0xf8,0x6a,0x7b,0x98,0x08,0x6c,0xce,0x4c,0x28,0xbf,0x8c,0x77
.byte	0x68,0xdc,0xee,0xf7,0x11,0xde,0xfc,0x5a,0x58,0x4f,0xf4,0x74,0x9d,0x5b,0x78,0xc3,0x78,0xe5,0x5e,0x26,0x83,0x40,0x17,0x80,0x2a,0x02,0xa4,0xf1,0x0f,0xa0,0xc8,0x22,0xe6,0x09,0x3a,0x52,0x74,0xf0,0xb9,0xb9,0x60,0xaf,0x20,0xa6,0x7e,0x88,0xf4,0xc2,0x38,0xa2,0x21,0x73,0xa9,0x18,0x3f,0x7a,0x04,0x7b,0xc4,0xcd,0x68,0xd9,0x83,0xa4
.byte	0x8e,0x54,0x0d,0xbc,0xee,0x8b,0x39,0x93,0x66,0xa2,0xd6,0x76,0x4a,0xb2,0x33,0x4f,0x61,0x53,0xde,0x3b,0xff,0x47,0xcb,0x87,0xd9,0x21,0xd0,0x82,0x64,0x54,0xdf,0xf2,0x67,0x62,0x40,0x33,0xc7,0x0d,0xea,0x98,0xaa,0x95,0xfb,0xa9,0x0e,0x90,0xa5,0xd9,0x54,0x81,0x86,0xad,0x9e,0xa4,0x4d,0x36,0xe1,0x77,0xf2,0xe3,0x0a,0x54,0x1a,0x57
.byte	0x9d,0x62,0x5e,0x0e,0x00,0xc8,0xa6,0x1e,0xf3,0x43,0xe6,0x20,0x0d,0x6a,0x8e,0x90,0x1d,0x4d,0xac,0x2f,0x9f,0x1c,0xb7,0x30,0xec,0x5c,0x99,0x78,0x6f,0x3b,0xe7,0xe0,0x28,0xb9,0x97,0xc5,0x6a,0xf2,0x17,0xc2,0x11,0xac,0x1a,0xe2,0xca,0x57,0x49,0x64,0xc8,0xc7,0x66,0x43,0x8d,0xc8,0xa7,0x0e,0xfc,0xcf,0x05,0x2f,0xae,0x4b,0xfe,0xe4
.byte	0xbe,0x9c,0xe7,0xe6,0xa8,0x36,0x49,0x0d,0x9c,0x60,0x39,0x0c,0xfd,0x41,0x5b,0xc7,0xa4,0xa5,0x30,0x89,0xe5,0x10,0xf6,0xea,0xf8,0x2c,0xf2,0x3e,0xb1,0x96,0x81,0xa7,0x32,0x8b,0x39,0x14,0x15,0x36,0xfc,0x55,0x3c,0x22,0xcf,0xa3,0x98,0x90,0x68,0x13,0xd8,0x3f,0xf2,0x53,0x19,0x3e,0x9a,0x0c,0x1f,0xc6,0x29,0x43,0x46,0x23,0x58,0xea
.byte	0x49,0x49,0x15,0x46,0x8e,0x63,0x30,0x1f,0x3e,0x2a,0xa0,0x18,0xfd,0x28,0xc5,0x32,0x77,0x75,0xac,0x6e,0x5d,0x39,0xa9,0x44,0xce,0xfe,0x39,0xa6,0xec,0xde,0x69,0xde,0xfa,0xc8,0x40,0x44,0x34,0x29,0x15,0x19,0xa7,0xbe,0xd6,0x5b,0xfd,0x1f,0x7b,0xb9,0x88,0xf1,0x14,0xcf,0x42,0xc5,0xa7,0xa7,0x0e,0x6b,0x6e,0x86,0xb2,0x7c,0x23,0x8e
.byte	0xf6,0xae,0xde,0x3c,0xd7,0x26,0x5e,0xde,0x31,0x94,0xc1,0x19,0x65,0x55,0x03,0x73,0xba,0xdc,0x69,0x95,0x9c,0x9d,0x8e,0x59,0xd8,0x51,0x61,0x9f,0x8f,0xf4,0x29,0x43,0x4b,0x6a,0x75,0xb3,0x4b,0x9d,0xcc,0x46,0xd2,0x6e,0x00,0x49,0x4f,0xf0,0xac,0x80,0x55,0xc0,0x0c,0xbf,0x18,0x52,0x75,0x76,0x3b,0xac,0x92,0x83,0x69,0x1b,0xb4,0x15
.byte	0xe5,0x9e,0xde,0x10,0x30,0x30,0x0e,0x85,0xc7,0xf9,0xae,0xbc,0x9e,0xaf,0x4b,0xee,0x27,0x6b,0xa5,0x6d,0xe4,0x8e,0xed,0xdd,0x95,0xaa,0x85,0xe2,0xf5,0x38,0x15,0x50,0xd3,0xcd,0x2c,0x88,0x6c,0x2b,0x14,0x37,0x74,0x2d,0x6d,0x30,0xec,0x96,0x78,0xae,0x80,0xb3,0xd9,0x84,0xc1,0xd6,0x71,0x90,0xe4,0x8d,0x3a,0x7c,0x9c,0xc4,0xf5,0xa0
.byte	0x20,0x7e,0xa2,0x0e,0x75,0x7c,0x25,0x7a,0x7e,0x2b,0x2e,0xdb,0x12,0x23,0x73,0x6a,0x8e,0xe3,0xd7,0x47,0x94,0xfb,0xcc,0xe4,0x5a,0x8c,0xfb,0xdc,0x46,0xb3,0x4a,0x42,0x15,0xe0,0xaf,0x6e,0x81,0x72,0x72,0x04,0x52,0x09,0xc5,0x8b,0x6e,0xdd,0x7d,0xff,0x27,0xa8,0xc1,0x94,0xb5,0x33,0x59,0xc2,0x7d,0x59,0x6c,0x3c,0xaa,0xd9,0xd8,0x05
.byte	0x43,0x7e,0x8a,0x47,0xdd,0x76,0x36,0xe3,0x05,0x49,0xd1,0x8f,0xdf,0x45,0x46,0x63,0xff,0x17,0xb4,0x52,0xc8,0xee,0x4d,0xf5,0x74,0x65,0xc6,0xca,0x19,0xfd,0xb9,0x51,0xc8,0xc9,0x96,0xd4,0x06,0xd4,0x09,0x1e,0xab,0x6d,0x1b,0x26,0x61,0x80,0x5b,0xa8,0xcb,0x62,0x92,0x5a,0x1a,0x8e,0xa4,0xb7,0x25,0x19,0x96,0x63,0xd5,0xc3,0xc9,0xdc
.byte	0x04,0x83,0x62,0x31,0xe3,0x76,0x00,0x4d,0xf8,0xb3,0x98,0xae,0x4d,0x1a,0x38,0xe3,0xa1,0x27,0x52,0x87,0xbe,0x2c,0x93,0x45,0xd1,0xab,0x56,0xc6,0xf5,0xbc,0xb5,0xe6,0x9c,0xe1,0x1b,0x37,0x42,0x08,0xe7,0x71,0xb5,0xa4,0x67,0xf9,0x48,0xd4,0xc4,0x10,0x25,0x53,0x9c,0x03,0xfc,0x6d,0x5e,0x62,0x5e,0x6d,0x56,0xbc,0x78,0x11,0x0a,0x6d
.byte	0x1b,0x7a,0xdc,0x62,0xb5,0x58,0x86,0x15,0x71,0xff,0x11,0x33,0x94,0x2b,0xa6,0xc7,0x68,0xd5,0x68,0xda,0x5b,0xd5,0xb7,0x38,0x6c,0x1c,0xf4,0x07,0x39,0xef,0x1f,0x72,0x0a,0xb3,0x12,0x13,0x25,0x86,0xd3,0xf8,0x9f,0xb5,0x40,0x58,0xe7,0x5e,0x9f,0xa0,0xbc,0xd7,0xab,0x4f,0xf3,0x94,0xcf,0x0f,0x5a,0x4c,0x98,0xb4,0x70,0x35,0x62,0xee
.byte	0x33,0x24,0x72,0x31,0xd4,0x06,0xd9,0xb4,0x1c,0x1e,0x0f,0xa7,0x48,0xc7,0x75,0x45,0x40,0x02,0xd0,0x60,0x32,0x29,0x4d,0x61,0x7a,0xee,0x65,0x35,0x2b,0xe5,0x50,0xac,0x82,0xdb,0xf7,0x9c,0x8f,0x82,0xe4,0xf0,0xbd,0xdb,0x00,0x3d,0x3a,0x3d,0xa2,0xc3,0x2d,0x0e,0x51,0x20,0xdb,0xdb,0x8d,0x15,0x03,0xbd,0xcb,0xcb,0x24,0x81,0xc5,0xdb
.byte	0x05,0x39,0x48,0xb8,0x3c,0x93,0x35,0x10,0xef,0x19,0xba,0x09,0x9e,0xff,0xf9,0x3f,0x0c,0xdc,0x96,0x98,0x32,0x26,0x76,0xe7,0xfa,0xaa,0xdf,0xdc,0xb9,0x15,0x44,0x42,0x9a,0x8c,0x6c,0x88,0xea,0x43,0x63,0xb5,0x79,0xb6,0x50,0x30,0x78,0xea,0x70,0xba,0x33,0x36,0x8f,0x8c,0xe5,0x78,0xfd,0xbc,0xc0,0xbd,0xde,0x3a,0x3d,0xe6,0xe6,0x57
.byte	0x0f,0x29,0xf2,0x82,0x05,0xf2,0x5c,0xfd,0x33,0xc1,0xb2,0x2e,0xc2,0xc0,0x42,0xa2,0xc8,0xa5,0xf9,0x70,0x05,0xff,0x7b,0x8d,0xb9,0x68,0xc3,0xf6,0x74,0x00,0xcd,0x9d,0x70,0xfa,0x62,0x34,0xe5,0x05,0xe8,0x5f,0x53,0x9b,0x69,0x01,0x86,0xb9,0x1d,0x68,0x80,0x89,0x51,0x52,0x0d,0xe8,0x28,0xa1,0xdd,0x62,0x2b,0xf3,0x53,0x74,0xaa,0x98
.byte	0xdb,0x7e,0x74,0x44,0xeb,0x25,0xe7,0xde,0xc4,0x29,0x14,0x11,0x7b,0xc6,0xef,0x14,0xe4,0x04,0xd0,0xf4,0x11,0xca,0xdc,0xdc,0xe6,0x3f,0x9a,0xc9,0xe2,0x0e,0x67,0x30,0x78,0x65,0x94,0x5a,0xa1,0x24,0xd6,0x90,0x2f,0x1c,0x13,0x46,0xf5,0xb5,0xf9,0x74,0x56,0x3e,0xd5,0x1b,0x09,0xb3,0x04,0xbe,0x89,0x00,0xbd,0xe0,0xba,0x13,0x05,0xd1
.byte	0x98,0xa7,0x93,0x09,0xc5,0x96,0x46,0xb5,0x5a,0x05,0xac,0x1e,0x66,0x03,0xf0,0xaa,0x3d,0xc2,0x54,0xa3,0xc4,0x2b,0x0d,0xa3,0xe4,0x92,0xd6,0xd0,0x44,0xa6,0x37,0x30,0xa5,0xac,0xc2,0xc8,0x58,0x2a,0x2c,0x18,0x68,0x8d,0x9b,0x4f,0x99,0xd0,0x55,0x41,0xf4,0x84,0x3c,0x69,0xda,0x3c,0x6d,0x43,0xb3,0x85,0x15,0x1f,0xdb,0x58,0x0b,0x71
.byte	0x33,0x24,0xbb,0x21,0x43,0x19,0x16,0xeb,0x83,0xde,0xe5,0xb7,0x68,0x9e,0xb9,0xd9,0xf6,0x2e,0xae,0xdd,0x88,0x2c,0x18,0xd7,0xc3,0x72,0x8b,0xbe,0xaf,0x8d,0xfd,0xcd,0x2f,0x8e,0x3e,0x2b,0xa4,0x20,0x11,0x9d,0x00,0x4f,0xea,0xf0,0xaa,0x2d,0xf3,0x9d,0xfd,0x11,0x7b,0xac,0x2c,0x66,0x74,0x03,0xe5,0xcc,0x70,0x9f,0xfb,0xb7,0x5a,0x16
.byte	0xc3,0x05,0x61,0x7c,0x8c,0x73,0xcc,0x9c,0x6a,0x2f,0xee,0xae,0x85,0xc9,0x51,0x91,0x13,0xa4,0x09,0x82,0x4d,0x62,0x09,0x24,0x25,0x35,0x1f,0x82,0x88,0xbb,0xdd,0x16,0x5e,0x8d,0x98,0x5f,0x07,0x49,0x32,0x96,0xb7,0xee,0x85,0xb0,0x7b,0xfd,0xf5,0x35,0x4b,0xa9,0xd4,0xee,0xf2,0x37,0xd1,0xfe,0x62,0xf5,0x52,0x13,0xb4,0xb2,0xce,0xc4
.byte	0xe0,0x09,0x78,0x48,0xd5,0xc6,0x5d,0x36,0x1b,0x90,0x3a,0x6a,0x3c,0x21,0x50,0xf0,0x0a,0xe9,0x46,0x24,0x45,0xc1,0x5e,0x76,0xa3,0xf9,0x70,0xb8,0x62,0x4d,0x0e,0x92,0x87,0x4a,0x6a,0xf9,0x46,0x91,0x64,0xfe,0x7f,0x53,0x24,0x7e,0xc7,0x3e,0xb0,0x37,0x1a,0xc8,0xd6,0x33,0x0b,0x5f,0xa5,0x30,0x03,0x0e,0x85,0x3d,0x7b,0xc1,0xa1,0x18
.byte	0xb3,0x8c,0xfe,0xca,0x3e,0x71,0xd8,0x92,0x46,0x49,0x60,0x54,0xd9,0x7b,0xf7,0xc3,0x99,0x2f,0xb5,0x79,0xcc,0x32,0x40,0x7d,0x3d,0x0b,0xc6,0x6f,0x04,0xd9,0xf1,0xdd,0x64,0xf5,0xc4,0x60,0x14,0x04,0x5c,0x3a,0xa4,0xda,0xdc,0xad,0x8f,0xc2,0x44,0x37,0x96,0x63,0x00,0xf7,0xb1,0xc0,0x7c,0x8c,0x12,0xb5,0x3a,0xec,0xc0,0x16,0xd8,0x24
.byte	0xe9,0xc0,0xc4,0xfa,0xb1,0x85,0x5b,0xe3,0x62,0x24,0xa1,0x75,0x92,0x82,0x04,0x59,0x10,0x50,0x4b,0x51,0x51,0x3e,0x39,0xba,0x6d,0xa0,0x65,0x2d,0xfc,0x23,0x1c,0x9d,0x69,0x22,0xe7,0x15,0xfa,0xba,0x76,0xbf,0x53,0x62,0xb0,0x0d,0x0d,0x5d,0x55,0x00,0xbc,0x58,0x01,0xed,0x37,0x53,0xb9,0xa6,0x0d,0x71,0xab,0xec,0x42,0xbf,0x3b,0x52
.byte	0xfd,0xae,0xe9,0x6d,0x65,0x07,0xf3,0xd9,0x32,0x66,0xc1,0x66,0x1a,0x18,0x73,0x86,0x01,0xaf,0x1d,0xd1,0xd0,0xcf,0xb1,0xea,0x54,0x23,0xdf,0xf2,0x4d,0x7d,0xc7,0xfe,0xfe,0x7d,0x1d,0x2c,0x1b,0xb6,0xa7,0x7a,0x9e,0x90,0x3a,0x3b,0xb0,0x6c,0xb0,0xd2,0xd1,0xd0,0x6a,0x94,0x4c,0x84,0x1c,0x45,0xae,0xda,0x16,0xa9,0x2e,0x63,0x19,0x26
.byte	0xf6,0x74,0xd3,0x6f,0x9b,0x9c,0x0c,0xb8,0x85,0x9f,0xeb,0x99,0xbc,0xab,0xff,0xc3,0x75,0x86,0xe5,0x3a,0xa0,0xf9,0xfc,0x6b,0x3d,0x5a,0xad,0x46,0x7f,0x17,0x0e,0x94,0xb7,0xa4,0x43,0x61,0x54,0x76,0x29,0x78,0xe4,0x41,0x91,0xbe,0xa5,0x36,0x39,0xdf,0xdc,0xcc,0x8e,0x42,0x40,0x08,0x51,0x26,0xb0,0x53,0x5d,0xb4,0x7a,0x18,0x8e,0xb3
.byte	0xae,0xf2,0xe0,0xef,0x63,0x51,0x3a,0xbe,0x4c,0x2d,0xce,0xc7,0xe2,0x1b,0xc2,0x40,0xf3,0x82,0x61,0xf0,0x1b,0x05,0xdd,0x1e,0xae,0xed,0x87,0x2c,0xe5,0xad,0xc7,0xec,0xb5,0x63,0xf7,0x3a,0xf9,0xb7,0xd8,0x4e,0xa7,0xef,0xac,0x6d,0x9c,0x27,0xd9,0xcc,0x66,0xf4,0x75,0x40,0x94,0x8b,0x78,0x4f,0x61,0x4f,0x31,0x49,0x5c,0x96,0x72,0x58
.byte	0xcf,0x55,0xb2,0x66,0x16,0x29,0x27,0x24,0x39,0xc3,0x64,0xb1,0xdf,0x69,0x87,0x85,0x46,0xe3,0xd0,0x82,0x53,0x1a,0xc2,0xf1,0x3a,0xab,0xdf,0xe5,0x29,0x17,0xdd,0xfe,0xbf,0xf9,0x3d,0x7a,0xfb,0xe7,0x74,0x49,0xa9,0xef,0x61,0x93,0x4c,0xfa,0x30,0xea,0x65,0xa7,0x61,0x32,0x88,0x74,0x12,0xc1,0x91,0xf1,0xc2,0x1f,0x38,0x6a,0xfd,0x0d
.byte	0xc8,0x6f,0x87,0xe6,0x15,0x55,0x26,0x13,0x86,0x13,0xb9,0x01,0x98,0x34,0x1c,0x2d,0x1d,0x30,0xae,0x7d,0x8e,0x07,0x7d,0x4d,0xe9,0xfd,0x58,0x18,0xc3,0xa6,0x8e,0x87,0x98,0x33,0xcc,0x80,0xd7,0x70,0x07,0x6a,0x4a,0x97,0xef,0x56,0xf3,0x9d,0xf9,0xef,0x6f,0xa8,0x71,0x7f,0x61,0x07,0x1d,0x9d,0x51,0x06,0x86,0x4a,0x35,0x9e,0xab,0x2c
.byte	0x66,0x8d,0x61,0x62,0xbd,0xed,0x6c,0x76,0x7c,0x67,0xe0,0xe1,0x6e,0x90,0x74,0xb1,0xa6,0x26,0x0d,0x01,0x1f,0xe9,0xb4,0x30,0x9a,0x7e,0x37,0xd1,0xea,0x97,0x9a,0x0f,0x9e,0x8d,0x52,0xd4,0x96,0x36,0x5b,0x6f,0x40,0xbb,0x9e,0x44,0xb4,0x6e,0xee,0x15,0x70,0xef,0x66,0x81,0xf5,0xb4,0xe7,0x69,0xb0,0x40,0x44,0xdc,0x70,0x1e,0x4d,0x3c
.byte	0x9b,0x19,0x2a,0x97,0xbd,0xb2,0xd2,0x9b,0x98,0xac,0x36,0xf1,0x05,0x48,0xdc,0x5d,0x21,0xfb,0x17,0xe3,0x9c,0x3c,0xbf,0xfd,0x1d,0x39,0x1e,0x5b,0x2a,0xa2,0xb3,0x7d,0x4f,0xdf,0x3a,0x41,0x7a,0x31,0x01,0xc2,0xe5,0xd0,0x06,0x50,0x29,0x05,0xce,0xb8,0x28,0xb7,0xdd,0x83,0xc8,0xaa,0x39,0x78,0xc7,0x7d,0x9e,0xcd,0x9a,0x07,0x71,0x7e
.byte	0x20,0x92,0x82,0xce,0x49,0x90,0xce,0xef,0x53,0xa7,0x48,0x2a,0x69,0x86,0xa1,0x5e,0x35,0xe8,0x7d,0x10,0xb8,0x5e,0xa6,0x9a,0x69,0x6f,0x32,0x75,0xf3,0x4a,0xee,0x9c,0x06,0x5c,0xdd,0x84,0x7e,0x38,0x00,0x67,0x39,0x42,0xed,0x72,0xda,0xe3,0x6b,0x5a,0xf4,0xc9,0x80,0x3e,0x0e,0xda,0x39,0xfa,0x83,0x2c,0x60,0x69,0x87,0x85,0x05,0xfc
.byte	0xf4,0x2b,0xd4,0x0a,0xad,0x86,0xca,0xd5,0xf0,0x92,0x1f,0x43,0x3c,0x0e,0xac,0x99,0xf3,0x67,0xa3,0x41,0x6d,0xb9,0x29,0x70,0x57,0x62,0x9f,0x45,0x91,0x72,0xe5,0x53,0xcc,0x89,0x80,0x3f,0xbc,0x1c,0x66,0x21,0xdd,0x90,0x2b,0xa4,0xca,0x2f,0xf0,0x0f,0x9f,0xd0,0xe9,0x28,0xe2,0xd9,0x36,0xaf,0xf9,0x01,0x81,0xce,0xb4,0xe7,0x71,0xfd
.byte	0x92,0xf8,0x56,0x2e,0xc3,0xc8,0x8b,0x54,0xc8,0xc7,0x40,0x79,0x27,0x06,0x18,0x4a,0x7b,0x88,0x3f,0xd6,0x4f,0xd4,0x66,0x1e,0x1f,0x9a,0x14,0x1a,0x0a,0x98,0xc7,0xd6,0x25,0x83,0x37,0x8a,0x5d,0xb2,0x88,0x39,0x68,0x7b,0x1f,0x4e,0x0a,0xed,0x11,0x1a,0x77,0x9b,0xcb,0xb6,0x7d,0x5c,0x36,0xac,0x07,0x07,0x9f,0x05,0xcf,0x90,0x8f,0x3f
.byte	0x4b,0xc5,0xf9,0x42,0x90,0xb4,0x42,0x26,0xa1,0x2c,0x66,0xc6,0xb8,0x98,0x80,0x8a,0xbb,0x9b,0x41,0xe4,0x44,0x8c,0x5e,0x56,0x33,0xe3,0xba,0xcf,0x31,0x8e,0x28,0xd7,0xc5,0xd1,0x3b,0x68,0x47,0x10,0xae,0xda,0xc3,0xbd,0x20,0xe7,0xac,0xe2,0xe1,0xe0,0x7a,0x4b,0x83,0xb1,0xab,0x72,0xf4,0xc4,0xe7,0x0d,0x02,0xaf,0x5b,0x74,0xac,0xda
.byte	0x9d,0xce,0x26,0x1f,0x79,0x05,0x67,0x7e,0xc4,0x98,0x3f,0xde,0xa6,0xf3,0xfe,0x59,0x65,0x88,0xfb,0x14,0x3a,0x43,0x91,0x04,0x1a,0x78,0x7e,0x08,0xba,0x55,0x50,0xc7,0x65,0xd3,0x8e,0xda,0x0a,0xee,0x8e,0x11,0xa9,0xf6,0x9e,0xd3,0x23,0x97,0x05,0x0c,0x98,0x2a,0x36,0x25,0xec,0x5e,0x0b,0xf9,0x31,0x80,0x00,0x8a,0x70,0xf1,0xaa,0x7c
.byte	0x73,0x02,0x98,0x8d,0x42,0x27,0x53,0xf1,0x83,0x37,0xd0,0x2d,0xfa,0xc7,0x4b,0xa5,0xb3,0xc9,0xb8,0xd4,0x56,0x94,0x5a,0x17,0x2e,0x9d,0x1b,0x46,0xaa,0xb6,0xd9,0x2a,0x3a,0x6c,0xaf,0x24,0x59,0xfd,0x08,0xc5,0xca,0x0c,0x79,0x3f,0xe7,0x91,0x8d,0x9d,0x59,0x91,0xd8,0x5f,0xda,0x6d,0x35,0x7b,0x52,0x47,0x35,0xf9,0x81,0x86,0x2c,0xee
.byte	0x1a,0x14,0xc5,0x1f,0xb6,0x85,0xb5,0x74,0xe9,0xb7,0x4f,0xde,0xcd,0x93,0x2d,0xf3,0x10,0xbe,0x34,0xfa,0xca,0x15,0x9f,0x02,0x9d,0x19,0x72,0x7c,0xd6,0xfd,0x81,0x43,0x49,0xb5,0x2b,0x52,0x31,0xd6,0x2c,0x28,0x2e,0x83,0x6d,0xd3,0x0f,0x6e,0x03,0x65,0xf0,0x8a,0xdd,0x0a,0xec,0x58,0x10,0x45,0x5d,0xac,0xda,0xf5,0x32,0x5d,0x18,0x26
.byte	0xcc,0x2e,0xcf,0xd3,0x41,0x2d,0x1d,0xba,0xdf,0xd8,0x96,0x8f,0x18,0x0f,0xa7,0xec,0x8e,0x6e,0x84,0x2c,0xd6,0x1f,0x4e,0x76,0xfe,0xf3,0x14,0x27,0x4b,0x5b,0x3d,0x7c,0x1c,0x59,0x46,0x97,0x1b,0x59,0x5a,0x2d,0x57,0x80,0x17,0x98,0x7d,0x92,0x5d,0x2f,0x98,0x53,0x10,0x59,0x8e,0x7f,0x55,0x64,0x15,0x62,0x2c,0x16,0x0b,0x8d,0x48,0x54
.byte	0xaf,0x96,0x17,0xa9,0x8e,0x2c,0xcf,0x41,0x8c,0x8a,0x37,0x55,0xe4,0xf9,0x20,0x3b,0x21,0x5c,0x86,0x8d,0x3f,0xa6,0x5e,0x43,0xf3,0x3b,0xf7,0x7c,0x27,0x88,0x8e,0xa5,0x15,0xca,0x0e,0x9e,0x85,0x30,0x17,0x0d,0xcf,0xf0,0x82,0x87,0xd6,0xe8,0xd2,0xad,0xe9,0x4d,0x3f,0xc9,0x58,0x19,0xf9,0x99,0x4d,0xf9,0x6b,0x1b,0xd3,0xf9,0xdd,0x52
.byte	0xd1,0x3c,0x64,0x46,0xfd,0x4f,0x2e,0x63,0x39,0xd8,0xe4,0xeb,0xfc,0x07,0xf1,0xa5,0xff,0x84,0xa8,0x92,0xfe,0xbc,0xc5,0x36,0x91,0x2b,0xec,0x2c,0xad,0xf0,0xac,0xc5,0xb0,0xad,0x8a,0x0d,0x6a,0xd9,0x29,0x7a,0xb0,0x87,0x0c,0xaf,0xda,0x75,0x84,0x25,0xbe,0xee,0x0d,0xfd,0x4c,0xf5,0x2d,0x46,0xe9,0x17,0xb9,0x9d,0x3d,0x4b,0x8f,0x3a
.byte	0xe9,0x49,0xb6,0x32,0x99,0x27,0xe2,0x4d,0xff,0x2f,0x2e,0xd5,0x69,0x52,0x56,0x20,0x0a,0xbf,0x62,0x14,0x34,0xfb,0xbf,0x95,0xe8,0xfe,0xb1,0x9f,0x43,0x30,0x02,0x03,0x9e,0xa8,0xe2,0x68,0x64,0xdd,0x37,0xfc,0xb9,0x0f,0x85,0x8c,0x36,0x45,0xdb,0x7c,0x8b,0x97,0x50,0xc3,0x75,0xa1,0xcf,0xf4,0xc2,0x46,0xd8,0xa1,0x8c,0xab,0x8d,0x3a
.byte	0xde,0xe7,0x9e,0xd2,0x1e,0x2d,0x8b,0xe4,0x31,0xe3,0x12,0x3f,0x9f,0x0b,0x2c,0x95,0x75,0x8d,0xf1,0x24,0xb9,0xdf,0x1e,0x64,0x35,0x45,0x2a,0xc2,0xf9,0x96,0x5d,0x10,0x64,0x32,0xae,0xe9,0xf8,0x71,0xd4,0x2d,0x6b,0xc6,0xde,0x08,0x1e,0x5d,0x51,0xf1,0xe7,0xfd,0x3c,0x22,0x43,0x59,0x82,0x83,0x13,0x75,0x36,0xef,0x81,0xe4,0xcf,0xa8
.byte	0xb8,0x30,0x16,0x44,0xae,0x55,0x06,0xdd,0xb9,0x60,0x3f,0x75,0xc6,0xd1,0x73,0xa9,0xea,0xc9,0x64,0x2b,0x8a,0xde,0x44,0x4b,0x3d,0xc3,0x31,0x12,0x84,0x9a,0xe3,0xda,0x24,0x82,0x99,0x00,0x6d,0x8e,0xb8,0x26,0x82,0xa6,0xc2,0x37,0x6c,0x2a,0x1d,0xcf,0x6d,0x18,0xc7,0xee,0x27,0xca,0xe7,0xad,0x95,0xed,0x7d,0xe0,0xe0,0x6f,0x45,0xc3
.byte	0x8a,0x2f,0x08,0x49,0x7e,0x09,0x9e,0xc1,0xb7,0x1e,0x8f,0x57,0x61,0xf8,0x3e,0xea,0xd7,0x47,0xfb,0xd0,0xda,0xaa,0x04,0xf9,0x06,0xbb,0xa3,0x80,0x68,0x89,0xb0,0x7f,0x18,0xf3,0xd2,0xeb,0xee,0x48,0x30,0x6a,0x24,0xc8,0x71,0x43,0xc3,0x50,0xcc,0x85,0x68,0xf5,0xca,0x44,0x34,0x43,0xaa,0x2e,0x4f,0x02,0x1b,0x23,0x4f,0xe9,0x07,0x02
.byte	0xa2,0xfa,0x24,0x57,0x70,0x4e,0x1a,0x78,0x03,0xa2,0xdd,0x53,0x50,0x82,0x05,0xb1,0x0f,0xcb,0x9e,0x2e,0x58,0x04,0x62,0xc8,0xac,0x71,0x31,0x56,0x0f,0xc7,0x70,0x32,0x53,0xda,0x51,0xc3,0x15,0x78,0x82,0xb6,0xe8,0x6e,0x32,0xeb,0x39,0xab,0xba,0x67,0xcc,0xbc,0x99,0x58,0x88,0xc4,0x60,0x0d,0x0b,0xc1,0xfa,0x6f,0x40,0x85,0x04,0xdf
.byte	0x5f,0x17,0x69,0xf1,0xbd,0x44,0x97,0xc8,0x62,0x19,0x49,0x1f,0x23,0xcb,0x3d,0x17,0x04,0xf2,0xbd,0x58,0x15,0xa6,0x37,0x3a,0x3f,0x77,0x98,0x32,0x40,0x8a,0x72,0xf0,0x41,0x0b,0xad,0x88,0xba,0xd3,0xae,0xdc,0x3b,0x9a,0x37,0x89,0xa5,0x09,0xe5,0xbb,0xf2,0xf8,0x5d,0xa5,0xed,0xe8,0x39,0x7b,0xed,0x2b,0x90,0xd6,0x6c,0xd3,0xfa,0x69
.byte	0xa7,0xca,0x09,0x83,0x15,0x8d,0xd8,0xe3,0x81,0x03,0x4e,0x2d,0xd8,0x96,0x3b,0x4b,0x18,0x91,0xac,0x5f,0x22,0xe6,0x9d,0x4b,0x09,0xaf,0xf0,0xdf,0x16,0xa2,0xf1,0x2c,0xd9,0x35,0x8a,0x6e,0x85,0x7a,0xbc,0xc7,0x10,0xd1,0x5f,0x8a,0x53,0x9c,0x8e,0xbc,0x8c,0x15,0xb3,0x8a,0xb0,0x0b,0x74,0x40,0x2a,0x5f,0x46,0x71,0x1c,0x0b,0xee,0x08
.byte	0xae,0x17,0x26,0x1e,0xcf,0xbf,0x3d,0xa0,0x5e,0x3a,0xdb,0x39,0x6b,0x4a,0x82,0x53,0x02,0xf4,0xa2,0x15,0x5c,0xb6,0xdb,0x20,0x30,0xa2,0x7d,0xcb,0x9a,0xf7,0x88,0x69,0xb5,0xc8,0xe6,0xcd,0x9e,0xa4,0xaf,0x27,0x0e,0x61,0x41,0xcd,0x8e,0x71,0x83,0x11,0xce,0x5e,0x6c,0xaf,0xa4,0x50,0x81,0xb6,0xf2,0x36,0x05,0xbb,0x36,0x4e,0x4a,0x1b
.byte	0x09,0x9f,0xca,0x1b,0x12,0xb0,0x01,0xc0,0xbf,0x7e,0x3f,0x81,0x60,0x9f,0xfd,0x56,0x81,0x54,0x99,0x2b,0x7f,0x1e,0xb1,0xbf,0xd4,0xb7,0xe1,0x7c,0x71,0xf9,0x00,0x72,0x5f,0x10,0xab,0x60,0x03,0x9d,0x13,0xf1,0xba,0x48,0x93,0x1c,0x1d,0x11,0x04,0x40,0xf6,0xde,0x3b,0xef,0x6c,0x47,0xb3,0x0d,0xcf,0x53,0xbd,0x45,0x7e,0xd7,0x8c,0x34
.byte	0xd0,0xcb,0x85,0x4b,0x1e,0xd1,0xc5,0xfd,0x5b,0x1a,0x18,0x8a,0x27,0xe3,0x16,0x3c,0x25,0x12,0xf2,0xf1,0xa1,0x40,0x53,0x68,0x27,0x2c,0x81,0x0e,0x20,0x12,0xe3,0xde,0xe2,0x9f,0x08,0x75,0xc0,0x25,0x79,0xf0,0xc4,0xaa,0x10,0xad,0x41,0x3f,0x0b,0xc7,0xb2,0xe0,0x50,0xde,0xec,0x24,0x09,0xeb,0xb5,0xd3,0xbc,0xd3,0xdf,0x44,0x6d,0xc8
.byte	0xf1,0x79,0xf8,0x33,0xb7,0x75,0x09,0x18,0x04,0x59,0x0f,0x15,0x5e,0xf9,0xca,0xe0,0xa9,0x2a,0xe1,0x1b,0xf0,0x49,0x5f,0xca,0xa3,0x80,0xd5,0x9b,0x1e,0xc1,0x1f,0x98,0x18,0x0a,0x24,0xc3,0x3f,0xfb,0x43,0xfd,0xa3,0x01,0x59,0x50,0xea,0x21,0xe0,0x92,0xfd,0xe1,0xd5,0xe4,0x38,0x24,0x88,0xf3,0xb0,0xc9,0x79,0xfd,0x4e,0xd3,0x3e,0xbf
.byte	0xc6,0xb8,0x9e,0x7f,0xab,0x65,0x79,0xd9,0xb9,0x83,0x38,0xe1,0xf7,0xd0,0x37,0x04,0xb3,0x0c,0x48,0x82,0x74,0xe1,0x0c,0x80,0x13,0x59,0xc4,0x72,0xf9,0x2d,0x88,0x06,0x46,0x08,0x7a,0x6b,0xb4,0xfc,0x5f,0x63,0x31,0x2f,0x4f,0xfd,0x4b,0x1f,0x8e,0x21,0x3c,0x67,0x83,0xdd,0xa9,0x65,0x68,0xc6,0xd0,0xb8,0x1d,0xcd,0x60,0xc5,0xb9,0x3b
.byte	0xea,0xe9,0xc7,0xa5,0x1a,0x98,0x8a,0x87,0xb7,0x73,0x29,0x3a,0x6a,0x3a,0x75,0xbf,0xa4,0x79,0x64,0xcb,0x94,0x68,0x93,0x56,0x55,0x1e,0xd5,0x61,0xda,0x87,0xe1,0x28,0xf0,0xa5,0x64,0x9a,0xd7,0xa0,0x91,0xfd,0x46,0x20,0x6c,0x87,0x1f,0xe8,0x9e,0x7e,0x95,0xc4,0x60,0xdb,0xf4,0xe2,0x3e,0xb2,0x6a,0x4a,0xe7,0x46,0x3f,0xca,0xf3,0x72
.byte	0xb5,0xe8,0x06,0x3a,0x1b,0xeb,0xcb,0x81,0x46,0x44,0xf6,0x97,0xa0,0x79,0xe4,0xa4,0x8a,0xba,0x5e,0x1b,0x6d,0xf4,0xcf,0x7c,0x12,0x7a,0xec,0xdd,0xf6,0xc8,0xab,0x5f,0x30,0xb3,0xf9,0x8e,0x31,0xfd,0x51,0x95,0x8b,0xa1,0xe9,0xe8,0x2d,0xec,0x86,0x12,0x4a,0xf8,0x8b,0xa5,0xdd,0xb2,0xe4,0xad,0xdd,0xcb,0xf5,0xcd,0x9c,0x9f,0x0a,0x42
.byte	0x5f,0x83,0x9d,0xa6,0x4f,0xbe,0x11,0x75,0x3c,0xde,0x67,0x6b,0x95,0xcd,0xcf,0xdc,0xfd,0x1f,0x1a,0x14,0x01,0x27,0x68,0xaf,0x9b,0x82,0xd6,0xae,0x29,0x8a,0x1f,0xc8,0xf1,0x1f,0xb8,0xa9,0xa2,0x1d,0x81,0xbb,0x19,0xda,0x06,0xe3,0x34,0x7b,0xce,0x99,0x3c,0x5b,0x0c,0x9b,0x8b,0x35,0xc0,0x6c,0x88,0xef,0xeb,0x9f,0x64,0xe3,0xc3,0xbf
.byte	0x37,0xd7,0xf6,0xdf,0xad,0x28,0xf4,0xd7,0x19,0xb0,0xf2,0xa7,0xd4,0x71,0xbc,0xd3,0xa3,0x09,0x5c,0x1a,0x45,0x30,0x2d,0x53,0xa5,0x19,0x2f,0xb0,0x5d,0xae,0x04,0x28,0xe6,0x16,0x3e,0x75,0x9f,0xcc,0x76,0xc4,0xc2,0xa0,0xfb,0xff,0xdd,0x4c,0xa3,0x8b,0xad,0x05,0x73,0x26,0xf0,0xef,0x48,0xd5,0x25,0x22,0x90,0x78,0x21,0xfd,0xc6,0x23
.byte	0x14,0xbc,0xed,0x13,0x29,0x76,0x17,0xa6,0x93,0x09,0x6e,0xa7,0x42,0xdd,0x11,0x9e,0x05,0xa3,0xb7,0x48,0x84,0x85,0xf8,0x4e,0xed,0x3d,0xdb,0xfc,0x68,0xd2,0xec,0xec,0x69,0x2b,0x60,0x38,0xd1,0x99,0x44,0xf9,0x60,0xd3,0x5a,0x9e,0xe4,0x26,0x9d,0x12,0xf8,0x6a,0x53,0xde,0x76,0x78,0xa7,0x68,0xb0,0xb4,0xdc,0x33,0x7b,0x8a,0x73,0xa0
.byte	0xa5,0x5f,0x8f,0x81,0x0e,0x51,0x06,0x13,0x6b,0x56,0x16,0x91,0x1f,0xf5,0x6b,0x68,0xe6,0x8b,0x69,0xda,0x0a,0x9c,0xb1,0x74,0x8f,0x1c,0xb3,0xbf,0x52,0x59,0xaa,0xb1,0xb6,0x3a,0x81,0xc2,0x04,0x54,0x12,0x46,0xa2,0xd5,0x21,0xdf,0xe0,0x57,0x1f,0xe8,0x36,0x56,0x87,0xbf,0xcb,0x7d,0x06,0x6c,0xd5,0xc9,0x4e,0xca,0x47,0x47,0x11,0x91
.byte	0x7a,0x14,0x13,0x5d,0x5d,0x46,0xd5,0x3a,0xe4,0xa4,0x4d,0x99,0x3a,0x54,0x99,0x62,0xb4,0x70,0xa0,0xf5,0x8a,0xda,0x05,0x75,0xf1,0xa5,0xa1,0x5d,0x9d,0xc4,0x7f,0x83,0x8a,0x5b,0x09,0x54,0x0e,0x69,0x28,0xef,0x66,0xfb,0xe4,0xc4,0xe4,0xc4,0xda,0xb0,0xda,0xe2,0x19,0x33,0x3c,0x76,0xa0,0x35,0xdc,0x31,0x4e,0x40,0xfe,0xb8,0x20,0x26
.byte	0x8f,0x6f,0x7d,0x02,0x54,0x86,0x1d,0xca,0xa6,0x10,0xa6,0x89,0x87,0x3a,0x5a,0xd5,0x3d,0x0f,0xb5,0x81,0x7d,0xab,0xb6,0xc6,0x36,0x87,0xce,0xd7,0xe4,0xc3,0x9e,0xc2,0x9c,0xf6,0x75,0xd5,0x9a,0x69,0xd2,0x13,0x89,0x5a,0xe9,0x29,0xc9,0xf5,0x6e,0xcc,0x05,0x87,0x0a,0x61,0x49,0xd7,0xa5,0x76,0xd0,0xaf,0x96,0xe0,0x2f,0x91,0xf4,0x45
.byte	0x70,0x5a,0xdc,0x9f,0x07,0x7f,0x86,0x02,0xa4,0x83,0x8d,0x4a,0x6d,0xfc,0x1b,0xd8,0x9b,0xc2,0x42,0x4f,0xcb,0xdf,0xcb,0xe0,0x55,0xb4,0x8f,0xf7,0x27,0x73,0xd9,0x7e,0xf8,0x3a,0x5c,0x4f,0x29,0x64,0xd8,0x39,0xfa,0xf2,0xc4,0x6b,0xeb,0x55,0xc3,0x13,0x22,0x15,0xdf,0xc5,0x91,0x6d,0xd7,0xf3,0x11,0x34,0x08,0xce,0xe5,0xbd,0x16,0x14
.byte	0x60,0x14,0x8a,0xed,0x4d,0x38,0x98,0x15,0x5d,0xee,0x70,0xff,0x05,0xd2,0x74,0x3a,0x5f,0x78,0x1a,0x70,0x61,0x2a,0x42,0x4a,0xf3,0x15,0x6f,0x9e,0x33,0xca,0xb8,0x46,0x22,0x64,0xd6,0x24,0xe8,0x10,0x1a,0x89,0xab,0x74,0xdf,0x56,0x35,0x41,0x57,0xe1,0xd9,0x4b,0x67,0x60,0x89,0x6f,0xbf,0x73,0xac,0x6b,0xf9,0x78,0x3f,0xbc,0xf3,0x2a
.byte	0xb5,0x8c,0x1f,0xda,0xe7,0xe2,0xac,0x60,0xbf,0x41,0x96,0xbb,0xd5,0x35,0x9c,0x56,0xe7,0xfd,0x95,0xc7,0x4d,0x32,0xa1,0x07,0x34,0xbc,0x99,0xca,0xcc,0x42,0x71,0xfb,0xec,0x5c,0x1e,0xf9,0x8b,0xde,0x43,0x65,0x84,0x16,0x52,0x0a,0x5e,0x92,0x20,0xd8,0x26,0x4b,0x97,0x71,0xde,0xd2,0x1f,0x2e,0xd1,0xb2,0xb6,0x29,0x6a,0x6d,0x41,0x00
.byte	0x20,0x3d,0x03,0xf8,0x43,0x7b,0x57,0x87,0x4e,0xf1,0x8e,0x6f,0xd3,0xf4,0x6c,0x6c,0x29,0xf6,0x99,0xe3,0xd3,0x1d,0xd3,0x26,0x21,0x3b,0x02,0xa2,0xc1,0x06,0xcf,0x31,0xec,0x7f,0xc6,0x80,0xbc,0xab,0x86,0x01,0xff,0x11,0x8a,0x24,0xfd,0x1b,0x41,0x49,0xd4,0xbe,0x15,0x34,0x82,0xc5,0x02,0x51,0x67,0x5c,0x41,0x8e,0xbf,0x94,0x12,0x15
.byte	0x64,0xea,0x00,0x0c,0x51,0x40,0x57,0x66,0x1e,0x6d,0x3e,0x41,0x8e,0x84,0xdf,0x71,0xb8,0xd7,0xfa,0x12,0x17,0x22,0x17,0x05,0xdc,0x82,0xfd,0x7c,0x5e,0xfa,0x62,0x23,0xa8,0xbe,0x14,0xdc,0x84,0x42,0xf0,0x90,0xc5,0xb0,0x68,0xbe,0x64,0x74,0xc3,0xa5,0xd1,0x10,0xcf,0xe3,0xd1,0x09,0x98,0x3b,0xb9,0x19,0xf2,0x9b,0x5d,0x90,0x99,0x3d
.byte	0x30,0x67,0x55,0x34,0x50,0x78,0x3b,0xd2,0x70,0xb1,0xd2,0x91,0x4e,0xfa,0x98,0x7d,0x93,0xad,0x7f,0xb1,0x89,0xb0,0x61,0x4c,0x95,0x3f,0x51,0x95,0xd7,0xc6,0x87,0x7a,0xc5,0x53,0xb6,0x6d,0x61,0xec,0xbe,0x40,0x1f,0xa5,0x7f,0x73,0x4a,0x78,0xd2,0x58,0x1e,0x41,0x8e,0x9a,0x08,0x49,0xce,0x39,0x52,0xf9,0xd1,0xcd,0x41,0xb6,0x39,0x99
.byte	0xfa,0xfb,0x1c,0x38,0xe1,0xe5,0xe1,0xd6,0x16,0x0f,0xc8,0x12,0x0b,0x88,0xdc,0x00,0xd4,0x7b,0x24,0x69,0x16,0x27,0x37,0xa3,0xd5,0x39,0x27,0x34,0xda,0x23,0x24,0x50,0x13,0xd8,0x02,0x48,0x14,0xd7,0xc9,0x28,0x1b,0xba,0x66,0xa8,0xc8,0x9a,0x7b,0xed,0x92,0x5b,0x78,0x46,0x79,0x5a,0xd1,0xf2,0x75,0xf0,0x98,0xd3,0x9f,0x4c,0x72,0x51
.byte	0xed,0xe5,0xce,0x83,0xac,0xe1,0xc8,0x2b,0x7f,0x77,0x6a,0x70,0xdd,0x80,0x88,0x62,0x58,0x94,0x15,0x72,0x53,0x34,0x48,0x17,0xb2,0xe8,0x4a,0xab,0x2d,0x4e,0xef,0x93,0xb7,0xba,0xd1,0x1c,0x53,0x69,0xd5,0xac,0xa1,0x61,0x7c,0x44,0xec,0x81,0x72,0xcc,0xe8,0x6f,0x5d,0x67,0x1f,0x65,0x9a,0x34,0xf5,0x95,0x89,0x1c,0x2e,0x54,0x42,0xc0
.byte	0x85,0x79,0xb0,0xfa,0x44,0x0d,0x28,0xc4,0x20,0x2f,0x2e,0x85,0x73,0xfb,0xf6,0x44,0x0e,0xbc,0xab,0x4f,0x42,0x5c,0xdb,0x1f,0x11,0x6f,0x9a,0x23,0x75,0x70,0x78,0x1a,0xd2,0xb8,0x83,0x72,0xf5,0xf6,0x40,0x48,0x3f,0xc8,0xd5,0xe3,0x2c,0x08,0x5c,0x0c,0x2a,0xb0,0x8e,0x69,0xe6,0xdf,0x4b,0x4a,0x95,0x9c,0x4c,0x5e,0x09,0x24,0xc3,0xd0
.byte	0x4c,0x20,0x0c,0x9a,0xce,0x95,0x53,0x6a,0x7b,0x54,0x0a,0x7e,0x73,0xa7,0x95,0xe7,0x7c,0x67,0x9d,0x05,0xbc,0x26,0x3a,0xa1,0x43,0x99,0x7a,0xee,0x04,0xcf,0x94,0x02,0x36,0x26,0xb3,0x81,0x74,0x22,0xee,0x1e,0x9e,0xe2,0x82,0xd4,0xe0,0xca,0xf2,0xec,0xd2,0x9e,0xf8,0x3f,0x9f,0xc4,0x5b,0xe8,0xfc,0xbd,0x93,0xaa,0xc3,0x2f,0xce,0xf2
.byte	0x32,0xa9,0x23,0xf3,0xe1,0x06,0xae,0x7d,0x87,0xe9,0xe7,0xe0,0xc1,0x7c,0x74,0x9c,0xdf,0x86,0x6d,0x5c,0x8a,0x51,0x45,0x9d,0x43,0x49,0x87,0x45,0x75,0xfb,0x40,0x55,0xab,0x9a,0x52,0xf1,0x32,0x5e,0xde,0x8b,0x52,0x50,0x9f,0xb8,0x7a,0xe5,0x1c,0x40,0x4f,0xc7,0xb1,0x29,0x90,0xcc,0x98,0x99,0xa0,0x4e,0x1c,0x43,0x6e,0x91,0x61,0x9c
.byte	0xf7,0xa7,0xf7,0x43,0x89,0x15,0x8c,0x56,0x22,0x9d,0x66,0xac,0x71,0x19,0xdc,0xb9,0xf8,0xd3,0xaf,0x2e,0xd7,0x7b,0xc3,0xe4,0x25,0x0d,0x2c,0xaf,0x15,0x8c,0xea,0x2b,0xdb,0x8c,0x71,0xff,0x55,0x29,0x11,0x35,0x11,0xef,0xb0,0x97,0xb2,0x95,0xab,0xeb,0x4a,0x40,0x1c,0x92,0xc4,0x13,0x36,0x74,0x53,0x78,0x51,0x6c,0xca,0x37,0xcb,0xda
.byte	0x5e,0x6b,0x8c,0x69,0xc5,0xd0,0xf9,0xdb,0xbe,0xd9,0x30,0x42,0x16,0xcf,0x40,0x63,0x87,0x10,0x28,0x7d,0xae,0xa9,0x8c,0x14,0x99,0xe1,0x4f,0x11,0x98,0x7e,0xe9,0x14,0x9c,0x2e,0xe2,0xed,0x20,0x15,0x7c,0xb5,0xf4,0xc9,0x16,0x30,0x8d,0x7c,0x61,0x45,0xf4,0x23,0xf5,0xdb,0x81,0x8f,0x6b,0x41,0xaf,0xa9,0xf8,0x51,0xbe,0xc4,0x5d,0x8c
.byte	0xda,0x5e,0x07,0x62,0x7c,0xc6,0xd1,0xae,0x91,0x5e,0x05,0xa8,0xc6,0xc5,0xfc,0xb7,0x12,0x2e,0x7f,0x85,0xef,0xbd,0x2b,0x56,0x57,0x32,0xad,0x3d,0x97,0x5b,0x26,0xcf,0xd3,0xe7,0x48,0x4e,0x9b,0x15,0x98,0x77,0xb4,0x3e,0xf1,0x3e,0x1c,0x21,0xb0,0x98,0xe2,0x69,0xee,0xd8,0x29,0x10,0x93,0xd5,0xc9,0x71,0x8f,0x28,0xbd,0xe3,0xd9,0x54
.byte	0xf3,0x72,0xb6,0x85,0xe9,0x2b,0xdc,0x96,0x52,0x53,0x5c,0x61,0x54,0x96,0x4a,0xf5,0x3f,0xee,0x53,0xc3,0x63,0xc9,0x67,0x14,0xdf,0x3a,0xfe,0x46,0x8a,0xa6,0xec,0x06,0x0c,0xea,0xb8,0x82,0x49,0xb5,0xed,0x94,0xf2,0xac,0x76,0xd5,0x87,0x79,0x15,0x4f,0xa1,0x34,0x90,0x8e,0x7b,0x02,0xf7,0x02,0xb0,0x07,0xa5,0x7c,0x6b,0xc2,0x34,0x84
.byte	0xd4,0xaa,0xbf,0x32,0x81,0xf7,0xed,0x1f,0x61,0xd7,0x6e,0x40,0xa0,0xdc,0x4c,0xb5,0xb7,0x36,0x3a,0x87,0x09,0x82,0xd5,0x5a,0xc8,0x1f,0xe6,0x77,0xa6,0xaa,0xcf,0x3c,0x7b,0x23,0x46,0x58,0x95,0x7f,0x84,0xba,0x4a,0x05,0x0b,0x36,0xdb,0x58,0xf9,0xa4,0x2b,0x24,0xd4,0x8a,0xbc,0xb2,0xb7,0x04,0xac,0x64,0x0e,0x88,0x25,0x9a,0x69,0xe7
.byte	0x87,0x70,0x0b,0xa6,0x43,0xe9,0xb2,0xbb,0x4e,0x4c,0x10,0x19,0x44,0x4d,0x12,0x4c,0x58,0x2a,0x49,0xe2,0x01,0xd2,0x65,0x23,0xee,0xe9,0xca,0x0b,0xa1,0x28,0x02,0x8d,0xcf,0x37,0x06,0xbc,0x5d,0x35,0xba,0xec,0x97,0x95,0xcc,0xfe,0x7b,0xc9,0x1c,0x0d,0x89,0x4e,0xe1,0x8d,0x9b,0x5e,0x5b,0xb9,0x6c,0x24,0x73,0x9a,0x62,0xd7,0xc5,0xfa
.byte	0x54,0xeb,0x05,0x22,0xd9,0xe7,0xc4,0x68,0x88,0x20,0x43,0xd9,0x14,0x47,0xd7,0xa5,0xd0,0xce,0x10,0x77,0xe8,0x5c,0x85,0x39,0x99,0x3f,0x72,0x88,0x4f,0x22,0x15,0x87,0xa0,0xa3,0x47,0x10,0x81,0x64,0xff,0x94,0x77,0x5d,0xce,0x6d,0xd8,0x29,0xb1,0x9c,0x8e,0xce,0xa8,0x39,0x4f,0xfc,0x36,0x3c,0x50,0xb2,0xf1,0x08,0x66,0x1a,0xf0,0x22
.byte	0x65,0x1f,0x4d,0x17,0xd3,0x63,0x10,0x64,0xd1,0xc6,0x5a,0x3e,0x82,0x72,0x0c,0x48,0x5e,0x07,0x9c,0x07,0xa0,0x40,0x60,0xab,0x74,0x9a,0x00,0xdf,0xd7,0x7d,0xd4,0x11,0x4e,0xce,0x5a,0xaf,0x12,0x4f,0xe7,0x12,0x36,0x1a,0x12,0x11,0x16,0xb7,0xad,0x4b,0x28,0x84,0x7b,0xd8,0x30,0x0d,0x85,0xb8,0x76,0xde,0xa3,0x78,0x8c,0xb7,0x7c,0xbc
.byte	0x97,0x33,0x53,0x95,0xf8,0x14,0x5f,0xf8,0x0d,0xc1,0x6b,0x79,0xa2,0x42,0x49,0xab,0xae,0x8e,0x78,0xf3,0x51,0x01,0xcc,0x20,0x36,0x80,0xbd,0x32,0x0b,0x1b,0xd2,0xcd,0x27,0x52,0x69,0x1b,0x4a,0x37,0xba,0x31,0xe4,0xc2,0x03,0x8d,0x00,0x48,0x4b,0xcd,0x39,0x2e,0xec,0x94,0x2e,0xe0,0x81,0xfd,0x94,0xd9,0x86,0x39,0x23,0x87,0x3c,0x2f
.byte	0x25,0xe1,0x5b,0x22,0xe0,0x2e,0x37,0x6d,0x9b,0x97,0x9c,0x94,0x37,0x01,0x26,0xb8,0xb1,0x73,0x7c,0xfc,0x0a,0x64,0xe7,0x54,0xf1,0x0f,0x71,0xa1,0xd6,0xc7,0xc8,0xb4,0x86,0x2d,0xfe,0x30,0x8b,0xca,0xb2,0x18,0x21,0xc0,0xc7,0x7d,0x60,0xcf,0x2e,0x25,0xb0,0xa4,0x1a,0x28,0x19,0xa9,0xa9,0x15,0x32,0x5e,0x21,0x89,0x3a,0x99,0x5f,0x50
.byte	0x86,0x37,0x3b,0x10,0xb8,0xa5,0xad,0x8e,0xbf,0xfc,0x8c,0x85,0xf1,0x76,0x5c,0xe7,0x4d,0xac,0xe7,0x21,0xb3,0x45,0x87,0x3b,0x05,0xc8,0x41,0xf4,0x99,0x83,0x28,0x40,0x6b,0x30,0x37,0x31,0xd2,0xb3,0xdd,0x43,0x3b,0x3f,0xec,0x50,0x58,0x7d,0x20,0xc6,0xb2,0xa9,0x3c,0x22,0x38,0xea,0x16,0x32,0x01,0xc4,0xb0,0x9f,0x7d,0x12,0x91,0x82
.byte	0x0c,0xd8,0x36,0xfc,0xa4,0xec,0x06,0xb2,0xc2,0xce,0x9b,0xa4,0x53,0x71,0x77,0xdd,0xc3,0xfc,0x34,0x6f,0xd9,0x5c,0xfc,0x36,0xdd,0x63,0x19,0x06,0xfb,0x3c,0xf3,0x3f,0x82,0x28,0x6d,0x00,0xf9,0xfd,0x8d,0x6b,0x79,0x06,0x8a,0xe7,0x6f,0xcc,0x39,0x12,0x80,0x71,0xcb,0x71,0xb3,0xb6,0xa4,0xa8,0xbe,0x61,0x9d,0x1f,0x48,0xa2,0x15,0xa1
.byte	0xb5,0xf5,0x16,0x70,0xc5,0x39,0xce,0x43,0xa3,0x09,0xe5,0xf4,0x8b,0x77,0x18,0x5e,0xa0,0x77,0xa3,0xa4,0x17,0x2c,0x3e,0x50,0x73,0x2f,0xaa,0x5d,0x58,0x5e,0xdc,0xec,0xaf,0xca,0x6e,0x57,0x80,0xa3,0xd5,0x94,0x30,0x7c,0x11,0x75,0xc4,0xbb,0x9d,0x18,0xc1,0x5a,0x58,0xc7,0x04,0x56,0xb1,0x3a,0x21,0x55,0x02,0xea,0xad,0x58,0x19,0x72
.byte	0xdc,0x7d,0x0e,0x41,0x62,0x1b,0x5c,0x48,0x97,0x3f,0xed,0xd7,0x4e,0x30,0x1f,0xf5,0xde,0xc5,0x23,0xf2,0xd7,0x22,0xde,0x2f,0x3e,0x80,0x06,0x81,0xf6,0x24,0xb7,0x91,0x09,0x56,0x91,0x00,0x1a,0xea,0xaa,0xa6,0xc2,0x8b,0xc9,0x78,0xd7,0xde,0xf6,0x87,0xb1,0x04,0xcc,0xbb,0xc1,0xc6,0x48,0x43,0xc8,0x03,0xb2,0xdd,0x70,0xc0,0xe3,0xf5
.byte	0xc0,0xf5,0x13,0xd5,0x11,0x41,0x7f,0x1a,0xdc,0x48,0xf5,0xd6,0x1b,0x0a,0x84,0xd2,0x84,0xcd,0x10,0x4f,0x0a,0xd7,0xcb,0x41,0x61,0x1c,0xcc,0x5c,0xa9,0xbd,0x6e,0x6a,0xf3,0x81,0xd8,0xaa,0x3a,0xff,0x39,0x90,0x8e,0x33,0xe6,0x58,0x13,0x5f,0xec,0x58,0x74,0x35,0xe0,0x06,0x38,0x0f,0xd0,0xbf,0x8d,0xf7,0x26,0x99,0xea,0xdd,0xfb,0xdf
.byte	0x5b,0xcc,0xf1,0x3d,0x9b,0x84,0x8b,0x5b,0xe8,0xc4,0xc6,0x3e,0x0a,0x55,0xec,0x73,0xf7,0x70,0xb1,0xc8,0xfa,0xf8,0xd6,0x72,0x2c,0x6d,0x8d,0xc1,0xa3,0xb2,0x9a,0xe7,0x80,0x6d,0x09,0xa6,0x76,0x06,0x71,0xf9,0x95,0x9a,0xa9,0x2f,0x4b,0x7c,0xad,0x64,0x01,0x01,0x91,0xe4,0x87,0x1d,0xe1,0x46,0xf5,0x4a,0x96,0xc6,0x58,0xd9,0xe0,0xa9
.byte	0x2f,0x80,0x1e,0xd6,0xe9,0xa6,0xeb,0xfe,0x5a,0xb6,0xd3,0xe8,0x76,0xd2,0x51,0xc6,0x68,0x34,0xc9,0xed,0x76,0x29,0x7e,0x63,0xb1,0x09,0xdf,0x23,0x47,0x41,0x2f,0x70,0x46,0x4d,0xbb,0x36,0xc8,0x84,0xe9,0x58,0x20,0x6b,0x04,0xb2,0xa4,0x1c,0x4d,0xe0,0xa5,0xa2,0x59,0xc9,0xed,0x63,0x25,0x5f,0x3f,0x24,0x18,0x59,0x29,0xe3,0x79,0xbd
.byte	0x35,0x50,0xee,0x81,0x59,0xff,0xd4,0x0e,0x62,0xd3,0x52,0x30,0x81,0xa2,0xe6,0x9e,0xc3,0xc9,0x7a,0x10,0x57,0x36,0x27,0xb7,0x3c,0x61,0x38,0x89,0x70,0xa0,0xc5,0xdf,0x78,0x05,0xa5,0x81,0xe2,0x8a,0x93,0xda,0x7c,0xaf,0xbf,0x6d,0x42,0x09,0x1b,0x43,0x9d,0xf9,0x26,0x87,0xc3,0x84,0x6c,0xb7,0x25,0x31,0x50,0x00,0xd8,0x13,0xc0,0xc0
.byte	0x6c,0x21,0x82,0x6d,0xf9,0x2f,0xef,0x40,0xe8,0xf8,0xae,0x4d,0x9e,0x1d,0x4a,0xda,0xa0,0x0d,0x77,0x36,0x8b,0xed,0xaf,0x6e,0x2a,0x3d,0xa8,0x36,0xe4,0xff,0x37,0xc2,0xa3,0x11,0x5e,0x68,0x58,0xa8,0xa3,0x19,0xf3,0xc1,0x33,0xea,0x39,0x49,0xfe,0x51,0x87,0xb6,0x31,0x6a,0x61,0x47,0xe7,0xb1,0x46,0xde,0x5a,0xf7,0x93,0x06,0xa7,0x72
.byte	0xa9,0x2e,0x9e,0x2e,0xc9,0x7f,0xe1,0xb2,0x86,0xb4,0xc9,0xff,0x3b,0xf7,0xaf,0xef,0x91,0x47,0xc2,0xfa,0x42,0x0a,0x4e,0xbb,0x10,0x0d,0xea,0xa4,0x11,0x54,0xa9,0x53,0xde,0xc4,0x01,0xde,0xc7,0x2d,0x1f,0x18,0x40,0x79,0xd1,0x44,0x7d,0x51,0x1d,0xf6,0xdc,0x6f,0xad,0xa2,0x5d,0xd9,0xbe,0x5d,0x11,0x57,0xb7,0x68,0x0d,0x96,0xad,0xb3
.byte	0x32,0xf7,0x99,0xcc,0x0e,0x03,0xa2,0x79,0x9b,0x63,0xce,0xee,0xf9,0x0c,0xfd,0xfa,0x9a,0x82,0xc9,0x43,0xd3,0xd5,0x23,0xfa,0xac,0x75,0xbe,0x61,0x85,0x18,0xb6,0x75,0x72,0x8d,0x17,0xdd,0xde,0x3f,0x6d,0xb4,0xe8,0x47,0x09,0xe1,0xa7,0xe0,0x4c,0xce,0x93,0x7b,0xc3,0xa3,0x3f,0xc0,0x81,0x21,0x6f,0xe8,0xce,0x68,0x61,0xde,0x1a,0x58
.byte	0x48,0x7f,0xb4,0xae,0xfd,0x7c,0x80,0x63,0x43,0x5a,0xfc,0xf9,0xf9,0x4d,0xb4,0x8c,0x85,0x27,0x12,0x4f,0x7d,0xe8,0x69,0xc3,0x7d,0x57,0x63,0x0d,0x5f,0xd2,0x85,0x4e,0x0c,0x9a,0x0d,0x1c,0x4d,0xdf,0x3f,0x9a,0x16,0x2f,0x34,0x43,0xc3,0xf0,0xf1,0x16,0x16,0xd2,0x9f,0x2e,0x78,0xd8,0x3c,0x63,0xa0,0x7e,0x02,0x8e,0x65,0xd2,0xb0,0x61
.byte	0xb0,0x1d,0x7a,0x8f,0xf7,0x30,0x45,0x05,0xf7,0x15,0xc3,0x69,0x24,0x98,0xc3,0x74,0x20,0x16,0x09,0x57,0x39,0x16,0x68,0x23,0x33,0x62,0x4c,0xf5,0xd6,0x34,0xe3,0xad,0x7a,0x14,0x64,0x8c,0x2b,0x48,0x96,0xf9,0x85,0x39,0x19,0x73,0x27,0x04,0xa6,0x55,0x66,0x15,0x8c,0xf1,0x47,0xcd,0x53,0xaf,0x31,0x3a,0xd9,0xfa,0xf9,0xac,0xbd,0xb8
.byte	0x27,0xe0,0xaa,0xa5,0x62,0x85,0x9f,0xbb,0x4e,0xaf,0xa5,0x72,0x42,0x98,0xa6,0x7f,0xa1,0xb6,0xac,0x17,0xc2,0x2c,0xf3,0xd6,0xc0,0x14,0x4b,0xb3,0x86,0x88,0x89,0x81,0x83,0x7d,0x9d,0xf7,0xe3,0xe4,0x27,0xba,0xa8,0x03,0xb4,0xe3,0x97,0x74,0x1c,0x0d,0xab,0xb4,0x6e,0xc6,0x9e,0x58,0xdd,0x15,0x95,0x2f,0xa6,0xd6,0xaa,0x5a,0x96,0x71
.byte	0x69,0xca,0xe0,0x5f,0xd2,0x3c,0x66,0x1b,0x58,0x25,0xd6,0xec,0xc0,0x46,0x3e,0x56,0xd0,0xe1,0x36,0x44,0x56,0xc0,0xf2,0x15,0x48,0x9e,0x07,0xce,0x5d,0xb9,0xd4,0x4e,0xcc,0x31,0x26,0xaa,0xdb,0x6a,0x87,0x98,0x0e,0x37,0xfc,0xc5,0x91,0x28,0x1b,0xf8,0x70,0xbf,0x30,0x71,0xbe,0xa0,0x81,0x1e,0x30,0x33,0x37,0x37,0xc8,0x07,0x08,0x9b
.byte	0x8f,0xe4,0x27,0x9f,0x90,0x67,0xb4,0x96,0x08,0xd7,0x30,0x9e,0xa6,0x53,0x39,0xd1,0x9b,0xde,0x02,0x35,0xf3,0xb1,0x19,0x7b,0xd2,0x28,0x5a,0xc3,0x1f,0x69,0x0e,0x48,0xbf,0xa3,0xb4,0x55,0xd1,0x10,0x3d,0x30,0x71,0xc6,0x82,0x2d,0xb8,0x6f,0xe6,0x99,0x6b,0xef,0x9f,0x86,0xed,0x93,0x13,0xb6,0xb0,0x87,0x91,0x77,0x4a,0x00,0xe4,0x5f
.byte	0x4c,0x7d,0x41,0x3b,0xc9,0xda,0x99,0x6b,0xff,0xec,0xef,0x05,0x3c,0xc6,0x0d,0xec,0x68,0x12,0x44,0x31,0xac,0xc9,0x0b,0x9c,0xf5,0xea,0xed,0xda,0x88,0xec,0x6e,0x6e,0x73,0xda,0x85,0x52,0x69,0xa1,0x13,0x52,0xcf,0xc3,0x4d,0x95,0x88,0xec,0x1f,0x53,0x81,0x6f,0xac,0x53,0x60,0x48,0x20,0x9a,0x4d,0x88,0x2c,0x4b,0xb0,0x69,0x5f,0x07
.byte	0xf9,0xa7,0x2c,0x9a,0x13,0x91,0x86,0xa2,0x98,0x20,0xa9,0x80,0x1e,0xaa,0x8e,0xbc,0x3c,0x3d,0x51,0x34,0x3d,0x5b,0x80,0xe4,0x39,0xfe,0xc8,0xb1,0x6d,0xfe,0x36,0x9d,0x9b,0xde,0x22,0x39,0x41,0xe9,0xff,0xda,0x67,0x67,0xd4,0xeb,0x60,0x44,0xd5,0xc1,0x74,0xcd,0xa0,0x98,0x06,0x34,0x76,0xf8,0xe5,0x0d,0xc8,0x52,0xca,0x83,0xd2,0xdd
.byte	0xf2,0x12,0x36,0x7d,0x3e,0x7f,0xbd,0xa6,0xd8,0x1e,0xc0,0x9d,0x67,0x2a,0x33,0x87,0x86,0x79,0x7a,0x70,0x3a,0x63,0x0b,0x74,0x77,0x89,0xce,0x8f,0x5a,0x3b,0xf3,0x2e,0x52,0x4d,0x1d,0xc6,0xc3,0xc8,0x69,0x98,0xdc,0x81,0x45,0x99,0xfd,0xcd,0x6b,0x6d,0x05,0x33,0x40,0xde,0xb3,0xbd,0x4a,0x27,0xc2,0x9e,0x8b,0xf1,0x4c,0xac,0x92,0x82
.byte	0x55,0x04,0x79,0xe7,0x28,0x74,0x5b,0x70,0xdc,0xc0,0x4f,0x0c,0xcf,0x3a,0x7f,0x08,0xcc,0x2e,0x1d,0xfd,0x8d,0xd9,0x5c,0xe2,0xa7,0x98,0xc1,0xe8,0x4b,0x96,0xbe,0x27,0xd6,0xfd,0x0a,0x59,0x30,0x33,0x85,0x41,0xc5,0x63,0xab,0xe7,0xda,0x26,0xbd,0xce,0xe7,0x9d,0x50,0xd7,0x2d,0x67,0x7a,0xa1,0x05,0x2b,0x74,0x60,0x5e,0x6c,0x04,0x2b
.byte	0xba,0xe6,0x2d,0x25,0xc9,0x00,0xd0,0xf0,0xa5,0x4f,0x22,0x59,0x34,0xb8,0x43,0x6b,0xb7,0x67,0x25,0x99,0xff,0x75,0x17,0xb1,0x13,0x7e,0x34,0x1d,0x42,0xa3,0x6b,0xb5,0x9d,0xfe,0xa1,0x71,0x0d,0x90,0x81,0x58,0xfc,0xc7,0x85,0xe6,0xbd,0xc2,0xcc,0xc9,0xc9,0x23,0x6e,0xd6,0xbe,0x4a,0x61,0xd4,0xf5,0x9e,0x37,0x6a,0xb1,0x8b,0x91,0x59
.byte	0xe1,0x3e,0xac,0x87,0x54,0xa6,0xf9,0xf5,0x90,0xd2,0x7c,0xba,0x4b,0x37,0x33,0x1b,0x88,0x5e,0xbd,0x78,0x3f,0xed,0x43,0x40,0x4f,0x16,0x59,0x29,0xbc,0x27,0x98,0x87,0xfe,0x62,0x56,0x93,0x21,0x0a,0xca,0xc1,0x21,0x99,0xb3,0x32,0xbb,0x5a,0x79,0x40,0xab,0xea,0x00,0xf8,0xe9,0x90,0x0d,0x59,0xbd,0x6e,0x7f,0x74,0x01,0x50,0x67,0x3a
.byte	0x8e,0x24,0x1d,0x6c,0xc8,0xd6,0x93,0xca,0x71,0x95,0xec,0xac,0x78,0xe9,0x1f,0x38,0x0d,0xa2,0xe5,0x32,0x90,0xa2,0xaf,0xef,0x15,0x06,0xd6,0x52,0xa4,0xd2,0x94,0x0f,0xbd,0x86,0x81,0x82,0x12,0x9b,0x3a,0xc4,0x0b,0xdf,0x8a,0x5f,0xc6,0x3b,0xb4,0x13,0x9b,0xeb,0xed,0x2d,0x06,0x46,0xa3,0xbe,0xbb,0xe1,0xe1,0x93,0xa1,0xab,0x46,0xf3
.byte	0xd0,0xd9,0xce,0xb6,0xfb,0xd0,0xd5,0xb6,0xde,0x0c,0xed,0x90,0x18,0x6c,0x1e,0x46,0xb0,0x36,0xa7,0xf1,0x29,0xbe,0x9a,0xa0,0xcf,0xed,0xd6,0xaf,0xb8,0x89,0x9b,0x83,0xa8,0xa0,0x8d,0x26,0xaf,0x8f,0x48,0x66,0xfc,0x22,0x1a,0xc0,0xcf,0xf8,0x90,0x57,0x7e,0x25,0x5f,0xe4,0x0c,0x68,0xd2,0xaa,0x59,0x09,0x2f,0x6d,0x3f,0x80,0x8d,0xe0
.byte	0xfa,0x25,0xb0,0xe0,0x85,0xe9,0x13,0x39,0x3d,0x1f,0xed,0xd1,0x94,0x9b,0xb5,0xc2,0x65,0xda,0xec,0x7a,0x1f,0x2f,0xe2,0x0a,0x42,0x09,0xbd,0x79,0x7d,0xcb,0xb8,0x4a,0x02,0x2b,0x72,0xaf,0x33,0x85,0x72,0x1b,0x18,0x0c,0xa3,0xec,0x39,0x0e,0x30,0x21,0x41,0xf8,0x2e,0xc7,0x8e,0x5c,0x4c,0xda,0x22,0x49,0x8c,0xa7,0xfb,0x89,0x76,0x2e
.byte	0x45,0x90,0x6c,0xeb,0x70,0x78,0x6d,0x6e,0xee,0x12,0x6c,0xb9,0xb9,0x8d,0xe7,0xf3,0x4d,0x86,0xc4,0x58,0x49,0x55,0xa6,0x86,0xaf,0x39,0x03,0x21,0xfa,0xa7,0xdd,0x51,0x80,0x79,0x6d,0x5b,0xa5,0x58,0x0f,0xfd,0x57,0xb3,0x83,0xe6,0x0d,0x25,0xec,0x55,0xdc,0x0a,0x6f,0xbc,0x7d,0xfd,0x94,0x16,0xdd,0x60,0x9f,0x2a,0x4b,0x6c,0x82,0x03
.byte	0x4b,0x44,0xbb,0x84,0xdc,0xcb,0x97,0x8e,0x58,0xe7,0xc1,0x79,0xa9,0xf3,0x53,0x78,0x1f,0xf1,0x3e,0xdd,0x94,0x24,0x6d,0xb1,0xd2,0x99,0xbc,0xa1,0xbe,0x7d,0xdd,0xff,0xa8,0x5d,0xd2,0xc2,0xba,0xad,0x60,0x6b,0x40,0x5d,0x7b,0x99,0xd2,0xea,0x45,0x66,0x80,0x6c,0x47,0xf2,0xeb,0x94,0xb8,0xe8,0xe8,0xa0,0x46,0x05,0xe1,0x4f,0x40,0x23
.byte	0x34,0xdf,0x91,0x63,0xae,0xc9,0xe7,0x32,0x20,0x9a,0x95,0x1e,0xcd,0x5a,0x60,0xe1,0x3d,0xe0,0xf1,0x16,0x3d,0x6e,0x8b,0x96,0x23,0xe0,0xaa,0x1d,0x1a,0xde,0xed,0xc6,0x63,0xb5,0x46,0x8b,0x78,0x71,0x9a,0x14,0x88,0x79,0x61,0x68,0x6b,0xcf,0x80,0xd8,0x9c,0xaa,0xfb,0xb1,0xc0,0xf3,0x39,0x07,0x26,0x56,0x80,0xba,0x9d,0xf5,0xe7,0x95
.byte	0x99,0xac,0x90,0xea,0xe7,0xe1,0xc9,0x0d,0x40,0x94,0x83,0x58,0xd2,0xc3,0x2b,0xce,0x1e,0xae,0x2a,0xa6,0xfa,0xc7,0x89,0x44,0xcb,0xe2,0x9e,0x74,0x33,0xaa,0x70,0xe5,0x28,0x3a,0x51,0x74,0x53,0xe2,0xfb,0x7c,0x47,0x76,0x22,0xdf,0x46,0xa6,0x01,0x17,0xef,0x88,0x43,0x46,0x3f,0x1a,0x26,0x0c,0xad,0xf4,0x31,0x55,0xf2,0xe7,0xc9,0x35
.byte	0x6f,0x7c,0x0c,0x5c,0xfd,0x43,0xa4,0x6c,0x6c,0x74,0xf0,0xa4,0xec,0x1d,0x83,0x97,0xc1,0x6c,0x9c,0xd7,0x97,0x90,0x7c,0x07,0x88,0xc0,0xb4,0x79,0x2c,0x7a,0x9c,0x93,0xa2,0x15,0x6c,0xd2,0xa9,0x45,0xa5,0xc1,0x16,0xfe,0x72,0xf4,0x01,0x32,0xe4,0x51,0xdd,0xdb,0x50,0xe3,0x61,0x4e,0x29,0x1e,0x27,0x10,0xe9,0x5e,0x30,0x2b,0x30,0x27
.byte	0x99,0xff,0x92,0x23,0x04,0x8d,0x28,0x68,0x28,0xd3,0x0f,0xec,0xbb,0xf9,0xfb,0x44,0x1c,0xaa,0x8b,0x38,0x95,0x67,0x1e,0xf5,0x42,0xc9,0xec,0x05,0xeb,0x94,0xe5,0x1c,0x8a,0x2a,0xef,0x3b,0x74,0x46,0x89,0x4f,0xd5,0x6f,0xa0,0xe5,0x74,0xae,0x24,0x8d,0x81,0xae,0x9d,0x3c,0x3e,0x3d,0x41,0x54,0x8f,0xd9,0xc2,0x98,0xf4,0x84,0xeb,0x30
.byte	0x6a,0x06,0x67,0x11,0x2d,0xb0,0x55,0x70,0x26,0xdf,0x19,0x5f,0x81,0xe9,0x39,0x69,0x3a,0xd6,0x09,0xa4,0x40,0x22,0x1f,0x5c,0xbf,0xd5,0xa6,0xea,0x69,0x99,0x0d,0xea,0x70,0xed,0xfe,0x3a,0xba,0x23,0x8b,0xab,0x08,0xfe,0xfb,0xe9,0x1a,0x88,0x80,0x13,0x45,0x9c,0xca,0x2e,0xda,0x4a,0xc8,0x5d,0x15,0x52,0x87,0x36,0x9b,0x87,0x8a,0x76
.byte	0x5d,0x31,0x24,0x4a,0xcb,0xf5,0xd3,0xd3,0xc1,0xec,0xde,0x1e,0x48,0x99,0xd5,0xcb,0x93,0xf7,0xca,0x2d,0xa4,0x66,0x5e,0xa4,0xcf,0xc6,0x15,0x20,0x10,0xb1,0xe2,0x8e,0xb9,0x44,0xa7,0xc3,0x54,0x14,0x86,0x08,0xb7,0x89,0x52,0xd5,0x72,0xc5,0x62,0x4d,0x82,0x96,0x23,0xcf,0x6e,0x52,0x3a,0x92,0x53,0x48,0xa2,0xa5,0x9d,0xa4,0xcc,0x32
.byte	0x45,0x5a,0xdf,0xe2,0xbe,0xce,0x28,0xc8,0xb1,0xb7,0x0f,0x6a,0x38,0x28,0x14,0x66,0x55,0x7a,0xab,0x35,0x56,0xd0,0xc7,0xe5,0xa1,0x8a,0x84,0xf7,0xc5,0xa9,0xdb,0x2a,0x45,0xe9,0x34,0x2d,0xf2,0xed,0x2b,0xa9,0x9e,0x49,0x1b,0x23,0x10,0xeb,0x0e,0x01,0x46,0x6f,0x7a,0x50,0x09,0x5f,0xc3,0xb6,0x1e,0x2f,0x1a,0x3e,0x89,0x32,0xaa,0x5a
.byte	0xaa,0xef,0x23,0x45,0xdc,0xb5,0x7e,0x5f,0x87,0x77,0xde,0x50,0xab,0xbf,0x9e,0x62,0xa8,0xe0,0xf0,0xc8,0x4a,0xf1,0x4e,0xaf,0xe4,0x50,0x8a,0xfe,0xc9,0x68,0xdd,0x19,0x1d,0xc6,0x54,0xe5,0x38,0x0a,0x6f,0x36,0xe4,0x85,0xe8,0xab,0xc4,0x06,0xef,0x07,0x29,0xce,0xea,0x9d,0x2e,0x22,0x97,0x18,0x7e,0x59,0x89,0x92,0x31,0xc5,0x87,0x50
.byte	0xa8,0x23,0x22,0x58,0x47,0x27,0x1c,0x89,0x5f,0xec,0x94,0x1d,0xb2,0xc8,0x61,0x1e,0x0a,0x80,0xd3,0xe9,0xbf,0x65,0xb9,0x66,0x32,0x56,0xde,0xd2,0x13,0xee,0xea,0xc4,0xc9,0xbf,0x4c,0xb7,0xa4,0x1c,0xc0,0xbf,0xcf,0xa4,0x58,0x1f,0x98,0x1d,0x25,0x4e,0x51,0xd9,0xbe,0x89,0x32,0xdb,0x7a,0xa6,0x39,0xa9,0xbf,0xed,0x65,0x6b,0x92,0xc4
.byte	0x8d,0xcd,0x63,0x18,0x65,0x44,0x95,0xcf,0x17,0x72,0x8f,0x27,0x79,0x83,0xda,0xe3,0xe7,0xd9,0xca,0x57,0xff,0xa3,0x15,0xbf,0xb6,0xd8,0xc2,0x8c,0xe8,0xdb,0x8c,0xdc,0x54,0x6a,0xc8,0x57,0x6e,0x24,0xc3,0x3c,0x1f,0x33,0xdd,0x68,0xbd,0x7a,0xa3,0xbc,0xa9,0x9a,0xe8,0xfc,0x97,0xa5,0xbe,0x59,0xfb,0x77,0xcd,0x22,0xc6,0x3d,0x95,0x21
.byte	0xcb,0xf7,0x8d,0xc1,0x77,0xc6,0xe0,0x06,0xb2,0xdb,0xec,0x54,0x19,0xad,0x02,0x25,0xe0,0x0f,0xda,0x4c,0xa5,0xf2,0x47,0x3f,0xc9,0xa0,0x91,0x21,0x39,0xe9,0x74,0x2a,0x9a,0xc1,0x57,0x86,0x3c,0x32,0x27,0x4c,0xc2,0x2d,0x50,0xbd,0x7a,0x04,0x9c,0x45,0x0d,0x7e,0x06,0x1d,0x3e,0xc1,0x6f,0x06,0x7f,0xd4,0x71,0xd3,0x5c,0x66,0x74,0xa7
.byte	0x33,0x75,0x64,0xa8,0x7d,0xc0,0x23,0xda,0xb0,0x6d,0x12,0xbe,0x83,0x98,0xe7,0x65,0x38,0x4d,0x39,0xc3,0xd7,0x33,0xfb,0x58,0x64,0xfc,0xde,0xd7,0xbf,0x9e,0xdb,0xcc,0x7a,0x35,0xac,0xdf,0x13,0x08,0xbc,0x0a,0x55,0x82,0x5f,0xc3,0x74,0xc5,0xb2,0xdb,0x89,0xdc,0x9c,0x60,0xfa,0x02,0x1c,0xba,0x5b,0x7e,0x0f,0xb1,0x0f,0xad,0x43,0xe1
.byte	0xe1,0xbe,0x1e,0x06,0x05,0x0f,0x39,0x80,0x3d,0x7d,0xbe,0x8f,0x38,0x25,0x46,0x5e,0xea,0x47,0x36,0x65,0x4c,0x3c,0x6c,0xd6,0xaa,0x46,0xaa,0xb0,0x95,0x1d,0xff,0x67,0x6c,0x70,0x9d,0xec,0x3d,0x3d,0x4c,0x2f,0xd9,0x2b,0xb0,0xbd,0x8c,0x6a,0xca,0xac,0x0c,0x53,0xa1,0xda,0xd8,0xc1,0x3c,0xaa,0xcc,0x50,0x85,0x41,0xa1,0xa7,0xe9,0x7f
.byte	0xf7,0xa8,0x28,0xb1,0x5f,0xd6,0x77,0xc9,0xb5,0xae,0x33,0xa7,0x2d,0x16,0xe0,0x13,0xe8,0xd4,0xf9,0x4e,0x62,0x2e,0xc2,0x9a,0xf3,0x83,0xe0,0x45,0x43,0x68,0x40,0x5a,0x56,0xf3,0x31,0xc8,0x5b,0x46,0x0b,0x38,0x1f,0xa5,0xff,0xe6,0xa1,0x81,0xc0,0x91,0xe5,0x5a,0x63,0x8f,0x47,0x9a,0xe7,0x26,0x0d,0x78,0x8d,0x11,0x7d,0xc8,0xd4,0x9f
.byte	0xc1,0xf7,0x8f,0x93,0xfa,0x2f,0xb5,0xfd,0x6d,0xa4,0x34,0xcf,0x3c,0x6c,0xf6,0x64,0xae,0x5c,0x60,0xa2,0xb4,0xcc,0x18,0x3e,0x08,0x8e,0x36,0x88,0xab,0xc3,0xea,0x53,0x4f,0x1c,0x9e,0xe6,0xef,0x2d,0x9c,0x78,0x4a,0x3a,0x5a,0x60,0x8e,0xf7,0xeb,0x0b,0x36,0xb1,0xbb,0x59,0xe2,0x5e,0x64,0x60,0xe5,0xd6,0x3d,0x2a,0xe1,0x1b,0x03,0x40
.byte	0x8d,0xde,0x2e,0xd0,0x76,0x0a,0x6b,0x63,0x2a,0x53,0x2d,0x39,0xe0,0x53,0xee,0x7d,0xc4,0x8a,0x39,0xc5,0xda,0xfc,0x31,0x7e,0xa2,0x1b,0x11,0x1d,0x8a,0x8e,0x66,0xf4,0x00,0x17,0xd3,0x78,0x1b,0x94,0xad,0xcf,0xdd,0x56,0xce,0xaf,0xf6,0x34,0xe4,0xb6,0x47,0xe0,0xda,0x1b,0x36,0x4f,0x86,0x26,0xc1,0x65,0xec,0x85,0x8c,0xa9,0xfe,0x96
.byte	0x75,0x0d,0xe3,0xeb,0x9a,0xa6,0x3f,0xb3,0x10,0x03,0x85,0x24,0xf2,0xb5,0xcd,0x69,0x7d,0xba,0xa2,0x5c,0x8a,0x6d,0x45,0xf4,0xc8,0x4f,0x69,0x8e,0xd4,0x69,0x82,0x42,0xfd,0x00,0x59,0xfd,0x20,0x7a,0x63,0x58,0x56,0x30,0x21,0x73,0xbd,0xd4,0x49,0x84,0x3f,0x51,0x0e,0xfb,0xd3,0xfc,0x93,0x17,0x7f,0x23,0x75,0x25,0xea,0x78,0x79,0xf7
.byte	0xec,0x22,0xef,0x86,0x91,0x0a,0x90,0x10,0x71,0x3b,0xb8,0x8e,0xb7,0xc9,0xd1,0x26,0x98,0x7d,0x1a,0xab,0x74,0x3e,0x5f,0x10,0xa8,0x47,0xdf,0xc9,0x0a,0x03,0xbb,0xe2,0xbb,0x34,0xbe,0x87,0x1a,0x3e,0x13,0x4b,0xd5,0xdd,0x53,0xb7,0x65,0xb4,0x16,0x38,0xd3,0xfd,0x01,0xde,0xe8,0xba,0x1d,0x33,0x5b,0x7b,0x9b,0x9f,0xfb,0xe7,0x8d,0x82
.byte	0x21,0x78,0x9e,0xb2,0xf5,0x16,0x37,0x88,0x47,0x9d,0x1a,0x2c,0xfe,0x6a,0xac,0xde,0x3e,0xc4,0xa8,0xed,0x64,0x46,0xdd,0x05,0x07,0x60,0xef,0x99,0x96,0xf0,0x84,0x27,0x38,0x58,0xe5,0xc0,0x53,0x7d,0x07,0xe3,0xa5,0x31,0xb5,0x8a,0xe7,0x50,0x94,0xbb,0x29,0xf9,0x58,0x13,0x91,0x5b,0x54,0x77,0xf6,0x91,0xb8,0x75,0x05,0x3d,0x70,0x3e
.byte	0x07,0x95,0x7d,0x37,0xbd,0x1d,0x29,0x4d,0x33,0x07,0x13,0x2b,0x54,0x70,0x9c,0x31,0xf1,0xcd,0x2d,0x28,0x09,0x43,0x90,0x24,0x8c,0x82,0xb0,0x08,0x71,0x08,0x97,0x7e,0x1a,0xbc,0x82,0xd8,0x31,0x0a,0x13,0xe9,0x22,0xf0,0x8d,0x2b,0x91,0xe5,0x2e,0x34,0x56,0x97,0x86,0xc9,0xbd,0x45,0x1e,0x32,0x03,0xcb,0xa1,0x29,0x00,0x81,0xd4,0x6e
.byte	0x5d,0xbc,0x0f,0x01,0x8d,0x5c,0xb9,0x80,0xcc,0xfe,0x0d,0xa3,0xef,0x8e,0x85,0x59,0x37,0xf7,0x64,0xa7,0xe5,0x2a,0xd5,0x44,0xee,0x91,0xcf,0x6c,0xf5,0x0a,0x9b,0xc7,0xdf,0xb6,0x02,0x2d,0xa4,0xf1,0x22,0x2a,0x97,0xfe,0x1d,0xb7,0x4c,0xc7,0x4f,0x2f,0x0b,0x38,0xd2,0xbf,0xfe,0xe3,0x94,0x55,0xae,0x85,0x0c,0x34,0x59,0x67,0x23,0x7b
.byte	0x4a,0x87,0xd9,0xd2,0xca,0xd5,0x38,0xd2,0x9d,0x05,0x2e,0xd8,0xe3,0x26,0x51,0xa4,0x14,0x66,0xfb,0x38,0x40,0x18,0x3b,0xda,0x43,0x85,0xc9,0xf5,0xf4,0xe7,0x22,0x82,0x45,0xa1,0xdf,0x98,0xa0,0xab,0x5f,0x7a,0x50,0x84,0x75,0x7a,0x70,0xa6,0x3b,0x04,0x20,0xed,0xa8,0x68,0x6d,0x3f,0x43,0xf8,0xb8,0xac,0xc7,0x32,0xa0,0xff,0x47,0xd5
.byte	0xb3,0x92,0x6a,0x15,0x5a,0xf1,0x7c,0x32,0x30,0xda,0x1e,0x5d,0xab,0xcc,0xd0,0x3a,0xdc,0xcf,0x70,0xd8,0x4d,0xa3,0x50,0xac,0x50,0x42,0x53,0xc6,0xe0,0x3a,0x26,0xdc,0x77,0x30,0x31,0x59,0xa1,0xfc,0x4d,0x48,0x00,0x0d,0xe0,0x66,0xb3,0x9b,0xd3,0x38,0x45,0xbb,0x0c,0x57,0xc5,0x78,0xee,0x8c,0x96,0xea,0xa2,0x16,0xa3,0x12,0xb1,0x06
.byte	0xd0,0x2a,0x70,0xf7,0xce,0x42,0xae,0x17,0x64,0xbf,0x13,0xa0,0xe9,0x62,0x57,0x1d,0x55,0x78,0xfa,0x72,0x19,0x58,0x15,0xea,0xe5,0xdf,0x72,0x0e,0xc6,0xd3,0xb4,0x3d,0x60,0xee,0x32,0x2a,0xce,0xdc,0xad,0xd0,0x34,0xe6,0xb4,0xcf,0xce,0x5a,0x4a,0x9f,0xaf,0x01,0xb3,0x2a,0xed,0x46,0xa0,0xad,0xaa,0x62,0x8b,0xa4,0xf7,0x4b,0xce,0x32
.byte	0x35,0x29,0x1e,0x7a,0xda,0x74,0xf8,0xe5,0xda,0x52,0x66,0xaf,0x3d,0x1a,0xff,0x42,0xc0,0xcc,0xb1,0x32,0x36,0x10,0x44,0x34,0x6a,0x16,0xc2,0x5b,0x9a,0x35,0x3f,0xd2,0x29,0xc5,0x76,0x3c,0x24,0xc7,0x2b,0x92,0xae,0xe0,0xe2,0x04,0x6c,0x3b,0x97,0xda,0xfd,0x49,0x43,0x6d,0x35,0xf5,0xc3,0xc1,0x93,0xf8,0x2f,0x25,0xef,0x3e,0xd8,0xf2
.byte	0xc0,0xb3,0xb5,0x71,0x01,0xe0,0x07,0x11,0xd5,0xf1,0xd3,0x54,0x59,0x93,0x77,0x2e,0x77,0xdc,0x57,0xd7,0x9b,0x0a,0xe2,0xde,0x29,0x04,0x81,0xa1,0x81,0x6f,0x94,0x86,0x39,0xd7,0x29,0x69,0x3f,0xfa,0xe4,0x02,0x01,0x85,0x04,0x21,0xd3,0x17,0xf5,0x68,0x85,0x6e,0x74,0x15,0x56,0xe6,0x5e,0x12,0x1c,0x0d,0x2f,0x7a,0x8d,0xe1,0xc8,0x47
.byte	0x7b,0xdc,0x35,0x64,0xf1,0x00,0xc0,0x7b,0xd8,0x2c,0x8c,0x60,0x10,0x53,0x11,0x2c,0x5c,0xa2,0xb6,0x05,0xa3,0xcd,0x14,0xb6,0xd0,0x36,0xe9,0x74,0x78,0xc3,0x84,0x6b,0x51,0xa9,0xf9,0xf1,0x05,0xe2,0xd4,0xa3,0x57,0xec,0xb1,0x5e,0xd5,0x75,0x64,0xe3,0xb0,0xf9,0x8f,0x88,0x60,0xdf,0x8e,0x75,0xf9,0x32,0xfc,0x58,0x5b,0x4b,0x17,0xdb
.byte	0x41,0x04,0x6f,0x17,0x7a,0xf8,0xd0,0x47,0x8e,0xeb,0xd1,0xf9,0xa6,0xa8,0x52,0x7e,0x07,0x6b,0x5b,0x4d,0xb9,0xda,0x91,0x40,0x51,0x25,0x67,0x4b,0xf1,0x95,0x12,0x07,0xa9,0xa5,0x33,0x96,0x92,0x5e,0xb4,0x0e,0xf0,0x85,0x2e,0x70,0xd8,0xaf,0xae,0x9a,0x3d,0x0c,0xb0,0xee,0xe1,0x80,0x5a,0xb9,0x17,0xe6,0x00,0xa8,0x82,0xd0,0x9b,0xf5
.byte	0xe3,0xa0,0x12,0xc4,0x15,0xd6,0x5e,0x57,0x5c,0xd2,0xb9,0xa7,0x8e,0xfd,0x09,0xc3,0xd2,0x66,0xfd,0x86,0xb4,0xdc,0xa3,0xc2,0xfe,0x16,0x86,0xc4,0x98,0xa3,0x2e,0x4c,0xc9,0x2c,0xd6,0x87,0x83,0x1b,0x6f,0xe2,0x44,0xd6,0x72,0x94,0x1d,0xba,0xaf,0x34,0x1f,0xf2,0x40,0x40,0x33,0x24,0x63,0xc1,0x26,0xef,0xbc,0x0f,0x3b,0x3c,0x65,0x2b
.byte	0xa7,0xc7,0xdf,0x96,0x67,0xab,0x92,0x0e,0x04,0x8c,0x82,0x9e,0xbe,0x52,0x61,0x40,0xdf,0x77,0x00,0xc5,0x01,0x9a,0xe9,0xde,0xe1,0xe2,0x45,0xb8,0xed,0x94,0xd5,0xf0,0x28,0x29,0xef,0x0d,0x91,0x07,0x9b,0xfe,0x69,0x78,0x26,0xd7,0xf9,0x51,0xf1,0x9c,0xf2,0xbb,0x83,0x2d,0x79,0x1e,0xff,0x97,0x13,0xdc,0x28,0x93,0x26,0x7c,0x54,0x52
.byte	0xc0,0x92,0xeb,0x4a,0xa2,0xe3,0x01,0xfc,0x07,0xb9,0x26,0x11,0x03,0xe0,0x19,0xa8,0x9c,0xff,0x3a,0x95,0x26,0x3a,0x17,0xf1,0x7d,0x6a,0x6a,0xb2,0xb5,0x5a,0x07,0x43,0x2b,0xb7,0xdd,0x19,0x14,0xe0,0x05,0x91,0xc5,0xee,0x49,0x35,0x7b,0x1a,0x2d,0x34,0xda,0xa2,0x45,0x7e,0x0d,0x64,0x98,0xb6,0x2e,0x47,0xaa,0x6c,0x73,0x66,0x55,0x01
.byte	0x27,0xb0,0xa9,0x13,0xa6,0xe0,0x74,0x38,0xb3,0x97,0xfe,0xaf,0xdc,0xc0,0x6a,0x4f,0xd8,0xdb,0x07,0x62,0x61,0x05,0xbb,0xa0,0xa8,0xc5,0xb3,0x89,0x13,0xbb,0x09,0x01,0x6f,0x09,0xcb,0x47,0x62,0x46,0xf0,0x4b,0xf0,0xb7,0x7c,0x39,0x8d,0xe5,0x7b,0x64,0x49,0x32,0x93,0x1e,0x94,0x0a,0x98,0xe0,0xca,0xc6,0x67,0x5b,0xdf,0x88,0x0a,0x26
.byte	0x83,0x77,0xc3,0xd0,0x11,0x66,0x3d,0x25,0x91,0x61,0x80,0xfc,0x9c,0x50,0xfb,0xe8,0x81,0x6f,0xd8,0xfa,0x77,0x78,0x4c,0x2b,0x44,0xd0,0x92,0x52,0xa4,0x50,0x50,0x7e,0xa2,0xb9,0xe7,0x79,0x33,0x95,0xfe,0x29,0x1c,0x1d,0x43,0x9d,0xa7,0x12,0xfe,0xa1,0x45,0xf4,0xd9,0x1c,0x7e,0x5a,0x67,0x99,0x7f,0x22,0x7c,0xa3,0xb1,0x2d,0xb7,0x1d
.byte	0x6b,0xf6,0xb4,0x94,0xf2,0xd1,0x5c,0x28,0x56,0xe9,0x4f,0x21,0x81,0x96,0x37,0x7c,0x25,0x74,0x0f,0xf9,0xc5,0xf5,0xc6,0xe8,0x8f,0xbb,0xfb,0xe4,0xaf,0x23,0xac,0x4c,0x20,0x35,0x7d,0xb4,0x4a,0xde,0x90,0xec,0x16,0x30,0x95,0x1b,0x79,0xf6,0x77,0xfe,0x80,0x10,0xba,0xd2,0x49,0xda,0xca,0x9e,0x6b,0x63,0x2f,0x24,0x38,0xf9,0xee,0x20
.byte	0x38,0x5c,0xeb,0xf5,0xbc,0x07,0x7a,0xeb,0xde,0xc4,0x97,0xcf,0x48,0x9b,0x80,0x40,0xfa,0x81,0xf5,0x24,0xa7,0xf3,0xf7,0x16,0xe9,0xba,0xae,0x9f,0xde,0xa1,0x00,0x34,0x74,0x36,0x9f,0x47,0xce,0xcf,0x35,0xdb,0x30,0x7e,0x72,0x81,0xc5,0xe1,0x59,0x07,0x3e,0xc7,0x5b,0x7b,0xd3,0xc6,0xeb,0x4e,0x71,0x9c,0xeb,0x41,0x37,0xd9,0x9e,0x34
.byte	0x0b,0xc1,0x9c,0xf7,0xfd,0x56,0xb0,0xd6,0xa6,0xe4,0x1d,0xdf,0x43,0xc6,0xf3,0x26,0x0f,0x01,0x07,0x29,0x57,0x9c,0x8f,0xe1,0x31,0xc9,0xa6,0x98,0x0f,0x0e,0x27,0xfd,0xa0,0x59,0xdf,0x92,0x7b,0x0a,0x4c,0x42,0x4b,0x03,0x98,0x2a,0xea,0xcb,0xd8,0x0f,0x6d,0x19,0x0b,0x22,0x69,0x8b,0xaa,0x3b,0xc8,0x41,0x66,0x81,0xc3,0xaa,0x64,0x6d
.byte	0x44,0xdd,0xb9,0xe2,0xc4,0x47,0x6d,0xdf,0x61,0xe0,0xf3,0x26,0x40,0x23,0x2f,0xf9,0x2a,0xb3,0xfa,0xe2,0xe8,0x36,0xc0,0xd9,0x89,0xb0,0x05,0x47,0x36,0x20,0x3b,0x03,0x0c,0xd1,0x46,0x9b,0xc9,0x65,0xfa,0x14,0xba,0x68,0x49,0xfc,0x2a,0xb9,0x04,0x47,0xbb,0x64,0xe1,0x7f,0x5a,0xd3,0x70,0x19,0x0f,0x14,0x09,0xc0,0xbe,0xc3,0x9b,0x2f
.byte	0xd1,0x05,0x90,0x56,0x09,0x47,0xb3,0xc5,0x08,0x6f,0x89,0x59,0x8c,0xf3,0xd4,0x1c,0xaf,0x68,0x00,0x32,0x58,0xe2,0x66,0x55,0xe2,0xc3,0x46,0x73,0xfd,0x4b,0x63,0xc5,0xdd,0x48,0xa8,0x14,0xe9,0x07,0x94,0x8f,0x51,0x6e,0x2d,0x7c,0x62,0x97,0x73,0xa5,0x42,0x7d,0xad,0x43,0xcb,0x65,0x56,0xf0,0x23,0x28,0x72,0xdb,0x1f,0xcf,0x34,0x9a
.byte	0x62,0x06,0x8d,0xc9,0x86,0x40,0x6d,0xee,0x58,0x72,0x02,0xbb,0xce,0x33,0x6a,0xe4,0xcb,0x46,0x25,0xda,0x2f,0x8d,0xc9,0x8e,0xfe,0xcf,0xbb,0xfc,0xb0,0xe8,0xec,0xf2,0xf9,0xff,0x5d,0x70,0x9e,0x2e,0x22,0x0e,0x9a,0x4d,0xb8,0x26,0x7a,0x48,0x3f,0xba,0x5c,0xcd,0x10,0xf4,0x6d,0x89,0x3d,0x5d,0x87,0xd4,0x69,0xb8,0x4a,0x20,0xc6,0xf8
.byte	0x03,0x6c,0x60,0x1e,0x9c,0xc6,0xe3,0x39,0x9b,0xa1,0x16,0x64,0xed,0xc6,0xd7,0x54,0xfd,0x8d,0xa0,0x2f,0xcf,0xc6,0xde,0x43,0xe4,0xc5,0xb7,0xd6,0x00,0xaf,0x95,0x7a,0xc6,0xde,0x26,0x59,0x39,0xb0,0x12,0x6b,0xe1,0x3c,0xa9,0x09,0xb6,0x15,0xb0,0x62,0xad,0xa9,0x11,0x4f,0x86,0xde,0xc6,0xe8,0x32,0x46,0x78,0xeb,0x60,0x81,0x6b,0x8f
.byte	0xac,0x80,0xbf,0xa4,0xc4,0xb7,0x5f,0x3b,0x2f,0xf8,0xe4,0x05,0xcf,0xbf,0xa3,0x14,0x6f,0x16,0xbc,0x6c,0x4e,0x31,0xd7,0x79,0x09,0xcf,0x9c,0x58,0xa3,0x0b,0x1a,0x31,0x4b,0xda,0xcb,0x11,0x35,0xb1,0xf5,0xbb,0xfb,0x00,0x46,0x6d,0x70,0x5e,0x4a,0x85,0x19,0xdf,0xb5,0xd0,0x03,0x2e,0x5d,0x01,0x95,0x4e,0x5a,0x59,0x99,0x24,0xac,0x3f
.byte	0x2d,0x64,0xaf,0xef,0x40,0x16,0x2a,0xcc,0x6a,0x6c,0x0f,0xe3,0x45,0x15,0x74,0x3d,0xea,0xdb,0xa7,0x3f,0xd2,0x50,0x4d,0xc7,0xc6,0x19,0x36,0x84,0xf4,0xbd,0x09,0xff,0xe7,0xf3,0xc0,0xa5,0x34,0x49,0x8a,0xfe,0x83,0xcd,0xe4,0x80,0x7d,0xe3,0xff,0xc9,0x8a,0xb9,0xd6,0x34,0x01,0xd1,0x47,0x16,0x5e,0x7c,0x16,0xf5,0x7c,0xf8,0xb5,0x53
.byte	0x26,0x84,0x89,0x73,0xf3,0x7f,0x9c,0xb0,0x2f,0x07,0x9e,0xf2,0x12,0xdf,0xba,0xc0,0x15,0xd0,0x3a,0x59,0x9d,0xde,0x67,0x5e,0x1c,0x2b,0x4b,0x84,0xb8,0x89,0xfb,0x62,0x90,0xe9,0x89,0xd9,0xdb,0xb7,0x21,0x4a,0x9f,0xbd,0xc0,0x02,0x01,0xda,0xb3,0x4c,0x9d,0xfb,0x46,0xa1,0xd0,0x3c,0xf5,0x27,0x6f,0x70,0xb5,0xa9,0x74,0xdc,0xa0,0x76
.byte	0xb7,0x3a,0x53,0x18,0xdd,0x80,0x5e,0x43,0xb5,0x35,0xe4,0x0e,0x26,0x27,0x0a,0xab,0xe8,0x4d,0x2e,0x89,0x20,0xc3,0xff,0xe4,0x7f,0x03,0x2c,0x5f,0x25,0xc7,0x70,0x53,0x27,0x4c,0xc8,0xb9,0xb1,0x81,0x10,0x7a,0xa2,0x65,0xe4,0x0b,0x65,0x8e,0x3d,0x2f,0x96,0xa0,0xa5,0x7b,0x4f,0x09,0xe9,0x9d,0x10,0x06,0xf7,0x18,0xad,0x2d,0x7f,0xb8
.byte	0x8f,0x08,0xa7,0x2c,0xda,0x82,0xbe,0x5c,0xd6,0x1d,0xb6,0xe2,0x9b,0xa2,0xfc,0x18,0x8c,0x8d,0xf7,0x81,0xf4,0xc6,0x1e,0xcb,0xe5,0x73,0xa6,0x74,0x06,0x20,0xf3,0xa9,0xcb,0x80,0x01,0x55,0x7e,0xc0,0x6a,0x1f,0x5a,0x5b,0xb1,0x56,0x5d,0xd8,0x2a,0xd5,0xf5,0x57,0xe8,0x48,0x6c,0xfb,0x9e,0x93,0xa7,0x0e,0x13,0x2b,0x68,0xc5,0x6b,0x17
.byte	0x43,0xb0,0x58,0x04,0x65,0x3d,0x46,0x57,0xa7,0x3d,0x99,0xb8,0xa1,0x48,0x17,0x44,0x67,0x2a,0x0d,0x44,0x87,0x9f,0x63,0xd7,0x92,0x56,0x7b,0xab,0xd3,0x6a,0xbd,0x4f,0xc0,0xc3,0xd2,0xee,0xd1,0x3d,0xd1,0x18,0x2e,0x6a,0xf5,0x3b,0x67,0xa0,0x0a,0xf3,0x11,0x49,0xc5,0x4b,0xef,0xcf,0x00,0xfd,0x22,0x8f,0xa0,0x9c,0x99,0x32,0x2f,0x58
.byte	0xf9,0x97,0x98,0x13,0x4a,0x88,0x50,0xcc,0x58,0x1e,0x27,0x02,0x34,0x7d,0xec,0xf6,0x88,0x3a,0x74,0xb5,0x34,0x6d,0x6f,0x52,0x2d,0x20,0x02,0x70,0x22,0x27,0xdf,0x7a,0xff,0x30,0x36,0x66,0x1a,0xa0,0x51,0xc3,0x75,0x9a,0x06,0xe5,0x3f,0x6c,0x74,0x0d,0x15,0xa2,0xb6,0xe5,0xcd,0x55,0x4d,0xea,0x65,0x8f,0xbb,0xb2,0xd4,0x95,0x73,0xa4
.byte	0xcd,0xb9,0xc8,0x82,0x60,0x49,0xe9,0x36,0xc9,0xb1,0xe9,0xcb,0x52,0xae,0xa7,0x7a,0x64,0xab,0x75,0x84,0x03,0x4b,0x37,0xf7,0x07,0x75,0xf7,0x1c,0x32,0x19,0xb6,0x8b,0xca,0x7c,0x43,0x15,0xe8,0xec,0x57,0x89,0x1d,0xe2,0xa0,0x80,0xc5,0xb6,0x02,0x29,0xfd,0xda,0xe0,0x14,0x93,0xb4,0xb3,0x44,0x2e,0x17,0x2f,0xed,0x3b,0x38,0x6e,0x8f
.byte	0xe0,0x3d,0xc6,0x77,0xe9,0xa7,0x76,0xcb,0x98,0x2d,0x08,0x61,0xcf,0x1b,0x25,0x3f,0xfb,0x1d,0x99,0xb1,0x5a,0x3c,0x53,0x96,0x4e,0x09,0x11,0xf6,0x5b,0x09,0x31,0xe1,0xad,0xb0,0xaf,0x7b,0xec,0xf9,0xa8,0x68,0xb7,0x93,0x57,0xf7,0x17,0x77,0x87,0x2b,0xdb,0x00,0x28,0xc6,0x48,0xac,0xff,0xcd,0x26,0x4a,0x8a,0x76,0x9a,0x2a,0x1d,0x37
.byte	0x4c,0x70,0x4f,0xf6,0x52,0xe3,0x7a,0x78,0x94,0x5b,0x0b,0x50,0xb4,0x48,0x03,0xcd,0x78,0xd0,0x5d,0x89,0x6d,0x76,0xaf,0x9d,0x67,0xc3,0x75,0x6f,0x6a,0x2d,0xe2,0xb7,0x58,0x51,0x10,0x0d,0xef,0xa0,0x1a,0x74,0x28,0x3a,0x97,0x19,0x4f,0x3c,0x8a,0x86,0x3d,0xe4,0x66,0x3d,0x57,0xb4,0x66,0xb3,0x0b,0x4f,0x57,0x57,0x34,0x2e,0xc7,0x0c
.byte	0x11,0xdf,0x3c,0xb4,0x9f,0xe1,0xd5,0x27,0x41,0x08,0xec,0xca,0x18,0x88,0x48,0x5e,0x88,0x55,0x89,0x71,0xe6,0xa5,0x90,0x7c,0x3b,0xe5,0xf3,0x2a,0xd7,0xf5,0x0b,0x3d,0xbb,0x47,0xad,0xd7,0x78,0x41,0xa8,0xef,0xd4,0x36,0x31,0xd1,0xe4,0x9c,0x87,0x9e,0xb1,0x11,0x0e,0xff,0x8f,0x4d,0x79,0x65,0xc4,0x83,0x75,0x33,0xc9,0x89,0xe2,0xc3
.byte	0x41,0x68,0x11,0xe7,0xe4,0x58,0xb9,0xf1,0xee,0x06,0x48,0x4d,0xc3,0xc7,0x76,0x60,0x42,0x94,0x8f,0x0d,0xb9,0x53,0x46,0x78,0x06,0x97,0x94,0x36,0xf4,0x3e,0xf3,0xdd,0x5b,0x46,0xe1,0x9d,0x3f,0x9e,0x78,0x00,0x9e,0xe7,0xcb,0x9e,0xc8,0x30,0x87,0x4a,0x52,0x91,0xd5,0xe2,0xa3,0x65,0x98,0xb2,0xc9,0x6c,0xfb,0x4e,0x54,0x5a,0x9f,0x57
.byte	0x2c,0x4a,0x76,0xe4,0x97,0x88,0xd5,0x6a,0x0e,0x6c,0x7c,0xef,0x78,0x2a,0x7c,0x26,0xa3,0x25,0xf6,0x33,0x82,0x46,0x6d,0x91,0x0d,0xe4,0x83,0xec,0xf1,0x24,0xf8,0x0a,0x34,0xec,0xfc,0x7e,0x47,0xda,0x9a,0x17,0x1b,0x33,0xd0,0xf1,0x70,0xe4,0x0b,0xc7,0x70,0x58,0x1d,0x76,0x20,0x89,0xce,0x4f,0xd1,0xcb,0x3b,0x26,0xd1,0x98,0xd9,0x51
.byte	0xb1,0xd0,0xaa,0x4a,0xd5,0x10,0xf2,0xae,0xaa,0x14,0xa7,0x72,0x99,0x3d,0xc8,0xbf,0xfb,0xec,0x6a,0x14,0xdd,0x97,0x7b,0x2f,0x16,0x96,0x0f,0x41,0xb8,0x33,0x15,0x1b,0xa2,0x6a,0x7e,0x64,0x0d,0xab,0xe7,0x62,0xf5,0x6c,0x56,0x69,0x09,0x46,0x32,0x24,0x60,0x4e,0x21,0xc7,0x5b,0xee,0x0a,0xe2,0x94,0x7c,0x20,0xe2,0x06,0xa0,0xa2,0x36
.byte	0xa0,0x7d,0xb5,0x37,0x2a,0xee,0x20,0x25,0x4c,0xba,0x9a,0x06,0x4c,0x07,0x9b,0xea,0x55,0xac,0x2a,0xf7,0xb9,0x5c,0x23,0xac,0x43,0xda,0x9d,0xad,0x76,0xe2,0x5f,0xe0,0x27,0xaf,0x0a,0x5e,0x3d,0x54,0x84,0xfc,0x19,0x75,0x8c,0x62,0x4d,0x37,0x17,0x1a,0x90,0x55,0xb8,0x7e,0xa1,0xad,0x31,0x1a,0xc0,0x91,0x96,0x51,0xa9,0x5f,0xbb,0xb9
.byte	0x95,0xbf,0xe2,0xd5,0x7e,0x31,0xba,0xc4,0x1e,0x63,0x98,0xd3,0xe2,0x7d,0x87,0xa5,0x46,0xe3,0xae,0xe1,0xe8,0x4e,0x74,0x29,0x0e,0x4b,0x10,0xa8,0x7f,0x3a,0xe5,0x60,0x0f,0x49,0x6a,0xcd,0x3d,0x5a,0x8e,0xf1,0x48,0xd0,0x80,0x7b,0xa3,0x7f,0x06,0x47,0x2b,0x60,0xf2,0x17,0xc3,0xe1,0x26,0x1e,0xb7,0x0f,0x2b,0x7c,0xc7,0xb8,0x3a,0x4f
.byte	0xad,0x05,0x97,0x88,0x93,0x82,0x8e,0x06,0x77,0x44,0xd1,0x65,0xfd,0x18,0x48,0xd6,0x88,0xcd,0x5c,0xbd,0xe4,0xaa,0xea,0xf1,0xed,0x16,0x5f,0xb3,0x58,0xe2,0x69,0x82,0xbe,0x9e,0xfc,0xcb,0xf6,0x17,0xa9,0x70,0xeb,0x08,0xd7,0x06,0x86,0xf6,0x5a,0x43,0x68,0x7b,0xcf,0xa3,0xfa,0x26,0x5e,0xe5,0x42,0xd3,0x5a,0xc8,0x1c,0x3b,0x8d,0x2d
.byte	0xf1,0x45,0xb0,0x97,0x90,0x0b,0xe7,0x2d,0xab,0xd7,0xd8,0x8a,0x16,0xf9,0x5f,0xa6,0xcf,0xc5,0x60,0x2c,0x34,0x5a,0x2e,0x2b,0xb9,0xb4,0x9c,0xa7,0x09,0x77,0xd2,0x3f,0x8c,0xf3,0xf6,0xf7,0xe0,0x27,0x79,0xc3,0x4e,0x61,0x7d,0x09,0x50,0x05,0x01,0x35,0x1b,0x33,0x54,0x6f,0x90,0x9a,0x19,0xcd,0x86,0x45,0x23,0xcd,0x6f,0x1b,0x62,0xc5
.byte	0xce,0x4e,0x8e,0xff,0xe7,0x12,0x32,0x85,0x9a,0xc4,0x11,0x83,0xcf,0x78,0xd7,0x41,0x99,0x64,0x20,0xa6,0x69,0xdd,0xe3,0x53,0x98,0x6b,0xc7,0x98,0x51,0xc5,0xf8,0x3e,0xa3,0x5f,0x0d,0x78,0x2f,0xa7,0x05,0xff,0xe5,0x3a,0x0f,0x7c,0x09,0x58,0x3f,0xaa,0x0d,0x9a,0x9d,0x8d,0xe7,0xbf,0x6b,0x7d,0xfe,0x3a,0x4f,0x5c,0x50,0xb2,0xe7,0xc5
.byte	0xa5,0x13,0xde,0xc8,0xe8,0x59,0xac,0xb0,0xdd,0xc0,0x81,0xa7,0x0b,0x78,0x32,0x23,0x76,0x85,0x11,0xef,0xe3,0x88,0x6f,0x7f,0xa9,0x09,0x7b,0x0c,0x6f,0x34,0xb2,0x67,0x5e,0xd6,0x11,0xad,0xd7,0x3b,0xf2,0xbb,0x66,0x5b,0xde,0x22,0xfc,0x55,0x26,0xa1,0x89,0x80,0x2e,0xb8,0xf3,0x3c,0xf8,0x1e,0xba,0x99,0x1c,0x24,0x33,0xb4,0xe6,0x17
.byte	0x2b,0x9c,0x80,0xe5,0x9b,0x58,0x54,0x70,0xcd,0x15,0x81,0xcd,0x51,0x48,0x75,0x24,0x27,0xf5,0x30,0x79,0xc1,0x16,0xff,0x89,0x70,0x12,0x74,0x07,0x9d,0x39,0xf2,0x9c,0xc6,0x89,0x8d,0x94,0x41,0x01,0x04,0xf5,0x16,0x99,0xf3,0xf0,0xd1,0xf5,0x6d,0xd3,0x11,0x19,0x29,0x36,0xfb,0x41,0xf9,0x32,0xb9,0x0f,0x13,0xaf,0xac,0xfb,0x30,0x75
.byte	0x62,0x8c,0x04,0x5b,0xf1,0xce,0x52,0x9b,0xbe,0x8c,0xf9,0x86,0x5d,0x7d,0xc1,0x8e,0x41,0x76,0x42,0x63,0xd7,0x74,0x8e,0x2c,0x46,0xa1,0x0a,0x51,0xb5,0xec,0xe9,0x91,0x56,0xbc,0xdc,0x32,0xfc,0x10,0xb5,0xca,0x5b,0x4b,0x72,0x99,0x07,0xff,0x01,0x11,0x2c,0xa4,0x60,0xf5,0x6b,0xd4,0xa8,0x96,0x21,0xee,0xbe,0x14,0x8f,0x69,0x99,0xdc
.byte	0x43,0x7f,0x13,0x3d,0x17,0x1e,0xa3,0x1b,0x21,0x23,0x26,0x7e,0xff,0x80,0x6b,0x66,0x3e,0xb2,0x48,0x1a,0x77,0x3c,0x50,0xe2,0xca,0x4d,0xc6,0xdb,0xfd,0xd1,0x23,0xcc,0xcb,0x01,0x25,0xc0,0x62,0x8d,0xe5,0x9c,0xb7,0x13,0x97,0xf5,0x49,0x01,0x19,0x45,0x45,0x83,0x17,0xff,0x8e,0x94,0x8c,0xb0,0xc0,0xaf,0x46,0x62,0x0e,0x62,0xb7,0x8c
.byte	0xd5,0xcf,0xb9,0x82,0x6e,0x8a,0xb9,0x22,0xbc,0x30,0xf9,0x65,0xc2,0x7f,0xce,0x6b,0x4d,0xad,0x87,0xcb,0x23,0xab,0x57,0x36,0x6a,0xb7,0x8c,0x63,0x17,0x60,0x13,0xa1,0x1f,0x3d,0xa4,0xd4,0xab,0x5d,0x97,0xc7,0x18,0xaf,0xf8,0xae,0x13,0x64,0x2a,0x19,0x34,0xe2,0x28,0x28,0x4f,0x32,0x2a,0xd8,0x43,0x79,0xaf,0x1e,0x56,0xfc,0x97,0x51
.byte	0x67,0x8c,0x63,0x80,0x32,0x63,0x71,0x5c,0x78,0x00,0xeb,0xfd,0xa2,0x96,0x58,0x21,0x36,0x13,0x02,0xe5,0xa4,0xb7,0xcd,0x5a,0x30,0xa0,0x5b,0x7b,0x23,0xa4,0xcc,0x54,0x64,0x6f,0x6d,0x9b,0xaf,0xea,0x49,0x69,0x9e,0x2f,0x51,0x5c,0xe7,0xa3,0xa3,0xb8,0xac,0xed,0x47,0x23,0x7a,0x37,0x38,0xe3,0x15,0x98,0x6f,0x50,0x6c,0x8d,0xa7,0xe6
.byte	0xa8,0x39,0xcc,0x63,0x08,0xeb,0x8f,0x8c,0xfd,0x83,0xaa,0x34,0x75,0x19,0xc0,0xf4,0xd6,0x25,0x18,0x94,0x9d,0xa1,0x7e,0xc8,0x6b,0x19,0x76,0xc0,0x8d,0xaf,0x51,0xe5,0x7c,0x8a,0x98,0x17,0x80,0x90,0xc0,0xb6,0xed,0x5c,0x8f,0x33,0x56,0xba,0xce,0xbe,0x83,0x87,0x5d,0x51,0x2e,0x64,0x84,0xa6,0x9d,0x49,0x27,0x5b,0x92,0xe0,0xe7,0xac
.byte	0x37,0x3d,0x22,0x5e,0x25,0xe7,0xca,0x2f,0x5d,0x2f,0xa0,0xd5,0xcb,0xe9,0xac,0x84,0x5b,0x19,0x72,0x1c,0x2c,0x0a,0xd1,0xb7,0x73,0x24,0x8a,0x0f,0xe0,0x07,0xd8,0x49,0x4d,0x23,0x1b,0xac,0xb8,0xd1,0x42,0xd4,0xdf,0xf8,0x4d,0x85,0xa2,0x37,0x30,0x46,0x38,0x88,0x55,0x1d,0xea,0x37,0x54,0x8c,0x43,0xb0,0xed,0x01,0x53,0x75,0xe6,0xf7
.byte	0x9b,0xe6,0x10,0x91,0x6e,0x80,0x11,0xf9,0x96,0x29,0x4f,0x08,0x77,0x2b,0x7e,0xdb,0x5b,0x14,0xbd,0x77,0x37,0xe8,0x36,0x07,0x4a,0xe4,0xd8,0xa2,0x4e,0x38,0xea,0xeb,0xc2,0xd6,0x43,0x59,0x20,0x0c,0x12,0x31,0x6c,0x27,0xc5,0x7b,0xfc,0xfc,0x54,0x94,0x1d,0x5f,0x82,0x73,0xd7,0x1f,0x43,0x3a,0x73,0xc4,0xf3,0xb3,0xbb,0x53,0xfe,0x22
.byte	0xc0,0xa4,0x7e,0x2b,0x84,0x1b,0xef,0x6d,0x83,0x9d,0xb3,0x8b,0x2a,0x6c,0xea,0x1e,0xfa,0x77,0x01,0x35,0xd2,0x5b,0xc4,0xd3,0xe7,0x1e,0xca,0x73,0x8b,0xb9,0x1f,0xfb,0x67,0xf2,0xdd,0x03,0xe6,0xca,0xfe,0x3b,0x61,0xd7,0xb5,0x96,0xe0,0x85,0xc2,0x23,0xa7,0xea,0x38,0xbf,0x6e,0x29,0x9e,0x8e,0x18,0xd4,0xbf,0x16,0x73,0xf9,0x18,0xef
.byte	0xc9,0xaf,0x6c,0xe2,0xdc,0xa4,0x58,0x9c,0xf5,0x6d,0x4a,0xc8,0xb4,0x8f,0x16,0x02,0xb7,0x65,0xd3,0x32,0x3b,0x83,0xfe,0xf3,0xc7,0xba,0x68,0xf4,0x95,0xa4,0xf6,0x33,0x57,0x43,0xbe,0xae,0x83,0xa9,0xe4,0x0d,0x0b,0x23,0xaa,0xbc,0x15,0x53,0x18,0x4d,0xb4,0x35,0xe3,0x8e,0x86,0xfe,0xe4,0x98,0x5d,0x63,0x23,0xce,0x44,0xea,0x4d,0x64
.byte	0x86,0xf8,0x06,0x8f,0xc0,0x73,0xa6,0x6d,0x04,0x53,0x47,0x95,0x0f,0x6d,0x6c,0x01,0x1c,0x3f,0x7b,0x83,0xe4,0xc2,0x40,0xb8,0x97,0x26,0x9e,0x35,0xb0,0x76,0xee,0xe4,0xc7,0xd8,0xaa,0x22,0x83,0x96,0xe1,0x34,0x7b,0x78,0x31,0xee,0xd3,0x9a,0x50,0xd4,0x05,0xfd,0xd6,0x15,0xca,0x83,0x2f,0x49,0xfd,0x00,0x23,0x82,0x39,0xac,0x46,0x7a
.byte	0xe4,0xb5,0xcc,0xee,0xbb,0xaa,0x98,0x82,0xb5,0x27,0x45,0xd5,0x96,0x6e,0x89,0x01,0x1e,0x30,0xe4,0x1c,0x3a,0x65,0xcc,0x9f,0xda,0x38,0xf0,0x4c,0x68,0xfa,0xe5,0xf2,0xe2,0xce,0x34,0xc2,0x15,0xfd,0x21,0xf6,0xe2,0x33,0xbd,0xef,0xfd,0x49,0x15,0xdc,0x38,0x3b,0x24,0xba,0x3a,0x80,0x35,0x60,0xbe,0x50,0x17,0x38,0x3e,0xe2,0x96,0x84
.byte	0x01,0x41,0x6c,0xb2,0x0b,0xc6,0xff,0xce,0xb3,0x37,0xa2,0x46,0x27,0x33,0x8e,0x04,0x44,0x8a,0x7c,0x64,0x0e,0xbc,0xed,0x74,0x4f,0x40,0x58,0xf4,0x8c,0xf8,0xd9,0x92,0xa9,0x0b,0x18,0x7c,0x93,0x95,0xca,0xa7,0x3e,0x1d,0xad,0x68,0x80,0xd9,0xdb,0x81,0x78,0x50,0x37,0x49,0xbc,0x64,0xc2,0x52,0x5c,0x70,0x7e,0x0a,0x26,0x7e,0xc6,0xbf
.byte	0xd2,0x7f,0x05,0x55,0x7a,0x5a,0x3e,0x9e,0xe3,0x8b,0xf5,0x95,0x2b,0xd8,0xb4,0xb8,0xc6,0x5d,0x91,0xb8,0xc7,0x7c,0xe1,0x75,0xf2,0x43,0x6b,0x73,0xb7,0xb1,0x10,0xf2,0xa7,0x1e,0xab,0xaf,0xc9,0xc0,0x3b,0xab,0xbe,0xf7,0x4a,0x43,0x9c,0xca,0x3d,0x00,0x5b,0x02,0xf8,0xa2,0x4f,0x57,0x81,0xb0,0xde,0x1e,0xd1,0x60,0xbe,0x6c,0x0d,0xe6
.byte	0xcd,0x51,0xb6,0xc7,0x00,0x52,0x37,0x4f,0xfc,0xee,0xe2,0x43,0x5c,0x61,0x76,0xed,0x80,0x72,0x38,0x26,0x94,0xfe,0x28,0x06,0xfb,0x62,0xa6,0x21,0x9b,0x53,0x60,0x1b,0xf0,0x56,0xae,0xba,0x6b,0x52,0x27,0x2a,0xd5,0xed,0x11,0x92,0xa2,0xe2,0xab,0xdd,0x05,0x38,0x38,0xae,0xeb,0x72,0xcb,0x6c,0xa5,0x2a,0x73,0xc5,0xfc,0xb0,0x36,0x83
.byte	0xd6,0xe6,0xda,0x6b,0x38,0x72,0x5e,0x8d,0xaf,0x11,0x5f,0x5b,0x89,0x58,0x21,0x36,0xf6,0x7d,0x42,0x48,0xdc,0xce,0xaa,0x94,0xf0,0xc3,0xc5,0x2c,0x08,0x2a,0x36,0x35,0x25,0x95,0xc4,0x11,0x09,0xea,0x7a,0xbc,0x2e,0xc6,0x0a,0x5b,0x4f,0x86,0xeb,0xc2,0x38,0x71,0x48,0x8c,0x63,0x79,0x3b,0xe4,0xba,0x14,0x44,0x31,0x28,0x4f,0x9d,0xb4
.byte	0x26,0xa6,0x3b,0xea,0x3f,0xcb,0x30,0x6c,0x02,0x13,0xdb,0x4c,0x9c,0x76,0xc8,0xd8,0x01,0x52,0x3d,0x2f,0x51,0x70,0x15,0x91,0xec,0x8f,0x80,0xed,0x88,0xb7,0xfa,0x91,0x2c,0x10,0xcd,0x3b,0x92,0x85,0xe7,0xe8,0x11,0xfa,0x50,0x15,0xe2,0xdf,0xf7,0xbe,0xa4,0x2d,0x13,0x75,0xa6,0x00,0x25,0x8d,0xe1,0xb6,0x9b,0xbb,0x64,0xfb,0x5c,0xde
.byte	0x97,0xcc,0x00,0x51,0xd6,0xac,0x67,0xc3,0x91,0x1e,0x56,0x36,0x2b,0x43,0xed,0x8c,0x67,0x7b,0xf6,0x54,0x6f,0x91,0x44,0x28,0x93,0x60,0xac,0xca,0xb9,0x91,0x7e,0xeb,0x49,0xd8,0xfc,0x12,0x6c,0x40,0x9d,0x0a,0x4d,0xb4,0xab,0xe6,0xad,0x5b,0x8e,0x2d,0x3e,0x53,0xa1,0x88,0xf7,0x41,0x71,0xa7,0xff,0x05,0x46,0x04,0x34,0x1f,0x12,0x89
.byte	0x92,0xc1,0xf9,0x26,0x16,0x23,0xb6,0x59,0x82,0xdc,0xa7,0xb8,0xa4,0x8a,0x0f,0x1d,0x7d,0x8f,0x44,0xe8,0x4f,0x70,0xbb,0xdb,0x8d,0xe6,0x7e,0x9d,0xd9,0x44,0x10,0x41,0x6c,0x3f,0xb7,0xe8,0x6f,0x39,0x93,0xe1,0xde,0xb8,0x6c,0xba,0x99,0x95,0xb7,0xc8,0xb2,0x2a,0xcd,0x81,0x53,0xc3,0xb5,0x2a,0x8a,0xd6,0x62,0x1e,0x74,0x4d,0xde,0xfa
.byte	0xff,0x7b,0xed,0x11,0x1e,0x44,0x3e,0x93,0x1c,0xae,0x7c,0x5c,0xed,0x52,0x75,0x5e,0x0a,0xf3,0x95,0xce,0x47,0x86,0x1b,0x7f,0x17,0x09,0x12,0xcc,0x08,0xca,0x16,0x11,0xf1,0xa1,0x39,0x78,0x89,0x5c,0x11,0x25,0xc7,0x39,0x5f,0x97,0x74,0xbc,0xa9,0x2a,0x25,0x5d,0xdd,0x93,0x0d,0x8c,0x74,0x07,0x1e,0xd9,0x9f,0xc1,0x38,0x9c,0xbf,0xe0
.byte	0x42,0xad,0xb2,0xe7,0xb1,0x84,0x82,0xb4,0x56,0xbe,0x3c,0x42,0xb0,0xce,0x2c,0x94,0xb7,0xe6,0x78,0xc8,0x04,0x06,0x58,0x15,0x3e,0xdc,0xf6,0x9a,0x58,0xc3,0xe3,0x85,0x16,0xc8,0x84,0xba,0x8f,0xbc,0x94,0xa7,0x44,0x04,0x29,0xc4,0xd8,0xec,0x63,0xc4,0x47,0x58,0x22,0x02,0x08,0x20,0x44,0x39,0x52,0xa5,0x33,0xfe,0x1c,0x30,0x27,0x92
.byte	0xbf,0x42,0x44,0x4c,0x3f,0x3d,0x00,0x7b,0x21,0xef,0xbb,0x25,0x75,0x4c,0xb2,0xe7,0x66,0xc9,0xc1,0xfb,0x1e,0x13,0x04,0xd0,0xcb,0x69,0x51,0x9d,0x9a,0xb0,0xb0,0xec,0xb0,0x12,0x24,0x84,0x57,0x9f,0xef,0xb4,0x19,0x50,0xa6,0xf5,0x03,0xa3,0x93,0x0f,0x77,0xaf,0xe0,0x4c,0xa5,0xd3,0xb0,0xd8,0x5e,0xc3,0x78,0x94,0xd5,0x6e,0x48,0x58
.byte	0x7a,0x93,0xb1,0x62,0x60,0xea,0xa1,0xba,0x7a,0x86,0x6e,0x87,0xe9,0x97,0xe0,0x7c,0x1e,0xb6,0x63,0x94,0x76,0x5f,0x9c,0x95,0x65,0x00,0xd4,0x14,0x0e,0x4c,0x87,0xe7,0xcd,0x9e,0xb1,0xe2,0x13,0x1b,0xb1,0x8a,0x83,0xaa,0xaa,0x34,0xcd,0xb2,0xf6,0x7f,0x12,0xb0,0x79,0xff,0x1e,0x04,0xc8,0x9a,0xfc,0x41,0x88,0xbb,0x28,0x42,0xeb,0x45
.byte	0x47,0x8b,0xcb,0x57,0x03,0xcd,0xe5,0x9a,0x84,0xea,0x0a,0xb5,0x0c,0xb8,0x30,0x33,0xd6,0xde,0x66,0xa8,0x57,0xf9,0x76,0x4f,0x0f,0x8f,0x53,0x56,0x57,0x91,0xd4,0x55,0xf5,0x78,0xde,0xa6,0xa2,0x59,0xc8,0xb0,0xf2,0xb9,0xfa,0x6d,0x4a,0x70,0x86,0x3d,0x24,0x1b,0xc6,0xb8,0x06,0xf5,0xea,0x09,0x63,0x9b,0x1e,0x61,0x18,0x85,0xba,0x08
.byte	0x20,0xaa,0x33,0x66,0xcf,0xa7,0xff,0xf5,0x30,0xfe,0xf8,0x39,0xd3,0x88,0x9a,0x5b,0x3f,0x55,0xa6,0x00,0x4c,0x57,0x0d,0xd1,0xa4,0x0c,0xe7,0x8a,0x95,0xd8,0x64,0xc7,0x93,0x51,0x84,0xa6,0x41,0x2c,0xfc,0xb0,0xfb,0x99,0x9a,0xcd,0x2c,0x62,0x3a,0xca,0x43,0x15,0xf2,0x5a,0x22,0x25,0xa4,0x91,0xa3,0x7c,0x42,0x69,0xc1,0x67,0xe3,0xf5
.byte	0xd4,0x92,0x54,0xbd,0xb3,0x57,0xe5,0x19,0xca,0x1b,0x9c,0x19,0x79,0x9d,0xbf,0x89,0xfc,0xaa,0x72,0xcd,0xcb,0xc5,0xbc,0xdd,0x0c,0x7c,0x31,0x42,0xb0,0xc2,0x76,0xe5,0x8b,0x9b,0x7c,0x92,0x13,0x20,0x5c,0xdc,0x94,0xfc,0xa1,0x90,0x34,0x27,0x88,0x9f,0xe5,0x97,0x5f,0xc3,0xa3,0x83,0xca,0x8b,0xf8,0xac,0x36,0x33,0x47,0xc6,0x20,0x2f
.byte	0x04,0x2d,0x13,0xc1,0x3c,0x07,0x6e,0xf0,0xe2,0x3d,0x32,0x5c,0x50,0x41,0xf2,0x92,0x3f,0x25,0x2c,0x80,0x34,0xa5,0x90,0x2b,0x97,0x6e,0xd1,0xa2,0xa6,0xf4,0x4a,0xe0,0x20,0xd9,0xb9,0x2b,0x66,0xe5,0x06,0x73,0x97,0xfe,0x80,0x70,0x28,0xf9,0xb6,0xae,0x93,0x27,0x7a,0x65,0xff,0x23,0xc1,0x78,0x18,0x92,0xc9,0x0b,0x05,0x82,0x93,0xbc
.byte	0x73,0x3f,0x98,0xe9,0xa0,0x6d,0x20,0x8d,0x13,0xb1,0xf0,0x7e,0xe4,0x07,0x21,0x7d,0x6d,0xea,0x03,0x59,0xf8,0x29,0xc0,0xc8,0x7d,0xce,0xd1,0xf8,0x67,0x82,0x7f,0x84,0xe8,0x77,0xa9,0x9c,0xa2,0x34,0xdf,0xa9,0xac,0xec,0x6d,0x54,0xe5,0x0f,0xcb,0xdb,0x86,0xbc,0x01,0x44,0x91,0x3b,0xc8,0x85,0x4e,0x1d,0xe4,0x74,0x19,0xc6,0x39,0x2e
.byte	0xdf,0xf2,0x8f,0x3a,0x7f,0xe3,0x1e,0x55,0x45,0xcb,0x7e,0xde,0xcd,0xa6,0x1c,0xef,0x20,0xf7,0x07,0x31,0x94,0x9a,0x3d,0x04,0xd7,0x5e,0x65,0x20,0x6a,0x4d,0x31,0x1e,0x6f,0x89,0x40,0x45,0x1f,0x37,0xc1,0x7e,0x07,0xd5,0xa6,0x38,0x4a,0xf1,0x39,0xae,0x72,0x26,0x60,0xb0,0xb5,0xc7,0xd3,0x9a,0xaf,0x57,0x12,0xe9,0x34,0x28,0x8b,0xaf
.byte	0xd8,0x62,0x24,0x58,0xe2,0xcd,0xa2,0x9e,0x74,0x23,0x2d,0x52,0xc7,0x09,0xe5,0xb5,0xf5,0xc1,0xd3,0xa3,0x19,0xe5,0x1d,0x8d,0x0c,0xdf,0x13,0x8d,0xa4,0xa7,0xc1,0x41,0xea,0x9e,0x6d,0x61,0xd4,0xa4,0x74,0xe5,0xf8,0x5f,0x9e,0xfd,0x6d,0xf6,0x6e,0x87,0x0f,0xb5,0xa3,0x82,0xac,0x64,0xb4,0xda,0x07,0x49,0x51,0xc2,0xfd,0xcb,0x55,0xa3
.byte	0x59,0x34,0xdf,0xa1,0xd6,0x90,0x62,0x43,0x1a,0xf9,0xae,0x85,0x5c,0x11,0x40,0xb2,0xbe,0xa5,0x03,0x04,0x4f,0xec,0x2c,0x58,0x2d,0xe9,0xda,0xcf,0xaa,0x2f,0xcf,0x60,0xc3,0x2c,0x6c,0x81,0x4d,0xf2,0x71,0x41,0xe4,0xae,0x4c,0xfa,0x8e,0x05,0x10,0xff,0x40,0xfa,0xea,0x96,0x78,0x6e,0xfc,0x35,0x35,0xec,0x84,0xf6,0x1d,0x24,0x60,0xcd
.byte	0x96,0x21,0x21,0xa7,0x32,0x90,0x3d,0x51,0x72,0x13,0xa4,0x9b,0x7e,0x94,0x3a,0x9d,0x97,0xf6,0x68,0xd8,0x08,0x42,0x54,0x7a,0xbb,0x9a,0x95,0x83,0xac,0xb8,0xb4,0x68,0xe3,0x31,0xdb,0xe2,0x32,0x8b,0x7d,0x57,0x62,0x1d,0x61,0x81,0xa1,0x36,0x7a,0x25,0x00,0x72,0x24,0x4c,0xa7,0x96,0x3b,0xa5,0x82,0xba,0x8e,0x89,0x1e,0x1b,0x8e,0xf4
.byte	0xab,0x91,0x85,0x7a,0x32,0x4a,0x47,0x9f,0xce,0xd2,0x51,0x77,0xcd,0xc9,0x02,0x54,0xf2,0x7b,0xcb,0xb8,0x83,0xe0,0xe0,0x1b,0x4a,0xa2,0xe0,0xd9,0x15,0xb6,0x02,0x19,0x75,0xa6,0xba,0xa6,0x98,0xd9,0x61,0x74,0xc6,0x48,0xa5,0x59,0x3d,0xc8,0x47,0xc9,0xe8,0x6b,0xbb,0x6d,0xcf,0x0e,0x8d,0x6b,0x58,0x8b,0x7d,0x4e,0x0b,0x3d,0x67,0xc4
.byte	0x8e,0x78,0x59,0x40,0x88,0x82,0x33,0x27,0x2c,0xfe,0x2a,0x6c,0xe4,0x80,0xee,0x5a,0xd4,0x5f,0xc8,0xf7,0x82,0x02,0x67,0xfd,0xcb,0x55,0x3e,0xd8,0x41,0xb3,0xce,0x93,0xfe,0xe7,0x56,0xf5,0x63,0xba,0xfa,0x2e,0x79,0xfc,0x11,0x5d,0xb0,0xc6,0x32,0x54,0xed,0x71,0x9b,0x15,0xce,0x62,0x09,0xd4,0x28,0x7f,0x7b,0xa1,0x50,0x5b,0x46,0x24
.byte	0x0e,0x40,0xa2,0xe2,0x7d,0x93,0xa6,0x2b,0x0b,0x9b,0x40,0x25,0xc9,0xca,0x7a,0x01,0x8b,0x7d,0x68,0xeb,0xd7,0x84,0xc1,0x9d,0xf9,0xfb,0xd0,0x1a,0xec,0xef,0x6b,0x4c,0x78,0x31,0x62,0x8e,0x9d,0xdc,0x78,0x8f,0xcb,0xf8,0xf9,0x41,0xdc,0x9f,0x6d,0x0a,0x27,0x67,0xce,0xbd,0xeb,0x87,0xb3,0x26,0xf3,0x51,0xe1,0xd6,0xd1,0x57,0x46,0xfe
.byte	0x21,0xb9,0x88,0x7c,0xdd,0xa2,0x49,0x71,0x24,0xfb,0xc4,0xc0,0x6a,0x6b,0x05,0x7f,0x80,0xb0,0x09,0x3b,0x9e,0x6c,0x59,0x31,0x3e,0xac,0x7a,0x2e,0x5c,0x04,0x03,0xa3,0x6e,0xf5,0x66,0xee,0xc2,0x9b,0x65,0x88,0x06,0xbf,0xf5,0xe3,0x23,0x73,0x38,0x88,0x99,0xf1,0x64,0x68,0xdf,0x7d,0x04,0x06,0x72,0x92,0x0b,0x62,0x5d,0x12,0x1e,0x4e
.byte	0xff,0x60,0x35,0xe3,0x0f,0xd9,0x8c,0xac,0x38,0x5b,0x91,0xc1,0x51,0xbb,0xa5,0x19,0x7d,0xfb,0x79,0xfa,0x42,0x3b,0xaa,0xf8,0xd3,0x0f,0xc3,0xf2,0xb2,0x68,0x91,0xae,0x28,0x83,0x4f,0x75,0xbd,0x20,0x5f,0x20,0xba,0xc2,0x75,0x85,0x74,0x23,0xf3,0x36,0x33,0x99,0x9c,0x64,0x4c,0xd1,0x5d,0xbd,0x06,0x46,0xbd,0x49,0xf0,0x86,0xc0,0xcb
.byte	0x1b,0xbd,0xec,0x98,0x5b,0xb1,0x80,0xba,0x12,0x42,0x22,0x09,0x9a,0x62,0x3c,0xa8,0x33,0xbf,0xce,0x92,0xd4,0x07,0xef,0x34,0x33,0x8f,0x67,0x1d,0x25,0x60,0xeb,0xd3,0xe4,0x31,0x63,0xa8,0xab,0xe3,0xab,0x70,0x50,0xd8,0x44,0x9f,0x39,0x51,0xd2,0xb9,0x4b,0x16,0xe4,0xfa,0xc5,0x47,0xf3,0xae,0xb5,0xfe,0x7d,0x5d,0x43,0x28,0xa6,0x3d
.byte	0xcf,0x71,0x23,0x6d,0x8e,0xd7,0x74,0xa4,0x86,0x9f,0x92,0x86,0x3c,0x1e,0x51,0xd4,0xe0,0xe6,0xd5,0xc4,0x53,0x3c,0x96,0x55,0xb9,0xac,0x63,0x5b,0xee,0x5a,0x03,0x84,0xb9,0x43,0x2c,0x0f,0x6d,0xbb,0xb5,0xca,0xf0,0x4f,0x3e,0x8b,0x3b,0x14,0x01,0x0e,0x81,0x0d,0xe6,0x62,0xa9,0x34,0x4e,0x03,0xc9,0x85,0x9f,0xc8,0x4f,0x52,0x3f,0x84
.byte	0x1b,0xab,0x7e,0xaf,0x93,0x22,0xe2,0x0d,0x41,0x79,0x50,0xb2,0x17,0xa7,0x9a,0x80,0xd5,0x65,0x40,0x3b,0x56,0x9b,0xc9,0x00,0xcf,0x03,0xf1,0xff,0xcd,0x72,0x27,0xdb,0x74,0x94,0x70,0x02,0xdc,0x3a,0xee,0x00,0xcc,0x08,0x0a,0xab,0x40,0x87,0x24,0xaf,0x7d,0x67,0x18,0xd0,0x7c,0xeb,0x91,0x1f,0x7e,0x9e,0x41,0x7b,0x39,0xf2,0xfe,0xaf
.byte	0xb7,0x6c,0x58,0xe0,0xdb,0xf7,0xf1,0x23,0x0b,0x98,0x08,0xfa,0xde,0xfa,0xf9,0x24,0x23,0xd1,0x7f,0x69,0xd3,0xb1,0x82,0x68,0x03,0x06,0x86,0x7a,0xf4,0x90,0x8d,0xa5,0xbd,0xbe,0x14,0x2f,0xa2,0x5e,0xaf,0x5c,0x1e,0x07,0x68,0x19,0x5a,0xd3,0x53,0x7d,0xe8,0x13,0x6b,0xe3,0x02,0x49,0x0d,0xd2,0x96,0x56,0xae,0x67,0x8a,0x27,0x61,0xa0
.byte	0x60,0x20,0x2c,0xb4,0x5d,0xdf,0xc3,0x24,0x50,0xa9,0xbc,0x3d,0x5c,0xf3,0x2e,0xb6,0xba,0x71,0xf0,0x04,0x43,0x84,0x4d,0x80,0xe9,0xa5,0xdd,0xb3,0x1e,0x5e,0x56,0x32,0x1a,0xd4,0xe3,0x10,0x57,0x35,0xa8,0xf1,0xe5,0x96,0xc1,0x27,0xef,0xcc,0x21,0x71,0x10,0xd1,0x07,0x7e,0xb3,0xab,0x95,0x64,0x86,0xaf,0xc9,0x15,0xe6,0x98,0x5e,0xb1
.byte	0xbd,0xde,0x99,0x38,0xfc,0x8d,0xb2,0x5a,0xa4,0x44,0x5b,0x74,0x31,0x31,0x07,0x93,0xf5,0x86,0x78,0xc5,0x82,0x26,0xfc,0x95,0x1f,0x33,0xd8,0xfe,0x70,0x42,0x2a,0xa7,0x3a,0xb1,0xb2,0x63,0xd6,0x5b,0x54,0x9c,0x54,0x45,0x4f,0x1b,0x4a,0xc2,0xb4,0x0e,0x99,0x48,0xde,0x8d,0xa6,0x5d,0xd3,0xdc,0x31,0xa4,0x2b,0x0d,0x44,0x6e,0x1a,0x10
.byte	0x3f,0x6c,0xa0,0xab,0xcb,0xb4,0xf6,0x18,0xba,0x11,0xd4,0xd4,0x70,0xc4,0xab,0x04,0x4c,0xe7,0xe9,0x53,0xe5,0xd9,0xe7,0xeb,0x21,0xa2,0x2c,0xc4,0xc6,0xc3,0xe7,0x73,0xd9,0xd3,0x84,0xb0,0x12,0x94,0x3b,0xfd,0xd9,0x32,0xba,0xe3,0x37,0xc1,0xb9,0x4d,0xea,0x3e,0x3d,0x31,0x4e,0xa0,0xe7,0x73,0x9d,0x4e,0x26,0xd1,0xdf,0xe6,0x26,0xcd
.byte	0xd7,0x17,0xd7,0x28,0x2c,0x04,0xe9,0x55,0xd5,0x70,0xaf,0xab,0xc1,0x07,0xbc,0xc4,0xd2,0x89,0xdc,0x22,0x59,0x19,0x0e,0xd8,0x8b,0xdd,0x46,0x7f,0xe4,0xad,0xa5,0x70,0xd7,0x18,0x51,0x30,0xd7,0xbc,0x26,0x45,0xe7,0xea,0xce,0xc7,0xf2,0xca,0xb1,0x9c,0x57,0x1e,0x10,0x5f,0x44,0x8d,0x3d,0xe8,0x55,0xa1,0x22,0x68,0x97,0xe8,0x03,0x9c
.byte	0x8b,0x63,0x81,0xd9,0xcd,0x4c,0x6c,0xe3,0x68,0xc9,0x35,0xee,0x94,0x13,0x25,0x0b,0x12,0x61,0xbd,0xee,0x6f,0xc7,0xe8,0xb5,0x01,0x7a,0x9e,0xd0,0x5a,0x46,0xc6,0x19,0x1b,0xc2,0xf1,0x2d,0xaa,0x53,0x29,0xcf,0x23,0x1a,0x4d,0x94,0x0a,0x50,0x64,0xf5,0x3b,0x52,0x55,0xac,0xa5,0x21,0x15,0x47,0xd9,0x14,0x8c,0x7f,0x4d,0x79,0x6b,0xc1
.byte	0x43,0x0a,0xf2,0x42,0xd2,0xb0,0x95,0x19,0x99,0xdd,0x1d,0x8e,0x84,0x8c,0x7e,0x59,0x69,0x93,0x86,0xae,0xf1,0x67,0x35,0x55,0x7c,0x5b,0x38,0x11,0x56,0xec,0x6c,0xbb,0xe8,0xc0,0x54,0xec,0x5f,0x65,0x13,0xe3,0x86,0xa0,0xb1,0xc1,0x5e,0x34,0x4f,0xdd,0x4d,0x00,0xc6,0x29,0x05,0x78,0x64,0x8c,0x19,0xb0,0xfc,0x8a,0xb2,0xc7,0x86,0x57
.byte	0xa2,0xdd,0xed,0x43,0xc1,0x7f,0xab,0x89,0x19,0xe8,0xa6,0xf5,0x7a,0x15,0xfe,0xd5,0x4f,0x53,0xde,0x78,0x42,0x76,0xf7,0x8a,0x54,0xe8,0x37,0xfd,0xee,0x82,0x20,0xd5,0xe2,0x32,0xb9,0x32,0x67,0xc7,0xff,0xdc,0xf0,0x40,0x07,0x28,0x55,0x16,0x56,0x84,0xe9,0x17,0x25,0x17,0x8e,0x10,0xef,0x9f,0xed,0x33,0x83,0x6d,0x9e,0x87,0x82,0xb8
.byte	0xa9,0x6b,0xcb,0xe5,0x04,0xfb,0x87,0x51,0x05,0x1a,0x64,0x64,0x51,0x34,0xa3,0x61,0x4a,0xe3,0xa6,0x35,0xa5,0xc9,0xe3,0xde,0xb0,0xcf,0x5f,0x68,0x49,0xbc,0x98,0xf9,0x0b,0x82,0xde,0xb1,0xf9,0x77,0x16,0x7c,0x1f,0x80,0x0c,0xfc,0xbb,0x6d,0x8e,0x92,0x93,0x00,0xc2,0xa5,0xbe,0xde,0x55,0x09,0x9d,0x83,0xa5,0x6c,0x0a,0xb5,0xc4,0x53
.byte	0xde,0xbc,0x07,0xca,0x0f,0x43,0xea,0x50,0x25,0xee,0x51,0x3b,0xfb,0x7a,0xcf,0x31,0x8a,0x19,0x1c,0xa2,0x2d,0x72,0x79,0x81,0xc6,0xb8,0xe6,0xe1,0xd8,0x3e,0x0f,0xc0,0xae,0x73,0x40,0x30,0x15,0xaa,0xe3,0x72,0xc3,0x36,0xc1,0x42,0x11,0xc5,0x3f,0xf5,0x69,0x78,0xea,0x95,0x54,0x36,0xe8,0x7e,0x9c,0xad,0xbd,0xcd,0x19,0xfe,0x4a,0x04
.byte	0xb4,0x54,0x14,0x98,0x58,0x6f,0x06,0x8f,0x8c,0x95,0xa8,0xc9,0xe8,0xc4,0x2b,0x03,0xaa,0x42,0x75,0x74,0xa2,0x63,0xdb,0xca,0xd1,0xf0,0x60,0xc3,0x63,0x84,0xfb,0xd7,0x5a,0x7b,0xca,0x45,0x8d,0x14,0xdc,0xf8,0x71,0x40,0x71,0xbb,0xa1,0x1a,0xd3,0x8c,0xfb,0xf6,0xf7,0xfc,0x82,0x72,0x50,0xc9,0xe3,0xc5,0xe2,0xb1,0x57,0xb1,0x24,0x3e
.byte	0x11,0x4d,0x96,0x1c,0x3a,0xe1,0xb6,0xb7,0x0e,0x55,0x35,0x6c,0xd8,0x2b,0xe3,0x78,0xcd,0xac,0x8f,0x24,0x70,0xc6,0x35,0x5b,0x6e,0x75,0x7a,0xf1,0x7d,0x87,0x53,0xcf,0x0a,0x24,0xb6,0x6a,0xfd,0xef,0x90,0x07,0xcf,0xde,0x30,0xbc,0x8c,0xec,0xda,0x6f,0x45,0xad,0x92,0xb6,0x8d,0x6b,0xb8,0x8e,0xdc,0xe5,0xbf,0x57,0x67,0x5e,0x2f,0x4d
.byte	0x5d,0xee,0x38,0x0a,0xaf,0xeb,0x62,0x84,0x2b,0x4c,0x30,0x7b,0x91,0x99,0x40,0x6f,0x09,0x2b,0x36,0xcd,0x04,0xeb,0x7c,0x8d,0xa5,0xbd,0xd6,0xb0,0xfc,0x27,0xcf,0x6b,0xdd,0xe1,0x94,0xbc,0x21,0xc6,0xc9,0x55,0x24,0xd4,0xa1,0x6f,0x1e,0xa2,0x81,0x31,0x22,0xb7,0x75,0x9e,0xa7,0x01,0x26,0x01,0x6c,0x12,0x91,0x02,0x87,0x40,0x5c,0x91
.byte	0x1f,0x0c,0x55,0x07,0x12,0xa7,0x48,0xdd,0xed,0xb6,0xfe,0x38,0x05,0xbc,0xe1,0x2e,0x3b,0x89,0x4f,0x98,0x65,0x22,0x93,0xda,0x09,0x9f,0x04,0x90,0x66,0x81,0xd1,0x56,0x27,0x8b,0x26,0x99,0xbe,0x93,0x08,0xf1,0xfb,0x80,0x5b,0xaa,0xc4,0x96,0x88,0x93,0xb6,0x01,0xae,0xf6,0x69,0xaa,0x6f,0x4d,0xde,0x2f,0xc7,0x24,0xbf,0xe9,0xb8,0xeb
.byte	0xcd,0xb2,0x0a,0x50,0x5c,0xd2,0x0b,0xfc,0x57,0x3b,0x96,0xf8,0xd9,0xbe,0xd2,0xb5,0x16,0xac,0x7c,0xe4,0x2f,0x46,0x93,0x86,0x48,0x91,0xfa,0xae,0xca,0x05,0x9e,0xfe,0x6e,0xae,0xa5,0x58,0x94,0xc0,0x58,0x1e,0xc5,0x69,0x28,0xe0,0x99,0x12,0x83,0xcf,0x35,0xe4,0x72,0x7d,0x4e,0x8b,0x66,0x56,0xb3,0xa6,0x2a,0x72,0x06,0x03,0x45,0xd1
.byte	0x95,0xc9,0x93,0xb7,0xf4,0x8a,0x83,0xce,0x17,0x8b,0xf0,0x8e,0x8f,0x4a,0x68,0x55,0xd8,0xfc,0x54,0x8d,0xb5,0x62,0x17,0xa8,0xe6,0x18,0x03,0x53,0x04,0xb8,0xbe,0xd2,0xd0,0x7a,0x84,0xe1,0x39,0x31,0xc5,0x74,0xf2,0x64,0x1c,0x3b,0xd5,0x52,0x9b,0x81,0x8a,0x8f,0x36,0xc8,0xab,0x3d,0xe1,0xa8,0x2a,0xf2,0x84,0x9a,0xca,0x0c,0xcf,0xc9
.byte	0x45,0x54,0x06,0xe8,0xd2,0x62,0x61,0x4d,0xeb,0x0b,0x38,0x4e,0x43,0x59,0x85,0x3a,0xe4,0xa3,0x25,0x15,0xc2,0xb5,0x7b,0x5e,0x2f,0xe6,0xc1,0x5d,0x2a,0xb7,0x57,0xb8,0x7e,0x61,0x51,0xc3,0x81,0x53,0x45,0x8a,0x6e,0x4c,0x89,0x84,0x2a,0x6b,0xca,0x15,0xff,0x97,0xfc,0x1f,0x8a,0x44,0xbd,0xcd,0x5e,0x32,0x6b,0x5f,0x78,0x7b,0xdf,0xdd
.byte	0x9d,0x2f,0x21,0xf2,0x14,0x40,0x5f,0x5a,0xd5,0x21,0x27,0x3d,0x0b,0x9f,0x9f,0xb0,0x8e,0xab,0x9e,0x68,0x96,0x02,0xfd,0x4d,0xcc,0x03,0xf0,0x03,0xfb,0x4c,0xac,0xfa,0x00,0x3b,0xea,0x1a,0x53,0x80,0x77,0xec,0x53,0xc3,0x3c,0x6c,0xf8,0xa5,0x3e,0x52,0x34,0xd4,0xa1,0x52,0xb8,0xd6,0x19,0x8c,0xdf,0x85,0x27,0x61,0x22,0xe7,0x43,0xeb
.byte	0x85,0xc0,0xbe,0x58,0xe6,0x60,0x81,0x4c,0xc6,0xbb,0xc0,0xbf,0x63,0x39,0x9d,0xad,0x2e,0xa8,0x2a,0x83,0x3d,0xfa,0xdb,0x0b,0x98,0x16,0x78,0x18,0x43,0xc7,0x17,0x82,0xb8,0xec,0x32,0x45,0x75,0x0c,0xc1,0x4c,0x84,0xbf,0xce,0x83,0x3b,0xb4,0x91,0xf4,0x0d,0x5d,0x83,0xf6,0xd6,0x10,0xab,0xc6,0x26,0x9b,0x68,0x59,0xec,0x48,0x4b,0x1d
.byte	0x35,0x2a,0x5b,0x23,0x83,0x22,0x8e,0x7d,0xfa,0xce,0xde,0xb1,0xd9,0x78,0xf6,0x9e,0x08,0xba,0xfb,0xda,0xf2,0x04,0xc5,0x2a,0xac,0xbf,0xb4,0x04,0x05,0x1f,0x0b,0xeb,0xe8,0x2a,0x3c,0x3f,0x4f,0xb6,0xc8,0x6b,0x97,0x5a,0x9e,0xdb,0x4b,0x3c,0x93,0xc1,0x20,0x1c,0x62,0x91,0x74,0x76,0x49,0x92,0xc2,0xd8,0x0d,0xd8,0xfe,0xb5,0x68,0x77
.byte	0x48,0x9f,0xbe,0xe0,0x78,0x20,0xe7,0xa4,0x3d,0x3e,0xa1,0x4c,0xc7,0xeb,0xd3,0x30,0xd3,0xf0,0x65,0xcf,0x18,0x3c,0xf8,0x25,0xc2,0x99,0xf4,0xec,0xef,0xdd,0xef,0xf3,0x6b,0x28,0x00,0xaa,0xfd,0x76,0xec,0x19,0x67,0xd6,0x79,0xa6,0x01,0x6e,0x20,0x3a,0x7f,0xd4,0xd0,0x05,0xb4,0xea,0xd4,0xde,0x11,0x06,0x44,0x4a,0x6f,0x15,0x2f,0x62
.byte	0x9a,0xaa,0xeb,0xaf,0xb5,0xb5,0x46,0xb2,0x28,0x2e,0x74,0x26,0x06,0x91,0xeb,0x15,0xef,0xd4,0xfd,0xc7,0x1b,0x65,0x25,0x01,0x24,0xd2,0x44,0x05,0x18,0x1c,0x71,0x36,0x58,0xc4,0x37,0xfe,0x22,0x29,0xc0,0x2f,0xd2,0x4e,0xeb,0x43,0xb9,0xf9,0x4e,0x87,0xd7,0x92,0x77,0xa8,0x4f,0xa5,0x6e,0x5c,0x4d,0x3a,0xe9,0x16,0x62,0x30,0x51,0xbb
.byte	0x32,0xd8,0x0d,0x86,0x20,0xbf,0x68,0x0f,0x3e,0xef,0x8b,0x0d,0xc5,0xa6,0x94,0x81,0xe9,0x6f,0x85,0xf5,0x22,0x6e,0x9e,0x0a,0x56,0xa3,0x43,0x79,0x50,0xd9,0x45,0x5f,0x5a,0x3f,0x53,0x53,0xb7,0xfe,0xb6,0x1c,0x63,0xab,0x7c,0xed,0x2f,0xc4,0x2b,0xa8,0x53,0xfb,0xad,0x46,0xf0,0x63,0xca,0x7a,0x6e,0xce,0xf4,0xb9,0x34,0xd0,0x9a,0xc8
.byte	0x0d,0xd2,0x32,0xce,0x26,0x3f,0xcd,0xd9,0xbc,0xa9,0x46,0x65,0x45,0xfe,0x45,0xeb,0x0d,0xab,0xe6,0x31,0xb6,0xb9,0x41,0x53,0x7d,0x55,0xc3,0xfb,0x10,0x46,0x37,0x77,0x1f,0x15,0xf0,0x5f,0xcb,0x8f,0xea,0xc5,0xc0,0xb8,0xc6,0xb1,0x3a,0x06,0x42,0xec,0x38,0xec,0x06,0xd1,0x37,0x3b,0xe1,0x8d,0xad,0xc2,0xce,0x96,0x0b,0xf0,0xab,0xde
.byte	0x9c,0x3c,0x09,0xef,0x59,0xcd,0x67,0xa7,0x6e,0x0e,0xc7,0xee,0x51,0x6d,0x90,0x40,0x0e,0xdf,0xb1,0x13,0xe3,0x0c,0xb6,0xe8,0xcb,0xf5,0x57,0x50,0xeb,0xdf,0x09,0x45,0x72,0x40,0xff,0xdc,0x5c,0x51,0x42,0x47,0xb2,0x9e,0xca,0xf3,0x1b,0x06,0xb1,0x3e,0x04,0x55,0x96,0x63,0x24,0x16,0xdb,0x3e,0xab,0x98,0x33,0x70,0x6f,0xfd,0x8f,0x7b
.byte	0x56,0xb0,0x7f,0x28,0x26,0xc4,0x2a,0x9e,0xf5,0xa7,0xba,0x61,0x75,0xa4,0xb1,0x25,0x60,0xe5,0x9c,0x7e,0xb4,0xaa,0x04,0xa1,0x33,0x5a,0x8d,0x88,0x1d,0xc4,0x38,0x58,0x28,0x23,0xc7,0xac,0x20,0xf8,0xaa,0x18,0xf8,0xc7,0x27,0x05,0x07,0xf7,0x12,0xfe,0xe1,0xa5,0x99,0xaa,0x55,0x79,0x72,0xc4,0x14,0x08,0x14,0x4a,0xfb,0xf7,0x66,0x81
.byte	0x6e,0xed,0x81,0x12,0x5f,0xb6,0x08,0x00,0x37,0xf9,0xdc,0xdf,0x4d,0xcb,0xfa,0xc6,0xf3,0xc2,0x17,0x17,0x52,0x39,0x7b,0xa0,0x3e,0x25,0xc9,0x48,0xd8,0xa6,0x1b,0x8b,0xdb,0xf8,0x74,0xac,0x6b,0x16,0xec,0xa6,0x4a,0x1e,0x7e,0x5c,0x50,0xbf,0x81,0xef,0x3c,0x7d,0x9d,0x21,0x38,0xa9,0x26,0x3c,0x30,0x7a,0xfb,0xab,0xd8,0x6a,0x0a,0xaa
.byte	0xbb,0x6e,0x91,0x92,0x7c,0x04,0x02,0x0e,0xa2,0x71,0xc7,0xde,0x7d,0x42,0xaf,0xe5,0x92,0xc1,0xb9,0xd7,0x52,0xaa,0x32,0xea,0x39,0x84,0x17,0x40,0xb0,0x83,0x18,0xff,0x46,0xb8,0x59,0xd9,0xa3,0xce,0x82,0x7e,0x65,0x54,0xe0,0xa4,0x6d,0x8a,0xbc,0x6a,0x65,0xb2,0xd5,0x96,0x5b,0x1c,0x9a,0x32,0x72,0xf7,0x81,0x57,0xcd,0xb3,0x22,0xc5
.byte	0x7d,0x20,0x24,0xea,0xbe,0x51,0x4c,0xb3,0x48,0x36,0x4f,0x73,0xf4,0x3f,0x07,0x92,0x01,0xe2,0x1e,0x78,0x3f,0x8e,0x1f,0x35,0x1a,0xf1,0xe1,0x14,0xd1,0xe7,0xd9,0xfd,0xd8,0xf7,0x20,0xc2,0xf3,0x7a,0x59,0xc9,0x1d,0x13,0x41,0x01,0xf6,0x77,0x69,0xfb,0x0f,0xc7,0xe4,0x58,0x04,0xce,0xe8,0x73,0x87,0x2f,0xef,0xe6,0x36,0x38,0xc7,0x91
.byte	0x2d,0x17,0xb5,0x56,0x68,0xb1,0x9f,0xbf,0x2e,0x4b,0xe7,0x09,0x7b,0x35,0x33,0x5a,0x6c,0xc1,0x6f,0xb3,0xac,0x6c,0x1e,0xfe,0xc0,0xc9,0xd8,0x77,0xf5,0xcb,0x5e,0xcc,0xd1,0x2f,0xdd,0x23,0x8b,0x3b,0xb5,0x43,0x96,0x1f,0xa9,0xe4,0x84,0x41,0x92,0xe9,0x68,0x47,0x50,0xf7,0xd4,0x85,0x22,0xa1,0x43,0xaa,0xde,0xf7,0xea,0xe0,0x54,0xaa
.byte	0x0d,0xe6,0xa5,0xb8,0x7e,0xec,0x13,0x9a,0x1e,0x6c,0x10,0x9d,0xa8,0xfb,0x97,0xde,0x24,0xda,0x33,0xbb,0xab,0x17,0x7a,0xb4,0x72,0xaf,0xed,0xc9,0xa4,0x62,0x65,0x0c,0x99,0x3d,0x74,0x7f,0xff,0x59,0xa9,0x8e,0x37,0xb9,0x10,0x30,0x26,0x3f,0x2f,0xfc,0x1e,0xe2,0xc6,0xb8,0xff,0x41,0xb3,0x35,0x3f,0x41,0xf4,0x47,0xbc,0x76,0xc6,0x77
.byte	0x0f,0xf8,0xff,0xb8,0xd2,0x34,0x40,0xac,0x43,0xcb,0xcf,0x1f,0x57,0xaa,0x1a,0xa7,0xe1,0x4a,0x69,0xd7,0x05,0xa7,0x9d,0xff,0x13,0x43,0x91,0xe3,0x09,0x1c,0xb2,0xb2,0x82,0x06,0xa3,0x3c,0x35,0x85,0x9e,0xd0,0xcf,0x1c,0xb9,0x13,0x09,0x7d,0x3d,0x17,0x0f,0xf8,0x2f,0x61,0x97,0x7e,0x02,0xe0,0x78,0x07,0x69,0x8c,0x91,0xbe,0x96,0x92
.byte	0x4a,0x03,0xa7,0x31,0x5f,0x6c,0xfe,0x55,0xb2,0x17,0xe8,0x4c,0x64,0x48,0x18,0xde,0x4f,0x5a,0xce,0xd2,0xcb,0x83,0x4d,0x1b,0x2a,0x1f,0xce,0x85,0xf7,0xdc,0x74,0x8c,0x42,0xc6,0x5a,0x3a,0x51,0x22,0x79,0x70,0xa0,0xe0,0x29,0x2a,0x73,0xe4,0x53,0xb4,0x47,0x5f,0x54,0xa8,0x65,0xe4,0x89,0x78,0xf9,0xb9,0x5f,0x5f,0x9d,0xa8,0xf7,0x82
.byte	0x4e,0x34,0x60,0xfc,0xe3,0x88,0x65,0x73,0x99,0x1f,0x53,0xed,0xe8,0xf0,0xf4,0x5a,0x0a,0x49,0x42,0x6e,0x02,0x3f,0xa8,0x63,0x21,0x02,0x2e,0x8f,0x33,0xba,0x0e,0x10,0xd3,0x4c,0x1a,0x8b,0xf5,0x84,0x8e,0x2b,0x37,0x12,0x23,0x77,0x02,0x45,0xc7,0xc3,0x79,0x06,0xc2,0x8c,0xaa,0x32,0x53,0x7c,0x19,0xa2,0x92,0x7e,0x47,0x40,0x8f,0xae
.byte	0x8a,0x64,0x51,0x67,0xe1,0xc1,0xc3,0xd2,0x14,0x1d,0x63,0x0c,0x80,0x04,0x30,0x3d,0xee,0x58,0x44,0xe4,0x14,0x63,0xfc,0x95,0x05,0x3e,0xc1,0x8d,0xd3,0xcb,0x5d,0xc1,0x8e,0xf9,0xd7,0xe5,0x9d,0x97,0xef,0x8a,0xaa,0x50,0x31,0xa3,0x01,0x3a,0xb2,0x8d,0x63,0xb6,0xe7,0x34,0xec,0xa1,0x7a,0xff,0x57,0x95,0xbb,0x1d,0xbe,0x0c,0xa5,0x91
.byte	0x92,0x08,0x06,0x1c,0x67,0x03,0x2e,0xee,0xf6,0x6f,0xa0,0xb7,0x9a,0x7c,0xe3,0x6a,0x8e,0xd8,0x50,0xc1,0xd6,0xa1,0x8d,0xe9,0x66,0x9a,0x1f,0x62,0x15,0x04,0x93,0x74,0xe8,0x04,0x0d,0x27,0x55,0x2b,0x07,0xb1,0xbd,0x69,0xe4,0xc1,0x34,0x8e,0xe7,0xfb,0xa0,0x3f,0x40,0x31,0x47,0xba,0xcb,0x80,0x88,0xf7,0x4f,0x46,0x05,0x31,0xaf,0x23
.byte	0xdf,0x93,0x09,0x0a,0x15,0xc9,0x95,0x74,0x52,0x72,0xf4,0xbf,0x0d,0x07,0xb6,0xcc,0x4b,0x40,0x12,0xf3,0x87,0xea,0x29,0xd8,0x29,0x31,0x23,0xac,0x29,0x1a,0x89,0x83,0x5b,0x33,0x4b,0x6b,0x69,0xbe,0xb6,0x15,0x7e,0xfd,0xf2,0x95,0xc4,0xbe,0xeb,0xee,0x59,0x01,0x2a,0xce,0xca,0x80,0xda,0xf8,0x1a,0x01,0x23,0xf7,0xa1,0x4f,0xf5,0x83
.byte	0x5e,0x16,0xd9,0x12,0xa9,0x4e,0xcb,0x59,0x23,0x4f,0x40,0xd7,0xbf,0xaf,0x76,0xf0,0x50,0x31,0x27,0x3a,0x8b,0x1d,0x9b,0xb1,0x1c,0x41,0xb0,0xed,0xe6,0xf3,0xa8,0x5f,0x6b,0x58,0x54,0x92,0xaf,0xcc,0x44,0x5c,0xea,0xdb,0x09,0xc5,0x26,0x5e,0xbe,0x46,0xbd,0x72,0x49,0x5a,0x4e,0x65,0x7e,0x75,0xcf,0xfc,0xf6,0xd0,0x3c,0x4a,0x7e,0xd6
.byte	0x8e,0x8e,0xb4,0x19,0x45,0x75,0xbf,0xc3,0x5e,0x46,0xff,0xc9,0x46,0x65,0x8d,0x31,0x01,0x5e,0x1c,0x13,0x93,0x56,0x6f,0x28,0xec,0xf3,0x77,0xfa,0x6e,0xb9,0x0e,0xb6,0x8e,0x0e,0x38,0xf8,0x28,0x64,0xa2,0xa1,0x42,0x9a,0xb4,0xf3,0x14,0x8d,0x17,0x80,0x05,0x82,0x7c,0xf1,0xea,0x8b,0x4b,0x62,0xa0,0xde,0xf6,0xd7,0x36,0xb0,0x70,0x8d
.byte	0x03,0xf6,0xc8,0x2a,0x9e,0xc0,0xbb,0x2f,0xcb,0xef,0x35,0xf7,0x16,0xcd,0xd6,0xd6,0x90,0xd7,0x5d,0x61,0x00,0x33,0x9f,0xd8,0xd1,0xda,0x17,0x67,0x90,0xd1,0xf8,0x59,0xcb,0xf1,0x76,0xc2,0xbe,0x1f,0x5d,0x0d,0xb2,0x02,0xbd,0x19,0x9f,0x5a,0xa0,0x91,0xac,0x51,0xb5,0xf5,0x0a,0x64,0x67,0xf2,0x49,0x30,0x6c,0x57,0x83,0xda,0x90,0xf1
.byte	0xc6,0xc7,0xe6,0x05,0x13,0x30,0x52,0xfd,0x2a,0x47,0xea,0xae,0xd3,0xed,0xe4,0x64,0x1f,0x6c,0xb1,0xdf,0xca,0x20,0x97,0x2a,0xc8,0xdc,0x00,0x0e,0x5b,0x59,0xc8,0x16,0x95,0x68,0x9a,0x2e,0x44,0xab,0xf6,0x93,0x7c,0x8f,0x66,0x4f,0x07,0x42,0x3f,0xa5,0x81,0xe7,0xab,0x59,0xbb,0xae,0xb1,0x3e,0x9a,0x25,0xf1,0xde,0xac,0x4c,0x1d,0x7a
.byte	0x54,0xb9,0xa9,0x59,0xaf,0xb0,0xab,0xaf,0x6b,0x76,0x66,0x1e,0xbe,0x1a,0xc1,0x61,0x1b,0x81,0x6b,0xe8,0xe4,0x73,0x6a,0x87,0xe9,0x39,0xcb,0x2c,0xab,0x64,0x36,0x9a,0x11,0x46,0xec,0x9f,0x30,0xb6,0x2c,0x14,0xe0,0xec,0xbe,0x33,0xde,0x60,0xc6,0x00,0x29,0x3c,0x55,0xda,0xfc,0x64,0xff,0xaa,0xbf,0x99,0x58,0xe2,0xe3,0xec,0xde,0xca
.byte	0xd1,0x3d,0xd2,0xad,0xaa,0xca,0x36,0x8f,0x93,0xa2,0xdd,0xde,0xaa,0x49,0x7f,0xdd,0x39,0x91,0xa0,0x7b,0x33,0xdf,0x36,0xcd,0xc3,0x3a,0xbc,0x53,0xf0,0x07,0x99,0x78,0x4e,0x63,0x47,0x79,0xbf,0x21,0xfc,0x05,0x47,0x69,0xec,0xee,0xf4,0x21,0x97,0x94,0x0c,0x7a,0x9f,0xa6,0xeb,0x5b,0x23,0xed,0x9d,0xc1,0xe1,0x5e,0x10,0xca,0xe0,0x84
.byte	0x5a,0xdd,0xf6,0xae,0xd8,0x23,0x98,0xea,0x6c,0x43,0x77,0x41,0xf3,0x84,0x5a,0xe8,0xda,0xb3,0x11,0x0e,0x19,0x33,0xe9,0xf9,0x7a,0x90,0x07,0x68,0xf1,0xe4,0x52,0x0c,0x03,0x67,0xb9,0x42,0x41,0x24,0xa3,0x61,0x67,0x75,0xc9,0xb5,0xdd,0x10,0xf1,0x20,0x93,0x54,0xdb,0x0d,0xc7,0x0d,0x25,0x3e,0xda,0xb3,0xe7,0xce,0x97,0x7e,0xdb,0x1a
.byte	0x8f,0x92,0xff,0xe3,0x44,0x2d,0x6b,0xdb,0xe0,0x69,0x8b,0x16,0xce,0xe8,0xc7,0x93,0xf1,0x19,0xb9,0xd3,0x41,0x45,0x8d,0x95,0xb3,0x03,0xb2,0x66,0x96,0x95,0x91,0x33,0x1c,0xee,0xde,0xd7,0x9d,0xab,0x32,0x2f,0xb8,0x3c,0x7a,0x44,0x8f,0xa6,0xca,0x02,0x03,0x2f,0xa8,0x44,0x85,0x0e,0xf5,0x27,0x90,0x84,0xd9,0x80,0x06,0xf4,0x4f,0xc7
.byte	0x21,0xc5,0x92,0xa4,0x2d,0x08,0x42,0x4c,0xa7,0x84,0xfa,0x7e,0x2b,0x66,0xfb,0x7c,0x81,0xea,0x5c,0x7d,0xdd,0x86,0xf1,0xf5,0x04,0xef,0xf2,0x50,0x12,0x72,0x42,0x22,0x23,0x74,0x7f,0xe7,0xed,0xd9,0xce,0x78,0x10,0x83,0x37,0xd0,0x81,0x97,0x4a,0xac,0xc2,0xe5,0x13,0x91,0x83,0xe2,0x6e,0xff,0x5a,0x0b,0xc3,0x4d,0xc1,0x3e,0x97,0x16
.byte	0x96,0x69,0x39,0x9e,0x1d,0x6b,0x16,0x82,0xa2,0x94,0x0d,0x50,0xdd,0xa3,0xda,0x9d,0xda,0x3f,0x46,0xce,0x6c,0xd0,0xdf,0x6e,0x1b,0x17,0x47,0x51,0x74,0x6f,0xe9,0xa4,0x6b,0xae,0xd2,0x6e,0x5b,0xc0,0x26,0xc6,0x0b,0x84,0xb1,0x39,0xcf,0x9e,0x7c,0x18,0x52,0xd7,0x8f,0x33,0xae,0x3d,0xaf,0x3d,0x1a,0xba,0x3f,0x09,0x76,0x22,0x1d,0xf3
.byte	0x42,0x14,0x4f,0x06,0xc7,0x33,0xc1,0x2d,0x58,0x1b,0x4c,0xc0,0x3a,0x29,0xa6,0x5e,0x19,0x26,0xdf,0x36,0x18,0xa9,0xc5,0xe9,0xd3,0xb1,0xae,0x86,0xa8,0x7f,0xd9,0xb4,0x18,0xef,0x9c,0x46,0xb6,0xf2,0xb2,0xb6,0x6e,0xe2,0xf8,0x5f,0x27,0xea,0x76,0xd3,0x40,0x68,0x94,0x66,0x8a,0xf5,0x9f,0xee,0x0c,0xe5,0xae,0xb6,0xba,0x87,0x42,0x40
.byte	0xc9,0x83,0xac,0xb4,0x2c,0xec,0x74,0xb7,0x55,0x17,0x0b,0x1e,0x45,0x1a,0x87,0x9d,0x52,0xce,0xb7,0x58,0x2f,0x45,0xc7,0x7d,0xf3,0xd3,0x11,0x2e,0xf4,0xd8,0xc0,0xb8,0xc3,0x31,0x45,0x68,0x40,0xe8,0x8a,0x33,0x20,0x9a,0x06,0xa8,0x18,0x53,0xb2,0x73,0xa1,0x57,0xac,0x8f,0x56,0xeb,0x8e,0xa4,0xfc,0xd6,0x76,0x7e,0x81,0x62,0x2c,0x17
.byte	0x49,0xb4,0xcc,0x15,0x66,0xcb,0xa2,0x3c,0x29,0xf0,0x73,0x0e,0x9a,0x34,0x16,0x6d,0x43,0x62,0x20,0x89,0x14,0xae,0x8b,0x5d,0x61,0x54,0xa1,0x82,0x49,0x73,0xb9,0x2b,0x48,0xd4,0xe3,0x21,0x37,0x5e,0x4d,0xbf,0xd0,0x72,0xa4,0x23,0xdb,0x7c,0xd9,0x45,0x77,0x8a,0x24,0x23,0x56,0xcd,0x84,0x80,0x44,0x12,0xce,0x99,0x39,0xbd,0x77,0xff
.byte	0x8c,0x62,0x8d,0x56,0x77,0x24,0x40,0x11,0x22,0xab,0x28,0xd6,0x75,0x2b,0xbb,0xc1,0x51,0xd6,0x5e,0x61,0x1c,0xe9,0xac,0x36,0x99,0x52,0x44,0xa5,0x20,0xdb,0xe0,0x12,0x9a,0x45,0x8f,0x7f,0x47,0xf9,0xa3,0x91,0x18,0x2b,0x51,0x9a,0x9f,0x3f,0x7d,0x36,0xde,0x71,0xae,0xca,0x62,0x62,0x16,0xda,0x19,0x9c,0x84,0xce,0xde,0x93,0x22,0xde
.byte	0xaf,0xe7,0x91,0x09,0xe8,0xf0,0x0e,0x07,0x71,0xdf,0x48,0xcd,0x8a,0x77,0x19,0x3c,0xd6,0xef,0x8e,0xe0,0x49,0xdf,0xcb,0xd6,0x34,0x78,0x7f,0x42,0xc2,0x6e,0x7a,0x50,0x53,0xee,0xbf,0x73,0x4b,0xd4,0x4f,0x06,0x18,0x26,0x67,0x51,0x54,0xa3,0x40,0xe6,0xb3,0x61,0x4b,0xfd,0xee,0x62,0x00,0x44,0x6c,0x0d,0x8b,0x2f,0x4d,0x06,0x17,0x41
.byte	0xee,0x8b,0xde,0x1f,0x80,0x36,0x58,0x3e,0x0a,0x53,0x0a,0x83,0xf9,0xba,0xbd,0x91,0x6a,0x20,0x32,0x42,0x6c,0x85,0xdc,0x84,0xfd,0xce,0x57,0xbe,0xf8,0xa5,0x2c,0x7e,0xf9,0x1b,0x07,0xf4,0x32,0x13,0x32,0x79,0xdc,0x91,0xfc,0xc0,0x18,0xe6,0x1e,0xb2,0x67,0x9d,0x08,0xd2,0x89,0xa2,0xb1,0xbf,0x37,0xe1,0x3f,0x9e,0xb5,0x17,0xf7,0x2f
.byte	0x9a,0x4f,0x3c,0xea,0x5d,0x48,0x56,0x48,0x35,0x17,0xe9,0x5a,0x99,0xa7,0x2e,0x25,0x4f,0x96,0xa6,0x3d,0x3c,0xf8,0xdc,0xe7,0xe5,0x98,0x46,0xf7,0x10,0x16,0x4f,0xb0,0x7b,0x48,0x06,0xbb,0x9a,0x5a,0xad,0x32,0x49,0x92,0x39,0xb2,0xfe,0x01,0x1a,0x5e,0xcc,0xf7,0x0d,0x65,0x1c,0xf5,0x3d,0xb3,0x40,0x28,0x06,0x6e,0xbb,0x74,0x2a,0x95
.byte	0xe9,0x62,0x2a,0xe2,0x19,0x38,0xc6,0x0d,0x46,0x30,0x6d,0x90,0xa5,0x68,0x4d,0x89,0xf0,0xf4,0xaf,0x52,0x11,0x8a,0x47,0x65,0xc0,0x6d,0xee,0xde,0xbc,0xed,0xf2,0x94,0xf3,0xfb,0xfd,0x2f,0xea,0xd5,0x36,0x89,0x8a,0x22,0xb8,0x75,0x3c,0xda,0x8d,0x3f,0x71,0xe5,0x50,0xb8,0xef,0xfc,0xa1,0x34,0x4a,0xb0,0x56,0x64,0xaf,0x28,0x0c,0x7a
.byte	0x28,0x3e,0xc8,0x83,0xc2,0xbb,0x89,0xc4,0x29,0x7f,0xc9,0xe7,0x4e,0xcb,0xdc,0x8f,0xe8,0xa4,0xdc,0x0d,0xcc,0xa0,0x16,0xda,0xa9,0x34,0x61,0xec,0x64,0xa7,0xf4,0x47,0xe9,0xee,0xbf,0xc6,0x4b,0xc5,0x01,0x65,0xe4,0xe0,0x12,0xd6,0x27,0xda,0x30,0xb5,0x60,0x72,0xe1,0xee,0x38,0x23,0x6c,0x9d,0xbb,0x83,0x01,0x4b,0x26,0x9a,0x68,0xb3
.byte	0x89,0xb3,0xe0,0x10,0x22,0x58,0xef,0x2d,0xd4,0x86,0xab,0xab,0xc4,0xd8,0x9c,0x56,0xe8,0x54,0x40,0x86,0x11,0xd2,0x6b,0xc0,0xaf,0xfc,0x4a,0xef,0x24,0x38,0x79,0x32,0x54,0x26,0x8b,0x7e,0x02,0xad,0x86,0x9d,0x40,0x65,0x28,0x28,0xa3,0xa6,0xe4,0x07,0x29,0x3a,0xbb,0x81,0xed,0x17,0x54,0x51,0x35,0xc6,0x88,0x9c,0x63,0x7e,0x73,0x02
.byte	0x28,0x13,0x4b,0x33,0xc0,0x68,0xbc,0xae,0x8c,0x59,0xd4,0x84,0x1d,0x41,0x86,0x5a,0xf6,0x14,0x50,0x13,0x88,0xca,0xc8,0xb8,0xfc,0x61,0xeb,0xe6,0x69,0x70,0x4a,0xa5,0xa5,0x36,0x4b,0xac,0xca,0x00,0x28,0xae,0xb0,0x03,0xef,0xe3,0x92,0xad,0x97,0x32,0x05,0x8c,0x93,0x95,0x45,0xd5,0x75,0x66,0x11,0xd3,0x6f,0x7f,0x5f,0x35,0x44,0xb7
.byte	0xd7,0x34,0xcf,0x8c,0x4a,0x61,0x68,0x63,0x3f,0x92,0x54,0x01,0x3c,0x25,0x2d,0x6f,0x4a,0x2d,0x55,0xff,0x3f,0x86,0x85,0x9f,0xc2,0xa1,0xde,0x6b,0xbf,0x7e,0xb4,0x7c,0xc1,0x80,0x73,0xf5,0x3b,0x85,0xae,0x36,0x1a,0xdf,0x00,0x52,0xb7,0x70,0xa9,0x42,0x79,0xd2,0x26,0xf8,0x3b,0xeb,0x9f,0x2e,0x15,0x33,0xc8,0x85,0x2d,0x63,0xb2,0x89
.byte	0x24,0x8e,0xfd,0xe6,0xdf,0x01,0x80,0x8b,0x27,0xe3,0x7e,0x17,0xc2,0x4e,0x26,0xa2,0xe1,0x95,0x81,0x3a,0xdd,0x2a,0xf4,0x75,0x21,0x64,0x11,0x04,0x5e,0x00,0x39,0xf0,0x08,0x68,0x67,0x09,0xa8,0x9b,0xbe,0xb7,0x62,0x0e,0xa8,0x69,0xcd,0x4e,0xaf,0xc8,0x4f,0x92,0x3d,0x8e,0x35,0x60,0x70,0xb3,0xda,0x2f,0x38,0x80,0x6f,0x5e,0xcc,0x3b
.byte	0x6e,0x05,0x26,0x14,0x9d,0x36,0x72,0x7d,0x09,0xb8,0xb7,0xa1,0xf7,0x5f,0xb3,0xe1,0xd6,0xc5,0x54,0x4e,0x80,0x4d,0x06,0x8f,0x84,0xbb,0xb6,0x65,0x87,0x2c,0x19,0x4a,0x74,0x3c,0x34,0x62,0x32,0xad,0x4c,0x06,0xa3,0xbb,0xfb,0x4f,0x4f,0x9d,0x91,0x84,0x63,0x75,0x34,0xcc,0x6b,0x00,0xa1,0x5a,0x63,0x03,0x8d,0x1e,0xdb,0xa4,0x0c,0xe6
.byte	0x3d,0xd1,0x94,0x77,0xd8,0x77,0x8c,0x39,0x48,0x78,0xb1,0xb5,0xa2,0x41,0xd0,0x6d,0x27,0x20,0x4a,0x41,0x88,0xa5,0x78,0x3f,0x51,0x72,0x8c,0x80,0xe7,0x37,0x81,0x8b,0x06,0x46,0x58,0xab,0x23,0x85,0x47,0x89,0x39,0xf9,0x14,0xfe,0xbf,0x07,0x7c,0x47,0x8e,0xcc,0xd7,0x08,0xfe,0x5d,0xee,0xf9,0x94,0xa2,0x83,0x81,0x8a,0xfd,0x0f,0x9a
.byte	0xa7,0xe4,0x59,0xad,0xe6,0x1f,0xed,0x5d,0xe4,0x20,0xd6,0x2f,0xa7,0xd3,0xcf,0x5b,0x18,0x6d,0x24,0x79,0x66,0xd9,0xaa,0x44,0xfa,0x8d,0x74,0x60,0xcc,0x7e,0xbf,0x4f,0x0e,0xe3,0x9c,0xa5,0xe4,0xff,0x14,0x05,0xff,0x24,0x62,0x94,0x00,0x7a,0x58,0xe5,0x0b,0x3b,0xe8,0xee,0xe1,0x4d,0x4e,0x34,0x26,0xba,0x70,0x10,0x5e,0x14,0x4f,0xa5
.byte	0x7a,0x9e,0x7b,0x28,0x99,0xbe,0x94,0x4a,0xcb,0x8d,0x65,0x60,0xa0,0x6e,0xc7,0xbc,0x51,0xba,0xb5,0x07,0x97,0x25,0x42,0xb7,0x2c,0x0e,0x9b,0xfc,0xfb,0x35,0x6f,0x74,0x10,0xce,0x25,0xdb,0xa9,0x7c,0x11,0x61,0x43,0xf9,0x19,0xbf,0xe2,0x21,0xa3,0x57,0x3c,0x41,0x0a,0x15,0x4e,0x7f,0x6b,0x38,0xb6,0x73,0x41,0xa2,0x4e,0x8e,0xb9,0x44
.byte	0xee,0x2a,0x2e,0x0a,0x9e,0x85,0xf1,0x6e,0x93,0x72,0x42,0x50,0x55,0xe1,0xc6,0x18,0x11,0x92,0xf7,0xbf,0x05,0xd8,0xb6,0xbc,0x2b,0xd5,0xe0,0xd3,0x9b,0x64,0xc4,0xdd,0xb0,0xb3,0x46,0xd8,0xfb,0x73,0xea,0xed,0x06,0x96,0x16,0x9e,0xf6,0xc6,0xe8,0xbe,0xae,0x00,0x2f,0x5a,0xf4,0x1f,0xb5,0x28,0x7c,0x75,0x76,0x68,0x74,0xa2,0x57,0x0e
.byte	0x6c,0xfa,0x2d,0xbe,0x34,0xf1,0xc9,0x2b,0x83,0x58,0xe7,0x2a,0x87,0xdb,0x47,0xae,0xc7,0xc2,0x78,0x50,0xed,0x20,0xdf,0x30,0x38,0xdd,0x84,0xa9,0x6b,0x00,0xb1,0x7b,0xbb,0x69,0xd3,0xbe,0xed,0x3d,0x99,0x6e,0x39,0x42,0x75,0x8a,0x6c,0x7c,0xa5,0xcf,0xc9,0xcf,0x11,0x14,0xb3,0xaf,0x72,0x00,0x3b,0x58,0xdd,0x2a,0xe1,0x44,0xa7,0x51
.byte	0x15,0x05,0x1b,0x18,0x49,0x07,0x90,0x4c,0xbc,0x99,0x88,0x64,0xf6,0x14,0x0b,0x99,0xc0,0x84,0xc9,0x06,0x32,0xf0,0xec,0x19,0x8d,0x4a,0xb8,0xdb,0x32,0xb4,0x5e,0xc9,0x0c,0x24,0xf0,0xad,0xdc,0xf4,0x32,0x3b,0xf6,0x68,0x28,0x4a,0xa5,0x5b,0xb7,0xd5,0x00,0x35,0xf8,0x56,0x03,0xa3,0x86,0xa0,0x8a,0x1b,0x53,0xb5,0x58,0x73,0x8c,0xf9
.byte	0x2b,0xd8,0xcb,0x88,0xe7,0x7e,0x79,0x68,0x13,0x5d,0x7d,0x23,0xc4,0xec,0x9c,0xf4,0x95,0x97,0xbf,0xb2,0xd9,0xdf,0x38,0xe8,0xa2,0x79,0xf7,0xe8,0x36,0x80,0x59,0x3f,0x58,0x2f,0xf7,0xf9,0x32,0x73,0xdd,0xd6,0x9e,0x20,0x1a,0x29,0xab,0xc1,0x77,0x14,0x71,0x3c,0xde,0x90,0xe9,0xea,0xdb,0x78,0x14,0xa3,0x89,0x43,0xf1,0x42,0x43,0x3f
.byte	0xe7,0x67,0x32,0x3d,0x65,0xdc,0xa4,0x79,0x8f,0x81,0xa5,0xb0,0x94,0x0f,0x96,0xf5,0x82,0xcc,0x47,0xc1,0x29,0x39,0x70,0x7a,0xf3,0x49,0xf5,0x09,0x43,0x50,0x56,0xd6,0xea,0xc4,0x35,0xa5,0xa2,0x8a,0xbe,0xc0,0xe3,0xfe,0x4c,0xa2,0x83,0x09,0xab,0x72,0x8a,0x96,0x7c,0x01,0x70,0xb2,0xd5,0x62,0xb7,0x67,0x59,0x36,0xcf,0x56,0x2d,0x14
.byte	0xc2,0x69,0x49,0x52,0x4e,0x7c,0x45,0x4b,0xef,0xcd,0x79,0xcd,0xe6,0xa6,0xd0,0xbe,0x10,0x1e,0x18,0xca,0xe7,0x8d,0x65,0xb1,0x17,0xc7,0x2c,0xc8,0x2a,0x5b,0xe8,0x08,0x11,0x15,0xea,0xa9,0x43,0x7b,0x70,0x04,0x0c,0xc8,0xca,0x67,0x18,0x18,0x12,0x16,0xc2,0xd3,0xf2,0x0a,0xc7,0x01,0xa9,0x97,0x61,0xf6,0xa7,0x44,0x9a,0xb3,0x67,0xdc
.byte	0x07,0x63,0x02,0x02,0x2e,0x58,0x80,0xa9,0x95,0xa0,0x8e,0x86,0xb6,0xf6,0x14,0x13,0x0a,0xea,0xf1,0x6d,0xd9,0x98,0x37,0x12,0xdb,0x67,0x1b,0x13,0x8e,0xd1,0xfa,0x2f,0x98,0x53,0x3c,0xd7,0x56,0x55,0x42,0x2f,0x64,0x59,0xd5,0xb7,0x6e,0xa8,0x6c,0xc2,0x40,0x11,0xb5,0xa1,0xc0,0x5c,0x45,0x87,0x91,0xb1,0x1c,0x4e,0xa9,0xf6,0x72,0x57
.byte	0x50,0x8e,0xc5,0xfc,0x64,0x59,0x52,0x82,0xb0,0x75,0xc3,0x98,0xff,0x32,0xce,0xa4,0x39,0xb8,0xa4,0x61,0xb4,0x53,0x3f,0xc7,0x80,0x35,0x48,0xaf,0xa8,0x67,0xfe,0xa1,0x1d,0x3c,0x95,0xb5,0x63,0x1c,0x3a,0x2c,0x68,0xfa,0x98,0x8b,0xa7,0x19,0x29,0x79,0xe4,0x9b,0xff,0x8f,0x15,0x9c,0x65,0x60,0xd2,0xa9,0x4f,0xd5,0xb2,0x57,0xff,0x32
.byte	0x4c,0x96,0x82,0x6b,0x09,0x6c,0x74,0x55,0x00,0x5c,0x68,0x68,0xd5,0x9b,0xd4,0xdf,0x3d,0x2d,0xb9,0x0b,0xf5,0x2c,0x87,0x35,0x2a,0xc0,0xc0,0xc9,0xd7,0xa1,0x76,0x30,0x82,0x46,0xd8,0x24,0x6e,0x27,0x02,0x71,0x57,0x5c,0x43,0xf2,0x54,0xd6,0xea,0xd7,0x67,0x7d,0xac,0x76,0x91,0xf1,0x26,0x6e,0xaf,0x87,0x05,0x06,0x48,0x57,0xbd,0x67
.byte	0x1d,0xd7,0x07,0xcd,0x41,0x02,0x49,0x6c,0x8c,0xe1,0xe3,0x00,0x78,0xbe,0x28,0x84,0x16,0x44,0xb1,0x0d,0x6d,0x40,0xfe,0xab,0x7e,0xf6,0x6b,0xff,0xfa,0xe1,0xc7,0x9d,0x56,0x62,0xf1,0x68,0xba,0x76,0x34,0x8f,0x54,0x20,0x49,0xf5,0xa2,0x54,0x52,0xca,0x42,0xed,0x4f,0x9b,0xdf,0xcf,0xfb,0xf6,0xee,0x12,0x29,0x43,0x8f,0xf9,0xfd,0xf4
.byte	0x8a,0xbf,0xae,0x50,0xf2,0x8f,0x46,0xa2,0x97,0x3b,0x2d,0xfb,0x84,0x98,0x61,0xae,0xba,0x36,0x25,0x30,0x8b,0xdc,0xd3,0x08,0x8e,0x7e,0xfa,0x91,0xac,0x4b,0x29,0x6d,0x0c,0x81,0x0f,0xc7,0xc8,0xc4,0x5c,0x48,0x68,0xa7,0x83,0xf3,0x6a,0xc8,0x0d,0x3a,0x9b,0x46,0xb9,0xe1,0x31,0xac,0x3c,0x12,0xa2,0xae,0x74,0xb8,0x91,0xed,0x63,0xba
.byte	0x40,0xb8,0x57,0x58,0x1f,0x1d,0x1a,0x2d,0x98,0x60,0xe8,0xe1,0x84,0x16,0xe5,0xf0,0x1e,0x35,0x58,0x31,0xc3,0x0c,0x49,0x6e,0x13,0x2c,0xac,0x14,0xc2,0xde,0x5f,0x62,0xe5,0x37,0x5b,0x1d,0x71,0x8b,0xc3,0x3d,0xd8,0xaf,0x3d,0x0a,0xef,0x80,0x3c,0x9a,0x4b,0x0a,0x3f,0x0e,0x8f,0x90,0x8f,0x73,0x2e,0xff,0x8e,0x8e,0x87,0xf8,0x46,0x52
.byte	0xed,0x7d,0x76,0xf3,0xff,0xaf,0x5e,0x62,0x87,0x16,0x9c,0xa6,0x12,0x39,0x13,0xc3,0x62,0x4b,0xd2,0x21,0xa2,0x43,0xfa,0x4c,0x5d,0x75,0x61,0x64,0x5b,0x23,0xcd,0x76,0x86,0x81,0xd6,0xa6,0x25,0xe1,0xc1,0xc6,0x04,0x5e,0x65,0xfe,0x89,0x0e,0x67,0x02,0xeb,0xb9,0x26,0x88,0x81,0x97,0x1e,0x62,0x4e,0xf4,0x4e,0x0d,0xef,0xac,0xcf,0xd7
.byte	0xc5,0x9b,0x9d,0x3a,0xa2,0x71,0xd7,0xd4,0x72,0xa6,0x66,0x90,0xe2,0xf7,0xb7,0xec,0xe4,0xca,0x9f,0xd1,0xd8,0x5a,0x65,0xff,0x39,0x65,0x78,0x47,0x1c,0x64,0xab,0x1a,0x35,0x2e,0xe2,0xf7,0x67,0xa4,0x7f,0xd5,0xea,0x04,0xee,0x4d,0xf6,0x29,0xe4,0xcd,0x1b,0xcf,0x0a,0xef,0xa1,0x14,0x90,0x0e,0xed,0x1a,0x10,0x63,0xa0,0x56,0x11,0x05
.byte	0x57,0x94,0x3a,0x11,0xff,0xe0,0xc7,0x33,0x19,0x67,0xd7,0xd0,0xcc,0x76,0x52,0x5d,0x9e,0x10,0xe7,0xd6,0xaa,0x13,0xe8,0x8d,0xa5,0x60,0x66,0x98,0x26,0x11,0x66,0x0f,0x2d,0x4d,0xec,0x28,0x93,0x17,0x3a,0x6f,0x99,0x70,0x00,0x2b,0x66,0xb3,0x49,0x69,0x3c,0x3b,0x03,0xb8,0xc0,0x9b,0x1c,0x96,0xd9,0xd1,0xe1,0x6d,0x8f,0x45,0xce,0x22
.byte	0xcf,0x48,0x61,0x85,0x10,0x1b,0x3f,0x2b,0x74,0x48,0x61,0x68,0x63,0xe3,0xa3,0x83,0xe2,0xcc,0xa0,0x6d,0x82,0x8b,0xe5,0x42,0xab,0xa7,0x62,0x6c,0x05,0xb4,0x7b,0x65,0xf5,0xd8,0x0b,0x7d,0x61,0xd6,0x5c,0xf0,0xc0,0x03,0x0c,0x51,0xec,0x06,0xad,0x79,0x8c,0x62,0x0c,0xf5,0x8e,0xcb,0x97,0x62,0xf9,0x3e,0x39,0x8d,0x3c,0x2e,0xd1,0xc0
.byte	0x5f,0x98,0xea,0xb5,0x26,0x19,0xf5,0x93,0xbb,0xf8,0xd4,0xd5,0x35,0xee,0x1f,0xf8,0x71,0x81,0x0e,0xe6,0xe9,0xf3,0x2c,0x80,0xa8,0x15,0x35,0x1e,0xda,0x07,0x41,0x39,0x8a,0x19,0x1f,0x70,0x99,0xbe,0x3d,0x5c,0x1f,0xf6,0x72,0x85,0x73,0xea,0xb5,0x61,0xbb,0x77,0xaa,0xef,0xc7,0x2c,0xed,0x1e,0xa6,0xfd,0xc9,0xde,0xa9,0x82,0xba,0x19
.byte	0x04,0x17,0xf7,0xa1,0x59,0x5c,0x7d,0x8d,0xe7,0x1c,0x89,0x7f,0xe1,0x02,0xd3,0xb0,0x46,0x6c,0xcf,0xde,0xf0,0x0b,0x00,0x43,0x8d,0xd6,0xe6,0xf7,0xc8,0x83,0x20,0x77,0x8b,0x9f,0x14,0xea,0x2b,0xb2,0xd2,0x41,0xfd,0x96,0x7c,0x0d,0x05,0xb9,0x5a,0xa0,0x83,0x50,0xde,0x0e,0xc6,0xa6,0x29,0x55,0x12,0x8e,0x2f,0x0a,0x5c,0xcd,0xae,0x92
.byte	0x76,0x84,0xc9,0x8a,0x81,0xe5,0x3e,0xf0,0xe6,0x5b,0xe4,0x21,0xfb,0x4c,0xb6,0x0a,0x7b,0x7f,0x7e,0xab,0xdc,0x15,0x44,0xf8,0xeb,0x23,0x21,0x31,0xef,0x98,0xec,0x84,0x69,0x34,0x29,0x99,0x03,0x8a,0x12,0x8e,0x28,0xdd,0x00,0x6a,0xa3,0xe7,0x08,0x17,0x35,0x2a,0x42,0x8a,0xcb,0x4a,0x7b,0x1c,0xd2,0x74,0x4f,0x6a,0x8c,0x85,0x1c,0xd6
.byte	0x05,0x3a,0xfd,0xdf,0x1c,0xa5,0x59,0xbb,0xdb,0xe3,0xa7,0x59,0xb1,0x67,0x3d,0xa4,0x71,0x4d,0x6c,0x99,0xe0,0xa7,0x8c,0xfa,0x96,0x1f,0x8d,0x0c,0xa7,0xc8,0xce,0xa3,0xbf,0x4d,0xc7,0xa9,0xb7,0xfd,0x04,0x58,0xcd,0xd7,0x20,0xb1,0xb9,0xf5,0x06,0x70,0x1b,0xdd,0xf4,0x1c,0xdc,0x32,0xa0,0x90,0x0d,0xb2,0x91,0x14,0x05,0xa2,0xf7,0xb7
.byte	0xb6,0xd2,0xf1,0x30,0x75,0xcc,0x78,0x0d,0x56,0x70,0x64,0x02,0xe7,0x83,0x97,0x65,0x63,0x4b,0x64,0xff,0x8b,0x62,0xc9,0xa4,0x6e,0x96,0xbf,0xd3,0xeb,0x74,0xc5,0x1f,0xdb,0x1c,0xf3,0xca,0x54,0x7d,0x8d,0xd9,0xec,0x18,0xd8,0x99,0xd1,0xa5,0x70,0x8a,0xc5,0xdc,0xa0,0xcb,0xb7,0x52,0xe3,0xe6,0x88,0x0c,0x5a,0x42,0xde,0xe6,0xd8,0xc4
.byte	0x39,0xe5,0x6c,0x0b,0xd4,0xa5,0x9b,0x51,0xa2,0x3d,0xc5,0xc7,0x17,0x17,0xb8,0xd8,0x09,0xad,0xeb,0x67,0x47,0xe0,0x88,0xef,0x1d,0x22,0x18,0x25,0xdc,0x32,0xb2,0xf7,0x47,0xc5,0xb3,0x0b,0x57,0x01,0x67,0xac,0xc3,0x9e,0xb0,0xa8,0xd7,0xce,0xb2,0xcd,0xea,0x3b,0x61,0xbb,0x24,0xad,0x91,0x7b,0xa2,0x9a,0xb3,0x63,0x56,0xe2,0x9d,0x69
.byte	0x9e,0xd7,0x5f,0x5f,0x47,0x9f,0xae,0xf6,0x09,0xb1,0x9e,0x22,0x35,0xaa,0x55,0x0b,0xfc,0x70,0x96,0xfd,0x53,0x8a,0x37,0xaf,0x2d,0xa2,0xc5,0x49,0x5b,0x1e,0x32,0x47,0x9d,0xc3,0xb4,0x46,0xf3,0x54,0xdb,0x3f,0xb9,0x69,0x9e,0x8b,0xad,0x11,0xb2,0x68,0xe8,0x27,0x0d,0xca,0x33,0x1c,0x86,0xb2,0x2c,0xaa,0xc2,0x15,0xf9,0x6e,0xed,0x30
.byte	0x71,0x08,0xeb,0x93,0x1d,0x16,0xc5,0x34,0x73,0x65,0x7a,0x19,0x2b,0xa7,0x3d,0xe6,0x88,0xb5,0x0f,0xa0,0x92,0x91,0x22,0x9d,0x01,0xf3,0xf4,0x57,0x9f,0xd9,0x23,0x1b,0xbd,0xd7,0xd5,0x11,0xc9,0x24,0xf6,0x36,0x30,0x30,0x69,0x95,0x17,0x48,0xf9,0x76,0x71,0xef,0xef,0xc0,0x00,0x9c,0x7d,0x87,0xdc,0xdc,0x1a,0x32,0x82,0x7a,0x13,0xc2
.byte	0x9f,0x53,0xc2,0x7d,0x4d,0xbf,0xbe,0xf5,0x9d,0xc8,0x81,0x5b,0x81,0xe9,0x38,0xb6,0xa5,0x40,0xa5,0xd4,0x6f,0x0c,0xea,0xf1,0x52,0x59,0x37,0x3b,0xc2,0xb2,0x5f,0x10,0xdf,0x22,0xf7,0x77,0xe8,0x66,0xb0,0x97,0x91,0x5f,0xc2,0x18,0x8d,0x17,0x40,0xd1,0x6d,0xde,0x6e,0xf0,0x6c,0x1f,0x4e,0x9b,0x15,0x83,0x9b,0x70,0x21,0x2b,0x98,0x46
.byte	0xbf,0xa5,0x82,0xac,0x63,0xac,0xd7,0x52,0xec,0x2c,0xf2,0xe4,0xe0,0x2a,0xbf,0x7e,0xa2,0xd2,0x9d,0x0d,0xf2,0x9b,0x79,0x5f,0x22,0xb0,0x6d,0x22,0x2e,0xed,0xe2,0x4f,0x73,0xc5,0x89,0xcc,0x4a,0xaa,0x9a,0x7e,0xab,0x95,0x25,0xa7,0x9d,0xf4,0xc2,0xe8,0x42,0x6e,0xd3,0xf9,0x25,0x54,0xb9,0x1f,0xa9,0x16,0x9c,0x22,0x7a,0xf0,0xa6,0xac
.byte	0x8b,0x9d,0xe6,0xe3,0x93,0x4e,0x65,0x3a,0x39,0x3e,0xf5,0x41,0x38,0x02,0xb7,0x37,0xd4,0xdc,0xea,0xc5,0x53,0x0e,0x52,0x85,0x96,0xc0,0xa7,0x21,0xbf,0xe7,0xca,0x12,0x1c,0x59,0x33,0xe4,0xd5,0x70,0x6b,0x25,0x54,0x24,0x58,0x48,0x1b,0x65,0x6e,0x7e,0xe6,0x84,0x39,0x38,0xbc,0xdf,0x96,0xbc,0x39,0xdf,0x8f,0x36,0x9e,0x3a,0xda,0x02
.byte	0x86,0xe2,0x9f,0xb7,0x3a,0xd0,0xdb,0xc2,0x5d,0xb0,0xde,0x31,0x73,0x43,0xe5,0x4b,0x6a,0xa1,0x6d,0xaa,0xca,0x34,0xfa,0xa9,0xaf,0xec,0x05,0x2a,0xdb,0x82,0xa1,0xdc,0xdc,0x3d,0xb5,0x92,0x42,0x28,0xdc,0x93,0xec,0xab,0x9b,0x75,0xae,0x7c,0xbf,0x9b,0x25,0x01,0xb1,0xc8,0x3b,0x47,0xb6,0xfd,0x11,0x6f,0x4b,0xaa,0x6f,0xdf,0x1f,0x15
.byte	0xc2,0xf3,0x87,0x4a,0xaf,0xf7,0x41,0x64,0x5a,0x19,0xa0,0xc4,0x4f,0x58,0xe8,0x19,0xe0,0x84,0x44,0xc7,0x65,0x0c,0xf1,0xff,0xcb,0x73,0xb2,0xac,0x25,0x28,0xe1,0xd4,0x03,0x16,0x3c,0x1c,0x24,0x3a,0xfc,0x2b,0x7e,0xcb,0xa3,0xba,0xb7,0x78,0x87,0xbe,0x95,0x06,0x27,0xb8,0x16,0x72,0xe4,0x24,0xa6,0x5d,0xe7,0x5e,0x93,0xa9,0x96,0xfd
.byte	0x01,0x1d,0xb8,0x7c,0x85,0x3c,0xe3,0xc9,0x56,0x68,0xcd,0xd9,0x79,0x97,0x50,0x39,0xfe,0x96,0x93,0x50,0xae,0xde,0xcd,0x8d,0xa0,0x38,0x31,0xba,0xca,0x21,0xff,0x19,0xea,0x44,0x95,0x4d,0xba,0xae,0xe2,0x62,0xd2,0x82,0x60,0x0c,0xb9,0x10,0x40,0x9a,0xaf,0x9b,0x17,0xcd,0xf3,0x26,0xec,0x38,0x13,0x18,0xd3,0xf2,0xd2,0x11,0xa6,0xc3
.byte	0x3c,0x3b,0xe8,0xa0,0x49,0xba,0x4e,0x07,0xec,0x44,0x75,0x1c,0xc9,0x2f,0x68,0x64,0x02,0x1d,0x14,0x35,0x80,0xd8,0xa8,0x53,0xde,0x44,0x65,0x72,0x37,0x28,0x61,0x5f,0xa1,0x58,0xea,0x17,0xb3,0x89,0x25,0xf7,0xcb,0x87,0xe6,0x43,0xc5,0xc3,0xf3,0xd1,0xf5,0x1f,0x18,0xe9,0xd1,0x05,0xd9,0x85,0x38,0xf0,0x5e,0x26,0x35,0xf2,0x72,0x92
.byte	0x34,0x2f,0xea,0xdd,0x7b,0x64,0xac,0x1d,0x78,0x41,0x56,0x83,0x7d,0x83,0x83,0x59,0xbe,0x9f,0x81,0x90,0x00,0x1f,0x04,0xd8,0xd8,0x8e,0xd9,0xeb,0x12,0x16,0x96,0x81,0x61,0x96,0xe8,0x7b,0x36,0x7b,0x26,0x9b,0x43,0x1e,0x0e,0xc2,0x59,0xdf,0x8f,0xb4,0x91,0x74,0x2e,0x1e,0x6d,0x20,0x70,0xe7,0x3c,0x39,0xe3,0xa8,0x62,0x66,0x32,0x63
.byte	0x7d,0x89,0xb6,0xad,0x69,0x38,0x2c,0x21,0xe5,0x02,0xcc,0x93,0x8a,0x65,0x71,0x65,0x02,0x5c,0xeb,0xc9,0x70,0xf3,0x81,0xce,0x65,0x37,0x22,0xb7,0x47,0x3c,0xd6,0x3d,0x29,0x65,0x29,0xba,0xf9,0xae,0xd9,0x1f,0xd7,0x38,0x88,0x95,0xa9,0x66,0xa8,0x77,0x75,0x4a,0xf9,0x2e,0xd9,0x63,0x75,0x80,0x90,0x82,0x39,0x8b,0x21,0x58,0xf4,0x2e
.byte	0x2d,0x1f,0x7f,0xcb,0x33,0xdb,0x9b,0x9b,0x31,0x21,0x4e,0x6e,0xdb,0x0f,0x1f,0x69,0x22,0x97,0x69,0xd7,0x7f,0x2e,0xd7,0xce,0x6c,0xe4,0xc0,0xe7,0x27,0x82,0xe6,0x8a,0xf8,0xae,0x46,0x2d,0x5a,0x45,0x82,0xce,0xb6,0x49,0x84,0x15,0x4a,0x54,0xa6,0x76,0xf3,0x29,0x28,0xc0,0x05,0x82,0xae,0x7d,0x85,0x41,0xb0,0x87,0x67,0x44,0x37,0x46
.byte	0x3e,0x47,0xbc,0x00,0x7c,0x05,0xd3,0xdc,0x9a,0x31,0x49,0xf8,0x48,0x99,0x57,0x4a,0x2b,0xe7,0xcf,0xb2,0xa7,0xf0,0xcf,0xc7,0xf5,0xfd,0x73,0x59,0xf1,0xe4,0x86,0xb5,0x5d,0xce,0x6d,0xbf,0xc6,0xe5,0xa9,0xca,0x75,0xe9,0x69,0xe6,0x09,0xab,0x66,0x17,0x09,0xe9,0xbc,0x14,0xd8,0x6f,0xe9,0xc2,0x87,0x39,0x2f,0x87,0x1e,0xb8,0x16,0x08
.byte	0x10,0xee,0x1c,0x2f,0x47,0x7d,0xa3,0x5b,0x1f,0x1f,0x5d,0x95,0xd0,0xa4,0xbb,0x08,0xc2,0x47,0xab,0x46,0x3c,0xbb,0xbe,0x3a,0x64,0x82,0x40,0x08,0x75,0x03,0x02,0x6e,0x6a,0xab,0x6b,0xd4,0x90,0xa7,0x28,0x7a,0xb4,0x8b,0x1f,0x6b,0xcc,0x16,0x30,0x16,0xf5,0xc6,0xd8,0x4a,0xed,0xc9,0xc7,0xac,0x0f,0x75,0x1b,0x13,0xe3,0x45,0x6d,0x22
.byte	0x7e,0x3d,0x59,0x55,0x87,0x8d,0x04,0xee,0x85,0xac,0x98,0x0c,0x52,0x5b,0xe6,0x92,0x04,0x31,0xdf,0x7c,0x44,0x4d,0x06,0xbe,0xb2,0x5a,0x95,0xef,0x29,0x75,0x9b,0xb2,0xe7,0xb8,0x83,0x18,0x82,0x23,0x4e,0x66,0xe5,0xdd,0x47,0xa1,0x6b,0x33,0x4e,0x9c,0x13,0x0e,0x0a,0x8a,0x5c,0xba,0x7b,0x2f,0x6c,0x72,0x78,0x86,0xd2,0xf8,0xbd,0x1b
.byte	0x4b,0x9e,0xe0,0x99,0x46,0x7f,0x24,0x0f,0x1b,0xda,0x85,0x87,0xe9,0xda,0x96,0x25,0xc6,0x81,0x77,0x8b,0x56,0xae,0x7a,0x9c,0x47,0x34,0xe1,0xac,0xf2,0xba,0x52,0x95,0xf8,0x56,0x26,0x66,0xf0,0x53,0xcc,0xc4,0x6f,0x46,0x94,0x10,0x22,0x69,0xb1,0x93,0x7b,0x51,0xb7,0xb8,0xdd,0x42,0x67,0x51,0x6d,0x9c,0xb2,0xbd,0xdb,0xdd,0x19,0xa2
.byte	0x25,0x13,0xfe,0x42,0xca,0x36,0xeb,0xce,0x15,0x41,0xe7,0x35,0xce,0xa8,0x45,0x56,0x58,0x9f,0x46,0xcf,0x11,0xe7,0xcc,0x40,0x54,0xe4,0x85,0x0d,0x73,0x36,0x7e,0xae,0x38,0x8c,0x56,0xab,0xf0,0x5f,0x5c,0xff,0x14,0x9b,0x46,0x1b,0x35,0xbd,0x03,0x0e,0x2f,0x9e,0xde,0xd8,0x82,0xfe,0xa0,0x09,0xb4,0xb4,0xbd,0x58,0xc0,0xe2,0x01,0xb1
.byte	0xca,0x5c,0x3d,0xc3,0x18,0x5e,0xc1,0xee,0x61,0x60,0x00,0xca,0x1e,0xf3,0x71,0xd8,0x15,0x37,0xf0,0x2e,0x13,0xa0,0xf7,0xac,0x73,0x4b,0xfb,0x6a,0x27,0x6b,0xde,0x69,0x3d,0x19,0x36,0x4b,0x63,0x55,0xae,0xd1,0x2b,0x66,0x69,0x0d,0x64,0xa7,0x86,0xfd,0x3a,0xb8,0xe6,0x87,0xaa,0x32,0x5f,0xbc,0xa7,0x67,0xde,0x7a,0xe0,0xdd,0xff,0x57
.byte	0x2c,0xc9,0x25,0x92,0x03,0x91,0xa8,0x0e,0x39,0xe4,0x9a,0xdf,0x21,0x29,0xc7,0xbc,0x93,0x01,0x2a,0x02,0xd8,0xaf,0xbc,0x20,0x57,0xc7,0x37,0x77,0xa7,0xad,0x5e,0x15,0x20,0xcf,0x4a,0x3c,0x22,0x1b,0x92,0xa9,0x05,0x91,0x70,0xb3,0x88,0x4e,0x97,0x58,0xf7,0x33,0x1a,0x05,0x33,0x57,0xdc,0xbb,0x2a,0xba,0xd0,0x22,0xac,0x40,0xbe,0x60
.byte	0xa2,0x89,0xe6,0x6c,0xf3,0x5d,0xef,0x58,0xb4,0x7c,0x4a,0x28,0xb8,0x16,0xd2,0xe0,0x49,0xf5,0xe8,0xaf,0x84,0x39,0xae,0x1e,0xa2,0x34,0x67,0x42,0x26,0x31,0x93,0x87,0x7a,0xd5,0xde,0x79,0xdb,0x4c,0x7e,0xcf,0x1f,0xef,0x9a,0x4c,0xb9,0x70,0xe2,0x72,0x9b,0xcd,0x30,0xe5,0xf1,0x84,0x44,0x5a,0xff,0x36,0xa2,0x37,0xe7,0x49,0x78,0x63
.byte	0xbe,0xe0,0x90,0xdf,0xef,0x9e,0xf3,0x55,0x9e,0x8a,0x51,0xe8,0xa3,0x32,0x2d,0xed,0xc8,0x99,0xf6,0x92,0xf9,0x62,0x74,0xa7,0x8d,0xcf,0xa5,0x09,0xb3,0x43,0xb9,0x18,0x70,0x59,0x4f,0xd2,0x7f,0x7e,0xce,0x1e,0x7d,0xe8,0xa9,0xb7,0x29,0x0f,0x86,0x8a,0xac,0x22,0x41,0x98,0xb2,0xc3,0x48,0x3b,0x60,0xcb,0x7b,0x1d,0xc3,0x5e,0x19,0x5b
.byte	0x31,0x57,0x12,0x09,0x41,0x54,0xf8,0x01,0x70,0x02,0x03,0x8a,0x6e,0x8e,0x5b,0x23,0xf3,0xd4,0x13,0xbf,0x51,0xba,0xf9,0x2d,0x6c,0xb9,0xb3,0x90,0xd0,0xa3,0x76,0xfb,0xef,0x85,0x17,0x8b,0x2c,0x05,0xa3,0x06,0x0a,0xaa,0xdd,0xbf,0xd4,0xcc,0xe4,0x96,0x19,0x7f,0x51,0xf6,0x7e,0xa1,0x2c,0x14,0x1c,0x21,0x99,0x28,0x3a,0x0e,0x36,0x1b
.byte	0xf1,0xd7,0x3e,0x29,0x94,0xa6,0x03,0xf7,0xe5,0x6f,0x1b,0x56,0xc8,0xfb,0x2d,0x4f,0x12,0x2b,0xc7,0x3a,0xec,0x5e,0xc8,0x88,0x1b,0xd8,0x65,0x21,0x04,0x0e,0xe2,0x95,0x6d,0x62,0xea,0xeb,0xee,0xbe,0x47,0x0a,0x90,0x26,0xe3,0x85,0xd7,0x1d,0xb5,0xd5,0x56,0x8b,0xc0,0x2f,0x7f,0x01,0xc8,0xac,0x90,0xc3,0x2d,0x10,0xf2,0x11,0x30,0x0c
.byte	0xa9,0x4d,0x13,0xde,0x65,0x6d,0x34,0x68,0x5d,0xad,0x3f,0x7a,0x56,0x3a,0x1f,0xb9,0xd6,0x7b,0x8f,0xe8,0x42,0x2a,0x16,0xb6,0x3f,0xf2,0x4f,0x14,0x8e,0x8e,0x29,0x88,0x68,0x1b,0x10,0x80,0x80,0x47,0x36,0xaa,0x82,0xf5,0xa8,0x97,0xc4,0xcb,0xc2,0xef,0xaa,0x9f,0xdc,0x96,0x4f,0x1f,0xaf,0x39,0x71,0x55,0x8f,0x3c,0xbf,0x26,0x91,0x46
.byte	0x38,0x59,0xa7,0xd1,0xb5,0x87,0xd6,0x81,0x71,0x17,0x83,0x05,0x40,0x9c,0xf3,0x33,0x4b,0x09,0x06,0xb1,0x69,0xfb,0x43,0x1f,0xef,0x9a,0xfe,0xc3,0x4e,0x4e,0x25,0xe1,0x3a,0xfb,0xf9,0xc9,0x97,0xe2,0x1c,0xa1,0x9a,0x06,0x6e,0xbb,0x16,0x4a,0x9f,0xf4,0x87,0x31,0x38,0x78,0xae,0x77,0x4c,0x42,0x28,0xc4,0x63,0xc0,0x49,0x37,0x4f,0xf9
.byte	0xeb,0x31,0x0d,0x3e,0x0c,0x8a,0xb7,0x17,0xa7,0x90,0x26,0xc2,0xea,0xa5,0x9d,0xe4,0x4d,0xc6,0x3a,0x33,0x2d,0x47,0x42,0x8c,0xeb,0x50,0xea,0xfe,0x74,0x43,0x06,0xcd,0xa5,0xb1,0x49,0xf0,0x98,0x91,0x25,0xf4,0x8d,0x06,0xd1,0xeb,0x56,0x2c,0xf9,0xc4,0x84,0x02,0x9e,0xf2,0x3a,0xfe,0xb4,0x39,0xce,0xee,0x85,0xb6,0x64,0x6c,0xbc,0x1f
.byte	0xe6,0x86,0x00,0xc3,0xa9,0xb4,0x53,0xdf,0x2d,0x7c,0xc6,0xde,0x2e,0x79,0x25,0x5c,0xbb,0xe5,0xbe,0x33,0xe9,0x58,0x49,0x35,0xbe,0xae,0xbc,0x06,0xdc,0x48,0x9d,0xc3,0x08,0x6f,0xe8,0xb8,0x48,0x67,0xea,0x1c,0x05,0xb4,0xf7,0xe3,0xcc,0xc1,0xb3,0xa8,0x61,0xcb,0xa8,0xf6,0x12,0x52,0x68,0x06,0x36,0x2b,0x15,0x43,0xc9,0x98,0xfe,0xe5
.byte	0x43,0x11,0x0d,0xc3,0x37,0x38,0x7a,0xcb,0x98,0x14,0xc1,0xaf,0x29,0x36,0x35,0x63,0x74,0x98,0xcf,0x0f,0x44,0xe4,0x6e,0xf7,0x3f,0x6e,0x15,0xe8,0xe9,0x93,0x7b,0x96,0x1b,0x84,0xe7,0x8b,0x83,0x30,0xa1,0xdc,0xc3,0xb8,0x18,0x2f,0xc5,0x34,0xd1,0xa5,0xb9,0xee,0x4a,0x04,0xbf,0x26,0x63,0x29,0xba,0x90,0xb5,0x7c,0x83,0x2b,0x1f,0xe8
.byte	0x5c,0x9f,0x23,0x40,0x7f,0x9c,0x2f,0x76,0x96,0xd6,0xd5,0x13,0xda,0x5c,0x81,0xa4,0x60,0x60,0xbd,0x5e,0xb3,0xd2,0x2c,0xaa,0x48,0x04,0x74,0x31,0x5d,0xbd,0x46,0xd8,0x8d,0x3f,0x62,0x2d,0x1e,0x17,0x97,0x08,0x71,0x06,0x1b,0x96,0x1b,0xd5,0x80,0xa6,0x41,0x06,0x10,0x6e,0x36,0xd4,0xfb,0x36,0x6d,0x96,0xb8,0x86,0x22,0x34,0xda,0x7e
.byte	0x6c,0x5f,0x3b,0x95,0x35,0x1b,0x42,0x3c,0xf2,0x9d,0xe3,0xe9,0x3f,0x44,0xd5,0x4c,0x60,0x55,0xae,0xbe,0x4f,0xf2,0xb3,0x84,0xa1,0x79,0xdf,0x86,0xf0,0x8f,0xad,0xa5,0xa3,0x4a,0xea,0x5d,0x68,0x34,0x17,0x4c,0xb7,0xd8,0x6f,0x67,0x22,0x85,0xe2,0x16,0xcf,0xba,0xee,0x92,0xeb,0x95,0x8e,0x67,0xb1,0xf0,0xbb,0xb0,0x34,0x2f,0x58,0x49
.byte	0x56,0x3e,0x81,0x31,0xb6,0xc3,0x2c,0xee,0x2b,0x85,0x72,0xbc,0xe9,0x20,0xaa,0x4e,0x34,0xb9,0x8b,0x32,0x2f,0x9e,0xd7,0x98,0x63,0x9d,0xfd,0x3a,0xe9,0x30,0x49,0x23,0x4a,0xb4,0xcb,0xc5,0xe5,0x78,0xcd,0x22,0x90,0xce,0x9f,0x35,0x13,0xda,0x8f,0x14,0xdb,0x36,0x0f,0x66,0x87,0x62,0x50,0xde,0x52,0x15,0x10,0x67,0x8a,0x5c,0xdb,0x76
.byte	0x51,0x7f,0x72,0x9b,0x8e,0x91,0x39,0xc8,0x3c,0x34,0x0f,0x3d,0x92,0x07,0xb8,0xef,0x2a,0x8b,0x59,0xbd,0x82,0xc1,0x5c,0x95,0x93,0x0d,0x3d,0x9b,0x51,0x53,0x38,0x6b,0xd0,0xe3,0x5b,0xbb,0xe5,0x6c,0xc0,0xb5,0x71,0xa8,0xd8,0x7d,0x5d,0xbd,0xfc,0x69,0xcf,0xcc,0xa1,0xcd,0x83,0x9d,0x8f,0x46,0x47,0xe7,0x36,0x19,0x9f,0x4d,0xda,0x9c
.byte	0xcb,0x2a,0x47,0x58,0x93,0xbb,0x64,0xa3,0x89,0x53,0xbf,0xc7,0xc2,0xe2,0x65,0x0f,0x4f,0x17,0xc6,0x4c,0x15,0xfe,0x4b,0x95,0xb2,0x79,0x4a,0xb8,0xf6,0xae,0xcc,0xba,0xc3,0x5d,0x18,0xb2,0x8e,0xd8,0x6b,0x43,0x1b,0x2f,0xe1,0x36,0xb2,0xa5,0x22,0xa0,0xc7,0xc0,0x26,0x8e,0x48,0x77,0x0c,0x14,0xdd,0xdc,0xde,0x71,0x98,0xce,0xdd,0x61
.byte	0x85,0xd9,0x23,0x42,0x7f,0x85,0xc8,0x06,0x81,0x3e,0xa2,0x0f,0x1e,0x3e,0xcf,0x33,0xef,0x43,0x6a,0xc7,0xee,0x3f,0x91,0x68,0x32,0x89,0xd9,0xed,0xdf,0x45,0x33,0x10,0xbb,0xd5,0xef,0x1d,0x3c,0x1e,0x26,0x21,0x4d,0x1a,0x06,0x98,0x60,0x71,0x7f,0xce,0x45,0x4e,0xe3,0x3f,0xfa,0xff,0xcd,0xe2,0x92,0x82,0x2e,0x83,0x69,0x9c,0xc6,0x5c
.byte	0x6e,0xb6,0xec,0x28,0xdc,0x7b,0xdb,0xf3,0x02,0x3a,0xf7,0xad,0x9b,0x7a,0x73,0xb2,0x07,0x70,0x76,0x9d,0xa2,0x11,0xcf,0x89,0xea,0xaf,0x6a,0xd2,0x15,0xeb,0x5a,0x99,0x1a,0x17,0x1d,0xce,0xc0,0x7f,0x50,0x26,0x84,0x07,0xd7,0x7e,0x33,0x27,0x74,0x84,0x18,0x32,0x86,0x32,0x34,0x28,0xe8,0x45,0x21,0xb7,0x26,0x3b,0x11,0xbb,0x9a,0x8b
.byte	0x46,0x8e,0x27,0xf8,0x62,0xb5,0x98,0x6e,0x03,0xee,0x9e,0xcb,0xbc,0x74,0xbe,0x63,0x7a,0x86,0xe5,0x75,0xeb,0x7f,0x14,0xa6,0x96,0x76,0x5a,0x46,0xa9,0xda,0xf1,0x4e,0x0e,0x90,0x59,0x56,0x4a,0x48,0x2d,0x91,0xbe,0x78,0x5b,0xfb,0xf7,0xea,0xab,0x1c,0xc0,0x0c,0x5d,0xba,0xb4,0x7b,0xc7,0x21,0xb1,0xc9,0xa3,0x20,0xe6,0xae,0xee,0x0e
.byte	0xf0,0x3b,0x44,0xd6,0xaa,0x57,0x88,0x1f,0x76,0xc8,0x43,0x07,0x91,0x71,0xa5,0xcc,0x04,0x38,0x01,0x13,0xa6,0xea,0x18,0x48,0x8f,0x09,0x8d,0x37,0x8b,0x6f,0x35,0x36,0x51,0xc6,0x30,0xca,0x9e,0xe2,0xaf,0x0c,0x26,0x14,0xe3,0xbf,0xea,0x0e,0x14,0x88,0x97,0xcc,0xf6,0xc1,0x8f,0xad,0xef,0x2d,0xc1,0x0f,0xad,0x45,0x12,0x7a,0xe6,0x37
.byte	0x97,0xcb,0x34,0x83,0xd8,0xef,0x34,0x2a,0xce,0xd0,0x21,0x8a,0x7d,0x87,0x7a,0x66,0xf7,0x1c,0xdf,0xa0,0x3f,0xa0,0xf6,0xb3,0x24,0xee,0x6e,0x21,0xe9,0xc3,0x73,0xe4,0xd9,0xc6,0xf6,0xf6,0xac,0x25,0xb7,0xb5,0x64,0x7f,0xcc,0x88,0x3e,0x98,0xe1,0xef,0xa9,0xd2,0x03,0x10,0x4b,0xa3,0xbc,0x3c,0x24,0xfc,0x41,0x36,0x30,0x2d,0xca,0x17
.byte	0x35,0xd6,0x17,0xa2,0x2b,0x48,0xed,0xd3,0xd7,0x18,0x4f,0x45,0xe9,0x59,0x03,0x35,0xa0,0x80,0x75,0x17,0x48,0xd5,0xea,0x07,0x7a,0x6c,0x3f,0x7a,0x2c,0x02,0x0a,0x7f,0xb5,0x17,0xea,0xf4,0xf6,0xb5,0xf4,0x81,0xba,0x69,0x44,0x81,0x6b,0xff,0xb2,0x43,0xae,0x3d,0x37,0x81,0x91,0x3f,0x6a,0x70,0x35,0x2d,0x06,0x9d,0xa8,0xb5,0xb8,0xc7
.byte	0x19,0x3a,0x5f,0x59,0x79,0x0b,0x62,0x23,0xa4,0x5b,0x46,0x7b,0x17,0x82,0x19,0x87,0xe8,0xdf,0x09,0xb7,0x50,0x7e,0x40,0xe3,0x71,0x2d,0x09,0xde,0x69,0x2e,0x6c,0x35,0x5c,0x44,0xae,0xb7,0x05,0xb8,0x7e,0xb4,0xe4,0x34,0x05,0x1f,0xd2,0x1f,0xe5,0x79,0x2a,0x15,0xf8,0x8f,0x02,0xc7,0xc8,0x1e,0xe6,0x12,0x83,0x08,0x9c,0x7a,0x2f,0xc6
.byte	0xc9,0x15,0x0f,0x0f,0x0f,0xa9,0x53,0x16,0x19,0x5b,0x74,0x58,0x6c,0xac,0x21,0x72,0x7f,0xa1,0xae,0xbc,0x34,0x76,0xa6,0x9b,0xbe,0x0f,0x13,0x55,0x50,0x5a,0x8b,0x9e,0xb3,0xf3,0x9e,0x8b,0x61,0xbe,0xb4,0x09,0x71,0x61,0xf0,0xd6,0xaa,0x8c,0x0d,0x0c,0x66,0x31,0x88,0xe3,0x71,0x6a,0xb5,0xaa,0xc0,0x9b,0xce,0x0d,0x79,0x90,0xc1,0x0a
.byte	0xf9,0xfe,0x4d,0x49,0xd0,0x5a,0x63,0xf1,0xfc,0x47,0x71,0x9e,0xbb,0xd1,0x2c,0xef,0xfe,0x90,0x28,0x75,0x82,0xf6,0xa5,0x95,0xea,0x65,0xfa,0xe8,0x04,0xcd,0xb4,0xe1,0x0d,0xb2,0xac,0xd5,0x12,0xf5,0x17,0xbb,0x3b,0x2e,0x52,0x9e,0x7b,0xe7,0x8e,0x86,0x03,0xce,0x77,0x01,0xf0,0x4f,0xb5,0xf7,0xef,0x8b,0x37,0x5e,0x97,0x80,0xbb,0x2b
.byte	0xcf,0x9a,0x63,0x18,0xc5,0x0c,0xfb,0x3c,0x91,0x9c,0x37,0x90,0x76,0x71,0x62,0xbc,0x80,0x40,0x1a,0x74,0xb8,0x1b,0x61,0xb1,0x89,0x4d,0xf7,0x8d,0xd4,0x46,0xef,0x1f,0x3b,0xac,0xe8,0x41,0x62,0x8e,0xea,0x2b,0x56,0x22,0x25,0x37,0x70,0x53,0xcd,0x8f,0x57,0xfa,0xad,0x00,0xc5,0x0c,0x9e,0x57,0xde,0x50,0x07,0x8d,0x80,0xbf,0x22,0x5d
.byte	0x4a,0xbd,0x6a,0xcb,0xfc,0x6f,0xd1,0x56,0x8f,0xd5,0x34,0x8a,0xe6,0xe9,0xa0,0x00,0x06,0x12,0xd8,0xb1,0x49,0x0a,0xbb,0x87,0xe5,0xca,0x75,0x11,0x4c,0x85,0x60,0x77,0xc0,0x90,0x1c,0x14,0x38,0x38,0x3e,0x4f,0xff,0xbf,0xfc,0xa1,0xa1,0xe7,0xb0,0x5d,0xd8,0x1f,0x33,0x07,0x5f,0x04,0x4f,0xc7,0x93,0xc6,0xcc,0xe3,0x01,0xd0,0x43,0xe1
.byte	0xd9,0x00,0xc5,0x9f,0x79,0xab,0xfc,0xe9,0x55,0x51,0x03,0x0c,0xe1,0x73,0xd6,0x09,0xe3,0xb9,0x76,0x72,0x77,0x4c,0x1b,0x7c,0x57,0x1e,0x7f,0x5f,0x02,0x83,0xa3,0xc6,0xde,0x23,0x85,0x76,0x1a,0xbf,0x48,0xc8,0x02,0xdb,0x31,0x30,0x95,0x85,0x68,0x8a,0xf6,0xe9,0x48,0x7f,0xc9,0x26,0xab,0x68,0x36,0x9f,0x1c,0xf0,0x90,0xbc,0x4a,0x68
.byte	0x94,0xf8,0x7f,0xae,0xa9,0x3b,0x5b,0x63,0x9a,0xcd,0xe3,0xf0,0xac,0x9f,0x6f,0x78,0xa0,0x67,0x58,0xd8,0x2c,0x71,0x8a,0x14,0x31,0x07,0x95,0x0c,0x38,0xa4,0x53,0x33,0x60,0x23,0x21,0x87,0x6b,0x4f,0xf9,0xa8,0xb8,0xfc,0x8e,0xf1,0x3a,0x03,0x0b,0x03,0x02,0x33,0xbc,0x6a,0xb9,0x8e,0x41,0xc8,0x38,0xd8,0x83,0x30,0x6a,0x61,0x5c,0xcf
.byte	0x49,0xdd,0xd7,0xda,0x2c,0xaf,0xc4,0x68,0xad,0x07,0x9c,0xd4,0xaf,0x94,0x64,0xcf,0xe1,0x9b,0x37,0x50,0x65,0x03,0x20,0x3c,0x34,0x43,0xe9,0xb0,0x9b,0xba,0xb1,0x9a,0x3e,0x10,0x99,0x8f,0x93,0xb7,0x3d,0xac,0xbd,0xab,0xa8,0xfa,0x74,0x90,0xe1,0x38,0xe4,0xf3,0x47,0xfc,0xad,0x8b,0xb4,0x98,0xe4,0x65,0xe9,0xd9,0x8a,0x21,0x81,0x4f
.byte	0x0c,0xd7,0xb1,0x84,0xb9,0x69,0x68,0x64,0xa3,0x1f,0x25,0x84,0x5f,0xf7,0x3f,0xca,0x52,0xff,0xda,0xc9,0x3d,0x5e,0x8b,0x57,0xd3,0x9a,0x1d,0xb7,0xae,0x90,0xa4,0xc3,0x78,0x68,0xfd,0x80,0x3f,0xfd,0x5c,0x09,0x83,0x5d,0xc2,0x48,0xd8,0x84,0xeb,0x8a,0xfe,0xbe,0x30,0x12,0x79,0x54,0x5f,0x7f,0x6e,0x4b,0x8a,0x1e,0xcb,0xcd,0xed,0xb6
.byte	0xe9,0x6d,0x8a,0x1f,0xdc,0xb1,0x46,0xab,0xdc,0x0d,0xbf,0xda,0xd9,0x39,0x3b,0xd2,0x81,0x00,0x83,0x77,0x32,0xf7,0xdf,0x0e,0x31,0x5d,0x1d,0x6c,0xa7,0x4e,0x54,0xa8,0xac,0x81,0x8c,0xb6,0xa5,0x89,0x02,0xd7,0x2e,0xfd,0x26,0xa3,0x9e,0xcf,0xdb,0x1f,0x5a,0xf3,0x54,0xac,0xe5,0xd0,0x1f,0x9b,0xa7,0xab,0x28,0xcc,0x66,0xd3,0xbc,0x4c
.byte	0x54,0x1a,0x54,0x73,0x78,0xde,0x08,0xd5,0xa5,0x08,0xdc,0x00,0x09,0xc5,0x37,0x61,0x1a,0x98,0x12,0x84,0x2d,0xff,0xc3,0x25,0x62,0x93,0x83,0x05,0x66,0x3d,0xfb,0x1d,0x54,0x08,0x8a,0x50,0x03,0xc4,0xc4,0x6e,0xfa,0x16,0x83,0xbb,0x27,0xf1,0xb7,0x31,0x92,0x64,0x76,0xbc,0xf0,0x44,0x62,0xe9,0x5e,0x15,0x94,0xdc,0xe9,0xf3,0xf8,0x20
.byte	0x93,0x4d,0x11,0xa2,0xc8,0xde,0x83,0xe6,0x75,0x63,0xfe,0x13,0x75,0x0f,0x79,0xd1,0x3d,0x75,0xb7,0x43,0x62,0x57,0x8d,0x96,0x9c,0xa3,0xc4,0xb2,0x84,0x6a,0x14,0x6e,0x17,0x32,0x09,0x76,0x95,0xbb,0xd6,0xc1,0x2e,0xdc,0x8c,0x73,0xd7,0xad,0x5a,0x41,0x8b,0xb3,0x7e,0x8d,0x90,0xec,0xf5,0xa0,0x46,0x90,0x4c,0x52,0xec,0x97,0xc6,0x98
.byte	0x7d,0x19,0x77,0xa0,0x99,0x85,0x11,0x26,0x77,0x26,0xf9,0xac,0xe3,0x81,0xcf,0x7d,0x22,0xc8,0x00,0x3d,0x5b,0xee,0xa5,0xf8,0x6d,0xfe,0x47,0xe4,0xef,0x60,0xcc,0xd0,0x33,0xf7,0x5b,0xed,0xbd,0x82,0xc9,0xa8,0x41,0xb8,0x47,0x34,0x9f,0x62,0xb2,0x67,0x62,0xb0,0x3a,0x27,0x95,0xe1,0x22,0x76,0x98,0x0f,0x35,0xaf,0xfc,0x4d,0xc7,0x92
.byte	0x92,0x7e,0xaf,0x3b,0x3a,0x36,0x5e,0x5c,0xbf,0x43,0x02,0x66,0x5a,0x30,0x78,0x82,0x52,0x20,0x98,0xd6,0xa1,0xe9,0x9a,0x61,0x54,0x0b,0x74,0x85,0xb5,0x99,0x69,0x9f,0x9b,0x3b,0x2f,0x49,0xec,0xb3,0x18,0x0c,0x4a,0x53,0x20,0xd7,0x80,0x7b,0xd4,0x20,0x21,0x32,0x89,0x08,0x81,0x50,0x2b,0x16,0x8d,0xbb,0xe6,0xbb,0xc7,0x74,0x80,0x67
.byte	0x47,0xf1,0x06,0x68,0x02,0x37,0x31,0x00,0x50,0x8b,0xe2,0x44,0x85,0x2e,0x39,0x54,0xda,0x26,0x7b,0xe1,0xb0,0x23,0xd7,0x0c,0x3c,0x3b,0x81,0x9b,0xa6,0xbe,0x24,0xfd,0x09,0x73,0xbe,0xc3,0x2f,0xa0,0x7b,0x85,0x5b,0x1b,0x55,0x4e,0x9e,0x38,0x80,0x61,0xd7,0xe8,0x9b,0xec,0x88,0x00,0x6a,0x64,0x1b,0xd5,0x65,0x20,0x2a,0x62,0x64,0xbc
.byte	0x21,0xca,0xce,0xc3,0xeb,0x2d,0x2b,0x5c,0x4d,0xb8,0x7c,0xb5,0xbe,0x98,0x0d,0x5b,0x88,0x23,0x60,0xff,0xbe,0x0a,0xb6,0xdd,0xdf,0x28,0xd5,0x2c,0xe5,0x9d,0xb5,0x29,0xea,0x6c,0x3a,0xf4,0x78,0x91,0xa3,0xb2,0xab,0x12,0xf9,0x90,0x96,0xc9,0xa4,0xfc,0x4d,0x28,0x2b,0x0c,0x28,0x8b,0xb7,0x8b,0x36,0xd6,0x80,0xbf,0x07,0x09,0xf9,0x62
.byte	0x32,0xc0,0x50,0x60,0xd9,0x73,0xe3,0xbe,0xfa,0xa6,0x78,0x48,0x47,0xd7,0xb5,0x39,0xd8,0x04,0x6d,0x79,0x98,0x2e,0xd6,0x3a,0xe5,0xc9,0x01,0xd0,0x00,0x2e,0xd2,0x8b,0xd7,0x1f,0xf1,0xba,0xd4,0x0e,0x9f,0x9d,0xab,0xbf,0x2c,0xe1,0x75,0xf6,0x9c,0xc0,0xae,0x73,0x2b,0x58,0xcb,0x6d,0x46,0x6d,0x11,0xb7,0xce,0xc7,0xef,0x34,0x2c,0x11
.byte	0x93,0x3c,0x17,0xd9,0x3e,0xad,0xc9,0x4c,0xb3,0xd0,0x0a,0xd0,0xfe,0xf3,0x9d,0xc5,0x43,0x03,0xa9,0x78,0x4a,0x42,0x7f,0xfb,0x75,0xd2,0x85,0xfb,0xe7,0xe6,0xa9,0x48,0x2f,0xa6,0xc3,0x16,0xe2,0x2a,0x9d,0x0d,0xcb,0x2e,0x8b,0x75,0xa8,0x14,0x3a,0x2e,0xb1,0xff,0x58,0x1d,0xa8,0xa6,0xc0,0xf6,0x17,0xda,0xc1,0xce,0xaf,0x08,0xa9,0xc2
.byte	0xa3,0xc1,0xab,0xb6,0xe8,0x10,0x57,0x8a,0xce,0xc0,0x03,0x5c,0x53,0x5c,0x02,0x5d,0xcf,0x5c,0x65,0xc6,0x47,0x3c,0x62,0x0e,0xa3,0xfc,0xe2,0xae,0x10,0x55,0x4a,0xb4,0x27,0xe8,0x59,0x5e,0x45,0xa9,0xbb,0x21,0x10,0x91,0x46,0x1f,0x50,0x3b,0xc6,0x8c,0xa1,0x8a,0xee,0x5e,0x6e,0x32,0xe6,0x42,0x40,0x79,0x7f,0xbb,0xb3,0x5b,0x05,0xde
.byte	0xe0,0xf6,0x7f,0x3d,0x37,0xe6,0xc3,0x3b,0x40,0xc9,0xe0,0x42,0x36,0xd0,0x0e,0x13,0x32,0x3e,0x48,0xce,0xd8,0xa2,0xef,0xae,0x93,0x66,0x7d,0xde,0xb9,0xdd,0x60,0x15,0x53,0xf2,0xd9,0x90,0x3d,0x38,0x8c,0xa6,0x34,0x44,0xb5,0x6c,0x74,0x7d,0x9d,0xe7,0xd0,0xef,0x6c,0xd6,0xfe,0x9b,0x79,0x4e,0x79,0x5e,0x48,0xef,0x93,0xb2,0x81,0x0b
.byte	0x2b,0xee,0x83,0x69,0x3d,0x15,0x8c,0x27,0x69,0x6f,0xca,0xbf,0x75,0x29,0x37,0xc6,0xe6,0xca,0xb2,0x70,0xd0,0xaf,0xc8,0x5e,0x69,0xf1,0x6b,0x2d,0x0d,0xe7,0xe9,0xbf,0x07,0x52,0xe5,0xac,0x98,0xcf,0xcf,0xd6,0xdd,0x7c,0x2b,0xfc,0x8f,0xd2,0x5f,0x81,0x4b,0x1b,0x7b,0x2d,0x84,0xe2,0x69,0x96,0xcb,0xa2,0x59,0x10,0xba,0xda,0x51,0x11
.byte	0xeb,0xc3,0x4f,0x10,0xbf,0x8e,0x5b,0xbb,0xa3,0x29,0xe9,0xd8,0x0e,0x71,0xa0,0x1b,0xff,0xee,0x36,0x8c,0x00,0x83,0x6b,0x32,0xfe,0x05,0xeb,0x89,0x8f,0xed,0x48,0x22,0xe1,0x76,0x0a,0xac,0xae,0x3c,0x24,0x54,0x84,0xc2,0x0f,0x79,0x33,0x2b,0x49,0x35,0x1c,0x84,0x5a,0xca,0x92,0x6c,0x1f,0x78,0x15,0x5a,0x36,0xad,0xd5,0x1d,0x9d,0x10
.byte	0xc1,0x5f,0x7c,0x61,0x60,0xba,0x2e,0xe6,0x9b,0x34,0x02,0xe9,0x68,0x1c,0xfb,0xbf,0x02,0xdc,0x79,0x57,0x1c,0x0f,0xc8,0x8c,0x2a,0x66,0x2a,0x50,0xaa,0x81,0x4e,0x1f,0xa8,0x2d,0xe4,0x61,0xe8,0x43,0x84,0xcb,0xda,0x96,0xf9,0x4a,0xd0,0x8f,0xe1,0xd7,0xc4,0x05,0xf5,0x76,0xfa,0x47,0x7a,0x07,0x1a,0x77,0xbb,0x63,0xb3,0x3a,0x85,0x3b
.byte	0x0d,0x32,0x4f,0x14,0x15,0x02,0x5b,0x9c,0xbc,0xc2,0x12,0x90,0x0f,0x7b,0x94,0x27,0x5f,0x70,0x23,0xd8,0x5d,0x54,0xc4,0xca,0x6a,0x69,0x9e,0xd1,0xb3,0x2a,0x75,0x1a,0x07,0x9c,0x20,0xf6,0x76,0x22,0x4d,0x09,0x30,0x24,0x3f,0x3b,0xe5,0xcb,0x4b,0x5a,0x03,0x2d,0xe8,0xbe,0xed,0xf0,0xe3,0x91,0xf2,0x6c,0xb8,0x02,0x2d,0x6c,0x7a,0xa6
.byte	0xc1,0x8e,0xa7,0xbb,0x73,0xdf,0x40,0xa5,0x60,0x91,0xbf,0xbe,0x28,0x0b,0x37,0x2e,0x5f,0x4b,0xcd,0x14,0x4d,0x2d,0xfc,0x5e,0x43,0xb5,0x78,0x8d,0xea,0xa0,0x86,0x54,0x4f,0xb6,0x25,0x40,0x39,0x3f,0x9c,0x7a,0x26,0x74,0x88,0x42,0x53,0xb0,0x3b,0x81,0x75,0x04,0x67,0x41,0x65,0x66,0x2c,0xdc,0xe9,0xf0,0xb3,0xab,0x2a,0xa5,0xf3,0xef
.byte	0xfa,0xc5,0x10,0x63,0xe2,0x70,0xb5,0x29,0x60,0x86,0x9e,0xb9,0x0b,0xe2,0xc4,0x05,0xa9,0x3c,0x1b,0x60,0x15,0x6b,0x2f,0x74,0x93,0x5e,0x70,0x9a,0x56,0x6a,0xc4,0x92,0x49,0xaa,0x95,0x51,0xc4,0xba,0xfd,0xf6,0x2d,0x36,0x3e,0x66,0xbd,0x74,0xbc,0x2e,0xb3,0xad,0xa1,0x41,0x50,0x33,0x79,0x84,0xac,0x21,0x7a,0xfc,0x3a,0x8e,0xdb,0xcc
.byte	0x27,0xf6,0x2c,0x5c,0x23,0x38,0x73,0xd5,0xaf,0xc9,0x2d,0x9c,0x18,0x58,0xdf,0x8f,0x89,0x9d,0xdd,0x00,0x3c,0x5f,0x23,0x00,0x6e,0x66,0x1d,0xf3,0x1c,0x40,0x9d,0x43,0xb0,0x74,0xf1,0x41,0xa5,0x77,0xcb,0x8d,0x5b,0x94,0x68,0x95,0xb6,0x0e,0xd4,0x4d,0x47,0x9b,0xd2,0xcd,0x9b,0x94,0xa4,0x28,0xf9,0xf0,0x3d,0xcf,0x89,0xb1,0xc3,0x73
.byte	0x84,0x15,0xb6,0xc8,0x6b,0xf1,0xb1,0xdc,0x1b,0x1a,0x6f,0xb5,0x73,0x87,0x8b,0x63,0xbf,0x4b,0x25,0x9b,0xe4,0xdd,0x44,0xed,0xe7,0x0e,0x6f,0x03,0xae,0xa1,0x5e,0x1f,0x5f,0xa7,0xa4,0xed,0x69,0x7a,0x91,0x6d,0x55,0xac,0xce,0x18,0x32,0x17,0x78,0x49,0x9f,0x1e,0x9c,0xd2,0x7b,0x1f,0x74,0x60,0xa5,0x64,0xb1,0x99,0xe6,0xc5,0x0d,0x69
.byte	0xfa,0xb2,0xd9,0x05,0x61,0x71,0xa4,0x6f,0xc2,0xb6,0x91,0x0e,0x6c,0xf2,0xa6,0x6c,0xea,0x8e,0x94,0x8b,0xac,0xa7,0xfe,0x70,0x8e,0x8d,0xc2,0x85,0xa6,0xa7,0x8e,0xe8,0xfa,0xbc,0xa1,0xaf,0x0e,0xa9,0x06,0xa4,0x9a,0xb0,0x23,0x93,0xbc,0x93,0x2d,0x97,0x42,0xe2,0x0d,0x3a,0x65,0xb4,0x60,0x5b,0xeb,0xa1,0x20,0x8a,0xdc,0x17,0x6b,0xc5
.byte	0x19,0xc3,0x67,0xbf,0xae,0xf7,0xb9,0xb1,0x88,0x7f,0xe5,0x1b,0xc2,0x61,0x97,0xa0,0xd3,0x64,0x74,0x6b,0x7a,0x46,0x39,0x3f,0xc8,0xd3,0x53,0x79,0x74,0x4e,0x1e,0x63,0x91,0xc5,0x4a,0x70,0xb0,0x05,0x35,0x19,0xc2,0x26,0x54,0x44,0x3b,0xa9,0x12,0x40,0xd0,0x21,0x19,0xf3,0x8d,0xc7,0x2b,0x88,0x9a,0xec,0x41,0x8f,0x4f,0x23,0x19,0x1a
.byte	0xf3,0x1d,0x0a,0x88,0x0f,0xa7,0x02,0xd4,0x78,0x88,0xe6,0x43,0xb6,0x9e,0x07,0xdf,0x6a,0x1f,0x41,0xbb,0x3e,0xea,0x15,0xff,0x66,0x4c,0x7a,0x8b,0xee,0x27,0x47,0x81,0x81,0x95,0xa2,0x22,0xb4,0x9f,0x1c,0x09,0x1c,0xfc,0x0a,0xef,0x88,0x7f,0x59,0x60,0x91,0x6a,0xe4,0x92,0x8c,0x02,0x54,0xc9,0xee,0xc7,0x5e,0xd1,0xbf,0xc9,0x41,0xde
.byte	0x2f,0xa3,0x22,0x07,0x1d,0x8c,0xe1,0x04,0x59,0x94,0x75,0x3e,0xee,0x56,0x62,0x07,0x80,0x18,0x60,0x78,0x0e,0x55,0x06,0xec,0xe1,0xa5,0xf6,0x21,0x7e,0xf9,0x37,0xab,0x6a,0xed,0x07,0xcb,0xbf,0xa2,0xab,0x50,0xee,0x1f,0x2f,0x54,0x2b,0x82,0x93,0x59,0x03,0x35,0xd9,0xe8,0x2b,0xa6,0x03,0xc2,0xef,0x37,0x85,0xfc,0x89,0x06,0x30,0xe0
.byte	0xc2,0x00,0xc4,0xaf,0x59,0xb6,0x31,0x52,0x37,0xa4,0x6c,0xdb,0x1b,0x20,0x87,0xf0,0xa4,0x15,0x4b,0xa8,0xd9,0x7e,0x1b,0x96,0x00,0x07,0xf4,0x86,0x07,0x14,0x55,0x70,0x37,0xe3,0xe3,0xf0,0xeb,0xd6,0xf1,0xe0,0xe9,0x6c,0xdf,0x3d,0xaf,0x86,0xb8,0x00,0x9b,0xdf,0xc6,0x5c,0xd2,0x53,0xcb,0xcf,0x63,0xcc,0x3e,0x6d,0x62,0xeb,0xe6,0x97
.byte	0xd8,0x54,0xed,0x36,0xe4,0xed,0x69,0xaa,0x10,0x83,0xde,0x16,0xfd,0xcc,0xd6,0x24,0xb9,0x3c,0x4f,0x99,0x81,0xc2,0x23,0x16,0x91,0x5d,0x9f,0x46,0xa5,0xdd,0xb4,0x8a,0xe1,0x07,0x89,0x84,0x2e,0x62,0x48,0xf6,0x1a,0x17,0x7b,0xc8,0xf7,0xb4,0x3d,0x9e,0x82,0xe3,0xe3,0xcf,0x0b,0xd9,0x52,0x90,0x61,0xd8,0xdf,0x9e,0xc4,0xc7,0x7c,0xfa
.byte	0xcf,0x09,0xd2,0x94,0x86,0x37,0x94,0xaf,0x7e,0x0a,0x9d,0x16,0xee,0xad,0xfb,0xa2,0x9e,0x2d,0x2f,0xad,0xd5,0xc2,0xf9,0x91,0xf8,0x7e,0x2b,0xb8,0xb2,0x60,0x3c,0x0a,0x89,0x53,0x07,0x87,0x3b,0x83,0x70,0xee,0x71,0xa3,0x94,0x0b,0x77,0x50,0xeb,0xcc,0x23,0xf0,0xbe,0x95,0x51,0x54,0xd2,0xd6,0xd2,0x09,0xa5,0x19,0x3d,0x4e,0xec,0xe3
.byte	0x88,0x71,0xa7,0xb1,0x10,0x03,0x7e,0xc4,0x92,0x2a,0xe7,0x99,0x75,0xff,0xae,0x10,0x3d,0xbb,0x33,0xc9,0x7f,0xc2,0xe6,0x3c,0xc4,0xe7,0xba,0x37,0xba,0x68,0x69,0x92,0x4a,0xfb,0x32,0x3b,0xb5,0xde,0xdb,0x91,0xd0,0x8e,0x77,0xf2,0x1e,0x2d,0x25,0xb4,0xa0,0x42,0xef,0x78,0x6c,0x75,0xcb,0xa0,0x73,0xdf,0xde,0xd8,0x26,0xfe,0xe3,0xf9
.byte	0x74,0xe7,0xa0,0xd2,0xbd,0x6c,0x99,0x8d,0x07,0xf2,0xf8,0xff,0x36,0x2d,0x8e,0xda,0x5e,0x5c,0x47,0x06,0xf8,0x08,0x33,0x1d,0x93,0xcf,0xc3,0x1a,0x20,0x86,0xb6,0x8e,0x44,0x10,0xbc,0xba,0x89,0xfc,0xa3,0x57,0x92,0x2c,0x28,0xa1,0xd0,0xab,0xdc,0xba,0x0a,0x7e,0x9d,0xd2,0xfd,0x09,0xd3,0x87,0x6c,0x06,0x44,0x17,0x73,0xfe,0xc9,0x8b
.byte	0x52,0xd3,0x09,0x60,0x14,0x03,0xb1,0x79,0x4c,0x9c,0xc4,0xec,0x42,0x4c,0xd3,0x21,0xe5,0x34,0x21,0x38,0xdd,0x12,0x95,0xd4,0x20,0x50,0xef,0x5f,0x46,0x4f,0x37,0x65,0xd5,0xf1,0xb2,0x2c,0x6c,0x9a,0x06,0x28,0x77,0xbf,0xe3,0xec,0xec,0x2b,0xcb,0x2c,0x8b,0x62,0x2e,0x39,0xaa,0x28,0x0b,0x51,0x01,0xa5,0x02,0x06,0x66,0x4a,0x67,0x0c
.byte	0x96,0xa3,0x12,0x74,0x94,0x2c,0x0f,0x23,0xa3,0xea,0xda,0x1a,0x6d,0x54,0x30,0x33,0xc8,0x33,0x0a,0xfb,0x25,0x2a,0x8b,0x9a,0x87,0xd9,0x9d,0x37,0x4c,0x41,0x3b,0xe5,0x4a,0x81,0x92,0x40,0x38,0x18,0x82,0x13,0x54,0xde,0x56,0x11,0x63,0xf3,0x09,0x61,0x3b,0xdd,0x0c,0x71,0xe8,0x4f,0xc2,0x9a,0x77,0x2f,0xeb,0xf1,0x39,0x1c,0x10,0x0e
.byte	0x01,0xaf,0x92,0x34,0x9a,0xb6,0x7b,0x79,0x86,0x0c,0xf1,0x53,0xb6,0x59,0xbd,0x6d,0x79,0x6e,0x37,0x11,0x25,0x67,0x95,0x31,0x4f,0x43,0xdf,0xb7,0x4b,0x80,0x8d,0x07,0x3c,0x49,0x73,0x8a,0x72,0x61,0x02,0x0f,0x2f,0x13,0xed,0x91,0x10,0xf6,0x08,0xf3,0x50,0x4a,0xd4,0x36,0xcb,0x52,0xb3,0x3b,0xe6,0xef,0x85,0xe9,0xe0,0xad,0x0d,0x3d
.byte	0x84,0x07,0x70,0xdf,0x16,0x47,0xeb,0x26,0x19,0x27,0xaf,0x7a,0x9f,0x2f,0x2b,0x6d,0xbb,0x37,0x68,0x8e,0x19,0x46,0x5a,0x65,0x0d,0x0a,0x67,0xd8,0xe2,0xc2,0xcd,0x49,0xf6,0xc2,0x27,0xac,0x12,0xea,0x1f,0x81,0x60,0xac,0x8b,0x5d,0xcc,0x9a,0x5b,0xec,0xc3,0xcb,0x85,0x0d,0xef,0xa6,0xd5,0x33,0xb3,0x67,0x73,0x3f,0xc9,0x90,0x25,0x3e
.byte	0xe6,0x7c,0x41,0x59,0x83,0xf7,0x90,0x4a,0xbf,0x14,0x72,0x11,0xf2,0x3a,0x38,0x58,0x17,0xd8,0x3d,0x00,0xc6,0x42,0xf2,0xbc,0xfd,0x05,0x37,0x6d,0x11,0xb0,0xd7,0xb2,0xb7,0x73,0x69,0x80,0x47,0x30,0x64,0x13,0x8c,0x24,0xb2,0x42,0x12,0x8c,0xc0,0x8a,0x45,0x0b,0x71,0x23,0xeb,0xac,0x65,0xda,0x44,0x13,0x85,0x77,0xdf,0xb8,0x4b,0x69
.byte	0xd4,0x8e,0x40,0x54,0x24,0xac,0xc8,0x62,0x36,0x51,0x20,0xaa,0xcd,0x5d,0xa5,0x73,0x2c,0x81,0x92,0x99,0x44,0x6b,0x04,0xac,0x8e,0xee,0x96,0x29,0xca,0xdc,0x2f,0xd1,0x13,0x5c,0x9e,0xc2,0x67,0x6a,0xaf,0xf6,0x3e,0xe2,0xa1,0x6d,0xda,0xbe,0x8a,0x55,0x50,0x27,0xee,0x6d,0xb8,0x35,0x5f,0xb4,0xa8,0x76,0xa1,0xe2,0x52,0x87,0xf6,0xfb
.byte	0xe2,0x16,0x1c,0x90,0x78,0xe4,0x17,0xb0,0xd9,0x56,0xf5,0xd3,0xa4,0xb0,0x3f,0xe9,0x01,0xf9,0xd0,0x67,0x2b,0xeb,0x1d,0x73,0x24,0x90,0x36,0x36,0x0d,0xcf,0xfb,0x3f,0xa1,0xa0,0x25,0x3b,0xf1,0x7f,0x9e,0x90,0xcf,0xb6,0xd0,0x83,0x90,0xcd,0x3f,0xff,0x5f,0xa3,0x33,0x95,0xd7,0xbe,0x78,0xfe,0xcc,0x9a,0xb9,0x64,0x88,0xb7,0xd9,0x5e
.byte	0x46,0x2d,0xf0,0xb1,0xa1,0x81,0x2b,0xab,0x80,0xf5,0x4d,0x3b,0xd8,0x53,0x64,0x8f,0xac,0x7a,0x03,0xb3,0x39,0x7a,0x85,0xef,0x61,0xb5,0x2c,0x8e,0xf4,0x27,0x07,0x9b,0x7b,0xc9,0x8b,0x1a,0xe4,0x4f,0xce,0x8b,0x35,0x32,0xac,0xcf,0x47,0xb8,0x2f,0x9e,0xe5,0x11,0x48,0xc1,0x07,0xea,0x0c,0xee,0x06,0xc6,0xa3,0x48,0xb6,0x1a,0xd8,0xb4
.byte	0xa7,0xae,0x59,0x7d,0x9e,0x4e,0x66,0x7f,0xe9,0x02,0x40,0xdc,0x21,0x5e,0x74,0x2c,0x1d,0x29,0x22,0xca,0x97,0x4f,0xc8,0xc7,0xea,0x69,0x02,0x89,0xd1,0x43,0xff,0x83,0x89,0x58,0x66,0x92,0xbc,0x11,0xf6,0x02,0x8b,0xa8,0x34,0x8d,0xbe,0x3a,0x70,0xc3,0x10,0xe7,0xb5,0xc4,0xda,0xdb,0xc6,0x87,0xee,0xee,0xe0,0x48,0x62,0x80,0x8d,0xfc
.byte	0xaa,0xc7,0xce,0x1a,0xea,0xb9,0x1b,0x30,0x4a,0x48,0x9b,0xf4,0x58,0xff,0x5d,0x15,0xc8,0xf2,0x84,0x44,0xae,0x63,0xe8,0xb1,0xe0,0x2e,0x38,0x8e,0x47,0xf9,0x09,0xec,0xb9,0x94,0x18,0x37,0x68,0xef,0xbd,0xd5,0x67,0x72,0x01,0x9a,0x15,0xb9,0x7c,0x36,0xc0,0x22,0x80,0x12,0xb1,0x4e,0xab,0x3c,0xea,0x81,0xcf,0x70,0xf3,0xde,0x1f,0xd4
.byte	0x67,0x94,0xfa,0xe1,0xf0,0xb6,0xd6,0x6b,0xc3,0xa2,0xbb,0x59,0x6b,0x9f,0x58,0x26,0x99,0x0c,0xdc,0xcd,0xb8,0xae,0x49,0xf0,0x8f,0xd3,0x0d,0xb7,0x4c,0x22,0xcf,0xb6,0x6c,0xa3,0x19,0x09,0x42,0x59,0x25,0xf8,0xdc,0xf3,0xc2,0x00,0xc3,0xc3,0xd3,0x9e,0x98,0xd3,0xa3,0xd0,0x96,0xfd,0x4f,0x15,0x57,0x5b,0xa7,0x08,0x3a,0x0e,0x3d,0xd2
.byte	0x7d,0xa1,0xa0,0x94,0xc0,0x76,0x83,0xf6,0xc1,0xe8,0x7e,0xd3,0x97,0xc1,0xbf,0x38,0x74,0x9b,0xfb,0x35,0xeb,0xf7,0x34,0x20,0xea,0xda,0xd3,0xb1,0x2e,0x10,0x16,0x9c,0x09,0x1c,0x67,0x46,0xa2,0x05,0xf9,0x47,0xde,0x35,0x53,0x18,0x58,0xb0,0xbb,0x7a,0x88,0x58,0xc5,0x3e,0x98,0x29,0x43,0x98,0x07,0x76,0xa3,0xe1,0x95,0x92,0x21,0xe9
.byte	0x06,0x17,0x15,0xe0,0x6b,0xd5,0x5a,0x6d,0x10,0xa6,0x08,0x92,0xa9,0xf5,0xcf,0x57,0x1a,0x28,0x5d,0x14,0x33,0x99,0xf9,0xa0,0xb3,0xeb,0xee,0xd4,0x6e,0x0b,0x5e,0xf7,0xe9,0xe3,0xc6,0x71,0x34,0x55,0xf3,0xde,0xd5,0xc2,0x52,0xc3,0x7b,0x06,0x87,0xef,0x26,0x81,0xc9,0xbd,0xaf,0x12,0x61,0x95,0x2b,0xa4,0x8e,0xe8,0x08,0x9a,0x13,0x48
.byte	0x2e,0x84,0x98,0xf6,0x95,0x21,0x22,0xe5,0xcf,0x30,0x8d,0xaf,0x70,0x16,0x27,0x0c,0xcd,0x26,0x7f,0xe8,0xa0,0x35,0x0c,0x01,0x0e,0xdd,0x9d,0x2c,0x89,0x41,0x34,0xc4,0xa2,0xaa,0xf6,0x3f,0xca,0x3b,0x86,0xce,0xd7,0x4c,0xe3,0xb5,0x69,0xe9,0x41,0xbe,0x3c,0x9a,0x4c,0x1a,0xb3,0x88,0xea,0x78,0x12,0x4c,0x1b,0x79,0xc7,0xcd,0x32,0x72
.byte	0xfa,0x3f,0x0b,0x73,0x1b,0xd9,0xec,0x85,0xd4,0x52,0x6c,0x91,0x2d,0xbe,0x76,0x8b,0xfd,0xb6,0x49,0xcf,0x67,0xd1,0x18,0x7b,0xae,0x86,0x47,0x47,0xfd,0xff,0x63,0xf2,0x88,0x1b,0x58,0xd5,0x30,0x69,0xf9,0x9a,0x03,0x52,0xae,0xe5,0xe2,0x55,0xbf,0x35,0x12,0xb0,0x84,0xa9,0xed,0xb6,0x8d,0x5f,0x6c,0xed,0x1a,0x00,0x7a,0xdc,0xf2,0x03
.byte	0x9e,0xef,0x59,0x27,0x4c,0xf4,0x83,0xa2,0x36,0x3d,0x3d,0x8c,0x75,0x8c,0x37,0x68,0x93,0x0b,0x30,0x48,0xea,0x91,0x14,0x37,0x88,0x87,0x7f,0xe6,0xd8,0xbd,0x04,0x34,0x1e,0xe8,0x2a,0x41,0x48,0x5c,0x66,0xf9,0xc2,0xd1,0x56,0x25,0x29,0x45,0xfa,0x71,0xe1,0x59,0xa8,0x52,0x99,0x0b,0x92,0xe0,0x33,0x52,0x91,0xd6,0x5f,0x0a,0x70,0x83
.byte	0x4f,0xa3,0x47,0x6e,0xfa,0x85,0x5e,0xb1,0x0a,0x1d,0xe7,0x35,0xc9,0x88,0x27,0xc9,0x8c,0x3e,0x7f,0x6d,0x34,0x1e,0x11,0x7b,0xcd,0xe7,0x09,0x82,0x3a,0xa1,0x46,0xc6,0x15,0xde,0x0b,0xde,0x35,0x71,0x92,0x5c,0x72,0x50,0x08,0x6b,0x62,0xa7,0xec,0xa2,0xca,0x53,0x6e,0x47,0x7d,0x50,0x32,0xa7,0x32,0x7b,0x49,0x0c,0x97,0xcc,0x98,0x8d
.byte	0xc3,0x29,0x72,0x1e,0x85,0x47,0x1b,0xa7,0x89,0x19,0x85,0xaa,0x3f,0x11,0x6a,0xea,0x61,0x84,0x07,0x9a,0xc8,0xb3,0x25,0xfe,0x72,0xca,0x83,0xa9,0xf0,0x9e,0x01,0xe4,0x9a,0xd6,0x1b,0x87,0xfc,0xd4,0x3a,0x04,0x34,0x8c,0x0b,0x46,0xbc,0xe9,0x3c,0x3f,0xd9,0x93,0xf1,0xca,0x41,0x0b,0xdb,0x28,0xe8,0x28,0x1b,0x84,0x36,0x16,0x84,0x22
.byte	0x1e,0x1e,0x2b,0xb0,0xfb,0xa6,0xcc,0x95,0x31,0x46,0xd7,0xca,0xc2,0x8b,0xa3,0x3a,0xa5,0xb0,0xaf,0x52,0x66,0x53,0x39,0x5f,0x58,0xb5,0xdf,0x01,0x52,0x07,0xb4,0x82,0xdc,0xb7,0xf9,0x88,0xd8,0x77,0xf8,0x12,0x9d,0xe8,0x21,0xd7,0x0b,0x0f,0x57,0x90,0x40,0xb2,0x64,0x3f,0xce,0xa0,0xa3,0xfa,0x12,0x16,0xec,0x6d,0xcc,0xc7,0x2a,0x43
.byte	0xc9,0xe7,0xb7,0x90,0x52,0x35,0x22,0x6d,0x46,0x99,0x1e,0x44,0x12,0xd6,0x0f,0xaf,0x5c,0x16,0xd3,0x7a,0xd6,0xb4,0xfe,0x20,0x26,0x11,0xe1,0xc6,0xa5,0x10,0xfd,0x9f,0x0c,0x47,0xae,0x32,0x08,0x15,0x8f,0xef,0xef,0x4c,0x83,0xbc,0xbf,0x6a,0xe5,0xf5,0x69,0x11,0x4d,0x7d,0x47,0x1f,0x10,0x58,0x61,0xb0,0x0d,0x98,0x67,0xc0,0x99,0x3a
.byte	0x2d,0x9a,0x5b,0xd5,0x37,0xe7,0xe5,0xd4,0x56,0x96,0x69,0xf8,0x53,0x7e,0x24,0x70,0x51,0x01,0x83,0x8d,0x49,0x01,0x32,0x7d,0x4f,0x41,0x92,0x54,0x9c,0x15,0xf1,0x3c,0x05,0x32,0x28,0x0d,0x0f,0x67,0xbe,0x65,0xfa,0x1b,0xa3,0xd0,0x28,0x18,0xb8,0x84,0xfe,0x6a,0x30,0xea,0xb9,0x00,0xb1,0x10,0x7c,0xa2,0x94,0x4f,0x86,0x18,0xdd,0xb4
.byte	0x80,0x18,0x48,0x18,0xe1,0x56,0x70,0x7d,0x5c,0x3b,0xe5,0xd7,0x88,0x66,0x57,0xe3,0xe1,0x04,0x4c,0x68,0x5b,0x64,0x4d,0x0d,0x30,0x76,0x26,0xaa,0x84,0x0e,0xe0,0xed,0x53,0x62,0x20,0x33,0xaf,0x45,0x42,0x40,0x47,0x01,0x15,0xc9,0x0b,0x27,0x7c,0x68,0x4d,0x55,0xc4,0x6a,0x5f,0x96,0x9f,0x96,0x67,0xae,0x13,0x1c,0x84,0x52,0x33,0x41
.byte	0x80,0xfc,0xae,0xb6,0xb1,0x8c,0xc3,0x19,0x80,0xa8,0x5f,0xe5,0x8c,0xd0,0xa8,0xb4,0x58,0xc9,0x48,0x29,0xab,0x11,0xd1,0x09,0xc6,0x20,0x98,0x4c,0xdb,0xa4,0x83,0x5c,0x26,0x51,0xce,0x80,0xe5,0xc4,0x9b,0xae,0xba,0x8e,0x99,0x4e,0xa4,0xff,0xdc,0x99,0x4c,0x02,0xa0,0x42,0x80,0xca,0xd7,0xea,0x6a,0x58,0x31,0xdb,0x16,0xd8,0x4d,0xab
.byte	0x03,0x2e,0x3a,0xdc,0xe9,0x07,0xfb,0xfb,0x5b,0x57,0x67,0x2a,0x7b,0xdc,0xc1,0x66,0xd1,0x31,0x3a,0x03,0x87,0xd8,0x66,0xda,0xa1,0x24,0x00,0x26,0xc0,0x26,0x78,0xf8,0x59,0x13,0x3f,0x34,0x08,0x35,0x45,0xbd,0x45,0x4f,0x89,0x65,0x97,0xdb,0xe6,0x1e,0x09,0x6e,0x23,0x2a,0xc4,0xf5,0x6a,0x74,0x28,0xb0,0xae,0x8c,0xfb,0x49,0x35,0x99
.byte	0x06,0x30,0xc6,0xb2,0x8c,0xcd,0x8b,0x41,0xea,0xf2,0x04,0x18,0x29,0x25,0x1b,0x32,0x42,0x45,0xb5,0x92,0x42,0xb4,0x33,0xd2,0x90,0x31,0x08,0xcd,0x35,0x5d,0x50,0x64,0xa8,0x93,0xfd,0xa5,0xfd,0x32,0xbd,0xe8,0x13,0x1c,0x48,0x5c,0x14,0x70,0x03,0x92,0x0f,0x12,0x86,0xf6,0x6c,0xcd,0xc6,0xec,0xbf,0x8e,0x85,0x28,0x1d,0x1c,0x63,0x3f
.byte	0x81,0x93,0xd4,0x80,0x3c,0x29,0x0b,0x63,0xfe,0x87,0xa6,0x24,0xd6,0x3e,0x62,0xb6,0xd9,0xb0,0x58,0xf1,0x41,0x36,0xc7,0x47,0x8b,0xfd,0x4b,0x91,0x4e,0x5d,0x41,0x44,0xb0,0x65,0x3d,0x9e,0x3b,0x70,0x01,0xcc,0x7d,0x77,0xf0,0x23,0xd9,0xca,0x5f,0xda,0xa1,0x8c,0x71,0x11,0x91,0x7d,0x36,0xf5,0xc9,0xcd,0xf4,0x34,0x5f,0x69,0x57,0xd6
.byte	0x33,0x4c,0xb2,0xe1,0x38,0x5f,0x86,0x3c,0x57,0x7b,0x2e,0x99,0x05,0x80,0x63,0xc4,0x77,0x69,0x06,0xc2,0x47,0x44,0xca,0x17,0x27,0x1d,0x55,0x34,0x02,0xd0,0x89,0x3a,0x3b,0x79,0xf0,0x86,0xd7,0x6b,0x01,0x9c,0xc7,0xa8,0xde,0xdb,0xdf,0x49,0xd1,0xb9,0x11,0xaf,0x7e,0x22,0x8b,0x5d,0xb5,0x0b,0xdc,0xd0,0x36,0xe6,0x9d,0x85,0x41,0x4a
.byte	0x35,0xf0,0xe1,0xcd,0xce,0x7b,0xd1,0xd6,0x00,0xdd,0xb6,0xe4,0x06,0x3e,0x66,0xe9,0x2b,0xa8,0x44,0x0d,0x18,0xd4,0xbc,0xfb,0x3c,0x58,0x6c,0x11,0xe9,0xdc,0x19,0x14,0x08,0x27,0x23,0x0c,0xd0,0xf9,0x97,0xaf,0x97,0x07,0x02,0x1a,0x5e,0xcd,0xae,0xd2,0x80,0x96,0x16,0x49,0xc3,0xfc,0xda,0x25,0x12,0x20,0xe1,0xc0,0x68,0x90,0x4b,0x30
.byte	0x2d,0x06,0x53,0x2c,0x57,0x63,0x4a,0x7a,0xf6,0xc8,0x5a,0xb7,0x58,0x8c,0x13,0xfe,0x43,0xb3,0xf8,0x25,0x3e,0x7a,0x25,0x3e,0x1d,0x7f,0x8f,0x5e,0xdb,0xad,0x99,0x83,0xfc,0xd9,0x0a,0xdf,0xb5,0x19,0x1c,0x2c,0xf6,0xe8,0x06,0xbe,0xc0,0x9f,0x7e,0x0f,0x95,0xaa,0xac,0x09,0xdc,0x8c,0x37,0xcf,0x35,0x35,0x95,0x62,0xf1,0xff,0x96,0x1c
.byte	0x77,0xe9,0x53,0x7e,0x12,0x56,0x2d,0x4e,0x3e,0x1f,0xdb,0x1d,0x71,0x0e,0xdc,0xf7,0x65,0xb1,0x78,0x7f,0xe4,0xba,0xbf,0x7f,0x6c,0xcb,0x73,0xd3,0xe8,0xd9,0xce,0xfb,0xdb,0x48,0x87,0xe0,0x10,0x00,0x74,0xcb,0xdf,0x32,0xa8,0xdd,0x83,0x24,0x49,0xda,0x86,0x38,0x1c,0x2c,0x93,0x09,0x8a,0x26,0xbb,0x34,0x21,0x1d,0xac,0xb5,0x16,0xae
.byte	0xd8,0xcb,0x94,0x04,0xd6,0xbc,0xde,0x9c,0x70,0x28,0xa5,0x1a,0x15,0x5e,0x35,0xe4,0xe6,0x53,0xea,0x9c,0x3b,0x0c,0x36,0x3b,0x80,0x13,0x28,0x1d,0xc7,0x1a,0xa8,0x8e,0x9e,0x09,0xce,0x5d,0x50,0xd3,0xc7,0x6f,0x3a,0x75,0xa5,0x84,0x1c,0x08,0x66,0xe6,0x05,0xda,0x8b,0xf1,0x4b,0x5c,0xe2,0xc7,0x0f,0xa1,0xf1,0x47,0x02,0xf4,0xa7,0x24
.byte	0xf3,0x0e,0x2c,0xa9,0xae,0x67,0xdf,0xce,0x30,0x88,0x4a,0x9a,0x39,0x4a,0x97,0x64,0xa8,0x30,0x53,0xf9,0x47,0x66,0x5c,0x19,0x1c,0xfb,0x2f,0x05,0x89,0x4f,0xfe,0x25,0xe7,0xed,0xed,0x17,0x5a,0x86,0xeb,0x25,0xee,0xe4,0x09,0x88,0x05,0x49,0x20,0x54,0x4b,0x7f,0x3e,0xb5,0x23,0x85,0xa9,0x66,0x61,0x73,0xe0,0x61,0x94,0xc6,0xe5,0x29
.byte	0xb4,0xe1,0x6f,0xa4,0x4d,0x50,0x56,0x2e,0x30,0x75,0x51,0x5d,0xdd,0xa2,0x68,0x56,0x67,0xd8,0xec,0x2d,0x2a,0xfd,0x49,0xc5,0xbc,0xae,0x2f,0x6b,0xc7,0x8d,0x2e,0xca,0x91,0x35,0xe8,0xea,0x65,0xe9,0x9c,0x65,0xaf,0x8e,0xd5,0x16,0xdf,0xac,0x44,0x1e,0xb6,0x16,0xf0,0xb6,0x33,0x6a,0xe6,0x96,0x0f,0x85,0x2e,0xa1,0xaa,0x6a,0xe0,0x12
.byte	0x0c,0xaa,0x7d,0xae,0xf7,0xe3,0xb2,0x4c,0x3c,0x10,0xc6,0x87,0x8e,0x87,0xfb,0xac,0xf7,0xd7,0x7a,0x2e,0x9a,0x7a,0xa7,0x4f,0xf0,0x75,0xce,0xbd,0xc3,0xe6,0x79,0x1d,0x56,0xab,0xff,0x56,0xfe,0x69,0xbd,0xcf,0x15,0x27,0x64,0x3c,0x83,0x1c,0x08,0xb0,0x91,0x60,0x67,0xe7,0x27,0x44,0x49,0x22,0x78,0xd5,0x1a,0xc8,0x3b,0x35,0x9b,0xa5
.byte	0x53,0xce,0xde,0x04,0xd2,0x3e,0x67,0x48,0xaf,0x54,0xdf,0x9c,0xf7,0xb9,0xd4,0xe3,0xb6,0x85,0x02,0x68,0x21,0x10,0xdb,0xb5,0xca,0x11,0xa2,0x7c,0xcf,0x13,0x41,0x7a,0xfd,0xe9,0x0a,0x3c,0x53,0xd6,0x07,0xf2,0xdd,0xe2,0x7c,0x16,0xf0,0x44,0x3f,0x5d,0x34,0x09,0x7c,0x7b,0x21,0x8c,0x8e,0xdb,0x0d,0xc5,0x73,0xce,0x61,0xce,0x17,0x46
.byte	0x6c,0x14,0x07,0xb5,0x70,0x80,0xf0,0x29,0x7c,0x13,0x41,0x2d,0x8e,0xdc,0x53,0xc2,0xbf,0xf0,0xc2,0xfb,0x59,0xa0,0x66,0x5f,0x25,0xda,0x17,0x5f,0xac,0xab,0x75,0x1b,0xc7,0x61,0x87,0x53,0x80,0x2e,0x11,0x4e,0x04,0x48,0xf9,0xee,0x54,0xe6,0x69,0x69,0x57,0xc2,0x46,0xd8,0xb3,0x2e,0x7b,0xc8,0xa5,0xd0,0xb2,0x5e,0xd4,0x6b,0x9b,0x1a
.byte	0xd6,0x79,0x9d,0x99,0xa6,0xbb,0x4d,0xca,0x74,0x2c,0x3d,0xd4,0x86,0xd0,0x64,0xd4,0x81,0x49,0x76,0x42,0xb8,0xf9,0x2c,0x52,0xe7,0x77,0x37,0x31,0xbb,0x2e,0x5b,0x38,0x81,0x01,0x2c,0x27,0x28,0xcb,0x0c,0xba,0xfa,0x8a,0x9a,0x45,0x51,0xa2,0xde,0xf2,0x7b,0xe6,0x65,0xec,0x5b,0x2d,0xe8,0x55,0x8e,0xb4,0x7f,0xf8,0x1a,0x66,0x3a,0x5f
.byte	0x06,0x10,0x15,0xb2,0x3d,0xb2,0x36,0x6e,0x9f,0x8e,0xe2,0x4c,0x78,0xe5,0x3a,0xac,0x21,0x16,0x20,0x30,0x0f,0x51,0x56,0xcb,0x53,0xca,0x70,0x3c,0xa2,0x3f,0x37,0x06,0x6c,0x70,0xec,0xf4,0x3d,0x7c,0x77,0xa0,0x61,0xc7,0x0e,0x26,0x9f,0x25,0xc0,0xf2,0x28,0xdb,0x57,0xbe,0xe6,0x4e,0x9c,0x4d,0x2e,0x48,0x50,0xc2,0xd4,0xfd,0x5e,0x52
.byte	0x3f,0xd0,0x82,0xd1,0xd4,0x53,0xad,0x42,0x38,0xb1,0x02,0xd6,0xa0,0x34,0x7a,0xb4,0xb3,0xdd,0x91,0x12,0xf4,0x91,0xc9,0xa2,0x35,0x2d,0xdc,0x97,0xa1,0xdb,0x82,0xe7,0x92,0x99,0x66,0x13,0x99,0x20,0x95,0x1f,0x47,0x64,0x80,0x5e,0x5f,0x74,0x6b,0xa6,0xca,0x47,0x0b,0x24,0x72,0xa6,0x27,0xe7,0x56,0x61,0xa7,0x8e,0x62,0xa4,0xff,0x8e
.byte	0x29,0xf8,0x09,0xa4,0xbb,0x70,0x97,0x8a,0x39,0xe8,0x65,0xc8,0x52,0x23,0x9d,0xbf,0x10,0xe8,0x7d,0xbc,0x3c,0xc4,0x8b,0x1e,0x5c,0x75,0x94,0x24,0x62,0x3f,0x5b,0x2b,0x9a,0x08,0x00,0x78,0xfd,0x28,0x44,0x12,0x62,0x2a,0x6f,0x47,0x9d,0x57,0xb0,0x4e,0x3b,0xcd,0x01,0x7d,0x6e,0x62,0xe3,0x99,0x9c,0xae,0x6e,0xe2,0x70,0x7a,0x32,0xb4
.byte	0xc1,0x19,0xb1,0x03,0x6b,0x92,0x89,0x4f,0x37,0xaf,0x36,0xee,0x5e,0x03,0x31,0x8c,0x41,0x27,0x17,0x21,0xdf,0xe4,0x34,0x97,0x8d,0xe7,0x41,0x47,0xf2,0x80,0x51,0x41,0x01,0xe4,0x0c,0x1a,0x09,0xfc,0x07,0xc3,0x94,0x07,0x6f,0xa7,0x6c,0xff,0x32,0x21,0xa5,0x01,0x8c,0xa2,0x88,0x3c,0xc8,0x57,0xe8,0x68,0x19,0x4a,0x46,0x7a,0x36,0xd2
.byte	0x75,0x8e,0xc5,0xa4,0x84,0x91,0x13,0x7f,0xdd,0x2b,0x3c,0x2e,0xc4,0x92,0x29,0xb3,0x60,0x74,0xc8,0x81,0x58,0x0e,0xad,0x6a,0x9d,0xaa,0x81,0x49,0x26,0x0f,0xd4,0x2a,0x39,0xdd,0x4d,0x2b,0x13,0xdb,0x2e,0x72,0xe6,0x45,0x99,0xeb,0xe6,0xe5,0xd5,0x76,0xd4,0x19,0xd8,0xd7,0xa9,0x1f,0xce,0x7f,0xc4,0x1c,0x9e,0x6f,0x68,0x32,0xb1,0x26
.byte	0xc4,0xb6,0x4e,0x9f,0xbf,0xdc,0xe0,0xde,0x54,0x9b,0xe0,0x04,0x03,0xae,0xc9,0xce,0x3a,0xcb,0x93,0xad,0xcc,0x1f,0x46,0xf6,0xbb,0xff,0x40,0x52,0x9c,0x64,0x97,0x5a,0x6f,0x8d,0x28,0x45,0x1c,0xf6,0x8b,0xcb,0xb9,0x38,0xb8,0x00,0xee,0xec,0xac,0x68,0x3f,0x50,0xcb,0x36,0x6e,0x97,0xfd,0xa5,0x1d,0x29,0x6e,0xfa,0x9f,0x4b,0x83,0xcd
.byte	0x0d,0x34,0xf3,0x1e,0x3f,0x0f,0x2e,0x89,0xeb,0xf7,0x8e,0x5f,0xe0,0x3b,0x39,0xd2,0xe8,0x87,0xe3,0xe7,0xe9,0xd0,0x1b,0x32,0x03,0x6b,0x3c,0x75,0x7d,0xe2,0x5c,0x3c,0x42,0xb4,0x46,0x69,0x0b,0xaf,0x0a,0x5d,0x1a,0x83,0x0b,0x0e,0x3c,0x5a,0x36,0xbd,0x5d,0xb6,0xad,0x4c,0xdd,0xf1,0x8d,0xbf,0x2b,0x70,0x8e,0xbc,0x92,0x95,0x1b,0x0f
.byte	0xed,0x3f,0xae,0x9e,0xa2,0x5a,0x50,0xe4,0xda,0xde,0x04,0x51,0x31,0xac,0xa4,0x0b,0x94,0xcc,0x14,0x87,0x59,0xa8,0x30,0x09,0xe6,0x46,0xb9,0x07,0x3e,0x1a,0xbf,0x5a,0x23,0x32,0xfb,0x60,0x63,0x24,0x25,0x12,0xf6,0x3e,0x2d,0xd0,0x8b,0x88,0x9b,0xe9,0x2d,0xab,0xf5,0xaf,0xba,0xbc,0xfe,0xab,0xb2,0x61,0x7a,0x7c,0xbb,0x28,0x6b,0x86
.byte	0xe5,0xa2,0x9c,0x2c,0x5a,0x23,0x12,0x11,0xe5,0x72,0xe8,0x7b,0x6b,0x40,0xf1,0x91,0x37,0x3b,0x47,0x75,0x65,0xac,0x4d,0x22,0x59,0x75,0x13,0xb0,0x73,0xff,0x59,0xd1,0x1b,0xcc,0x05,0x1f,0xf2,0xc8,0x50,0x83,0xf1,0x28,0x38,0x0b,0xc3,0xa0,0x3b,0xe3,0x86,0xbb,0x9c,0x7e,0xc1,0xe9,0xcc,0xd9,0xb8,0x2b,0x05,0xf3,0x6f,0xc7,0x9d,0xaf
.byte	0x7b,0xb7,0x38,0x41,0xa3,0x50,0x8f,0x92,0xe0,0x63,0x35,0xb3,0x95,0x9f,0x80,0xf8,0x75,0xbb,0xf3,0x2b,0x0e,0xaf,0x32,0x6e,0xff,0xeb,0x79,0xca,0xbf,0x1c,0x4f,0x6c,0x9c,0x06,0xb2,0xeb,0x99,0x57,0x1f,0xf6,0x64,0x0b,0x81,0x57,0xba,0xf4,0x32,0x1e,0x77,0x37,0x55,0xb7,0xbc,0xba,0x70,0x0b,0x0d,0xdd,0x95,0x41,0xb5,0x17,0x5b,0x14
.byte	0x10,0x9d,0x14,0x52,0x83,0x65,0x0a,0xf4,0x55,0xca,0xf8,0xbe,0xa6,0x3a,0xa0,0x6e,0xcc,0x83,0x84,0x65,0xb4,0x1c,0x7e,0x40,0xdd,0x32,0x36,0x5a,0x23,0x17,0x7d,0xb5,0xb9,0x38,0x48,0x5c,0x6f,0x23,0x54,0x0e,0x93,0x74,0x27,0x0f,0xfd,0x58,0xc1,0x97,0x26,0x78,0x9a,0xd3,0x85,0xc5,0xb2,0xb3,0x44,0xb7,0x36,0x85,0x69,0xde,0x3b,0xa1
.byte	0x2b,0x11,0xef,0x75,0xfc,0xaa,0x92,0xf1,0xf1,0x72,0xa0,0x5f,0x33,0xf6,0x0b,0x72,0xdb,0xce,0x6c,0x2a,0x15,0x76,0x40,0xd4,0x85,0xff,0x96,0xe1,0x48,0xe1,0x27,0x8f,0x74,0xf3,0xfa,0xa1,0xb7,0x2a,0xb6,0x41,0x90,0x92,0x7e,0xfa,0xfc,0xad,0xa3,0x94,0x91,0x77,0xf1,0x8f,0xee,0xa2,0x64,0x47,0x01,0xb3,0x01,0x99,0x05,0xe7,0x31,0x4a
.byte	0xe8,0xd2,0x65,0x40,0x21,0xc4,0x83,0x8e,0xc9,0x89,0xda,0x16,0x7b,0xe0,0xcb,0xc0,0xc0,0x3d,0x37,0x18,0x66,0xe9,0x70,0x86,0x0b,0x6c,0xe8,0x65,0x44,0xce,0x3a,0xcd,0x84,0x1e,0xce,0x0e,0xe3,0xf9,0x77,0x12,0xfb,0xe6,0x92,0x8b,0x0d,0x7e,0x15,0x7a,0x34,0x94,0x2a,0xa7,0xc5,0x35,0xa4,0xfc,0xbe,0xa3,0x13,0x70,0xe4,0x6b,0x2f,0x71
.byte	0x31,0xef,0xdb,0x79,0x44,0xf2,0x77,0xc7,0xc9,0x0d,0x1a,0x7b,0xff,0x34,0xf8,0xc9,0xe8,0xc9,0xc2,0xe0,0x0c,0x9e,0xd6,0xb4,0x7a,0xdb,0x1f,0x65,0xb8,0xd4,0x92,0xbf,0x7f,0x06,0x44,0xe3,0xb4,0xd8,0x14,0xe3,0x9b,0x49,0x81,0x12,0xec,0x7d,0x01,0xe2,0x50,0x2c,0x0e,0xfd,0x4b,0x84,0x3b,0x4d,0x89,0x1d,0x2e,0x4b,0xe9,0xda,0xa5,0x3f
.byte	0x19,0xc2,0x53,0x36,0x5d,0xd8,0xdc,0x6e,0xc3,0x48,0x8f,0x09,0xd5,0x95,0x4b,0x0c,0x7c,0x00,0x15,0x33,0x8e,0x1d,0x0c,0xdf,0x32,0x3b,0x93,0x1f,0xf5,0x49,0x4f,0xfd,0x8b,0x64,0xe7,0x96,0xaf,0x2f,0xc8,0xea,0xab,0x91,0x53,0x29,0xe3,0x31,0x0a,0x1c,0x6e,0xe0,0xbb,0x81,0x11,0x83,0xe0,0x07,0xfb,0x29,0x11,0x0f,0x0d,0x85,0xd4,0x61
.byte	0x3c,0x75,0xbb,0x8a,0x23,0xb6,0xa0,0x7f,0xa4,0xbb,0x11,0xd4,0x75,0xde,0x27,0xe5,0xeb,0x11,0x5d,0x02,0xfe,0x5c,0x62,0x60,0x0f,0x6f,0x45,0x9b,0xfb,0xb7,0x32,0xa8,0x1c,0xd6,0xff,0x43,0x7b,0x53,0xee,0xa4,0x1f,0xf2,0xba,0xb6,0xb7,0xb7,0x39,0x18,0x85,0x79,0x77,0x27,0x30,0x26,0xe4,0xef,0xd1,0x39,0xc9,0xa2,0x0d,0x50,0xd7,0xef
.byte	0x9e,0xd8,0x8e,0xd2,0x74,0x1a,0x3f,0x99,0x24,0xf4,0x8b,0x4d,0x02,0x63,0x18,0x3a,0xaf,0x26,0xef,0xfc,0x1d,0xfe,0x46,0xc1,0x55,0xd7,0x92,0x65,0x2f,0xe7,0x4f,0x47,0xa8,0x2f,0x5d,0x47,0x67,0xeb,0x62,0x1d,0x69,0xa6,0x0e,0x51,0x1d,0x2c,0xed,0x6e,0x94,0xe9,0x48,0x4c,0x22,0xc2,0x93,0x79,0x6f,0x1b,0xc2,0x93,0x61,0x3d,0x8b,0xba
.byte	0xcb,0xe9,0x4a,0x88,0x5e,0x19,0x50,0x14,0xfe,0xda,0x3f,0x4d,0x47,0x54,0xfc,0x1c,0x09,0x77,0x37,0x30,0xfe,0x75,0x9f,0xdd,0xa4,0x74,0x04,0x04,0x88,0xe0,0xac,0x93,0x64,0x6f,0xbf,0x50,0xd8,0xf0,0xf7,0xa0,0xfa,0x98,0x49,0xfa,0xf7,0x6e,0xcf,0xa2,0xbf,0xb6,0x07,0x15,0x0e,0x4e,0x21,0x74,0x0a,0xa6,0xa3,0x67,0xce,0xf9,0x3b,0xd6
.byte	0x4c,0xc8,0x43,0xe3,0x3b,0x3b,0x6a,0x86,0x62,0x3f,0x5a,0xf3,0x3f,0xf9,0xeb,0xbf,0xa3,0x2a,0x83,0x8a,0x70,0x8f,0x01,0x65,0x17,0x9a,0xa6,0x26,0x3b,0x09,0x06,0x22,0x19,0xed,0xd7,0x25,0x4b,0xd2,0x9a,0x30,0xfe,0x1c,0x82,0x68,0x16,0x04,0x0e,0x04,0x8f,0xc6,0x92,0xbe,0xe4,0x43,0x98,0x1d,0x3b,0x10,0x15,0x5b,0xef,0x4e,0x60,0x5e
.byte	0x6b,0xc9,0xde,0xb8,0x47,0x02,0x86,0x45,0x39,0x7a,0x1a,0xef,0x67,0x28,0xc5,0x40,0x73,0x2a,0xa7,0x12,0x9d,0x58,0x3a,0x34,0xc2,0xda,0x34,0xb0,0x48,0xd9,0x34,0xcd,0x18,0xe9,0x76,0x41,0x78,0x8f,0xe5,0xe8,0x3d,0xb2,0x01,0x3b,0x84,0xd1,0xca,0x5e,0x26,0x1d,0x8c,0xea,0xe1,0x46,0xa3,0xf9,0x11,0xac,0x0d,0x98,0x9f,0xd3,0x46,0x79
.byte	0xff,0xad,0x99,0x32,0x63,0x96,0xbc,0x57,0x39,0x16,0xce,0x06,0x7e,0x63,0x78,0x7b,0x86,0x92,0x1a,0xe1,0x45,0xc0,0x73,0xe1,0xec,0xfc,0x88,0x8f,0xf8,0x36,0x0f,0x54,0x76,0x02,0x98,0x49,0x40,0xb9,0xef,0xd8,0x13,0x68,0xf5,0x1d,0x0a,0x98,0x65,0x21,0xc5,0x1a,0x22,0x4e,0x8e,0xad,0xa9,0x52,0x57,0xc4,0xc6,0xa8,0x48,0x01,0x7a,0x78
.byte	0xc9,0xfc,0xdd,0xf3,0xc3,0x83,0xc0,0x06,0xb5,0x56,0x84,0xe2,0x0c,0x6b,0x80,0xd9,0x59,0xa1,0x3d,0xe3,0x56,0xf0,0xe3,0x3f,0x93,0x61,0xf7,0x8c,0x6b,0x40,0x65,0x6e,0x01,0xc2,0xa1,0xc1,0xb8,0x9b,0x15,0x6c,0xa1,0x18,0x4a,0x6c,0x8b,0x18,0x2d,0x8e,0x71,0x7a,0xa1,0x26,0xc1,0x4b,0xac,0x0c,0xca,0x08,0x33,0xef,0x35,0x33,0x63,0xeb
.byte	0x57,0x6e,0x7e,0x36,0xe0,0x31,0xad,0x10,0x76,0xb7,0x45,0xd9,0x3a,0x92,0x66,0x69,0x13,0x61,0x59,0x87,0xfd,0x6b,0xf1,0x46,0x0a,0x7a,0x3f,0x29,0x88,0x5b,0x7d,0xef,0x07,0x02,0xa8,0xa1,0xdc,0xd4,0x0e,0x77,0x8f,0x68,0x32,0xbd,0x8e,0xd6,0x0b,0xe4,0xd1,0x75,0xc1,0xb0,0x74,0x6c,0x0e,0xc3,0x46,0x79,0x36,0x3b,0x5f,0x0e,0xa0,0xad
.byte	0x28,0x8c,0xcb,0x01,0x8e,0x58,0x14,0x09,0xf1,0xd4,0x3b,0x2e,0xdc,0xbf,0x37,0x95,0x26,0xda,0xb6,0xcf,0xc8,0xa1,0xd4,0xec,0x72,0xf3,0x44,0xf5,0x4e,0x27,0x9b,0x2e,0x7c,0xfa,0x37,0x16,0x1d,0x7f,0x90,0x86,0xae,0x96,0x3b,0xe1,0xda,0xf7,0xc4,0x54,0x0b,0x51,0x7e,0x83,0xbe,0xed,0xd6,0x5f,0xd2,0x6d,0xbb,0xd3,0xc6,0x53,0x95,0x65
.byte	0x3d,0x19,0xc2,0xc5,0xdf,0x47,0x00,0x2c,0x4b,0x2d,0xec,0x32,0xd5,0x28,0xb5,0x30,0xe0,0x79,0x15,0x2e,0xab,0x97,0xa8,0xcf,0xc5,0x40,0x98,0x30,0x22,0x9f,0xbc,0xdb,0x65,0x06,0xfc,0x58,0xe5,0x55,0x5b,0xe2,0xf8,0x6e,0xc6,0xfc,0xec,0x6c,0x14,0xd2,0xe3,0x9a,0x71,0x8a,0x61,0xea,0x39,0xc6,0x77,0x94,0xdf,0x7b,0x99,0x71,0xdd,0x18
.byte	0xc6,0x03,0x2d,0x49,0xf6,0xc3,0xe8,0x2b,0x7e,0x3f,0x28,0xfc,0xc8,0xa1,0xb0,0x15,0x31,0x7e,0x83,0xb8,0x14,0x34,0x0e,0x7f,0xde,0x74,0x7b,0xbf,0xb7,0x8e,0xd9,0x31,0x90,0x16,0xb6,0x57,0x14,0x4a,0xc6,0x67,0x3d,0xb9,0x46,0x92,0xf2,0xf9,0x94,0x36,0x2b,0xd6,0x1f,0x84,0xa5,0x8c,0x0f,0xd9,0x8c,0x5f,0x97,0x7a,0x7b,0xff,0xc9,0xf5
.byte	0x5e,0x13,0x5f,0x19,0x58,0xba,0xa6,0xe8,0x29,0xf4,0xb8,0x7e,0x98,0xb7,0xef,0x1b,0x00,0xe8,0x90,0x8f,0x86,0x4c,0xe0,0x51,0x13,0x8b,0xa1,0x37,0x40,0x38,0x51,0x2f,0x5a,0x9b,0x63,0x8f,0xce,0x9a,0x97,0x07,0x0d,0x8e,0xce,0xb1,0x66,0x89,0x78,0xca,0xa6,0x0c,0x20,0xc4,0xf1,0xe3,0xab,0xe2,0x1c,0x83,0x2b,0x46,0x97,0xe8,0x8f,0x94
.byte	0xb4,0x71,0x40,0xde,0xa1,0x05,0x4b,0xed,0xbf,0x0c,0x46,0xe1,0x25,0xf1,0xd0,0x5a,0xdb,0x9c,0x2a,0x09,0x03,0x80,0x24,0xc1,0x22,0x02,0xa5,0xde,0xf6,0x4c,0xbc,0x93,0x37,0xa9,0x28,0xb3,0x92,0x19,0xa8,0x3f,0x71,0x90,0x62,0x78,0xaa,0x9a,0x0c,0xab,0x50,0xaf,0x89,0x2b,0xf1,0xf4,0x12,0xbd,0xc9,0xd5,0xee,0x64,0x8b,0x48,0x21,0xd6
.byte	0xa1,0xa1,0xf2,0x68,0x4a,0xf8,0x06,0x3e,0x20,0x31,0x66,0xb7,0x2f,0x64,0x01,0x5a,0x46,0x14,0x85,0xfb,0xde,0x04,0xc3,0xe4,0xd6,0x25,0x14,0xa0,0xbe,0x4d,0x39,0xd8,0xe0,0x9b,0xb7,0x6b,0x00,0xe6,0x46,0xfb,0xcc,0xa8,0xad,0x67,0x12,0x2c,0x53,0x2c,0xb6,0x9f,0x6e,0xfe,0xbc,0xcc,0x2c,0xa8,0x09,0x17,0x00,0x8e,0xf1,0xf4,0x3e,0xa9
.byte	0x92,0x4d,0x83,0xe6,0x3c,0xf0,0xd3,0x1c,0xaf,0x84,0x2c,0x59,0x7e,0xda,0x1e,0xfd,0x7d,0xf3,0xef,0x93,0x05,0x03,0xb0,0x76,0x69,0xb5,0x51,0xa8,0x65,0x8f,0x8a,0xf8,0x55,0x92,0x08,0xfe,0xbf,0xc1,0x95,0x98,0x58,0xb1,0xd3,0xb6,0x78,0x4f,0x2f,0x25,0xcb,0x9d,0x32,0x4f,0xa6,0xcc,0xf8,0x36,0xff,0x72,0xb3,0x93,0x3d,0xd8,0x0b,0xe6
.byte	0xc6,0xf6,0xed,0xcc,0x2a,0xa5,0x44,0x6e,0xe2,0x2d,0x6e,0x02,0xb4,0x7c,0x24,0x7f,0x57,0x02,0x84,0x61,0x8e,0xbd,0x32,0x4e,0x41,0x92,0x01,0x1b,0x8b,0x1d,0xd1,0x1e,0x31,0xc1,0x4c,0x5b,0x0c,0xa7,0x48,0x52,0x67,0xc2,0xd9,0xdc,0x86,0x9d,0xbd,0x6c,0x19,0x95,0x00,0xf0,0xd4,0x47,0xaf,0xfe,0x5d,0xa5,0x81,0xbd,0x1b,0x42,0x62,0xce
.byte	0x18,0x1b,0xa3,0x6f,0xf5,0x0b,0xb7,0x6a,0x3d,0xe3,0xcc,0x41,0x27,0xcd,0x49,0x4b,0xe5,0x2b,0xc4,0x28,0xfa,0xbe,0xd5,0x7e,0xb7,0xac,0xab,0x64,0x3b,0xe3,0x87,0xb1,0x33,0x8b,0xa8,0xe5,0x75,0xce,0x61,0x57,0x89,0xad,0x5f,0x61,0xdd,0x7c,0x06,0x2a,0x3f,0x50,0xb8,0x7e,0xd2,0xfb,0x32,0x83,0x07,0xd4,0xc5,0x3f,0xad,0x64,0x59,0x1f
.byte	0x21,0x59,0x6f,0x1b,0xd7,0x40,0x89,0x28,0x18,0xac,0xca,0xee,0x92,0x1c,0x0d,0x88,0x98,0x7a,0x75,0x68,0xe0,0xe2,0x96,0xda,0x88,0xb3,0xc6,0x21,0x02,0x34,0xfa,0xae,0x0b,0x38,0xcf,0x1c,0x6c,0x7a,0xc9,0xd9,0x5f,0xf0,0x4c,0x73,0xfd,0xe6,0x14,0xf3,0x39,0xed,0xbc,0x28,0x2f,0xf8,0x79,0x02,0x39,0x05,0xf3,0x6a,0x88,0xd9,0x03,0xe2
.byte	0xb9,0x65,0x81,0x3a,0x34,0x80,0x3f,0x17,0x37,0x1e,0xe8,0x7d,0x41,0x49,0xfb,0x70,0x5d,0x58,0x3a,0x71,0x7b,0x3e,0xd3,0x83,0x0b,0x1b,0x11,0xfc,0x53,0xce,0xc6,0xc4,0x39,0x55,0xbe,0xbe,0x32,0xa5,0x88,0xab,0xcd,0x38,0x78,0x3e,0x52,0xaf,0x64,0x42,0x10,0xc3,0x70,0x81,0x76,0xe9,0x7d,0x8e,0x46,0x41,0xca,0x2c,0x0c,0x4c,0x30,0xd3
.byte	0xca,0x38,0xa3,0x97,0x2e,0x0f,0xa5,0x18,0x3b,0xaa,0x0f,0x00,0x75,0x35,0x9c,0xcd,0x28,0x83,0xd4,0xa7,0x7c,0xb9,0xcd,0xb5,0x55,0x29,0x4c,0x14,0xcd,0xfc,0x8f,0xaf,0x7d,0x69,0x4f,0xf7,0x0f,0xed,0x7c,0xa5,0x79,0x9d,0x36,0xbb,0x72,0xbc,0xf2,0x14,0xfd,0xf0,0x04,0x2a,0x89,0x1e,0xf7,0x80,0x4c,0x5e,0xb8,0xc1,0xdb,0xfa,0x3c,0x27
.byte	0xbb,0x30,0x08,0x2b,0xd2,0xf8,0xdb,0xe0,0x8c,0x00,0xe4,0xca,0xa9,0xde,0xb0,0x14,0x5b,0xec,0x6b,0xe6,0x5c,0x90,0x17,0x02,0x59,0x5f,0x5f,0x51,0xf8,0x30,0x10,0x11,0xc4,0xdf,0x37,0x30,0x32,0xb1,0x4d,0x49,0xfe,0x82,0x87,0xd2,0x42,0xf5,0x38,0x76,0xf9,0xa5,0x28,0xfc,0x14,0xb2,0xe0,0x72,0x82,0xde,0xc8,0x47,0x9e,0x8f,0x8a,0xb5
.byte	0x85,0x44,0x42,0x12,0xc6,0xc0,0xa5,0x60,0x5a,0x27,0xd0,0x36,0x14,0x7b,0x2a,0x83,0x98,0x92,0x08,0xe9,0x03,0xc9,0xc3,0xd3,0x36,0x97,0xba,0x5e,0xd5,0x51,0xcc,0x44,0xeb,0x81,0x76,0xae,0x28,0x94,0x0b,0xf6,0xc7,0xeb,0xae,0x61,0x6f,0x7b,0x34,0xb5,0x8c,0x5f,0x31,0xb6,0x23,0xe3,0xe7,0x4b,0x60,0xe6,0xba,0x8d,0x0e,0xd1,0xb2,0x37
.byte	0x72,0x3d,0xc1,0x75,0x9b,0x5e,0xcb,0x0f,0xf9,0xe4,0xdb,0x82,0x4c,0xc4,0x37,0xef,0x9d,0xde,0x16,0x85,0xe9,0xc2,0x03,0xd8,0x5b,0xa1,0xff,0xfa,0xd4,0xd7,0x5c,0x34,0xb6,0x1e,0x25,0x96,0xf5,0x8b,0xc3,0xee,0x16,0x1f,0xf8,0x55,0x4e,0x1c,0x83,0x80,0x77,0x1d,0x4f,0xb6,0x95,0x1c,0x91,0x7d,0x50,0x25,0xf4,0x2a,0x5d,0x2e,0xc7,0x8a
.byte	0x14,0xf8,0xb9,0xbc,0xab,0x5b,0xcd,0x47,0xb5,0xaf,0x85,0xc0,0x34,0x27,0x7d,0x6a,0x8c,0x84,0x8a,0xae,0x68,0x60,0x0e,0xa1,0x45,0xf7,0x83,0x66,0x91,0x69,0x30,0xed,0x26,0x5e,0xf5,0x48,0x6b,0x20,0xb3,0x11,0x50,0xf7,0x70,0x9d,0x10,0x50,0x44,0x87,0xfe,0x96,0x5c,0xc6,0xa4,0xa4,0xed,0x5e,0x7f,0x3d,0x90,0x19,0xbe,0x31,0xa3,0xdd
.byte	0x44,0xbb,0x9b,0x51,0x5a,0x06,0x1d,0x2e,0xd7,0xef,0xd1,0x81,0xb6,0xec,0xc6,0x89,0xfb,0x13,0xc5,0x21,0xef,0x9a,0x1a,0x48,0xf2,0xf8,0xb3,0xa3,0xec,0x7f,0x85,0xc1,0xc6,0x8c,0x5f,0xa9,0x30,0x38,0x25,0x1e,0x8d,0xcf,0x18,0x24,0xef,0x5a,0x9a,0x14,0x31,0xc0,0x2c,0x88,0xa5,0x3f,0x50,0x8b,0xb1,0xda,0x5d,0x26,0xd9,0xd3,0x81,0xb1
.byte	0xec,0xf0,0x42,0x88,0xd0,0x81,0x51,0xf9,0x1b,0xbc,0x43,0xa4,0x37,0xf1,0xd7,0x90,0x21,0x7e,0xa0,0x3e,0x63,0xfb,0x21,0xfa,0x12,0xfb,0xde,0xc7,0xbf,0xb3,0x58,0xe7,0x76,0x42,0x20,0x01,0x3d,0x66,0x80,0xf1,0xb8,0xaf,0xfa,0x7d,0x96,0x89,0x36,0x48,0x95,0xd9,0x6e,0x6d,0xe6,0x4f,0xff,0x2a,0x47,0x61,0xf2,0x04,0xb7,0x83,0x14,0xce
.byte	0x0a,0x3c,0x73,0x17,0x50,0x88,0x03,0x25,0x4a,0xe3,0x13,0x55,0x8b,0x7e,0x50,0x38,0xfc,0x14,0x0b,0x04,0x8e,0xa8,0x5b,0xd6,0x72,0x20,0x60,0xe9,0xaa,0x22,0x82,0x11,0xc6,0xc4,0xd7,0xb9,0xc8,0x0c,0x7e,0x05,0xfb,0x90,0xe4,0x9c,0x28,0x89,0x29,0x99,0x63,0x4d,0xec,0x7b,0x50,0xbd,0xd8,0xa3,0x5b,0x50,0x77,0x19,0x81,0x92,0xce,0x82
.align	64
.LRR:
.long	3,0,-1,-5,-2,-1,-3,4
.LONE_mont:
.long	1,0,0,-1,-1,-1,-2,0
.LONE:
.long	1,0,0,0,0,0,0,0
.byte	69,67,80,95,78,73,83,90,50,53,54,32,102,111,114,32
.byte	120,56,54,47,83,83,69,50,44,32,67,82,89,80,84,79
.byte	71,65,77,83,32,98,121,32,60,97,112,112,114,111,64,111
.byte	112,101,110,115,115,108,46,111,114,103,62,0
.align	64
.globl	ecp_nistz256_mul_by_2
.type	ecp_nistz256_mul_by_2,@function
.align	16
ecp_nistz256_mul_by_2:
.L_ecp_nistz256_mul_by_2_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	24(%esp),%esi
	movl	20(%esp),%edi
	movl	%esi,%ebp
	call	_ecp_nistz256_add
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_mul_by_2,.-.L_ecp_nistz256_mul_by_2_begin
.globl	ecp_nistz256_mul_by_3
.type	ecp_nistz256_mul_by_3,@function
.align	16
ecp_nistz256_mul_by_3:
.L_ecp_nistz256_mul_by_3_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	24(%esp),%esi
	subl	$32,%esp
	movl	%esp,%edi
	movl	%esi,%ebp
	call	_ecp_nistz256_add
	leal	(%edi),%esi
	movl	56(%esp),%ebp
	movl	52(%esp),%edi
	call	_ecp_nistz256_add
	addl	$32,%esp
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_mul_by_3,.-.L_ecp_nistz256_mul_by_3_begin
.globl	ecp_nistz256_div_by_2
.type	ecp_nistz256_div_by_2,@function
.align	16
ecp_nistz256_div_by_2:
.L_ecp_nistz256_div_by_2_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	24(%esp),%esi
	movl	20(%esp),%edi
	call	_ecp_nistz256_div_by_2
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_div_by_2,.-.L_ecp_nistz256_div_by_2_begin
.type	_ecp_nistz256_div_by_2,@function
.align	16
_ecp_nistz256_div_by_2:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	movl	(%esi),%ebp
	xorl	%edx,%edx
	movl	4(%esi),%ebx
	movl	%ebp,%eax
	andl	$1,%ebp
	movl	8(%esi),%ecx
	subl	%ebp,%edx
	addl	%edx,%eax
	adcl	%edx,%ebx
	movl	%eax,(%edi)
	adcl	%edx,%ecx
	movl	%ebx,4(%edi)
	movl	%ecx,8(%edi)
	movl	12(%esi),%eax
	movl	16(%esi),%ebx
	adcl	$0,%eax
	movl	20(%esi),%ecx
	adcl	$0,%ebx
	movl	%eax,12(%edi)
	adcl	$0,%ecx
	movl	%ebx,16(%edi)
	movl	%ecx,20(%edi)
	movl	24(%esi),%eax
	movl	28(%esi),%ebx
	adcl	%ebp,%eax
	adcl	%edx,%ebx
	movl	%eax,24(%edi)
	sbbl	%esi,%esi
	movl	%ebx,28(%edi)
	movl	(%edi),%eax
	movl	4(%edi),%ebx
	movl	8(%edi),%ecx
	movl	12(%edi),%edx
	shrl	$1,%eax
	movl	%ebx,%ebp
	shll	$31,%ebx
	orl	%ebx,%eax
	shrl	$1,%ebp
	movl	%ecx,%ebx
	shll	$31,%ecx
	movl	%eax,(%edi)
	orl	%ecx,%ebp
	movl	16(%edi),%eax
	shrl	$1,%ebx
	movl	%edx,%ecx
	shll	$31,%edx
	movl	%ebp,4(%edi)
	orl	%edx,%ebx
	movl	20(%edi),%ebp
	shrl	$1,%ecx
	movl	%eax,%edx
	shll	$31,%eax
	movl	%ebx,8(%edi)
	orl	%eax,%ecx
	movl	24(%edi),%ebx
	shrl	$1,%edx
	movl	%ebp,%eax
	shll	$31,%ebp
	movl	%ecx,12(%edi)
	orl	%ebp,%edx
	movl	28(%edi),%ecx
	shrl	$1,%eax
	movl	%ebx,%ebp
	shll	$31,%ebx
	movl	%edx,16(%edi)
	orl	%ebx,%eax
	shrl	$1,%ebp
	movl	%ecx,%ebx
	shll	$31,%ecx
	movl	%eax,20(%edi)
	orl	%ecx,%ebp
	shrl	$1,%ebx
	shll	$31,%esi
	movl	%ebp,24(%edi)
	orl	%esi,%ebx
	movl	%ebx,28(%edi)
	ret
.size	_ecp_nistz256_div_by_2,.-_ecp_nistz256_div_by_2
.globl	ecp_nistz256_add
.type	ecp_nistz256_add,@function
.align	16
ecp_nistz256_add:
.L_ecp_nistz256_add_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	24(%esp),%esi
	movl	28(%esp),%ebp
	movl	20(%esp),%edi
	call	_ecp_nistz256_add
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_add,.-.L_ecp_nistz256_add_begin
.type	_ecp_nistz256_add,@function
.align	16
_ecp_nistz256_add:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	movl	(%esi),%eax
	movl	4(%esi),%ebx
	movl	8(%esi),%ecx
	addl	(%ebp),%eax
	movl	12(%esi),%edx
	adcl	4(%ebp),%ebx
	movl	%eax,(%edi)
	adcl	8(%ebp),%ecx
	movl	%ebx,4(%edi)
	adcl	12(%ebp),%edx
	movl	%ecx,8(%edi)
	movl	%edx,12(%edi)
	movl	16(%esi),%eax
	movl	20(%esi),%ebx
	movl	24(%esi),%ecx
	adcl	16(%ebp),%eax
	movl	28(%esi),%edx
	adcl	20(%ebp),%ebx
	movl	%eax,16(%edi)
	adcl	24(%ebp),%ecx
	movl	%ebx,20(%edi)
	movl	$0,%esi
	adcl	28(%ebp),%edx
	movl	%ecx,24(%edi)
	adcl	$0,%esi
	movl	%edx,28(%edi)
	movl	(%edi),%eax
	movl	4(%edi),%ebx
	movl	8(%edi),%ecx
	subl	$-1,%eax
	movl	12(%edi),%edx
	sbbl	$-1,%ebx
	movl	16(%edi),%eax
	sbbl	$-1,%ecx
	movl	20(%edi),%ebx
	sbbl	$0,%edx
	movl	24(%edi),%ecx
	sbbl	$0,%eax
	movl	28(%edi),%edx
	sbbl	$0,%ebx
	sbbl	$1,%ecx
	sbbl	$-1,%edx
	sbbl	$0,%esi
	notl	%esi
	movl	(%edi),%eax
	movl	%esi,%ebp
	movl	4(%edi),%ebx
	shrl	$31,%ebp
	movl	8(%edi),%ecx
	subl	%esi,%eax
	movl	12(%edi),%edx
	sbbl	%esi,%ebx
	movl	%eax,(%edi)
	sbbl	%esi,%ecx
	movl	%ebx,4(%edi)
	sbbl	$0,%edx
	movl	%ecx,8(%edi)
	movl	%edx,12(%edi)
	movl	16(%edi),%eax
	movl	20(%edi),%ebx
	movl	24(%edi),%ecx
	sbbl	$0,%eax
	movl	28(%edi),%edx
	sbbl	$0,%ebx
	movl	%eax,16(%edi)
	sbbl	%ebp,%ecx
	movl	%ebx,20(%edi)
	sbbl	%esi,%edx
	movl	%ecx,24(%edi)
	movl	%edx,28(%edi)
	ret
.size	_ecp_nistz256_add,.-_ecp_nistz256_add
.globl	ecp_nistz256_sub
.type	ecp_nistz256_sub,@function
.align	16
ecp_nistz256_sub:
.L_ecp_nistz256_sub_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	24(%esp),%esi
	movl	28(%esp),%ebp
	movl	20(%esp),%edi
	call	_ecp_nistz256_sub
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_sub,.-.L_ecp_nistz256_sub_begin
.type	_ecp_nistz256_sub,@function
.align	16
_ecp_nistz256_sub:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	movl	(%esi),%eax
	movl	4(%esi),%ebx
	movl	8(%esi),%ecx
	subl	(%ebp),%eax
	movl	12(%esi),%edx
	sbbl	4(%ebp),%ebx
	movl	%eax,(%edi)
	sbbl	8(%ebp),%ecx
	movl	%ebx,4(%edi)
	sbbl	12(%ebp),%edx
	movl	%ecx,8(%edi)
	movl	%edx,12(%edi)
	movl	16(%esi),%eax
	movl	20(%esi),%ebx
	movl	24(%esi),%ecx
	sbbl	16(%ebp),%eax
	movl	28(%esi),%edx
	sbbl	20(%ebp),%ebx
	sbbl	24(%ebp),%ecx
	movl	%eax,16(%edi)
	sbbl	28(%ebp),%edx
	movl	%ebx,20(%edi)
	sbbl	%esi,%esi
	movl	%ecx,24(%edi)
	movl	%edx,28(%edi)
	movl	(%edi),%eax
	movl	%esi,%ebp
	movl	4(%edi),%ebx
	shrl	$31,%ebp
	movl	8(%edi),%ecx
	addl	%esi,%eax
	movl	12(%edi),%edx
	adcl	%esi,%ebx
	movl	%eax,(%edi)
	adcl	%esi,%ecx
	movl	%ebx,4(%edi)
	adcl	$0,%edx
	movl	%ecx,8(%edi)
	movl	%edx,12(%edi)
	movl	16(%edi),%eax
	movl	20(%edi),%ebx
	movl	24(%edi),%ecx
	adcl	$0,%eax
	movl	28(%edi),%edx
	adcl	$0,%ebx
	movl	%eax,16(%edi)
	adcl	%ebp,%ecx
	movl	%ebx,20(%edi)
	adcl	%esi,%edx
	movl	%ecx,24(%edi)
	movl	%edx,28(%edi)
	ret
.size	_ecp_nistz256_sub,.-_ecp_nistz256_sub
.globl	ecp_nistz256_neg
.type	ecp_nistz256_neg,@function
.align	16
ecp_nistz256_neg:
.L_ecp_nistz256_neg_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	24(%esp),%ebp
	movl	20(%esp),%edi
	xorl	%eax,%eax
	subl	$32,%esp
	movl	%eax,(%esp)
	movl	%esp,%esi
	movl	%eax,4(%esp)
	movl	%eax,8(%esp)
	movl	%eax,12(%esp)
	movl	%eax,16(%esp)
	movl	%eax,20(%esp)
	movl	%eax,24(%esp)
	movl	%eax,28(%esp)
	call	_ecp_nistz256_sub
	addl	$32,%esp
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_neg,.-.L_ecp_nistz256_neg_begin
.type	_picup_eax,@function
.align	16
_picup_eax:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	movl	(%esp),%eax
	ret
.size	_picup_eax,.-_picup_eax
.globl	ecp_nistz256_to_mont
.type	ecp_nistz256_to_mont,@function
.align	16
ecp_nistz256_to_mont:
.L_ecp_nistz256_to_mont_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	24(%esp),%esi
	call	_picup_eax
.L000pic:
	leal	.LRR-.L000pic(%eax),%ebp
	leal	OPENSSL_ia32cap_P-.L000pic(%eax),%eax
	movl	(%eax),%eax
	movl	20(%esp),%edi
	call	_ecp_nistz256_mul_mont
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_to_mont,.-.L_ecp_nistz256_to_mont_begin
.globl	ecp_nistz256_from_mont
.type	ecp_nistz256_from_mont,@function
.align	16
ecp_nistz256_from_mont:
.L_ecp_nistz256_from_mont_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	24(%esp),%esi
	call	_picup_eax
.L001pic:
	leal	.LONE-.L001pic(%eax),%ebp
	leal	OPENSSL_ia32cap_P-.L001pic(%eax),%eax
	movl	(%eax),%eax
	movl	20(%esp),%edi
	call	_ecp_nistz256_mul_mont
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_from_mont,.-.L_ecp_nistz256_from_mont_begin
.globl	ecp_nistz256_mul_mont
.type	ecp_nistz256_mul_mont,@function
.align	16
ecp_nistz256_mul_mont:
.L_ecp_nistz256_mul_mont_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	24(%esp),%esi
	movl	28(%esp),%ebp
	call	_picup_eax
.L002pic:
	leal	OPENSSL_ia32cap_P-.L002pic(%eax),%eax
	movl	(%eax),%eax
	movl	20(%esp),%edi
	call	_ecp_nistz256_mul_mont
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_mul_mont,.-.L_ecp_nistz256_mul_mont_begin
.globl	ecp_nistz256_sqr_mont
.type	ecp_nistz256_sqr_mont,@function
.align	16
ecp_nistz256_sqr_mont:
.L_ecp_nistz256_sqr_mont_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	24(%esp),%esi
	call	_picup_eax
.L003pic:
	leal	OPENSSL_ia32cap_P-.L003pic(%eax),%eax
	movl	(%eax),%eax
	movl	20(%esp),%edi
	movl	%esi,%ebp
	call	_ecp_nistz256_mul_mont
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_sqr_mont,.-.L_ecp_nistz256_sqr_mont_begin
.type	_ecp_nistz256_mul_mont,@function
.align	16
_ecp_nistz256_mul_mont:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	andl	$83886080,%eax
	cmpl	$83886080,%eax
	jne	.L004mul_mont_ialu
	movl	%esp,%edx
	subl	$256,%esp
	movd	(%ebp),%xmm7
	leal	4(%ebp),%ebp
	pcmpeqd	%xmm6,%xmm6
	psrlq	$48,%xmm6
	pshuflw	$220,%xmm7,%xmm7
	andl	$-64,%esp
	pshufd	$220,%xmm7,%xmm7
	leal	128(%esp),%ebx
	movd	(%esi),%xmm0
	pshufd	$204,%xmm0,%xmm0
	movd	4(%esi),%xmm1
	movdqa	%xmm0,(%ebx)
	pmuludq	%xmm7,%xmm0
	movd	8(%esi),%xmm2
	pshufd	$204,%xmm1,%xmm1
	movdqa	%xmm1,16(%ebx)
	pmuludq	%xmm7,%xmm1
	movq	%xmm0,%xmm4
	pslldq	$6,%xmm4
	paddq	%xmm0,%xmm4
	movdqa	%xmm4,%xmm5
	psrldq	$10,%xmm4
	pand	%xmm6,%xmm5
	movd	12(%esi),%xmm3
	pshufd	$204,%xmm2,%xmm2
	movdqa	%xmm2,32(%ebx)
	pmuludq	%xmm7,%xmm2
	paddq	%xmm4,%xmm1
	movdqa	%xmm1,(%esp)
	movd	16(%esi),%xmm0
	pshufd	$204,%xmm3,%xmm3
	movdqa	%xmm3,48(%ebx)
	pmuludq	%xmm7,%xmm3
	movdqa	%xmm2,16(%esp)
	movd	20(%esi),%xmm1
	pshufd	$204,%xmm0,%xmm0
	movdqa	%xmm0,64(%ebx)
	pmuludq	%xmm7,%xmm0
	paddq	%xmm5,%xmm3
	movdqa	%xmm3,32(%esp)
	movd	24(%esi),%xmm2
	pshufd	$204,%xmm1,%xmm1
	movdqa	%xmm1,80(%ebx)
	pmuludq	%xmm7,%xmm1
	movdqa	%xmm0,48(%esp)
	pshufd	$177,%xmm5,%xmm4
	movd	28(%esi),%xmm3
	pshufd	$204,%xmm2,%xmm2
	movdqa	%xmm2,96(%ebx)
	pmuludq	%xmm7,%xmm2
	movdqa	%xmm1,64(%esp)
	psubq	%xmm5,%xmm4
	movd	(%ebp),%xmm0
	pshufd	$204,%xmm3,%xmm3
	movdqa	%xmm3,112(%ebx)
	pmuludq	%xmm7,%xmm3
	pshuflw	$220,%xmm0,%xmm7
	movdqa	(%ebx),%xmm0
	pshufd	$220,%xmm7,%xmm7
	movl	$6,%ecx
	leal	4(%ebp),%ebp
	jmp	.L005madd_sse2
.align	16
.L005madd_sse2:
	paddq	%xmm5,%xmm2
	paddq	%xmm4,%xmm3
	movdqa	16(%ebx),%xmm1
	pmuludq	%xmm7,%xmm0
	movdqa	%xmm2,80(%esp)
	movdqa	32(%ebx),%xmm2
	pmuludq	%xmm7,%xmm1
	movdqa	%xmm3,96(%esp)
	paddq	(%esp),%xmm0
	movdqa	48(%ebx),%xmm3
	pmuludq	%xmm7,%xmm2
	movq	%xmm0,%xmm4
	pslldq	$6,%xmm4
	paddq	16(%esp),%xmm1
	paddq	%xmm0,%xmm4
	movdqa	%xmm4,%xmm5
	psrldq	$10,%xmm4
	movdqa	64(%ebx),%xmm0
	pmuludq	%xmm7,%xmm3
	paddq	%xmm4,%xmm1
	paddq	32(%esp),%xmm2
	movdqa	%xmm1,(%esp)
	movdqa	80(%ebx),%xmm1
	pmuludq	%xmm7,%xmm0
	paddq	48(%esp),%xmm3
	movdqa	%xmm2,16(%esp)
	pand	%xmm6,%xmm5
	movdqa	96(%ebx),%xmm2
	pmuludq	%xmm7,%xmm1
	paddq	%xmm5,%xmm3
	paddq	64(%esp),%xmm0
	movdqa	%xmm3,32(%esp)
	pshufd	$177,%xmm5,%xmm4
	movdqa	%xmm7,%xmm3
	pmuludq	%xmm7,%xmm2
	movd	(%ebp),%xmm7
	leal	4(%ebp),%ebp
	paddq	80(%esp),%xmm1
	psubq	%xmm5,%xmm4
	movdqa	%xmm0,48(%esp)
	pshuflw	$220,%xmm7,%xmm7
	pmuludq	112(%ebx),%xmm3
	pshufd	$220,%xmm7,%xmm7
	movdqa	(%ebx),%xmm0
	movdqa	%xmm1,64(%esp)
	paddq	96(%esp),%xmm2
	decl	%ecx
	jnz	.L005madd_sse2
	paddq	%xmm5,%xmm2
	paddq	%xmm4,%xmm3
	movdqa	16(%ebx),%xmm1
	pmuludq	%xmm7,%xmm0
	movdqa	%xmm2,80(%esp)
	movdqa	32(%ebx),%xmm2
	pmuludq	%xmm7,%xmm1
	movdqa	%xmm3,96(%esp)
	paddq	(%esp),%xmm0
	movdqa	48(%ebx),%xmm3
	pmuludq	%xmm7,%xmm2
	movq	%xmm0,%xmm4
	pslldq	$6,%xmm4
	paddq	16(%esp),%xmm1
	paddq	%xmm0,%xmm4
	movdqa	%xmm4,%xmm5
	psrldq	$10,%xmm4
	movdqa	64(%ebx),%xmm0
	pmuludq	%xmm7,%xmm3
	paddq	%xmm4,%xmm1
	paddq	32(%esp),%xmm2
	movdqa	%xmm1,(%esp)
	movdqa	80(%ebx),%xmm1
	pmuludq	%xmm7,%xmm0
	paddq	48(%esp),%xmm3
	movdqa	%xmm2,16(%esp)
	pand	%xmm6,%xmm5
	movdqa	96(%ebx),%xmm2
	pmuludq	%xmm7,%xmm1
	paddq	%xmm5,%xmm3
	paddq	64(%esp),%xmm0
	movdqa	%xmm3,32(%esp)
	pshufd	$177,%xmm5,%xmm4
	movdqa	112(%ebx),%xmm3
	pmuludq	%xmm7,%xmm2
	paddq	80(%esp),%xmm1
	psubq	%xmm5,%xmm4
	movdqa	%xmm0,48(%esp)
	pmuludq	%xmm7,%xmm3
	pcmpeqd	%xmm7,%xmm7
	movdqa	(%esp),%xmm0
	pslldq	$8,%xmm7
	movdqa	%xmm1,64(%esp)
	paddq	96(%esp),%xmm2
	paddq	%xmm5,%xmm2
	paddq	%xmm4,%xmm3
	movdqa	%xmm2,80(%esp)
	movdqa	%xmm3,96(%esp)
	movdqa	16(%esp),%xmm1
	movdqa	32(%esp),%xmm2
	movdqa	48(%esp),%xmm3
	movq	%xmm0,%xmm4
	pand	%xmm7,%xmm0
	xorl	%ebp,%ebp
	pslldq	$6,%xmm4
	movq	%xmm1,%xmm5
	paddq	%xmm4,%xmm0
	pand	%xmm7,%xmm1
	psrldq	$6,%xmm0
	movd	%xmm0,%eax
	psrldq	$4,%xmm0
	paddq	%xmm0,%xmm5
	movdqa	64(%esp),%xmm0
	subl	$-1,%eax
	pslldq	$6,%xmm5
	movq	%xmm2,%xmm4
	paddq	%xmm5,%xmm1
	pand	%xmm7,%xmm2
	psrldq	$6,%xmm1
	movl	%eax,(%edi)
	movd	%xmm1,%eax
	psrldq	$4,%xmm1
	paddq	%xmm1,%xmm4
	movdqa	80(%esp),%xmm1
	sbbl	$-1,%eax
	pslldq	$6,%xmm4
	movq	%xmm3,%xmm5
	paddq	%xmm4,%xmm2
	pand	%xmm7,%xmm3
	psrldq	$6,%xmm2
	movl	%eax,4(%edi)
	movd	%xmm2,%eax
	psrldq	$4,%xmm2
	paddq	%xmm2,%xmm5
	movdqa	96(%esp),%xmm2
	sbbl	$-1,%eax
	pslldq	$6,%xmm5
	movq	%xmm0,%xmm4
	paddq	%xmm5,%xmm3
	pand	%xmm7,%xmm0
	psrldq	$6,%xmm3
	movl	%eax,8(%edi)
	movd	%xmm3,%eax
	psrldq	$4,%xmm3
	paddq	%xmm3,%xmm4
	sbbl	$0,%eax
	pslldq	$6,%xmm4
	movq	%xmm1,%xmm5
	paddq	%xmm4,%xmm0
	pand	%xmm7,%xmm1
	psrldq	$6,%xmm0
	movl	%eax,12(%edi)
	movd	%xmm0,%eax
	psrldq	$4,%xmm0
	paddq	%xmm0,%xmm5
	sbbl	$0,%eax
	pslldq	$6,%xmm5
	movq	%xmm2,%xmm4
	paddq	%xmm5,%xmm1
	pand	%xmm7,%xmm2
	psrldq	$6,%xmm1
	movd	%xmm1,%ebx
	psrldq	$4,%xmm1
	movl	%edx,%esp
	paddq	%xmm1,%xmm4
	pslldq	$6,%xmm4
	paddq	%xmm4,%xmm2
	psrldq	$6,%xmm2
	movd	%xmm2,%ecx
	psrldq	$4,%xmm2
	sbbl	$0,%ebx
	movd	%xmm2,%edx
	pextrw	$2,%xmm2,%esi
	sbbl	$1,%ecx
	sbbl	$-1,%edx
	sbbl	$0,%esi
	subl	%esi,%ebp
	addl	%esi,(%edi)
	adcl	%esi,4(%edi)
	adcl	%esi,8(%edi)
	adcl	$0,12(%edi)
	adcl	$0,%eax
	adcl	$0,%ebx
	movl	%eax,16(%edi)
	adcl	%ebp,%ecx
	movl	%ebx,20(%edi)
	adcl	%esi,%edx
	movl	%ecx,24(%edi)
	movl	%edx,28(%edi)
	ret
.align	16
.L004mul_mont_ialu:
	subl	$40,%esp
	movl	(%esi),%eax
	movl	(%ebp),%ebx
	movl	%edi,32(%esp)
	mull	%ebx
	movl	%eax,(%esp)
	movl	4(%esi),%eax
	movl	%edx,%ecx
	mull	%ebx
	addl	%eax,%ecx
	movl	8(%esi),%eax
	adcl	$0,%edx
	movl	%ecx,4(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	%eax,%ecx
	movl	12(%esi),%eax
	adcl	$0,%edx
	movl	%ecx,8(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	%eax,%ecx
	movl	16(%esi),%eax
	adcl	$0,%edx
	movl	%ecx,12(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	%eax,%ecx
	movl	20(%esi),%eax
	adcl	$0,%edx
	movl	%ecx,16(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	%eax,%ecx
	movl	24(%esi),%eax
	adcl	$0,%edx
	movl	%ecx,20(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	%eax,%ecx
	movl	28(%esi),%eax
	adcl	$0,%edx
	movl	%ecx,24(%esp)
	movl	%edx,%ecx
	xorl	%edi,%edi
	mull	%ebx
	addl	%eax,%ecx
	movl	(%esp),%eax
	adcl	$0,%edx
	addl	%eax,12(%esp)
	adcl	$0,16(%esp)
	adcl	$0,20(%esp)
	adcl	%eax,24(%esp)
	adcl	$0,%ecx
	adcl	%eax,%edx
	adcl	$0,%edi
	movl	4(%ebp),%ebx
	subl	%eax,%ecx
	movl	(%esi),%eax
	sbbl	$0,%edx
	movl	%ecx,28(%esp)
	sbbl	$0,%edi
	movl	%edx,(%esp)
	mull	%ebx
	addl	4(%esp),%eax
	adcl	$0,%edx
	movl	%eax,4(%esp)
	movl	4(%esi),%eax
	movl	%edx,%ecx
	mull	%ebx
	addl	8(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	8(%esi),%eax
	movl	%ecx,8(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	12(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	12(%esi),%eax
	movl	%ecx,12(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	16(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	16(%esi),%eax
	movl	%ecx,16(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	20(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	20(%esi),%eax
	movl	%ecx,20(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	24(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	24(%esi),%eax
	movl	%ecx,24(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	28(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	28(%esi),%eax
	movl	%ecx,28(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	movl	4(%esp),%eax
	adcl	%edi,%edx
	movl	$0,%edi
	adcl	$0,%edi
	addl	%eax,16(%esp)
	adcl	$0,20(%esp)
	adcl	$0,24(%esp)
	adcl	%eax,28(%esp)
	adcl	$0,%ecx
	adcl	%eax,%edx
	adcl	$0,%edi
	movl	8(%ebp),%ebx
	subl	%eax,%ecx
	movl	(%esi),%eax
	sbbl	$0,%edx
	movl	%ecx,(%esp)
	sbbl	$0,%edi
	movl	%edx,4(%esp)
	mull	%ebx
	addl	8(%esp),%eax
	adcl	$0,%edx
	movl	%eax,8(%esp)
	movl	4(%esi),%eax
	movl	%edx,%ecx
	mull	%ebx
	addl	12(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	8(%esi),%eax
	movl	%ecx,12(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	16(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	12(%esi),%eax
	movl	%ecx,16(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	20(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	16(%esi),%eax
	movl	%ecx,20(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	24(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	20(%esi),%eax
	movl	%ecx,24(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	28(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	24(%esi),%eax
	movl	%ecx,28(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	28(%esi),%eax
	movl	%ecx,(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	4(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	movl	8(%esp),%eax
	adcl	%edi,%edx
	movl	$0,%edi
	adcl	$0,%edi
	addl	%eax,20(%esp)
	adcl	$0,24(%esp)
	adcl	$0,28(%esp)
	adcl	%eax,(%esp)
	adcl	$0,%ecx
	adcl	%eax,%edx
	adcl	$0,%edi
	movl	12(%ebp),%ebx
	subl	%eax,%ecx
	movl	(%esi),%eax
	sbbl	$0,%edx
	movl	%ecx,4(%esp)
	sbbl	$0,%edi
	movl	%edx,8(%esp)
	mull	%ebx
	addl	12(%esp),%eax
	adcl	$0,%edx
	movl	%eax,12(%esp)
	movl	4(%esi),%eax
	movl	%edx,%ecx
	mull	%ebx
	addl	16(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	8(%esi),%eax
	movl	%ecx,16(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	20(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	12(%esi),%eax
	movl	%ecx,20(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	24(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	16(%esi),%eax
	movl	%ecx,24(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	28(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	20(%esi),%eax
	movl	%ecx,28(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	24(%esi),%eax
	movl	%ecx,(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	4(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	28(%esi),%eax
	movl	%ecx,4(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	8(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	movl	12(%esp),%eax
	adcl	%edi,%edx
	movl	$0,%edi
	adcl	$0,%edi
	addl	%eax,24(%esp)
	adcl	$0,28(%esp)
	adcl	$0,(%esp)
	adcl	%eax,4(%esp)
	adcl	$0,%ecx
	adcl	%eax,%edx
	adcl	$0,%edi
	movl	16(%ebp),%ebx
	subl	%eax,%ecx
	movl	(%esi),%eax
	sbbl	$0,%edx
	movl	%ecx,8(%esp)
	sbbl	$0,%edi
	movl	%edx,12(%esp)
	mull	%ebx
	addl	16(%esp),%eax
	adcl	$0,%edx
	movl	%eax,16(%esp)
	movl	4(%esi),%eax
	movl	%edx,%ecx
	mull	%ebx
	addl	20(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	8(%esi),%eax
	movl	%ecx,20(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	24(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	12(%esi),%eax
	movl	%ecx,24(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	28(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	16(%esi),%eax
	movl	%ecx,28(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	20(%esi),%eax
	movl	%ecx,(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	4(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	24(%esi),%eax
	movl	%ecx,4(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	8(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	28(%esi),%eax
	movl	%ecx,8(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	12(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	movl	16(%esp),%eax
	adcl	%edi,%edx
	movl	$0,%edi
	adcl	$0,%edi
	addl	%eax,28(%esp)
	adcl	$0,(%esp)
	adcl	$0,4(%esp)
	adcl	%eax,8(%esp)
	adcl	$0,%ecx
	adcl	%eax,%edx
	adcl	$0,%edi
	movl	20(%ebp),%ebx
	subl	%eax,%ecx
	movl	(%esi),%eax
	sbbl	$0,%edx
	movl	%ecx,12(%esp)
	sbbl	$0,%edi
	movl	%edx,16(%esp)
	mull	%ebx
	addl	20(%esp),%eax
	adcl	$0,%edx
	movl	%eax,20(%esp)
	movl	4(%esi),%eax
	movl	%edx,%ecx
	mull	%ebx
	addl	24(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	8(%esi),%eax
	movl	%ecx,24(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	28(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	12(%esi),%eax
	movl	%ecx,28(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	16(%esi),%eax
	movl	%ecx,(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	4(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	20(%esi),%eax
	movl	%ecx,4(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	8(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	24(%esi),%eax
	movl	%ecx,8(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	12(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	28(%esi),%eax
	movl	%ecx,12(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	16(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	movl	20(%esp),%eax
	adcl	%edi,%edx
	movl	$0,%edi
	adcl	$0,%edi
	addl	%eax,(%esp)
	adcl	$0,4(%esp)
	adcl	$0,8(%esp)
	adcl	%eax,12(%esp)
	adcl	$0,%ecx
	adcl	%eax,%edx
	adcl	$0,%edi
	movl	24(%ebp),%ebx
	subl	%eax,%ecx
	movl	(%esi),%eax
	sbbl	$0,%edx
	movl	%ecx,16(%esp)
	sbbl	$0,%edi
	movl	%edx,20(%esp)
	mull	%ebx
	addl	24(%esp),%eax
	adcl	$0,%edx
	movl	%eax,24(%esp)
	movl	4(%esi),%eax
	movl	%edx,%ecx
	mull	%ebx
	addl	28(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	8(%esi),%eax
	movl	%ecx,28(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	12(%esi),%eax
	movl	%ecx,(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	4(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	16(%esi),%eax
	movl	%ecx,4(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	8(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	20(%esi),%eax
	movl	%ecx,8(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	12(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	24(%esi),%eax
	movl	%ecx,12(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	16(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	28(%esi),%eax
	movl	%ecx,16(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	20(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	movl	24(%esp),%eax
	adcl	%edi,%edx
	movl	$0,%edi
	adcl	$0,%edi
	addl	%eax,4(%esp)
	adcl	$0,8(%esp)
	adcl	$0,12(%esp)
	adcl	%eax,16(%esp)
	adcl	$0,%ecx
	adcl	%eax,%edx
	adcl	$0,%edi
	movl	28(%ebp),%ebx
	subl	%eax,%ecx
	movl	(%esi),%eax
	sbbl	$0,%edx
	movl	%ecx,20(%esp)
	sbbl	$0,%edi
	movl	%edx,24(%esp)
	mull	%ebx
	addl	28(%esp),%eax
	adcl	$0,%edx
	movl	%eax,28(%esp)
	movl	4(%esi),%eax
	movl	%edx,%ecx
	mull	%ebx
	addl	(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	8(%esi),%eax
	movl	%ecx,(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	4(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	12(%esi),%eax
	movl	%ecx,4(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	8(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	16(%esi),%eax
	movl	%ecx,8(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	12(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	20(%esi),%eax
	movl	%ecx,12(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	16(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	24(%esi),%eax
	movl	%ecx,16(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	20(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	adcl	$0,%edx
	movl	28(%esi),%eax
	movl	%ecx,20(%esp)
	movl	%edx,%ecx
	mull	%ebx
	addl	24(%esp),%ecx
	adcl	$0,%edx
	addl	%eax,%ecx
	movl	28(%esp),%eax
	adcl	%edi,%edx
	movl	$0,%edi
	adcl	$0,%edi
	movl	32(%esp),%ebp
	xorl	%esi,%esi
	addl	%eax,8(%esp)
	adcl	$0,12(%esp)
	adcl	$0,16(%esp)
	adcl	%eax,20(%esp)
	adcl	$0,%ecx
	adcl	%eax,%edx
	adcl	$0,%edi
	movl	4(%esp),%ebx
	subl	%eax,%ecx
	movl	(%esp),%eax
	sbbl	$0,%edx
	movl	%ecx,24(%esp)
	sbbl	$0,%edi
	movl	%edx,28(%esp)
	movl	8(%esp),%ecx
	subl	$-1,%eax
	movl	12(%esp),%edx
	sbbl	$-1,%ebx
	movl	%eax,(%ebp)
	sbbl	$-1,%ecx
	movl	%ebx,4(%ebp)
	sbbl	$0,%edx
	movl	%ecx,8(%ebp)
	movl	%edx,12(%ebp)
	movl	16(%esp),%eax
	movl	20(%esp),%ebx
	movl	24(%esp),%ecx
	sbbl	$0,%eax
	movl	28(%esp),%edx
	sbbl	$0,%ebx
	sbbl	$1,%ecx
	sbbl	$-1,%edx
	sbbl	$0,%edi
	subl	%edi,%esi
	addl	%edi,(%ebp)
	adcl	%edi,4(%ebp)
	adcl	%edi,8(%ebp)
	adcl	$0,12(%ebp)
	adcl	$0,%eax
	adcl	$0,%ebx
	movl	%eax,16(%ebp)
	adcl	%esi,%ecx
	movl	%ebx,20(%ebp)
	adcl	%edi,%edx
	movl	%ecx,24(%ebp)
	movl	%ebp,%edi
	movl	%edx,28(%ebp)
	addl	$40,%esp
	ret
.size	_ecp_nistz256_mul_mont,.-_ecp_nistz256_mul_mont
.globl	ecp_nistz256_scatter_w5
.type	ecp_nistz256_scatter_w5,@function
.align	16
ecp_nistz256_scatter_w5:
.L_ecp_nistz256_scatter_w5_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%edi
	movl	24(%esp),%esi
	movl	28(%esp),%ebp
	leal	124(%edi,%ebp,4),%edi
	movl	$6,%ebp
.L006scatter_w5_loop:
	movl	(%esi),%eax
	movl	4(%esi),%ebx
	movl	8(%esi),%ecx
	movl	12(%esi),%edx
	leal	16(%esi),%esi
	movl	%eax,-128(%edi)
	movl	%ebx,-64(%edi)
	movl	%ecx,(%edi)
	movl	%edx,64(%edi)
	leal	256(%edi),%edi
	decl	%ebp
	jnz	.L006scatter_w5_loop
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_scatter_w5,.-.L_ecp_nistz256_scatter_w5_begin
.globl	ecp_nistz256_gather_w5
.type	ecp_nistz256_gather_w5,@function
.align	16
ecp_nistz256_gather_w5:
.L_ecp_nistz256_gather_w5_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	24(%esp),%esi
	movl	28(%esp),%ebp
	leal	(%esi,%ebp,4),%esi
	negl	%ebp
	sarl	$31,%ebp
	movl	20(%esp),%edi
	leal	(%esi,%ebp,4),%esi
	movl	(%esi),%eax
	movl	64(%esi),%ebx
	movl	128(%esi),%ecx
	movl	192(%esi),%edx
	andl	%ebp,%eax
	andl	%ebp,%ebx
	andl	%ebp,%ecx
	andl	%ebp,%edx
	movl	%eax,(%edi)
	movl	%ebx,4(%edi)
	movl	%ecx,8(%edi)
	movl	%edx,12(%edi)
	movl	256(%esi),%eax
	movl	320(%esi),%ebx
	movl	384(%esi),%ecx
	movl	448(%esi),%edx
	andl	%ebp,%eax
	andl	%ebp,%ebx
	andl	%ebp,%ecx
	andl	%ebp,%edx
	movl	%eax,16(%edi)
	movl	%ebx,20(%edi)
	movl	%ecx,24(%edi)
	movl	%edx,28(%edi)
	movl	512(%esi),%eax
	movl	576(%esi),%ebx
	movl	640(%esi),%ecx
	movl	704(%esi),%edx
	andl	%ebp,%eax
	andl	%ebp,%ebx
	andl	%ebp,%ecx
	andl	%ebp,%edx
	movl	%eax,32(%edi)
	movl	%ebx,36(%edi)
	movl	%ecx,40(%edi)
	movl	%edx,44(%edi)
	movl	768(%esi),%eax
	movl	832(%esi),%ebx
	movl	896(%esi),%ecx
	movl	960(%esi),%edx
	andl	%ebp,%eax
	andl	%ebp,%ebx
	andl	%ebp,%ecx
	andl	%ebp,%edx
	movl	%eax,48(%edi)
	movl	%ebx,52(%edi)
	movl	%ecx,56(%edi)
	movl	%edx,60(%edi)
	movl	1024(%esi),%eax
	movl	1088(%esi),%ebx
	movl	1152(%esi),%ecx
	movl	1216(%esi),%edx
	andl	%ebp,%eax
	andl	%ebp,%ebx
	andl	%ebp,%ecx
	andl	%ebp,%edx
	movl	%eax,64(%edi)
	movl	%ebx,68(%edi)
	movl	%ecx,72(%edi)
	movl	%edx,76(%edi)
	movl	1280(%esi),%eax
	movl	1344(%esi),%ebx
	movl	1408(%esi),%ecx
	movl	1472(%esi),%edx
	andl	%ebp,%eax
	andl	%ebp,%ebx
	andl	%ebp,%ecx
	andl	%ebp,%edx
	movl	%eax,80(%edi)
	movl	%ebx,84(%edi)
	movl	%ecx,88(%edi)
	movl	%edx,92(%edi)
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_gather_w5,.-.L_ecp_nistz256_gather_w5_begin
.globl	ecp_nistz256_scatter_w7
.type	ecp_nistz256_scatter_w7,@function
.align	16
ecp_nistz256_scatter_w7:
.L_ecp_nistz256_scatter_w7_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%edi
	movl	24(%esp),%esi
	movl	28(%esp),%ebp
	leal	(%edi,%ebp,1),%edi
	movl	$16,%ebp
.L007scatter_w7_loop:
	movl	(%esi),%eax
	leal	4(%esi),%esi
	movb	%al,(%edi)
	movb	%ah,64(%edi)
	shrl	$16,%eax
	movb	%al,128(%edi)
	movb	%ah,192(%edi)
	leal	256(%edi),%edi
	decl	%ebp
	jnz	.L007scatter_w7_loop
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_scatter_w7,.-.L_ecp_nistz256_scatter_w7_begin
.globl	ecp_nistz256_gather_w7
.type	ecp_nistz256_gather_w7,@function
.align	16
ecp_nistz256_gather_w7:
.L_ecp_nistz256_gather_w7_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	24(%esp),%esi
	movl	28(%esp),%ebp
	addl	%ebp,%esi
	negl	%ebp
	sarl	$31,%ebp
	movl	20(%esp),%edi
	leal	(%esi,%ebp,1),%esi
	movzbl	(%esi),%eax
	movzbl	64(%esi),%ebx
	movzbl	128(%esi),%ecx
	andl	%ebp,%eax
	movzbl	192(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,(%edi)
	andl	%ebp,%ecx
	movb	%bl,1(%edi)
	andl	%ebp,%edx
	movb	%cl,2(%edi)
	movb	%dl,3(%edi)
	movzbl	256(%esi),%eax
	movzbl	320(%esi),%ebx
	movzbl	384(%esi),%ecx
	andl	%ebp,%eax
	movzbl	448(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,4(%edi)
	andl	%ebp,%ecx
	movb	%bl,5(%edi)
	andl	%ebp,%edx
	movb	%cl,6(%edi)
	movb	%dl,7(%edi)
	movzbl	512(%esi),%eax
	movzbl	576(%esi),%ebx
	movzbl	640(%esi),%ecx
	andl	%ebp,%eax
	movzbl	704(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,8(%edi)
	andl	%ebp,%ecx
	movb	%bl,9(%edi)
	andl	%ebp,%edx
	movb	%cl,10(%edi)
	movb	%dl,11(%edi)
	movzbl	768(%esi),%eax
	movzbl	832(%esi),%ebx
	movzbl	896(%esi),%ecx
	andl	%ebp,%eax
	movzbl	960(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,12(%edi)
	andl	%ebp,%ecx
	movb	%bl,13(%edi)
	andl	%ebp,%edx
	movb	%cl,14(%edi)
	movb	%dl,15(%edi)
	movzbl	1024(%esi),%eax
	movzbl	1088(%esi),%ebx
	movzbl	1152(%esi),%ecx
	andl	%ebp,%eax
	movzbl	1216(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,16(%edi)
	andl	%ebp,%ecx
	movb	%bl,17(%edi)
	andl	%ebp,%edx
	movb	%cl,18(%edi)
	movb	%dl,19(%edi)
	movzbl	1280(%esi),%eax
	movzbl	1344(%esi),%ebx
	movzbl	1408(%esi),%ecx
	andl	%ebp,%eax
	movzbl	1472(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,20(%edi)
	andl	%ebp,%ecx
	movb	%bl,21(%edi)
	andl	%ebp,%edx
	movb	%cl,22(%edi)
	movb	%dl,23(%edi)
	movzbl	1536(%esi),%eax
	movzbl	1600(%esi),%ebx
	movzbl	1664(%esi),%ecx
	andl	%ebp,%eax
	movzbl	1728(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,24(%edi)
	andl	%ebp,%ecx
	movb	%bl,25(%edi)
	andl	%ebp,%edx
	movb	%cl,26(%edi)
	movb	%dl,27(%edi)
	movzbl	1792(%esi),%eax
	movzbl	1856(%esi),%ebx
	movzbl	1920(%esi),%ecx
	andl	%ebp,%eax
	movzbl	1984(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,28(%edi)
	andl	%ebp,%ecx
	movb	%bl,29(%edi)
	andl	%ebp,%edx
	movb	%cl,30(%edi)
	movb	%dl,31(%edi)
	movzbl	2048(%esi),%eax
	movzbl	2112(%esi),%ebx
	movzbl	2176(%esi),%ecx
	andl	%ebp,%eax
	movzbl	2240(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,32(%edi)
	andl	%ebp,%ecx
	movb	%bl,33(%edi)
	andl	%ebp,%edx
	movb	%cl,34(%edi)
	movb	%dl,35(%edi)
	movzbl	2304(%esi),%eax
	movzbl	2368(%esi),%ebx
	movzbl	2432(%esi),%ecx
	andl	%ebp,%eax
	movzbl	2496(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,36(%edi)
	andl	%ebp,%ecx
	movb	%bl,37(%edi)
	andl	%ebp,%edx
	movb	%cl,38(%edi)
	movb	%dl,39(%edi)
	movzbl	2560(%esi),%eax
	movzbl	2624(%esi),%ebx
	movzbl	2688(%esi),%ecx
	andl	%ebp,%eax
	movzbl	2752(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,40(%edi)
	andl	%ebp,%ecx
	movb	%bl,41(%edi)
	andl	%ebp,%edx
	movb	%cl,42(%edi)
	movb	%dl,43(%edi)
	movzbl	2816(%esi),%eax
	movzbl	2880(%esi),%ebx
	movzbl	2944(%esi),%ecx
	andl	%ebp,%eax
	movzbl	3008(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,44(%edi)
	andl	%ebp,%ecx
	movb	%bl,45(%edi)
	andl	%ebp,%edx
	movb	%cl,46(%edi)
	movb	%dl,47(%edi)
	movzbl	3072(%esi),%eax
	movzbl	3136(%esi),%ebx
	movzbl	3200(%esi),%ecx
	andl	%ebp,%eax
	movzbl	3264(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,48(%edi)
	andl	%ebp,%ecx
	movb	%bl,49(%edi)
	andl	%ebp,%edx
	movb	%cl,50(%edi)
	movb	%dl,51(%edi)
	movzbl	3328(%esi),%eax
	movzbl	3392(%esi),%ebx
	movzbl	3456(%esi),%ecx
	andl	%ebp,%eax
	movzbl	3520(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,52(%edi)
	andl	%ebp,%ecx
	movb	%bl,53(%edi)
	andl	%ebp,%edx
	movb	%cl,54(%edi)
	movb	%dl,55(%edi)
	movzbl	3584(%esi),%eax
	movzbl	3648(%esi),%ebx
	movzbl	3712(%esi),%ecx
	andl	%ebp,%eax
	movzbl	3776(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,56(%edi)
	andl	%ebp,%ecx
	movb	%bl,57(%edi)
	andl	%ebp,%edx
	movb	%cl,58(%edi)
	movb	%dl,59(%edi)
	movzbl	3840(%esi),%eax
	movzbl	3904(%esi),%ebx
	movzbl	3968(%esi),%ecx
	andl	%ebp,%eax
	movzbl	4032(%esi),%edx
	andl	%ebp,%ebx
	movb	%al,60(%edi)
	andl	%ebp,%ecx
	movb	%bl,61(%edi)
	andl	%ebp,%edx
	movb	%cl,62(%edi)
	movb	%dl,63(%edi)
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_gather_w7,.-.L_ecp_nistz256_gather_w7_begin
.globl	ecp_nistz256_point_double
.type	ecp_nistz256_point_double,@function
.align	16
ecp_nistz256_point_double:
.L_ecp_nistz256_point_double_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	24(%esp),%esi
	subl	$164,%esp
	call	_picup_eax
.L008pic:
	leal	OPENSSL_ia32cap_P-.L008pic(%eax),%edx
	movl	(%edx),%ebp
.Lpoint_double_shortcut:
	movl	(%esi),%eax
	movl	4(%esi),%ebx
	movl	8(%esi),%ecx
	movl	12(%esi),%edx
	movl	%eax,96(%esp)
	movl	%ebx,100(%esp)
	movl	%ecx,104(%esp)
	movl	%edx,108(%esp)
	movl	16(%esi),%eax
	movl	20(%esi),%ebx
	movl	24(%esi),%ecx
	movl	28(%esi),%edx
	movl	%eax,112(%esp)
	movl	%ebx,116(%esp)
	movl	%ecx,120(%esp)
	movl	%edx,124(%esp)
	movl	%ebp,160(%esp)
	leal	32(%esi),%ebp
	leal	32(%esi),%esi
	leal	(%esp),%edi
	call	_ecp_nistz256_add
	movl	160(%esp),%eax
	movl	$64,%esi
	addl	188(%esp),%esi
	leal	64(%esp),%edi
	movl	%esi,%ebp
	call	_ecp_nistz256_mul_mont
	movl	160(%esp),%eax
	leal	(%esp),%esi
	leal	(%esp),%ebp
	leal	(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	160(%esp),%eax
	movl	188(%esp),%ebp
	leal	32(%ebp),%esi
	leal	64(%ebp),%ebp
	leal	128(%esp),%edi
	call	_ecp_nistz256_mul_mont
	leal	96(%esp),%esi
	leal	64(%esp),%ebp
	leal	32(%esp),%edi
	call	_ecp_nistz256_add
	movl	$64,%edi
	leal	128(%esp),%esi
	leal	128(%esp),%ebp
	addl	184(%esp),%edi
	call	_ecp_nistz256_add
	leal	96(%esp),%esi
	leal	64(%esp),%ebp
	leal	64(%esp),%edi
	call	_ecp_nistz256_sub
	movl	160(%esp),%eax
	leal	(%esp),%esi
	leal	(%esp),%ebp
	leal	128(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	160(%esp),%eax
	leal	32(%esp),%esi
	leal	64(%esp),%ebp
	leal	32(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	$32,%edi
	leal	128(%esp),%esi
	addl	184(%esp),%edi
	call	_ecp_nistz256_div_by_2
	leal	32(%esp),%esi
	leal	32(%esp),%ebp
	leal	128(%esp),%edi
	call	_ecp_nistz256_add
	movl	160(%esp),%eax
	leal	96(%esp),%esi
	leal	(%esp),%ebp
	leal	(%esp),%edi
	call	_ecp_nistz256_mul_mont
	leal	128(%esp),%esi
	leal	32(%esp),%ebp
	leal	32(%esp),%edi
	call	_ecp_nistz256_add
	leal	(%esp),%esi
	leal	(%esp),%ebp
	leal	128(%esp),%edi
	call	_ecp_nistz256_add
	movl	160(%esp),%eax
	leal	32(%esp),%esi
	leal	32(%esp),%ebp
	movl	184(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	%edi,%esi
	leal	128(%esp),%ebp
	call	_ecp_nistz256_sub
	leal	(%esp),%esi
	movl	%edi,%ebp
	leal	(%esp),%edi
	call	_ecp_nistz256_sub
	movl	160(%esp),%eax
	movl	%edi,%esi
	leal	32(%esp),%ebp
	call	_ecp_nistz256_mul_mont
	movl	$32,%ebp
	leal	(%esp),%esi
	addl	184(%esp),%ebp
	movl	%ebp,%edi
	call	_ecp_nistz256_sub
	addl	$164,%esp
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_point_double,.-.L_ecp_nistz256_point_double_begin
.globl	ecp_nistz256_point_add
.type	ecp_nistz256_point_add,@function
.align	16
ecp_nistz256_point_add:
.L_ecp_nistz256_point_add_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	28(%esp),%esi
	subl	$596,%esp
	call	_picup_eax
.L009pic:
	leal	OPENSSL_ia32cap_P-.L009pic(%eax),%edx
	movl	(%edx),%ebp
	leal	192(%esp),%edi
	movl	(%esi),%eax
	movl	4(%esi),%ebx
	movl	8(%esi),%ecx
	movl	12(%esi),%edx
	movl	%eax,(%edi)
	movl	%ebp,588(%esp)
	movl	%ebx,4(%edi)
	movl	%ecx,8(%edi)
	movl	%edx,12(%edi)
	movl	16(%esi),%eax
	movl	20(%esi),%ebx
	movl	24(%esi),%ecx
	movl	28(%esi),%edx
	movl	%eax,16(%edi)
	movl	%ebx,20(%edi)
	movl	%ecx,24(%edi)
	movl	%edx,28(%edi)
	movl	32(%esi),%eax
	movl	36(%esi),%ebx
	movl	40(%esi),%ecx
	movl	44(%esi),%edx
	movl	%eax,32(%edi)
	movl	%ebx,36(%edi)
	movl	%ecx,40(%edi)
	movl	%edx,44(%edi)
	movl	48(%esi),%eax
	movl	52(%esi),%ebx
	movl	56(%esi),%ecx
	movl	60(%esi),%edx
	movl	%eax,48(%edi)
	movl	%ebx,52(%edi)
	movl	%ecx,56(%edi)
	movl	%edx,60(%edi)
	movl	64(%esi),%eax
	movl	68(%esi),%ebx
	movl	72(%esi),%ecx
	movl	76(%esi),%edx
	movl	%eax,64(%edi)
	movl	%eax,%ebp
	movl	%ebx,68(%edi)
	orl	%ebx,%ebp
	movl	%ecx,72(%edi)
	orl	%ecx,%ebp
	movl	%edx,76(%edi)
	orl	%edx,%ebp
	movl	80(%esi),%eax
	movl	84(%esi),%ebx
	movl	88(%esi),%ecx
	movl	92(%esi),%edx
	movl	%eax,80(%edi)
	orl	%eax,%ebp
	movl	%ebx,84(%edi)
	orl	%ebx,%ebp
	movl	%ecx,88(%edi)
	orl	%ecx,%ebp
	movl	%edx,92(%edi)
	orl	%edx,%ebp
	xorl	%eax,%eax
	movl	620(%esp),%esi
	subl	%ebp,%eax
	orl	%eax,%ebp
	sarl	$31,%ebp
	movl	%ebp,580(%esp)
	leal	96(%esp),%edi
	movl	(%esi),%eax
	movl	4(%esi),%ebx
	movl	8(%esi),%ecx
	movl	12(%esi),%edx
	movl	%eax,(%edi)
	movl	%ebx,4(%edi)
	movl	%ecx,8(%edi)
	movl	%edx,12(%edi)
	movl	16(%esi),%eax
	movl	20(%esi),%ebx
	movl	24(%esi),%ecx
	movl	28(%esi),%edx
	movl	%eax,16(%edi)
	movl	%ebx,20(%edi)
	movl	%ecx,24(%edi)
	movl	%edx,28(%edi)
	movl	32(%esi),%eax
	movl	36(%esi),%ebx
	movl	40(%esi),%ecx
	movl	44(%esi),%edx
	movl	%eax,32(%edi)
	movl	%ebx,36(%edi)
	movl	%ecx,40(%edi)
	movl	%edx,44(%edi)
	movl	48(%esi),%eax
	movl	52(%esi),%ebx
	movl	56(%esi),%ecx
	movl	60(%esi),%edx
	movl	%eax,48(%edi)
	movl	%ebx,52(%edi)
	movl	%ecx,56(%edi)
	movl	%edx,60(%edi)
	movl	64(%esi),%eax
	movl	68(%esi),%ebx
	movl	72(%esi),%ecx
	movl	76(%esi),%edx
	movl	%eax,64(%edi)
	movl	%eax,%ebp
	movl	%ebx,68(%edi)
	orl	%ebx,%ebp
	movl	%ecx,72(%edi)
	orl	%ecx,%ebp
	movl	%edx,76(%edi)
	orl	%edx,%ebp
	movl	80(%esi),%eax
	movl	84(%esi),%ebx
	movl	88(%esi),%ecx
	movl	92(%esi),%edx
	movl	%eax,80(%edi)
	orl	%eax,%ebp
	movl	%ebx,84(%edi)
	orl	%ebx,%ebp
	movl	%ecx,88(%edi)
	orl	%ecx,%ebp
	movl	%edx,92(%edi)
	orl	%edx,%ebp
	xorl	%eax,%eax
	subl	%ebp,%eax
	orl	%eax,%ebp
	sarl	$31,%ebp
	movl	%ebp,576(%esp)
	movl	588(%esp),%eax
	leal	256(%esp),%esi
	leal	256(%esp),%ebp
	leal	384(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	588(%esp),%eax
	leal	160(%esp),%esi
	leal	160(%esp),%ebp
	leal	320(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	588(%esp),%eax
	leal	384(%esp),%esi
	leal	256(%esp),%ebp
	leal	512(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	588(%esp),%eax
	leal	320(%esp),%esi
	leal	160(%esp),%ebp
	leal	544(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	588(%esp),%eax
	leal	128(%esp),%esi
	leal	512(%esp),%ebp
	leal	512(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	588(%esp),%eax
	leal	224(%esp),%esi
	leal	544(%esp),%ebp
	leal	544(%esp),%edi
	call	_ecp_nistz256_mul_mont
	leal	544(%esp),%esi
	leal	512(%esp),%ebp
	leal	352(%esp),%edi
	call	_ecp_nistz256_sub
	orl	%eax,%ebx
	movl	588(%esp),%eax
	orl	%ecx,%ebx
	orl	%edx,%ebx
	orl	(%edi),%ebx
	orl	4(%edi),%ebx
	leal	96(%esp),%esi
	orl	8(%edi),%ebx
	leal	384(%esp),%ebp
	orl	12(%edi),%ebx
	leal	448(%esp),%edi
	movl	%ebx,584(%esp)
	call	_ecp_nistz256_mul_mont
	movl	588(%esp),%eax
	leal	192(%esp),%esi
	leal	320(%esp),%ebp
	leal	480(%esp),%edi
	call	_ecp_nistz256_mul_mont
	leal	480(%esp),%esi
	leal	448(%esp),%ebp
	leal	288(%esp),%edi
	call	_ecp_nistz256_sub
	orl	%ebx,%eax
	orl	%ecx,%eax
	orl	%edx,%eax
	orl	(%edi),%eax
	orl	4(%edi),%eax
	orl	8(%edi),%eax
	orl	12(%edi),%eax
	movl	576(%esp),%ebx
	notl	%ebx
	orl	%ebx,%eax
	movl	580(%esp),%ebx
	notl	%ebx
	orl	%ebx,%eax
	orl	584(%esp),%eax
.byte	62
	jnz	.L010add_proceed
.align	16
.L011add_double:
	movl	620(%esp),%esi
	movl	588(%esp),%ebp
	addl	$432,%esp
	jmp	.Lpoint_double_shortcut
.align	16
.L010add_proceed:
	movl	588(%esp),%eax
	leal	352(%esp),%esi
	leal	352(%esp),%ebp
	leal	384(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	588(%esp),%eax
	leal	288(%esp),%esi
	leal	160(%esp),%ebp
	leal	64(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	588(%esp),%eax
	leal	288(%esp),%esi
	leal	288(%esp),%ebp
	leal	320(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	588(%esp),%eax
	leal	256(%esp),%esi
	leal	64(%esp),%ebp
	leal	64(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	588(%esp),%eax
	leal	320(%esp),%esi
	leal	448(%esp),%ebp
	leal	480(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	588(%esp),%eax
	leal	288(%esp),%esi
	leal	320(%esp),%ebp
	leal	416(%esp),%edi
	call	_ecp_nistz256_mul_mont
	leal	480(%esp),%esi
	leal	480(%esp),%ebp
	leal	320(%esp),%edi
	call	_ecp_nistz256_add
	leal	384(%esp),%esi
	leal	320(%esp),%ebp
	leal	(%esp),%edi
	call	_ecp_nistz256_sub
	leal	(%esp),%esi
	leal	416(%esp),%ebp
	leal	(%esp),%edi
	call	_ecp_nistz256_sub
	leal	480(%esp),%esi
	leal	(%esp),%ebp
	leal	32(%esp),%edi
	call	_ecp_nistz256_sub
	movl	588(%esp),%eax
	leal	416(%esp),%esi
	leal	512(%esp),%ebp
	leal	544(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	588(%esp),%eax
	leal	352(%esp),%esi
	leal	32(%esp),%ebp
	leal	32(%esp),%edi
	call	_ecp_nistz256_mul_mont
	leal	32(%esp),%esi
	leal	544(%esp),%ebp
	leal	32(%esp),%edi
	call	_ecp_nistz256_sub
	movl	576(%esp),%ebp
	movl	580(%esp),%esi
	movl	616(%esp),%edi
	movl	%ebp,%edx
	notl	%ebp
	andl	%esi,%edx
	andl	%esi,%ebp
	notl	%esi
	movl	%edx,%eax
	andl	64(%esp),%eax
	movl	%ebp,%ebx
	andl	256(%esp),%ebx
	movl	%esi,%ecx
	andl	160(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,64(%edi)
	movl	%edx,%eax
	andl	68(%esp),%eax
	movl	%ebp,%ebx
	andl	260(%esp),%ebx
	movl	%esi,%ecx
	andl	164(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,68(%edi)
	movl	%edx,%eax
	andl	72(%esp),%eax
	movl	%ebp,%ebx
	andl	264(%esp),%ebx
	movl	%esi,%ecx
	andl	168(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,72(%edi)
	movl	%edx,%eax
	andl	76(%esp),%eax
	movl	%ebp,%ebx
	andl	268(%esp),%ebx
	movl	%esi,%ecx
	andl	172(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,76(%edi)
	movl	%edx,%eax
	andl	80(%esp),%eax
	movl	%ebp,%ebx
	andl	272(%esp),%ebx
	movl	%esi,%ecx
	andl	176(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,80(%edi)
	movl	%edx,%eax
	andl	84(%esp),%eax
	movl	%ebp,%ebx
	andl	276(%esp),%ebx
	movl	%esi,%ecx
	andl	180(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,84(%edi)
	movl	%edx,%eax
	andl	88(%esp),%eax
	movl	%ebp,%ebx
	andl	280(%esp),%ebx
	movl	%esi,%ecx
	andl	184(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,88(%edi)
	movl	%edx,%eax
	andl	92(%esp),%eax
	movl	%ebp,%ebx
	andl	284(%esp),%ebx
	movl	%esi,%ecx
	andl	188(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,92(%edi)
	movl	%edx,%eax
	andl	(%esp),%eax
	movl	%ebp,%ebx
	andl	192(%esp),%ebx
	movl	%esi,%ecx
	andl	96(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,(%edi)
	movl	%edx,%eax
	andl	4(%esp),%eax
	movl	%ebp,%ebx
	andl	196(%esp),%ebx
	movl	%esi,%ecx
	andl	100(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,4(%edi)
	movl	%edx,%eax
	andl	8(%esp),%eax
	movl	%ebp,%ebx
	andl	200(%esp),%ebx
	movl	%esi,%ecx
	andl	104(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,8(%edi)
	movl	%edx,%eax
	andl	12(%esp),%eax
	movl	%ebp,%ebx
	andl	204(%esp),%ebx
	movl	%esi,%ecx
	andl	108(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,12(%edi)
	movl	%edx,%eax
	andl	16(%esp),%eax
	movl	%ebp,%ebx
	andl	208(%esp),%ebx
	movl	%esi,%ecx
	andl	112(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,16(%edi)
	movl	%edx,%eax
	andl	20(%esp),%eax
	movl	%ebp,%ebx
	andl	212(%esp),%ebx
	movl	%esi,%ecx
	andl	116(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,20(%edi)
	movl	%edx,%eax
	andl	24(%esp),%eax
	movl	%ebp,%ebx
	andl	216(%esp),%ebx
	movl	%esi,%ecx
	andl	120(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,24(%edi)
	movl	%edx,%eax
	andl	28(%esp),%eax
	movl	%ebp,%ebx
	andl	220(%esp),%ebx
	movl	%esi,%ecx
	andl	124(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,28(%edi)
	movl	%edx,%eax
	andl	32(%esp),%eax
	movl	%ebp,%ebx
	andl	224(%esp),%ebx
	movl	%esi,%ecx
	andl	128(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,32(%edi)
	movl	%edx,%eax
	andl	36(%esp),%eax
	movl	%ebp,%ebx
	andl	228(%esp),%ebx
	movl	%esi,%ecx
	andl	132(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,36(%edi)
	movl	%edx,%eax
	andl	40(%esp),%eax
	movl	%ebp,%ebx
	andl	232(%esp),%ebx
	movl	%esi,%ecx
	andl	136(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,40(%edi)
	movl	%edx,%eax
	andl	44(%esp),%eax
	movl	%ebp,%ebx
	andl	236(%esp),%ebx
	movl	%esi,%ecx
	andl	140(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,44(%edi)
	movl	%edx,%eax
	andl	48(%esp),%eax
	movl	%ebp,%ebx
	andl	240(%esp),%ebx
	movl	%esi,%ecx
	andl	144(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,48(%edi)
	movl	%edx,%eax
	andl	52(%esp),%eax
	movl	%ebp,%ebx
	andl	244(%esp),%ebx
	movl	%esi,%ecx
	andl	148(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,52(%edi)
	movl	%edx,%eax
	andl	56(%esp),%eax
	movl	%ebp,%ebx
	andl	248(%esp),%ebx
	movl	%esi,%ecx
	andl	152(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,56(%edi)
	movl	%edx,%eax
	andl	60(%esp),%eax
	movl	%ebp,%ebx
	andl	252(%esp),%ebx
	movl	%esi,%ecx
	andl	156(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,60(%edi)
.L012add_done:
	addl	$596,%esp
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_point_add,.-.L_ecp_nistz256_point_add_begin
.globl	ecp_nistz256_point_add_affine
.type	ecp_nistz256_point_add_affine,@function
.align	16
ecp_nistz256_point_add_affine:
.L_ecp_nistz256_point_add_affine_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	24(%esp),%esi
	subl	$492,%esp
	call	_picup_eax
.L013pic:
	leal	OPENSSL_ia32cap_P-.L013pic(%eax),%edx
	movl	(%edx),%ebp
	leal	96(%esp),%edi
	movl	(%esi),%eax
	movl	4(%esi),%ebx
	movl	8(%esi),%ecx
	movl	12(%esi),%edx
	movl	%eax,(%edi)
	movl	%ebp,488(%esp)
	movl	%ebx,4(%edi)
	movl	%ecx,8(%edi)
	movl	%edx,12(%edi)
	movl	16(%esi),%eax
	movl	20(%esi),%ebx
	movl	24(%esi),%ecx
	movl	28(%esi),%edx
	movl	%eax,16(%edi)
	movl	%ebx,20(%edi)
	movl	%ecx,24(%edi)
	movl	%edx,28(%edi)
	movl	32(%esi),%eax
	movl	36(%esi),%ebx
	movl	40(%esi),%ecx
	movl	44(%esi),%edx
	movl	%eax,32(%edi)
	movl	%ebx,36(%edi)
	movl	%ecx,40(%edi)
	movl	%edx,44(%edi)
	movl	48(%esi),%eax
	movl	52(%esi),%ebx
	movl	56(%esi),%ecx
	movl	60(%esi),%edx
	movl	%eax,48(%edi)
	movl	%ebx,52(%edi)
	movl	%ecx,56(%edi)
	movl	%edx,60(%edi)
	movl	64(%esi),%eax
	movl	68(%esi),%ebx
	movl	72(%esi),%ecx
	movl	76(%esi),%edx
	movl	%eax,64(%edi)
	movl	%eax,%ebp
	movl	%ebx,68(%edi)
	orl	%ebx,%ebp
	movl	%ecx,72(%edi)
	orl	%ecx,%ebp
	movl	%edx,76(%edi)
	orl	%edx,%ebp
	movl	80(%esi),%eax
	movl	84(%esi),%ebx
	movl	88(%esi),%ecx
	movl	92(%esi),%edx
	movl	%eax,80(%edi)
	orl	%eax,%ebp
	movl	%ebx,84(%edi)
	orl	%ebx,%ebp
	movl	%ecx,88(%edi)
	orl	%ecx,%ebp
	movl	%edx,92(%edi)
	orl	%edx,%ebp
	xorl	%eax,%eax
	movl	520(%esp),%esi
	subl	%ebp,%eax
	orl	%eax,%ebp
	sarl	$31,%ebp
	movl	%ebp,480(%esp)
	leal	192(%esp),%edi
	movl	(%esi),%eax
	movl	4(%esi),%ebx
	movl	8(%esi),%ecx
	movl	12(%esi),%edx
	movl	%eax,(%edi)
	movl	%eax,%ebp
	movl	%ebx,4(%edi)
	orl	%ebx,%ebp
	movl	%ecx,8(%edi)
	orl	%ecx,%ebp
	movl	%edx,12(%edi)
	orl	%edx,%ebp
	movl	16(%esi),%eax
	movl	20(%esi),%ebx
	movl	24(%esi),%ecx
	movl	28(%esi),%edx
	movl	%eax,16(%edi)
	orl	%eax,%ebp
	movl	%ebx,20(%edi)
	orl	%ebx,%ebp
	movl	%ecx,24(%edi)
	orl	%ecx,%ebp
	movl	%edx,28(%edi)
	orl	%edx,%ebp
	movl	32(%esi),%eax
	movl	36(%esi),%ebx
	movl	40(%esi),%ecx
	movl	44(%esi),%edx
	movl	%eax,32(%edi)
	orl	%eax,%ebp
	movl	%ebx,36(%edi)
	orl	%ebx,%ebp
	movl	%ecx,40(%edi)
	orl	%ecx,%ebp
	movl	%edx,44(%edi)
	orl	%edx,%ebp
	movl	48(%esi),%eax
	movl	52(%esi),%ebx
	movl	56(%esi),%ecx
	movl	60(%esi),%edx
	movl	%eax,48(%edi)
	orl	%eax,%ebp
	movl	%ebx,52(%edi)
	orl	%ebx,%ebp
	movl	%ecx,56(%edi)
	orl	%ecx,%ebp
	movl	%edx,60(%edi)
	orl	%edx,%ebp
	xorl	%ebx,%ebx
	movl	488(%esp),%eax
	subl	%ebp,%ebx
	leal	160(%esp),%esi
	orl	%ebp,%ebx
	leal	160(%esp),%ebp
	sarl	$31,%ebx
	leal	288(%esp),%edi
	movl	%ebx,484(%esp)
	call	_ecp_nistz256_mul_mont
	movl	488(%esp),%eax
	leal	192(%esp),%esi
	movl	%edi,%ebp
	leal	256(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	488(%esp),%eax
	leal	160(%esp),%esi
	leal	288(%esp),%ebp
	leal	288(%esp),%edi
	call	_ecp_nistz256_mul_mont
	leal	256(%esp),%esi
	leal	96(%esp),%ebp
	leal	320(%esp),%edi
	call	_ecp_nistz256_sub
	movl	488(%esp),%eax
	leal	224(%esp),%esi
	leal	288(%esp),%ebp
	leal	288(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	488(%esp),%eax
	leal	160(%esp),%esi
	leal	320(%esp),%ebp
	leal	64(%esp),%edi
	call	_ecp_nistz256_mul_mont
	leal	288(%esp),%esi
	leal	128(%esp),%ebp
	leal	352(%esp),%edi
	call	_ecp_nistz256_sub
	movl	488(%esp),%eax
	leal	320(%esp),%esi
	leal	320(%esp),%ebp
	leal	384(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	488(%esp),%eax
	leal	352(%esp),%esi
	leal	352(%esp),%ebp
	leal	448(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	488(%esp),%eax
	leal	96(%esp),%esi
	leal	384(%esp),%ebp
	leal	256(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	488(%esp),%eax
	leal	320(%esp),%esi
	leal	384(%esp),%ebp
	leal	416(%esp),%edi
	call	_ecp_nistz256_mul_mont
	leal	256(%esp),%esi
	leal	256(%esp),%ebp
	leal	384(%esp),%edi
	call	_ecp_nistz256_add
	leal	448(%esp),%esi
	leal	384(%esp),%ebp
	leal	(%esp),%edi
	call	_ecp_nistz256_sub
	leal	(%esp),%esi
	leal	416(%esp),%ebp
	leal	(%esp),%edi
	call	_ecp_nistz256_sub
	leal	256(%esp),%esi
	leal	(%esp),%ebp
	leal	32(%esp),%edi
	call	_ecp_nistz256_sub
	movl	488(%esp),%eax
	leal	416(%esp),%esi
	leal	128(%esp),%ebp
	leal	288(%esp),%edi
	call	_ecp_nistz256_mul_mont
	movl	488(%esp),%eax
	leal	352(%esp),%esi
	leal	32(%esp),%ebp
	leal	32(%esp),%edi
	call	_ecp_nistz256_mul_mont
	leal	32(%esp),%esi
	leal	288(%esp),%ebp
	leal	32(%esp),%edi
	call	_ecp_nistz256_sub
	movl	480(%esp),%ebp
	movl	484(%esp),%esi
	movl	512(%esp),%edi
	movl	%ebp,%edx
	notl	%ebp
	andl	%esi,%edx
	andl	%esi,%ebp
	notl	%esi
	movl	%edx,%eax
	andl	64(%esp),%eax
	movl	%ebp,%ebx
	andl	$1,%ebx
	movl	%esi,%ecx
	andl	160(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,64(%edi)
	movl	%edx,%eax
	andl	68(%esp),%eax
	movl	%esi,%ecx
	andl	164(%esp),%ecx
	orl	%ecx,%eax
	movl	%eax,68(%edi)
	movl	%edx,%eax
	andl	72(%esp),%eax
	movl	%esi,%ecx
	andl	168(%esp),%ecx
	orl	%ecx,%eax
	movl	%eax,72(%edi)
	movl	%edx,%eax
	andl	76(%esp),%eax
	movl	%esi,%ecx
	andl	172(%esp),%ecx
	orl	%ebp,%eax
	orl	%ecx,%eax
	movl	%eax,76(%edi)
	movl	%edx,%eax
	andl	80(%esp),%eax
	movl	%esi,%ecx
	andl	176(%esp),%ecx
	orl	%ebp,%eax
	orl	%ecx,%eax
	movl	%eax,80(%edi)
	movl	%edx,%eax
	andl	84(%esp),%eax
	movl	%esi,%ecx
	andl	180(%esp),%ecx
	orl	%ebp,%eax
	orl	%ecx,%eax
	movl	%eax,84(%edi)
	movl	%edx,%eax
	andl	88(%esp),%eax
	movl	%ebp,%ebx
	andl	$-2,%ebx
	movl	%esi,%ecx
	andl	184(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,88(%edi)
	movl	%edx,%eax
	andl	92(%esp),%eax
	movl	%esi,%ecx
	andl	188(%esp),%ecx
	orl	%ecx,%eax
	movl	%eax,92(%edi)
	movl	%edx,%eax
	andl	(%esp),%eax
	movl	%ebp,%ebx
	andl	192(%esp),%ebx
	movl	%esi,%ecx
	andl	96(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,(%edi)
	movl	%edx,%eax
	andl	4(%esp),%eax
	movl	%ebp,%ebx
	andl	196(%esp),%ebx
	movl	%esi,%ecx
	andl	100(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,4(%edi)
	movl	%edx,%eax
	andl	8(%esp),%eax
	movl	%ebp,%ebx
	andl	200(%esp),%ebx
	movl	%esi,%ecx
	andl	104(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,8(%edi)
	movl	%edx,%eax
	andl	12(%esp),%eax
	movl	%ebp,%ebx
	andl	204(%esp),%ebx
	movl	%esi,%ecx
	andl	108(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,12(%edi)
	movl	%edx,%eax
	andl	16(%esp),%eax
	movl	%ebp,%ebx
	andl	208(%esp),%ebx
	movl	%esi,%ecx
	andl	112(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,16(%edi)
	movl	%edx,%eax
	andl	20(%esp),%eax
	movl	%ebp,%ebx
	andl	212(%esp),%ebx
	movl	%esi,%ecx
	andl	116(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,20(%edi)
	movl	%edx,%eax
	andl	24(%esp),%eax
	movl	%ebp,%ebx
	andl	216(%esp),%ebx
	movl	%esi,%ecx
	andl	120(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,24(%edi)
	movl	%edx,%eax
	andl	28(%esp),%eax
	movl	%ebp,%ebx
	andl	220(%esp),%ebx
	movl	%esi,%ecx
	andl	124(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,28(%edi)
	movl	%edx,%eax
	andl	32(%esp),%eax
	movl	%ebp,%ebx
	andl	224(%esp),%ebx
	movl	%esi,%ecx
	andl	128(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,32(%edi)
	movl	%edx,%eax
	andl	36(%esp),%eax
	movl	%ebp,%ebx
	andl	228(%esp),%ebx
	movl	%esi,%ecx
	andl	132(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,36(%edi)
	movl	%edx,%eax
	andl	40(%esp),%eax
	movl	%ebp,%ebx
	andl	232(%esp),%ebx
	movl	%esi,%ecx
	andl	136(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,40(%edi)
	movl	%edx,%eax
	andl	44(%esp),%eax
	movl	%ebp,%ebx
	andl	236(%esp),%ebx
	movl	%esi,%ecx
	andl	140(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,44(%edi)
	movl	%edx,%eax
	andl	48(%esp),%eax
	movl	%ebp,%ebx
	andl	240(%esp),%ebx
	movl	%esi,%ecx
	andl	144(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,48(%edi)
	movl	%edx,%eax
	andl	52(%esp),%eax
	movl	%ebp,%ebx
	andl	244(%esp),%ebx
	movl	%esi,%ecx
	andl	148(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,52(%edi)
	movl	%edx,%eax
	andl	56(%esp),%eax
	movl	%ebp,%ebx
	andl	248(%esp),%ebx
	movl	%esi,%ecx
	andl	152(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,56(%edi)
	movl	%edx,%eax
	andl	60(%esp),%eax
	movl	%ebp,%ebx
	andl	252(%esp),%ebx
	movl	%esi,%ecx
	andl	156(%esp),%ecx
	orl	%ebx,%eax
	orl	%ecx,%eax
	movl	%eax,60(%edi)
	addl	$492,%esp
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	ecp_nistz256_point_add_affine,.-.L_ecp_nistz256_point_add_affine_begin
.comm	OPENSSL_ia32cap_P,16,4

	.section ".note.gnu.property", "a"
	.p2align 2
	.long 1f - 0f
	.long 4f - 1f
	.long 5
0:
	.asciz "GNU"
1:
	.p2align 2
	.long 0xc0000002
	.long 3f - 2f
2:
	.long 3
3:
	.p2align 2
4:
                                                         node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/md5/                                     0000775 0000000 0000000 00000000000 14746647661 0024230 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/md5/md5-586.S                            0000664 0000000 0000000 00000026274 14746647661 0025374 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        .text
.globl	ossl_md5_block_asm_data_order
.type	ossl_md5_block_asm_data_order,@function
.align	16
ossl_md5_block_asm_data_order:
.L_ossl_md5_block_asm_data_order_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%esi
	pushl	%edi
	movl	12(%esp),%edi
	movl	16(%esp),%esi
	movl	20(%esp),%ecx
	pushl	%ebp
	shll	$6,%ecx
	pushl	%ebx
	addl	%esi,%ecx
	subl	$64,%ecx
	movl	(%edi),%eax
	pushl	%ecx
	movl	4(%edi),%ebx
	movl	8(%edi),%ecx
	movl	12(%edi),%edx
.L000start:


	movl	%ecx,%edi
	movl	(%esi),%ebp

	xorl	%edx,%edi
	andl	%ebx,%edi
	leal	3614090360(%eax,%ebp,1),%eax
	xorl	%edx,%edi
	movl	4(%esi),%ebp
	addl	%edi,%eax
	roll	$7,%eax
	movl	%ebx,%edi
	addl	%ebx,%eax

	xorl	%ecx,%edi
	andl	%eax,%edi
	leal	3905402710(%edx,%ebp,1),%edx
	xorl	%ecx,%edi
	movl	8(%esi),%ebp
	addl	%edi,%edx
	roll	$12,%edx
	movl	%eax,%edi
	addl	%eax,%edx

	xorl	%ebx,%edi
	andl	%edx,%edi
	leal	606105819(%ecx,%ebp,1),%ecx
	xorl	%ebx,%edi
	movl	12(%esi),%ebp
	addl	%edi,%ecx
	roll	$17,%ecx
	movl	%edx,%edi
	addl	%edx,%ecx

	xorl	%eax,%edi
	andl	%ecx,%edi
	leal	3250441966(%ebx,%ebp,1),%ebx
	xorl	%eax,%edi
	movl	16(%esi),%ebp
	addl	%edi,%ebx
	roll	$22,%ebx
	movl	%ecx,%edi
	addl	%ecx,%ebx

	xorl	%edx,%edi
	andl	%ebx,%edi
	leal	4118548399(%eax,%ebp,1),%eax
	xorl	%edx,%edi
	movl	20(%esi),%ebp
	addl	%edi,%eax
	roll	$7,%eax
	movl	%ebx,%edi
	addl	%ebx,%eax

	xorl	%ecx,%edi
	andl	%eax,%edi
	leal	1200080426(%edx,%ebp,1),%edx
	xorl	%ecx,%edi
	movl	24(%esi),%ebp
	addl	%edi,%edx
	roll	$12,%edx
	movl	%eax,%edi
	addl	%eax,%edx

	xorl	%ebx,%edi
	andl	%edx,%edi
	leal	2821735955(%ecx,%ebp,1),%ecx
	xorl	%ebx,%edi
	movl	28(%esi),%ebp
	addl	%edi,%ecx
	roll	$17,%ecx
	movl	%edx,%edi
	addl	%edx,%ecx

	xorl	%eax,%edi
	andl	%ecx,%edi
	leal	4249261313(%ebx,%ebp,1),%ebx
	xorl	%eax,%edi
	movl	32(%esi),%ebp
	addl	%edi,%ebx
	roll	$22,%ebx
	movl	%ecx,%edi
	addl	%ecx,%ebx

	xorl	%edx,%edi
	andl	%ebx,%edi
	leal	1770035416(%eax,%ebp,1),%eax
	xorl	%edx,%edi
	movl	36(%esi),%ebp
	addl	%edi,%eax
	roll	$7,%eax
	movl	%ebx,%edi
	addl	%ebx,%eax

	xorl	%ecx,%edi
	andl	%eax,%edi
	leal	2336552879(%edx,%ebp,1),%edx
	xorl	%ecx,%edi
	movl	40(%esi),%ebp
	addl	%edi,%edx
	roll	$12,%edx
	movl	%eax,%edi
	addl	%eax,%edx

	xorl	%ebx,%edi
	andl	%edx,%edi
	leal	4294925233(%ecx,%ebp,1),%ecx
	xorl	%ebx,%edi
	movl	44(%esi),%ebp
	addl	%edi,%ecx
	roll	$17,%ecx
	movl	%edx,%edi
	addl	%edx,%ecx

	xorl	%eax,%edi
	andl	%ecx,%edi
	leal	2304563134(%ebx,%ebp,1),%ebx
	xorl	%eax,%edi
	movl	48(%esi),%ebp
	addl	%edi,%ebx
	roll	$22,%ebx
	movl	%ecx,%edi
	addl	%ecx,%ebx

	xorl	%edx,%edi
	andl	%ebx,%edi
	leal	1804603682(%eax,%ebp,1),%eax
	xorl	%edx,%edi
	movl	52(%esi),%ebp
	addl	%edi,%eax
	roll	$7,%eax
	movl	%ebx,%edi
	addl	%ebx,%eax

	xorl	%ecx,%edi
	andl	%eax,%edi
	leal	4254626195(%edx,%ebp,1),%edx
	xorl	%ecx,%edi
	movl	56(%esi),%ebp
	addl	%edi,%edx
	roll	$12,%edx
	movl	%eax,%edi
	addl	%eax,%edx

	xorl	%ebx,%edi
	andl	%edx,%edi
	leal	2792965006(%ecx,%ebp,1),%ecx
	xorl	%ebx,%edi
	movl	60(%esi),%ebp
	addl	%edi,%ecx
	roll	$17,%ecx
	movl	%edx,%edi
	addl	%edx,%ecx

	xorl	%eax,%edi
	andl	%ecx,%edi
	leal	1236535329(%ebx,%ebp,1),%ebx
	xorl	%eax,%edi
	movl	4(%esi),%ebp
	addl	%edi,%ebx
	roll	$22,%ebx
	movl	%ecx,%edi
	addl	%ecx,%ebx



	xorl	%ebx,%edi
	andl	%edx,%edi
	leal	4129170786(%eax,%ebp,1),%eax
	xorl	%ecx,%edi
	movl	24(%esi),%ebp
	addl	%edi,%eax
	movl	%ebx,%edi
	roll	$5,%eax
	addl	%ebx,%eax

	xorl	%eax,%edi
	andl	%ecx,%edi
	leal	3225465664(%edx,%ebp,1),%edx
	xorl	%ebx,%edi
	movl	44(%esi),%ebp
	addl	%edi,%edx
	movl	%eax,%edi
	roll	$9,%edx
	addl	%eax,%edx

	xorl	%edx,%edi
	andl	%ebx,%edi
	leal	643717713(%ecx,%ebp,1),%ecx
	xorl	%eax,%edi
	movl	(%esi),%ebp
	addl	%edi,%ecx
	movl	%edx,%edi
	roll	$14,%ecx
	addl	%edx,%ecx

	xorl	%ecx,%edi
	andl	%eax,%edi
	leal	3921069994(%ebx,%ebp,1),%ebx
	xorl	%edx,%edi
	movl	20(%esi),%ebp
	addl	%edi,%ebx
	movl	%ecx,%edi
	roll	$20,%ebx
	addl	%ecx,%ebx

	xorl	%ebx,%edi
	andl	%edx,%edi
	leal	3593408605(%eax,%ebp,1),%eax
	xorl	%ecx,%edi
	movl	40(%esi),%ebp
	addl	%edi,%eax
	movl	%ebx,%edi
	roll	$5,%eax
	addl	%ebx,%eax

	xorl	%eax,%edi
	andl	%ecx,%edi
	leal	38016083(%edx,%ebp,1),%edx
	xorl	%ebx,%edi
	movl	60(%esi),%ebp
	addl	%edi,%edx
	movl	%eax,%edi
	roll	$9,%edx
	addl	%eax,%edx

	xorl	%edx,%edi
	andl	%ebx,%edi
	leal	3634488961(%ecx,%ebp,1),%ecx
	xorl	%eax,%edi
	movl	16(%esi),%ebp
	addl	%edi,%ecx
	movl	%edx,%edi
	roll	$14,%ecx
	addl	%edx,%ecx

	xorl	%ecx,%edi
	andl	%eax,%edi
	leal	3889429448(%ebx,%ebp,1),%ebx
	xorl	%edx,%edi
	movl	36(%esi),%ebp
	addl	%edi,%ebx
	movl	%ecx,%edi
	roll	$20,%ebx
	addl	%ecx,%ebx

	xorl	%ebx,%edi
	andl	%edx,%edi
	leal	568446438(%eax,%ebp,1),%eax
	xorl	%ecx,%edi
	movl	56(%esi),%ebp
	addl	%edi,%eax
	movl	%ebx,%edi
	roll	$5,%eax
	addl	%ebx,%eax

	xorl	%eax,%edi
	andl	%ecx,%edi
	leal	3275163606(%edx,%ebp,1),%edx
	xorl	%ebx,%edi
	movl	12(%esi),%ebp
	addl	%edi,%edx
	movl	%eax,%edi
	roll	$9,%edx
	addl	%eax,%edx

	xorl	%edx,%edi
	andl	%ebx,%edi
	leal	4107603335(%ecx,%ebp,1),%ecx
	xorl	%eax,%edi
	movl	32(%esi),%ebp
	addl	%edi,%ecx
	movl	%edx,%edi
	roll	$14,%ecx
	addl	%edx,%ecx

	xorl	%ecx,%edi
	andl	%eax,%edi
	leal	1163531501(%ebx,%ebp,1),%ebx
	xorl	%edx,%edi
	movl	52(%esi),%ebp
	addl	%edi,%ebx
	movl	%ecx,%edi
	roll	$20,%ebx
	addl	%ecx,%ebx

	xorl	%ebx,%edi
	andl	%edx,%edi
	leal	2850285829(%eax,%ebp,1),%eax
	xorl	%ecx,%edi
	movl	8(%esi),%ebp
	addl	%edi,%eax
	movl	%ebx,%edi
	roll	$5,%eax
	addl	%ebx,%eax

	xorl	%eax,%edi
	andl	%ecx,%edi
	leal	4243563512(%edx,%ebp,1),%edx
	xorl	%ebx,%edi
	movl	28(%esi),%ebp
	addl	%edi,%edx
	movl	%eax,%edi
	roll	$9,%edx
	addl	%eax,%edx

	xorl	%edx,%edi
	andl	%ebx,%edi
	leal	1735328473(%ecx,%ebp,1),%ecx
	xorl	%eax,%edi
	movl	48(%esi),%ebp
	addl	%edi,%ecx
	movl	%edx,%edi
	roll	$14,%ecx
	addl	%edx,%ecx

	xorl	%ecx,%edi
	andl	%eax,%edi
	leal	2368359562(%ebx,%ebp,1),%ebx
	xorl	%edx,%edi
	movl	20(%esi),%ebp
	addl	%edi,%ebx
	movl	%ecx,%edi
	roll	$20,%ebx
	addl	%ecx,%ebx



	xorl	%edx,%edi
	xorl	%ebx,%edi
	leal	4294588738(%eax,%ebp,1),%eax
	addl	%edi,%eax
	movl	32(%esi),%ebp
	roll	$4,%eax
	movl	%ebx,%edi

	addl	%ebx,%eax
	xorl	%ecx,%edi
	leal	2272392833(%edx,%ebp,1),%edx
	xorl	%eax,%edi
	movl	44(%esi),%ebp
	addl	%edi,%edx
	movl	%eax,%edi
	roll	$11,%edx
	addl	%eax,%edx

	xorl	%ebx,%edi
	xorl	%edx,%edi
	leal	1839030562(%ecx,%ebp,1),%ecx
	addl	%edi,%ecx
	movl	56(%esi),%ebp
	roll	$16,%ecx
	movl	%edx,%edi

	addl	%edx,%ecx
	xorl	%eax,%edi
	leal	4259657740(%ebx,%ebp,1),%ebx
	xorl	%ecx,%edi
	movl	4(%esi),%ebp
	addl	%edi,%ebx
	movl	%ecx,%edi
	roll	$23,%ebx
	addl	%ecx,%ebx

	xorl	%edx,%edi
	xorl	%ebx,%edi
	leal	2763975236(%eax,%ebp,1),%eax
	addl	%edi,%eax
	movl	16(%esi),%ebp
	roll	$4,%eax
	movl	%ebx,%edi

	addl	%ebx,%eax
	xorl	%ecx,%edi
	leal	1272893353(%edx,%ebp,1),%edx
	xorl	%eax,%edi
	movl	28(%esi),%ebp
	addl	%edi,%edx
	movl	%eax,%edi
	roll	$11,%edx
	addl	%eax,%edx

	xorl	%ebx,%edi
	xorl	%edx,%edi
	leal	4139469664(%ecx,%ebp,1),%ecx
	addl	%edi,%ecx
	movl	40(%esi),%ebp
	roll	$16,%ecx
	movl	%edx,%edi

	addl	%edx,%ecx
	xorl	%eax,%edi
	leal	3200236656(%ebx,%ebp,1),%ebx
	xorl	%ecx,%edi
	movl	52(%esi),%ebp
	addl	%edi,%ebx
	movl	%ecx,%edi
	roll	$23,%ebx
	addl	%ecx,%ebx

	xorl	%edx,%edi
	xorl	%ebx,%edi
	leal	681279174(%eax,%ebp,1),%eax
	addl	%edi,%eax
	movl	(%esi),%ebp
	roll	$4,%eax
	movl	%ebx,%edi

	addl	%ebx,%eax
	xorl	%ecx,%edi
	leal	3936430074(%edx,%ebp,1),%edx
	xorl	%eax,%edi
	movl	12(%esi),%ebp
	addl	%edi,%edx
	movl	%eax,%edi
	roll	$11,%edx
	addl	%eax,%edx

	xorl	%ebx,%edi
	xorl	%edx,%edi
	leal	3572445317(%ecx,%ebp,1),%ecx
	addl	%edi,%ecx
	movl	24(%esi),%ebp
	roll	$16,%ecx
	movl	%edx,%edi

	addl	%edx,%ecx
	xorl	%eax,%edi
	leal	76029189(%ebx,%ebp,1),%ebx
	xorl	%ecx,%edi
	movl	36(%esi),%ebp
	addl	%edi,%ebx
	movl	%ecx,%edi
	roll	$23,%ebx
	addl	%ecx,%ebx

	xorl	%edx,%edi
	xorl	%ebx,%edi
	leal	3654602809(%eax,%ebp,1),%eax
	addl	%edi,%eax
	movl	48(%esi),%ebp
	roll	$4,%eax
	movl	%ebx,%edi

	addl	%ebx,%eax
	xorl	%ecx,%edi
	leal	3873151461(%edx,%ebp,1),%edx
	xorl	%eax,%edi
	movl	60(%esi),%ebp
	addl	%edi,%edx
	movl	%eax,%edi
	roll	$11,%edx
	addl	%eax,%edx

	xorl	%ebx,%edi
	xorl	%edx,%edi
	leal	530742520(%ecx,%ebp,1),%ecx
	addl	%edi,%ecx
	movl	8(%esi),%ebp
	roll	$16,%ecx
	movl	%edx,%edi

	addl	%edx,%ecx
	xorl	%eax,%edi
	leal	3299628645(%ebx,%ebp,1),%ebx
	xorl	%ecx,%edi
	movl	(%esi),%ebp
	addl	%edi,%ebx
	movl	$-1,%edi
	roll	$23,%ebx
	addl	%ecx,%ebx



	xorl	%edx,%edi
	orl	%ebx,%edi
	leal	4096336452(%eax,%ebp,1),%eax
	xorl	%ecx,%edi
	movl	28(%esi),%ebp
	addl	%edi,%eax
	movl	$-1,%edi
	roll	$6,%eax
	xorl	%ecx,%edi
	addl	%ebx,%eax

	orl	%eax,%edi
	leal	1126891415(%edx,%ebp,1),%edx
	xorl	%ebx,%edi
	movl	56(%esi),%ebp
	addl	%edi,%edx
	movl	$-1,%edi
	roll	$10,%edx
	xorl	%ebx,%edi
	addl	%eax,%edx

	orl	%edx,%edi
	leal	2878612391(%ecx,%ebp,1),%ecx
	xorl	%eax,%edi
	movl	20(%esi),%ebp
	addl	%edi,%ecx
	movl	$-1,%edi
	roll	$15,%ecx
	xorl	%eax,%edi
	addl	%edx,%ecx

	orl	%ecx,%edi
	leal	4237533241(%ebx,%ebp,1),%ebx
	xorl	%edx,%edi
	movl	48(%esi),%ebp
	addl	%edi,%ebx
	movl	$-1,%edi
	roll	$21,%ebx
	xorl	%edx,%edi
	addl	%ecx,%ebx

	orl	%ebx,%edi
	leal	1700485571(%eax,%ebp,1),%eax
	xorl	%ecx,%edi
	movl	12(%esi),%ebp
	addl	%edi,%eax
	movl	$-1,%edi
	roll	$6,%eax
	xorl	%ecx,%edi
	addl	%ebx,%eax

	orl	%eax,%edi
	leal	2399980690(%edx,%ebp,1),%edx
	xorl	%ebx,%edi
	movl	40(%esi),%ebp
	addl	%edi,%edx
	movl	$-1,%edi
	roll	$10,%edx
	xorl	%ebx,%edi
	addl	%eax,%edx

	orl	%edx,%edi
	leal	4293915773(%ecx,%ebp,1),%ecx
	xorl	%eax,%edi
	movl	4(%esi),%ebp
	addl	%edi,%ecx
	movl	$-1,%edi
	roll	$15,%ecx
	xorl	%eax,%edi
	addl	%edx,%ecx

	orl	%ecx,%edi
	leal	2240044497(%ebx,%ebp,1),%ebx
	xorl	%edx,%edi
	movl	32(%esi),%ebp
	addl	%edi,%ebx
	movl	$-1,%edi
	roll	$21,%ebx
	xorl	%edx,%edi
	addl	%ecx,%ebx

	orl	%ebx,%edi
	leal	1873313359(%eax,%ebp,1),%eax
	xorl	%ecx,%edi
	movl	60(%esi),%ebp
	addl	%edi,%eax
	movl	$-1,%edi
	roll	$6,%eax
	xorl	%ecx,%edi
	addl	%ebx,%eax

	orl	%eax,%edi
	leal	4264355552(%edx,%ebp,1),%edx
	xorl	%ebx,%edi
	movl	24(%esi),%ebp
	addl	%edi,%edx
	movl	$-1,%edi
	roll	$10,%edx
	xorl	%ebx,%edi
	addl	%eax,%edx

	orl	%edx,%edi
	leal	2734768916(%ecx,%ebp,1),%ecx
	xorl	%eax,%edi
	movl	52(%esi),%ebp
	addl	%edi,%ecx
	movl	$-1,%edi
	roll	$15,%ecx
	xorl	%eax,%edi
	addl	%edx,%ecx

	orl	%ecx,%edi
	leal	1309151649(%ebx,%ebp,1),%ebx
	xorl	%edx,%edi
	movl	16(%esi),%ebp
	addl	%edi,%ebx
	movl	$-1,%edi
	roll	$21,%ebx
	xorl	%edx,%edi
	addl	%ecx,%ebx

	orl	%ebx,%edi
	leal	4149444226(%eax,%ebp,1),%eax
	xorl	%ecx,%edi
	movl	44(%esi),%ebp
	addl	%edi,%eax
	movl	$-1,%edi
	roll	$6,%eax
	xorl	%ecx,%edi
	addl	%ebx,%eax

	orl	%eax,%edi
	leal	3174756917(%edx,%ebp,1),%edx
	xorl	%ebx,%edi
	movl	8(%esi),%ebp
	addl	%edi,%edx
	movl	$-1,%edi
	roll	$10,%edx
	xorl	%ebx,%edi
	addl	%eax,%edx

	orl	%edx,%edi
	leal	718787259(%ecx,%ebp,1),%ecx
	xorl	%eax,%edi
	movl	36(%esi),%ebp
	addl	%edi,%ecx
	movl	$-1,%edi
	roll	$15,%ecx
	xorl	%eax,%edi
	addl	%edx,%ecx

	orl	%ecx,%edi
	leal	3951481745(%ebx,%ebp,1),%ebx
	xorl	%edx,%edi
	movl	24(%esp),%ebp
	addl	%edi,%ebx
	addl	$64,%esi
	roll	$21,%ebx
	movl	(%ebp),%edi
	addl	%ecx,%ebx
	addl	%edi,%eax
	movl	4(%ebp),%edi
	addl	%edi,%ebx
	movl	8(%ebp),%edi
	addl	%edi,%ecx
	movl	12(%ebp),%edi
	addl	%edi,%edx
	movl	%eax,(%ebp)
	movl	%ebx,4(%ebp)
	movl	(%esp),%edi
	movl	%ecx,8(%ebp)
	movl	%edx,12(%ebp)
	cmpl	%esi,%edi
	jae	.L000start
	popl	%eax
	popl	%ebx
	popl	%ebp
	popl	%edi
	popl	%esi
	ret
.size	ossl_md5_block_asm_data_order,.-.L_ossl_md5_block_asm_data_order_begin

	.section ".note.gnu.property", "a"
	.p2align 2
	.long 1f - 0f
	.long 4f - 1f
	.long 5
0:
	.asciz "GNU"
1:
	.p2align 2
	.long 0xc0000002
	.long 3f - 2f
2:
	.long 3
3:
	.p2align 2
4:
                                                                                                                                                                                                                                                                                                                                    node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/modes/                                   0000775 0000000 0000000 00000000000 14746647661 0024652 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/modes/ghash-x86.S                        0000664 0000000 0000000 00000062271 14746647661 0026523 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        .text
.globl	gcm_gmult_4bit_x86
.type	gcm_gmult_4bit_x86,@function
.align	16
gcm_gmult_4bit_x86:
.L_gcm_gmult_4bit_x86_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	subl	$84,%esp
	movl	104(%esp),%edi
	movl	108(%esp),%esi
	movl	(%edi),%ebp
	movl	4(%edi),%edx
	movl	8(%edi),%ecx
	movl	12(%edi),%ebx
	movl	$0,16(%esp)
	movl	$471859200,20(%esp)
	movl	$943718400,24(%esp)
	movl	$610271232,28(%esp)
	movl	$1887436800,32(%esp)
	movl	$1822425088,36(%esp)
	movl	$1220542464,40(%esp)
	movl	$1423966208,44(%esp)
	movl	$3774873600,48(%esp)
	movl	$4246732800,52(%esp)
	movl	$3644850176,56(%esp)
	movl	$3311403008,60(%esp)
	movl	$2441084928,64(%esp)
	movl	$2376073216,68(%esp)
	movl	$2847932416,72(%esp)
	movl	$3051356160,76(%esp)
	movl	%ebp,(%esp)
	movl	%edx,4(%esp)
	movl	%ecx,8(%esp)
	movl	%ebx,12(%esp)
	shrl	$20,%ebx
	andl	$240,%ebx
	movl	4(%esi,%ebx,1),%ebp
	movl	(%esi,%ebx,1),%edx
	movl	12(%esi,%ebx,1),%ecx
	movl	8(%esi,%ebx,1),%ebx
	xorl	%eax,%eax
	movl	$15,%edi
	jmp	.L000x86_loop
.align	16
.L000x86_loop:
	movb	%bl,%al
	shrdl	$4,%ecx,%ebx
	andb	$15,%al
	shrdl	$4,%edx,%ecx
	shrdl	$4,%ebp,%edx
	shrl	$4,%ebp
	xorl	16(%esp,%eax,4),%ebp
	movb	(%esp,%edi,1),%al
	andb	$240,%al
	xorl	8(%esi,%eax,1),%ebx
	xorl	12(%esi,%eax,1),%ecx
	xorl	(%esi,%eax,1),%edx
	xorl	4(%esi,%eax,1),%ebp
	decl	%edi
	js	.L001x86_break
	movb	%bl,%al
	shrdl	$4,%ecx,%ebx
	andb	$15,%al
	shrdl	$4,%edx,%ecx
	shrdl	$4,%ebp,%edx
	shrl	$4,%ebp
	xorl	16(%esp,%eax,4),%ebp
	movb	(%esp,%edi,1),%al
	shlb	$4,%al
	xorl	8(%esi,%eax,1),%ebx
	xorl	12(%esi,%eax,1),%ecx
	xorl	(%esi,%eax,1),%edx
	xorl	4(%esi,%eax,1),%ebp
	jmp	.L000x86_loop
.align	16
.L001x86_break:
	bswap	%ebx
	bswap	%ecx
	bswap	%edx
	bswap	%ebp
	movl	104(%esp),%edi
	movl	%ebx,12(%edi)
	movl	%ecx,8(%edi)
	movl	%edx,4(%edi)
	movl	%ebp,(%edi)
	addl	$84,%esp
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	gcm_gmult_4bit_x86,.-.L_gcm_gmult_4bit_x86_begin
.globl	gcm_ghash_4bit_x86
.type	gcm_ghash_4bit_x86,@function
.align	16
gcm_ghash_4bit_x86:
.L_gcm_ghash_4bit_x86_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	subl	$84,%esp
	movl	104(%esp),%ebx
	movl	108(%esp),%esi
	movl	112(%esp),%edi
	movl	116(%esp),%ecx
	addl	%edi,%ecx
	movl	%ecx,116(%esp)
	movl	(%ebx),%ebp
	movl	4(%ebx),%edx
	movl	8(%ebx),%ecx
	movl	12(%ebx),%ebx
	movl	$0,16(%esp)
	movl	$471859200,20(%esp)
	movl	$943718400,24(%esp)
	movl	$610271232,28(%esp)
	movl	$1887436800,32(%esp)
	movl	$1822425088,36(%esp)
	movl	$1220542464,40(%esp)
	movl	$1423966208,44(%esp)
	movl	$3774873600,48(%esp)
	movl	$4246732800,52(%esp)
	movl	$3644850176,56(%esp)
	movl	$3311403008,60(%esp)
	movl	$2441084928,64(%esp)
	movl	$2376073216,68(%esp)
	movl	$2847932416,72(%esp)
	movl	$3051356160,76(%esp)
.align	16
.L002x86_outer_loop:
	xorl	12(%edi),%ebx
	xorl	8(%edi),%ecx
	xorl	4(%edi),%edx
	xorl	(%edi),%ebp
	movl	%ebx,12(%esp)
	movl	%ecx,8(%esp)
	movl	%edx,4(%esp)
	movl	%ebp,(%esp)
	shrl	$20,%ebx
	andl	$240,%ebx
	movl	4(%esi,%ebx,1),%ebp
	movl	(%esi,%ebx,1),%edx
	movl	12(%esi,%ebx,1),%ecx
	movl	8(%esi,%ebx,1),%ebx
	xorl	%eax,%eax
	movl	$15,%edi
	jmp	.L003x86_loop
.align	16
.L003x86_loop:
	movb	%bl,%al
	shrdl	$4,%ecx,%ebx
	andb	$15,%al
	shrdl	$4,%edx,%ecx
	shrdl	$4,%ebp,%edx
	shrl	$4,%ebp
	xorl	16(%esp,%eax,4),%ebp
	movb	(%esp,%edi,1),%al
	andb	$240,%al
	xorl	8(%esi,%eax,1),%ebx
	xorl	12(%esi,%eax,1),%ecx
	xorl	(%esi,%eax,1),%edx
	xorl	4(%esi,%eax,1),%ebp
	decl	%edi
	js	.L004x86_break
	movb	%bl,%al
	shrdl	$4,%ecx,%ebx
	andb	$15,%al
	shrdl	$4,%edx,%ecx
	shrdl	$4,%ebp,%edx
	shrl	$4,%ebp
	xorl	16(%esp,%eax,4),%ebp
	movb	(%esp,%edi,1),%al
	shlb	$4,%al
	xorl	8(%esi,%eax,1),%ebx
	xorl	12(%esi,%eax,1),%ecx
	xorl	(%esi,%eax,1),%edx
	xorl	4(%esi,%eax,1),%ebp
	jmp	.L003x86_loop
.align	16
.L004x86_break:
	bswap	%ebx
	bswap	%ecx
	bswap	%edx
	bswap	%ebp
	movl	112(%esp),%edi
	leal	16(%edi),%edi
	cmpl	116(%esp),%edi
	movl	%edi,112(%esp)
	jb	.L002x86_outer_loop
	movl	104(%esp),%edi
	movl	%ebx,12(%edi)
	movl	%ecx,8(%edi)
	movl	%edx,4(%edi)
	movl	%ebp,(%edi)
	addl	$84,%esp
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	gcm_ghash_4bit_x86,.-.L_gcm_ghash_4bit_x86_begin
.globl	gcm_gmult_4bit_mmx
.type	gcm_gmult_4bit_mmx,@function
.align	16
gcm_gmult_4bit_mmx:
.L_gcm_gmult_4bit_mmx_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%edi
	movl	24(%esp),%esi
	call	.L005pic_point
.L005pic_point:
	popl	%eax
	leal	.Lrem_4bit-.L005pic_point(%eax),%eax
	movzbl	15(%edi),%ebx
	xorl	%ecx,%ecx
	movl	%ebx,%edx
	movb	%dl,%cl
	movl	$14,%ebp
	shlb	$4,%cl
	andl	$240,%edx
	movq	8(%esi,%ecx,1),%mm0
	movq	(%esi,%ecx,1),%mm1
	movd	%mm0,%ebx
	jmp	.L006mmx_loop
.align	16
.L006mmx_loop:
	psrlq	$4,%mm0
	andl	$15,%ebx
	movq	%mm1,%mm2
	psrlq	$4,%mm1
	pxor	8(%esi,%edx,1),%mm0
	movb	(%edi,%ebp,1),%cl
	psllq	$60,%mm2
	pxor	(%eax,%ebx,8),%mm1
	decl	%ebp
	movd	%mm0,%ebx
	pxor	(%esi,%edx,1),%mm1
	movl	%ecx,%edx
	pxor	%mm2,%mm0
	js	.L007mmx_break
	shlb	$4,%cl
	andl	$15,%ebx
	psrlq	$4,%mm0
	andl	$240,%edx
	movq	%mm1,%mm2
	psrlq	$4,%mm1
	pxor	8(%esi,%ecx,1),%mm0
	psllq	$60,%mm2
	pxor	(%eax,%ebx,8),%mm1
	movd	%mm0,%ebx
	pxor	(%esi,%ecx,1),%mm1
	pxor	%mm2,%mm0
	jmp	.L006mmx_loop
.align	16
.L007mmx_break:
	shlb	$4,%cl
	andl	$15,%ebx
	psrlq	$4,%mm0
	andl	$240,%edx
	movq	%mm1,%mm2
	psrlq	$4,%mm1
	pxor	8(%esi,%ecx,1),%mm0
	psllq	$60,%mm2
	pxor	(%eax,%ebx,8),%mm1
	movd	%mm0,%ebx
	pxor	(%esi,%ecx,1),%mm1
	pxor	%mm2,%mm0
	psrlq	$4,%mm0
	andl	$15,%ebx
	movq	%mm1,%mm2
	psrlq	$4,%mm1
	pxor	8(%esi,%edx,1),%mm0
	psllq	$60,%mm2
	pxor	(%eax,%ebx,8),%mm1
	movd	%mm0,%ebx
	pxor	(%esi,%edx,1),%mm1
	pxor	%mm2,%mm0
	psrlq	$32,%mm0
	movd	%mm1,%edx
	psrlq	$32,%mm1
	movd	%mm0,%ecx
	movd	%mm1,%ebp
	bswap	%ebx
	bswap	%edx
	bswap	%ecx
	bswap	%ebp
	emms
	movl	%ebx,12(%edi)
	movl	%edx,4(%edi)
	movl	%ecx,8(%edi)
	movl	%ebp,(%edi)
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	gcm_gmult_4bit_mmx,.-.L_gcm_gmult_4bit_mmx_begin
.globl	gcm_ghash_4bit_mmx
.type	gcm_ghash_4bit_mmx,@function
.align	16
gcm_ghash_4bit_mmx:
.L_gcm_ghash_4bit_mmx_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%eax
	movl	24(%esp),%ebx
	movl	28(%esp),%ecx
	movl	32(%esp),%edx
	movl	%esp,%ebp
	call	.L008pic_point
.L008pic_point:
	popl	%esi
	leal	.Lrem_8bit-.L008pic_point(%esi),%esi
	subl	$544,%esp
	andl	$-64,%esp
	subl	$16,%esp
	addl	%ecx,%edx
	movl	%eax,544(%esp)
	movl	%edx,552(%esp)
	movl	%ebp,556(%esp)
	addl	$128,%ebx
	leal	144(%esp),%edi
	leal	400(%esp),%ebp
	movl	-120(%ebx),%edx
	movq	-120(%ebx),%mm0
	movq	-128(%ebx),%mm3
	shll	$4,%edx
	movb	%dl,(%esp)
	movl	-104(%ebx),%edx
	movq	-104(%ebx),%mm2
	movq	-112(%ebx),%mm5
	movq	%mm0,-128(%edi)
	psrlq	$4,%mm0
	movq	%mm3,(%edi)
	movq	%mm3,%mm7
	psrlq	$4,%mm3
	shll	$4,%edx
	movb	%dl,1(%esp)
	movl	-88(%ebx),%edx
	movq	-88(%ebx),%mm1
	psllq	$60,%mm7
	movq	-96(%ebx),%mm4
	por	%mm7,%mm0
	movq	%mm2,-120(%edi)
	psrlq	$4,%mm2
	movq	%mm5,8(%edi)
	movq	%mm5,%mm6
	movq	%mm0,-128(%ebp)
	psrlq	$4,%mm5
	movq	%mm3,(%ebp)
	shll	$4,%edx
	movb	%dl,2(%esp)
	movl	-72(%ebx),%edx
	movq	-72(%ebx),%mm0
	psllq	$60,%mm6
	movq	-80(%ebx),%mm3
	por	%mm6,%mm2
	movq	%mm1,-112(%edi)
	psrlq	$4,%mm1
	movq	%mm4,16(%edi)
	movq	%mm4,%mm7
	movq	%mm2,-120(%ebp)
	psrlq	$4,%mm4
	movq	%mm5,8(%ebp)
	shll	$4,%edx
	movb	%dl,3(%esp)
	movl	-56(%ebx),%edx
	movq	-56(%ebx),%mm2
	psllq	$60,%mm7
	movq	-64(%ebx),%mm5
	por	%mm7,%mm1
	movq	%mm0,-104(%edi)
	psrlq	$4,%mm0
	movq	%mm3,24(%edi)
	movq	%mm3,%mm6
	movq	%mm1,-112(%ebp)
	psrlq	$4,%mm3
	movq	%mm4,16(%ebp)
	shll	$4,%edx
	movb	%dl,4(%esp)
	movl	-40(%ebx),%edx
	movq	-40(%ebx),%mm1
	psllq	$60,%mm6
	movq	-48(%ebx),%mm4
	por	%mm6,%mm0
	movq	%mm2,-96(%edi)
	psrlq	$4,%mm2
	movq	%mm5,32(%edi)
	movq	%mm5,%mm7
	movq	%mm0,-104(%ebp)
	psrlq	$4,%mm5
	movq	%mm3,24(%ebp)
	shll	$4,%edx
	movb	%dl,5(%esp)
	movl	-24(%ebx),%edx
	movq	-24(%ebx),%mm0
	psllq	$60,%mm7
	movq	-32(%ebx),%mm3
	por	%mm7,%mm2
	movq	%mm1,-88(%edi)
	psrlq	$4,%mm1
	movq	%mm4,40(%edi)
	movq	%mm4,%mm6
	movq	%mm2,-96(%ebp)
	psrlq	$4,%mm4
	movq	%mm5,32(%ebp)
	shll	$4,%edx
	movb	%dl,6(%esp)
	movl	-8(%ebx),%edx
	movq	-8(%ebx),%mm2
	psllq	$60,%mm6
	movq	-16(%ebx),%mm5
	por	%mm6,%mm1
	movq	%mm0,-80(%edi)
	psrlq	$4,%mm0
	movq	%mm3,48(%edi)
	movq	%mm3,%mm7
	movq	%mm1,-88(%ebp)
	psrlq	$4,%mm3
	movq	%mm4,40(%ebp)
	shll	$4,%edx
	movb	%dl,7(%esp)
	movl	8(%ebx),%edx
	movq	8(%ebx),%mm1
	psllq	$60,%mm7
	movq	(%ebx),%mm4
	por	%mm7,%mm0
	movq	%mm2,-72(%edi)
	psrlq	$4,%mm2
	movq	%mm5,56(%edi)
	movq	%mm5,%mm6
	movq	%mm0,-80(%ebp)
	psrlq	$4,%mm5
	movq	%mm3,48(%ebp)
	shll	$4,%edx
	movb	%dl,8(%esp)
	movl	24(%ebx),%edx
	movq	24(%ebx),%mm0
	psllq	$60,%mm6
	movq	16(%ebx),%mm3
	por	%mm6,%mm2
	movq	%mm1,-64(%edi)
	psrlq	$4,%mm1
	movq	%mm4,64(%edi)
	movq	%mm4,%mm7
	movq	%mm2,-72(%ebp)
	psrlq	$4,%mm4
	movq	%mm5,56(%ebp)
	shll	$4,%edx
	movb	%dl,9(%esp)
	movl	40(%ebx),%edx
	movq	40(%ebx),%mm2
	psllq	$60,%mm7
	movq	32(%ebx),%mm5
	por	%mm7,%mm1
	movq	%mm0,-56(%edi)
	psrlq	$4,%mm0
	movq	%mm3,72(%edi)
	movq	%mm3,%mm6
	movq	%mm1,-64(%ebp)
	psrlq	$4,%mm3
	movq	%mm4,64(%ebp)
	shll	$4,%edx
	movb	%dl,10(%esp)
	movl	56(%ebx),%edx
	movq	56(%ebx),%mm1
	psllq	$60,%mm6
	movq	48(%ebx),%mm4
	por	%mm6,%mm0
	movq	%mm2,-48(%edi)
	psrlq	$4,%mm2
	movq	%mm5,80(%edi)
	movq	%mm5,%mm7
	movq	%mm0,-56(%ebp)
	psrlq	$4,%mm5
	movq	%mm3,72(%ebp)
	shll	$4,%edx
	movb	%dl,11(%esp)
	movl	72(%ebx),%edx
	movq	72(%ebx),%mm0
	psllq	$60,%mm7
	movq	64(%ebx),%mm3
	por	%mm7,%mm2
	movq	%mm1,-40(%edi)
	psrlq	$4,%mm1
	movq	%mm4,88(%edi)
	movq	%mm4,%mm6
	movq	%mm2,-48(%ebp)
	psrlq	$4,%mm4
	movq	%mm5,80(%ebp)
	shll	$4,%edx
	movb	%dl,12(%esp)
	movl	88(%ebx),%edx
	movq	88(%ebx),%mm2
	psllq	$60,%mm6
	movq	80(%ebx),%mm5
	por	%mm6,%mm1
	movq	%mm0,-32(%edi)
	psrlq	$4,%mm0
	movq	%mm3,96(%edi)
	movq	%mm3,%mm7
	movq	%mm1,-40(%ebp)
	psrlq	$4,%mm3
	movq	%mm4,88(%ebp)
	shll	$4,%edx
	movb	%dl,13(%esp)
	movl	104(%ebx),%edx
	movq	104(%ebx),%mm1
	psllq	$60,%mm7
	movq	96(%ebx),%mm4
	por	%mm7,%mm0
	movq	%mm2,-24(%edi)
	psrlq	$4,%mm2
	movq	%mm5,104(%edi)
	movq	%mm5,%mm6
	movq	%mm0,-32(%ebp)
	psrlq	$4,%mm5
	movq	%mm3,96(%ebp)
	shll	$4,%edx
	movb	%dl,14(%esp)
	movl	120(%ebx),%edx
	movq	120(%ebx),%mm0
	psllq	$60,%mm6
	movq	112(%ebx),%mm3
	por	%mm6,%mm2
	movq	%mm1,-16(%edi)
	psrlq	$4,%mm1
	movq	%mm4,112(%edi)
	movq	%mm4,%mm7
	movq	%mm2,-24(%ebp)
	psrlq	$4,%mm4
	movq	%mm5,104(%ebp)
	shll	$4,%edx
	movb	%dl,15(%esp)
	psllq	$60,%mm7
	por	%mm7,%mm1
	movq	%mm0,-8(%edi)
	psrlq	$4,%mm0
	movq	%mm3,120(%edi)
	movq	%mm3,%mm6
	movq	%mm1,-16(%ebp)
	psrlq	$4,%mm3
	movq	%mm4,112(%ebp)
	psllq	$60,%mm6
	por	%mm6,%mm0
	movq	%mm0,-8(%ebp)
	movq	%mm3,120(%ebp)
	movq	(%eax),%mm6
	movl	8(%eax),%ebx
	movl	12(%eax),%edx
.align	16
.L009outer:
	xorl	12(%ecx),%edx
	xorl	8(%ecx),%ebx
	pxor	(%ecx),%mm6
	leal	16(%ecx),%ecx
	movl	%ebx,536(%esp)
	movq	%mm6,528(%esp)
	movl	%ecx,548(%esp)
	xorl	%eax,%eax
	roll	$8,%edx
	movb	%dl,%al
	movl	%eax,%ebp
	andb	$15,%al
	shrl	$4,%ebp
	pxor	%mm0,%mm0
	roll	$8,%edx
	pxor	%mm1,%mm1
	pxor	%mm2,%mm2
	movq	16(%esp,%eax,8),%mm7
	movq	144(%esp,%eax,8),%mm6
	movb	%dl,%al
	movd	%mm7,%ebx
	psrlq	$8,%mm7
	movq	%mm6,%mm3
	movl	%eax,%edi
	psrlq	$8,%mm6
	pxor	272(%esp,%ebp,8),%mm7
	andb	$15,%al
	psllq	$56,%mm3
	shrl	$4,%edi
	pxor	16(%esp,%eax,8),%mm7
	roll	$8,%edx
	pxor	144(%esp,%eax,8),%mm6
	pxor	%mm3,%mm7
	pxor	400(%esp,%ebp,8),%mm6
	xorb	(%esp,%ebp,1),%bl
	movb	%dl,%al
	movd	%mm7,%ecx
	movzbl	%bl,%ebx
	psrlq	$8,%mm7
	movq	%mm6,%mm3
	movl	%eax,%ebp
	psrlq	$8,%mm6
	pxor	272(%esp,%edi,8),%mm7
	andb	$15,%al
	psllq	$56,%mm3
	shrl	$4,%ebp
	pinsrw	$2,(%esi,%ebx,2),%mm2
	pxor	16(%esp,%eax,8),%mm7
	roll	$8,%edx
	pxor	144(%esp,%eax,8),%mm6
	pxor	%mm3,%mm7
	pxor	400(%esp,%edi,8),%mm6
	xorb	(%esp,%edi,1),%cl
	movb	%dl,%al
	movl	536(%esp),%edx
	movd	%mm7,%ebx
	movzbl	%cl,%ecx
	psrlq	$8,%mm7
	movq	%mm6,%mm3
	movl	%eax,%edi
	psrlq	$8,%mm6
	pxor	272(%esp,%ebp,8),%mm7
	andb	$15,%al
	psllq	$56,%mm3
	pxor	%mm2,%mm6
	shrl	$4,%edi
	pinsrw	$2,(%esi,%ecx,2),%mm1
	pxor	16(%esp,%eax,8),%mm7
	roll	$8,%edx
	pxor	144(%esp,%eax,8),%mm6
	pxor	%mm3,%mm7
	pxor	400(%esp,%ebp,8),%mm6
	xorb	(%esp,%ebp,1),%bl
	movb	%dl,%al
	movd	%mm7,%ecx
	movzbl	%bl,%ebx
	psrlq	$8,%mm7
	movq	%mm6,%mm3
	movl	%eax,%ebp
	psrlq	$8,%mm6
	pxor	272(%esp,%edi,8),%mm7
	andb	$15,%al
	psllq	$56,%mm3
	pxor	%mm1,%mm6
	shrl	$4,%ebp
	pinsrw	$2,(%esi,%ebx,2),%mm0
	pxor	16(%esp,%eax,8),%mm7
	roll	$8,%edx
	pxor	144(%esp,%eax,8),%mm6
	pxor	%mm3,%mm7
	pxor	400(%esp,%edi,8),%mm6
	xorb	(%esp,%edi,1),%cl
	movb	%dl,%al
	movd	%mm7,%ebx
	movzbl	%cl,%ecx
	psrlq	$8,%mm7
	movq	%mm6,%mm3
	movl	%eax,%edi
	psrlq	$8,%mm6
	pxor	272(%esp,%ebp,8),%mm7
	andb	$15,%al
	psllq	$56,%mm3
	pxor	%mm0,%mm6
	shrl	$4,%edi
	pinsrw	$2,(%esi,%ecx,2),%mm2
	pxor	16(%esp,%eax,8),%mm7
	roll	$8,%edx
	pxor	144(%esp,%eax,8),%mm6
	pxor	%mm3,%mm7
	pxor	400(%esp,%ebp,8),%mm6
	xorb	(%esp,%ebp,1),%bl
	movb	%dl,%al
	movd	%mm7,%ecx
	movzbl	%bl,%ebx
	psrlq	$8,%mm7
	movq	%mm6,%mm3
	movl	%eax,%ebp
	psrlq	$8,%mm6
	pxor	272(%esp,%edi,8),%mm7
	andb	$15,%al
	psllq	$56,%mm3
	pxor	%mm2,%mm6
	shrl	$4,%ebp
	pinsrw	$2,(%esi,%ebx,2),%mm1
	pxor	16(%esp,%eax,8),%mm7
	roll	$8,%edx
	pxor	144(%esp,%eax,8),%mm6
	pxor	%mm3,%mm7
	pxor	400(%esp,%edi,8),%mm6
	xorb	(%esp,%edi,1),%cl
	movb	%dl,%al
	movl	532(%esp),%edx
	movd	%mm7,%ebx
	movzbl	%cl,%ecx
	psrlq	$8,%mm7
	movq	%mm6,%mm3
	movl	%eax,%edi
	psrlq	$8,%mm6
	pxor	272(%esp,%ebp,8),%mm7
	andb	$15,%al
	psllq	$56,%mm3
	pxor	%mm1,%mm6
	shrl	$4,%edi
	pinsrw	$2,(%esi,%ecx,2),%mm0
	pxor	16(%esp,%eax,8),%mm7
	roll	$8,%edx
	pxor	144(%esp,%eax,8),%mm6
	pxor	%mm3,%mm7
	pxor	400(%esp,%ebp,8),%mm6
	xorb	(%esp,%ebp,1),%bl
	movb	%dl,%al
	movd	%mm7,%ecx
	movzbl	%bl,%ebx
	psrlq	$8,%mm7
	movq	%mm6,%mm3
	movl	%eax,%ebp
	psrlq	$8,%mm6
	pxor	272(%esp,%edi,8),%mm7
	andb	$15,%al
	psllq	$56,%mm3
	pxor	%mm0,%mm6
	shrl	$4,%ebp
	pinsrw	$2,(%esi,%ebx,2),%mm2
	pxor	16(%esp,%eax,8),%mm7
	roll	$8,%edx
	pxor	144(%esp,%eax,8),%mm6
	pxor	%mm3,%mm7
	pxor	400(%esp,%edi,8),%mm6
	xorb	(%esp,%edi,1),%cl
	movb	%dl,%al
	movd	%mm7,%ebx
	movzbl	%cl,%ecx
	psrlq	$8,%mm7
	movq	%mm6,%mm3
	movl	%eax,%edi
	psrlq	$8,%mm6
	pxor	272(%esp,%ebp,8),%mm7
	andb	$15,%al
	psllq	$56,%mm3
	pxor	%mm2,%mm6
	shrl	$4,%edi
	pinsrw	$2,(%esi,%ecx,2),%mm1
	pxor	16(%esp,%eax,8),%mm7
	roll	$8,%edx
	pxor	144(%esp,%eax,8),%mm6
	pxor	%mm3,%mm7
	pxor	400(%esp,%ebp,8),%mm6
	xorb	(%esp,%ebp,1),%bl
	movb	%dl,%al
	movd	%mm7,%ecx
	movzbl	%bl,%ebx
	psrlq	$8,%mm7
	movq	%mm6,%mm3
	movl	%eax,%ebp
	psrlq	$8,%mm6
	pxor	272(%esp,%edi,8),%mm7
	andb	$15,%al
	psllq	$56,%mm3
	pxor	%mm1,%mm6
	shrl	$4,%ebp
	pinsrw	$2,(%esi,%ebx,2),%mm0
	pxor	16(%esp,%eax,8),%mm7
	roll	$8,%edx
	pxor	144(%esp,%eax,8),%mm6
	pxor	%mm3,%mm7
	pxor	400(%esp,%edi,8),%mm6
	xorb	(%esp,%edi,1),%cl
	movb	%dl,%al
	movl	528(%esp),%edx
	movd	%mm7,%ebx
	movzbl	%cl,%ecx
	psrlq	$8,%mm7
	movq	%mm6,%mm3
	movl	%eax,%edi
	psrlq	$8,%mm6
	pxor	272(%esp,%ebp,8),%mm7
	andb	$15,%al
	psllq	$56,%mm3
	pxor	%mm0,%mm6
	shrl	$4,%edi
	pinsrw	$2,(%esi,%ecx,2),%mm2
	pxor	16(%esp,%eax,8),%mm7
	roll	$8,%edx
	pxor	144(%esp,%eax,8),%mm6
	pxor	%mm3,%mm7
	pxor	400(%esp,%ebp,8),%mm6
	xorb	(%esp,%ebp,1),%bl
	movb	%dl,%al
	movd	%mm7,%ecx
	movzbl	%bl,%ebx
	psrlq	$8,%mm7
	movq	%mm6,%mm3
	movl	%eax,%ebp
	psrlq	$8,%mm6
	pxor	272(%esp,%edi,8),%mm7
	andb	$15,%al
	psllq	$56,%mm3
	pxor	%mm2,%mm6
	shrl	$4,%ebp
	pinsrw	$2,(%esi,%ebx,2),%mm1
	pxor	16(%esp,%eax,8),%mm7
	roll	$8,%edx
	pxor	144(%esp,%eax,8),%mm6
	pxor	%mm3,%mm7
	pxor	400(%esp,%edi,8),%mm6
	xorb	(%esp,%edi,1),%cl
	movb	%dl,%al
	movd	%mm7,%ebx
	movzbl	%cl,%ecx
	psrlq	$8,%mm7
	movq	%mm6,%mm3
	movl	%eax,%edi
	psrlq	$8,%mm6
	pxor	272(%esp,%ebp,8),%mm7
	andb	$15,%al
	psllq	$56,%mm3
	pxor	%mm1,%mm6
	shrl	$4,%edi
	pinsrw	$2,(%esi,%ecx,2),%mm0
	pxor	16(%esp,%eax,8),%mm7
	roll	$8,%edx
	pxor	144(%esp,%eax,8),%mm6
	pxor	%mm3,%mm7
	pxor	400(%esp,%ebp,8),%mm6
	xorb	(%esp,%ebp,1),%bl
	movb	%dl,%al
	movd	%mm7,%ecx
	movzbl	%bl,%ebx
	psrlq	$8,%mm7
	movq	%mm6,%mm3
	movl	%eax,%ebp
	psrlq	$8,%mm6
	pxor	272(%esp,%edi,8),%mm7
	andb	$15,%al
	psllq	$56,%mm3
	pxor	%mm0,%mm6
	shrl	$4,%ebp
	pinsrw	$2,(%esi,%ebx,2),%mm2
	pxor	16(%esp,%eax,8),%mm7
	roll	$8,%edx
	pxor	144(%esp,%eax,8),%mm6
	pxor	%mm3,%mm7
	pxor	400(%esp,%edi,8),%mm6
	xorb	(%esp,%edi,1),%cl
	movb	%dl,%al
	movl	524(%esp),%edx
	movd	%mm7,%ebx
	movzbl	%cl,%ecx
	psrlq	$8,%mm7
	movq	%mm6,%mm3
	movl	%eax,%edi
	psrlq	$8,%mm6
	pxor	272(%esp,%ebp,8),%mm7
	andb	$15,%al
	psllq	$56,%mm3
	pxor	%mm2,%mm6
	shrl	$4,%edi
	pinsrw	$2,(%esi,%ecx,2),%mm1
	pxor	16(%esp,%eax,8),%mm7
	pxor	144(%esp,%eax,8),%mm6
	xorb	(%esp,%ebp,1),%bl
	pxor	%mm3,%mm7
	pxor	400(%esp,%ebp,8),%mm6
	movzbl	%bl,%ebx
	pxor	%mm2,%mm2
	psllq	$4,%mm1
	movd	%mm7,%ecx
	psrlq	$4,%mm7
	movq	%mm6,%mm3
	psrlq	$4,%mm6
	shll	$4,%ecx
	pxor	16(%esp,%edi,8),%mm7
	psllq	$60,%mm3
	movzbl	%cl,%ecx
	pxor	%mm3,%mm7
	pxor	144(%esp,%edi,8),%mm6
	pinsrw	$2,(%esi,%ebx,2),%mm0
	pxor	%mm1,%mm6
	movd	%mm7,%edx
	pinsrw	$3,(%esi,%ecx,2),%mm2
	psllq	$12,%mm0
	pxor	%mm0,%mm6
	psrlq	$32,%mm7
	pxor	%mm2,%mm6
	movl	548(%esp),%ecx
	movd	%mm7,%ebx
	movq	%mm6,%mm3
	psllw	$8,%mm6
	psrlw	$8,%mm3
	por	%mm3,%mm6
	bswap	%edx
	pshufw	$27,%mm6,%mm6
	bswap	%ebx
	cmpl	552(%esp),%ecx
	jne	.L009outer
	movl	544(%esp),%eax
	movl	%edx,12(%eax)
	movl	%ebx,8(%eax)
	movq	%mm6,(%eax)
	movl	556(%esp),%esp
	emms
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	gcm_ghash_4bit_mmx,.-.L_gcm_ghash_4bit_mmx_begin
.globl	gcm_init_clmul
.type	gcm_init_clmul,@function
.align	16
gcm_init_clmul:
.L_gcm_init_clmul_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	movl	4(%esp),%edx
	movl	8(%esp),%eax
	call	.L010pic
.L010pic:
	popl	%ecx
	leal	.Lbswap-.L010pic(%ecx),%ecx
	movdqu	(%eax),%xmm2
	pshufd	$78,%xmm2,%xmm2
	pshufd	$255,%xmm2,%xmm4
	movdqa	%xmm2,%xmm3
	psllq	$1,%xmm2
	pxor	%xmm5,%xmm5
	psrlq	$63,%xmm3
	pcmpgtd	%xmm4,%xmm5
	pslldq	$8,%xmm3
	por	%xmm3,%xmm2
	pand	16(%ecx),%xmm5
	pxor	%xmm5,%xmm2
	movdqa	%xmm2,%xmm0
	movdqa	%xmm0,%xmm1
	pshufd	$78,%xmm0,%xmm3
	pshufd	$78,%xmm2,%xmm4
	pxor	%xmm0,%xmm3
	pxor	%xmm2,%xmm4
.byte	102,15,58,68,194,0
.byte	102,15,58,68,202,17
.byte	102,15,58,68,220,0
	xorps	%xmm0,%xmm3
	xorps	%xmm1,%xmm3
	movdqa	%xmm3,%xmm4
	psrldq	$8,%xmm3
	pslldq	$8,%xmm4
	pxor	%xmm3,%xmm1
	pxor	%xmm4,%xmm0
	movdqa	%xmm0,%xmm4
	movdqa	%xmm0,%xmm3
	psllq	$5,%xmm0
	pxor	%xmm0,%xmm3
	psllq	$1,%xmm0
	pxor	%xmm3,%xmm0
	psllq	$57,%xmm0
	movdqa	%xmm0,%xmm3
	pslldq	$8,%xmm0
	psrldq	$8,%xmm3
	pxor	%xmm4,%xmm0
	pxor	%xmm3,%xmm1
	movdqa	%xmm0,%xmm4
	psrlq	$1,%xmm0
	pxor	%xmm4,%xmm1
	pxor	%xmm0,%xmm4
	psrlq	$5,%xmm0
	pxor	%xmm4,%xmm0
	psrlq	$1,%xmm0
	pxor	%xmm1,%xmm0
	pshufd	$78,%xmm2,%xmm3
	pshufd	$78,%xmm0,%xmm4
	pxor	%xmm2,%xmm3
	movdqu	%xmm2,(%edx)
	pxor	%xmm0,%xmm4
	movdqu	%xmm0,16(%edx)
.byte	102,15,58,15,227,8
	movdqu	%xmm4,32(%edx)
	ret
.size	gcm_init_clmul,.-.L_gcm_init_clmul_begin
.globl	gcm_gmult_clmul
.type	gcm_gmult_clmul,@function
.align	16
gcm_gmult_clmul:
.L_gcm_gmult_clmul_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	movl	4(%esp),%eax
	movl	8(%esp),%edx
	call	.L011pic
.L011pic:
	popl	%ecx
	leal	.Lbswap-.L011pic(%ecx),%ecx
	movdqu	(%eax),%xmm0
	movdqa	(%ecx),%xmm5
	movups	(%edx),%xmm2
.byte	102,15,56,0,197
	movups	32(%edx),%xmm4
	movdqa	%xmm0,%xmm1
	pshufd	$78,%xmm0,%xmm3
	pxor	%xmm0,%xmm3
.byte	102,15,58,68,194,0
.byte	102,15,58,68,202,17
.byte	102,15,58,68,220,0
	xorps	%xmm0,%xmm3
	xorps	%xmm1,%xmm3
	movdqa	%xmm3,%xmm4
	psrldq	$8,%xmm3
	pslldq	$8,%xmm4
	pxor	%xmm3,%xmm1
	pxor	%xmm4,%xmm0
	movdqa	%xmm0,%xmm4
	movdqa	%xmm0,%xmm3
	psllq	$5,%xmm0
	pxor	%xmm0,%xmm3
	psllq	$1,%xmm0
	pxor	%xmm3,%xmm0
	psllq	$57,%xmm0
	movdqa	%xmm0,%xmm3
	pslldq	$8,%xmm0
	psrldq	$8,%xmm3
	pxor	%xmm4,%xmm0
	pxor	%xmm3,%xmm1
	movdqa	%xmm0,%xmm4
	psrlq	$1,%xmm0
	pxor	%xmm4,%xmm1
	pxor	%xmm0,%xmm4
	psrlq	$5,%xmm0
	pxor	%xmm4,%xmm0
	psrlq	$1,%xmm0
	pxor	%xmm1,%xmm0
.byte	102,15,56,0,197
	movdqu	%xmm0,(%eax)
	ret
.size	gcm_gmult_clmul,.-.L_gcm_gmult_clmul_begin
.globl	gcm_ghash_clmul
.type	gcm_ghash_clmul,@function
.align	16
gcm_ghash_clmul:
.L_gcm_ghash_clmul_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%eax
	movl	24(%esp),%edx
	movl	28(%esp),%esi
	movl	32(%esp),%ebx
	call	.L012pic
.L012pic:
	popl	%ecx
	leal	.Lbswap-.L012pic(%ecx),%ecx
	movdqu	(%eax),%xmm0
	movdqa	(%ecx),%xmm5
	movdqu	(%edx),%xmm2
.byte	102,15,56,0,197
	subl	$16,%ebx
	jz	.L013odd_tail
	movdqu	(%esi),%xmm3
	movdqu	16(%esi),%xmm6
.byte	102,15,56,0,221
.byte	102,15,56,0,245
	movdqu	32(%edx),%xmm5
	pxor	%xmm3,%xmm0
	pshufd	$78,%xmm6,%xmm3
	movdqa	%xmm6,%xmm7
	pxor	%xmm6,%xmm3
	leal	32(%esi),%esi
.byte	102,15,58,68,242,0
.byte	102,15,58,68,250,17
.byte	102,15,58,68,221,0
	movups	16(%edx),%xmm2
	nop
	subl	$32,%ebx
	jbe	.L014even_tail
	jmp	.L015mod_loop
.align	32
.L015mod_loop:
	pshufd	$78,%xmm0,%xmm4
	movdqa	%xmm0,%xmm1
	pxor	%xmm0,%xmm4
	nop
.byte	102,15,58,68,194,0
.byte	102,15,58,68,202,17
.byte	102,15,58,68,229,16
	movups	(%edx),%xmm2
	xorps	%xmm6,%xmm0
	movdqa	(%ecx),%xmm5
	xorps	%xmm7,%xmm1
	movdqu	(%esi),%xmm7
	pxor	%xmm0,%xmm3
	movdqu	16(%esi),%xmm6
	pxor	%xmm1,%xmm3
.byte	102,15,56,0,253
	pxor	%xmm3,%xmm4
	movdqa	%xmm4,%xmm3
	psrldq	$8,%xmm4
	pslldq	$8,%xmm3
	pxor	%xmm4,%xmm1
	pxor	%xmm3,%xmm0
.byte	102,15,56,0,245
	pxor	%xmm7,%xmm1
	movdqa	%xmm6,%xmm7
	movdqa	%xmm0,%xmm4
	movdqa	%xmm0,%xmm3
	psllq	$5,%xmm0
	pxor	%xmm0,%xmm3
	psllq	$1,%xmm0
	pxor	%xmm3,%xmm0
.byte	102,15,58,68,242,0
	movups	32(%edx),%xmm5
	psllq	$57,%xmm0
	movdqa	%xmm0,%xmm3
	pslldq	$8,%xmm0
	psrldq	$8,%xmm3
	pxor	%xmm4,%xmm0
	pxor	%xmm3,%xmm1
	pshufd	$78,%xmm7,%xmm3
	movdqa	%xmm0,%xmm4
	psrlq	$1,%xmm0
	pxor	%xmm7,%xmm3
	pxor	%xmm4,%xmm1
.byte	102,15,58,68,250,17
	movups	16(%edx),%xmm2
	pxor	%xmm0,%xmm4
	psrlq	$5,%xmm0
	pxor	%xmm4,%xmm0
	psrlq	$1,%xmm0
	pxor	%xmm1,%xmm0
.byte	102,15,58,68,221,0
	leal	32(%esi),%esi
	subl	$32,%ebx
	ja	.L015mod_loop
.L014even_tail:
	pshufd	$78,%xmm0,%xmm4
	movdqa	%xmm0,%xmm1
	pxor	%xmm0,%xmm4
.byte	102,15,58,68,194,0
.byte	102,15,58,68,202,17
.byte	102,15,58,68,229,16
	movdqa	(%ecx),%xmm5
	xorps	%xmm6,%xmm0
	xorps	%xmm7,%xmm1
	pxor	%xmm0,%xmm3
	pxor	%xmm1,%xmm3
	pxor	%xmm3,%xmm4
	movdqa	%xmm4,%xmm3
	psrldq	$8,%xmm4
	pslldq	$8,%xmm3
	pxor	%xmm4,%xmm1
	pxor	%xmm3,%xmm0
	movdqa	%xmm0,%xmm4
	movdqa	%xmm0,%xmm3
	psllq	$5,%xmm0
	pxor	%xmm0,%xmm3
	psllq	$1,%xmm0
	pxor	%xmm3,%xmm0
	psllq	$57,%xmm0
	movdqa	%xmm0,%xmm3
	pslldq	$8,%xmm0
	psrldq	$8,%xmm3
	pxor	%xmm4,%xmm0
	pxor	%xmm3,%xmm1
	movdqa	%xmm0,%xmm4
	psrlq	$1,%xmm0
	pxor	%xmm4,%xmm1
	pxor	%xmm0,%xmm4
	psrlq	$5,%xmm0
	pxor	%xmm4,%xmm0
	psrlq	$1,%xmm0
	pxor	%xmm1,%xmm0
	testl	%ebx,%ebx
	jnz	.L016done
	movups	(%edx),%xmm2
.L013odd_tail:
	movdqu	(%esi),%xmm3
.byte	102,15,56,0,221
	pxor	%xmm3,%xmm0
	movdqa	%xmm0,%xmm1
	pshufd	$78,%xmm0,%xmm3
	pshufd	$78,%xmm2,%xmm4
	pxor	%xmm0,%xmm3
	pxor	%xmm2,%xmm4
.byte	102,15,58,68,194,0
.byte	102,15,58,68,202,17
.byte	102,15,58,68,220,0
	xorps	%xmm0,%xmm3
	xorps	%xmm1,%xmm3
	movdqa	%xmm3,%xmm4
	psrldq	$8,%xmm3
	pslldq	$8,%xmm4
	pxor	%xmm3,%xmm1
	pxor	%xmm4,%xmm0
	movdqa	%xmm0,%xmm4
	movdqa	%xmm0,%xmm3
	psllq	$5,%xmm0
	pxor	%xmm0,%xmm3
	psllq	$1,%xmm0
	pxor	%xmm3,%xmm0
	psllq	$57,%xmm0
	movdqa	%xmm0,%xmm3
	pslldq	$8,%xmm0
	psrldq	$8,%xmm3
	pxor	%xmm4,%xmm0
	pxor	%xmm3,%xmm1
	movdqa	%xmm0,%xmm4
	psrlq	$1,%xmm0
	pxor	%xmm4,%xmm1
	pxor	%xmm0,%xmm4
	psrlq	$5,%xmm0
	pxor	%xmm4,%xmm0
	psrlq	$1,%xmm0
	pxor	%xmm1,%xmm0
.L016done:
.byte	102,15,56,0,197
	movdqu	%xmm0,(%eax)
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	gcm_ghash_clmul,.-.L_gcm_ghash_clmul_begin
.align	64
.Lbswap:
.byte	15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
.byte	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,194
.align	64
.Lrem_8bit:
.value	0,450,900,582,1800,1738,1164,1358
.value	3600,4050,3476,3158,2328,2266,2716,2910
.value	7200,7650,8100,7782,6952,6890,6316,6510
.value	4656,5106,4532,4214,5432,5370,5820,6014
.value	14400,14722,15300,14854,16200,16010,15564,15630
.value	13904,14226,13780,13334,12632,12442,13020,13086
.value	9312,9634,10212,9766,9064,8874,8428,8494
.value	10864,11186,10740,10294,11640,11450,12028,12094
.value	28800,28994,29444,29382,30600,30282,29708,30158
.value	32400,32594,32020,31958,31128,30810,31260,31710
.value	27808,28002,28452,28390,27560,27242,26668,27118
.value	25264,25458,24884,24822,26040,25722,26172,26622
.value	18624,18690,19268,19078,20424,19978,19532,19854
.value	18128,18194,17748,17558,16856,16410,16988,17310
.value	21728,21794,22372,22182,21480,21034,20588,20910
.value	23280,23346,22900,22710,24056,23610,24188,24510
.value	57600,57538,57988,58182,58888,59338,58764,58446
.value	61200,61138,60564,60758,59416,59866,60316,59998
.value	64800,64738,65188,65382,64040,64490,63916,63598
.value	62256,62194,61620,61814,62520,62970,63420,63102
.value	55616,55426,56004,56070,56904,57226,56780,56334
.value	55120,54930,54484,54550,53336,53658,54236,53790
.value	50528,50338,50916,50982,49768,50090,49644,49198
.value	52080,51890,51444,51510,52344,52666,53244,52798
.value	37248,36930,37380,37830,38536,38730,38156,38094
.value	40848,40530,39956,40406,39064,39258,39708,39646
.value	36256,35938,36388,36838,35496,35690,35116,35054
.value	33712,33394,32820,33270,33976,34170,34620,34558
.value	43456,43010,43588,43910,44744,44810,44364,44174
.value	42960,42514,42068,42390,41176,41242,41820,41630
.value	46560,46114,46692,47014,45800,45866,45420,45230
.value	48112,47666,47220,47542,48376,48442,49020,48830
.align	64
.Lrem_4bit:
.long	0,0,0,471859200,0,943718400,0,610271232
.long	0,1887436800,0,1822425088,0,1220542464,0,1423966208
.long	0,3774873600,0,4246732800,0,3644850176,0,3311403008
.long	0,2441084928,0,2376073216,0,2847932416,0,3051356160
.byte	71,72,65,83,72,32,102,111,114,32,120,56,54,44,32,67
.byte	82,89,80,84,79,71,65,77,83,32,98,121,32,60,97,112
.byte	112,114,111,64,111,112,101,110,115,115,108,46,111,114,103,62
.byte	0

	.section ".note.gnu.property", "a"
	.p2align 2
	.long 1f - 0f
	.long 4f - 1f
	.long 5
0:
	.asciz "GNU"
1:
	.p2align 2
	.long 0xc0000002
	.long 3f - 2f
2:
	.long 3
3:
	.p2align 2
4:
                                                                                                                                                                                                                                                                                                                                       node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/poly1305/                                0000775 0000000 0000000 00000000000 14746647661 0025037 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/poly1305/poly1305-x86.S                  0000664 0000000 0000000 00000117702 14746647661 0027112 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        .text
.align	64
.globl	poly1305_init
.type	poly1305_init,@function
.align	16
poly1305_init:
.L_poly1305_init_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%edi
	movl	24(%esp),%esi
	movl	28(%esp),%ebp
	xorl	%eax,%eax
	movl	%eax,(%edi)
	movl	%eax,4(%edi)
	movl	%eax,8(%edi)
	movl	%eax,12(%edi)
	movl	%eax,16(%edi)
	movl	%eax,20(%edi)
	cmpl	$0,%esi
	je	.L000nokey
	call	.L001pic_point
.L001pic_point:
	popl	%ebx
	leal	poly1305_blocks-.L001pic_point(%ebx),%eax
	leal	poly1305_emit-.L001pic_point(%ebx),%edx
	leal	OPENSSL_ia32cap_P-.L001pic_point(%ebx),%edi
	movl	(%edi),%ecx
	andl	$83886080,%ecx
	cmpl	$83886080,%ecx
	jne	.L002no_sse2
	leal	_poly1305_blocks_sse2-.L001pic_point(%ebx),%eax
	leal	_poly1305_emit_sse2-.L001pic_point(%ebx),%edx
	movl	8(%edi),%ecx
	testl	$32,%ecx
	jz	.L002no_sse2
	leal	_poly1305_blocks_avx2-.L001pic_point(%ebx),%eax
.L002no_sse2:
	movl	20(%esp),%edi
	movl	%eax,(%ebp)
	movl	%edx,4(%ebp)
	movl	(%esi),%eax
	movl	4(%esi),%ebx
	movl	8(%esi),%ecx
	movl	12(%esi),%edx
	andl	$268435455,%eax
	andl	$268435452,%ebx
	andl	$268435452,%ecx
	andl	$268435452,%edx
	movl	%eax,24(%edi)
	movl	%ebx,28(%edi)
	movl	%ecx,32(%edi)
	movl	%edx,36(%edi)
	movl	$1,%eax
.L000nokey:
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	poly1305_init,.-.L_poly1305_init_begin
.globl	poly1305_blocks
.type	poly1305_blocks,@function
.align	16
poly1305_blocks:
.L_poly1305_blocks_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%edi
	movl	24(%esp),%esi
	movl	28(%esp),%ecx
.Lenter_blocks:
	andl	$-15,%ecx
	jz	.L003nodata
	subl	$64,%esp
	movl	24(%edi),%eax
	movl	28(%edi),%ebx
	leal	(%esi,%ecx,1),%ebp
	movl	32(%edi),%ecx
	movl	36(%edi),%edx
	movl	%ebp,92(%esp)
	movl	%esi,%ebp
	movl	%eax,36(%esp)
	movl	%ebx,%eax
	shrl	$2,%eax
	movl	%ebx,40(%esp)
	addl	%ebx,%eax
	movl	%ecx,%ebx
	shrl	$2,%ebx
	movl	%ecx,44(%esp)
	addl	%ecx,%ebx
	movl	%edx,%ecx
	shrl	$2,%ecx
	movl	%edx,48(%esp)
	addl	%edx,%ecx
	movl	%eax,52(%esp)
	movl	%ebx,56(%esp)
	movl	%ecx,60(%esp)
	movl	(%edi),%eax
	movl	4(%edi),%ebx
	movl	8(%edi),%ecx
	movl	12(%edi),%esi
	movl	16(%edi),%edi
	jmp	.L004loop
.align	32
.L004loop:
	addl	(%ebp),%eax
	adcl	4(%ebp),%ebx
	adcl	8(%ebp),%ecx
	adcl	12(%ebp),%esi
	leal	16(%ebp),%ebp
	adcl	96(%esp),%edi
	movl	%eax,(%esp)
	movl	%esi,12(%esp)
	mull	36(%esp)
	movl	%edi,16(%esp)
	movl	%eax,%edi
	movl	%ebx,%eax
	movl	%edx,%esi
	mull	60(%esp)
	addl	%eax,%edi
	movl	%ecx,%eax
	adcl	%edx,%esi
	mull	56(%esp)
	addl	%eax,%edi
	movl	12(%esp),%eax
	adcl	%edx,%esi
	mull	52(%esp)
	addl	%eax,%edi
	movl	(%esp),%eax
	adcl	%edx,%esi
	mull	40(%esp)
	movl	%edi,20(%esp)
	xorl	%edi,%edi
	addl	%eax,%esi
	movl	%ebx,%eax
	adcl	%edx,%edi
	mull	36(%esp)
	addl	%eax,%esi
	movl	%ecx,%eax
	adcl	%edx,%edi
	mull	60(%esp)
	addl	%eax,%esi
	movl	12(%esp),%eax
	adcl	%edx,%edi
	mull	56(%esp)
	addl	%eax,%esi
	movl	16(%esp),%eax
	adcl	%edx,%edi
	imull	52(%esp),%eax
	addl	%eax,%esi
	movl	(%esp),%eax
	adcl	$0,%edi
	mull	44(%esp)
	movl	%esi,24(%esp)
	xorl	%esi,%esi
	addl	%eax,%edi
	movl	%ebx,%eax
	adcl	%edx,%esi
	mull	40(%esp)
	addl	%eax,%edi
	movl	%ecx,%eax
	adcl	%edx,%esi
	mull	36(%esp)
	addl	%eax,%edi
	movl	12(%esp),%eax
	adcl	%edx,%esi
	mull	60(%esp)
	addl	%eax,%edi
	movl	16(%esp),%eax
	adcl	%edx,%esi
	imull	56(%esp),%eax
	addl	%eax,%edi
	movl	(%esp),%eax
	adcl	$0,%esi
	mull	48(%esp)
	movl	%edi,28(%esp)
	xorl	%edi,%edi
	addl	%eax,%esi
	movl	%ebx,%eax
	adcl	%edx,%edi
	mull	44(%esp)
	addl	%eax,%esi
	movl	%ecx,%eax
	adcl	%edx,%edi
	mull	40(%esp)
	addl	%eax,%esi
	movl	12(%esp),%eax
	adcl	%edx,%edi
	mull	36(%esp)
	addl	%eax,%esi
	movl	16(%esp),%ecx
	adcl	%edx,%edi
	movl	%ecx,%edx
	imull	60(%esp),%ecx
	addl	%ecx,%esi
	movl	20(%esp),%eax
	adcl	$0,%edi
	imull	36(%esp),%edx
	addl	%edi,%edx
	movl	24(%esp),%ebx
	movl	28(%esp),%ecx
	movl	%edx,%edi
	shrl	$2,%edx
	andl	$3,%edi
	leal	(%edx,%edx,4),%edx
	addl	%edx,%eax
	adcl	$0,%ebx
	adcl	$0,%ecx
	adcl	$0,%esi
	adcl	$0,%edi
	cmpl	92(%esp),%ebp
	jne	.L004loop
	movl	84(%esp),%edx
	addl	$64,%esp
	movl	%eax,(%edx)
	movl	%ebx,4(%edx)
	movl	%ecx,8(%edx)
	movl	%esi,12(%edx)
	movl	%edi,16(%edx)
.L003nodata:
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	poly1305_blocks,.-.L_poly1305_blocks_begin
.globl	poly1305_emit
.type	poly1305_emit,@function
.align	16
poly1305_emit:
.L_poly1305_emit_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%ebp
.Lenter_emit:
	movl	24(%esp),%edi
	movl	(%ebp),%eax
	movl	4(%ebp),%ebx
	movl	8(%ebp),%ecx
	movl	12(%ebp),%edx
	movl	16(%ebp),%esi
	addl	$5,%eax
	adcl	$0,%ebx
	adcl	$0,%ecx
	adcl	$0,%edx
	adcl	$0,%esi
	shrl	$2,%esi
	negl	%esi
	andl	%esi,%eax
	andl	%esi,%ebx
	andl	%esi,%ecx
	andl	%esi,%edx
	movl	%eax,(%edi)
	movl	%ebx,4(%edi)
	movl	%ecx,8(%edi)
	movl	%edx,12(%edi)
	notl	%esi
	movl	(%ebp),%eax
	movl	4(%ebp),%ebx
	movl	8(%ebp),%ecx
	movl	12(%ebp),%edx
	movl	28(%esp),%ebp
	andl	%esi,%eax
	andl	%esi,%ebx
	andl	%esi,%ecx
	andl	%esi,%edx
	orl	(%edi),%eax
	orl	4(%edi),%ebx
	orl	8(%edi),%ecx
	orl	12(%edi),%edx
	addl	(%ebp),%eax
	adcl	4(%ebp),%ebx
	adcl	8(%ebp),%ecx
	adcl	12(%ebp),%edx
	movl	%eax,(%edi)
	movl	%ebx,4(%edi)
	movl	%ecx,8(%edi)
	movl	%edx,12(%edi)
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	poly1305_emit,.-.L_poly1305_emit_begin
.align	32
.type	_poly1305_init_sse2,@function
.align	16
_poly1305_init_sse2:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	movdqu	24(%edi),%xmm4
	leal	48(%edi),%edi
	movl	%esp,%ebp
	subl	$224,%esp
	andl	$-16,%esp
	movq	64(%ebx),%xmm7
	movdqa	%xmm4,%xmm0
	movdqa	%xmm4,%xmm1
	movdqa	%xmm4,%xmm2
	pand	%xmm7,%xmm0
	psrlq	$26,%xmm1
	psrldq	$6,%xmm2
	pand	%xmm7,%xmm1
	movdqa	%xmm2,%xmm3
	psrlq	$4,%xmm2
	psrlq	$30,%xmm3
	pand	%xmm7,%xmm2
	pand	%xmm7,%xmm3
	psrldq	$13,%xmm4
	leal	144(%esp),%edx
	movl	$2,%ecx
.L005square:
	movdqa	%xmm0,(%esp)
	movdqa	%xmm1,16(%esp)
	movdqa	%xmm2,32(%esp)
	movdqa	%xmm3,48(%esp)
	movdqa	%xmm4,64(%esp)
	movdqa	%xmm1,%xmm6
	movdqa	%xmm2,%xmm5
	pslld	$2,%xmm6
	pslld	$2,%xmm5
	paddd	%xmm1,%xmm6
	paddd	%xmm2,%xmm5
	movdqa	%xmm6,80(%esp)
	movdqa	%xmm5,96(%esp)
	movdqa	%xmm3,%xmm6
	movdqa	%xmm4,%xmm5
	pslld	$2,%xmm6
	pslld	$2,%xmm5
	paddd	%xmm3,%xmm6
	paddd	%xmm4,%xmm5
	movdqa	%xmm6,112(%esp)
	movdqa	%xmm5,128(%esp)
	pshufd	$68,%xmm0,%xmm6
	movdqa	%xmm1,%xmm5
	pshufd	$68,%xmm1,%xmm1
	pshufd	$68,%xmm2,%xmm2
	pshufd	$68,%xmm3,%xmm3
	pshufd	$68,%xmm4,%xmm4
	movdqa	%xmm6,(%edx)
	movdqa	%xmm1,16(%edx)
	movdqa	%xmm2,32(%edx)
	movdqa	%xmm3,48(%edx)
	movdqa	%xmm4,64(%edx)
	pmuludq	%xmm0,%xmm4
	pmuludq	%xmm0,%xmm3
	pmuludq	%xmm0,%xmm2
	pmuludq	%xmm0,%xmm1
	pmuludq	%xmm6,%xmm0
	movdqa	%xmm5,%xmm6
	pmuludq	48(%edx),%xmm5
	movdqa	%xmm6,%xmm7
	pmuludq	32(%edx),%xmm6
	paddq	%xmm5,%xmm4
	movdqa	%xmm7,%xmm5
	pmuludq	16(%edx),%xmm7
	paddq	%xmm6,%xmm3
	movdqa	80(%esp),%xmm6
	pmuludq	(%edx),%xmm5
	paddq	%xmm7,%xmm2
	pmuludq	64(%edx),%xmm6
	movdqa	32(%esp),%xmm7
	paddq	%xmm5,%xmm1
	movdqa	%xmm7,%xmm5
	pmuludq	32(%edx),%xmm7
	paddq	%xmm6,%xmm0
	movdqa	%xmm5,%xmm6
	pmuludq	16(%edx),%xmm5
	paddq	%xmm7,%xmm4
	movdqa	96(%esp),%xmm7
	pmuludq	(%edx),%xmm6
	paddq	%xmm5,%xmm3
	movdqa	%xmm7,%xmm5
	pmuludq	64(%edx),%xmm7
	paddq	%xmm6,%xmm2
	pmuludq	48(%edx),%xmm5
	movdqa	48(%esp),%xmm6
	paddq	%xmm7,%xmm1
	movdqa	%xmm6,%xmm7
	pmuludq	16(%edx),%xmm6
	paddq	%xmm5,%xmm0
	movdqa	112(%esp),%xmm5
	pmuludq	(%edx),%xmm7
	paddq	%xmm6,%xmm4
	movdqa	%xmm5,%xmm6
	pmuludq	64(%edx),%xmm5
	paddq	%xmm7,%xmm3
	movdqa	%xmm6,%xmm7
	pmuludq	48(%edx),%xmm6
	paddq	%xmm5,%xmm2
	pmuludq	32(%edx),%xmm7
	movdqa	64(%esp),%xmm5
	paddq	%xmm6,%xmm1
	movdqa	128(%esp),%xmm6
	pmuludq	(%edx),%xmm5
	paddq	%xmm7,%xmm0
	movdqa	%xmm6,%xmm7
	pmuludq	64(%edx),%xmm6
	paddq	%xmm5,%xmm4
	movdqa	%xmm7,%xmm5
	pmuludq	16(%edx),%xmm7
	paddq	%xmm6,%xmm3
	movdqa	%xmm5,%xmm6
	pmuludq	32(%edx),%xmm5
	paddq	%xmm7,%xmm0
	pmuludq	48(%edx),%xmm6
	movdqa	64(%ebx),%xmm7
	paddq	%xmm5,%xmm1
	paddq	%xmm6,%xmm2
	movdqa	%xmm3,%xmm5
	pand	%xmm7,%xmm3
	psrlq	$26,%xmm5
	paddq	%xmm4,%xmm5
	movdqa	%xmm0,%xmm6
	pand	%xmm7,%xmm0
	psrlq	$26,%xmm6
	movdqa	%xmm5,%xmm4
	paddq	%xmm1,%xmm6
	psrlq	$26,%xmm5
	pand	%xmm7,%xmm4
	movdqa	%xmm6,%xmm1
	psrlq	$26,%xmm6
	paddd	%xmm5,%xmm0
	psllq	$2,%xmm5
	paddq	%xmm2,%xmm6
	paddq	%xmm0,%xmm5
	pand	%xmm7,%xmm1
	movdqa	%xmm6,%xmm2
	psrlq	$26,%xmm6
	pand	%xmm7,%xmm2
	paddd	%xmm3,%xmm6
	movdqa	%xmm5,%xmm0
	psrlq	$26,%xmm5
	movdqa	%xmm6,%xmm3
	psrlq	$26,%xmm6
	pand	%xmm7,%xmm0
	paddd	%xmm5,%xmm1
	pand	%xmm7,%xmm3
	paddd	%xmm6,%xmm4
	decl	%ecx
	jz	.L006square_break
	punpcklqdq	(%esp),%xmm0
	punpcklqdq	16(%esp),%xmm1
	punpcklqdq	32(%esp),%xmm2
	punpcklqdq	48(%esp),%xmm3
	punpcklqdq	64(%esp),%xmm4
	jmp	.L005square
.L006square_break:
	psllq	$32,%xmm0
	psllq	$32,%xmm1
	psllq	$32,%xmm2
	psllq	$32,%xmm3
	psllq	$32,%xmm4
	por	(%esp),%xmm0
	por	16(%esp),%xmm1
	por	32(%esp),%xmm2
	por	48(%esp),%xmm3
	por	64(%esp),%xmm4
	pshufd	$141,%xmm0,%xmm0
	pshufd	$141,%xmm1,%xmm1
	pshufd	$141,%xmm2,%xmm2
	pshufd	$141,%xmm3,%xmm3
	pshufd	$141,%xmm4,%xmm4
	movdqu	%xmm0,(%edi)
	movdqu	%xmm1,16(%edi)
	movdqu	%xmm2,32(%edi)
	movdqu	%xmm3,48(%edi)
	movdqu	%xmm4,64(%edi)
	movdqa	%xmm1,%xmm6
	movdqa	%xmm2,%xmm5
	pslld	$2,%xmm6
	pslld	$2,%xmm5
	paddd	%xmm1,%xmm6
	paddd	%xmm2,%xmm5
	movdqu	%xmm6,80(%edi)
	movdqu	%xmm5,96(%edi)
	movdqa	%xmm3,%xmm6
	movdqa	%xmm4,%xmm5
	pslld	$2,%xmm6
	pslld	$2,%xmm5
	paddd	%xmm3,%xmm6
	paddd	%xmm4,%xmm5
	movdqu	%xmm6,112(%edi)
	movdqu	%xmm5,128(%edi)
	movl	%ebp,%esp
	leal	-48(%edi),%edi
	ret
.size	_poly1305_init_sse2,.-_poly1305_init_sse2
.align	32
.type	_poly1305_blocks_sse2,@function
.align	16
_poly1305_blocks_sse2:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%edi
	movl	24(%esp),%esi
	movl	28(%esp),%ecx
	movl	20(%edi),%eax
	andl	$-16,%ecx
	jz	.L007nodata
	cmpl	$64,%ecx
	jae	.L008enter_sse2
	testl	%eax,%eax
	jz	.Lenter_blocks
.align	16
.L008enter_sse2:
	call	.L009pic_point
.L009pic_point:
	popl	%ebx
	leal	.Lconst_sse2-.L009pic_point(%ebx),%ebx
	testl	%eax,%eax
	jnz	.L010base2_26
	call	_poly1305_init_sse2
	movl	(%edi),%eax
	movl	3(%edi),%ecx
	movl	6(%edi),%edx
	movl	9(%edi),%esi
	movl	13(%edi),%ebp
	movl	$1,20(%edi)
	shrl	$2,%ecx
	andl	$67108863,%eax
	shrl	$4,%edx
	andl	$67108863,%ecx
	shrl	$6,%esi
	andl	$67108863,%edx
	movd	%eax,%xmm0
	movd	%ecx,%xmm1
	movd	%edx,%xmm2
	movd	%esi,%xmm3
	movd	%ebp,%xmm4
	movl	24(%esp),%esi
	movl	28(%esp),%ecx
	jmp	.L011base2_32
.align	16
.L010base2_26:
	movd	(%edi),%xmm0
	movd	4(%edi),%xmm1
	movd	8(%edi),%xmm2
	movd	12(%edi),%xmm3
	movd	16(%edi),%xmm4
	movdqa	64(%ebx),%xmm7
.L011base2_32:
	movl	32(%esp),%eax
	movl	%esp,%ebp
	subl	$528,%esp
	andl	$-16,%esp
	leal	48(%edi),%edi
	shll	$24,%eax
	testl	$31,%ecx
	jz	.L012even
	movdqu	(%esi),%xmm6
	leal	16(%esi),%esi
	movdqa	%xmm6,%xmm5
	pand	%xmm7,%xmm6
	paddd	%xmm6,%xmm0
	movdqa	%xmm5,%xmm6
	psrlq	$26,%xmm5
	psrldq	$6,%xmm6
	pand	%xmm7,%xmm5
	paddd	%xmm5,%xmm1
	movdqa	%xmm6,%xmm5
	psrlq	$4,%xmm6
	pand	%xmm7,%xmm6
	paddd	%xmm6,%xmm2
	movdqa	%xmm5,%xmm6
	psrlq	$30,%xmm5
	pand	%xmm7,%xmm5
	psrldq	$7,%xmm6
	paddd	%xmm5,%xmm3
	movd	%eax,%xmm5
	paddd	%xmm6,%xmm4
	movd	12(%edi),%xmm6
	paddd	%xmm5,%xmm4
	movdqa	%xmm0,(%esp)
	movdqa	%xmm1,16(%esp)
	movdqa	%xmm2,32(%esp)
	movdqa	%xmm3,48(%esp)
	movdqa	%xmm4,64(%esp)
	pmuludq	%xmm6,%xmm0
	pmuludq	%xmm6,%xmm1
	pmuludq	%xmm6,%xmm2
	movd	28(%edi),%xmm5
	pmuludq	%xmm6,%xmm3
	pmuludq	%xmm6,%xmm4
	movdqa	%xmm5,%xmm6
	pmuludq	48(%esp),%xmm5
	movdqa	%xmm6,%xmm7
	pmuludq	32(%esp),%xmm6
	paddq	%xmm5,%xmm4
	movdqa	%xmm7,%xmm5
	pmuludq	16(%esp),%xmm7
	paddq	%xmm6,%xmm3
	movd	92(%edi),%xmm6
	pmuludq	(%esp),%xmm5
	paddq	%xmm7,%xmm2
	pmuludq	64(%esp),%xmm6
	movd	44(%edi),%xmm7
	paddq	%xmm5,%xmm1
	movdqa	%xmm7,%xmm5
	pmuludq	32(%esp),%xmm7
	paddq	%xmm6,%xmm0
	movdqa	%xmm5,%xmm6
	pmuludq	16(%esp),%xmm5
	paddq	%xmm7,%xmm4
	movd	108(%edi),%xmm7
	pmuludq	(%esp),%xmm6
	paddq	%xmm5,%xmm3
	movdqa	%xmm7,%xmm5
	pmuludq	64(%esp),%xmm7
	paddq	%xmm6,%xmm2
	pmuludq	48(%esp),%xmm5
	movd	60(%edi),%xmm6
	paddq	%xmm7,%xmm1
	movdqa	%xmm6,%xmm7
	pmuludq	16(%esp),%xmm6
	paddq	%xmm5,%xmm0
	movd	124(%edi),%xmm5
	pmuludq	(%esp),%xmm7
	paddq	%xmm6,%xmm4
	movdqa	%xmm5,%xmm6
	pmuludq	64(%esp),%xmm5
	paddq	%xmm7,%xmm3
	movdqa	%xmm6,%xmm7
	pmuludq	48(%esp),%xmm6
	paddq	%xmm5,%xmm2
	pmuludq	32(%esp),%xmm7
	movd	76(%edi),%xmm5
	paddq	%xmm6,%xmm1
	movd	140(%edi),%xmm6
	pmuludq	(%esp),%xmm5
	paddq	%xmm7,%xmm0
	movdqa	%xmm6,%xmm7
	pmuludq	64(%esp),%xmm6
	paddq	%xmm5,%xmm4
	movdqa	%xmm7,%xmm5
	pmuludq	16(%esp),%xmm7
	paddq	%xmm6,%xmm3
	movdqa	%xmm5,%xmm6
	pmuludq	32(%esp),%xmm5
	paddq	%xmm7,%xmm0
	pmuludq	48(%esp),%xmm6
	movdqa	64(%ebx),%xmm7
	paddq	%xmm5,%xmm1
	paddq	%xmm6,%xmm2
	movdqa	%xmm3,%xmm5
	pand	%xmm7,%xmm3
	psrlq	$26,%xmm5
	paddq	%xmm4,%xmm5
	movdqa	%xmm0,%xmm6
	pand	%xmm7,%xmm0
	psrlq	$26,%xmm6
	movdqa	%xmm5,%xmm4
	paddq	%xmm1,%xmm6
	psrlq	$26,%xmm5
	pand	%xmm7,%xmm4
	movdqa	%xmm6,%xmm1
	psrlq	$26,%xmm6
	paddd	%xmm5,%xmm0
	psllq	$2,%xmm5
	paddq	%xmm2,%xmm6
	paddq	%xmm0,%xmm5
	pand	%xmm7,%xmm1
	movdqa	%xmm6,%xmm2
	psrlq	$26,%xmm6
	pand	%xmm7,%xmm2
	paddd	%xmm3,%xmm6
	movdqa	%xmm5,%xmm0
	psrlq	$26,%xmm5
	movdqa	%xmm6,%xmm3
	psrlq	$26,%xmm6
	pand	%xmm7,%xmm0
	paddd	%xmm5,%xmm1
	pand	%xmm7,%xmm3
	paddd	%xmm6,%xmm4
	subl	$16,%ecx
	jz	.L013done
.L012even:
	leal	384(%esp),%edx
	leal	-32(%esi),%eax
	subl	$64,%ecx
	movdqu	(%edi),%xmm5
	pshufd	$68,%xmm5,%xmm6
	cmovbl	%eax,%esi
	pshufd	$238,%xmm5,%xmm5
	movdqa	%xmm6,(%edx)
	leal	160(%esp),%eax
	movdqu	16(%edi),%xmm6
	movdqa	%xmm5,-144(%edx)
	pshufd	$68,%xmm6,%xmm5
	pshufd	$238,%xmm6,%xmm6
	movdqa	%xmm5,16(%edx)
	movdqu	32(%edi),%xmm5
	movdqa	%xmm6,-128(%edx)
	pshufd	$68,%xmm5,%xmm6
	pshufd	$238,%xmm5,%xmm5
	movdqa	%xmm6,32(%edx)
	movdqu	48(%edi),%xmm6
	movdqa	%xmm5,-112(%edx)
	pshufd	$68,%xmm6,%xmm5
	pshufd	$238,%xmm6,%xmm6
	movdqa	%xmm5,48(%edx)
	movdqu	64(%edi),%xmm5
	movdqa	%xmm6,-96(%edx)
	pshufd	$68,%xmm5,%xmm6
	pshufd	$238,%xmm5,%xmm5
	movdqa	%xmm6,64(%edx)
	movdqu	80(%edi),%xmm6
	movdqa	%xmm5,-80(%edx)
	pshufd	$68,%xmm6,%xmm5
	pshufd	$238,%xmm6,%xmm6
	movdqa	%xmm5,80(%edx)
	movdqu	96(%edi),%xmm5
	movdqa	%xmm6,-64(%edx)
	pshufd	$68,%xmm5,%xmm6
	pshufd	$238,%xmm5,%xmm5
	movdqa	%xmm6,96(%edx)
	movdqu	112(%edi),%xmm6
	movdqa	%xmm5,-48(%edx)
	pshufd	$68,%xmm6,%xmm5
	pshufd	$238,%xmm6,%xmm6
	movdqa	%xmm5,112(%edx)
	movdqu	128(%edi),%xmm5
	movdqa	%xmm6,-32(%edx)
	pshufd	$68,%xmm5,%xmm6
	pshufd	$238,%xmm5,%xmm5
	movdqa	%xmm6,128(%edx)
	movdqa	%xmm5,-16(%edx)
	movdqu	32(%esi),%xmm5
	movdqu	48(%esi),%xmm6
	leal	32(%esi),%esi
	movdqa	%xmm2,112(%esp)
	movdqa	%xmm3,128(%esp)
	movdqa	%xmm4,144(%esp)
	movdqa	%xmm5,%xmm2
	movdqa	%xmm6,%xmm3
	psrldq	$6,%xmm2
	psrldq	$6,%xmm3
	movdqa	%xmm5,%xmm4
	punpcklqdq	%xmm3,%xmm2
	punpckhqdq	%xmm6,%xmm4
	punpcklqdq	%xmm6,%xmm5
	movdqa	%xmm2,%xmm3
	psrlq	$4,%xmm2
	psrlq	$30,%xmm3
	movdqa	%xmm5,%xmm6
	psrlq	$40,%xmm4
	psrlq	$26,%xmm6
	pand	%xmm7,%xmm5
	pand	%xmm7,%xmm6
	pand	%xmm7,%xmm2
	pand	%xmm7,%xmm3
	por	(%ebx),%xmm4
	movdqa	%xmm0,80(%esp)
	movdqa	%xmm1,96(%esp)
	jbe	.L014skip_loop
	jmp	.L015loop
.align	32
.L015loop:
	movdqa	-144(%edx),%xmm7
	movdqa	%xmm6,16(%eax)
	movdqa	%xmm2,32(%eax)
	movdqa	%xmm3,48(%eax)
	movdqa	%xmm4,64(%eax)
	movdqa	%xmm5,%xmm1
	pmuludq	%xmm7,%xmm5
	movdqa	%xmm6,%xmm0
	pmuludq	%xmm7,%xmm6
	pmuludq	%xmm7,%xmm2
	pmuludq	%xmm7,%xmm3
	pmuludq	%xmm7,%xmm4
	pmuludq	-16(%edx),%xmm0
	movdqa	%xmm1,%xmm7
	pmuludq	-128(%edx),%xmm1
	paddq	%xmm5,%xmm0
	movdqa	%xmm7,%xmm5
	pmuludq	-112(%edx),%xmm7
	paddq	%xmm6,%xmm1
	movdqa	%xmm5,%xmm6
	pmuludq	-96(%edx),%xmm5
	paddq	%xmm7,%xmm2
	movdqa	16(%eax),%xmm7
	pmuludq	-80(%edx),%xmm6
	paddq	%xmm5,%xmm3
	movdqa	%xmm7,%xmm5
	pmuludq	-128(%edx),%xmm7
	paddq	%xmm6,%xmm4
	movdqa	%xmm5,%xmm6
	pmuludq	-112(%edx),%xmm5
	paddq	%xmm7,%xmm2
	movdqa	32(%eax),%xmm7
	pmuludq	-96(%edx),%xmm6
	paddq	%xmm5,%xmm3
	movdqa	%xmm7,%xmm5
	pmuludq	-32(%edx),%xmm7
	paddq	%xmm6,%xmm4
	movdqa	%xmm5,%xmm6
	pmuludq	-16(%edx),%xmm5
	paddq	%xmm7,%xmm0
	movdqa	%xmm6,%xmm7
	pmuludq	-128(%edx),%xmm6
	paddq	%xmm5,%xmm1
	movdqa	48(%eax),%xmm5
	pmuludq	-112(%edx),%xmm7
	paddq	%xmm6,%xmm3
	movdqa	%xmm5,%xmm6
	pmuludq	-48(%edx),%xmm5
	paddq	%xmm7,%xmm4
	movdqa	%xmm6,%xmm7
	pmuludq	-32(%edx),%xmm6
	paddq	%xmm5,%xmm0
	movdqa	%xmm7,%xmm5
	pmuludq	-16(%edx),%xmm7
	paddq	%xmm6,%xmm1
	movdqa	64(%eax),%xmm6
	pmuludq	-128(%edx),%xmm5
	paddq	%xmm7,%xmm2
	movdqa	%xmm6,%xmm7
	pmuludq	-16(%edx),%xmm6
	paddq	%xmm5,%xmm4
	movdqa	%xmm7,%xmm5
	pmuludq	-64(%edx),%xmm7
	paddq	%xmm6,%xmm3
	movdqa	%xmm5,%xmm6
	pmuludq	-48(%edx),%xmm5
	paddq	%xmm7,%xmm0
	movdqa	64(%ebx),%xmm7
	pmuludq	-32(%edx),%xmm6
	paddq	%xmm5,%xmm1
	paddq	%xmm6,%xmm2
	movdqu	-32(%esi),%xmm5
	movdqu	-16(%esi),%xmm6
	leal	32(%esi),%esi
	movdqa	%xmm2,32(%esp)
	movdqa	%xmm3,48(%esp)
	movdqa	%xmm4,64(%esp)
	movdqa	%xmm5,%xmm2
	movdqa	%xmm6,%xmm3
	psrldq	$6,%xmm2
	psrldq	$6,%xmm3
	movdqa	%xmm5,%xmm4
	punpcklqdq	%xmm3,%xmm2
	punpckhqdq	%xmm6,%xmm4
	punpcklqdq	%xmm6,%xmm5
	movdqa	%xmm2,%xmm3
	psrlq	$4,%xmm2
	psrlq	$30,%xmm3
	movdqa	%xmm5,%xmm6
	psrlq	$40,%xmm4
	psrlq	$26,%xmm6
	pand	%xmm7,%xmm5
	pand	%xmm7,%xmm6
	pand	%xmm7,%xmm2
	pand	%xmm7,%xmm3
	por	(%ebx),%xmm4
	leal	-32(%esi),%eax
	subl	$64,%ecx
	paddd	80(%esp),%xmm5
	paddd	96(%esp),%xmm6
	paddd	112(%esp),%xmm2
	paddd	128(%esp),%xmm3
	paddd	144(%esp),%xmm4
	cmovbl	%eax,%esi
	leal	160(%esp),%eax
	movdqa	(%edx),%xmm7
	movdqa	%xmm1,16(%esp)
	movdqa	%xmm6,16(%eax)
	movdqa	%xmm2,32(%eax)
	movdqa	%xmm3,48(%eax)
	movdqa	%xmm4,64(%eax)
	movdqa	%xmm5,%xmm1
	pmuludq	%xmm7,%xmm5
	paddq	%xmm0,%xmm5
	movdqa	%xmm6,%xmm0
	pmuludq	%xmm7,%xmm6
	pmuludq	%xmm7,%xmm2
	pmuludq	%xmm7,%xmm3
	pmuludq	%xmm7,%xmm4
	paddq	16(%esp),%xmm6
	paddq	32(%esp),%xmm2
	paddq	48(%esp),%xmm3
	paddq	64(%esp),%xmm4
	pmuludq	128(%edx),%xmm0
	movdqa	%xmm1,%xmm7
	pmuludq	16(%edx),%xmm1
	paddq	%xmm5,%xmm0
	movdqa	%xmm7,%xmm5
	pmuludq	32(%edx),%xmm7
	paddq	%xmm6,%xmm1
	movdqa	%xmm5,%xmm6
	pmuludq	48(%edx),%xmm5
	paddq	%xmm7,%xmm2
	movdqa	16(%eax),%xmm7
	pmuludq	64(%edx),%xmm6
	paddq	%xmm5,%xmm3
	movdqa	%xmm7,%xmm5
	pmuludq	16(%edx),%xmm7
	paddq	%xmm6,%xmm4
	movdqa	%xmm5,%xmm6
	pmuludq	32(%edx),%xmm5
	paddq	%xmm7,%xmm2
	movdqa	32(%eax),%xmm7
	pmuludq	48(%edx),%xmm6
	paddq	%xmm5,%xmm3
	movdqa	%xmm7,%xmm5
	pmuludq	112(%edx),%xmm7
	paddq	%xmm6,%xmm4
	movdqa	%xmm5,%xmm6
	pmuludq	128(%edx),%xmm5
	paddq	%xmm7,%xmm0
	movdqa	%xmm6,%xmm7
	pmuludq	16(%edx),%xmm6
	paddq	%xmm5,%xmm1
	movdqa	48(%eax),%xmm5
	pmuludq	32(%edx),%xmm7
	paddq	%xmm6,%xmm3
	movdqa	%xmm5,%xmm6
	pmuludq	96(%edx),%xmm5
	paddq	%xmm7,%xmm4
	movdqa	%xmm6,%xmm7
	pmuludq	112(%edx),%xmm6
	paddq	%xmm5,%xmm0
	movdqa	%xmm7,%xmm5
	pmuludq	128(%edx),%xmm7
	paddq	%xmm6,%xmm1
	movdqa	64(%eax),%xmm6
	pmuludq	16(%edx),%xmm5
	paddq	%xmm7,%xmm2
	movdqa	%xmm6,%xmm7
	pmuludq	128(%edx),%xmm6
	paddq	%xmm5,%xmm4
	movdqa	%xmm7,%xmm5
	pmuludq	80(%edx),%xmm7
	paddq	%xmm6,%xmm3
	movdqa	%xmm5,%xmm6
	pmuludq	96(%edx),%xmm5
	paddq	%xmm7,%xmm0
	movdqa	64(%ebx),%xmm7
	pmuludq	112(%edx),%xmm6
	paddq	%xmm5,%xmm1
	paddq	%xmm6,%xmm2
	movdqa	%xmm3,%xmm5
	pand	%xmm7,%xmm3
	psrlq	$26,%xmm5
	paddq	%xmm4,%xmm5
	movdqa	%xmm0,%xmm6
	pand	%xmm7,%xmm0
	psrlq	$26,%xmm6
	movdqa	%xmm5,%xmm4
	paddq	%xmm1,%xmm6
	psrlq	$26,%xmm5
	pand	%xmm7,%xmm4
	movdqa	%xmm6,%xmm1
	psrlq	$26,%xmm6
	paddd	%xmm5,%xmm0
	psllq	$2,%xmm5
	paddq	%xmm2,%xmm6
	paddq	%xmm0,%xmm5
	pand	%xmm7,%xmm1
	movdqa	%xmm6,%xmm2
	psrlq	$26,%xmm6
	pand	%xmm7,%xmm2
	paddd	%xmm3,%xmm6
	movdqa	%xmm5,%xmm0
	psrlq	$26,%xmm5
	movdqa	%xmm6,%xmm3
	psrlq	$26,%xmm6
	pand	%xmm7,%xmm0
	paddd	%xmm5,%xmm1
	pand	%xmm7,%xmm3
	paddd	%xmm6,%xmm4
	movdqu	32(%esi),%xmm5
	movdqu	48(%esi),%xmm6
	leal	32(%esi),%esi
	movdqa	%xmm2,112(%esp)
	movdqa	%xmm3,128(%esp)
	movdqa	%xmm4,144(%esp)
	movdqa	%xmm5,%xmm2
	movdqa	%xmm6,%xmm3
	psrldq	$6,%xmm2
	psrldq	$6,%xmm3
	movdqa	%xmm5,%xmm4
	punpcklqdq	%xmm3,%xmm2
	punpckhqdq	%xmm6,%xmm4
	punpcklqdq	%xmm6,%xmm5
	movdqa	%xmm2,%xmm3
	psrlq	$4,%xmm2
	psrlq	$30,%xmm3
	movdqa	%xmm5,%xmm6
	psrlq	$40,%xmm4
	psrlq	$26,%xmm6
	pand	%xmm7,%xmm5
	pand	%xmm7,%xmm6
	pand	%xmm7,%xmm2
	pand	%xmm7,%xmm3
	por	(%ebx),%xmm4
	movdqa	%xmm0,80(%esp)
	movdqa	%xmm1,96(%esp)
	ja	.L015loop
.L014skip_loop:
	pshufd	$16,-144(%edx),%xmm7
	addl	$32,%ecx
	jnz	.L016long_tail
	paddd	%xmm0,%xmm5
	paddd	%xmm1,%xmm6
	paddd	112(%esp),%xmm2
	paddd	128(%esp),%xmm3
	paddd	144(%esp),%xmm4
.L016long_tail:
	movdqa	%xmm5,(%eax)
	movdqa	%xmm6,16(%eax)
	movdqa	%xmm2,32(%eax)
	movdqa	%xmm3,48(%eax)
	movdqa	%xmm4,64(%eax)
	pmuludq	%xmm7,%xmm5
	pmuludq	%xmm7,%xmm6
	pmuludq	%xmm7,%xmm2
	movdqa	%xmm5,%xmm0
	pshufd	$16,-128(%edx),%xmm5
	pmuludq	%xmm7,%xmm3
	movdqa	%xmm6,%xmm1
	pmuludq	%xmm7,%xmm4
	movdqa	%xmm5,%xmm6
	pmuludq	48(%eax),%xmm5
	movdqa	%xmm6,%xmm7
	pmuludq	32(%eax),%xmm6
	paddq	%xmm5,%xmm4
	movdqa	%xmm7,%xmm5
	pmuludq	16(%eax),%xmm7
	paddq	%xmm6,%xmm3
	pshufd	$16,-64(%edx),%xmm6
	pmuludq	(%eax),%xmm5
	paddq	%xmm7,%xmm2
	pmuludq	64(%eax),%xmm6
	pshufd	$16,-112(%edx),%xmm7
	paddq	%xmm5,%xmm1
	movdqa	%xmm7,%xmm5
	pmuludq	32(%eax),%xmm7
	paddq	%xmm6,%xmm0
	movdqa	%xmm5,%xmm6
	pmuludq	16(%eax),%xmm5
	paddq	%xmm7,%xmm4
	pshufd	$16,-48(%edx),%xmm7
	pmuludq	(%eax),%xmm6
	paddq	%xmm5,%xmm3
	movdqa	%xmm7,%xmm5
	pmuludq	64(%eax),%xmm7
	paddq	%xmm6,%xmm2
	pmuludq	48(%eax),%xmm5
	pshufd	$16,-96(%edx),%xmm6
	paddq	%xmm7,%xmm1
	movdqa	%xmm6,%xmm7
	pmuludq	16(%eax),%xmm6
	paddq	%xmm5,%xmm0
	pshufd	$16,-32(%edx),%xmm5
	pmuludq	(%eax),%xmm7
	paddq	%xmm6,%xmm4
	movdqa	%xmm5,%xmm6
	pmuludq	64(%eax),%xmm5
	paddq	%xmm7,%xmm3
	movdqa	%xmm6,%xmm7
	pmuludq	48(%eax),%xmm6
	paddq	%xmm5,%xmm2
	pmuludq	32(%eax),%xmm7
	pshufd	$16,-80(%edx),%xmm5
	paddq	%xmm6,%xmm1
	pshufd	$16,-16(%edx),%xmm6
	pmuludq	(%eax),%xmm5
	paddq	%xmm7,%xmm0
	movdqa	%xmm6,%xmm7
	pmuludq	64(%eax),%xmm6
	paddq	%xmm5,%xmm4
	movdqa	%xmm7,%xmm5
	pmuludq	16(%eax),%xmm7
	paddq	%xmm6,%xmm3
	movdqa	%xmm5,%xmm6
	pmuludq	32(%eax),%xmm5
	paddq	%xmm7,%xmm0
	pmuludq	48(%eax),%xmm6
	movdqa	64(%ebx),%xmm7
	paddq	%xmm5,%xmm1
	paddq	%xmm6,%xmm2
	jz	.L017short_tail
	movdqu	-32(%esi),%xmm5
	movdqu	-16(%esi),%xmm6
	leal	32(%esi),%esi
	movdqa	%xmm2,32(%esp)
	movdqa	%xmm3,48(%esp)
	movdqa	%xmm4,64(%esp)
	movdqa	%xmm5,%xmm2
	movdqa	%xmm6,%xmm3
	psrldq	$6,%xmm2
	psrldq	$6,%xmm3
	movdqa	%xmm5,%xmm4
	punpcklqdq	%xmm3,%xmm2
	punpckhqdq	%xmm6,%xmm4
	punpcklqdq	%xmm6,%xmm5
	movdqa	%xmm2,%xmm3
	psrlq	$4,%xmm2
	psrlq	$30,%xmm3
	movdqa	%xmm5,%xmm6
	psrlq	$40,%xmm4
	psrlq	$26,%xmm6
	pand	%xmm7,%xmm5
	pand	%xmm7,%xmm6
	pand	%xmm7,%xmm2
	pand	%xmm7,%xmm3
	por	(%ebx),%xmm4
	pshufd	$16,(%edx),%xmm7
	paddd	80(%esp),%xmm5
	paddd	96(%esp),%xmm6
	paddd	112(%esp),%xmm2
	paddd	128(%esp),%xmm3
	paddd	144(%esp),%xmm4
	movdqa	%xmm5,(%esp)
	pmuludq	%xmm7,%xmm5
	movdqa	%xmm6,16(%esp)
	pmuludq	%xmm7,%xmm6
	paddq	%xmm5,%xmm0
	movdqa	%xmm2,%xmm5
	pmuludq	%xmm7,%xmm2
	paddq	%xmm6,%xmm1
	movdqa	%xmm3,%xmm6
	pmuludq	%xmm7,%xmm3
	paddq	32(%esp),%xmm2
	movdqa	%xmm5,32(%esp)
	pshufd	$16,16(%edx),%xmm5
	paddq	48(%esp),%xmm3
	movdqa	%xmm6,48(%esp)
	movdqa	%xmm4,%xmm6
	pmuludq	%xmm7,%xmm4
	paddq	64(%esp),%xmm4
	movdqa	%xmm6,64(%esp)
	movdqa	%xmm5,%xmm6
	pmuludq	48(%esp),%xmm5
	movdqa	%xmm6,%xmm7
	pmuludq	32(%esp),%xmm6
	paddq	%xmm5,%xmm4
	movdqa	%xmm7,%xmm5
	pmuludq	16(%esp),%xmm7
	paddq	%xmm6,%xmm3
	pshufd	$16,80(%edx),%xmm6
	pmuludq	(%esp),%xmm5
	paddq	%xmm7,%xmm2
	pmuludq	64(%esp),%xmm6
	pshufd	$16,32(%edx),%xmm7
	paddq	%xmm5,%xmm1
	movdqa	%xmm7,%xmm5
	pmuludq	32(%esp),%xmm7
	paddq	%xmm6,%xmm0
	movdqa	%xmm5,%xmm6
	pmuludq	16(%esp),%xmm5
	paddq	%xmm7,%xmm4
	pshufd	$16,96(%edx),%xmm7
	pmuludq	(%esp),%xmm6
	paddq	%xmm5,%xmm3
	movdqa	%xmm7,%xmm5
	pmuludq	64(%esp),%xmm7
	paddq	%xmm6,%xmm2
	pmuludq	48(%esp),%xmm5
	pshufd	$16,48(%edx),%xmm6
	paddq	%xmm7,%xmm1
	movdqa	%xmm6,%xmm7
	pmuludq	16(%esp),%xmm6
	paddq	%xmm5,%xmm0
	pshufd	$16,112(%edx),%xmm5
	pmuludq	(%esp),%xmm7
	paddq	%xmm6,%xmm4
	movdqa	%xmm5,%xmm6
	pmuludq	64(%esp),%xmm5
	paddq	%xmm7,%xmm3
	movdqa	%xmm6,%xmm7
	pmuludq	48(%esp),%xmm6
	paddq	%xmm5,%xmm2
	pmuludq	32(%esp),%xmm7
	pshufd	$16,64(%edx),%xmm5
	paddq	%xmm6,%xmm1
	pshufd	$16,128(%edx),%xmm6
	pmuludq	(%esp),%xmm5
	paddq	%xmm7,%xmm0
	movdqa	%xmm6,%xmm7
	pmuludq	64(%esp),%xmm6
	paddq	%xmm5,%xmm4
	movdqa	%xmm7,%xmm5
	pmuludq	16(%esp),%xmm7
	paddq	%xmm6,%xmm3
	movdqa	%xmm5,%xmm6
	pmuludq	32(%esp),%xmm5
	paddq	%xmm7,%xmm0
	pmuludq	48(%esp),%xmm6
	movdqa	64(%ebx),%xmm7
	paddq	%xmm5,%xmm1
	paddq	%xmm6,%xmm2
.L017short_tail:
	pshufd	$78,%xmm4,%xmm6
	pshufd	$78,%xmm3,%xmm5
	paddq	%xmm6,%xmm4
	paddq	%xmm5,%xmm3
	pshufd	$78,%xmm0,%xmm6
	pshufd	$78,%xmm1,%xmm5
	paddq	%xmm6,%xmm0
	paddq	%xmm5,%xmm1
	pshufd	$78,%xmm2,%xmm6
	movdqa	%xmm3,%xmm5
	pand	%xmm7,%xmm3
	psrlq	$26,%xmm5
	paddq	%xmm6,%xmm2
	paddq	%xmm4,%xmm5
	movdqa	%xmm0,%xmm6
	pand	%xmm7,%xmm0
	psrlq	$26,%xmm6
	movdqa	%xmm5,%xmm4
	paddq	%xmm1,%xmm6
	psrlq	$26,%xmm5
	pand	%xmm7,%xmm4
	movdqa	%xmm6,%xmm1
	psrlq	$26,%xmm6
	paddd	%xmm5,%xmm0
	psllq	$2,%xmm5
	paddq	%xmm2,%xmm6
	paddq	%xmm0,%xmm5
	pand	%xmm7,%xmm1
	movdqa	%xmm6,%xmm2
	psrlq	$26,%xmm6
	pand	%xmm7,%xmm2
	paddd	%xmm3,%xmm6
	movdqa	%xmm5,%xmm0
	psrlq	$26,%xmm5
	movdqa	%xmm6,%xmm3
	psrlq	$26,%xmm6
	pand	%xmm7,%xmm0
	paddd	%xmm5,%xmm1
	pand	%xmm7,%xmm3
	paddd	%xmm6,%xmm4
.L013done:
	movd	%xmm0,-48(%edi)
	movd	%xmm1,-44(%edi)
	movd	%xmm2,-40(%edi)
	movd	%xmm3,-36(%edi)
	movd	%xmm4,-32(%edi)
	movl	%ebp,%esp
.L007nodata:
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	_poly1305_blocks_sse2,.-_poly1305_blocks_sse2
.align	32
.type	_poly1305_emit_sse2,@function
.align	16
_poly1305_emit_sse2:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%ebp
	cmpl	$0,20(%ebp)
	je	.Lenter_emit
	movl	(%ebp),%eax
	movl	4(%ebp),%edi
	movl	8(%ebp),%ecx
	movl	12(%ebp),%edx
	movl	16(%ebp),%esi
	movl	%edi,%ebx
	shll	$26,%edi
	shrl	$6,%ebx
	addl	%edi,%eax
	movl	%ecx,%edi
	adcl	$0,%ebx
	shll	$20,%edi
	shrl	$12,%ecx
	addl	%edi,%ebx
	movl	%edx,%edi
	adcl	$0,%ecx
	shll	$14,%edi
	shrl	$18,%edx
	addl	%edi,%ecx
	movl	%esi,%edi
	adcl	$0,%edx
	shll	$8,%edi
	shrl	$24,%esi
	addl	%edi,%edx
	adcl	$0,%esi
	movl	%esi,%edi
	andl	$3,%esi
	shrl	$2,%edi
	leal	(%edi,%edi,4),%ebp
	movl	24(%esp),%edi
	addl	%ebp,%eax
	movl	28(%esp),%ebp
	adcl	$0,%ebx
	adcl	$0,%ecx
	adcl	$0,%edx
	adcl	$0,%esi
	movd	%eax,%xmm0
	addl	$5,%eax
	movd	%ebx,%xmm1
	adcl	$0,%ebx
	movd	%ecx,%xmm2
	adcl	$0,%ecx
	movd	%edx,%xmm3
	adcl	$0,%edx
	adcl	$0,%esi
	shrl	$2,%esi
	negl	%esi
	andl	%esi,%eax
	andl	%esi,%ebx
	andl	%esi,%ecx
	andl	%esi,%edx
	movl	%eax,(%edi)
	movd	%xmm0,%eax
	movl	%ebx,4(%edi)
	movd	%xmm1,%ebx
	movl	%ecx,8(%edi)
	movd	%xmm2,%ecx
	movl	%edx,12(%edi)
	movd	%xmm3,%edx
	notl	%esi
	andl	%esi,%eax
	andl	%esi,%ebx
	orl	(%edi),%eax
	andl	%esi,%ecx
	orl	4(%edi),%ebx
	andl	%esi,%edx
	orl	8(%edi),%ecx
	orl	12(%edi),%edx
	addl	(%ebp),%eax
	adcl	4(%ebp),%ebx
	movl	%eax,(%edi)
	adcl	8(%ebp),%ecx
	movl	%ebx,4(%edi)
	adcl	12(%ebp),%edx
	movl	%ecx,8(%edi)
	movl	%edx,12(%edi)
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	_poly1305_emit_sse2,.-_poly1305_emit_sse2
.align	32
.type	_poly1305_init_avx2,@function
.align	16
_poly1305_init_avx2:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	vmovdqu	24(%edi),%xmm4
	leal	48(%edi),%edi
	movl	%esp,%ebp
	subl	$224,%esp
	andl	$-16,%esp
	vmovdqa	64(%ebx),%xmm7
	vpand	%xmm7,%xmm4,%xmm0
	vpsrlq	$26,%xmm4,%xmm1
	vpsrldq	$6,%xmm4,%xmm3
	vpand	%xmm7,%xmm1,%xmm1
	vpsrlq	$4,%xmm3,%xmm2
	vpsrlq	$30,%xmm3,%xmm3
	vpand	%xmm7,%xmm2,%xmm2
	vpand	%xmm7,%xmm3,%xmm3
	vpsrldq	$13,%xmm4,%xmm4
	leal	144(%esp),%edx
	movl	$2,%ecx
.L018square:
	vmovdqa	%xmm0,(%esp)
	vmovdqa	%xmm1,16(%esp)
	vmovdqa	%xmm2,32(%esp)
	vmovdqa	%xmm3,48(%esp)
	vmovdqa	%xmm4,64(%esp)
	vpslld	$2,%xmm1,%xmm6
	vpslld	$2,%xmm2,%xmm5
	vpaddd	%xmm1,%xmm6,%xmm6
	vpaddd	%xmm2,%xmm5,%xmm5
	vmovdqa	%xmm6,80(%esp)
	vmovdqa	%xmm5,96(%esp)
	vpslld	$2,%xmm3,%xmm6
	vpslld	$2,%xmm4,%xmm5
	vpaddd	%xmm3,%xmm6,%xmm6
	vpaddd	%xmm4,%xmm5,%xmm5
	vmovdqa	%xmm6,112(%esp)
	vmovdqa	%xmm5,128(%esp)
	vpshufd	$68,%xmm0,%xmm5
	vmovdqa	%xmm1,%xmm6
	vpshufd	$68,%xmm1,%xmm1
	vpshufd	$68,%xmm2,%xmm2
	vpshufd	$68,%xmm3,%xmm3
	vpshufd	$68,%xmm4,%xmm4
	vmovdqa	%xmm5,(%edx)
	vmovdqa	%xmm1,16(%edx)
	vmovdqa	%xmm2,32(%edx)
	vmovdqa	%xmm3,48(%edx)
	vmovdqa	%xmm4,64(%edx)
	vpmuludq	%xmm0,%xmm4,%xmm4
	vpmuludq	%xmm0,%xmm3,%xmm3
	vpmuludq	%xmm0,%xmm2,%xmm2
	vpmuludq	%xmm0,%xmm1,%xmm1
	vpmuludq	%xmm0,%xmm5,%xmm0
	vpmuludq	48(%edx),%xmm6,%xmm5
	vpaddq	%xmm5,%xmm4,%xmm4
	vpmuludq	32(%edx),%xmm6,%xmm7
	vpaddq	%xmm7,%xmm3,%xmm3
	vpmuludq	16(%edx),%xmm6,%xmm5
	vpaddq	%xmm5,%xmm2,%xmm2
	vmovdqa	80(%esp),%xmm7
	vpmuludq	(%edx),%xmm6,%xmm6
	vpaddq	%xmm6,%xmm1,%xmm1
	vmovdqa	32(%esp),%xmm5
	vpmuludq	64(%edx),%xmm7,%xmm7
	vpaddq	%xmm7,%xmm0,%xmm0
	vpmuludq	32(%edx),%xmm5,%xmm6
	vpaddq	%xmm6,%xmm4,%xmm4
	vpmuludq	16(%edx),%xmm5,%xmm7
	vpaddq	%xmm7,%xmm3,%xmm3
	vmovdqa	96(%esp),%xmm6
	vpmuludq	(%edx),%xmm5,%xmm5
	vpaddq	%xmm5,%xmm2,%xmm2
	vpmuludq	64(%edx),%xmm6,%xmm7
	vpaddq	%xmm7,%xmm1,%xmm1
	vmovdqa	48(%esp),%xmm5
	vpmuludq	48(%edx),%xmm6,%xmm6
	vpaddq	%xmm6,%xmm0,%xmm0
	vpmuludq	16(%edx),%xmm5,%xmm7
	vpaddq	%xmm7,%xmm4,%xmm4
	vmovdqa	112(%esp),%xmm6
	vpmuludq	(%edx),%xmm5,%xmm5
	vpaddq	%xmm5,%xmm3,%xmm3
	vpmuludq	64(%edx),%xmm6,%xmm7
	vpaddq	%xmm7,%xmm2,%xmm2
	vpmuludq	48(%edx),%xmm6,%xmm5
	vpaddq	%xmm5,%xmm1,%xmm1
	vmovdqa	64(%esp),%xmm7
	vpmuludq	32(%edx),%xmm6,%xmm6
	vpaddq	%xmm6,%xmm0,%xmm0
	vmovdqa	128(%esp),%xmm5
	vpmuludq	(%edx),%xmm7,%xmm7
	vpaddq	%xmm7,%xmm4,%xmm4
	vpmuludq	64(%edx),%xmm5,%xmm6
	vpaddq	%xmm6,%xmm3,%xmm3
	vpmuludq	16(%edx),%xmm5,%xmm7
	vpaddq	%xmm7,%xmm0,%xmm0
	vpmuludq	32(%edx),%xmm5,%xmm6
	vpaddq	%xmm6,%xmm1,%xmm1
	vmovdqa	64(%ebx),%xmm7
	vpmuludq	48(%edx),%xmm5,%xmm5
	vpaddq	%xmm5,%xmm2,%xmm2
	vpsrlq	$26,%xmm3,%xmm5
	vpand	%xmm7,%xmm3,%xmm3
	vpsrlq	$26,%xmm0,%xmm6
	vpand	%xmm7,%xmm0,%xmm0
	vpaddq	%xmm5,%xmm4,%xmm4
	vpaddq	%xmm6,%xmm1,%xmm1
	vpsrlq	$26,%xmm4,%xmm5
	vpand	%xmm7,%xmm4,%xmm4
	vpsrlq	$26,%xmm1,%xmm6
	vpand	%xmm7,%xmm1,%xmm1
	vpaddq	%xmm6,%xmm2,%xmm2
	vpaddd	%xmm5,%xmm0,%xmm0
	vpsllq	$2,%xmm5,%xmm5
	vpsrlq	$26,%xmm2,%xmm6
	vpand	%xmm7,%xmm2,%xmm2
	vpaddd	%xmm5,%xmm0,%xmm0
	vpaddd	%xmm6,%xmm3,%xmm3
	vpsrlq	$26,%xmm3,%xmm6
	vpsrlq	$26,%xmm0,%xmm5
	vpand	%xmm7,%xmm0,%xmm0
	vpand	%xmm7,%xmm3,%xmm3
	vpaddd	%xmm5,%xmm1,%xmm1
	vpaddd	%xmm6,%xmm4,%xmm4
	decl	%ecx
	jz	.L019square_break
	vpunpcklqdq	(%esp),%xmm0,%xmm0
	vpunpcklqdq	16(%esp),%xmm1,%xmm1
	vpunpcklqdq	32(%esp),%xmm2,%xmm2
	vpunpcklqdq	48(%esp),%xmm3,%xmm3
	vpunpcklqdq	64(%esp),%xmm4,%xmm4
	jmp	.L018square
.L019square_break:
	vpsllq	$32,%xmm0,%xmm0
	vpsllq	$32,%xmm1,%xmm1
	vpsllq	$32,%xmm2,%xmm2
	vpsllq	$32,%xmm3,%xmm3
	vpsllq	$32,%xmm4,%xmm4
	vpor	(%esp),%xmm0,%xmm0
	vpor	16(%esp),%xmm1,%xmm1
	vpor	32(%esp),%xmm2,%xmm2
	vpor	48(%esp),%xmm3,%xmm3
	vpor	64(%esp),%xmm4,%xmm4
	vpshufd	$141,%xmm0,%xmm0
	vpshufd	$141,%xmm1,%xmm1
	vpshufd	$141,%xmm2,%xmm2
	vpshufd	$141,%xmm3,%xmm3
	vpshufd	$141,%xmm4,%xmm4
	vmovdqu	%xmm0,(%edi)
	vmovdqu	%xmm1,16(%edi)
	vmovdqu	%xmm2,32(%edi)
	vmovdqu	%xmm3,48(%edi)
	vmovdqu	%xmm4,64(%edi)
	vpslld	$2,%xmm1,%xmm6
	vpslld	$2,%xmm2,%xmm5
	vpaddd	%xmm1,%xmm6,%xmm6
	vpaddd	%xmm2,%xmm5,%xmm5
	vmovdqu	%xmm6,80(%edi)
	vmovdqu	%xmm5,96(%edi)
	vpslld	$2,%xmm3,%xmm6
	vpslld	$2,%xmm4,%xmm5
	vpaddd	%xmm3,%xmm6,%xmm6
	vpaddd	%xmm4,%xmm5,%xmm5
	vmovdqu	%xmm6,112(%edi)
	vmovdqu	%xmm5,128(%edi)
	movl	%ebp,%esp
	leal	-48(%edi),%edi
	ret
.size	_poly1305_init_avx2,.-_poly1305_init_avx2
.align	32
.type	_poly1305_blocks_avx2,@function
.align	16
_poly1305_blocks_avx2:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%edi
	movl	24(%esp),%esi
	movl	28(%esp),%ecx
	movl	20(%edi),%eax
	andl	$-16,%ecx
	jz	.L020nodata
	cmpl	$64,%ecx
	jae	.L021enter_avx2
	testl	%eax,%eax
	jz	.Lenter_blocks
.L021enter_avx2:
	vzeroupper
	call	.L022pic_point
.L022pic_point:
	popl	%ebx
	leal	.Lconst_sse2-.L022pic_point(%ebx),%ebx
	testl	%eax,%eax
	jnz	.L023base2_26
	call	_poly1305_init_avx2
	movl	(%edi),%eax
	movl	3(%edi),%ecx
	movl	6(%edi),%edx
	movl	9(%edi),%esi
	movl	13(%edi),%ebp
	shrl	$2,%ecx
	andl	$67108863,%eax
	shrl	$4,%edx
	andl	$67108863,%ecx
	shrl	$6,%esi
	andl	$67108863,%edx
	movl	%eax,(%edi)
	movl	%ecx,4(%edi)
	movl	%edx,8(%edi)
	movl	%esi,12(%edi)
	movl	%ebp,16(%edi)
	movl	$1,20(%edi)
	movl	24(%esp),%esi
	movl	28(%esp),%ecx
.L023base2_26:
	movl	32(%esp),%eax
	movl	%esp,%ebp
	subl	$448,%esp
	andl	$-512,%esp
	vmovdqu	48(%edi),%xmm0
	leal	288(%esp),%edx
	vmovdqu	64(%edi),%xmm1
	vmovdqu	80(%edi),%xmm2
	vmovdqu	96(%edi),%xmm3
	vmovdqu	112(%edi),%xmm4
	leal	48(%edi),%edi
	vpermq	$64,%ymm0,%ymm0
	vpermq	$64,%ymm1,%ymm1
	vpermq	$64,%ymm2,%ymm2
	vpermq	$64,%ymm3,%ymm3
	vpermq	$64,%ymm4,%ymm4
	vpshufd	$200,%ymm0,%ymm0
	vpshufd	$200,%ymm1,%ymm1
	vpshufd	$200,%ymm2,%ymm2
	vpshufd	$200,%ymm3,%ymm3
	vpshufd	$200,%ymm4,%ymm4
	vmovdqa	%ymm0,-128(%edx)
	vmovdqu	80(%edi),%xmm0
	vmovdqa	%ymm1,-96(%edx)
	vmovdqu	96(%edi),%xmm1
	vmovdqa	%ymm2,-64(%edx)
	vmovdqu	112(%edi),%xmm2
	vmovdqa	%ymm3,-32(%edx)
	vmovdqu	128(%edi),%xmm3
	vmovdqa	%ymm4,(%edx)
	vpermq	$64,%ymm0,%ymm0
	vpermq	$64,%ymm1,%ymm1
	vpermq	$64,%ymm2,%ymm2
	vpermq	$64,%ymm3,%ymm3
	vpshufd	$200,%ymm0,%ymm0
	vpshufd	$200,%ymm1,%ymm1
	vpshufd	$200,%ymm2,%ymm2
	vpshufd	$200,%ymm3,%ymm3
	vmovdqa	%ymm0,32(%edx)
	vmovd	-48(%edi),%xmm0
	vmovdqa	%ymm1,64(%edx)
	vmovd	-44(%edi),%xmm1
	vmovdqa	%ymm2,96(%edx)
	vmovd	-40(%edi),%xmm2
	vmovdqa	%ymm3,128(%edx)
	vmovd	-36(%edi),%xmm3
	vmovd	-32(%edi),%xmm4
	vmovdqa	64(%ebx),%ymm7
	negl	%eax
	testl	$63,%ecx
	jz	.L024even
	movl	%ecx,%edx
	andl	$-64,%ecx
	andl	$63,%edx
	vmovdqu	(%esi),%xmm5
	cmpl	$32,%edx
	jb	.L025one
	vmovdqu	16(%esi),%xmm6
	je	.L026two
	vinserti128	$1,32(%esi),%ymm5,%ymm5
	leal	48(%esi),%esi
	leal	8(%ebx),%ebx
	leal	296(%esp),%edx
	jmp	.L027tail
.L026two:
	leal	32(%esi),%esi
	leal	16(%ebx),%ebx
	leal	304(%esp),%edx
	jmp	.L027tail
.L025one:
	leal	16(%esi),%esi
	vpxor	%ymm6,%ymm6,%ymm6
	leal	32(%ebx,%eax,8),%ebx
	leal	312(%esp),%edx
	jmp	.L027tail
.align	32
.L024even:
	vmovdqu	(%esi),%xmm5
	vmovdqu	16(%esi),%xmm6
	vinserti128	$1,32(%esi),%ymm5,%ymm5
	vinserti128	$1,48(%esi),%ymm6,%ymm6
	leal	64(%esi),%esi
	subl	$64,%ecx
	jz	.L027tail
.L028loop:
	vmovdqa	%ymm2,64(%esp)
	vpsrldq	$6,%ymm5,%ymm2
	vmovdqa	%ymm0,(%esp)
	vpsrldq	$6,%ymm6,%ymm0
	vmovdqa	%ymm1,32(%esp)
	vpunpckhqdq	%ymm6,%ymm5,%ymm1
	vpunpcklqdq	%ymm6,%ymm5,%ymm5
	vpunpcklqdq	%ymm0,%ymm2,%ymm2
	vpsrlq	$30,%ymm2,%ymm0
	vpsrlq	$4,%ymm2,%ymm2
	vpsrlq	$26,%ymm5,%ymm6
	vpsrlq	$40,%ymm1,%ymm1
	vpand	%ymm7,%ymm2,%ymm2
	vpand	%ymm7,%ymm5,%ymm5
	vpand	%ymm7,%ymm6,%ymm6
	vpand	%ymm7,%ymm0,%ymm0
	vpor	(%ebx),%ymm1,%ymm1
	vpaddq	64(%esp),%ymm2,%ymm2
	vpaddq	(%esp),%ymm5,%ymm5
	vpaddq	32(%esp),%ymm6,%ymm6
	vpaddq	%ymm3,%ymm0,%ymm0
	vpaddq	%ymm4,%ymm1,%ymm1
	vpmuludq	-96(%edx),%ymm2,%ymm3
	vmovdqa	%ymm6,32(%esp)
	vpmuludq	-64(%edx),%ymm2,%ymm4
	vmovdqa	%ymm0,96(%esp)
	vpmuludq	96(%edx),%ymm2,%ymm0
	vmovdqa	%ymm1,128(%esp)
	vpmuludq	128(%edx),%ymm2,%ymm1
	vpmuludq	-128(%edx),%ymm2,%ymm2
	vpmuludq	-32(%edx),%ymm5,%ymm7
	vpaddq	%ymm7,%ymm3,%ymm3
	vpmuludq	(%edx),%ymm5,%ymm6
	vpaddq	%ymm6,%ymm4,%ymm4
	vpmuludq	-128(%edx),%ymm5,%ymm7
	vpaddq	%ymm7,%ymm0,%ymm0
	vmovdqa	32(%esp),%ymm7
	vpmuludq	-96(%edx),%ymm5,%ymm6
	vpaddq	%ymm6,%ymm1,%ymm1
	vpmuludq	-64(%edx),%ymm5,%ymm5
	vpaddq	%ymm5,%ymm2,%ymm2
	vpmuludq	-64(%edx),%ymm7,%ymm6
	vpaddq	%ymm6,%ymm3,%ymm3
	vpmuludq	-32(%edx),%ymm7,%ymm5
	vpaddq	%ymm5,%ymm4,%ymm4
	vpmuludq	128(%edx),%ymm7,%ymm6
	vpaddq	%ymm6,%ymm0,%ymm0
	vmovdqa	96(%esp),%ymm6
	vpmuludq	-128(%edx),%ymm7,%ymm5
	vpaddq	%ymm5,%ymm1,%ymm1
	vpmuludq	-96(%edx),%ymm7,%ymm7
	vpaddq	%ymm7,%ymm2,%ymm2
	vpmuludq	-128(%edx),%ymm6,%ymm5
	vpaddq	%ymm5,%ymm3,%ymm3
	vpmuludq	-96(%edx),%ymm6,%ymm7
	vpaddq	%ymm7,%ymm4,%ymm4
	vpmuludq	64(%edx),%ymm6,%ymm5
	vpaddq	%ymm5,%ymm0,%ymm0
	vmovdqa	128(%esp),%ymm5
	vpmuludq	96(%edx),%ymm6,%ymm7
	vpaddq	%ymm7,%ymm1,%ymm1
	vpmuludq	128(%edx),%ymm6,%ymm6
	vpaddq	%ymm6,%ymm2,%ymm2
	vpmuludq	128(%edx),%ymm5,%ymm7
	vpaddq	%ymm7,%ymm3,%ymm3
	vpmuludq	32(%edx),%ymm5,%ymm6
	vpaddq	%ymm6,%ymm0,%ymm0
	vpmuludq	-128(%edx),%ymm5,%ymm7
	vpaddq	%ymm7,%ymm4,%ymm4
	vmovdqa	64(%ebx),%ymm7
	vpmuludq	64(%edx),%ymm5,%ymm6
	vpaddq	%ymm6,%ymm1,%ymm1
	vpmuludq	96(%edx),%ymm5,%ymm5
	vpaddq	%ymm5,%ymm2,%ymm2
	vpsrlq	$26,%ymm3,%ymm5
	vpand	%ymm7,%ymm3,%ymm3
	vpsrlq	$26,%ymm0,%ymm6
	vpand	%ymm7,%ymm0,%ymm0
	vpaddq	%ymm5,%ymm4,%ymm4
	vpaddq	%ymm6,%ymm1,%ymm1
	vpsrlq	$26,%ymm4,%ymm5
	vpand	%ymm7,%ymm4,%ymm4
	vpsrlq	$26,%ymm1,%ymm6
	vpand	%ymm7,%ymm1,%ymm1
	vpaddq	%ymm6,%ymm2,%ymm2
	vpaddq	%ymm5,%ymm0,%ymm0
	vpsllq	$2,%ymm5,%ymm5
	vpsrlq	$26,%ymm2,%ymm6
	vpand	%ymm7,%ymm2,%ymm2
	vpaddq	%ymm5,%ymm0,%ymm0
	vpaddq	%ymm6,%ymm3,%ymm3
	vpsrlq	$26,%ymm3,%ymm6
	vpsrlq	$26,%ymm0,%ymm5
	vpand	%ymm7,%ymm0,%ymm0
	vpand	%ymm7,%ymm3,%ymm3
	vpaddq	%ymm5,%ymm1,%ymm1
	vpaddq	%ymm6,%ymm4,%ymm4
	vmovdqu	(%esi),%xmm5
	vmovdqu	16(%esi),%xmm6
	vinserti128	$1,32(%esi),%ymm5,%ymm5
	vinserti128	$1,48(%esi),%ymm6,%ymm6
	leal	64(%esi),%esi
	subl	$64,%ecx
	jnz	.L028loop
.L027tail:
	vmovdqa	%ymm2,64(%esp)
	vpsrldq	$6,%ymm5,%ymm2
	vmovdqa	%ymm0,(%esp)
	vpsrldq	$6,%ymm6,%ymm0
	vmovdqa	%ymm1,32(%esp)
	vpunpckhqdq	%ymm6,%ymm5,%ymm1
	vpunpcklqdq	%ymm6,%ymm5,%ymm5
	vpunpcklqdq	%ymm0,%ymm2,%ymm2
	vpsrlq	$30,%ymm2,%ymm0
	vpsrlq	$4,%ymm2,%ymm2
	vpsrlq	$26,%ymm5,%ymm6
	vpsrlq	$40,%ymm1,%ymm1
	vpand	%ymm7,%ymm2,%ymm2
	vpand	%ymm7,%ymm5,%ymm5
	vpand	%ymm7,%ymm6,%ymm6
	vpand	%ymm7,%ymm0,%ymm0
	vpor	(%ebx),%ymm1,%ymm1
	andl	$-64,%ebx
	vpaddq	64(%esp),%ymm2,%ymm2
	vpaddq	(%esp),%ymm5,%ymm5
	vpaddq	32(%esp),%ymm6,%ymm6
	vpaddq	%ymm3,%ymm0,%ymm0
	vpaddq	%ymm4,%ymm1,%ymm1
	vpmuludq	-92(%edx),%ymm2,%ymm3
	vmovdqa	%ymm6,32(%esp)
	vpmuludq	-60(%edx),%ymm2,%ymm4
	vmovdqa	%ymm0,96(%esp)
	vpmuludq	100(%edx),%ymm2,%ymm0
	vmovdqa	%ymm1,128(%esp)
	vpmuludq	132(%edx),%ymm2,%ymm1
	vpmuludq	-124(%edx),%ymm2,%ymm2
	vpmuludq	-28(%edx),%ymm5,%ymm7
	vpaddq	%ymm7,%ymm3,%ymm3
	vpmuludq	4(%edx),%ymm5,%ymm6
	vpaddq	%ymm6,%ymm4,%ymm4
	vpmuludq	-124(%edx),%ymm5,%ymm7
	vpaddq	%ymm7,%ymm0,%ymm0
	vmovdqa	32(%esp),%ymm7
	vpmuludq	-92(%edx),%ymm5,%ymm6
	vpaddq	%ymm6,%ymm1,%ymm1
	vpmuludq	-60(%edx),%ymm5,%ymm5
	vpaddq	%ymm5,%ymm2,%ymm2
	vpmuludq	-60(%edx),%ymm7,%ymm6
	vpaddq	%ymm6,%ymm3,%ymm3
	vpmuludq	-28(%edx),%ymm7,%ymm5
	vpaddq	%ymm5,%ymm4,%ymm4
	vpmuludq	132(%edx),%ymm7,%ymm6
	vpaddq	%ymm6,%ymm0,%ymm0
	vmovdqa	96(%esp),%ymm6
	vpmuludq	-124(%edx),%ymm7,%ymm5
	vpaddq	%ymm5,%ymm1,%ymm1
	vpmuludq	-92(%edx),%ymm7,%ymm7
	vpaddq	%ymm7,%ymm2,%ymm2
	vpmuludq	-124(%edx),%ymm6,%ymm5
	vpaddq	%ymm5,%ymm3,%ymm3
	vpmuludq	-92(%edx),%ymm6,%ymm7
	vpaddq	%ymm7,%ymm4,%ymm4
	vpmuludq	68(%edx),%ymm6,%ymm5
	vpaddq	%ymm5,%ymm0,%ymm0
	vmovdqa	128(%esp),%ymm5
	vpmuludq	100(%edx),%ymm6,%ymm7
	vpaddq	%ymm7,%ymm1,%ymm1
	vpmuludq	132(%edx),%ymm6,%ymm6
	vpaddq	%ymm6,%ymm2,%ymm2
	vpmuludq	132(%edx),%ymm5,%ymm7
	vpaddq	%ymm7,%ymm3,%ymm3
	vpmuludq	36(%edx),%ymm5,%ymm6
	vpaddq	%ymm6,%ymm0,%ymm0
	vpmuludq	-124(%edx),%ymm5,%ymm7
	vpaddq	%ymm7,%ymm4,%ymm4
	vmovdqa	64(%ebx),%ymm7
	vpmuludq	68(%edx),%ymm5,%ymm6
	vpaddq	%ymm6,%ymm1,%ymm1
	vpmuludq	100(%edx),%ymm5,%ymm5
	vpaddq	%ymm5,%ymm2,%ymm2
	vpsrldq	$8,%ymm4,%ymm5
	vpsrldq	$8,%ymm3,%ymm6
	vpaddq	%ymm5,%ymm4,%ymm4
	vpsrldq	$8,%ymm0,%ymm5
	vpaddq	%ymm6,%ymm3,%ymm3
	vpsrldq	$8,%ymm1,%ymm6
	vpaddq	%ymm5,%ymm0,%ymm0
	vpsrldq	$8,%ymm2,%ymm5
	vpaddq	%ymm6,%ymm1,%ymm1
	vpermq	$2,%ymm4,%ymm6
	vpaddq	%ymm5,%ymm2,%ymm2
	vpermq	$2,%ymm3,%ymm5
	vpaddq	%ymm6,%ymm4,%ymm4
	vpermq	$2,%ymm0,%ymm6
	vpaddq	%ymm5,%ymm3,%ymm3
	vpermq	$2,%ymm1,%ymm5
	vpaddq	%ymm6,%ymm0,%ymm0
	vpermq	$2,%ymm2,%ymm6
	vpaddq	%ymm5,%ymm1,%ymm1
	vpaddq	%ymm6,%ymm2,%ymm2
	vpsrlq	$26,%ymm3,%ymm5
	vpand	%ymm7,%ymm3,%ymm3
	vpsrlq	$26,%ymm0,%ymm6
	vpand	%ymm7,%ymm0,%ymm0
	vpaddq	%ymm5,%ymm4,%ymm4
	vpaddq	%ymm6,%ymm1,%ymm1
	vpsrlq	$26,%ymm4,%ymm5
	vpand	%ymm7,%ymm4,%ymm4
	vpsrlq	$26,%ymm1,%ymm6
	vpand	%ymm7,%ymm1,%ymm1
	vpaddq	%ymm6,%ymm2,%ymm2
	vpaddq	%ymm5,%ymm0,%ymm0
	vpsllq	$2,%ymm5,%ymm5
	vpsrlq	$26,%ymm2,%ymm6
	vpand	%ymm7,%ymm2,%ymm2
	vpaddq	%ymm5,%ymm0,%ymm0
	vpaddq	%ymm6,%ymm3,%ymm3
	vpsrlq	$26,%ymm3,%ymm6
	vpsrlq	$26,%ymm0,%ymm5
	vpand	%ymm7,%ymm0,%ymm0
	vpand	%ymm7,%ymm3,%ymm3
	vpaddq	%ymm5,%ymm1,%ymm1
	vpaddq	%ymm6,%ymm4,%ymm4
	cmpl	$0,%ecx
	je	.L029done
	vpshufd	$252,%xmm0,%xmm0
	leal	288(%esp),%edx
	vpshufd	$252,%xmm1,%xmm1
	vpshufd	$252,%xmm2,%xmm2
	vpshufd	$252,%xmm3,%xmm3
	vpshufd	$252,%xmm4,%xmm4
	jmp	.L024even
.align	16
.L029done:
	vmovd	%xmm0,-48(%edi)
	vmovd	%xmm1,-44(%edi)
	vmovd	%xmm2,-40(%edi)
	vmovd	%xmm3,-36(%edi)
	vmovd	%xmm4,-32(%edi)
	vzeroupper
	movl	%ebp,%esp
.L020nodata:
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	_poly1305_blocks_avx2,.-_poly1305_blocks_avx2
.align	64
.Lconst_sse2:
.long	16777216,0,16777216,0,16777216,0,16777216,0
.long	0,0,0,0,0,0,0,0
.long	67108863,0,67108863,0,67108863,0,67108863,0
.long	268435455,268435452,268435452,268435452
.byte	80,111,108,121,49,51,48,53,32,102,111,114,32,120,56,54
.byte	44,32,67,82,89,80,84,79,71,65,77,83,32,98,121,32
.byte	60,97,112,112,114,111,64,111,112,101,110,115,115,108,46,111
.byte	114,103,62,0
.align	4
.comm	OPENSSL_ia32cap_P,16,4

	.section ".note.gnu.property", "a"
	.p2align 2
	.long 1f - 0f
	.long 4f - 1f
	.long 5
0:
	.asciz "GNU"
1:
	.p2align 2
	.long 0xc0000002
	.long 3f - 2f
2:
	.long 3
3:
	.p2align 2
4:
                                                              node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/rc4/                                     0000775 0000000 0000000 00000000000 14746647661 0024233 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/rc4/rc4-586.S                            0000664 0000000 0000000 00000016500 14746647661 0025371 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        .text
.globl	RC4
.type	RC4,@function
.align	16
RC4:
.L_RC4_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%edi
	movl	24(%esp),%edx
	movl	28(%esp),%esi
	movl	32(%esp),%ebp
	xorl	%eax,%eax
	xorl	%ebx,%ebx
	cmpl	$0,%edx
	je	.L000abort
	movb	(%edi),%al
	movb	4(%edi),%bl
	addl	$8,%edi
	leal	(%esi,%edx,1),%ecx
	subl	%esi,%ebp
	movl	%ecx,24(%esp)
	incb	%al
	cmpl	$-1,256(%edi)
	je	.L001RC4_CHAR
	movl	(%edi,%eax,4),%ecx
	andl	$-4,%edx
	jz	.L002loop1
	movl	%ebp,32(%esp)
	testl	$-8,%edx
	jz	.L003go4loop4
	call	.L004PIC_me_up
.L004PIC_me_up:
	popl	%ebp
	leal	OPENSSL_ia32cap_P-.L004PIC_me_up(%ebp),%ebp
	btl	$26,(%ebp)
	jnc	.L003go4loop4
	movl	32(%esp),%ebp
	andl	$-8,%edx
	leal	-8(%esi,%edx,1),%edx
	movl	%edx,-4(%edi)
	addb	%cl,%bl
	movl	(%edi,%ebx,4),%edx
	movl	%ecx,(%edi,%ebx,4)
	movl	%edx,(%edi,%eax,4)
	incl	%eax
	addl	%ecx,%edx
	movzbl	%al,%eax
	movzbl	%dl,%edx
	movq	(%esi),%mm0
	movl	(%edi,%eax,4),%ecx
	movd	(%edi,%edx,4),%mm2
	jmp	.L005loop_mmx_enter
.align	16
.L006loop_mmx:
	addb	%cl,%bl
	psllq	$56,%mm1
	movl	(%edi,%ebx,4),%edx
	movl	%ecx,(%edi,%ebx,4)
	movl	%edx,(%edi,%eax,4)
	incl	%eax
	addl	%ecx,%edx
	movzbl	%al,%eax
	movzbl	%dl,%edx
	pxor	%mm1,%mm2
	movq	(%esi),%mm0
	movq	%mm2,-8(%ebp,%esi,1)
	movl	(%edi,%eax,4),%ecx
	movd	(%edi,%edx,4),%mm2
.L005loop_mmx_enter:
	addb	%cl,%bl
	movl	(%edi,%ebx,4),%edx
	movl	%ecx,(%edi,%ebx,4)
	movl	%edx,(%edi,%eax,4)
	incl	%eax
	addl	%ecx,%edx
	movzbl	%al,%eax
	movzbl	%dl,%edx
	pxor	%mm0,%mm2
	movl	(%edi,%eax,4),%ecx
	movd	(%edi,%edx,4),%mm1
	addb	%cl,%bl
	psllq	$8,%mm1
	movl	(%edi,%ebx,4),%edx
	movl	%ecx,(%edi,%ebx,4)
	movl	%edx,(%edi,%eax,4)
	incl	%eax
	addl	%ecx,%edx
	movzbl	%al,%eax
	movzbl	%dl,%edx
	pxor	%mm1,%mm2
	movl	(%edi,%eax,4),%ecx
	movd	(%edi,%edx,4),%mm1
	addb	%cl,%bl
	psllq	$16,%mm1
	movl	(%edi,%ebx,4),%edx
	movl	%ecx,(%edi,%ebx,4)
	movl	%edx,(%edi,%eax,4)
	incl	%eax
	addl	%ecx,%edx
	movzbl	%al,%eax
	movzbl	%dl,%edx
	pxor	%mm1,%mm2
	movl	(%edi,%eax,4),%ecx
	movd	(%edi,%edx,4),%mm1
	addb	%cl,%bl
	psllq	$24,%mm1
	movl	(%edi,%ebx,4),%edx
	movl	%ecx,(%edi,%ebx,4)
	movl	%edx,(%edi,%eax,4)
	incl	%eax
	addl	%ecx,%edx
	movzbl	%al,%eax
	movzbl	%dl,%edx
	pxor	%mm1,%mm2
	movl	(%edi,%eax,4),%ecx
	movd	(%edi,%edx,4),%mm1
	addb	%cl,%bl
	psllq	$32,%mm1
	movl	(%edi,%ebx,4),%edx
	movl	%ecx,(%edi,%ebx,4)
	movl	%edx,(%edi,%eax,4)
	incl	%eax
	addl	%ecx,%edx
	movzbl	%al,%eax
	movzbl	%dl,%edx
	pxor	%mm1,%mm2
	movl	(%edi,%eax,4),%ecx
	movd	(%edi,%edx,4),%mm1
	addb	%cl,%bl
	psllq	$40,%mm1
	movl	(%edi,%ebx,4),%edx
	movl	%ecx,(%edi,%ebx,4)
	movl	%edx,(%edi,%eax,4)
	incl	%eax
	addl	%ecx,%edx
	movzbl	%al,%eax
	movzbl	%dl,%edx
	pxor	%mm1,%mm2
	movl	(%edi,%eax,4),%ecx
	movd	(%edi,%edx,4),%mm1
	addb	%cl,%bl
	psllq	$48,%mm1
	movl	(%edi,%ebx,4),%edx
	movl	%ecx,(%edi,%ebx,4)
	movl	%edx,(%edi,%eax,4)
	incl	%eax
	addl	%ecx,%edx
	movzbl	%al,%eax
	movzbl	%dl,%edx
	pxor	%mm1,%mm2
	movl	(%edi,%eax,4),%ecx
	movd	(%edi,%edx,4),%mm1
	movl	%ebx,%edx
	xorl	%ebx,%ebx
	movb	%dl,%bl
	cmpl	-4(%edi),%esi
	leal	8(%esi),%esi
	jb	.L006loop_mmx
	psllq	$56,%mm1
	pxor	%mm1,%mm2
	movq	%mm2,-8(%ebp,%esi,1)
	emms
	cmpl	24(%esp),%esi
	je	.L007done
	jmp	.L002loop1
.align	16
.L003go4loop4:
	leal	-4(%esi,%edx,1),%edx
	movl	%edx,28(%esp)
.L008loop4:
	addb	%cl,%bl
	movl	(%edi,%ebx,4),%edx
	movl	%ecx,(%edi,%ebx,4)
	movl	%edx,(%edi,%eax,4)
	addl	%ecx,%edx
	incb	%al
	andl	$255,%edx
	movl	(%edi,%eax,4),%ecx
	movl	(%edi,%edx,4),%ebp
	addb	%cl,%bl
	movl	(%edi,%ebx,4),%edx
	movl	%ecx,(%edi,%ebx,4)
	movl	%edx,(%edi,%eax,4)
	addl	%ecx,%edx
	incb	%al
	andl	$255,%edx
	rorl	$8,%ebp
	movl	(%edi,%eax,4),%ecx
	orl	(%edi,%edx,4),%ebp
	addb	%cl,%bl
	movl	(%edi,%ebx,4),%edx
	movl	%ecx,(%edi,%ebx,4)
	movl	%edx,(%edi,%eax,4)
	addl	%ecx,%edx
	incb	%al
	andl	$255,%edx
	rorl	$8,%ebp
	movl	(%edi,%eax,4),%ecx
	orl	(%edi,%edx,4),%ebp
	addb	%cl,%bl
	movl	(%edi,%ebx,4),%edx
	movl	%ecx,(%edi,%ebx,4)
	movl	%edx,(%edi,%eax,4)
	addl	%ecx,%edx
	incb	%al
	andl	$255,%edx
	rorl	$8,%ebp
	movl	32(%esp),%ecx
	orl	(%edi,%edx,4),%ebp
	rorl	$8,%ebp
	xorl	(%esi),%ebp
	cmpl	28(%esp),%esi
	movl	%ebp,(%ecx,%esi,1)
	leal	4(%esi),%esi
	movl	(%edi,%eax,4),%ecx
	jb	.L008loop4
	cmpl	24(%esp),%esi
	je	.L007done
	movl	32(%esp),%ebp
.align	16
.L002loop1:
	addb	%cl,%bl
	movl	(%edi,%ebx,4),%edx
	movl	%ecx,(%edi,%ebx,4)
	movl	%edx,(%edi,%eax,4)
	addl	%ecx,%edx
	incb	%al
	andl	$255,%edx
	movl	(%edi,%edx,4),%edx
	xorb	(%esi),%dl
	leal	1(%esi),%esi
	movl	(%edi,%eax,4),%ecx
	cmpl	24(%esp),%esi
	movb	%dl,-1(%ebp,%esi,1)
	jb	.L002loop1
	jmp	.L007done
.align	16
.L001RC4_CHAR:
	movzbl	(%edi,%eax,1),%ecx
.L009cloop1:
	addb	%cl,%bl
	movzbl	(%edi,%ebx,1),%edx
	movb	%cl,(%edi,%ebx,1)
	movb	%dl,(%edi,%eax,1)
	addb	%cl,%dl
	movzbl	(%edi,%edx,1),%edx
	addb	$1,%al
	xorb	(%esi),%dl
	leal	1(%esi),%esi
	movzbl	(%edi,%eax,1),%ecx
	cmpl	24(%esp),%esi
	movb	%dl,-1(%ebp,%esi,1)
	jb	.L009cloop1
.L007done:
	decb	%al
	movl	%ebx,-4(%edi)
	movb	%al,-8(%edi)
.L000abort:
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	RC4,.-.L_RC4_begin
.globl	RC4_set_key
.type	RC4_set_key,@function
.align	16
RC4_set_key:
.L_RC4_set_key_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%edi
	movl	24(%esp),%ebp
	movl	28(%esp),%esi
	call	.L010PIC_me_up
.L010PIC_me_up:
	popl	%edx
	leal	OPENSSL_ia32cap_P-.L010PIC_me_up(%edx),%edx
	leal	8(%edi),%edi
	leal	(%esi,%ebp,1),%esi
	negl	%ebp
	xorl	%eax,%eax
	movl	%ebp,-4(%edi)
	btl	$20,(%edx)
	jc	.L011c1stloop
.align	16
.L012w1stloop:
	movl	%eax,(%edi,%eax,4)
	addb	$1,%al
	jnc	.L012w1stloop
	xorl	%ecx,%ecx
	xorl	%edx,%edx
.align	16
.L013w2ndloop:
	movl	(%edi,%ecx,4),%eax
	addb	(%esi,%ebp,1),%dl
	addb	%al,%dl
	addl	$1,%ebp
	movl	(%edi,%edx,4),%ebx
	jnz	.L014wnowrap
	movl	-4(%edi),%ebp
.L014wnowrap:
	movl	%eax,(%edi,%edx,4)
	movl	%ebx,(%edi,%ecx,4)
	addb	$1,%cl
	jnc	.L013w2ndloop
	jmp	.L015exit
.align	16
.L011c1stloop:
	movb	%al,(%edi,%eax,1)
	addb	$1,%al
	jnc	.L011c1stloop
	xorl	%ecx,%ecx
	xorl	%edx,%edx
	xorl	%ebx,%ebx
.align	16
.L016c2ndloop:
	movb	(%edi,%ecx,1),%al
	addb	(%esi,%ebp,1),%dl
	addb	%al,%dl
	addl	$1,%ebp
	movb	(%edi,%edx,1),%bl
	jnz	.L017cnowrap
	movl	-4(%edi),%ebp
.L017cnowrap:
	movb	%al,(%edi,%edx,1)
	movb	%bl,(%edi,%ecx,1)
	addb	$1,%cl
	jnc	.L016c2ndloop
	movl	$-1,256(%edi)
.L015exit:
	xorl	%eax,%eax
	movl	%eax,-8(%edi)
	movl	%eax,-4(%edi)
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	RC4_set_key,.-.L_RC4_set_key_begin
.globl	RC4_options
.type	RC4_options,@function
.align	16
RC4_options:
.L_RC4_options_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	call	.L018pic_point
.L018pic_point:
	popl	%eax
	leal	.L019opts-.L018pic_point(%eax),%eax
	call	.L020PIC_me_up
.L020PIC_me_up:
	popl	%edx
	leal	OPENSSL_ia32cap_P-.L020PIC_me_up(%edx),%edx
	movl	(%edx),%edx
	btl	$20,%edx
	jc	.L0211xchar
	btl	$26,%edx
	jnc	.L022ret
	addl	$25,%eax
	ret
.L0211xchar:
	addl	$12,%eax
.L022ret:
	ret
.align	64
.L019opts:
.byte	114,99,52,40,52,120,44,105,110,116,41,0
.byte	114,99,52,40,49,120,44,99,104,97,114,41,0
.byte	114,99,52,40,56,120,44,109,109,120,41,0
.byte	82,67,52,32,102,111,114,32,120,56,54,44,32,67,82,89
.byte	80,84,79,71,65,77,83,32,98,121,32,60,97,112,112,114
.byte	111,64,111,112,101,110,115,115,108,46,111,114,103,62,0
.align	64
.size	RC4_options,.-.L_RC4_options_begin
.comm	OPENSSL_ia32cap_P,16,4

	.section ".note.gnu.property", "a"
	.p2align 2
	.long 1f - 0f
	.long 4f - 1f
	.long 5
0:
	.asciz "GNU"
1:
	.p2align 2
	.long 0xc0000002
	.long 3f - 2f
2:
	.long 3
3:
	.p2align 2
4:
                                                                                                                                                                                                node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/ripemd/                                  0000775 0000000 0000000 00000000000 14746647661 0025023 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/ripemd/rmd-586.S                         0000664 0000000 0000000 00000076331 14746647661 0026263 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        .text
.globl	ripemd160_block_asm_data_order
.type	ripemd160_block_asm_data_order,@function
.align	16
ripemd160_block_asm_data_order:
.L_ripemd160_block_asm_data_order_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	movl	4(%esp),%edx
	movl	8(%esp),%eax
	pushl	%esi
	movl	(%edx),%ecx
	pushl	%edi
	movl	4(%edx),%esi
	pushl	%ebp
	movl	8(%edx),%edi
	pushl	%ebx
	subl	$108,%esp
.L000start:

	movl	(%eax),%ebx
	movl	4(%eax),%ebp
	movl	%ebx,(%esp)
	movl	%ebp,4(%esp)
	movl	8(%eax),%ebx
	movl	12(%eax),%ebp
	movl	%ebx,8(%esp)
	movl	%ebp,12(%esp)
	movl	16(%eax),%ebx
	movl	20(%eax),%ebp
	movl	%ebx,16(%esp)
	movl	%ebp,20(%esp)
	movl	24(%eax),%ebx
	movl	28(%eax),%ebp
	movl	%ebx,24(%esp)
	movl	%ebp,28(%esp)
	movl	32(%eax),%ebx
	movl	36(%eax),%ebp
	movl	%ebx,32(%esp)
	movl	%ebp,36(%esp)
	movl	40(%eax),%ebx
	movl	44(%eax),%ebp
	movl	%ebx,40(%esp)
	movl	%ebp,44(%esp)
	movl	48(%eax),%ebx
	movl	52(%eax),%ebp
	movl	%ebx,48(%esp)
	movl	%ebp,52(%esp)
	movl	56(%eax),%ebx
	movl	60(%eax),%ebp
	movl	%ebx,56(%esp)
	movl	%ebp,60(%esp)
	movl	%edi,%eax
	movl	12(%edx),%ebx
	movl	16(%edx),%ebp

	xorl	%ebx,%eax
	movl	(%esp),%edx
	xorl	%esi,%eax
	addl	%edx,%ecx
	roll	$10,%edi
	addl	%eax,%ecx
	movl	%esi,%eax
	roll	$11,%ecx
	addl	%ebp,%ecx

	xorl	%edi,%eax
	movl	4(%esp),%edx
	xorl	%ecx,%eax
	addl	%eax,%ebp
	movl	%ecx,%eax
	roll	$10,%esi
	addl	%edx,%ebp
	xorl	%esi,%eax
	roll	$14,%ebp
	addl	%ebx,%ebp

	movl	8(%esp),%edx
	xorl	%ebp,%eax
	addl	%edx,%ebx
	roll	$10,%ecx
	addl	%eax,%ebx
	movl	%ebp,%eax
	roll	$15,%ebx
	addl	%edi,%ebx

	xorl	%ecx,%eax
	movl	12(%esp),%edx
	xorl	%ebx,%eax
	addl	%eax,%edi
	movl	%ebx,%eax
	roll	$10,%ebp
	addl	%edx,%edi
	xorl	%ebp,%eax
	roll	$12,%edi
	addl	%esi,%edi

	movl	16(%esp),%edx
	xorl	%edi,%eax
	addl	%edx,%esi
	roll	$10,%ebx
	addl	%eax,%esi
	movl	%edi,%eax
	roll	$5,%esi
	addl	%ecx,%esi

	xorl	%ebx,%eax
	movl	20(%esp),%edx
	xorl	%esi,%eax
	addl	%eax,%ecx
	movl	%esi,%eax
	roll	$10,%edi
	addl	%edx,%ecx
	xorl	%edi,%eax
	roll	$8,%ecx
	addl	%ebp,%ecx

	movl	24(%esp),%edx
	xorl	%ecx,%eax
	addl	%edx,%ebp
	roll	$10,%esi
	addl	%eax,%ebp
	movl	%ecx,%eax
	roll	$7,%ebp
	addl	%ebx,%ebp

	xorl	%esi,%eax
	movl	28(%esp),%edx
	xorl	%ebp,%eax
	addl	%eax,%ebx
	movl	%ebp,%eax
	roll	$10,%ecx
	addl	%edx,%ebx
	xorl	%ecx,%eax
	roll	$9,%ebx
	addl	%edi,%ebx

	movl	32(%esp),%edx
	xorl	%ebx,%eax
	addl	%edx,%edi
	roll	$10,%ebp
	addl	%eax,%edi
	movl	%ebx,%eax
	roll	$11,%edi
	addl	%esi,%edi

	xorl	%ebp,%eax
	movl	36(%esp),%edx
	xorl	%edi,%eax
	addl	%eax,%esi
	movl	%edi,%eax
	roll	$10,%ebx
	addl	%edx,%esi
	xorl	%ebx,%eax
	roll	$13,%esi
	addl	%ecx,%esi

	movl	40(%esp),%edx
	xorl	%esi,%eax
	addl	%edx,%ecx
	roll	$10,%edi
	addl	%eax,%ecx
	movl	%esi,%eax
	roll	$14,%ecx
	addl	%ebp,%ecx

	xorl	%edi,%eax
	movl	44(%esp),%edx
	xorl	%ecx,%eax
	addl	%eax,%ebp
	movl	%ecx,%eax
	roll	$10,%esi
	addl	%edx,%ebp
	xorl	%esi,%eax
	roll	$15,%ebp
	addl	%ebx,%ebp

	movl	48(%esp),%edx
	xorl	%ebp,%eax
	addl	%edx,%ebx
	roll	$10,%ecx
	addl	%eax,%ebx
	movl	%ebp,%eax
	roll	$6,%ebx
	addl	%edi,%ebx

	xorl	%ecx,%eax
	movl	52(%esp),%edx
	xorl	%ebx,%eax
	addl	%eax,%edi
	movl	%ebx,%eax
	roll	$10,%ebp
	addl	%edx,%edi
	xorl	%ebp,%eax
	roll	$7,%edi
	addl	%esi,%edi

	movl	56(%esp),%edx
	xorl	%edi,%eax
	addl	%edx,%esi
	roll	$10,%ebx
	addl	%eax,%esi
	movl	%edi,%eax
	roll	$9,%esi
	addl	%ecx,%esi

	xorl	%ebx,%eax
	movl	60(%esp),%edx
	xorl	%esi,%eax
	addl	%eax,%ecx
	movl	$-1,%eax
	roll	$10,%edi
	addl	%edx,%ecx
	movl	28(%esp),%edx
	roll	$8,%ecx
	addl	%ebp,%ecx

	addl	%edx,%ebp
	movl	%esi,%edx
	subl	%ecx,%eax
	andl	%ecx,%edx
	andl	%edi,%eax
	orl	%eax,%edx
	movl	16(%esp),%eax
	roll	$10,%esi
	leal	1518500249(%ebp,%edx,1),%ebp
	movl	$-1,%edx
	roll	$7,%ebp
	addl	%ebx,%ebp

	addl	%eax,%ebx
	movl	%ecx,%eax
	subl	%ebp,%edx
	andl	%ebp,%eax
	andl	%esi,%edx
	orl	%edx,%eax
	movl	52(%esp),%edx
	roll	$10,%ecx
	leal	1518500249(%ebx,%eax,1),%ebx
	movl	$-1,%eax
	roll	$6,%ebx
	addl	%edi,%ebx

	addl	%edx,%edi
	movl	%ebp,%edx
	subl	%ebx,%eax
	andl	%ebx,%edx
	andl	%ecx,%eax
	orl	%eax,%edx
	movl	4(%esp),%eax
	roll	$10,%ebp
	leal	1518500249(%edi,%edx,1),%edi
	movl	$-1,%edx
	roll	$8,%edi
	addl	%esi,%edi

	addl	%eax,%esi
	movl	%ebx,%eax
	subl	%edi,%edx
	andl	%edi,%eax
	andl	%ebp,%edx
	orl	%edx,%eax
	movl	40(%esp),%edx
	roll	$10,%ebx
	leal	1518500249(%esi,%eax,1),%esi
	movl	$-1,%eax
	roll	$13,%esi
	addl	%ecx,%esi

	addl	%edx,%ecx
	movl	%edi,%edx
	subl	%esi,%eax
	andl	%esi,%edx
	andl	%ebx,%eax
	orl	%eax,%edx
	movl	24(%esp),%eax
	roll	$10,%edi
	leal	1518500249(%ecx,%edx,1),%ecx
	movl	$-1,%edx
	roll	$11,%ecx
	addl	%ebp,%ecx

	addl	%eax,%ebp
	movl	%esi,%eax
	subl	%ecx,%edx
	andl	%ecx,%eax
	andl	%edi,%edx
	orl	%edx,%eax
	movl	60(%esp),%edx
	roll	$10,%esi
	leal	1518500249(%ebp,%eax,1),%ebp
	movl	$-1,%eax
	roll	$9,%ebp
	addl	%ebx,%ebp

	addl	%edx,%ebx
	movl	%ecx,%edx
	subl	%ebp,%eax
	andl	%ebp,%edx
	andl	%esi,%eax
	orl	%eax,%edx
	movl	12(%esp),%eax
	roll	$10,%ecx
	leal	1518500249(%ebx,%edx,1),%ebx
	movl	$-1,%edx
	roll	$7,%ebx
	addl	%edi,%ebx

	addl	%eax,%edi
	movl	%ebp,%eax
	subl	%ebx,%edx
	andl	%ebx,%eax
	andl	%ecx,%edx
	orl	%edx,%eax
	movl	48(%esp),%edx
	roll	$10,%ebp
	leal	1518500249(%edi,%eax,1),%edi
	movl	$-1,%eax
	roll	$15,%edi
	addl	%esi,%edi

	addl	%edx,%esi
	movl	%ebx,%edx
	subl	%edi,%eax
	andl	%edi,%edx
	andl	%ebp,%eax
	orl	%eax,%edx
	movl	(%esp),%eax
	roll	$10,%ebx
	leal	1518500249(%esi,%edx,1),%esi
	movl	$-1,%edx
	roll	$7,%esi
	addl	%ecx,%esi

	addl	%eax,%ecx
	movl	%edi,%eax
	subl	%esi,%edx
	andl	%esi,%eax
	andl	%ebx,%edx
	orl	%edx,%eax
	movl	36(%esp),%edx
	roll	$10,%edi
	leal	1518500249(%ecx,%eax,1),%ecx
	movl	$-1,%eax
	roll	$12,%ecx
	addl	%ebp,%ecx

	addl	%edx,%ebp
	movl	%esi,%edx
	subl	%ecx,%eax
	andl	%ecx,%edx
	andl	%edi,%eax
	orl	%eax,%edx
	movl	20(%esp),%eax
	roll	$10,%esi
	leal	1518500249(%ebp,%edx,1),%ebp
	movl	$-1,%edx
	roll	$15,%ebp
	addl	%ebx,%ebp

	addl	%eax,%ebx
	movl	%ecx,%eax
	subl	%ebp,%edx
	andl	%ebp,%eax
	andl	%esi,%edx
	orl	%edx,%eax
	movl	8(%esp),%edx
	roll	$10,%ecx
	leal	1518500249(%ebx,%eax,1),%ebx
	movl	$-1,%eax
	roll	$9,%ebx
	addl	%edi,%ebx

	addl	%edx,%edi
	movl	%ebp,%edx
	subl	%ebx,%eax
	andl	%ebx,%edx
	andl	%ecx,%eax
	orl	%eax,%edx
	movl	56(%esp),%eax
	roll	$10,%ebp
	leal	1518500249(%edi,%edx,1),%edi
	movl	$-1,%edx
	roll	$11,%edi
	addl	%esi,%edi

	addl	%eax,%esi
	movl	%ebx,%eax
	subl	%edi,%edx
	andl	%edi,%eax
	andl	%ebp,%edx
	orl	%edx,%eax
	movl	44(%esp),%edx
	roll	$10,%ebx
	leal	1518500249(%esi,%eax,1),%esi
	movl	$-1,%eax
	roll	$7,%esi
	addl	%ecx,%esi

	addl	%edx,%ecx
	movl	%edi,%edx
	subl	%esi,%eax
	andl	%esi,%edx
	andl	%ebx,%eax
	orl	%eax,%edx
	movl	32(%esp),%eax
	roll	$10,%edi
	leal	1518500249(%ecx,%edx,1),%ecx
	movl	$-1,%edx
	roll	$13,%ecx
	addl	%ebp,%ecx

	addl	%eax,%ebp
	movl	%esi,%eax
	subl	%ecx,%edx
	andl	%ecx,%eax
	andl	%edi,%edx
	orl	%edx,%eax
	movl	$-1,%edx
	roll	$10,%esi
	leal	1518500249(%ebp,%eax,1),%ebp
	subl	%ecx,%edx
	roll	$12,%ebp
	addl	%ebx,%ebp

	movl	12(%esp),%eax
	orl	%ebp,%edx
	addl	%eax,%ebx
	xorl	%esi,%edx
	movl	$-1,%eax
	roll	$10,%ecx
	leal	1859775393(%ebx,%edx,1),%ebx
	subl	%ebp,%eax
	roll	$11,%ebx
	addl	%edi,%ebx

	movl	40(%esp),%edx
	orl	%ebx,%eax
	addl	%edx,%edi
	xorl	%ecx,%eax
	movl	$-1,%edx
	roll	$10,%ebp
	leal	1859775393(%edi,%eax,1),%edi
	subl	%ebx,%edx
	roll	$13,%edi
	addl	%esi,%edi

	movl	56(%esp),%eax
	orl	%edi,%edx
	addl	%eax,%esi
	xorl	%ebp,%edx
	movl	$-1,%eax
	roll	$10,%ebx
	leal	1859775393(%esi,%edx,1),%esi
	subl	%edi,%eax
	roll	$6,%esi
	addl	%ecx,%esi

	movl	16(%esp),%edx
	orl	%esi,%eax
	addl	%edx,%ecx
	xorl	%ebx,%eax
	movl	$-1,%edx
	roll	$10,%edi
	leal	1859775393(%ecx,%eax,1),%ecx
	subl	%esi,%edx
	roll	$7,%ecx
	addl	%ebp,%ecx

	movl	36(%esp),%eax
	orl	%ecx,%edx
	addl	%eax,%ebp
	xorl	%edi,%edx
	movl	$-1,%eax
	roll	$10,%esi
	leal	1859775393(%ebp,%edx,1),%ebp
	subl	%ecx,%eax
	roll	$14,%ebp
	addl	%ebx,%ebp

	movl	60(%esp),%edx
	orl	%ebp,%eax
	addl	%edx,%ebx
	xorl	%esi,%eax
	movl	$-1,%edx
	roll	$10,%ecx
	leal	1859775393(%ebx,%eax,1),%ebx
	subl	%ebp,%edx
	roll	$9,%ebx
	addl	%edi,%ebx

	movl	32(%esp),%eax
	orl	%ebx,%edx
	addl	%eax,%edi
	xorl	%ecx,%edx
	movl	$-1,%eax
	roll	$10,%ebp
	leal	1859775393(%edi,%edx,1),%edi
	subl	%ebx,%eax
	roll	$13,%edi
	addl	%esi,%edi

	movl	4(%esp),%edx
	orl	%edi,%eax
	addl	%edx,%esi
	xorl	%ebp,%eax
	movl	$-1,%edx
	roll	$10,%ebx
	leal	1859775393(%esi,%eax,1),%esi
	subl	%edi,%edx
	roll	$15,%esi
	addl	%ecx,%esi

	movl	8(%esp),%eax
	orl	%esi,%edx
	addl	%eax,%ecx
	xorl	%ebx,%edx
	movl	$-1,%eax
	roll	$10,%edi
	leal	1859775393(%ecx,%edx,1),%ecx
	subl	%esi,%eax
	roll	$14,%ecx
	addl	%ebp,%ecx

	movl	28(%esp),%edx
	orl	%ecx,%eax
	addl	%edx,%ebp
	xorl	%edi,%eax
	movl	$-1,%edx
	roll	$10,%esi
	leal	1859775393(%ebp,%eax,1),%ebp
	subl	%ecx,%edx
	roll	$8,%ebp
	addl	%ebx,%ebp

	movl	(%esp),%eax
	orl	%ebp,%edx
	addl	%eax,%ebx
	xorl	%esi,%edx
	movl	$-1,%eax
	roll	$10,%ecx
	leal	1859775393(%ebx,%edx,1),%ebx
	subl	%ebp,%eax
	roll	$13,%ebx
	addl	%edi,%ebx

	movl	24(%esp),%edx
	orl	%ebx,%eax
	addl	%edx,%edi
	xorl	%ecx,%eax
	movl	$-1,%edx
	roll	$10,%ebp
	leal	1859775393(%edi,%eax,1),%edi
	subl	%ebx,%edx
	roll	$6,%edi
	addl	%esi,%edi

	movl	52(%esp),%eax
	orl	%edi,%edx
	addl	%eax,%esi
	xorl	%ebp,%edx
	movl	$-1,%eax
	roll	$10,%ebx
	leal	1859775393(%esi,%edx,1),%esi
	subl	%edi,%eax
	roll	$5,%esi
	addl	%ecx,%esi

	movl	44(%esp),%edx
	orl	%esi,%eax
	addl	%edx,%ecx
	xorl	%ebx,%eax
	movl	$-1,%edx
	roll	$10,%edi
	leal	1859775393(%ecx,%eax,1),%ecx
	subl	%esi,%edx
	roll	$12,%ecx
	addl	%ebp,%ecx

	movl	20(%esp),%eax
	orl	%ecx,%edx
	addl	%eax,%ebp
	xorl	%edi,%edx
	movl	$-1,%eax
	roll	$10,%esi
	leal	1859775393(%ebp,%edx,1),%ebp
	subl	%ecx,%eax
	roll	$7,%ebp
	addl	%ebx,%ebp

	movl	48(%esp),%edx
	orl	%ebp,%eax
	addl	%edx,%ebx
	xorl	%esi,%eax
	movl	$-1,%edx
	roll	$10,%ecx
	leal	1859775393(%ebx,%eax,1),%ebx
	movl	%ecx,%eax
	roll	$5,%ebx
	addl	%edi,%ebx

	subl	%ecx,%edx
	andl	%ebx,%eax
	andl	%ebp,%edx
	orl	%eax,%edx
	movl	4(%esp),%eax
	roll	$10,%ebp
	leal	2400959708(%edi,%edx,1),%edi
	movl	$-1,%edx
	addl	%eax,%edi
	movl	%ebp,%eax
	roll	$11,%edi
	addl	%esi,%edi

	subl	%ebp,%edx
	andl	%edi,%eax
	andl	%ebx,%edx
	orl	%eax,%edx
	movl	36(%esp),%eax
	roll	$10,%ebx
	leal	2400959708(%esi,%edx,1),%esi
	movl	$-1,%edx
	addl	%eax,%esi
	movl	%ebx,%eax
	roll	$12,%esi
	addl	%ecx,%esi

	subl	%ebx,%edx
	andl	%esi,%eax
	andl	%edi,%edx
	orl	%eax,%edx
	movl	44(%esp),%eax
	roll	$10,%edi
	leal	2400959708(%ecx,%edx,1),%ecx
	movl	$-1,%edx
	addl	%eax,%ecx
	movl	%edi,%eax
	roll	$14,%ecx
	addl	%ebp,%ecx

	subl	%edi,%edx
	andl	%ecx,%eax
	andl	%esi,%edx
	orl	%eax,%edx
	movl	40(%esp),%eax
	roll	$10,%esi
	leal	2400959708(%ebp,%edx,1),%ebp
	movl	$-1,%edx
	addl	%eax,%ebp
	movl	%esi,%eax
	roll	$15,%ebp
	addl	%ebx,%ebp

	subl	%esi,%edx
	andl	%ebp,%eax
	andl	%ecx,%edx
	orl	%eax,%edx
	movl	(%esp),%eax
	roll	$10,%ecx
	leal	2400959708(%ebx,%edx,1),%ebx
	movl	$-1,%edx
	addl	%eax,%ebx
	movl	%ecx,%eax
	roll	$14,%ebx
	addl	%edi,%ebx

	subl	%ecx,%edx
	andl	%ebx,%eax
	andl	%ebp,%edx
	orl	%eax,%edx
	movl	32(%esp),%eax
	roll	$10,%ebp
	leal	2400959708(%edi,%edx,1),%edi
	movl	$-1,%edx
	addl	%eax,%edi
	movl	%ebp,%eax
	roll	$15,%edi
	addl	%esi,%edi

	subl	%ebp,%edx
	andl	%edi,%eax
	andl	%ebx,%edx
	orl	%eax,%edx
	movl	48(%esp),%eax
	roll	$10,%ebx
	leal	2400959708(%esi,%edx,1),%esi
	movl	$-1,%edx
	addl	%eax,%esi
	movl	%ebx,%eax
	roll	$9,%esi
	addl	%ecx,%esi

	subl	%ebx,%edx
	andl	%esi,%eax
	andl	%edi,%edx
	orl	%eax,%edx
	movl	16(%esp),%eax
	roll	$10,%edi
	leal	2400959708(%ecx,%edx,1),%ecx
	movl	$-1,%edx
	addl	%eax,%ecx
	movl	%edi,%eax
	roll	$8,%ecx
	addl	%ebp,%ecx

	subl	%edi,%edx
	andl	%ecx,%eax
	andl	%esi,%edx
	orl	%eax,%edx
	movl	52(%esp),%eax
	roll	$10,%esi
	leal	2400959708(%ebp,%edx,1),%ebp
	movl	$-1,%edx
	addl	%eax,%ebp
	movl	%esi,%eax
	roll	$9,%ebp
	addl	%ebx,%ebp

	subl	%esi,%edx
	andl	%ebp,%eax
	andl	%ecx,%edx
	orl	%eax,%edx
	movl	12(%esp),%eax
	roll	$10,%ecx
	leal	2400959708(%ebx,%edx,1),%ebx
	movl	$-1,%edx
	addl	%eax,%ebx
	movl	%ecx,%eax
	roll	$14,%ebx
	addl	%edi,%ebx

	subl	%ecx,%edx
	andl	%ebx,%eax
	andl	%ebp,%edx
	orl	%eax,%edx
	movl	28(%esp),%eax
	roll	$10,%ebp
	leal	2400959708(%edi,%edx,1),%edi
	movl	$-1,%edx
	addl	%eax,%edi
	movl	%ebp,%eax
	roll	$5,%edi
	addl	%esi,%edi

	subl	%ebp,%edx
	andl	%edi,%eax
	andl	%ebx,%edx
	orl	%eax,%edx
	movl	60(%esp),%eax
	roll	$10,%ebx
	leal	2400959708(%esi,%edx,1),%esi
	movl	$-1,%edx
	addl	%eax,%esi
	movl	%ebx,%eax
	roll	$6,%esi
	addl	%ecx,%esi

	subl	%ebx,%edx
	andl	%esi,%eax
	andl	%edi,%edx
	orl	%eax,%edx
	movl	56(%esp),%eax
	roll	$10,%edi
	leal	2400959708(%ecx,%edx,1),%ecx
	movl	$-1,%edx
	addl	%eax,%ecx
	movl	%edi,%eax
	roll	$8,%ecx
	addl	%ebp,%ecx

	subl	%edi,%edx
	andl	%ecx,%eax
	andl	%esi,%edx
	orl	%eax,%edx
	movl	20(%esp),%eax
	roll	$10,%esi
	leal	2400959708(%ebp,%edx,1),%ebp
	movl	$-1,%edx
	addl	%eax,%ebp
	movl	%esi,%eax
	roll	$6,%ebp
	addl	%ebx,%ebp

	subl	%esi,%edx
	andl	%ebp,%eax
	andl	%ecx,%edx
	orl	%eax,%edx
	movl	24(%esp),%eax
	roll	$10,%ecx
	leal	2400959708(%ebx,%edx,1),%ebx
	movl	$-1,%edx
	addl	%eax,%ebx
	movl	%ecx,%eax
	roll	$5,%ebx
	addl	%edi,%ebx

	subl	%ecx,%edx
	andl	%ebx,%eax
	andl	%ebp,%edx
	orl	%eax,%edx
	movl	8(%esp),%eax
	roll	$10,%ebp
	leal	2400959708(%edi,%edx,1),%edi
	movl	$-1,%edx
	addl	%eax,%edi
	subl	%ebp,%edx
	roll	$12,%edi
	addl	%esi,%edi

	movl	16(%esp),%eax
	orl	%ebx,%edx
	addl	%eax,%esi
	xorl	%edi,%edx
	movl	$-1,%eax
	roll	$10,%ebx
	leal	2840853838(%esi,%edx,1),%esi
	subl	%ebx,%eax
	roll	$9,%esi
	addl	%ecx,%esi

	movl	(%esp),%edx
	orl	%edi,%eax
	addl	%edx,%ecx
	xorl	%esi,%eax
	movl	$-1,%edx
	roll	$10,%edi
	leal	2840853838(%ecx,%eax,1),%ecx
	subl	%edi,%edx
	roll	$15,%ecx
	addl	%ebp,%ecx

	movl	20(%esp),%eax
	orl	%esi,%edx
	addl	%eax,%ebp
	xorl	%ecx,%edx
	movl	$-1,%eax
	roll	$10,%esi
	leal	2840853838(%ebp,%edx,1),%ebp
	subl	%esi,%eax
	roll	$5,%ebp
	addl	%ebx,%ebp

	movl	36(%esp),%edx
	orl	%ecx,%eax
	addl	%edx,%ebx
	xorl	%ebp,%eax
	movl	$-1,%edx
	roll	$10,%ecx
	leal	2840853838(%ebx,%eax,1),%ebx
	subl	%ecx,%edx
	roll	$11,%ebx
	addl	%edi,%ebx

	movl	28(%esp),%eax
	orl	%ebp,%edx
	addl	%eax,%edi
	xorl	%ebx,%edx
	movl	$-1,%eax
	roll	$10,%ebp
	leal	2840853838(%edi,%edx,1),%edi
	subl	%ebp,%eax
	roll	$6,%edi
	addl	%esi,%edi

	movl	48(%esp),%edx
	orl	%ebx,%eax
	addl	%edx,%esi
	xorl	%edi,%eax
	movl	$-1,%edx
	roll	$10,%ebx
	leal	2840853838(%esi,%eax,1),%esi
	subl	%ebx,%edx
	roll	$8,%esi
	addl	%ecx,%esi

	movl	8(%esp),%eax
	orl	%edi,%edx
	addl	%eax,%ecx
	xorl	%esi,%edx
	movl	$-1,%eax
	roll	$10,%edi
	leal	2840853838(%ecx,%edx,1),%ecx
	subl	%edi,%eax
	roll	$13,%ecx
	addl	%ebp,%ecx

	movl	40(%esp),%edx
	orl	%esi,%eax
	addl	%edx,%ebp
	xorl	%ecx,%eax
	movl	$-1,%edx
	roll	$10,%esi
	leal	2840853838(%ebp,%eax,1),%ebp
	subl	%esi,%edx
	roll	$12,%ebp
	addl	%ebx,%ebp

	movl	56(%esp),%eax
	orl	%ecx,%edx
	addl	%eax,%ebx
	xorl	%ebp,%edx
	movl	$-1,%eax
	roll	$10,%ecx
	leal	2840853838(%ebx,%edx,1),%ebx
	subl	%ecx,%eax
	roll	$5,%ebx
	addl	%edi,%ebx

	movl	4(%esp),%edx
	orl	%ebp,%eax
	addl	%edx,%edi
	xorl	%ebx,%eax
	movl	$-1,%edx
	roll	$10,%ebp
	leal	2840853838(%edi,%eax,1),%edi
	subl	%ebp,%edx
	roll	$12,%edi
	addl	%esi,%edi

	movl	12(%esp),%eax
	orl	%ebx,%edx
	addl	%eax,%esi
	xorl	%edi,%edx
	movl	$-1,%eax
	roll	$10,%ebx
	leal	2840853838(%esi,%edx,1),%esi
	subl	%ebx,%eax
	roll	$13,%esi
	addl	%ecx,%esi

	movl	32(%esp),%edx
	orl	%edi,%eax
	addl	%edx,%ecx
	xorl	%esi,%eax
	movl	$-1,%edx
	roll	$10,%edi
	leal	2840853838(%ecx,%eax,1),%ecx
	subl	%edi,%edx
	roll	$14,%ecx
	addl	%ebp,%ecx

	movl	44(%esp),%eax
	orl	%esi,%edx
	addl	%eax,%ebp
	xorl	%ecx,%edx
	movl	$-1,%eax
	roll	$10,%esi
	leal	2840853838(%ebp,%edx,1),%ebp
	subl	%esi,%eax
	roll	$11,%ebp
	addl	%ebx,%ebp

	movl	24(%esp),%edx
	orl	%ecx,%eax
	addl	%edx,%ebx
	xorl	%ebp,%eax
	movl	$-1,%edx
	roll	$10,%ecx
	leal	2840853838(%ebx,%eax,1),%ebx
	subl	%ecx,%edx
	roll	$8,%ebx
	addl	%edi,%ebx

	movl	60(%esp),%eax
	orl	%ebp,%edx
	addl	%eax,%edi
	xorl	%ebx,%edx
	movl	$-1,%eax
	roll	$10,%ebp
	leal	2840853838(%edi,%edx,1),%edi
	subl	%ebp,%eax
	roll	$5,%edi
	addl	%esi,%edi

	movl	52(%esp),%edx
	orl	%ebx,%eax
	addl	%edx,%esi
	xorl	%edi,%eax
	movl	128(%esp),%edx
	roll	$10,%ebx
	leal	2840853838(%esi,%eax,1),%esi
	movl	%ecx,64(%esp)
	roll	$6,%esi
	addl	%ecx,%esi
	movl	(%edx),%ecx
	movl	%esi,68(%esp)
	movl	%edi,72(%esp)
	movl	4(%edx),%esi
	movl	%ebx,76(%esp)
	movl	8(%edx),%edi
	movl	%ebp,80(%esp)
	movl	12(%edx),%ebx
	movl	16(%edx),%ebp

	movl	$-1,%edx
	subl	%ebx,%edx
	movl	20(%esp),%eax
	orl	%edi,%edx
	addl	%eax,%ecx
	xorl	%esi,%edx
	movl	$-1,%eax
	roll	$10,%edi
	leal	1352829926(%ecx,%edx,1),%ecx
	subl	%edi,%eax
	roll	$8,%ecx
	addl	%ebp,%ecx

	movl	56(%esp),%edx
	orl	%esi,%eax
	addl	%edx,%ebp
	xorl	%ecx,%eax
	movl	$-1,%edx
	roll	$10,%esi
	leal	1352829926(%ebp,%eax,1),%ebp
	subl	%esi,%edx
	roll	$9,%ebp
	addl	%ebx,%ebp

	movl	28(%esp),%eax
	orl	%ecx,%edx
	addl	%eax,%ebx
	xorl	%ebp,%edx
	movl	$-1,%eax
	roll	$10,%ecx
	leal	1352829926(%ebx,%edx,1),%ebx
	subl	%ecx,%eax
	roll	$9,%ebx
	addl	%edi,%ebx

	movl	(%esp),%edx
	orl	%ebp,%eax
	addl	%edx,%edi
	xorl	%ebx,%eax
	movl	$-1,%edx
	roll	$10,%ebp
	leal	1352829926(%edi,%eax,1),%edi
	subl	%ebp,%edx
	roll	$11,%edi
	addl	%esi,%edi

	movl	36(%esp),%eax
	orl	%ebx,%edx
	addl	%eax,%esi
	xorl	%edi,%edx
	movl	$-1,%eax
	roll	$10,%ebx
	leal	1352829926(%esi,%edx,1),%esi
	subl	%ebx,%eax
	roll	$13,%esi
	addl	%ecx,%esi

	movl	8(%esp),%edx
	orl	%edi,%eax
	addl	%edx,%ecx
	xorl	%esi,%eax
	movl	$-1,%edx
	roll	$10,%edi
	leal	1352829926(%ecx,%eax,1),%ecx
	subl	%edi,%edx
	roll	$15,%ecx
	addl	%ebp,%ecx

	movl	44(%esp),%eax
	orl	%esi,%edx
	addl	%eax,%ebp
	xorl	%ecx,%edx
	movl	$-1,%eax
	roll	$10,%esi
	leal	1352829926(%ebp,%edx,1),%ebp
	subl	%esi,%eax
	roll	$15,%ebp
	addl	%ebx,%ebp

	movl	16(%esp),%edx
	orl	%ecx,%eax
	addl	%edx,%ebx
	xorl	%ebp,%eax
	movl	$-1,%edx
	roll	$10,%ecx
	leal	1352829926(%ebx,%eax,1),%ebx
	subl	%ecx,%edx
	roll	$5,%ebx
	addl	%edi,%ebx

	movl	52(%esp),%eax
	orl	%ebp,%edx
	addl	%eax,%edi
	xorl	%ebx,%edx
	movl	$-1,%eax
	roll	$10,%ebp
	leal	1352829926(%edi,%edx,1),%edi
	subl	%ebp,%eax
	roll	$7,%edi
	addl	%esi,%edi

	movl	24(%esp),%edx
	orl	%ebx,%eax
	addl	%edx,%esi
	xorl	%edi,%eax
	movl	$-1,%edx
	roll	$10,%ebx
	leal	1352829926(%esi,%eax,1),%esi
	subl	%ebx,%edx
	roll	$7,%esi
	addl	%ecx,%esi

	movl	60(%esp),%eax
	orl	%edi,%edx
	addl	%eax,%ecx
	xorl	%esi,%edx
	movl	$-1,%eax
	roll	$10,%edi
	leal	1352829926(%ecx,%edx,1),%ecx
	subl	%edi,%eax
	roll	$8,%ecx
	addl	%ebp,%ecx

	movl	32(%esp),%edx
	orl	%esi,%eax
	addl	%edx,%ebp
	xorl	%ecx,%eax
	movl	$-1,%edx
	roll	$10,%esi
	leal	1352829926(%ebp,%eax,1),%ebp
	subl	%esi,%edx
	roll	$11,%ebp
	addl	%ebx,%ebp

	movl	4(%esp),%eax
	orl	%ecx,%edx
	addl	%eax,%ebx
	xorl	%ebp,%edx
	movl	$-1,%eax
	roll	$10,%ecx
	leal	1352829926(%ebx,%edx,1),%ebx
	subl	%ecx,%eax
	roll	$14,%ebx
	addl	%edi,%ebx

	movl	40(%esp),%edx
	orl	%ebp,%eax
	addl	%edx,%edi
	xorl	%ebx,%eax
	movl	$-1,%edx
	roll	$10,%ebp
	leal	1352829926(%edi,%eax,1),%edi
	subl	%ebp,%edx
	roll	$14,%edi
	addl	%esi,%edi

	movl	12(%esp),%eax
	orl	%ebx,%edx
	addl	%eax,%esi
	xorl	%edi,%edx
	movl	$-1,%eax
	roll	$10,%ebx
	leal	1352829926(%esi,%edx,1),%esi
	subl	%ebx,%eax
	roll	$12,%esi
	addl	%ecx,%esi

	movl	48(%esp),%edx
	orl	%edi,%eax
	addl	%edx,%ecx
	xorl	%esi,%eax
	movl	$-1,%edx
	roll	$10,%edi
	leal	1352829926(%ecx,%eax,1),%ecx
	movl	%edi,%eax
	roll	$6,%ecx
	addl	%ebp,%ecx

	subl	%edi,%edx
	andl	%ecx,%eax
	andl	%esi,%edx
	orl	%eax,%edx
	movl	24(%esp),%eax
	roll	$10,%esi
	leal	1548603684(%ebp,%edx,1),%ebp
	movl	$-1,%edx
	addl	%eax,%ebp
	movl	%esi,%eax
	roll	$9,%ebp
	addl	%ebx,%ebp

	subl	%esi,%edx
	andl	%ebp,%eax
	andl	%ecx,%edx
	orl	%eax,%edx
	movl	44(%esp),%eax
	roll	$10,%ecx
	leal	1548603684(%ebx,%edx,1),%ebx
	movl	$-1,%edx
	addl	%eax,%ebx
	movl	%ecx,%eax
	roll	$13,%ebx
	addl	%edi,%ebx

	subl	%ecx,%edx
	andl	%ebx,%eax
	andl	%ebp,%edx
	orl	%eax,%edx
	movl	12(%esp),%eax
	roll	$10,%ebp
	leal	1548603684(%edi,%edx,1),%edi
	movl	$-1,%edx
	addl	%eax,%edi
	movl	%ebp,%eax
	roll	$15,%edi
	addl	%esi,%edi

	subl	%ebp,%edx
	andl	%edi,%eax
	andl	%ebx,%edx
	orl	%eax,%edx
	movl	28(%esp),%eax
	roll	$10,%ebx
	leal	1548603684(%esi,%edx,1),%esi
	movl	$-1,%edx
	addl	%eax,%esi
	movl	%ebx,%eax
	roll	$7,%esi
	addl	%ecx,%esi

	subl	%ebx,%edx
	andl	%esi,%eax
	andl	%edi,%edx
	orl	%eax,%edx
	movl	(%esp),%eax
	roll	$10,%edi
	leal	1548603684(%ecx,%edx,1),%ecx
	movl	$-1,%edx
	addl	%eax,%ecx
	movl	%edi,%eax
	roll	$12,%ecx
	addl	%ebp,%ecx

	subl	%edi,%edx
	andl	%ecx,%eax
	andl	%esi,%edx
	orl	%eax,%edx
	movl	52(%esp),%eax
	roll	$10,%esi
	leal	1548603684(%ebp,%edx,1),%ebp
	movl	$-1,%edx
	addl	%eax,%ebp
	movl	%esi,%eax
	roll	$8,%ebp
	addl	%ebx,%ebp

	subl	%esi,%edx
	andl	%ebp,%eax
	andl	%ecx,%edx
	orl	%eax,%edx
	movl	20(%esp),%eax
	roll	$10,%ecx
	leal	1548603684(%ebx,%edx,1),%ebx
	movl	$-1,%edx
	addl	%eax,%ebx
	movl	%ecx,%eax
	roll	$9,%ebx
	addl	%edi,%ebx

	subl	%ecx,%edx
	andl	%ebx,%eax
	andl	%ebp,%edx
	orl	%eax,%edx
	movl	40(%esp),%eax
	roll	$10,%ebp
	leal	1548603684(%edi,%edx,1),%edi
	movl	$-1,%edx
	addl	%eax,%edi
	movl	%ebp,%eax
	roll	$11,%edi
	addl	%esi,%edi

	subl	%ebp,%edx
	andl	%edi,%eax
	andl	%ebx,%edx
	orl	%eax,%edx
	movl	56(%esp),%eax
	roll	$10,%ebx
	leal	1548603684(%esi,%edx,1),%esi
	movl	$-1,%edx
	addl	%eax,%esi
	movl	%ebx,%eax
	roll	$7,%esi
	addl	%ecx,%esi

	subl	%ebx,%edx
	andl	%esi,%eax
	andl	%edi,%edx
	orl	%eax,%edx
	movl	60(%esp),%eax
	roll	$10,%edi
	leal	1548603684(%ecx,%edx,1),%ecx
	movl	$-1,%edx
	addl	%eax,%ecx
	movl	%edi,%eax
	roll	$7,%ecx
	addl	%ebp,%ecx

	subl	%edi,%edx
	andl	%ecx,%eax
	andl	%esi,%edx
	orl	%eax,%edx
	movl	32(%esp),%eax
	roll	$10,%esi
	leal	1548603684(%ebp,%edx,1),%ebp
	movl	$-1,%edx
	addl	%eax,%ebp
	movl	%esi,%eax
	roll	$12,%ebp
	addl	%ebx,%ebp

	subl	%esi,%edx
	andl	%ebp,%eax
	andl	%ecx,%edx
	orl	%eax,%edx
	movl	48(%esp),%eax
	roll	$10,%ecx
	leal	1548603684(%ebx,%edx,1),%ebx
	movl	$-1,%edx
	addl	%eax,%ebx
	movl	%ecx,%eax
	roll	$7,%ebx
	addl	%edi,%ebx

	subl	%ecx,%edx
	andl	%ebx,%eax
	andl	%ebp,%edx
	orl	%eax,%edx
	movl	16(%esp),%eax
	roll	$10,%ebp
	leal	1548603684(%edi,%edx,1),%edi
	movl	$-1,%edx
	addl	%eax,%edi
	movl	%ebp,%eax
	roll	$6,%edi
	addl	%esi,%edi

	subl	%ebp,%edx
	andl	%edi,%eax
	andl	%ebx,%edx
	orl	%eax,%edx
	movl	36(%esp),%eax
	roll	$10,%ebx
	leal	1548603684(%esi,%edx,1),%esi
	movl	$-1,%edx
	addl	%eax,%esi
	movl	%ebx,%eax
	roll	$15,%esi
	addl	%ecx,%esi

	subl	%ebx,%edx
	andl	%esi,%eax
	andl	%edi,%edx
	orl	%eax,%edx
	movl	4(%esp),%eax
	roll	$10,%edi
	leal	1548603684(%ecx,%edx,1),%ecx
	movl	$-1,%edx
	addl	%eax,%ecx
	movl	%edi,%eax
	roll	$13,%ecx
	addl	%ebp,%ecx

	subl	%edi,%edx
	andl	%ecx,%eax
	andl	%esi,%edx
	orl	%eax,%edx
	movl	8(%esp),%eax
	roll	$10,%esi
	leal	1548603684(%ebp,%edx,1),%ebp
	movl	$-1,%edx
	addl	%eax,%ebp
	subl	%ecx,%edx
	roll	$11,%ebp
	addl	%ebx,%ebp

	movl	60(%esp),%eax
	orl	%ebp,%edx
	addl	%eax,%ebx
	xorl	%esi,%edx
	movl	$-1,%eax
	roll	$10,%ecx
	leal	1836072691(%ebx,%edx,1),%ebx
	subl	%ebp,%eax
	roll	$9,%ebx
	addl	%edi,%ebx

	movl	20(%esp),%edx
	orl	%ebx,%eax
	addl	%edx,%edi
	xorl	%ecx,%eax
	movl	$-1,%edx
	roll	$10,%ebp
	leal	1836072691(%edi,%eax,1),%edi
	subl	%ebx,%edx
	roll	$7,%edi
	addl	%esi,%edi

	movl	4(%esp),%eax
	orl	%edi,%edx
	addl	%eax,%esi
	xorl	%ebp,%edx
	movl	$-1,%eax
	roll	$10,%ebx
	leal	1836072691(%esi,%edx,1),%esi
	subl	%edi,%eax
	roll	$15,%esi
	addl	%ecx,%esi

	movl	12(%esp),%edx
	orl	%esi,%eax
	addl	%edx,%ecx
	xorl	%ebx,%eax
	movl	$-1,%edx
	roll	$10,%edi
	leal	1836072691(%ecx,%eax,1),%ecx
	subl	%esi,%edx
	roll	$11,%ecx
	addl	%ebp,%ecx

	movl	28(%esp),%eax
	orl	%ecx,%edx
	addl	%eax,%ebp
	xorl	%edi,%edx
	movl	$-1,%eax
	roll	$10,%esi
	leal	1836072691(%ebp,%edx,1),%ebp
	subl	%ecx,%eax
	roll	$8,%ebp
	addl	%ebx,%ebp

	movl	56(%esp),%edx
	orl	%ebp,%eax
	addl	%edx,%ebx
	xorl	%esi,%eax
	movl	$-1,%edx
	roll	$10,%ecx
	leal	1836072691(%ebx,%eax,1),%ebx
	subl	%ebp,%edx
	roll	$6,%ebx
	addl	%edi,%ebx

	movl	24(%esp),%eax
	orl	%ebx,%edx
	addl	%eax,%edi
	xorl	%ecx,%edx
	movl	$-1,%eax
	roll	$10,%ebp
	leal	1836072691(%edi,%edx,1),%edi
	subl	%ebx,%eax
	roll	$6,%edi
	addl	%esi,%edi

	movl	36(%esp),%edx
	orl	%edi,%eax
	addl	%edx,%esi
	xorl	%ebp,%eax
	movl	$-1,%edx
	roll	$10,%ebx
	leal	1836072691(%esi,%eax,1),%esi
	subl	%edi,%edx
	roll	$14,%esi
	addl	%ecx,%esi

	movl	44(%esp),%eax
	orl	%esi,%edx
	addl	%eax,%ecx
	xorl	%ebx,%edx
	movl	$-1,%eax
	roll	$10,%edi
	leal	1836072691(%ecx,%edx,1),%ecx
	subl	%esi,%eax
	roll	$12,%ecx
	addl	%ebp,%ecx

	movl	32(%esp),%edx
	orl	%ecx,%eax
	addl	%edx,%ebp
	xorl	%edi,%eax
	movl	$-1,%edx
	roll	$10,%esi
	leal	1836072691(%ebp,%eax,1),%ebp
	subl	%ecx,%edx
	roll	$13,%ebp
	addl	%ebx,%ebp

	movl	48(%esp),%eax
	orl	%ebp,%edx
	addl	%eax,%ebx
	xorl	%esi,%edx
	movl	$-1,%eax
	roll	$10,%ecx
	leal	1836072691(%ebx,%edx,1),%ebx
	subl	%ebp,%eax
	roll	$5,%ebx
	addl	%edi,%ebx

	movl	8(%esp),%edx
	orl	%ebx,%eax
	addl	%edx,%edi
	xorl	%ecx,%eax
	movl	$-1,%edx
	roll	$10,%ebp
	leal	1836072691(%edi,%eax,1),%edi
	subl	%ebx,%edx
	roll	$14,%edi
	addl	%esi,%edi

	movl	40(%esp),%eax
	orl	%edi,%edx
	addl	%eax,%esi
	xorl	%ebp,%edx
	movl	$-1,%eax
	roll	$10,%ebx
	leal	1836072691(%esi,%edx,1),%esi
	subl	%edi,%eax
	roll	$13,%esi
	addl	%ecx,%esi

	movl	(%esp),%edx
	orl	%esi,%eax
	addl	%edx,%ecx
	xorl	%ebx,%eax
	movl	$-1,%edx
	roll	$10,%edi
	leal	1836072691(%ecx,%eax,1),%ecx
	subl	%esi,%edx
	roll	$13,%ecx
	addl	%ebp,%ecx

	movl	16(%esp),%eax
	orl	%ecx,%edx
	addl	%eax,%ebp
	xorl	%edi,%edx
	movl	$-1,%eax
	roll	$10,%esi
	leal	1836072691(%ebp,%edx,1),%ebp
	subl	%ecx,%eax
	roll	$7,%ebp
	addl	%ebx,%ebp

	movl	52(%esp),%edx
	orl	%ebp,%eax
	addl	%edx,%ebx
	xorl	%esi,%eax
	movl	32(%esp),%edx
	roll	$10,%ecx
	leal	1836072691(%ebx,%eax,1),%ebx
	movl	$-1,%eax
	roll	$5,%ebx
	addl	%edi,%ebx

	addl	%edx,%edi
	movl	%ebp,%edx
	subl	%ebx,%eax
	andl	%ebx,%edx
	andl	%ecx,%eax
	orl	%eax,%edx
	movl	24(%esp),%eax
	roll	$10,%ebp
	leal	2053994217(%edi,%edx,1),%edi
	movl	$-1,%edx
	roll	$15,%edi
	addl	%esi,%edi

	addl	%eax,%esi
	movl	%ebx,%eax
	subl	%edi,%edx
	andl	%edi,%eax
	andl	%ebp,%edx
	orl	%edx,%eax
	movl	16(%esp),%edx
	roll	$10,%ebx
	leal	2053994217(%esi,%eax,1),%esi
	movl	$-1,%eax
	roll	$5,%esi
	addl	%ecx,%esi

	addl	%edx,%ecx
	movl	%edi,%edx
	subl	%esi,%eax
	andl	%esi,%edx
	andl	%ebx,%eax
	orl	%eax,%edx
	movl	4(%esp),%eax
	roll	$10,%edi
	leal	2053994217(%ecx,%edx,1),%ecx
	movl	$-1,%edx
	roll	$8,%ecx
	addl	%ebp,%ecx

	addl	%eax,%ebp
	movl	%esi,%eax
	subl	%ecx,%edx
	andl	%ecx,%eax
	andl	%edi,%edx
	orl	%edx,%eax
	movl	12(%esp),%edx
	roll	$10,%esi
	leal	2053994217(%ebp,%eax,1),%ebp
	movl	$-1,%eax
	roll	$11,%ebp
	addl	%ebx,%ebp

	addl	%edx,%ebx
	movl	%ecx,%edx
	subl	%ebp,%eax
	andl	%ebp,%edx
	andl	%esi,%eax
	orl	%eax,%edx
	movl	44(%esp),%eax
	roll	$10,%ecx
	leal	2053994217(%ebx,%edx,1),%ebx
	movl	$-1,%edx
	roll	$14,%ebx
	addl	%edi,%ebx

	addl	%eax,%edi
	movl	%ebp,%eax
	subl	%ebx,%edx
	andl	%ebx,%eax
	andl	%ecx,%edx
	orl	%edx,%eax
	movl	60(%esp),%edx
	roll	$10,%ebp
	leal	2053994217(%edi,%eax,1),%edi
	movl	$-1,%eax
	roll	$14,%edi
	addl	%esi,%edi

	addl	%edx,%esi
	movl	%ebx,%edx
	subl	%edi,%eax
	andl	%edi,%edx
	andl	%ebp,%eax
	orl	%eax,%edx
	movl	(%esp),%eax
	roll	$10,%ebx
	leal	2053994217(%esi,%edx,1),%esi
	movl	$-1,%edx
	roll	$6,%esi
	addl	%ecx,%esi

	addl	%eax,%ecx
	movl	%edi,%eax
	subl	%esi,%edx
	andl	%esi,%eax
	andl	%ebx,%edx
	orl	%edx,%eax
	movl	20(%esp),%edx
	roll	$10,%edi
	leal	2053994217(%ecx,%eax,1),%ecx
	movl	$-1,%eax
	roll	$14,%ecx
	addl	%ebp,%ecx

	addl	%edx,%ebp
	movl	%esi,%edx
	subl	%ecx,%eax
	andl	%ecx,%edx
	andl	%edi,%eax
	orl	%eax,%edx
	movl	48(%esp),%eax
	roll	$10,%esi
	leal	2053994217(%ebp,%edx,1),%ebp
	movl	$-1,%edx
	roll	$6,%ebp
	addl	%ebx,%ebp

	addl	%eax,%ebx
	movl	%ecx,%eax
	subl	%ebp,%edx
	andl	%ebp,%eax
	andl	%esi,%edx
	orl	%edx,%eax
	movl	8(%esp),%edx
	roll	$10,%ecx
	leal	2053994217(%ebx,%eax,1),%ebx
	movl	$-1,%eax
	roll	$9,%ebx
	addl	%edi,%ebx

	addl	%edx,%edi
	movl	%ebp,%edx
	subl	%ebx,%eax
	andl	%ebx,%edx
	andl	%ecx,%eax
	orl	%eax,%edx
	movl	52(%esp),%eax
	roll	$10,%ebp
	leal	2053994217(%edi,%edx,1),%edi
	movl	$-1,%edx
	roll	$12,%edi
	addl	%esi,%edi

	addl	%eax,%esi
	movl	%ebx,%eax
	subl	%edi,%edx
	andl	%edi,%eax
	andl	%ebp,%edx
	orl	%edx,%eax
	movl	36(%esp),%edx
	roll	$10,%ebx
	leal	2053994217(%esi,%eax,1),%esi
	movl	$-1,%eax
	roll	$9,%esi
	addl	%ecx,%esi

	addl	%edx,%ecx
	movl	%edi,%edx
	subl	%esi,%eax
	andl	%esi,%edx
	andl	%ebx,%eax
	orl	%eax,%edx
	movl	28(%esp),%eax
	roll	$10,%edi
	leal	2053994217(%ecx,%edx,1),%ecx
	movl	$-1,%edx
	roll	$12,%ecx
	addl	%ebp,%ecx

	addl	%eax,%ebp
	movl	%esi,%eax
	subl	%ecx,%edx
	andl	%ecx,%eax
	andl	%edi,%edx
	orl	%edx,%eax
	movl	40(%esp),%edx
	roll	$10,%esi
	leal	2053994217(%ebp,%eax,1),%ebp
	movl	$-1,%eax
	roll	$5,%ebp
	addl	%ebx,%ebp

	addl	%edx,%ebx
	movl	%ecx,%edx
	subl	%ebp,%eax
	andl	%ebp,%edx
	andl	%esi,%eax
	orl	%eax,%edx
	movl	56(%esp),%eax
	roll	$10,%ecx
	leal	2053994217(%ebx,%edx,1),%ebx
	movl	$-1,%edx
	roll	$15,%ebx
	addl	%edi,%ebx

	addl	%eax,%edi
	movl	%ebp,%eax
	subl	%ebx,%edx
	andl	%ebx,%eax
	andl	%ecx,%edx
	orl	%eax,%edx
	movl	%ebx,%eax
	roll	$10,%ebp
	leal	2053994217(%edi,%edx,1),%edi
	xorl	%ebp,%eax
	roll	$8,%edi
	addl	%esi,%edi

	movl	48(%esp),%edx
	xorl	%edi,%eax
	addl	%edx,%esi
	roll	$10,%ebx
	addl	%eax,%esi
	movl	%edi,%eax
	roll	$8,%esi
	addl	%ecx,%esi

	xorl	%ebx,%eax
	movl	60(%esp),%edx
	xorl	%esi,%eax
	addl	%eax,%ecx
	movl	%esi,%eax
	roll	$10,%edi
	addl	%edx,%ecx
	xorl	%edi,%eax
	roll	$5,%ecx
	addl	%ebp,%ecx

	movl	40(%esp),%edx
	xorl	%ecx,%eax
	addl	%edx,%ebp
	roll	$10,%esi
	addl	%eax,%ebp
	movl	%ecx,%eax
	roll	$12,%ebp
	addl	%ebx,%ebp

	xorl	%esi,%eax
	movl	16(%esp),%edx
	xorl	%ebp,%eax
	addl	%eax,%ebx
	movl	%ebp,%eax
	roll	$10,%ecx
	addl	%edx,%ebx
	xorl	%ecx,%eax
	roll	$9,%ebx
	addl	%edi,%ebx

	movl	4(%esp),%edx
	xorl	%ebx,%eax
	addl	%edx,%edi
	roll	$10,%ebp
	addl	%eax,%edi
	movl	%ebx,%eax
	roll	$12,%edi
	addl	%esi,%edi

	xorl	%ebp,%eax
	movl	20(%esp),%edx
	xorl	%edi,%eax
	addl	%eax,%esi
	movl	%edi,%eax
	roll	$10,%ebx
	addl	%edx,%esi
	xorl	%ebx,%eax
	roll	$5,%esi
	addl	%ecx,%esi

	movl	32(%esp),%edx
	xorl	%esi,%eax
	addl	%edx,%ecx
	roll	$10,%edi
	addl	%eax,%ecx
	movl	%esi,%eax
	roll	$14,%ecx
	addl	%ebp,%ecx

	xorl	%edi,%eax
	movl	28(%esp),%edx
	xorl	%ecx,%eax
	addl	%eax,%ebp
	movl	%ecx,%eax
	roll	$10,%esi
	addl	%edx,%ebp
	xorl	%esi,%eax
	roll	$6,%ebp
	addl	%ebx,%ebp

	movl	24(%esp),%edx
	xorl	%ebp,%eax
	addl	%edx,%ebx
	roll	$10,%ecx
	addl	%eax,%ebx
	movl	%ebp,%eax
	roll	$8,%ebx
	addl	%edi,%ebx

	xorl	%ecx,%eax
	movl	8(%esp),%edx
	xorl	%ebx,%eax
	addl	%eax,%edi
	movl	%ebx,%eax
	roll	$10,%ebp
	addl	%edx,%edi
	xorl	%ebp,%eax
	roll	$13,%edi
	addl	%esi,%edi

	movl	52(%esp),%edx
	xorl	%edi,%eax
	addl	%edx,%esi
	roll	$10,%ebx
	addl	%eax,%esi
	movl	%edi,%eax
	roll	$6,%esi
	addl	%ecx,%esi

	xorl	%ebx,%eax
	movl	56(%esp),%edx
	xorl	%esi,%eax
	addl	%eax,%ecx
	movl	%esi,%eax
	roll	$10,%edi
	addl	%edx,%ecx
	xorl	%edi,%eax
	roll	$5,%ecx
	addl	%ebp,%ecx

	movl	(%esp),%edx
	xorl	%ecx,%eax
	addl	%edx,%ebp
	roll	$10,%esi
	addl	%eax,%ebp
	movl	%ecx,%eax
	roll	$15,%ebp
	addl	%ebx,%ebp

	xorl	%esi,%eax
	movl	12(%esp),%edx
	xorl	%ebp,%eax
	addl	%eax,%ebx
	movl	%ebp,%eax
	roll	$10,%ecx
	addl	%edx,%ebx
	xorl	%ecx,%eax
	roll	$13,%ebx
	addl	%edi,%ebx

	movl	36(%esp),%edx
	xorl	%ebx,%eax
	addl	%edx,%edi
	roll	$10,%ebp
	addl	%eax,%edi
	movl	%ebx,%eax
	roll	$11,%edi
	addl	%esi,%edi

	xorl	%ebp,%eax
	movl	44(%esp),%edx
	xorl	%edi,%eax
	addl	%eax,%esi
	roll	$10,%ebx
	addl	%edx,%esi
	movl	128(%esp),%edx
	roll	$11,%esi
	addl	%ecx,%esi
	movl	4(%edx),%eax
	addl	%eax,%ebx
	movl	72(%esp),%eax
	addl	%eax,%ebx
	movl	8(%edx),%eax
	addl	%eax,%ebp
	movl	76(%esp),%eax
	addl	%eax,%ebp
	movl	12(%edx),%eax
	addl	%eax,%ecx
	movl	80(%esp),%eax
	addl	%eax,%ecx
	movl	16(%edx),%eax
	addl	%eax,%esi
	movl	64(%esp),%eax
	addl	%eax,%esi
	movl	(%edx),%eax
	addl	%eax,%edi
	movl	68(%esp),%eax
	addl	%eax,%edi
	movl	136(%esp),%eax
	movl	%ebx,(%edx)
	movl	%ebp,4(%edx)
	movl	%ecx,8(%edx)
	subl	$1,%eax
	movl	%esi,12(%edx)
	movl	%edi,16(%edx)
	jle	.L001get_out
	movl	%eax,136(%esp)
	movl	%ecx,%edi
	movl	132(%esp),%eax
	movl	%ebx,%ecx
	addl	$64,%eax
	movl	%ebp,%esi
	movl	%eax,132(%esp)
	jmp	.L000start
.L001get_out:
	addl	$108,%esp
	popl	%ebx
	popl	%ebp
	popl	%edi
	popl	%esi
	ret
.size	ripemd160_block_asm_data_order,.-.L_ripemd160_block_asm_data_order_begin

	.section ".note.gnu.property", "a"
	.p2align 2
	.long 1f - 0f
	.long 4f - 1f
	.long 5
0:
	.asciz "GNU"
1:
	.p2align 2
	.long 0xc0000002
	.long 3f - 2f
2:
	.long 3
3:
	.p2align 2
4:
                                                                                                                                                                                                                                                                                                       node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/sha/                                     0000775 0000000 0000000 00000000000 14746647661 0024316 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/sha/sha1-586.S                           0000664 0000000 0000000 00000213210 14746647661 0025615 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        .text
.globl	sha1_block_data_order
.type	sha1_block_data_order,@function
.align	16
sha1_block_data_order:
.L_sha1_block_data_order_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	call	.L000pic_point
.L000pic_point:
	popl	%ebp
	leal	OPENSSL_ia32cap_P-.L000pic_point(%ebp),%esi
	leal	.LK_XX_XX-.L000pic_point(%ebp),%ebp
	movl	(%esi),%eax
	movl	4(%esi),%edx
	testl	$512,%edx
	jz	.L001x86
	movl	8(%esi),%ecx
	testl	$16777216,%eax
	jz	.L001x86
	testl	$536870912,%ecx
	jnz	.Lshaext_shortcut
	andl	$268435456,%edx
	andl	$1073741824,%eax
	orl	%edx,%eax
	cmpl	$1342177280,%eax
	je	.Lavx_shortcut
	jmp	.Lssse3_shortcut
.align	16
.L001x86:
	movl	20(%esp),%ebp
	movl	24(%esp),%esi
	movl	28(%esp),%eax
	subl	$76,%esp
	shll	$6,%eax
	addl	%esi,%eax
	movl	%eax,104(%esp)
	movl	16(%ebp),%edi
	jmp	.L002loop
.align	16
.L002loop:
	movl	(%esi),%eax
	movl	4(%esi),%ebx
	movl	8(%esi),%ecx
	movl	12(%esi),%edx
	bswap	%eax
	bswap	%ebx
	bswap	%ecx
	bswap	%edx
	movl	%eax,(%esp)
	movl	%ebx,4(%esp)
	movl	%ecx,8(%esp)
	movl	%edx,12(%esp)
	movl	16(%esi),%eax
	movl	20(%esi),%ebx
	movl	24(%esi),%ecx
	movl	28(%esi),%edx
	bswap	%eax
	bswap	%ebx
	bswap	%ecx
	bswap	%edx
	movl	%eax,16(%esp)
	movl	%ebx,20(%esp)
	movl	%ecx,24(%esp)
	movl	%edx,28(%esp)
	movl	32(%esi),%eax
	movl	36(%esi),%ebx
	movl	40(%esi),%ecx
	movl	44(%esi),%edx
	bswap	%eax
	bswap	%ebx
	bswap	%ecx
	bswap	%edx
	movl	%eax,32(%esp)
	movl	%ebx,36(%esp)
	movl	%ecx,40(%esp)
	movl	%edx,44(%esp)
	movl	48(%esi),%eax
	movl	52(%esi),%ebx
	movl	56(%esi),%ecx
	movl	60(%esi),%edx
	bswap	%eax
	bswap	%ebx
	bswap	%ecx
	bswap	%edx
	movl	%eax,48(%esp)
	movl	%ebx,52(%esp)
	movl	%ecx,56(%esp)
	movl	%edx,60(%esp)
	movl	%esi,100(%esp)
	movl	(%ebp),%eax
	movl	4(%ebp),%ebx
	movl	8(%ebp),%ecx
	movl	12(%ebp),%edx

	movl	%ecx,%esi
	movl	%eax,%ebp
	roll	$5,%ebp
	xorl	%edx,%esi
	addl	%edi,%ebp
	movl	(%esp),%edi
	andl	%ebx,%esi
	rorl	$2,%ebx
	xorl	%edx,%esi
	leal	1518500249(%ebp,%edi,1),%ebp
	addl	%esi,%ebp

	movl	%ebx,%edi
	movl	%ebp,%esi
	roll	$5,%ebp
	xorl	%ecx,%edi
	addl	%edx,%ebp
	movl	4(%esp),%edx
	andl	%eax,%edi
	rorl	$2,%eax
	xorl	%ecx,%edi
	leal	1518500249(%ebp,%edx,1),%ebp
	addl	%edi,%ebp

	movl	%eax,%edx
	movl	%ebp,%edi
	roll	$5,%ebp
	xorl	%ebx,%edx
	addl	%ecx,%ebp
	movl	8(%esp),%ecx
	andl	%esi,%edx
	rorl	$2,%esi
	xorl	%ebx,%edx
	leal	1518500249(%ebp,%ecx,1),%ebp
	addl	%edx,%ebp

	movl	%esi,%ecx
	movl	%ebp,%edx
	roll	$5,%ebp
	xorl	%eax,%ecx
	addl	%ebx,%ebp
	movl	12(%esp),%ebx
	andl	%edi,%ecx
	rorl	$2,%edi
	xorl	%eax,%ecx
	leal	1518500249(%ebp,%ebx,1),%ebp
	addl	%ecx,%ebp

	movl	%edi,%ebx
	movl	%ebp,%ecx
	roll	$5,%ebp
	xorl	%esi,%ebx
	addl	%eax,%ebp
	movl	16(%esp),%eax
	andl	%edx,%ebx
	rorl	$2,%edx
	xorl	%esi,%ebx
	leal	1518500249(%ebp,%eax,1),%ebp
	addl	%ebx,%ebp

	movl	%edx,%eax
	movl	%ebp,%ebx
	roll	$5,%ebp
	xorl	%edi,%eax
	addl	%esi,%ebp
	movl	20(%esp),%esi
	andl	%ecx,%eax
	rorl	$2,%ecx
	xorl	%edi,%eax
	leal	1518500249(%ebp,%esi,1),%ebp
	addl	%eax,%ebp

	movl	%ecx,%esi
	movl	%ebp,%eax
	roll	$5,%ebp
	xorl	%edx,%esi
	addl	%edi,%ebp
	movl	24(%esp),%edi
	andl	%ebx,%esi
	rorl	$2,%ebx
	xorl	%edx,%esi
	leal	1518500249(%ebp,%edi,1),%ebp
	addl	%esi,%ebp

	movl	%ebx,%edi
	movl	%ebp,%esi
	roll	$5,%ebp
	xorl	%ecx,%edi
	addl	%edx,%ebp
	movl	28(%esp),%edx
	andl	%eax,%edi
	rorl	$2,%eax
	xorl	%ecx,%edi
	leal	1518500249(%ebp,%edx,1),%ebp
	addl	%edi,%ebp

	movl	%eax,%edx
	movl	%ebp,%edi
	roll	$5,%ebp
	xorl	%ebx,%edx
	addl	%ecx,%ebp
	movl	32(%esp),%ecx
	andl	%esi,%edx
	rorl	$2,%esi
	xorl	%ebx,%edx
	leal	1518500249(%ebp,%ecx,1),%ebp
	addl	%edx,%ebp

	movl	%esi,%ecx
	movl	%ebp,%edx
	roll	$5,%ebp
	xorl	%eax,%ecx
	addl	%ebx,%ebp
	movl	36(%esp),%ebx
	andl	%edi,%ecx
	rorl	$2,%edi
	xorl	%eax,%ecx
	leal	1518500249(%ebp,%ebx,1),%ebp
	addl	%ecx,%ebp

	movl	%edi,%ebx
	movl	%ebp,%ecx
	roll	$5,%ebp
	xorl	%esi,%ebx
	addl	%eax,%ebp
	movl	40(%esp),%eax
	andl	%edx,%ebx
	rorl	$2,%edx
	xorl	%esi,%ebx
	leal	1518500249(%ebp,%eax,1),%ebp
	addl	%ebx,%ebp

	movl	%edx,%eax
	movl	%ebp,%ebx
	roll	$5,%ebp
	xorl	%edi,%eax
	addl	%esi,%ebp
	movl	44(%esp),%esi
	andl	%ecx,%eax
	rorl	$2,%ecx
	xorl	%edi,%eax
	leal	1518500249(%ebp,%esi,1),%ebp
	addl	%eax,%ebp

	movl	%ecx,%esi
	movl	%ebp,%eax
	roll	$5,%ebp
	xorl	%edx,%esi
	addl	%edi,%ebp
	movl	48(%esp),%edi
	andl	%ebx,%esi
	rorl	$2,%ebx
	xorl	%edx,%esi
	leal	1518500249(%ebp,%edi,1),%ebp
	addl	%esi,%ebp

	movl	%ebx,%edi
	movl	%ebp,%esi
	roll	$5,%ebp
	xorl	%ecx,%edi
	addl	%edx,%ebp
	movl	52(%esp),%edx
	andl	%eax,%edi
	rorl	$2,%eax
	xorl	%ecx,%edi
	leal	1518500249(%ebp,%edx,1),%ebp
	addl	%edi,%ebp

	movl	%eax,%edx
	movl	%ebp,%edi
	roll	$5,%ebp
	xorl	%ebx,%edx
	addl	%ecx,%ebp
	movl	56(%esp),%ecx
	andl	%esi,%edx
	rorl	$2,%esi
	xorl	%ebx,%edx
	leal	1518500249(%ebp,%ecx,1),%ebp
	addl	%edx,%ebp

	movl	%esi,%ecx
	movl	%ebp,%edx
	roll	$5,%ebp
	xorl	%eax,%ecx
	addl	%ebx,%ebp
	movl	60(%esp),%ebx
	andl	%edi,%ecx
	rorl	$2,%edi
	xorl	%eax,%ecx
	leal	1518500249(%ebp,%ebx,1),%ebp
	movl	(%esp),%ebx
	addl	%ebp,%ecx

	movl	%edi,%ebp
	xorl	8(%esp),%ebx
	xorl	%esi,%ebp
	xorl	32(%esp),%ebx
	andl	%edx,%ebp
	xorl	52(%esp),%ebx
	roll	$1,%ebx
	xorl	%esi,%ebp
	addl	%ebp,%eax
	movl	%ecx,%ebp
	rorl	$2,%edx
	movl	%ebx,(%esp)
	roll	$5,%ebp
	leal	1518500249(%ebx,%eax,1),%ebx
	movl	4(%esp),%eax
	addl	%ebp,%ebx

	movl	%edx,%ebp
	xorl	12(%esp),%eax
	xorl	%edi,%ebp
	xorl	36(%esp),%eax
	andl	%ecx,%ebp
	xorl	56(%esp),%eax
	roll	$1,%eax
	xorl	%edi,%ebp
	addl	%ebp,%esi
	movl	%ebx,%ebp
	rorl	$2,%ecx
	movl	%eax,4(%esp)
	roll	$5,%ebp
	leal	1518500249(%eax,%esi,1),%eax
	movl	8(%esp),%esi
	addl	%ebp,%eax

	movl	%ecx,%ebp
	xorl	16(%esp),%esi
	xorl	%edx,%ebp
	xorl	40(%esp),%esi
	andl	%ebx,%ebp
	xorl	60(%esp),%esi
	roll	$1,%esi
	xorl	%edx,%ebp
	addl	%ebp,%edi
	movl	%eax,%ebp
	rorl	$2,%ebx
	movl	%esi,8(%esp)
	roll	$5,%ebp
	leal	1518500249(%esi,%edi,1),%esi
	movl	12(%esp),%edi
	addl	%ebp,%esi

	movl	%ebx,%ebp
	xorl	20(%esp),%edi
	xorl	%ecx,%ebp
	xorl	44(%esp),%edi
	andl	%eax,%ebp
	xorl	(%esp),%edi
	roll	$1,%edi
	xorl	%ecx,%ebp
	addl	%ebp,%edx
	movl	%esi,%ebp
	rorl	$2,%eax
	movl	%edi,12(%esp)
	roll	$5,%ebp
	leal	1518500249(%edi,%edx,1),%edi
	movl	16(%esp),%edx
	addl	%ebp,%edi

	movl	%esi,%ebp
	xorl	24(%esp),%edx
	xorl	%eax,%ebp
	xorl	48(%esp),%edx
	xorl	%ebx,%ebp
	xorl	4(%esp),%edx
	roll	$1,%edx
	addl	%ebp,%ecx
	rorl	$2,%esi
	movl	%edi,%ebp
	roll	$5,%ebp
	movl	%edx,16(%esp)
	leal	1859775393(%edx,%ecx,1),%edx
	movl	20(%esp),%ecx
	addl	%ebp,%edx

	movl	%edi,%ebp
	xorl	28(%esp),%ecx
	xorl	%esi,%ebp
	xorl	52(%esp),%ecx
	xorl	%eax,%ebp
	xorl	8(%esp),%ecx
	roll	$1,%ecx
	addl	%ebp,%ebx
	rorl	$2,%edi
	movl	%edx,%ebp
	roll	$5,%ebp
	movl	%ecx,20(%esp)
	leal	1859775393(%ecx,%ebx,1),%ecx
	movl	24(%esp),%ebx
	addl	%ebp,%ecx

	movl	%edx,%ebp
	xorl	32(%esp),%ebx
	xorl	%edi,%ebp
	xorl	56(%esp),%ebx
	xorl	%esi,%ebp
	xorl	12(%esp),%ebx
	roll	$1,%ebx
	addl	%ebp,%eax
	rorl	$2,%edx
	movl	%ecx,%ebp
	roll	$5,%ebp
	movl	%ebx,24(%esp)
	leal	1859775393(%ebx,%eax,1),%ebx
	movl	28(%esp),%eax
	addl	%ebp,%ebx

	movl	%ecx,%ebp
	xorl	36(%esp),%eax
	xorl	%edx,%ebp
	xorl	60(%esp),%eax
	xorl	%edi,%ebp
	xorl	16(%esp),%eax
	roll	$1,%eax
	addl	%ebp,%esi
	rorl	$2,%ecx
	movl	%ebx,%ebp
	roll	$5,%ebp
	movl	%eax,28(%esp)
	leal	1859775393(%eax,%esi,1),%eax
	movl	32(%esp),%esi
	addl	%ebp,%eax

	movl	%ebx,%ebp
	xorl	40(%esp),%esi
	xorl	%ecx,%ebp
	xorl	(%esp),%esi
	xorl	%edx,%ebp
	xorl	20(%esp),%esi
	roll	$1,%esi
	addl	%ebp,%edi
	rorl	$2,%ebx
	movl	%eax,%ebp
	roll	$5,%ebp
	movl	%esi,32(%esp)
	leal	1859775393(%esi,%edi,1),%esi
	movl	36(%esp),%edi
	addl	%ebp,%esi

	movl	%eax,%ebp
	xorl	44(%esp),%edi
	xorl	%ebx,%ebp
	xorl	4(%esp),%edi
	xorl	%ecx,%ebp
	xorl	24(%esp),%edi
	roll	$1,%edi
	addl	%ebp,%edx
	rorl	$2,%eax
	movl	%esi,%ebp
	roll	$5,%ebp
	movl	%edi,36(%esp)
	leal	1859775393(%edi,%edx,1),%edi
	movl	40(%esp),%edx
	addl	%ebp,%edi

	movl	%esi,%ebp
	xorl	48(%esp),%edx
	xorl	%eax,%ebp
	xorl	8(%esp),%edx
	xorl	%ebx,%ebp
	xorl	28(%esp),%edx
	roll	$1,%edx
	addl	%ebp,%ecx
	rorl	$2,%esi
	movl	%edi,%ebp
	roll	$5,%ebp
	movl	%edx,40(%esp)
	leal	1859775393(%edx,%ecx,1),%edx
	movl	44(%esp),%ecx
	addl	%ebp,%edx

	movl	%edi,%ebp
	xorl	52(%esp),%ecx
	xorl	%esi,%ebp
	xorl	12(%esp),%ecx
	xorl	%eax,%ebp
	xorl	32(%esp),%ecx
	roll	$1,%ecx
	addl	%ebp,%ebx
	rorl	$2,%edi
	movl	%edx,%ebp
	roll	$5,%ebp
	movl	%ecx,44(%esp)
	leal	1859775393(%ecx,%ebx,1),%ecx
	movl	48(%esp),%ebx
	addl	%ebp,%ecx

	movl	%edx,%ebp
	xorl	56(%esp),%ebx
	xorl	%edi,%ebp
	xorl	16(%esp),%ebx
	xorl	%esi,%ebp
	xorl	36(%esp),%ebx
	roll	$1,%ebx
	addl	%ebp,%eax
	rorl	$2,%edx
	movl	%ecx,%ebp
	roll	$5,%ebp
	movl	%ebx,48(%esp)
	leal	1859775393(%ebx,%eax,1),%ebx
	movl	52(%esp),%eax
	addl	%ebp,%ebx

	movl	%ecx,%ebp
	xorl	60(%esp),%eax
	xorl	%edx,%ebp
	xorl	20(%esp),%eax
	xorl	%edi,%ebp
	xorl	40(%esp),%eax
	roll	$1,%eax
	addl	%ebp,%esi
	rorl	$2,%ecx
	movl	%ebx,%ebp
	roll	$5,%ebp
	movl	%eax,52(%esp)
	leal	1859775393(%eax,%esi,1),%eax
	movl	56(%esp),%esi
	addl	%ebp,%eax

	movl	%ebx,%ebp
	xorl	(%esp),%esi
	xorl	%ecx,%ebp
	xorl	24(%esp),%esi
	xorl	%edx,%ebp
	xorl	44(%esp),%esi
	roll	$1,%esi
	addl	%ebp,%edi
	rorl	$2,%ebx
	movl	%eax,%ebp
	roll	$5,%ebp
	movl	%esi,56(%esp)
	leal	1859775393(%esi,%edi,1),%esi
	movl	60(%esp),%edi
	addl	%ebp,%esi

	movl	%eax,%ebp
	xorl	4(%esp),%edi
	xorl	%ebx,%ebp
	xorl	28(%esp),%edi
	xorl	%ecx,%ebp
	xorl	48(%esp),%edi
	roll	$1,%edi
	addl	%ebp,%edx
	rorl	$2,%eax
	movl	%esi,%ebp
	roll	$5,%ebp
	movl	%edi,60(%esp)
	leal	1859775393(%edi,%edx,1),%edi
	movl	(%esp),%edx
	addl	%ebp,%edi

	movl	%esi,%ebp
	xorl	8(%esp),%edx
	xorl	%eax,%ebp
	xorl	32(%esp),%edx
	xorl	%ebx,%ebp
	xorl	52(%esp),%edx
	roll	$1,%edx
	addl	%ebp,%ecx
	rorl	$2,%esi
	movl	%edi,%ebp
	roll	$5,%ebp
	movl	%edx,(%esp)
	leal	1859775393(%edx,%ecx,1),%edx
	movl	4(%esp),%ecx
	addl	%ebp,%edx

	movl	%edi,%ebp
	xorl	12(%esp),%ecx
	xorl	%esi,%ebp
	xorl	36(%esp),%ecx
	xorl	%eax,%ebp
	xorl	56(%esp),%ecx
	roll	$1,%ecx
	addl	%ebp,%ebx
	rorl	$2,%edi
	movl	%edx,%ebp
	roll	$5,%ebp
	movl	%ecx,4(%esp)
	leal	1859775393(%ecx,%ebx,1),%ecx
	movl	8(%esp),%ebx
	addl	%ebp,%ecx

	movl	%edx,%ebp
	xorl	16(%esp),%ebx
	xorl	%edi,%ebp
	xorl	40(%esp),%ebx
	xorl	%esi,%ebp
	xorl	60(%esp),%ebx
	roll	$1,%ebx
	addl	%ebp,%eax
	rorl	$2,%edx
	movl	%ecx,%ebp
	roll	$5,%ebp
	movl	%ebx,8(%esp)
	leal	1859775393(%ebx,%eax,1),%ebx
	movl	12(%esp),%eax
	addl	%ebp,%ebx

	movl	%ecx,%ebp
	xorl	20(%esp),%eax
	xorl	%edx,%ebp
	xorl	44(%esp),%eax
	xorl	%edi,%ebp
	xorl	(%esp),%eax
	roll	$1,%eax
	addl	%ebp,%esi
	rorl	$2,%ecx
	movl	%ebx,%ebp
	roll	$5,%ebp
	movl	%eax,12(%esp)
	leal	1859775393(%eax,%esi,1),%eax
	movl	16(%esp),%esi
	addl	%ebp,%eax

	movl	%ebx,%ebp
	xorl	24(%esp),%esi
	xorl	%ecx,%ebp
	xorl	48(%esp),%esi
	xorl	%edx,%ebp
	xorl	4(%esp),%esi
	roll	$1,%esi
	addl	%ebp,%edi
	rorl	$2,%ebx
	movl	%eax,%ebp
	roll	$5,%ebp
	movl	%esi,16(%esp)
	leal	1859775393(%esi,%edi,1),%esi
	movl	20(%esp),%edi
	addl	%ebp,%esi

	movl	%eax,%ebp
	xorl	28(%esp),%edi
	xorl	%ebx,%ebp
	xorl	52(%esp),%edi
	xorl	%ecx,%ebp
	xorl	8(%esp),%edi
	roll	$1,%edi
	addl	%ebp,%edx
	rorl	$2,%eax
	movl	%esi,%ebp
	roll	$5,%ebp
	movl	%edi,20(%esp)
	leal	1859775393(%edi,%edx,1),%edi
	movl	24(%esp),%edx
	addl	%ebp,%edi

	movl	%esi,%ebp
	xorl	32(%esp),%edx
	xorl	%eax,%ebp
	xorl	56(%esp),%edx
	xorl	%ebx,%ebp
	xorl	12(%esp),%edx
	roll	$1,%edx
	addl	%ebp,%ecx
	rorl	$2,%esi
	movl	%edi,%ebp
	roll	$5,%ebp
	movl	%edx,24(%esp)
	leal	1859775393(%edx,%ecx,1),%edx
	movl	28(%esp),%ecx
	addl	%ebp,%edx

	movl	%edi,%ebp
	xorl	36(%esp),%ecx
	xorl	%esi,%ebp
	xorl	60(%esp),%ecx
	xorl	%eax,%ebp
	xorl	16(%esp),%ecx
	roll	$1,%ecx
	addl	%ebp,%ebx
	rorl	$2,%edi
	movl	%edx,%ebp
	roll	$5,%ebp
	movl	%ecx,28(%esp)
	leal	1859775393(%ecx,%ebx,1),%ecx
	movl	32(%esp),%ebx
	addl	%ebp,%ecx

	movl	%edi,%ebp
	xorl	40(%esp),%ebx
	xorl	%esi,%ebp
	xorl	(%esp),%ebx
	andl	%edx,%ebp
	xorl	20(%esp),%ebx
	roll	$1,%ebx
	addl	%eax,%ebp
	rorl	$2,%edx
	movl	%ecx,%eax
	roll	$5,%eax
	movl	%ebx,32(%esp)
	leal	2400959708(%ebx,%ebp,1),%ebx
	movl	%edi,%ebp
	addl	%eax,%ebx
	andl	%esi,%ebp
	movl	36(%esp),%eax
	addl	%ebp,%ebx

	movl	%edx,%ebp
	xorl	44(%esp),%eax
	xorl	%edi,%ebp
	xorl	4(%esp),%eax
	andl	%ecx,%ebp
	xorl	24(%esp),%eax
	roll	$1,%eax
	addl	%esi,%ebp
	rorl	$2,%ecx
	movl	%ebx,%esi
	roll	$5,%esi
	movl	%eax,36(%esp)
	leal	2400959708(%eax,%ebp,1),%eax
	movl	%edx,%ebp
	addl	%esi,%eax
	andl	%edi,%ebp
	movl	40(%esp),%esi
	addl	%ebp,%eax

	movl	%ecx,%ebp
	xorl	48(%esp),%esi
	xorl	%edx,%ebp
	xorl	8(%esp),%esi
	andl	%ebx,%ebp
	xorl	28(%esp),%esi
	roll	$1,%esi
	addl	%edi,%ebp
	rorl	$2,%ebx
	movl	%eax,%edi
	roll	$5,%edi
	movl	%esi,40(%esp)
	leal	2400959708(%esi,%ebp,1),%esi
	movl	%ecx,%ebp
	addl	%edi,%esi
	andl	%edx,%ebp
	movl	44(%esp),%edi
	addl	%ebp,%esi

	movl	%ebx,%ebp
	xorl	52(%esp),%edi
	xorl	%ecx,%ebp
	xorl	12(%esp),%edi
	andl	%eax,%ebp
	xorl	32(%esp),%edi
	roll	$1,%edi
	addl	%edx,%ebp
	rorl	$2,%eax
	movl	%esi,%edx
	roll	$5,%edx
	movl	%edi,44(%esp)
	leal	2400959708(%edi,%ebp,1),%edi
	movl	%ebx,%ebp
	addl	%edx,%edi
	andl	%ecx,%ebp
	movl	48(%esp),%edx
	addl	%ebp,%edi

	movl	%eax,%ebp
	xorl	56(%esp),%edx
	xorl	%ebx,%ebp
	xorl	16(%esp),%edx
	andl	%esi,%ebp
	xorl	36(%esp),%edx
	roll	$1,%edx
	addl	%ecx,%ebp
	rorl	$2,%esi
	movl	%edi,%ecx
	roll	$5,%ecx
	movl	%edx,48(%esp)
	leal	2400959708(%edx,%ebp,1),%edx
	movl	%eax,%ebp
	addl	%ecx,%edx
	andl	%ebx,%ebp
	movl	52(%esp),%ecx
	addl	%ebp,%edx

	movl	%esi,%ebp
	xorl	60(%esp),%ecx
	xorl	%eax,%ebp
	xorl	20(%esp),%ecx
	andl	%edi,%ebp
	xorl	40(%esp),%ecx
	roll	$1,%ecx
	addl	%ebx,%ebp
	rorl	$2,%edi
	movl	%edx,%ebx
	roll	$5,%ebx
	movl	%ecx,52(%esp)
	leal	2400959708(%ecx,%ebp,1),%ecx
	movl	%esi,%ebp
	addl	%ebx,%ecx
	andl	%eax,%ebp
	movl	56(%esp),%ebx
	addl	%ebp,%ecx

	movl	%edi,%ebp
	xorl	(%esp),%ebx
	xorl	%esi,%ebp
	xorl	24(%esp),%ebx
	andl	%edx,%ebp
	xorl	44(%esp),%ebx
	roll	$1,%ebx
	addl	%eax,%ebp
	rorl	$2,%edx
	movl	%ecx,%eax
	roll	$5,%eax
	movl	%ebx,56(%esp)
	leal	2400959708(%ebx,%ebp,1),%ebx
	movl	%edi,%ebp
	addl	%eax,%ebx
	andl	%esi,%ebp
	movl	60(%esp),%eax
	addl	%ebp,%ebx

	movl	%edx,%ebp
	xorl	4(%esp),%eax
	xorl	%edi,%ebp
	xorl	28(%esp),%eax
	andl	%ecx,%ebp
	xorl	48(%esp),%eax
	roll	$1,%eax
	addl	%esi,%ebp
	rorl	$2,%ecx
	movl	%ebx,%esi
	roll	$5,%esi
	movl	%eax,60(%esp)
	leal	2400959708(%eax,%ebp,1),%eax
	movl	%edx,%ebp
	addl	%esi,%eax
	andl	%edi,%ebp
	movl	(%esp),%esi
	addl	%ebp,%eax

	movl	%ecx,%ebp
	xorl	8(%esp),%esi
	xorl	%edx,%ebp
	xorl	32(%esp),%esi
	andl	%ebx,%ebp
	xorl	52(%esp),%esi
	roll	$1,%esi
	addl	%edi,%ebp
	rorl	$2,%ebx
	movl	%eax,%edi
	roll	$5,%edi
	movl	%esi,(%esp)
	leal	2400959708(%esi,%ebp,1),%esi
	movl	%ecx,%ebp
	addl	%edi,%esi
	andl	%edx,%ebp
	movl	4(%esp),%edi
	addl	%ebp,%esi

	movl	%ebx,%ebp
	xorl	12(%esp),%edi
	xorl	%ecx,%ebp
	xorl	36(%esp),%edi
	andl	%eax,%ebp
	xorl	56(%esp),%edi
	roll	$1,%edi
	addl	%edx,%ebp
	rorl	$2,%eax
	movl	%esi,%edx
	roll	$5,%edx
	movl	%edi,4(%esp)
	leal	2400959708(%edi,%ebp,1),%edi
	movl	%ebx,%ebp
	addl	%edx,%edi
	andl	%ecx,%ebp
	movl	8(%esp),%edx
	addl	%ebp,%edi

	movl	%eax,%ebp
	xorl	16(%esp),%edx
	xorl	%ebx,%ebp
	xorl	40(%esp),%edx
	andl	%esi,%ebp
	xorl	60(%esp),%edx
	roll	$1,%edx
	addl	%ecx,%ebp
	rorl	$2,%esi
	movl	%edi,%ecx
	roll	$5,%ecx
	movl	%edx,8(%esp)
	leal	2400959708(%edx,%ebp,1),%edx
	movl	%eax,%ebp
	addl	%ecx,%edx
	andl	%ebx,%ebp
	movl	12(%esp),%ecx
	addl	%ebp,%edx

	movl	%esi,%ebp
	xorl	20(%esp),%ecx
	xorl	%eax,%ebp
	xorl	44(%esp),%ecx
	andl	%edi,%ebp
	xorl	(%esp),%ecx
	roll	$1,%ecx
	addl	%ebx,%ebp
	rorl	$2,%edi
	movl	%edx,%ebx
	roll	$5,%ebx
	movl	%ecx,12(%esp)
	leal	2400959708(%ecx,%ebp,1),%ecx
	movl	%esi,%ebp
	addl	%ebx,%ecx
	andl	%eax,%ebp
	movl	16(%esp),%ebx
	addl	%ebp,%ecx

	movl	%edi,%ebp
	xorl	24(%esp),%ebx
	xorl	%esi,%ebp
	xorl	48(%esp),%ebx
	andl	%edx,%ebp
	xorl	4(%esp),%ebx
	roll	$1,%ebx
	addl	%eax,%ebp
	rorl	$2,%edx
	movl	%ecx,%eax
	roll	$5,%eax
	movl	%ebx,16(%esp)
	leal	2400959708(%ebx,%ebp,1),%ebx
	movl	%edi,%ebp
	addl	%eax,%ebx
	andl	%esi,%ebp
	movl	20(%esp),%eax
	addl	%ebp,%ebx

	movl	%edx,%ebp
	xorl	28(%esp),%eax
	xorl	%edi,%ebp
	xorl	52(%esp),%eax
	andl	%ecx,%ebp
	xorl	8(%esp),%eax
	roll	$1,%eax
	addl	%esi,%ebp
	rorl	$2,%ecx
	movl	%ebx,%esi
	roll	$5,%esi
	movl	%eax,20(%esp)
	leal	2400959708(%eax,%ebp,1),%eax
	movl	%edx,%ebp
	addl	%esi,%eax
	andl	%edi,%ebp
	movl	24(%esp),%esi
	addl	%ebp,%eax

	movl	%ecx,%ebp
	xorl	32(%esp),%esi
	xorl	%edx,%ebp
	xorl	56(%esp),%esi
	andl	%ebx,%ebp
	xorl	12(%esp),%esi
	roll	$1,%esi
	addl	%edi,%ebp
	rorl	$2,%ebx
	movl	%eax,%edi
	roll	$5,%edi
	movl	%esi,24(%esp)
	leal	2400959708(%esi,%ebp,1),%esi
	movl	%ecx,%ebp
	addl	%edi,%esi
	andl	%edx,%ebp
	movl	28(%esp),%edi
	addl	%ebp,%esi

	movl	%ebx,%ebp
	xorl	36(%esp),%edi
	xorl	%ecx,%ebp
	xorl	60(%esp),%edi
	andl	%eax,%ebp
	xorl	16(%esp),%edi
	roll	$1,%edi
	addl	%edx,%ebp
	rorl	$2,%eax
	movl	%esi,%edx
	roll	$5,%edx
	movl	%edi,28(%esp)
	leal	2400959708(%edi,%ebp,1),%edi
	movl	%ebx,%ebp
	addl	%edx,%edi
	andl	%ecx,%ebp
	movl	32(%esp),%edx
	addl	%ebp,%edi

	movl	%eax,%ebp
	xorl	40(%esp),%edx
	xorl	%ebx,%ebp
	xorl	(%esp),%edx
	andl	%esi,%ebp
	xorl	20(%esp),%edx
	roll	$1,%edx
	addl	%ecx,%ebp
	rorl	$2,%esi
	movl	%edi,%ecx
	roll	$5,%ecx
	movl	%edx,32(%esp)
	leal	2400959708(%edx,%ebp,1),%edx
	movl	%eax,%ebp
	addl	%ecx,%edx
	andl	%ebx,%ebp
	movl	36(%esp),%ecx
	addl	%ebp,%edx

	movl	%esi,%ebp
	xorl	44(%esp),%ecx
	xorl	%eax,%ebp
	xorl	4(%esp),%ecx
	andl	%edi,%ebp
	xorl	24(%esp),%ecx
	roll	$1,%ecx
	addl	%ebx,%ebp
	rorl	$2,%edi
	movl	%edx,%ebx
	roll	$5,%ebx
	movl	%ecx,36(%esp)
	leal	2400959708(%ecx,%ebp,1),%ecx
	movl	%esi,%ebp
	addl	%ebx,%ecx
	andl	%eax,%ebp
	movl	40(%esp),%ebx
	addl	%ebp,%ecx

	movl	%edi,%ebp
	xorl	48(%esp),%ebx
	xorl	%esi,%ebp
	xorl	8(%esp),%ebx
	andl	%edx,%ebp
	xorl	28(%esp),%ebx
	roll	$1,%ebx
	addl	%eax,%ebp
	rorl	$2,%edx
	movl	%ecx,%eax
	roll	$5,%eax
	movl	%ebx,40(%esp)
	leal	2400959708(%ebx,%ebp,1),%ebx
	movl	%edi,%ebp
	addl	%eax,%ebx
	andl	%esi,%ebp
	movl	44(%esp),%eax
	addl	%ebp,%ebx

	movl	%edx,%ebp
	xorl	52(%esp),%eax
	xorl	%edi,%ebp
	xorl	12(%esp),%eax
	andl	%ecx,%ebp
	xorl	32(%esp),%eax
	roll	$1,%eax
	addl	%esi,%ebp
	rorl	$2,%ecx
	movl	%ebx,%esi
	roll	$5,%esi
	movl	%eax,44(%esp)
	leal	2400959708(%eax,%ebp,1),%eax
	movl	%edx,%ebp
	addl	%esi,%eax
	andl	%edi,%ebp
	movl	48(%esp),%esi
	addl	%ebp,%eax

	movl	%ebx,%ebp
	xorl	56(%esp),%esi
	xorl	%ecx,%ebp
	xorl	16(%esp),%esi
	xorl	%edx,%ebp
	xorl	36(%esp),%esi
	roll	$1,%esi
	addl	%ebp,%edi
	rorl	$2,%ebx
	movl	%eax,%ebp
	roll	$5,%ebp
	movl	%esi,48(%esp)
	leal	3395469782(%esi,%edi,1),%esi
	movl	52(%esp),%edi
	addl	%ebp,%esi

	movl	%eax,%ebp
	xorl	60(%esp),%edi
	xorl	%ebx,%ebp
	xorl	20(%esp),%edi
	xorl	%ecx,%ebp
	xorl	40(%esp),%edi
	roll	$1,%edi
	addl	%ebp,%edx
	rorl	$2,%eax
	movl	%esi,%ebp
	roll	$5,%ebp
	movl	%edi,52(%esp)
	leal	3395469782(%edi,%edx,1),%edi
	movl	56(%esp),%edx
	addl	%ebp,%edi

	movl	%esi,%ebp
	xorl	(%esp),%edx
	xorl	%eax,%ebp
	xorl	24(%esp),%edx
	xorl	%ebx,%ebp
	xorl	44(%esp),%edx
	roll	$1,%edx
	addl	%ebp,%ecx
	rorl	$2,%esi
	movl	%edi,%ebp
	roll	$5,%ebp
	movl	%edx,56(%esp)
	leal	3395469782(%edx,%ecx,1),%edx
	movl	60(%esp),%ecx
	addl	%ebp,%edx

	movl	%edi,%ebp
	xorl	4(%esp),%ecx
	xorl	%esi,%ebp
	xorl	28(%esp),%ecx
	xorl	%eax,%ebp
	xorl	48(%esp),%ecx
	roll	$1,%ecx
	addl	%ebp,%ebx
	rorl	$2,%edi
	movl	%edx,%ebp
	roll	$5,%ebp
	movl	%ecx,60(%esp)
	leal	3395469782(%ecx,%ebx,1),%ecx
	movl	(%esp),%ebx
	addl	%ebp,%ecx

	movl	%edx,%ebp
	xorl	8(%esp),%ebx
	xorl	%edi,%ebp
	xorl	32(%esp),%ebx
	xorl	%esi,%ebp
	xorl	52(%esp),%ebx
	roll	$1,%ebx
	addl	%ebp,%eax
	rorl	$2,%edx
	movl	%ecx,%ebp
	roll	$5,%ebp
	movl	%ebx,(%esp)
	leal	3395469782(%ebx,%eax,1),%ebx
	movl	4(%esp),%eax
	addl	%ebp,%ebx

	movl	%ecx,%ebp
	xorl	12(%esp),%eax
	xorl	%edx,%ebp
	xorl	36(%esp),%eax
	xorl	%edi,%ebp
	xorl	56(%esp),%eax
	roll	$1,%eax
	addl	%ebp,%esi
	rorl	$2,%ecx
	movl	%ebx,%ebp
	roll	$5,%ebp
	movl	%eax,4(%esp)
	leal	3395469782(%eax,%esi,1),%eax
	movl	8(%esp),%esi
	addl	%ebp,%eax

	movl	%ebx,%ebp
	xorl	16(%esp),%esi
	xorl	%ecx,%ebp
	xorl	40(%esp),%esi
	xorl	%edx,%ebp
	xorl	60(%esp),%esi
	roll	$1,%esi
	addl	%ebp,%edi
	rorl	$2,%ebx
	movl	%eax,%ebp
	roll	$5,%ebp
	movl	%esi,8(%esp)
	leal	3395469782(%esi,%edi,1),%esi
	movl	12(%esp),%edi
	addl	%ebp,%esi

	movl	%eax,%ebp
	xorl	20(%esp),%edi
	xorl	%ebx,%ebp
	xorl	44(%esp),%edi
	xorl	%ecx,%ebp
	xorl	(%esp),%edi
	roll	$1,%edi
	addl	%ebp,%edx
	rorl	$2,%eax
	movl	%esi,%ebp
	roll	$5,%ebp
	movl	%edi,12(%esp)
	leal	3395469782(%edi,%edx,1),%edi
	movl	16(%esp),%edx
	addl	%ebp,%edi

	movl	%esi,%ebp
	xorl	24(%esp),%edx
	xorl	%eax,%ebp
	xorl	48(%esp),%edx
	xorl	%ebx,%ebp
	xorl	4(%esp),%edx
	roll	$1,%edx
	addl	%ebp,%ecx
	rorl	$2,%esi
	movl	%edi,%ebp
	roll	$5,%ebp
	movl	%edx,16(%esp)
	leal	3395469782(%edx,%ecx,1),%edx
	movl	20(%esp),%ecx
	addl	%ebp,%edx

	movl	%edi,%ebp
	xorl	28(%esp),%ecx
	xorl	%esi,%ebp
	xorl	52(%esp),%ecx
	xorl	%eax,%ebp
	xorl	8(%esp),%ecx
	roll	$1,%ecx
	addl	%ebp,%ebx
	rorl	$2,%edi
	movl	%edx,%ebp
	roll	$5,%ebp
	movl	%ecx,20(%esp)
	leal	3395469782(%ecx,%ebx,1),%ecx
	movl	24(%esp),%ebx
	addl	%ebp,%ecx

	movl	%edx,%ebp
	xorl	32(%esp),%ebx
	xorl	%edi,%ebp
	xorl	56(%esp),%ebx
	xorl	%esi,%ebp
	xorl	12(%esp),%ebx
	roll	$1,%ebx
	addl	%ebp,%eax
	rorl	$2,%edx
	movl	%ecx,%ebp
	roll	$5,%ebp
	movl	%ebx,24(%esp)
	leal	3395469782(%ebx,%eax,1),%ebx
	movl	28(%esp),%eax
	addl	%ebp,%ebx

	movl	%ecx,%ebp
	xorl	36(%esp),%eax
	xorl	%edx,%ebp
	xorl	60(%esp),%eax
	xorl	%edi,%ebp
	xorl	16(%esp),%eax
	roll	$1,%eax
	addl	%ebp,%esi
	rorl	$2,%ecx
	movl	%ebx,%ebp
	roll	$5,%ebp
	movl	%eax,28(%esp)
	leal	3395469782(%eax,%esi,1),%eax
	movl	32(%esp),%esi
	addl	%ebp,%eax

	movl	%ebx,%ebp
	xorl	40(%esp),%esi
	xorl	%ecx,%ebp
	xorl	(%esp),%esi
	xorl	%edx,%ebp
	xorl	20(%esp),%esi
	roll	$1,%esi
	addl	%ebp,%edi
	rorl	$2,%ebx
	movl	%eax,%ebp
	roll	$5,%ebp
	movl	%esi,32(%esp)
	leal	3395469782(%esi,%edi,1),%esi
	movl	36(%esp),%edi
	addl	%ebp,%esi

	movl	%eax,%ebp
	xorl	44(%esp),%edi
	xorl	%ebx,%ebp
	xorl	4(%esp),%edi
	xorl	%ecx,%ebp
	xorl	24(%esp),%edi
	roll	$1,%edi
	addl	%ebp,%edx
	rorl	$2,%eax
	movl	%esi,%ebp
	roll	$5,%ebp
	movl	%edi,36(%esp)
	leal	3395469782(%edi,%edx,1),%edi
	movl	40(%esp),%edx
	addl	%ebp,%edi

	movl	%esi,%ebp
	xorl	48(%esp),%edx
	xorl	%eax,%ebp
	xorl	8(%esp),%edx
	xorl	%ebx,%ebp
	xorl	28(%esp),%edx
	roll	$1,%edx
	addl	%ebp,%ecx
	rorl	$2,%esi
	movl	%edi,%ebp
	roll	$5,%ebp
	movl	%edx,40(%esp)
	leal	3395469782(%edx,%ecx,1),%edx
	movl	44(%esp),%ecx
	addl	%ebp,%edx

	movl	%edi,%ebp
	xorl	52(%esp),%ecx
	xorl	%esi,%ebp
	xorl	12(%esp),%ecx
	xorl	%eax,%ebp
	xorl	32(%esp),%ecx
	roll	$1,%ecx
	addl	%ebp,%ebx
	rorl	$2,%edi
	movl	%edx,%ebp
	roll	$5,%ebp
	movl	%ecx,44(%esp)
	leal	3395469782(%ecx,%ebx,1),%ecx
	movl	48(%esp),%ebx
	addl	%ebp,%ecx

	movl	%edx,%ebp
	xorl	56(%esp),%ebx
	xorl	%edi,%ebp
	xorl	16(%esp),%ebx
	xorl	%esi,%ebp
	xorl	36(%esp),%ebx
	roll	$1,%ebx
	addl	%ebp,%eax
	rorl	$2,%edx
	movl	%ecx,%ebp
	roll	$5,%ebp
	movl	%ebx,48(%esp)
	leal	3395469782(%ebx,%eax,1),%ebx
	movl	52(%esp),%eax
	addl	%ebp,%ebx

	movl	%ecx,%ebp
	xorl	60(%esp),%eax
	xorl	%edx,%ebp
	xorl	20(%esp),%eax
	xorl	%edi,%ebp
	xorl	40(%esp),%eax
	roll	$1,%eax
	addl	%ebp,%esi
	rorl	$2,%ecx
	movl	%ebx,%ebp
	roll	$5,%ebp
	leal	3395469782(%eax,%esi,1),%eax
	movl	56(%esp),%esi
	addl	%ebp,%eax

	movl	%ebx,%ebp
	xorl	(%esp),%esi
	xorl	%ecx,%ebp
	xorl	24(%esp),%esi
	xorl	%edx,%ebp
	xorl	44(%esp),%esi
	roll	$1,%esi
	addl	%ebp,%edi
	rorl	$2,%ebx
	movl	%eax,%ebp
	roll	$5,%ebp
	leal	3395469782(%esi,%edi,1),%esi
	movl	60(%esp),%edi
	addl	%ebp,%esi

	movl	%eax,%ebp
	xorl	4(%esp),%edi
	xorl	%ebx,%ebp
	xorl	28(%esp),%edi
	xorl	%ecx,%ebp
	xorl	48(%esp),%edi
	roll	$1,%edi
	addl	%ebp,%edx
	rorl	$2,%eax
	movl	%esi,%ebp
	roll	$5,%ebp
	leal	3395469782(%edi,%edx,1),%edi
	addl	%ebp,%edi
	movl	96(%esp),%ebp
	movl	100(%esp),%edx
	addl	(%ebp),%edi
	addl	4(%ebp),%esi
	addl	8(%ebp),%eax
	addl	12(%ebp),%ebx
	addl	16(%ebp),%ecx
	movl	%edi,(%ebp)
	addl	$64,%edx
	movl	%esi,4(%ebp)
	cmpl	104(%esp),%edx
	movl	%eax,8(%ebp)
	movl	%ecx,%edi
	movl	%ebx,12(%ebp)
	movl	%edx,%esi
	movl	%ecx,16(%ebp)
	jb	.L002loop
	addl	$76,%esp
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	sha1_block_data_order,.-.L_sha1_block_data_order_begin
.type	_sha1_block_data_order_shaext,@function
.align	16
_sha1_block_data_order_shaext:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	call	.L003pic_point
.L003pic_point:
	popl	%ebp
	leal	.LK_XX_XX-.L003pic_point(%ebp),%ebp
.Lshaext_shortcut:
	movl	20(%esp),%edi
	movl	%esp,%ebx
	movl	24(%esp),%esi
	movl	28(%esp),%ecx
	subl	$32,%esp
	movdqu	(%edi),%xmm0
	movd	16(%edi),%xmm1
	andl	$-32,%esp
	movdqa	80(%ebp),%xmm3
	movdqu	(%esi),%xmm4
	pshufd	$27,%xmm0,%xmm0
	movdqu	16(%esi),%xmm5
	pshufd	$27,%xmm1,%xmm1
	movdqu	32(%esi),%xmm6
.byte	102,15,56,0,227
	movdqu	48(%esi),%xmm7
.byte	102,15,56,0,235
.byte	102,15,56,0,243
.byte	102,15,56,0,251
	jmp	.L004loop_shaext
.align	16
.L004loop_shaext:
	decl	%ecx
	leal	64(%esi),%eax
	movdqa	%xmm1,(%esp)
	paddd	%xmm4,%xmm1
	cmovnel	%eax,%esi
	movdqa	%xmm0,16(%esp)
.byte	15,56,201,229
	movdqa	%xmm0,%xmm2
.byte	15,58,204,193,0
.byte	15,56,200,213
	pxor	%xmm6,%xmm4
.byte	15,56,201,238
.byte	15,56,202,231
	movdqa	%xmm0,%xmm1
.byte	15,58,204,194,0
.byte	15,56,200,206
	pxor	%xmm7,%xmm5
.byte	15,56,202,236
.byte	15,56,201,247
	movdqa	%xmm0,%xmm2
.byte	15,58,204,193,0
.byte	15,56,200,215
	pxor	%xmm4,%xmm6
.byte	15,56,201,252
.byte	15,56,202,245
	movdqa	%xmm0,%xmm1
.byte	15,58,204,194,0
.byte	15,56,200,204
	pxor	%xmm5,%xmm7
.byte	15,56,202,254
.byte	15,56,201,229
	movdqa	%xmm0,%xmm2
.byte	15,58,204,193,0
.byte	15,56,200,213
	pxor	%xmm6,%xmm4
.byte	15,56,201,238
.byte	15,56,202,231
	movdqa	%xmm0,%xmm1
.byte	15,58,204,194,1
.byte	15,56,200,206
	pxor	%xmm7,%xmm5
.byte	15,56,202,236
.byte	15,56,201,247
	movdqa	%xmm0,%xmm2
.byte	15,58,204,193,1
.byte	15,56,200,215
	pxor	%xmm4,%xmm6
.byte	15,56,201,252
.byte	15,56,202,245
	movdqa	%xmm0,%xmm1
.byte	15,58,204,194,1
.byte	15,56,200,204
	pxor	%xmm5,%xmm7
.byte	15,56,202,254
.byte	15,56,201,229
	movdqa	%xmm0,%xmm2
.byte	15,58,204,193,1
.byte	15,56,200,213
	pxor	%xmm6,%xmm4
.byte	15,56,201,238
.byte	15,56,202,231
	movdqa	%xmm0,%xmm1
.byte	15,58,204,194,1
.byte	15,56,200,206
	pxor	%xmm7,%xmm5
.byte	15,56,202,236
.byte	15,56,201,247
	movdqa	%xmm0,%xmm2
.byte	15,58,204,193,2
.byte	15,56,200,215
	pxor	%xmm4,%xmm6
.byte	15,56,201,252
.byte	15,56,202,245
	movdqa	%xmm0,%xmm1
.byte	15,58,204,194,2
.byte	15,56,200,204
	pxor	%xmm5,%xmm7
.byte	15,56,202,254
.byte	15,56,201,229
	movdqa	%xmm0,%xmm2
.byte	15,58,204,193,2
.byte	15,56,200,213
	pxor	%xmm6,%xmm4
.byte	15,56,201,238
.byte	15,56,202,231
	movdqa	%xmm0,%xmm1
.byte	15,58,204,194,2
.byte	15,56,200,206
	pxor	%xmm7,%xmm5
.byte	15,56,202,236
.byte	15,56,201,247
	movdqa	%xmm0,%xmm2
.byte	15,58,204,193,2
.byte	15,56,200,215
	pxor	%xmm4,%xmm6
.byte	15,56,201,252
.byte	15,56,202,245
	movdqa	%xmm0,%xmm1
.byte	15,58,204,194,3
.byte	15,56,200,204
	pxor	%xmm5,%xmm7
.byte	15,56,202,254
	movdqu	(%esi),%xmm4
	movdqa	%xmm0,%xmm2
.byte	15,58,204,193,3
.byte	15,56,200,213
	movdqu	16(%esi),%xmm5
.byte	102,15,56,0,227
	movdqa	%xmm0,%xmm1
.byte	15,58,204,194,3
.byte	15,56,200,206
	movdqu	32(%esi),%xmm6
.byte	102,15,56,0,235
	movdqa	%xmm0,%xmm2
.byte	15,58,204,193,3
.byte	15,56,200,215
	movdqu	48(%esi),%xmm7
.byte	102,15,56,0,243
	movdqa	%xmm0,%xmm1
.byte	15,58,204,194,3
	movdqa	(%esp),%xmm2
.byte	102,15,56,0,251
.byte	15,56,200,202
	paddd	16(%esp),%xmm0
	jnz	.L004loop_shaext
	pshufd	$27,%xmm0,%xmm0
	pshufd	$27,%xmm1,%xmm1
	movdqu	%xmm0,(%edi)
	movd	%xmm1,16(%edi)
	movl	%ebx,%esp
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	_sha1_block_data_order_shaext,.-_sha1_block_data_order_shaext
.type	_sha1_block_data_order_ssse3,@function
.align	16
_sha1_block_data_order_ssse3:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	call	.L005pic_point
.L005pic_point:
	popl	%ebp
	leal	.LK_XX_XX-.L005pic_point(%ebp),%ebp
.Lssse3_shortcut:
	movdqa	(%ebp),%xmm7
	movdqa	16(%ebp),%xmm0
	movdqa	32(%ebp),%xmm1
	movdqa	48(%ebp),%xmm2
	movdqa	64(%ebp),%xmm6
	movl	20(%esp),%edi
	movl	24(%esp),%ebp
	movl	28(%esp),%edx
	movl	%esp,%esi
	subl	$208,%esp
	andl	$-64,%esp
	movdqa	%xmm0,112(%esp)
	movdqa	%xmm1,128(%esp)
	movdqa	%xmm2,144(%esp)
	shll	$6,%edx
	movdqa	%xmm7,160(%esp)
	addl	%ebp,%edx
	movdqa	%xmm6,176(%esp)
	addl	$64,%ebp
	movl	%edi,192(%esp)
	movl	%ebp,196(%esp)
	movl	%edx,200(%esp)
	movl	%esi,204(%esp)
	movl	(%edi),%eax
	movl	4(%edi),%ebx
	movl	8(%edi),%ecx
	movl	12(%edi),%edx
	movl	16(%edi),%edi
	movl	%ebx,%esi
	movdqu	-64(%ebp),%xmm0
	movdqu	-48(%ebp),%xmm1
	movdqu	-32(%ebp),%xmm2
	movdqu	-16(%ebp),%xmm3
.byte	102,15,56,0,198
.byte	102,15,56,0,206
.byte	102,15,56,0,214
	movdqa	%xmm7,96(%esp)
.byte	102,15,56,0,222
	paddd	%xmm7,%xmm0
	paddd	%xmm7,%xmm1
	paddd	%xmm7,%xmm2
	movdqa	%xmm0,(%esp)
	psubd	%xmm7,%xmm0
	movdqa	%xmm1,16(%esp)
	psubd	%xmm7,%xmm1
	movdqa	%xmm2,32(%esp)
	movl	%ecx,%ebp
	psubd	%xmm7,%xmm2
	xorl	%edx,%ebp
	pshufd	$238,%xmm0,%xmm4
	andl	%ebp,%esi
	jmp	.L006loop
.align	16
.L006loop:
	rorl	$2,%ebx
	xorl	%edx,%esi
	movl	%eax,%ebp
	punpcklqdq	%xmm1,%xmm4
	movdqa	%xmm3,%xmm6
	addl	(%esp),%edi
	xorl	%ecx,%ebx
	paddd	%xmm3,%xmm7
	movdqa	%xmm0,64(%esp)
	roll	$5,%eax
	addl	%esi,%edi
	psrldq	$4,%xmm6
	andl	%ebx,%ebp
	xorl	%ecx,%ebx
	pxor	%xmm0,%xmm4
	addl	%eax,%edi
	rorl	$7,%eax
	pxor	%xmm2,%xmm6
	xorl	%ecx,%ebp
	movl	%edi,%esi
	addl	4(%esp),%edx
	pxor	%xmm6,%xmm4
	xorl	%ebx,%eax
	roll	$5,%edi
	movdqa	%xmm7,48(%esp)
	addl	%ebp,%edx
	andl	%eax,%esi
	movdqa	%xmm4,%xmm0
	xorl	%ebx,%eax
	addl	%edi,%edx
	rorl	$7,%edi
	movdqa	%xmm4,%xmm6
	xorl	%ebx,%esi
	pslldq	$12,%xmm0
	paddd	%xmm4,%xmm4
	movl	%edx,%ebp
	addl	8(%esp),%ecx
	psrld	$31,%xmm6
	xorl	%eax,%edi
	roll	$5,%edx
	movdqa	%xmm0,%xmm7
	addl	%esi,%ecx
	andl	%edi,%ebp
	xorl	%eax,%edi
	psrld	$30,%xmm0
	addl	%edx,%ecx
	rorl	$7,%edx
	por	%xmm6,%xmm4
	xorl	%eax,%ebp
	movl	%ecx,%esi
	addl	12(%esp),%ebx
	pslld	$2,%xmm7
	xorl	%edi,%edx
	roll	$5,%ecx
	pxor	%xmm0,%xmm4
	movdqa	96(%esp),%xmm0
	addl	%ebp,%ebx
	andl	%edx,%esi
	pxor	%xmm7,%xmm4
	pshufd	$238,%xmm1,%xmm5
	xorl	%edi,%edx
	addl	%ecx,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	movl	%ebx,%ebp
	punpcklqdq	%xmm2,%xmm5
	movdqa	%xmm4,%xmm7
	addl	16(%esp),%eax
	xorl	%edx,%ecx
	paddd	%xmm4,%xmm0
	movdqa	%xmm1,80(%esp)
	roll	$5,%ebx
	addl	%esi,%eax
	psrldq	$4,%xmm7
	andl	%ecx,%ebp
	xorl	%edx,%ecx
	pxor	%xmm1,%xmm5
	addl	%ebx,%eax
	rorl	$7,%ebx
	pxor	%xmm3,%xmm7
	xorl	%edx,%ebp
	movl	%eax,%esi
	addl	20(%esp),%edi
	pxor	%xmm7,%xmm5
	xorl	%ecx,%ebx
	roll	$5,%eax
	movdqa	%xmm0,(%esp)
	addl	%ebp,%edi
	andl	%ebx,%esi
	movdqa	%xmm5,%xmm1
	xorl	%ecx,%ebx
	addl	%eax,%edi
	rorl	$7,%eax
	movdqa	%xmm5,%xmm7
	xorl	%ecx,%esi
	pslldq	$12,%xmm1
	paddd	%xmm5,%xmm5
	movl	%edi,%ebp
	addl	24(%esp),%edx
	psrld	$31,%xmm7
	xorl	%ebx,%eax
	roll	$5,%edi
	movdqa	%xmm1,%xmm0
	addl	%esi,%edx
	andl	%eax,%ebp
	xorl	%ebx,%eax
	psrld	$30,%xmm1
	addl	%edi,%edx
	rorl	$7,%edi
	por	%xmm7,%xmm5
	xorl	%ebx,%ebp
	movl	%edx,%esi
	addl	28(%esp),%ecx
	pslld	$2,%xmm0
	xorl	%eax,%edi
	roll	$5,%edx
	pxor	%xmm1,%xmm5
	movdqa	112(%esp),%xmm1
	addl	%ebp,%ecx
	andl	%edi,%esi
	pxor	%xmm0,%xmm5
	pshufd	$238,%xmm2,%xmm6
	xorl	%eax,%edi
	addl	%edx,%ecx
	rorl	$7,%edx
	xorl	%eax,%esi
	movl	%ecx,%ebp
	punpcklqdq	%xmm3,%xmm6
	movdqa	%xmm5,%xmm0
	addl	32(%esp),%ebx
	xorl	%edi,%edx
	paddd	%xmm5,%xmm1
	movdqa	%xmm2,96(%esp)
	roll	$5,%ecx
	addl	%esi,%ebx
	psrldq	$4,%xmm0
	andl	%edx,%ebp
	xorl	%edi,%edx
	pxor	%xmm2,%xmm6
	addl	%ecx,%ebx
	rorl	$7,%ecx
	pxor	%xmm4,%xmm0
	xorl	%edi,%ebp
	movl	%ebx,%esi
	addl	36(%esp),%eax
	pxor	%xmm0,%xmm6
	xorl	%edx,%ecx
	roll	$5,%ebx
	movdqa	%xmm1,16(%esp)
	addl	%ebp,%eax
	andl	%ecx,%esi
	movdqa	%xmm6,%xmm2
	xorl	%edx,%ecx
	addl	%ebx,%eax
	rorl	$7,%ebx
	movdqa	%xmm6,%xmm0
	xorl	%edx,%esi
	pslldq	$12,%xmm2
	paddd	%xmm6,%xmm6
	movl	%eax,%ebp
	addl	40(%esp),%edi
	psrld	$31,%xmm0
	xorl	%ecx,%ebx
	roll	$5,%eax
	movdqa	%xmm2,%xmm1
	addl	%esi,%edi
	andl	%ebx,%ebp
	xorl	%ecx,%ebx
	psrld	$30,%xmm2
	addl	%eax,%edi
	rorl	$7,%eax
	por	%xmm0,%xmm6
	xorl	%ecx,%ebp
	movdqa	64(%esp),%xmm0
	movl	%edi,%esi
	addl	44(%esp),%edx
	pslld	$2,%xmm1
	xorl	%ebx,%eax
	roll	$5,%edi
	pxor	%xmm2,%xmm6
	movdqa	112(%esp),%xmm2
	addl	%ebp,%edx
	andl	%eax,%esi
	pxor	%xmm1,%xmm6
	pshufd	$238,%xmm3,%xmm7
	xorl	%ebx,%eax
	addl	%edi,%edx
	rorl	$7,%edi
	xorl	%ebx,%esi
	movl	%edx,%ebp
	punpcklqdq	%xmm4,%xmm7
	movdqa	%xmm6,%xmm1
	addl	48(%esp),%ecx
	xorl	%eax,%edi
	paddd	%xmm6,%xmm2
	movdqa	%xmm3,64(%esp)
	roll	$5,%edx
	addl	%esi,%ecx
	psrldq	$4,%xmm1
	andl	%edi,%ebp
	xorl	%eax,%edi
	pxor	%xmm3,%xmm7
	addl	%edx,%ecx
	rorl	$7,%edx
	pxor	%xmm5,%xmm1
	xorl	%eax,%ebp
	movl	%ecx,%esi
	addl	52(%esp),%ebx
	pxor	%xmm1,%xmm7
	xorl	%edi,%edx
	roll	$5,%ecx
	movdqa	%xmm2,32(%esp)
	addl	%ebp,%ebx
	andl	%edx,%esi
	movdqa	%xmm7,%xmm3
	xorl	%edi,%edx
	addl	%ecx,%ebx
	rorl	$7,%ecx
	movdqa	%xmm7,%xmm1
	xorl	%edi,%esi
	pslldq	$12,%xmm3
	paddd	%xmm7,%xmm7
	movl	%ebx,%ebp
	addl	56(%esp),%eax
	psrld	$31,%xmm1
	xorl	%edx,%ecx
	roll	$5,%ebx
	movdqa	%xmm3,%xmm2
	addl	%esi,%eax
	andl	%ecx,%ebp
	xorl	%edx,%ecx
	psrld	$30,%xmm3
	addl	%ebx,%eax
	rorl	$7,%ebx
	por	%xmm1,%xmm7
	xorl	%edx,%ebp
	movdqa	80(%esp),%xmm1
	movl	%eax,%esi
	addl	60(%esp),%edi
	pslld	$2,%xmm2
	xorl	%ecx,%ebx
	roll	$5,%eax
	pxor	%xmm3,%xmm7
	movdqa	112(%esp),%xmm3
	addl	%ebp,%edi
	andl	%ebx,%esi
	pxor	%xmm2,%xmm7
	pshufd	$238,%xmm6,%xmm2
	xorl	%ecx,%ebx
	addl	%eax,%edi
	rorl	$7,%eax
	pxor	%xmm4,%xmm0
	punpcklqdq	%xmm7,%xmm2
	xorl	%ecx,%esi
	movl	%edi,%ebp
	addl	(%esp),%edx
	pxor	%xmm1,%xmm0
	movdqa	%xmm4,80(%esp)
	xorl	%ebx,%eax
	roll	$5,%edi
	movdqa	%xmm3,%xmm4
	addl	%esi,%edx
	paddd	%xmm7,%xmm3
	andl	%eax,%ebp
	pxor	%xmm2,%xmm0
	xorl	%ebx,%eax
	addl	%edi,%edx
	rorl	$7,%edi
	xorl	%ebx,%ebp
	movdqa	%xmm0,%xmm2
	movdqa	%xmm3,48(%esp)
	movl	%edx,%esi
	addl	4(%esp),%ecx
	xorl	%eax,%edi
	roll	$5,%edx
	pslld	$2,%xmm0
	addl	%ebp,%ecx
	andl	%edi,%esi
	psrld	$30,%xmm2
	xorl	%eax,%edi
	addl	%edx,%ecx
	rorl	$7,%edx
	xorl	%eax,%esi
	movl	%ecx,%ebp
	addl	8(%esp),%ebx
	xorl	%edi,%edx
	roll	$5,%ecx
	por	%xmm2,%xmm0
	addl	%esi,%ebx
	andl	%edx,%ebp
	movdqa	96(%esp),%xmm2
	xorl	%edi,%edx
	addl	%ecx,%ebx
	addl	12(%esp),%eax
	xorl	%edi,%ebp
	movl	%ebx,%esi
	pshufd	$238,%xmm7,%xmm3
	roll	$5,%ebx
	addl	%ebp,%eax
	xorl	%edx,%esi
	rorl	$7,%ecx
	addl	%ebx,%eax
	addl	16(%esp),%edi
	pxor	%xmm5,%xmm1
	punpcklqdq	%xmm0,%xmm3
	xorl	%ecx,%esi
	movl	%eax,%ebp
	roll	$5,%eax
	pxor	%xmm2,%xmm1
	movdqa	%xmm5,96(%esp)
	addl	%esi,%edi
	xorl	%ecx,%ebp
	movdqa	%xmm4,%xmm5
	rorl	$7,%ebx
	paddd	%xmm0,%xmm4
	addl	%eax,%edi
	pxor	%xmm3,%xmm1
	addl	20(%esp),%edx
	xorl	%ebx,%ebp
	movl	%edi,%esi
	roll	$5,%edi
	movdqa	%xmm1,%xmm3
	movdqa	%xmm4,(%esp)
	addl	%ebp,%edx
	xorl	%ebx,%esi
	rorl	$7,%eax
	addl	%edi,%edx
	pslld	$2,%xmm1
	addl	24(%esp),%ecx
	xorl	%eax,%esi
	psrld	$30,%xmm3
	movl	%edx,%ebp
	roll	$5,%edx
	addl	%esi,%ecx
	xorl	%eax,%ebp
	rorl	$7,%edi
	addl	%edx,%ecx
	por	%xmm3,%xmm1
	addl	28(%esp),%ebx
	xorl	%edi,%ebp
	movdqa	64(%esp),%xmm3
	movl	%ecx,%esi
	roll	$5,%ecx
	addl	%ebp,%ebx
	xorl	%edi,%esi
	rorl	$7,%edx
	pshufd	$238,%xmm0,%xmm4
	addl	%ecx,%ebx
	addl	32(%esp),%eax
	pxor	%xmm6,%xmm2
	punpcklqdq	%xmm1,%xmm4
	xorl	%edx,%esi
	movl	%ebx,%ebp
	roll	$5,%ebx
	pxor	%xmm3,%xmm2
	movdqa	%xmm6,64(%esp)
	addl	%esi,%eax
	xorl	%edx,%ebp
	movdqa	128(%esp),%xmm6
	rorl	$7,%ecx
	paddd	%xmm1,%xmm5
	addl	%ebx,%eax
	pxor	%xmm4,%xmm2
	addl	36(%esp),%edi
	xorl	%ecx,%ebp
	movl	%eax,%esi
	roll	$5,%eax
	movdqa	%xmm2,%xmm4
	movdqa	%xmm5,16(%esp)
	addl	%ebp,%edi
	xorl	%ecx,%esi
	rorl	$7,%ebx
	addl	%eax,%edi
	pslld	$2,%xmm2
	addl	40(%esp),%edx
	xorl	%ebx,%esi
	psrld	$30,%xmm4
	movl	%edi,%ebp
	roll	$5,%edi
	addl	%esi,%edx
	xorl	%ebx,%ebp
	rorl	$7,%eax
	addl	%edi,%edx
	por	%xmm4,%xmm2
	addl	44(%esp),%ecx
	xorl	%eax,%ebp
	movdqa	80(%esp),%xmm4
	movl	%edx,%esi
	roll	$5,%edx
	addl	%ebp,%ecx
	xorl	%eax,%esi
	rorl	$7,%edi
	pshufd	$238,%xmm1,%xmm5
	addl	%edx,%ecx
	addl	48(%esp),%ebx
	pxor	%xmm7,%xmm3
	punpcklqdq	%xmm2,%xmm5
	xorl	%edi,%esi
	movl	%ecx,%ebp
	roll	$5,%ecx
	pxor	%xmm4,%xmm3
	movdqa	%xmm7,80(%esp)
	addl	%esi,%ebx
	xorl	%edi,%ebp
	movdqa	%xmm6,%xmm7
	rorl	$7,%edx
	paddd	%xmm2,%xmm6
	addl	%ecx,%ebx
	pxor	%xmm5,%xmm3
	addl	52(%esp),%eax
	xorl	%edx,%ebp
	movl	%ebx,%esi
	roll	$5,%ebx
	movdqa	%xmm3,%xmm5
	movdqa	%xmm6,32(%esp)
	addl	%ebp,%eax
	xorl	%edx,%esi
	rorl	$7,%ecx
	addl	%ebx,%eax
	pslld	$2,%xmm3
	addl	56(%esp),%edi
	xorl	%ecx,%esi
	psrld	$30,%xmm5
	movl	%eax,%ebp
	roll	$5,%eax
	addl	%esi,%edi
	xorl	%ecx,%ebp
	rorl	$7,%ebx
	addl	%eax,%edi
	por	%xmm5,%xmm3
	addl	60(%esp),%edx
	xorl	%ebx,%ebp
	movdqa	96(%esp),%xmm5
	movl	%edi,%esi
	roll	$5,%edi
	addl	%ebp,%edx
	xorl	%ebx,%esi
	rorl	$7,%eax
	pshufd	$238,%xmm2,%xmm6
	addl	%edi,%edx
	addl	(%esp),%ecx
	pxor	%xmm0,%xmm4
	punpcklqdq	%xmm3,%xmm6
	xorl	%eax,%esi
	movl	%edx,%ebp
	roll	$5,%edx
	pxor	%xmm5,%xmm4
	movdqa	%xmm0,96(%esp)
	addl	%esi,%ecx
	xorl	%eax,%ebp
	movdqa	%xmm7,%xmm0
	rorl	$7,%edi
	paddd	%xmm3,%xmm7
	addl	%edx,%ecx
	pxor	%xmm6,%xmm4
	addl	4(%esp),%ebx
	xorl	%edi,%ebp
	movl	%ecx,%esi
	roll	$5,%ecx
	movdqa	%xmm4,%xmm6
	movdqa	%xmm7,48(%esp)
	addl	%ebp,%ebx
	xorl	%edi,%esi
	rorl	$7,%edx
	addl	%ecx,%ebx
	pslld	$2,%xmm4
	addl	8(%esp),%eax
	xorl	%edx,%esi
	psrld	$30,%xmm6
	movl	%ebx,%ebp
	roll	$5,%ebx
	addl	%esi,%eax
	xorl	%edx,%ebp
	rorl	$7,%ecx
	addl	%ebx,%eax
	por	%xmm6,%xmm4
	addl	12(%esp),%edi
	xorl	%ecx,%ebp
	movdqa	64(%esp),%xmm6
	movl	%eax,%esi
	roll	$5,%eax
	addl	%ebp,%edi
	xorl	%ecx,%esi
	rorl	$7,%ebx
	pshufd	$238,%xmm3,%xmm7
	addl	%eax,%edi
	addl	16(%esp),%edx
	pxor	%xmm1,%xmm5
	punpcklqdq	%xmm4,%xmm7
	xorl	%ebx,%esi
	movl	%edi,%ebp
	roll	$5,%edi
	pxor	%xmm6,%xmm5
	movdqa	%xmm1,64(%esp)
	addl	%esi,%edx
	xorl	%ebx,%ebp
	movdqa	%xmm0,%xmm1
	rorl	$7,%eax
	paddd	%xmm4,%xmm0
	addl	%edi,%edx
	pxor	%xmm7,%xmm5
	addl	20(%esp),%ecx
	xorl	%eax,%ebp
	movl	%edx,%esi
	roll	$5,%edx
	movdqa	%xmm5,%xmm7
	movdqa	%xmm0,(%esp)
	addl	%ebp,%ecx
	xorl	%eax,%esi
	rorl	$7,%edi
	addl	%edx,%ecx
	pslld	$2,%xmm5
	addl	24(%esp),%ebx
	xorl	%edi,%esi
	psrld	$30,%xmm7
	movl	%ecx,%ebp
	roll	$5,%ecx
	addl	%esi,%ebx
	xorl	%edi,%ebp
	rorl	$7,%edx
	addl	%ecx,%ebx
	por	%xmm7,%xmm5
	addl	28(%esp),%eax
	movdqa	80(%esp),%xmm7
	rorl	$7,%ecx
	movl	%ebx,%esi
	xorl	%edx,%ebp
	roll	$5,%ebx
	pshufd	$238,%xmm4,%xmm0
	addl	%ebp,%eax
	xorl	%ecx,%esi
	xorl	%edx,%ecx
	addl	%ebx,%eax
	addl	32(%esp),%edi
	pxor	%xmm2,%xmm6
	punpcklqdq	%xmm5,%xmm0
	andl	%ecx,%esi
	xorl	%edx,%ecx
	rorl	$7,%ebx
	pxor	%xmm7,%xmm6
	movdqa	%xmm2,80(%esp)
	movl	%eax,%ebp
	xorl	%ecx,%esi
	roll	$5,%eax
	movdqa	%xmm1,%xmm2
	addl	%esi,%edi
	paddd	%xmm5,%xmm1
	xorl	%ebx,%ebp
	pxor	%xmm0,%xmm6
	xorl	%ecx,%ebx
	addl	%eax,%edi
	addl	36(%esp),%edx
	andl	%ebx,%ebp
	movdqa	%xmm6,%xmm0
	movdqa	%xmm1,16(%esp)
	xorl	%ecx,%ebx
	rorl	$7,%eax
	movl	%edi,%esi
	xorl	%ebx,%ebp
	roll	$5,%edi
	pslld	$2,%xmm6
	addl	%ebp,%edx
	xorl	%eax,%esi
	psrld	$30,%xmm0
	xorl	%ebx,%eax
	addl	%edi,%edx
	addl	40(%esp),%ecx
	andl	%eax,%esi
	xorl	%ebx,%eax
	rorl	$7,%edi
	por	%xmm0,%xmm6
	movl	%edx,%ebp
	xorl	%eax,%esi
	movdqa	96(%esp),%xmm0
	roll	$5,%edx
	addl	%esi,%ecx
	xorl	%edi,%ebp
	xorl	%eax,%edi
	addl	%edx,%ecx
	pshufd	$238,%xmm5,%xmm1
	addl	44(%esp),%ebx
	andl	%edi,%ebp
	xorl	%eax,%edi
	rorl	$7,%edx
	movl	%ecx,%esi
	xorl	%edi,%ebp
	roll	$5,%ecx
	addl	%ebp,%ebx
	xorl	%edx,%esi
	xorl	%edi,%edx
	addl	%ecx,%ebx
	addl	48(%esp),%eax
	pxor	%xmm3,%xmm7
	punpcklqdq	%xmm6,%xmm1
	andl	%edx,%esi
	xorl	%edi,%edx
	rorl	$7,%ecx
	pxor	%xmm0,%xmm7
	movdqa	%xmm3,96(%esp)
	movl	%ebx,%ebp
	xorl	%edx,%esi
	roll	$5,%ebx
	movdqa	144(%esp),%xmm3
	addl	%esi,%eax
	paddd	%xmm6,%xmm2
	xorl	%ecx,%ebp
	pxor	%xmm1,%xmm7
	xorl	%edx,%ecx
	addl	%ebx,%eax
	addl	52(%esp),%edi
	andl	%ecx,%ebp
	movdqa	%xmm7,%xmm1
	movdqa	%xmm2,32(%esp)
	xorl	%edx,%ecx
	rorl	$7,%ebx
	movl	%eax,%esi
	xorl	%ecx,%ebp
	roll	$5,%eax
	pslld	$2,%xmm7
	addl	%ebp,%edi
	xorl	%ebx,%esi
	psrld	$30,%xmm1
	xorl	%ecx,%ebx
	addl	%eax,%edi
	addl	56(%esp),%edx
	andl	%ebx,%esi
	xorl	%ecx,%ebx
	rorl	$7,%eax
	por	%xmm1,%xmm7
	movl	%edi,%ebp
	xorl	%ebx,%esi
	movdqa	64(%esp),%xmm1
	roll	$5,%edi
	addl	%esi,%edx
	xorl	%eax,%ebp
	xorl	%ebx,%eax
	addl	%edi,%edx
	pshufd	$238,%xmm6,%xmm2
	addl	60(%esp),%ecx
	andl	%eax,%ebp
	xorl	%ebx,%eax
	rorl	$7,%edi
	movl	%edx,%esi
	xorl	%eax,%ebp
	roll	$5,%edx
	addl	%ebp,%ecx
	xorl	%edi,%esi
	xorl	%eax,%edi
	addl	%edx,%ecx
	addl	(%esp),%ebx
	pxor	%xmm4,%xmm0
	punpcklqdq	%xmm7,%xmm2
	andl	%edi,%esi
	xorl	%eax,%edi
	rorl	$7,%edx
	pxor	%xmm1,%xmm0
	movdqa	%xmm4,64(%esp)
	movl	%ecx,%ebp
	xorl	%edi,%esi
	roll	$5,%ecx
	movdqa	%xmm3,%xmm4
	addl	%esi,%ebx
	paddd	%xmm7,%xmm3
	xorl	%edx,%ebp
	pxor	%xmm2,%xmm0
	xorl	%edi,%edx
	addl	%ecx,%ebx
	addl	4(%esp),%eax
	andl	%edx,%ebp
	movdqa	%xmm0,%xmm2
	movdqa	%xmm3,48(%esp)
	xorl	%edi,%edx
	rorl	$7,%ecx
	movl	%ebx,%esi
	xorl	%edx,%ebp
	roll	$5,%ebx
	pslld	$2,%xmm0
	addl	%ebp,%eax
	xorl	%ecx,%esi
	psrld	$30,%xmm2
	xorl	%edx,%ecx
	addl	%ebx,%eax
	addl	8(%esp),%edi
	andl	%ecx,%esi
	xorl	%edx,%ecx
	rorl	$7,%ebx
	por	%xmm2,%xmm0
	movl	%eax,%ebp
	xorl	%ecx,%esi
	movdqa	80(%esp),%xmm2
	roll	$5,%eax
	addl	%esi,%edi
	xorl	%ebx,%ebp
	xorl	%ecx,%ebx
	addl	%eax,%edi
	pshufd	$238,%xmm7,%xmm3
	addl	12(%esp),%edx
	andl	%ebx,%ebp
	xorl	%ecx,%ebx
	rorl	$7,%eax
	movl	%edi,%esi
	xorl	%ebx,%ebp
	roll	$5,%edi
	addl	%ebp,%edx
	xorl	%eax,%esi
	xorl	%ebx,%eax
	addl	%edi,%edx
	addl	16(%esp),%ecx
	pxor	%xmm5,%xmm1
	punpcklqdq	%xmm0,%xmm3
	andl	%eax,%esi
	xorl	%ebx,%eax
	rorl	$7,%edi
	pxor	%xmm2,%xmm1
	movdqa	%xmm5,80(%esp)
	movl	%edx,%ebp
	xorl	%eax,%esi
	roll	$5,%edx
	movdqa	%xmm4,%xmm5
	addl	%esi,%ecx
	paddd	%xmm0,%xmm4
	xorl	%edi,%ebp
	pxor	%xmm3,%xmm1
	xorl	%eax,%edi
	addl	%edx,%ecx
	addl	20(%esp),%ebx
	andl	%edi,%ebp
	movdqa	%xmm1,%xmm3
	movdqa	%xmm4,(%esp)
	xorl	%eax,%edi
	rorl	$7,%edx
	movl	%ecx,%esi
	xorl	%edi,%ebp
	roll	$5,%ecx
	pslld	$2,%xmm1
	addl	%ebp,%ebx
	xorl	%edx,%esi
	psrld	$30,%xmm3
	xorl	%edi,%edx
	addl	%ecx,%ebx
	addl	24(%esp),%eax
	andl	%edx,%esi
	xorl	%edi,%edx
	rorl	$7,%ecx
	por	%xmm3,%xmm1
	movl	%ebx,%ebp
	xorl	%edx,%esi
	movdqa	96(%esp),%xmm3
	roll	$5,%ebx
	addl	%esi,%eax
	xorl	%ecx,%ebp
	xorl	%edx,%ecx
	addl	%ebx,%eax
	pshufd	$238,%xmm0,%xmm4
	addl	28(%esp),%edi
	andl	%ecx,%ebp
	xorl	%edx,%ecx
	rorl	$7,%ebx
	movl	%eax,%esi
	xorl	%ecx,%ebp
	roll	$5,%eax
	addl	%ebp,%edi
	xorl	%ebx,%esi
	xorl	%ecx,%ebx
	addl	%eax,%edi
	addl	32(%esp),%edx
	pxor	%xmm6,%xmm2
	punpcklqdq	%xmm1,%xmm4
	andl	%ebx,%esi
	xorl	%ecx,%ebx
	rorl	$7,%eax
	pxor	%xmm3,%xmm2
	movdqa	%xmm6,96(%esp)
	movl	%edi,%ebp
	xorl	%ebx,%esi
	roll	$5,%edi
	movdqa	%xmm5,%xmm6
	addl	%esi,%edx
	paddd	%xmm1,%xmm5
	xorl	%eax,%ebp
	pxor	%xmm4,%xmm2
	xorl	%ebx,%eax
	addl	%edi,%edx
	addl	36(%esp),%ecx
	andl	%eax,%ebp
	movdqa	%xmm2,%xmm4
	movdqa	%xmm5,16(%esp)
	xorl	%ebx,%eax
	rorl	$7,%edi
	movl	%edx,%esi
	xorl	%eax,%ebp
	roll	$5,%edx
	pslld	$2,%xmm2
	addl	%ebp,%ecx
	xorl	%edi,%esi
	psrld	$30,%xmm4
	xorl	%eax,%edi
	addl	%edx,%ecx
	addl	40(%esp),%ebx
	andl	%edi,%esi
	xorl	%eax,%edi
	rorl	$7,%edx
	por	%xmm4,%xmm2
	movl	%ecx,%ebp
	xorl	%edi,%esi
	movdqa	64(%esp),%xmm4
	roll	$5,%ecx
	addl	%esi,%ebx
	xorl	%edx,%ebp
	xorl	%edi,%edx
	addl	%ecx,%ebx
	pshufd	$238,%xmm1,%xmm5
	addl	44(%esp),%eax
	andl	%edx,%ebp
	xorl	%edi,%edx
	rorl	$7,%ecx
	movl	%ebx,%esi
	xorl	%edx,%ebp
	roll	$5,%ebx
	addl	%ebp,%eax
	xorl	%edx,%esi
	addl	%ebx,%eax
	addl	48(%esp),%edi
	pxor	%xmm7,%xmm3
	punpcklqdq	%xmm2,%xmm5
	xorl	%ecx,%esi
	movl	%eax,%ebp
	roll	$5,%eax
	pxor	%xmm4,%xmm3
	movdqa	%xmm7,64(%esp)
	addl	%esi,%edi
	xorl	%ecx,%ebp
	movdqa	%xmm6,%xmm7
	rorl	$7,%ebx
	paddd	%xmm2,%xmm6
	addl	%eax,%edi
	pxor	%xmm5,%xmm3
	addl	52(%esp),%edx
	xorl	%ebx,%ebp
	movl	%edi,%esi
	roll	$5,%edi
	movdqa	%xmm3,%xmm5
	movdqa	%xmm6,32(%esp)
	addl	%ebp,%edx
	xorl	%ebx,%esi
	rorl	$7,%eax
	addl	%edi,%edx
	pslld	$2,%xmm3
	addl	56(%esp),%ecx
	xorl	%eax,%esi
	psrld	$30,%xmm5
	movl	%edx,%ebp
	roll	$5,%edx
	addl	%esi,%ecx
	xorl	%eax,%ebp
	rorl	$7,%edi
	addl	%edx,%ecx
	por	%xmm5,%xmm3
	addl	60(%esp),%ebx
	xorl	%edi,%ebp
	movl	%ecx,%esi
	roll	$5,%ecx
	addl	%ebp,%ebx
	xorl	%edi,%esi
	rorl	$7,%edx
	addl	%ecx,%ebx
	addl	(%esp),%eax
	xorl	%edx,%esi
	movl	%ebx,%ebp
	roll	$5,%ebx
	addl	%esi,%eax
	xorl	%edx,%ebp
	rorl	$7,%ecx
	paddd	%xmm3,%xmm7
	addl	%ebx,%eax
	addl	4(%esp),%edi
	xorl	%ecx,%ebp
	movl	%eax,%esi
	movdqa	%xmm7,48(%esp)
	roll	$5,%eax
	addl	%ebp,%edi
	xorl	%ecx,%esi
	rorl	$7,%ebx
	addl	%eax,%edi
	addl	8(%esp),%edx
	xorl	%ebx,%esi
	movl	%edi,%ebp
	roll	$5,%edi
	addl	%esi,%edx
	xorl	%ebx,%ebp
	rorl	$7,%eax
	addl	%edi,%edx
	addl	12(%esp),%ecx
	xorl	%eax,%ebp
	movl	%edx,%esi
	roll	$5,%edx
	addl	%ebp,%ecx
	xorl	%eax,%esi
	rorl	$7,%edi
	addl	%edx,%ecx
	movl	196(%esp),%ebp
	cmpl	200(%esp),%ebp
	je	.L007done
	movdqa	160(%esp),%xmm7
	movdqa	176(%esp),%xmm6
	movdqu	(%ebp),%xmm0
	movdqu	16(%ebp),%xmm1
	movdqu	32(%ebp),%xmm2
	movdqu	48(%ebp),%xmm3
	addl	$64,%ebp
.byte	102,15,56,0,198
	movl	%ebp,196(%esp)
	movdqa	%xmm7,96(%esp)
	addl	16(%esp),%ebx
	xorl	%edi,%esi
	movl	%ecx,%ebp
	roll	$5,%ecx
	addl	%esi,%ebx
	xorl	%edi,%ebp
	rorl	$7,%edx
.byte	102,15,56,0,206
	addl	%ecx,%ebx
	addl	20(%esp),%eax
	xorl	%edx,%ebp
	movl	%ebx,%esi
	paddd	%xmm7,%xmm0
	roll	$5,%ebx
	addl	%ebp,%eax
	xorl	%edx,%esi
	rorl	$7,%ecx
	movdqa	%xmm0,(%esp)
	addl	%ebx,%eax
	addl	24(%esp),%edi
	xorl	%ecx,%esi
	movl	%eax,%ebp
	psubd	%xmm7,%xmm0
	roll	$5,%eax
	addl	%esi,%edi
	xorl	%ecx,%ebp
	rorl	$7,%ebx
	addl	%eax,%edi
	addl	28(%esp),%edx
	xorl	%ebx,%ebp
	movl	%edi,%esi
	roll	$5,%edi
	addl	%ebp,%edx
	xorl	%ebx,%esi
	rorl	$7,%eax
	addl	%edi,%edx
	addl	32(%esp),%ecx
	xorl	%eax,%esi
	movl	%edx,%ebp
	roll	$5,%edx
	addl	%esi,%ecx
	xorl	%eax,%ebp
	rorl	$7,%edi
.byte	102,15,56,0,214
	addl	%edx,%ecx
	addl	36(%esp),%ebx
	xorl	%edi,%ebp
	movl	%ecx,%esi
	paddd	%xmm7,%xmm1
	roll	$5,%ecx
	addl	%ebp,%ebx
	xorl	%edi,%esi
	rorl	$7,%edx
	movdqa	%xmm1,16(%esp)
	addl	%ecx,%ebx
	addl	40(%esp),%eax
	xorl	%edx,%esi
	movl	%ebx,%ebp
	psubd	%xmm7,%xmm1
	roll	$5,%ebx
	addl	%esi,%eax
	xorl	%edx,%ebp
	rorl	$7,%ecx
	addl	%ebx,%eax
	addl	44(%esp),%edi
	xorl	%ecx,%ebp
	movl	%eax,%esi
	roll	$5,%eax
	addl	%ebp,%edi
	xorl	%ecx,%esi
	rorl	$7,%ebx
	addl	%eax,%edi
	addl	48(%esp),%edx
	xorl	%ebx,%esi
	movl	%edi,%ebp
	roll	$5,%edi
	addl	%esi,%edx
	xorl	%ebx,%ebp
	rorl	$7,%eax
.byte	102,15,56,0,222
	addl	%edi,%edx
	addl	52(%esp),%ecx
	xorl	%eax,%ebp
	movl	%edx,%esi
	paddd	%xmm7,%xmm2
	roll	$5,%edx
	addl	%ebp,%ecx
	xorl	%eax,%esi
	rorl	$7,%edi
	movdqa	%xmm2,32(%esp)
	addl	%edx,%ecx
	addl	56(%esp),%ebx
	xorl	%edi,%esi
	movl	%ecx,%ebp
	psubd	%xmm7,%xmm2
	roll	$5,%ecx
	addl	%esi,%ebx
	xorl	%edi,%ebp
	rorl	$7,%edx
	addl	%ecx,%ebx
	addl	60(%esp),%eax
	xorl	%edx,%ebp
	movl	%ebx,%esi
	roll	$5,%ebx
	addl	%ebp,%eax
	rorl	$7,%ecx
	addl	%ebx,%eax
	movl	192(%esp),%ebp
	addl	(%ebp),%eax
	addl	4(%ebp),%esi
	addl	8(%ebp),%ecx
	movl	%eax,(%ebp)
	addl	12(%ebp),%edx
	movl	%esi,4(%ebp)
	addl	16(%ebp),%edi
	movl	%ecx,8(%ebp)
	movl	%ecx,%ebx
	movl	%edx,12(%ebp)
	xorl	%edx,%ebx
	movl	%edi,16(%ebp)
	movl	%esi,%ebp
	pshufd	$238,%xmm0,%xmm4
	andl	%ebx,%esi
	movl	%ebp,%ebx
	jmp	.L006loop
.align	16
.L007done:
	addl	16(%esp),%ebx
	xorl	%edi,%esi
	movl	%ecx,%ebp
	roll	$5,%ecx
	addl	%esi,%ebx
	xorl	%edi,%ebp
	rorl	$7,%edx
	addl	%ecx,%ebx
	addl	20(%esp),%eax
	xorl	%edx,%ebp
	movl	%ebx,%esi
	roll	$5,%ebx
	addl	%ebp,%eax
	xorl	%edx,%esi
	rorl	$7,%ecx
	addl	%ebx,%eax
	addl	24(%esp),%edi
	xorl	%ecx,%esi
	movl	%eax,%ebp
	roll	$5,%eax
	addl	%esi,%edi
	xorl	%ecx,%ebp
	rorl	$7,%ebx
	addl	%eax,%edi
	addl	28(%esp),%edx
	xorl	%ebx,%ebp
	movl	%edi,%esi
	roll	$5,%edi
	addl	%ebp,%edx
	xorl	%ebx,%esi
	rorl	$7,%eax
	addl	%edi,%edx
	addl	32(%esp),%ecx
	xorl	%eax,%esi
	movl	%edx,%ebp
	roll	$5,%edx
	addl	%esi,%ecx
	xorl	%eax,%ebp
	rorl	$7,%edi
	addl	%edx,%ecx
	addl	36(%esp),%ebx
	xorl	%edi,%ebp
	movl	%ecx,%esi
	roll	$5,%ecx
	addl	%ebp,%ebx
	xorl	%edi,%esi
	rorl	$7,%edx
	addl	%ecx,%ebx
	addl	40(%esp),%eax
	xorl	%edx,%esi
	movl	%ebx,%ebp
	roll	$5,%ebx
	addl	%esi,%eax
	xorl	%edx,%ebp
	rorl	$7,%ecx
	addl	%ebx,%eax
	addl	44(%esp),%edi
	xorl	%ecx,%ebp
	movl	%eax,%esi
	roll	$5,%eax
	addl	%ebp,%edi
	xorl	%ecx,%esi
	rorl	$7,%ebx
	addl	%eax,%edi
	addl	48(%esp),%edx
	xorl	%ebx,%esi
	movl	%edi,%ebp
	roll	$5,%edi
	addl	%esi,%edx
	xorl	%ebx,%ebp
	rorl	$7,%eax
	addl	%edi,%edx
	addl	52(%esp),%ecx
	xorl	%eax,%ebp
	movl	%edx,%esi
	roll	$5,%edx
	addl	%ebp,%ecx
	xorl	%eax,%esi
	rorl	$7,%edi
	addl	%edx,%ecx
	addl	56(%esp),%ebx
	xorl	%edi,%esi
	movl	%ecx,%ebp
	roll	$5,%ecx
	addl	%esi,%ebx
	xorl	%edi,%ebp
	rorl	$7,%edx
	addl	%ecx,%ebx
	addl	60(%esp),%eax
	xorl	%edx,%ebp
	movl	%ebx,%esi
	roll	$5,%ebx
	addl	%ebp,%eax
	rorl	$7,%ecx
	addl	%ebx,%eax
	movl	192(%esp),%ebp
	addl	(%ebp),%eax
	movl	204(%esp),%esp
	addl	4(%ebp),%esi
	addl	8(%ebp),%ecx
	movl	%eax,(%ebp)
	addl	12(%ebp),%edx
	movl	%esi,4(%ebp)
	addl	16(%ebp),%edi
	movl	%ecx,8(%ebp)
	movl	%edx,12(%ebp)
	movl	%edi,16(%ebp)
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	_sha1_block_data_order_ssse3,.-_sha1_block_data_order_ssse3
.type	_sha1_block_data_order_avx,@function
.align	16
_sha1_block_data_order_avx:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	call	.L008pic_point
.L008pic_point:
	popl	%ebp
	leal	.LK_XX_XX-.L008pic_point(%ebp),%ebp
.Lavx_shortcut:
	vzeroall
	vmovdqa	(%ebp),%xmm7
	vmovdqa	16(%ebp),%xmm0
	vmovdqa	32(%ebp),%xmm1
	vmovdqa	48(%ebp),%xmm2
	vmovdqa	64(%ebp),%xmm6
	movl	20(%esp),%edi
	movl	24(%esp),%ebp
	movl	28(%esp),%edx
	movl	%esp,%esi
	subl	$208,%esp
	andl	$-64,%esp
	vmovdqa	%xmm0,112(%esp)
	vmovdqa	%xmm1,128(%esp)
	vmovdqa	%xmm2,144(%esp)
	shll	$6,%edx
	vmovdqa	%xmm7,160(%esp)
	addl	%ebp,%edx
	vmovdqa	%xmm6,176(%esp)
	addl	$64,%ebp
	movl	%edi,192(%esp)
	movl	%ebp,196(%esp)
	movl	%edx,200(%esp)
	movl	%esi,204(%esp)
	movl	(%edi),%eax
	movl	4(%edi),%ebx
	movl	8(%edi),%ecx
	movl	12(%edi),%edx
	movl	16(%edi),%edi
	movl	%ebx,%esi
	vmovdqu	-64(%ebp),%xmm0
	vmovdqu	-48(%ebp),%xmm1
	vmovdqu	-32(%ebp),%xmm2
	vmovdqu	-16(%ebp),%xmm3
	vpshufb	%xmm6,%xmm0,%xmm0
	vpshufb	%xmm6,%xmm1,%xmm1
	vpshufb	%xmm6,%xmm2,%xmm2
	vmovdqa	%xmm7,96(%esp)
	vpshufb	%xmm6,%xmm3,%xmm3
	vpaddd	%xmm7,%xmm0,%xmm4
	vpaddd	%xmm7,%xmm1,%xmm5
	vpaddd	%xmm7,%xmm2,%xmm6
	vmovdqa	%xmm4,(%esp)
	movl	%ecx,%ebp
	vmovdqa	%xmm5,16(%esp)
	xorl	%edx,%ebp
	vmovdqa	%xmm6,32(%esp)
	andl	%ebp,%esi
	jmp	.L009loop
.align	16
.L009loop:
	shrdl	$2,%ebx,%ebx
	xorl	%edx,%esi
	vpalignr	$8,%xmm0,%xmm1,%xmm4
	movl	%eax,%ebp
	addl	(%esp),%edi
	vpaddd	%xmm3,%xmm7,%xmm7
	vmovdqa	%xmm0,64(%esp)
	xorl	%ecx,%ebx
	shldl	$5,%eax,%eax
	vpsrldq	$4,%xmm3,%xmm6
	addl	%esi,%edi
	andl	%ebx,%ebp
	vpxor	%xmm0,%xmm4,%xmm4
	xorl	%ecx,%ebx
	addl	%eax,%edi
	vpxor	%xmm2,%xmm6,%xmm6
	shrdl	$7,%eax,%eax
	xorl	%ecx,%ebp
	vmovdqa	%xmm7,48(%esp)
	movl	%edi,%esi
	addl	4(%esp),%edx
	vpxor	%xmm6,%xmm4,%xmm4
	xorl	%ebx,%eax
	shldl	$5,%edi,%edi
	addl	%ebp,%edx
	andl	%eax,%esi
	vpsrld	$31,%xmm4,%xmm6
	xorl	%ebx,%eax
	addl	%edi,%edx
	shrdl	$7,%edi,%edi
	xorl	%ebx,%esi
	vpslldq	$12,%xmm4,%xmm0
	vpaddd	%xmm4,%xmm4,%xmm4
	movl	%edx,%ebp
	addl	8(%esp),%ecx
	xorl	%eax,%edi
	shldl	$5,%edx,%edx
	vpsrld	$30,%xmm0,%xmm7
	vpor	%xmm6,%xmm4,%xmm4
	addl	%esi,%ecx
	andl	%edi,%ebp
	xorl	%eax,%edi
	addl	%edx,%ecx
	vpslld	$2,%xmm0,%xmm0
	shrdl	$7,%edx,%edx
	xorl	%eax,%ebp
	vpxor	%xmm7,%xmm4,%xmm4
	movl	%ecx,%esi
	addl	12(%esp),%ebx
	xorl	%edi,%edx
	shldl	$5,%ecx,%ecx
	vpxor	%xmm0,%xmm4,%xmm4
	addl	%ebp,%ebx
	andl	%edx,%esi
	vmovdqa	96(%esp),%xmm0
	xorl	%edi,%edx
	addl	%ecx,%ebx
	shrdl	$7,%ecx,%ecx
	xorl	%edi,%esi
	vpalignr	$8,%xmm1,%xmm2,%xmm5
	movl	%ebx,%ebp
	addl	16(%esp),%eax
	vpaddd	%xmm4,%xmm0,%xmm0
	vmovdqa	%xmm1,80(%esp)
	xorl	%edx,%ecx
	shldl	$5,%ebx,%ebx
	vpsrldq	$4,%xmm4,%xmm7
	addl	%esi,%eax
	andl	%ecx,%ebp
	vpxor	%xmm1,%xmm5,%xmm5
	xorl	%edx,%ecx
	addl	%ebx,%eax
	vpxor	%xmm3,%xmm7,%xmm7
	shrdl	$7,%ebx,%ebx
	xorl	%edx,%ebp
	vmovdqa	%xmm0,(%esp)
	movl	%eax,%esi
	addl	20(%esp),%edi
	vpxor	%xmm7,%xmm5,%xmm5
	xorl	%ecx,%ebx
	shldl	$5,%eax,%eax
	addl	%ebp,%edi
	andl	%ebx,%esi
	vpsrld	$31,%xmm5,%xmm7
	xorl	%ecx,%ebx
	addl	%eax,%edi
	shrdl	$7,%eax,%eax
	xorl	%ecx,%esi
	vpslldq	$12,%xmm5,%xmm1
	vpaddd	%xmm5,%xmm5,%xmm5
	movl	%edi,%ebp
	addl	24(%esp),%edx
	xorl	%ebx,%eax
	shldl	$5,%edi,%edi
	vpsrld	$30,%xmm1,%xmm0
	vpor	%xmm7,%xmm5,%xmm5
	addl	%esi,%edx
	andl	%eax,%ebp
	xorl	%ebx,%eax
	addl	%edi,%edx
	vpslld	$2,%xmm1,%xmm1
	shrdl	$7,%edi,%edi
	xorl	%ebx,%ebp
	vpxor	%xmm0,%xmm5,%xmm5
	movl	%edx,%esi
	addl	28(%esp),%ecx
	xorl	%eax,%edi
	shldl	$5,%edx,%edx
	vpxor	%xmm1,%xmm5,%xmm5
	addl	%ebp,%ecx
	andl	%edi,%esi
	vmovdqa	112(%esp),%xmm1
	xorl	%eax,%edi
	addl	%edx,%ecx
	shrdl	$7,%edx,%edx
	xorl	%eax,%esi
	vpalignr	$8,%xmm2,%xmm3,%xmm6
	movl	%ecx,%ebp
	addl	32(%esp),%ebx
	vpaddd	%xmm5,%xmm1,%xmm1
	vmovdqa	%xmm2,96(%esp)
	xorl	%edi,%edx
	shldl	$5,%ecx,%ecx
	vpsrldq	$4,%xmm5,%xmm0
	addl	%esi,%ebx
	andl	%edx,%ebp
	vpxor	%xmm2,%xmm6,%xmm6
	xorl	%edi,%edx
	addl	%ecx,%ebx
	vpxor	%xmm4,%xmm0,%xmm0
	shrdl	$7,%ecx,%ecx
	xorl	%edi,%ebp
	vmovdqa	%xmm1,16(%esp)
	movl	%ebx,%esi
	addl	36(%esp),%eax
	vpxor	%xmm0,%xmm6,%xmm6
	xorl	%edx,%ecx
	shldl	$5,%ebx,%ebx
	addl	%ebp,%eax
	andl	%ecx,%esi
	vpsrld	$31,%xmm6,%xmm0
	xorl	%edx,%ecx
	addl	%ebx,%eax
	shrdl	$7,%ebx,%ebx
	xorl	%edx,%esi
	vpslldq	$12,%xmm6,%xmm2
	vpaddd	%xmm6,%xmm6,%xmm6
	movl	%eax,%ebp
	addl	40(%esp),%edi
	xorl	%ecx,%ebx
	shldl	$5,%eax,%eax
	vpsrld	$30,%xmm2,%xmm1
	vpor	%xmm0,%xmm6,%xmm6
	addl	%esi,%edi
	andl	%ebx,%ebp
	xorl	%ecx,%ebx
	addl	%eax,%edi
	vpslld	$2,%xmm2,%xmm2
	vmovdqa	64(%esp),%xmm0
	shrdl	$7,%eax,%eax
	xorl	%ecx,%ebp
	vpxor	%xmm1,%xmm6,%xmm6
	movl	%edi,%esi
	addl	44(%esp),%edx
	xorl	%ebx,%eax
	shldl	$5,%edi,%edi
	vpxor	%xmm2,%xmm6,%xmm6
	addl	%ebp,%edx
	andl	%eax,%esi
	vmovdqa	112(%esp),%xmm2
	xorl	%ebx,%eax
	addl	%edi,%edx
	shrdl	$7,%edi,%edi
	xorl	%ebx,%esi
	vpalignr	$8,%xmm3,%xmm4,%xmm7
	movl	%edx,%ebp
	addl	48(%esp),%ecx
	vpaddd	%xmm6,%xmm2,%xmm2
	vmovdqa	%xmm3,64(%esp)
	xorl	%eax,%edi
	shldl	$5,%edx,%edx
	vpsrldq	$4,%xmm6,%xmm1
	addl	%esi,%ecx
	andl	%edi,%ebp
	vpxor	%xmm3,%xmm7,%xmm7
	xorl	%eax,%edi
	addl	%edx,%ecx
	vpxor	%xmm5,%xmm1,%xmm1
	shrdl	$7,%edx,%edx
	xorl	%eax,%ebp
	vmovdqa	%xmm2,32(%esp)
	movl	%ecx,%esi
	addl	52(%esp),%ebx
	vpxor	%xmm1,%xmm7,%xmm7
	xorl	%edi,%edx
	shldl	$5,%ecx,%ecx
	addl	%ebp,%ebx
	andl	%edx,%esi
	vpsrld	$31,%xmm7,%xmm1
	xorl	%edi,%edx
	addl	%ecx,%ebx
	shrdl	$7,%ecx,%ecx
	xorl	%edi,%esi
	vpslldq	$12,%xmm7,%xmm3
	vpaddd	%xmm7,%xmm7,%xmm7
	movl	%ebx,%ebp
	addl	56(%esp),%eax
	xorl	%edx,%ecx
	shldl	$5,%ebx,%ebx
	vpsrld	$30,%xmm3,%xmm2
	vpor	%xmm1,%xmm7,%xmm7
	addl	%esi,%eax
	andl	%ecx,%ebp
	xorl	%edx,%ecx
	addl	%ebx,%eax
	vpslld	$2,%xmm3,%xmm3
	vmovdqa	80(%esp),%xmm1
	shrdl	$7,%ebx,%ebx
	xorl	%edx,%ebp
	vpxor	%xmm2,%xmm7,%xmm7
	movl	%eax,%esi
	addl	60(%esp),%edi
	xorl	%ecx,%ebx
	shldl	$5,%eax,%eax
	vpxor	%xmm3,%xmm7,%xmm7
	addl	%ebp,%edi
	andl	%ebx,%esi
	vmovdqa	112(%esp),%xmm3
	xorl	%ecx,%ebx
	addl	%eax,%edi
	vpalignr	$8,%xmm6,%xmm7,%xmm2
	vpxor	%xmm4,%xmm0,%xmm0
	shrdl	$7,%eax,%eax
	xorl	%ecx,%esi
	movl	%edi,%ebp
	addl	(%esp),%edx
	vpxor	%xmm1,%xmm0,%xmm0
	vmovdqa	%xmm4,80(%esp)
	xorl	%ebx,%eax
	shldl	$5,%edi,%edi
	vmovdqa	%xmm3,%xmm4
	vpaddd	%xmm7,%xmm3,%xmm3
	addl	%esi,%edx
	andl	%eax,%ebp
	vpxor	%xmm2,%xmm0,%xmm0
	xorl	%ebx,%eax
	addl	%edi,%edx
	shrdl	$7,%edi,%edi
	xorl	%ebx,%ebp
	vpsrld	$30,%xmm0,%xmm2
	vmovdqa	%xmm3,48(%esp)
	movl	%edx,%esi
	addl	4(%esp),%ecx
	xorl	%eax,%edi
	shldl	$5,%edx,%edx
	vpslld	$2,%xmm0,%xmm0
	addl	%ebp,%ecx
	andl	%edi,%esi
	xorl	%eax,%edi
	addl	%edx,%ecx
	shrdl	$7,%edx,%edx
	xorl	%eax,%esi
	movl	%ecx,%ebp
	addl	8(%esp),%ebx
	vpor	%xmm2,%xmm0,%xmm0
	xorl	%edi,%edx
	shldl	$5,%ecx,%ecx
	vmovdqa	96(%esp),%xmm2
	addl	%esi,%ebx
	andl	%edx,%ebp
	xorl	%edi,%edx
	addl	%ecx,%ebx
	addl	12(%esp),%eax
	xorl	%edi,%ebp
	movl	%ebx,%esi
	shldl	$5,%ebx,%ebx
	addl	%ebp,%eax
	xorl	%edx,%esi
	shrdl	$7,%ecx,%ecx
	addl	%ebx,%eax
	vpalignr	$8,%xmm7,%xmm0,%xmm3
	vpxor	%xmm5,%xmm1,%xmm1
	addl	16(%esp),%edi
	xorl	%ecx,%esi
	movl	%eax,%ebp
	shldl	$5,%eax,%eax
	vpxor	%xmm2,%xmm1,%xmm1
	vmovdqa	%xmm5,96(%esp)
	addl	%esi,%edi
	xorl	%ecx,%ebp
	vmovdqa	%xmm4,%xmm5
	vpaddd	%xmm0,%xmm4,%xmm4
	shrdl	$7,%ebx,%ebx
	addl	%eax,%edi
	vpxor	%xmm3,%xmm1,%xmm1
	addl	20(%esp),%edx
	xorl	%ebx,%ebp
	movl	%edi,%esi
	shldl	$5,%edi,%edi
	vpsrld	$30,%xmm1,%xmm3
	vmovdqa	%xmm4,(%esp)
	addl	%ebp,%edx
	xorl	%ebx,%esi
	shrdl	$7,%eax,%eax
	addl	%edi,%edx
	vpslld	$2,%xmm1,%xmm1
	addl	24(%esp),%ecx
	xorl	%eax,%esi
	movl	%edx,%ebp
	shldl	$5,%edx,%edx
	addl	%esi,%ecx
	xorl	%eax,%ebp
	shrdl	$7,%edi,%edi
	addl	%edx,%ecx
	vpor	%xmm3,%xmm1,%xmm1
	addl	28(%esp),%ebx
	xorl	%edi,%ebp
	vmovdqa	64(%esp),%xmm3
	movl	%ecx,%esi
	shldl	$5,%ecx,%ecx
	addl	%ebp,%ebx
	xorl	%edi,%esi
	shrdl	$7,%edx,%edx
	addl	%ecx,%ebx
	vpalignr	$8,%xmm0,%xmm1,%xmm4
	vpxor	%xmm6,%xmm2,%xmm2
	addl	32(%esp),%eax
	xorl	%edx,%esi
	movl	%ebx,%ebp
	shldl	$5,%ebx,%ebx
	vpxor	%xmm3,%xmm2,%xmm2
	vmovdqa	%xmm6,64(%esp)
	addl	%esi,%eax
	xorl	%edx,%ebp
	vmovdqa	128(%esp),%xmm6
	vpaddd	%xmm1,%xmm5,%xmm5
	shrdl	$7,%ecx,%ecx
	addl	%ebx,%eax
	vpxor	%xmm4,%xmm2,%xmm2
	addl	36(%esp),%edi
	xorl	%ecx,%ebp
	movl	%eax,%esi
	shldl	$5,%eax,%eax
	vpsrld	$30,%xmm2,%xmm4
	vmovdqa	%xmm5,16(%esp)
	addl	%ebp,%edi
	xorl	%ecx,%esi
	shrdl	$7,%ebx,%ebx
	addl	%eax,%edi
	vpslld	$2,%xmm2,%xmm2
	addl	40(%esp),%edx
	xorl	%ebx,%esi
	movl	%edi,%ebp
	shldl	$5,%edi,%edi
	addl	%esi,%edx
	xorl	%ebx,%ebp
	shrdl	$7,%eax,%eax
	addl	%edi,%edx
	vpor	%xmm4,%xmm2,%xmm2
	addl	44(%esp),%ecx
	xorl	%eax,%ebp
	vmovdqa	80(%esp),%xmm4
	movl	%edx,%esi
	shldl	$5,%edx,%edx
	addl	%ebp,%ecx
	xorl	%eax,%esi
	shrdl	$7,%edi,%edi
	addl	%edx,%ecx
	vpalignr	$8,%xmm1,%xmm2,%xmm5
	vpxor	%xmm7,%xmm3,%xmm3
	addl	48(%esp),%ebx
	xorl	%edi,%esi
	movl	%ecx,%ebp
	shldl	$5,%ecx,%ecx
	vpxor	%xmm4,%xmm3,%xmm3
	vmovdqa	%xmm7,80(%esp)
	addl	%esi,%ebx
	xorl	%edi,%ebp
	vmovdqa	%xmm6,%xmm7
	vpaddd	%xmm2,%xmm6,%xmm6
	shrdl	$7,%edx,%edx
	addl	%ecx,%ebx
	vpxor	%xmm5,%xmm3,%xmm3
	addl	52(%esp),%eax
	xorl	%edx,%ebp
	movl	%ebx,%esi
	shldl	$5,%ebx,%ebx
	vpsrld	$30,%xmm3,%xmm5
	vmovdqa	%xmm6,32(%esp)
	addl	%ebp,%eax
	xorl	%edx,%esi
	shrdl	$7,%ecx,%ecx
	addl	%ebx,%eax
	vpslld	$2,%xmm3,%xmm3
	addl	56(%esp),%edi
	xorl	%ecx,%esi
	movl	%eax,%ebp
	shldl	$5,%eax,%eax
	addl	%esi,%edi
	xorl	%ecx,%ebp
	shrdl	$7,%ebx,%ebx
	addl	%eax,%edi
	vpor	%xmm5,%xmm3,%xmm3
	addl	60(%esp),%edx
	xorl	%ebx,%ebp
	vmovdqa	96(%esp),%xmm5
	movl	%edi,%esi
	shldl	$5,%edi,%edi
	addl	%ebp,%edx
	xorl	%ebx,%esi
	shrdl	$7,%eax,%eax
	addl	%edi,%edx
	vpalignr	$8,%xmm2,%xmm3,%xmm6
	vpxor	%xmm0,%xmm4,%xmm4
	addl	(%esp),%ecx
	xorl	%eax,%esi
	movl	%edx,%ebp
	shldl	$5,%edx,%edx
	vpxor	%xmm5,%xmm4,%xmm4
	vmovdqa	%xmm0,96(%esp)
	addl	%esi,%ecx
	xorl	%eax,%ebp
	vmovdqa	%xmm7,%xmm0
	vpaddd	%xmm3,%xmm7,%xmm7
	shrdl	$7,%edi,%edi
	addl	%edx,%ecx
	vpxor	%xmm6,%xmm4,%xmm4
	addl	4(%esp),%ebx
	xorl	%edi,%ebp
	movl	%ecx,%esi
	shldl	$5,%ecx,%ecx
	vpsrld	$30,%xmm4,%xmm6
	vmovdqa	%xmm7,48(%esp)
	addl	%ebp,%ebx
	xorl	%edi,%esi
	shrdl	$7,%edx,%edx
	addl	%ecx,%ebx
	vpslld	$2,%xmm4,%xmm4
	addl	8(%esp),%eax
	xorl	%edx,%esi
	movl	%ebx,%ebp
	shldl	$5,%ebx,%ebx
	addl	%esi,%eax
	xorl	%edx,%ebp
	shrdl	$7,%ecx,%ecx
	addl	%ebx,%eax
	vpor	%xmm6,%xmm4,%xmm4
	addl	12(%esp),%edi
	xorl	%ecx,%ebp
	vmovdqa	64(%esp),%xmm6
	movl	%eax,%esi
	shldl	$5,%eax,%eax
	addl	%ebp,%edi
	xorl	%ecx,%esi
	shrdl	$7,%ebx,%ebx
	addl	%eax,%edi
	vpalignr	$8,%xmm3,%xmm4,%xmm7
	vpxor	%xmm1,%xmm5,%xmm5
	addl	16(%esp),%edx
	xorl	%ebx,%esi
	movl	%edi,%ebp
	shldl	$5,%edi,%edi
	vpxor	%xmm6,%xmm5,%xmm5
	vmovdqa	%xmm1,64(%esp)
	addl	%esi,%edx
	xorl	%ebx,%ebp
	vmovdqa	%xmm0,%xmm1
	vpaddd	%xmm4,%xmm0,%xmm0
	shrdl	$7,%eax,%eax
	addl	%edi,%edx
	vpxor	%xmm7,%xmm5,%xmm5
	addl	20(%esp),%ecx
	xorl	%eax,%ebp
	movl	%edx,%esi
	shldl	$5,%edx,%edx
	vpsrld	$30,%xmm5,%xmm7
	vmovdqa	%xmm0,(%esp)
	addl	%ebp,%ecx
	xorl	%eax,%esi
	shrdl	$7,%edi,%edi
	addl	%edx,%ecx
	vpslld	$2,%xmm5,%xmm5
	addl	24(%esp),%ebx
	xorl	%edi,%esi
	movl	%ecx,%ebp
	shldl	$5,%ecx,%ecx
	addl	%esi,%ebx
	xorl	%edi,%ebp
	shrdl	$7,%edx,%edx
	addl	%ecx,%ebx
	vpor	%xmm7,%xmm5,%xmm5
	addl	28(%esp),%eax
	vmovdqa	80(%esp),%xmm7
	shrdl	$7,%ecx,%ecx
	movl	%ebx,%esi
	xorl	%edx,%ebp
	shldl	$5,%ebx,%ebx
	addl	%ebp,%eax
	xorl	%ecx,%esi
	xorl	%edx,%ecx
	addl	%ebx,%eax
	vpalignr	$8,%xmm4,%xmm5,%xmm0
	vpxor	%xmm2,%xmm6,%xmm6
	addl	32(%esp),%edi
	andl	%ecx,%esi
	xorl	%edx,%ecx
	shrdl	$7,%ebx,%ebx
	vpxor	%xmm7,%xmm6,%xmm6
	vmovdqa	%xmm2,80(%esp)
	movl	%eax,%ebp
	xorl	%ecx,%esi
	vmovdqa	%xmm1,%xmm2
	vpaddd	%xmm5,%xmm1,%xmm1
	shldl	$5,%eax,%eax
	addl	%esi,%edi
	vpxor	%xmm0,%xmm6,%xmm6
	xorl	%ebx,%ebp
	xorl	%ecx,%ebx
	addl	%eax,%edi
	addl	36(%esp),%edx
	vpsrld	$30,%xmm6,%xmm0
	vmovdqa	%xmm1,16(%esp)
	andl	%ebx,%ebp
	xorl	%ecx,%ebx
	shrdl	$7,%eax,%eax
	movl	%edi,%esi
	vpslld	$2,%xmm6,%xmm6
	xorl	%ebx,%ebp
	shldl	$5,%edi,%edi
	addl	%ebp,%edx
	xorl	%eax,%esi
	xorl	%ebx,%eax
	addl	%edi,%edx
	addl	40(%esp),%ecx
	andl	%eax,%esi
	vpor	%xmm0,%xmm6,%xmm6
	xorl	%ebx,%eax
	shrdl	$7,%edi,%edi
	vmovdqa	96(%esp),%xmm0
	movl	%edx,%ebp
	xorl	%eax,%esi
	shldl	$5,%edx,%edx
	addl	%esi,%ecx
	xorl	%edi,%ebp
	xorl	%eax,%edi
	addl	%edx,%ecx
	addl	44(%esp),%ebx
	andl	%edi,%ebp
	xorl	%eax,%edi
	shrdl	$7,%edx,%edx
	movl	%ecx,%esi
	xorl	%edi,%ebp
	shldl	$5,%ecx,%ecx
	addl	%ebp,%ebx
	xorl	%edx,%esi
	xorl	%edi,%edx
	addl	%ecx,%ebx
	vpalignr	$8,%xmm5,%xmm6,%xmm1
	vpxor	%xmm3,%xmm7,%xmm7
	addl	48(%esp),%eax
	andl	%edx,%esi
	xorl	%edi,%edx
	shrdl	$7,%ecx,%ecx
	vpxor	%xmm0,%xmm7,%xmm7
	vmovdqa	%xmm3,96(%esp)
	movl	%ebx,%ebp
	xorl	%edx,%esi
	vmovdqa	144(%esp),%xmm3
	vpaddd	%xmm6,%xmm2,%xmm2
	shldl	$5,%ebx,%ebx
	addl	%esi,%eax
	vpxor	%xmm1,%xmm7,%xmm7
	xorl	%ecx,%ebp
	xorl	%edx,%ecx
	addl	%ebx,%eax
	addl	52(%esp),%edi
	vpsrld	$30,%xmm7,%xmm1
	vmovdqa	%xmm2,32(%esp)
	andl	%ecx,%ebp
	xorl	%edx,%ecx
	shrdl	$7,%ebx,%ebx
	movl	%eax,%esi
	vpslld	$2,%xmm7,%xmm7
	xorl	%ecx,%ebp
	shldl	$5,%eax,%eax
	addl	%ebp,%edi
	xorl	%ebx,%esi
	xorl	%ecx,%ebx
	addl	%eax,%edi
	addl	56(%esp),%edx
	andl	%ebx,%esi
	vpor	%xmm1,%xmm7,%xmm7
	xorl	%ecx,%ebx
	shrdl	$7,%eax,%eax
	vmovdqa	64(%esp),%xmm1
	movl	%edi,%ebp
	xorl	%ebx,%esi
	shldl	$5,%edi,%edi
	addl	%esi,%edx
	xorl	%eax,%ebp
	xorl	%ebx,%eax
	addl	%edi,%edx
	addl	60(%esp),%ecx
	andl	%eax,%ebp
	xorl	%ebx,%eax
	shrdl	$7,%edi,%edi
	movl	%edx,%esi
	xorl	%eax,%ebp
	shldl	$5,%edx,%edx
	addl	%ebp,%ecx
	xorl	%edi,%esi
	xorl	%eax,%edi
	addl	%edx,%ecx
	vpalignr	$8,%xmm6,%xmm7,%xmm2
	vpxor	%xmm4,%xmm0,%xmm0
	addl	(%esp),%ebx
	andl	%edi,%esi
	xorl	%eax,%edi
	shrdl	$7,%edx,%edx
	vpxor	%xmm1,%xmm0,%xmm0
	vmovdqa	%xmm4,64(%esp)
	movl	%ecx,%ebp
	xorl	%edi,%esi
	vmovdqa	%xmm3,%xmm4
	vpaddd	%xmm7,%xmm3,%xmm3
	shldl	$5,%ecx,%ecx
	addl	%esi,%ebx
	vpxor	%xmm2,%xmm0,%xmm0
	xorl	%edx,%ebp
	xorl	%edi,%edx
	addl	%ecx,%ebx
	addl	4(%esp),%eax
	vpsrld	$30,%xmm0,%xmm2
	vmovdqa	%xmm3,48(%esp)
	andl	%edx,%ebp
	xorl	%edi,%edx
	shrdl	$7,%ecx,%ecx
	movl	%ebx,%esi
	vpslld	$2,%xmm0,%xmm0
	xorl	%edx,%ebp
	shldl	$5,%ebx,%ebx
	addl	%ebp,%eax
	xorl	%ecx,%esi
	xorl	%edx,%ecx
	addl	%ebx,%eax
	addl	8(%esp),%edi
	andl	%ecx,%esi
	vpor	%xmm2,%xmm0,%xmm0
	xorl	%edx,%ecx
	shrdl	$7,%ebx,%ebx
	vmovdqa	80(%esp),%xmm2
	movl	%eax,%ebp
	xorl	%ecx,%esi
	shldl	$5,%eax,%eax
	addl	%esi,%edi
	xorl	%ebx,%ebp
	xorl	%ecx,%ebx
	addl	%eax,%edi
	addl	12(%esp),%edx
	andl	%ebx,%ebp
	xorl	%ecx,%ebx
	shrdl	$7,%eax,%eax
	movl	%edi,%esi
	xorl	%ebx,%ebp
	shldl	$5,%edi,%edi
	addl	%ebp,%edx
	xorl	%eax,%esi
	xorl	%ebx,%eax
	addl	%edi,%edx
	vpalignr	$8,%xmm7,%xmm0,%xmm3
	vpxor	%xmm5,%xmm1,%xmm1
	addl	16(%esp),%ecx
	andl	%eax,%esi
	xorl	%ebx,%eax
	shrdl	$7,%edi,%edi
	vpxor	%xmm2,%xmm1,%xmm1
	vmovdqa	%xmm5,80(%esp)
	movl	%edx,%ebp
	xorl	%eax,%esi
	vmovdqa	%xmm4,%xmm5
	vpaddd	%xmm0,%xmm4,%xmm4
	shldl	$5,%edx,%edx
	addl	%esi,%ecx
	vpxor	%xmm3,%xmm1,%xmm1
	xorl	%edi,%ebp
	xorl	%eax,%edi
	addl	%edx,%ecx
	addl	20(%esp),%ebx
	vpsrld	$30,%xmm1,%xmm3
	vmovdqa	%xmm4,(%esp)
	andl	%edi,%ebp
	xorl	%eax,%edi
	shrdl	$7,%edx,%edx
	movl	%ecx,%esi
	vpslld	$2,%xmm1,%xmm1
	xorl	%edi,%ebp
	shldl	$5,%ecx,%ecx
	addl	%ebp,%ebx
	xorl	%edx,%esi
	xorl	%edi,%edx
	addl	%ecx,%ebx
	addl	24(%esp),%eax
	andl	%edx,%esi
	vpor	%xmm3,%xmm1,%xmm1
	xorl	%edi,%edx
	shrdl	$7,%ecx,%ecx
	vmovdqa	96(%esp),%xmm3
	movl	%ebx,%ebp
	xorl	%edx,%esi
	shldl	$5,%ebx,%ebx
	addl	%esi,%eax
	xorl	%ecx,%ebp
	xorl	%edx,%ecx
	addl	%ebx,%eax
	addl	28(%esp),%edi
	andl	%ecx,%ebp
	xorl	%edx,%ecx
	shrdl	$7,%ebx,%ebx
	movl	%eax,%esi
	xorl	%ecx,%ebp
	shldl	$5,%eax,%eax
	addl	%ebp,%edi
	xorl	%ebx,%esi
	xorl	%ecx,%ebx
	addl	%eax,%edi
	vpalignr	$8,%xmm0,%xmm1,%xmm4
	vpxor	%xmm6,%xmm2,%xmm2
	addl	32(%esp),%edx
	andl	%ebx,%esi
	xorl	%ecx,%ebx
	shrdl	$7,%eax,%eax
	vpxor	%xmm3,%xmm2,%xmm2
	vmovdqa	%xmm6,96(%esp)
	movl	%edi,%ebp
	xorl	%ebx,%esi
	vmovdqa	%xmm5,%xmm6
	vpaddd	%xmm1,%xmm5,%xmm5
	shldl	$5,%edi,%edi
	addl	%esi,%edx
	vpxor	%xmm4,%xmm2,%xmm2
	xorl	%eax,%ebp
	xorl	%ebx,%eax
	addl	%edi,%edx
	addl	36(%esp),%ecx
	vpsrld	$30,%xmm2,%xmm4
	vmovdqa	%xmm5,16(%esp)
	andl	%eax,%ebp
	xorl	%ebx,%eax
	shrdl	$7,%edi,%edi
	movl	%edx,%esi
	vpslld	$2,%xmm2,%xmm2
	xorl	%eax,%ebp
	shldl	$5,%edx,%edx
	addl	%ebp,%ecx
	xorl	%edi,%esi
	xorl	%eax,%edi
	addl	%edx,%ecx
	addl	40(%esp),%ebx
	andl	%edi,%esi
	vpor	%xmm4,%xmm2,%xmm2
	xorl	%eax,%edi
	shrdl	$7,%edx,%edx
	vmovdqa	64(%esp),%xmm4
	movl	%ecx,%ebp
	xorl	%edi,%esi
	shldl	$5,%ecx,%ecx
	addl	%esi,%ebx
	xorl	%edx,%ebp
	xorl	%edi,%edx
	addl	%ecx,%ebx
	addl	44(%esp),%eax
	andl	%edx,%ebp
	xorl	%edi,%edx
	shrdl	$7,%ecx,%ecx
	movl	%ebx,%esi
	xorl	%edx,%ebp
	shldl	$5,%ebx,%ebx
	addl	%ebp,%eax
	xorl	%edx,%esi
	addl	%ebx,%eax
	vpalignr	$8,%xmm1,%xmm2,%xmm5
	vpxor	%xmm7,%xmm3,%xmm3
	addl	48(%esp),%edi
	xorl	%ecx,%esi
	movl	%eax,%ebp
	shldl	$5,%eax,%eax
	vpxor	%xmm4,%xmm3,%xmm3
	vmovdqa	%xmm7,64(%esp)
	addl	%esi,%edi
	xorl	%ecx,%ebp
	vmovdqa	%xmm6,%xmm7
	vpaddd	%xmm2,%xmm6,%xmm6
	shrdl	$7,%ebx,%ebx
	addl	%eax,%edi
	vpxor	%xmm5,%xmm3,%xmm3
	addl	52(%esp),%edx
	xorl	%ebx,%ebp
	movl	%edi,%esi
	shldl	$5,%edi,%edi
	vpsrld	$30,%xmm3,%xmm5
	vmovdqa	%xmm6,32(%esp)
	addl	%ebp,%edx
	xorl	%ebx,%esi
	shrdl	$7,%eax,%eax
	addl	%edi,%edx
	vpslld	$2,%xmm3,%xmm3
	addl	56(%esp),%ecx
	xorl	%eax,%esi
	movl	%edx,%ebp
	shldl	$5,%edx,%edx
	addl	%esi,%ecx
	xorl	%eax,%ebp
	shrdl	$7,%edi,%edi
	addl	%edx,%ecx
	vpor	%xmm5,%xmm3,%xmm3
	addl	60(%esp),%ebx
	xorl	%edi,%ebp
	movl	%ecx,%esi
	shldl	$5,%ecx,%ecx
	addl	%ebp,%ebx
	xorl	%edi,%esi
	shrdl	$7,%edx,%edx
	addl	%ecx,%ebx
	addl	(%esp),%eax
	vpaddd	%xmm3,%xmm7,%xmm7
	xorl	%edx,%esi
	movl	%ebx,%ebp
	shldl	$5,%ebx,%ebx
	addl	%esi,%eax
	vmovdqa	%xmm7,48(%esp)
	xorl	%edx,%ebp
	shrdl	$7,%ecx,%ecx
	addl	%ebx,%eax
	addl	4(%esp),%edi
	xorl	%ecx,%ebp
	movl	%eax,%esi
	shldl	$5,%eax,%eax
	addl	%ebp,%edi
	xorl	%ecx,%esi
	shrdl	$7,%ebx,%ebx
	addl	%eax,%edi
	addl	8(%esp),%edx
	xorl	%ebx,%esi
	movl	%edi,%ebp
	shldl	$5,%edi,%edi
	addl	%esi,%edx
	xorl	%ebx,%ebp
	shrdl	$7,%eax,%eax
	addl	%edi,%edx
	addl	12(%esp),%ecx
	xorl	%eax,%ebp
	movl	%edx,%esi
	shldl	$5,%edx,%edx
	addl	%ebp,%ecx
	xorl	%eax,%esi
	shrdl	$7,%edi,%edi
	addl	%edx,%ecx
	movl	196(%esp),%ebp
	cmpl	200(%esp),%ebp
	je	.L010done
	vmovdqa	160(%esp),%xmm7
	vmovdqa	176(%esp),%xmm6
	vmovdqu	(%ebp),%xmm0
	vmovdqu	16(%ebp),%xmm1
	vmovdqu	32(%ebp),%xmm2
	vmovdqu	48(%ebp),%xmm3
	addl	$64,%ebp
	vpshufb	%xmm6,%xmm0,%xmm0
	movl	%ebp,196(%esp)
	vmovdqa	%xmm7,96(%esp)
	addl	16(%esp),%ebx
	xorl	%edi,%esi
	vpshufb	%xmm6,%xmm1,%xmm1
	movl	%ecx,%ebp
	shldl	$5,%ecx,%ecx
	vpaddd	%xmm7,%xmm0,%xmm4
	addl	%esi,%ebx
	xorl	%edi,%ebp
	shrdl	$7,%edx,%edx
	addl	%ecx,%ebx
	vmovdqa	%xmm4,(%esp)
	addl	20(%esp),%eax
	xorl	%edx,%ebp
	movl	%ebx,%esi
	shldl	$5,%ebx,%ebx
	addl	%ebp,%eax
	xorl	%edx,%esi
	shrdl	$7,%ecx,%ecx
	addl	%ebx,%eax
	addl	24(%esp),%edi
	xorl	%ecx,%esi
	movl	%eax,%ebp
	shldl	$5,%eax,%eax
	addl	%esi,%edi
	xorl	%ecx,%ebp
	shrdl	$7,%ebx,%ebx
	addl	%eax,%edi
	addl	28(%esp),%edx
	xorl	%ebx,%ebp
	movl	%edi,%esi
	shldl	$5,%edi,%edi
	addl	%ebp,%edx
	xorl	%ebx,%esi
	shrdl	$7,%eax,%eax
	addl	%edi,%edx
	addl	32(%esp),%ecx
	xorl	%eax,%esi
	vpshufb	%xmm6,%xmm2,%xmm2
	movl	%edx,%ebp
	shldl	$5,%edx,%edx
	vpaddd	%xmm7,%xmm1,%xmm5
	addl	%esi,%ecx
	xorl	%eax,%ebp
	shrdl	$7,%edi,%edi
	addl	%edx,%ecx
	vmovdqa	%xmm5,16(%esp)
	addl	36(%esp),%ebx
	xorl	%edi,%ebp
	movl	%ecx,%esi
	shldl	$5,%ecx,%ecx
	addl	%ebp,%ebx
	xorl	%edi,%esi
	shrdl	$7,%edx,%edx
	addl	%ecx,%ebx
	addl	40(%esp),%eax
	xorl	%edx,%esi
	movl	%ebx,%ebp
	shldl	$5,%ebx,%ebx
	addl	%esi,%eax
	xorl	%edx,%ebp
	shrdl	$7,%ecx,%ecx
	addl	%ebx,%eax
	addl	44(%esp),%edi
	xorl	%ecx,%ebp
	movl	%eax,%esi
	shldl	$5,%eax,%eax
	addl	%ebp,%edi
	xorl	%ecx,%esi
	shrdl	$7,%ebx,%ebx
	addl	%eax,%edi
	addl	48(%esp),%edx
	xorl	%ebx,%esi
	vpshufb	%xmm6,%xmm3,%xmm3
	movl	%edi,%ebp
	shldl	$5,%edi,%edi
	vpaddd	%xmm7,%xmm2,%xmm6
	addl	%esi,%edx
	xorl	%ebx,%ebp
	shrdl	$7,%eax,%eax
	addl	%edi,%edx
	vmovdqa	%xmm6,32(%esp)
	addl	52(%esp),%ecx
	xorl	%eax,%ebp
	movl	%edx,%esi
	shldl	$5,%edx,%edx
	addl	%ebp,%ecx
	xorl	%eax,%esi
	shrdl	$7,%edi,%edi
	addl	%edx,%ecx
	addl	56(%esp),%ebx
	xorl	%edi,%esi
	movl	%ecx,%ebp
	shldl	$5,%ecx,%ecx
	addl	%esi,%ebx
	xorl	%edi,%ebp
	shrdl	$7,%edx,%edx
	addl	%ecx,%ebx
	addl	60(%esp),%eax
	xorl	%edx,%ebp
	movl	%ebx,%esi
	shldl	$5,%ebx,%ebx
	addl	%ebp,%eax
	shrdl	$7,%ecx,%ecx
	addl	%ebx,%eax
	movl	192(%esp),%ebp
	addl	(%ebp),%eax
	addl	4(%ebp),%esi
	addl	8(%ebp),%ecx
	movl	%eax,(%ebp)
	addl	12(%ebp),%edx
	movl	%esi,4(%ebp)
	addl	16(%ebp),%edi
	movl	%ecx,%ebx
	movl	%ecx,8(%ebp)
	xorl	%edx,%ebx
	movl	%edx,12(%ebp)
	movl	%edi,16(%ebp)
	movl	%esi,%ebp
	andl	%ebx,%esi
	movl	%ebp,%ebx
	jmp	.L009loop
.align	16
.L010done:
	addl	16(%esp),%ebx
	xorl	%edi,%esi
	movl	%ecx,%ebp
	shldl	$5,%ecx,%ecx
	addl	%esi,%ebx
	xorl	%edi,%ebp
	shrdl	$7,%edx,%edx
	addl	%ecx,%ebx
	addl	20(%esp),%eax
	xorl	%edx,%ebp
	movl	%ebx,%esi
	shldl	$5,%ebx,%ebx
	addl	%ebp,%eax
	xorl	%edx,%esi
	shrdl	$7,%ecx,%ecx
	addl	%ebx,%eax
	addl	24(%esp),%edi
	xorl	%ecx,%esi
	movl	%eax,%ebp
	shldl	$5,%eax,%eax
	addl	%esi,%edi
	xorl	%ecx,%ebp
	shrdl	$7,%ebx,%ebx
	addl	%eax,%edi
	addl	28(%esp),%edx
	xorl	%ebx,%ebp
	movl	%edi,%esi
	shldl	$5,%edi,%edi
	addl	%ebp,%edx
	xorl	%ebx,%esi
	shrdl	$7,%eax,%eax
	addl	%edi,%edx
	addl	32(%esp),%ecx
	xorl	%eax,%esi
	movl	%edx,%ebp
	shldl	$5,%edx,%edx
	addl	%esi,%ecx
	xorl	%eax,%ebp
	shrdl	$7,%edi,%edi
	addl	%edx,%ecx
	addl	36(%esp),%ebx
	xorl	%edi,%ebp
	movl	%ecx,%esi
	shldl	$5,%ecx,%ecx
	addl	%ebp,%ebx
	xorl	%edi,%esi
	shrdl	$7,%edx,%edx
	addl	%ecx,%ebx
	addl	40(%esp),%eax
	xorl	%edx,%esi
	movl	%ebx,%ebp
	shldl	$5,%ebx,%ebx
	addl	%esi,%eax
	xorl	%edx,%ebp
	shrdl	$7,%ecx,%ecx
	addl	%ebx,%eax
	addl	44(%esp),%edi
	xorl	%ecx,%ebp
	movl	%eax,%esi
	shldl	$5,%eax,%eax
	addl	%ebp,%edi
	xorl	%ecx,%esi
	shrdl	$7,%ebx,%ebx
	addl	%eax,%edi
	addl	48(%esp),%edx
	xorl	%ebx,%esi
	movl	%edi,%ebp
	shldl	$5,%edi,%edi
	addl	%esi,%edx
	xorl	%ebx,%ebp
	shrdl	$7,%eax,%eax
	addl	%edi,%edx
	addl	52(%esp),%ecx
	xorl	%eax,%ebp
	movl	%edx,%esi
	shldl	$5,%edx,%edx
	addl	%ebp,%ecx
	xorl	%eax,%esi
	shrdl	$7,%edi,%edi
	addl	%edx,%ecx
	addl	56(%esp),%ebx
	xorl	%edi,%esi
	movl	%ecx,%ebp
	shldl	$5,%ecx,%ecx
	addl	%esi,%ebx
	xorl	%edi,%ebp
	shrdl	$7,%edx,%edx
	addl	%ecx,%ebx
	addl	60(%esp),%eax
	xorl	%edx,%ebp
	movl	%ebx,%esi
	shldl	$5,%ebx,%ebx
	addl	%ebp,%eax
	shrdl	$7,%ecx,%ecx
	addl	%ebx,%eax
	vzeroall
	movl	192(%esp),%ebp
	addl	(%ebp),%eax
	movl	204(%esp),%esp
	addl	4(%ebp),%esi
	addl	8(%ebp),%ecx
	movl	%eax,(%ebp)
	addl	12(%ebp),%edx
	movl	%esi,4(%ebp)
	addl	16(%ebp),%edi
	movl	%ecx,8(%ebp)
	movl	%edx,12(%ebp)
	movl	%edi,16(%ebp)
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	_sha1_block_data_order_avx,.-_sha1_block_data_order_avx
.align	64
.LK_XX_XX:
.long	1518500249,1518500249,1518500249,1518500249
.long	1859775393,1859775393,1859775393,1859775393
.long	2400959708,2400959708,2400959708,2400959708
.long	3395469782,3395469782,3395469782,3395469782
.long	66051,67438087,134810123,202182159
.byte	15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
.byte	83,72,65,49,32,98,108,111,99,107,32,116,114,97,110,115
.byte	102,111,114,109,32,102,111,114,32,120,56,54,44,32,67,82
.byte	89,80,84,79,71,65,77,83,32,98,121,32,60,97,112,112
.byte	114,111,64,111,112,101,110,115,115,108,46,111,114,103,62,0
.comm	OPENSSL_ia32cap_P,16,4

	.section ".note.gnu.property", "a"
	.p2align 2
	.long 1f - 0f
	.long 4f - 1f
	.long 5
0:
	.asciz "GNU"
1:
	.p2align 2
	.long 0xc0000002
	.long 3f - 2f
2:
	.long 3
3:
	.p2align 2
4:
                                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/sha/sha256-586.S                         0000664 0000000 0000000 00000356740 14746647661 0026011 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        .text
.globl	sha256_block_data_order
.type	sha256_block_data_order,@function
.align	16
sha256_block_data_order:
.L_sha256_block_data_order_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%esi
	movl	24(%esp),%edi
	movl	28(%esp),%eax
	movl	%esp,%ebx
	call	.L000pic_point
.L000pic_point:
	popl	%ebp
	leal	.L001K256-.L000pic_point(%ebp),%ebp
	subl	$16,%esp
	andl	$-64,%esp
	shll	$6,%eax
	addl	%edi,%eax
	movl	%esi,(%esp)
	movl	%edi,4(%esp)
	movl	%eax,8(%esp)
	movl	%ebx,12(%esp)
	leal	OPENSSL_ia32cap_P-.L001K256(%ebp),%edx
	movl	(%edx),%ecx
	movl	4(%edx),%ebx
	testl	$1048576,%ecx
	jnz	.L002loop
	movl	8(%edx),%edx
	testl	$16777216,%ecx
	jz	.L003no_xmm
	andl	$1073741824,%ecx
	andl	$268435968,%ebx
	testl	$536870912,%edx
	jnz	.L004shaext
	orl	%ebx,%ecx
	andl	$1342177280,%ecx
	cmpl	$1342177280,%ecx
	je	.L005AVX
	testl	$512,%ebx
	jnz	.L006SSSE3
.L003no_xmm:
	subl	%edi,%eax
	cmpl	$256,%eax
	jae	.L007unrolled
	jmp	.L002loop
.align	16
.L002loop:
	movl	(%edi),%eax
	movl	4(%edi),%ebx
	movl	8(%edi),%ecx
	bswap	%eax
	movl	12(%edi),%edx
	bswap	%ebx
	pushl	%eax
	bswap	%ecx
	pushl	%ebx
	bswap	%edx
	pushl	%ecx
	pushl	%edx
	movl	16(%edi),%eax
	movl	20(%edi),%ebx
	movl	24(%edi),%ecx
	bswap	%eax
	movl	28(%edi),%edx
	bswap	%ebx
	pushl	%eax
	bswap	%ecx
	pushl	%ebx
	bswap	%edx
	pushl	%ecx
	pushl	%edx
	movl	32(%edi),%eax
	movl	36(%edi),%ebx
	movl	40(%edi),%ecx
	bswap	%eax
	movl	44(%edi),%edx
	bswap	%ebx
	pushl	%eax
	bswap	%ecx
	pushl	%ebx
	bswap	%edx
	pushl	%ecx
	pushl	%edx
	movl	48(%edi),%eax
	movl	52(%edi),%ebx
	movl	56(%edi),%ecx
	bswap	%eax
	movl	60(%edi),%edx
	bswap	%ebx
	pushl	%eax
	bswap	%ecx
	pushl	%ebx
	bswap	%edx
	pushl	%ecx
	pushl	%edx
	addl	$64,%edi
	leal	-36(%esp),%esp
	movl	%edi,104(%esp)
	movl	(%esi),%eax
	movl	4(%esi),%ebx
	movl	8(%esi),%ecx
	movl	12(%esi),%edi
	movl	%ebx,8(%esp)
	xorl	%ecx,%ebx
	movl	%ecx,12(%esp)
	movl	%edi,16(%esp)
	movl	%ebx,(%esp)
	movl	16(%esi),%edx
	movl	20(%esi),%ebx
	movl	24(%esi),%ecx
	movl	28(%esi),%edi
	movl	%ebx,24(%esp)
	movl	%ecx,28(%esp)
	movl	%edi,32(%esp)
.align	16
.L00800_15:
	movl	%edx,%ecx
	movl	24(%esp),%esi
	rorl	$14,%ecx
	movl	28(%esp),%edi
	xorl	%edx,%ecx
	xorl	%edi,%esi
	movl	96(%esp),%ebx
	rorl	$5,%ecx
	andl	%edx,%esi
	movl	%edx,20(%esp)
	xorl	%ecx,%edx
	addl	32(%esp),%ebx
	xorl	%edi,%esi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%esi,%ebx
	rorl	$9,%ecx
	addl	%edx,%ebx
	movl	8(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,4(%esp)
	leal	-4(%esp),%esp
	rorl	$11,%ecx
	movl	(%ebp),%esi
	xorl	%eax,%ecx
	movl	20(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	addl	%esi,%ebx
	movl	%eax,(%esp)
	addl	%ebx,%edx
	andl	4(%esp),%eax
	addl	%ecx,%ebx
	xorl	%edi,%eax
	addl	$4,%ebp
	addl	%ebx,%eax
	cmpl	$3248222580,%esi
	jne	.L00800_15
	movl	156(%esp),%ecx
	jmp	.L00916_63
.align	16
.L00916_63:
	movl	%ecx,%ebx
	movl	104(%esp),%esi
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	160(%esp),%ebx
	shrl	$10,%edi
	addl	124(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	24(%esp),%esi
	rorl	$14,%ecx
	addl	%edi,%ebx
	movl	28(%esp),%edi
	xorl	%edx,%ecx
	xorl	%edi,%esi
	movl	%ebx,96(%esp)
	rorl	$5,%ecx
	andl	%edx,%esi
	movl	%edx,20(%esp)
	xorl	%ecx,%edx
	addl	32(%esp),%ebx
	xorl	%edi,%esi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%esi,%ebx
	rorl	$9,%ecx
	addl	%edx,%ebx
	movl	8(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,4(%esp)
	leal	-4(%esp),%esp
	rorl	$11,%ecx
	movl	(%ebp),%esi
	xorl	%eax,%ecx
	movl	20(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	addl	%esi,%ebx
	movl	%eax,(%esp)
	addl	%ebx,%edx
	andl	4(%esp),%eax
	addl	%ecx,%ebx
	xorl	%edi,%eax
	movl	156(%esp),%ecx
	addl	$4,%ebp
	addl	%ebx,%eax
	cmpl	$3329325298,%esi
	jne	.L00916_63
	movl	356(%esp),%esi
	movl	8(%esp),%ebx
	movl	16(%esp),%ecx
	addl	(%esi),%eax
	addl	4(%esi),%ebx
	addl	8(%esi),%edi
	addl	12(%esi),%ecx
	movl	%eax,(%esi)
	movl	%ebx,4(%esi)
	movl	%edi,8(%esi)
	movl	%ecx,12(%esi)
	movl	24(%esp),%eax
	movl	28(%esp),%ebx
	movl	32(%esp),%ecx
	movl	360(%esp),%edi
	addl	16(%esi),%edx
	addl	20(%esi),%eax
	addl	24(%esi),%ebx
	addl	28(%esi),%ecx
	movl	%edx,16(%esi)
	movl	%eax,20(%esi)
	movl	%ebx,24(%esi)
	movl	%ecx,28(%esi)
	leal	356(%esp),%esp
	subl	$256,%ebp
	cmpl	8(%esp),%edi
	jb	.L002loop
	movl	12(%esp),%esp
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.align	64
.L001K256:
.long	1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298
.long	66051,67438087,134810123,202182159
.byte	83,72,65,50,53,54,32,98,108,111,99,107,32,116,114,97
.byte	110,115,102,111,114,109,32,102,111,114,32,120,56,54,44,32
.byte	67,82,89,80,84,79,71,65,77,83,32,98,121,32,60,97
.byte	112,112,114,111,64,111,112,101,110,115,115,108,46,111,114,103
.byte	62,0
.align	16
.L007unrolled:
	leal	-96(%esp),%esp
	movl	(%esi),%eax
	movl	4(%esi),%ebp
	movl	8(%esi),%ecx
	movl	12(%esi),%ebx
	movl	%ebp,4(%esp)
	xorl	%ecx,%ebp
	movl	%ecx,8(%esp)
	movl	%ebx,12(%esp)
	movl	16(%esi),%edx
	movl	20(%esi),%ebx
	movl	24(%esi),%ecx
	movl	28(%esi),%esi
	movl	%ebx,20(%esp)
	movl	%ecx,24(%esp)
	movl	%esi,28(%esp)
	jmp	.L010grand_loop
.align	16
.L010grand_loop:
	movl	(%edi),%ebx
	movl	4(%edi),%ecx
	bswap	%ebx
	movl	8(%edi),%esi
	bswap	%ecx
	movl	%ebx,32(%esp)
	bswap	%esi
	movl	%ecx,36(%esp)
	movl	%esi,40(%esp)
	movl	12(%edi),%ebx
	movl	16(%edi),%ecx
	bswap	%ebx
	movl	20(%edi),%esi
	bswap	%ecx
	movl	%ebx,44(%esp)
	bswap	%esi
	movl	%ecx,48(%esp)
	movl	%esi,52(%esp)
	movl	24(%edi),%ebx
	movl	28(%edi),%ecx
	bswap	%ebx
	movl	32(%edi),%esi
	bswap	%ecx
	movl	%ebx,56(%esp)
	bswap	%esi
	movl	%ecx,60(%esp)
	movl	%esi,64(%esp)
	movl	36(%edi),%ebx
	movl	40(%edi),%ecx
	bswap	%ebx
	movl	44(%edi),%esi
	bswap	%ecx
	movl	%ebx,68(%esp)
	bswap	%esi
	movl	%ecx,72(%esp)
	movl	%esi,76(%esp)
	movl	48(%edi),%ebx
	movl	52(%edi),%ecx
	bswap	%ebx
	movl	56(%edi),%esi
	bswap	%ecx
	movl	%ebx,80(%esp)
	bswap	%esi
	movl	%ecx,84(%esp)
	movl	%esi,88(%esp)
	movl	60(%edi),%ebx
	addl	$64,%edi
	bswap	%ebx
	movl	%edi,100(%esp)
	movl	%ebx,92(%esp)
	movl	%edx,%ecx
	movl	20(%esp),%esi
	rorl	$14,%edx
	movl	24(%esp),%edi
	xorl	%ecx,%edx
	movl	32(%esp),%ebx
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,16(%esp)
	xorl	%ecx,%edx
	addl	28(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	4(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	1116352408(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	12(%esp),%edx
	addl	%ecx,%ebp
	movl	%edx,%esi
	movl	16(%esp),%ecx
	rorl	$14,%edx
	movl	20(%esp),%edi
	xorl	%esi,%edx
	movl	36(%esp),%ebx
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,12(%esp)
	xorl	%esi,%edx
	addl	24(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,28(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	1899447441(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	rorl	$2,%esi
	addl	%edx,%eax
	addl	8(%esp),%edx
	addl	%esi,%eax
	movl	%edx,%ecx
	movl	12(%esp),%esi
	rorl	$14,%edx
	movl	16(%esp),%edi
	xorl	%ecx,%edx
	movl	40(%esp),%ebx
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,8(%esp)
	xorl	%ecx,%edx
	addl	20(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	28(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,24(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	3049323471(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	4(%esp),%edx
	addl	%ecx,%ebp
	movl	%edx,%esi
	movl	8(%esp),%ecx
	rorl	$14,%edx
	movl	12(%esp),%edi
	xorl	%esi,%edx
	movl	44(%esp),%ebx
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,4(%esp)
	xorl	%esi,%edx
	addl	16(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	24(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,20(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	3921009573(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	rorl	$2,%esi
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%esi,%eax
	movl	%edx,%ecx
	movl	4(%esp),%esi
	rorl	$14,%edx
	movl	8(%esp),%edi
	xorl	%ecx,%edx
	movl	48(%esp),%ebx
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,(%esp)
	xorl	%ecx,%edx
	addl	12(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	20(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,16(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	961987163(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	28(%esp),%edx
	addl	%ecx,%ebp
	movl	%edx,%esi
	movl	(%esp),%ecx
	rorl	$14,%edx
	movl	4(%esp),%edi
	xorl	%esi,%edx
	movl	52(%esp),%ebx
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,28(%esp)
	xorl	%esi,%edx
	addl	8(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	16(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,12(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	1508970993(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	rorl	$2,%esi
	addl	%edx,%eax
	addl	24(%esp),%edx
	addl	%esi,%eax
	movl	%edx,%ecx
	movl	28(%esp),%esi
	rorl	$14,%edx
	movl	(%esp),%edi
	xorl	%ecx,%edx
	movl	56(%esp),%ebx
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,24(%esp)
	xorl	%ecx,%edx
	addl	4(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	12(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,8(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	2453635748(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	20(%esp),%edx
	addl	%ecx,%ebp
	movl	%edx,%esi
	movl	24(%esp),%ecx
	rorl	$14,%edx
	movl	28(%esp),%edi
	xorl	%esi,%edx
	movl	60(%esp),%ebx
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,20(%esp)
	xorl	%esi,%edx
	addl	(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	8(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,4(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	2870763221(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	rorl	$2,%esi
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%esi,%eax
	movl	%edx,%ecx
	movl	20(%esp),%esi
	rorl	$14,%edx
	movl	24(%esp),%edi
	xorl	%ecx,%edx
	movl	64(%esp),%ebx
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,16(%esp)
	xorl	%ecx,%edx
	addl	28(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	4(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	3624381080(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	12(%esp),%edx
	addl	%ecx,%ebp
	movl	%edx,%esi
	movl	16(%esp),%ecx
	rorl	$14,%edx
	movl	20(%esp),%edi
	xorl	%esi,%edx
	movl	68(%esp),%ebx
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,12(%esp)
	xorl	%esi,%edx
	addl	24(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,28(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	310598401(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	rorl	$2,%esi
	addl	%edx,%eax
	addl	8(%esp),%edx
	addl	%esi,%eax
	movl	%edx,%ecx
	movl	12(%esp),%esi
	rorl	$14,%edx
	movl	16(%esp),%edi
	xorl	%ecx,%edx
	movl	72(%esp),%ebx
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,8(%esp)
	xorl	%ecx,%edx
	addl	20(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	28(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,24(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	607225278(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	4(%esp),%edx
	addl	%ecx,%ebp
	movl	%edx,%esi
	movl	8(%esp),%ecx
	rorl	$14,%edx
	movl	12(%esp),%edi
	xorl	%esi,%edx
	movl	76(%esp),%ebx
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,4(%esp)
	xorl	%esi,%edx
	addl	16(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	24(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,20(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	1426881987(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	rorl	$2,%esi
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%esi,%eax
	movl	%edx,%ecx
	movl	4(%esp),%esi
	rorl	$14,%edx
	movl	8(%esp),%edi
	xorl	%ecx,%edx
	movl	80(%esp),%ebx
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,(%esp)
	xorl	%ecx,%edx
	addl	12(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	20(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,16(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	1925078388(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	28(%esp),%edx
	addl	%ecx,%ebp
	movl	%edx,%esi
	movl	(%esp),%ecx
	rorl	$14,%edx
	movl	4(%esp),%edi
	xorl	%esi,%edx
	movl	84(%esp),%ebx
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,28(%esp)
	xorl	%esi,%edx
	addl	8(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	16(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,12(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	2162078206(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	rorl	$2,%esi
	addl	%edx,%eax
	addl	24(%esp),%edx
	addl	%esi,%eax
	movl	%edx,%ecx
	movl	28(%esp),%esi
	rorl	$14,%edx
	movl	(%esp),%edi
	xorl	%ecx,%edx
	movl	88(%esp),%ebx
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,24(%esp)
	xorl	%ecx,%edx
	addl	4(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	12(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,8(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	2614888103(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	20(%esp),%edx
	addl	%ecx,%ebp
	movl	%edx,%esi
	movl	24(%esp),%ecx
	rorl	$14,%edx
	movl	28(%esp),%edi
	xorl	%esi,%edx
	movl	92(%esp),%ebx
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,20(%esp)
	xorl	%esi,%edx
	addl	(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	8(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,4(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	3248222580(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	36(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%esi,%eax
	movl	88(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	32(%esp),%ebx
	shrl	$10,%edi
	addl	68(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	20(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	24(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,32(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,16(%esp)
	xorl	%ecx,%edx
	addl	28(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	4(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	3835390401(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	40(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	12(%esp),%edx
	addl	%ecx,%ebp
	movl	92(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	36(%esp),%ebx
	shrl	$10,%edi
	addl	72(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	16(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	20(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,36(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,12(%esp)
	xorl	%esi,%edx
	addl	24(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,28(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	4022224774(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	44(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	8(%esp),%edx
	addl	%esi,%eax
	movl	32(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	40(%esp),%ebx
	shrl	$10,%edi
	addl	76(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	12(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	16(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,40(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,8(%esp)
	xorl	%ecx,%edx
	addl	20(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	28(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,24(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	264347078(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	48(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	4(%esp),%edx
	addl	%ecx,%ebp
	movl	36(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	44(%esp),%ebx
	shrl	$10,%edi
	addl	80(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	8(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	12(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,44(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,4(%esp)
	xorl	%esi,%edx
	addl	16(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	24(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,20(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	604807628(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	52(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%esi,%eax
	movl	40(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	48(%esp),%ebx
	shrl	$10,%edi
	addl	84(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	4(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	8(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,48(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,(%esp)
	xorl	%ecx,%edx
	addl	12(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	20(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,16(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	770255983(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	56(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	28(%esp),%edx
	addl	%ecx,%ebp
	movl	44(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	52(%esp),%ebx
	shrl	$10,%edi
	addl	88(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	4(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,52(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,28(%esp)
	xorl	%esi,%edx
	addl	8(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	16(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,12(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	1249150122(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	60(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	24(%esp),%edx
	addl	%esi,%eax
	movl	48(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	56(%esp),%ebx
	shrl	$10,%edi
	addl	92(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	28(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,56(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,24(%esp)
	xorl	%ecx,%edx
	addl	4(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	12(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,8(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	1555081692(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	64(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	20(%esp),%edx
	addl	%ecx,%ebp
	movl	52(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	60(%esp),%ebx
	shrl	$10,%edi
	addl	32(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	24(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	28(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,60(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,20(%esp)
	xorl	%esi,%edx
	addl	(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	8(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,4(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	1996064986(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	68(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%esi,%eax
	movl	56(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	64(%esp),%ebx
	shrl	$10,%edi
	addl	36(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	20(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	24(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,64(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,16(%esp)
	xorl	%ecx,%edx
	addl	28(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	4(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	2554220882(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	72(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	12(%esp),%edx
	addl	%ecx,%ebp
	movl	60(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	68(%esp),%ebx
	shrl	$10,%edi
	addl	40(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	16(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	20(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,68(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,12(%esp)
	xorl	%esi,%edx
	addl	24(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,28(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	2821834349(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	76(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	8(%esp),%edx
	addl	%esi,%eax
	movl	64(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	72(%esp),%ebx
	shrl	$10,%edi
	addl	44(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	12(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	16(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,72(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,8(%esp)
	xorl	%ecx,%edx
	addl	20(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	28(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,24(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	2952996808(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	80(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	4(%esp),%edx
	addl	%ecx,%ebp
	movl	68(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	76(%esp),%ebx
	shrl	$10,%edi
	addl	48(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	8(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	12(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,76(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,4(%esp)
	xorl	%esi,%edx
	addl	16(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	24(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,20(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	3210313671(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	84(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%esi,%eax
	movl	72(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	80(%esp),%ebx
	shrl	$10,%edi
	addl	52(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	4(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	8(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,80(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,(%esp)
	xorl	%ecx,%edx
	addl	12(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	20(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,16(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	3336571891(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	88(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	28(%esp),%edx
	addl	%ecx,%ebp
	movl	76(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	84(%esp),%ebx
	shrl	$10,%edi
	addl	56(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	4(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,84(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,28(%esp)
	xorl	%esi,%edx
	addl	8(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	16(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,12(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	3584528711(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	92(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	24(%esp),%edx
	addl	%esi,%eax
	movl	80(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	88(%esp),%ebx
	shrl	$10,%edi
	addl	60(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	28(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,88(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,24(%esp)
	xorl	%ecx,%edx
	addl	4(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	12(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,8(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	113926993(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	32(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	20(%esp),%edx
	addl	%ecx,%ebp
	movl	84(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	92(%esp),%ebx
	shrl	$10,%edi
	addl	64(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	24(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	28(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,92(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,20(%esp)
	xorl	%esi,%edx
	addl	(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	8(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,4(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	338241895(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	36(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%esi,%eax
	movl	88(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	32(%esp),%ebx
	shrl	$10,%edi
	addl	68(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	20(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	24(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,32(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,16(%esp)
	xorl	%ecx,%edx
	addl	28(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	4(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	666307205(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	40(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	12(%esp),%edx
	addl	%ecx,%ebp
	movl	92(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	36(%esp),%ebx
	shrl	$10,%edi
	addl	72(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	16(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	20(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,36(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,12(%esp)
	xorl	%esi,%edx
	addl	24(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,28(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	773529912(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	44(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	8(%esp),%edx
	addl	%esi,%eax
	movl	32(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	40(%esp),%ebx
	shrl	$10,%edi
	addl	76(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	12(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	16(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,40(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,8(%esp)
	xorl	%ecx,%edx
	addl	20(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	28(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,24(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	1294757372(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	48(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	4(%esp),%edx
	addl	%ecx,%ebp
	movl	36(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	44(%esp),%ebx
	shrl	$10,%edi
	addl	80(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	8(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	12(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,44(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,4(%esp)
	xorl	%esi,%edx
	addl	16(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	24(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,20(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	1396182291(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	52(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%esi,%eax
	movl	40(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	48(%esp),%ebx
	shrl	$10,%edi
	addl	84(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	4(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	8(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,48(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,(%esp)
	xorl	%ecx,%edx
	addl	12(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	20(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,16(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	1695183700(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	56(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	28(%esp),%edx
	addl	%ecx,%ebp
	movl	44(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	52(%esp),%ebx
	shrl	$10,%edi
	addl	88(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	4(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,52(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,28(%esp)
	xorl	%esi,%edx
	addl	8(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	16(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,12(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	1986661051(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	60(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	24(%esp),%edx
	addl	%esi,%eax
	movl	48(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	56(%esp),%ebx
	shrl	$10,%edi
	addl	92(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	28(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,56(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,24(%esp)
	xorl	%ecx,%edx
	addl	4(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	12(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,8(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	2177026350(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	64(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	20(%esp),%edx
	addl	%ecx,%ebp
	movl	52(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	60(%esp),%ebx
	shrl	$10,%edi
	addl	32(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	24(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	28(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,60(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,20(%esp)
	xorl	%esi,%edx
	addl	(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	8(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,4(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	2456956037(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	68(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%esi,%eax
	movl	56(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	64(%esp),%ebx
	shrl	$10,%edi
	addl	36(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	20(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	24(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,64(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,16(%esp)
	xorl	%ecx,%edx
	addl	28(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	4(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	2730485921(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	72(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	12(%esp),%edx
	addl	%ecx,%ebp
	movl	60(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	68(%esp),%ebx
	shrl	$10,%edi
	addl	40(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	16(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	20(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,68(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,12(%esp)
	xorl	%esi,%edx
	addl	24(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,28(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	2820302411(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	76(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	8(%esp),%edx
	addl	%esi,%eax
	movl	64(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	72(%esp),%ebx
	shrl	$10,%edi
	addl	44(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	12(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	16(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,72(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,8(%esp)
	xorl	%ecx,%edx
	addl	20(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	28(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,24(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	3259730800(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	80(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	4(%esp),%edx
	addl	%ecx,%ebp
	movl	68(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	76(%esp),%ebx
	shrl	$10,%edi
	addl	48(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	8(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	12(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,76(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,4(%esp)
	xorl	%esi,%edx
	addl	16(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	24(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,20(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	3345764771(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	84(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%esi,%eax
	movl	72(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	80(%esp),%ebx
	shrl	$10,%edi
	addl	52(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	4(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	8(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,80(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,(%esp)
	xorl	%ecx,%edx
	addl	12(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	20(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,16(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	3516065817(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	88(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	28(%esp),%edx
	addl	%ecx,%ebp
	movl	76(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	84(%esp),%ebx
	shrl	$10,%edi
	addl	56(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	4(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,84(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,28(%esp)
	xorl	%esi,%edx
	addl	8(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	16(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,12(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	3600352804(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	92(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	24(%esp),%edx
	addl	%esi,%eax
	movl	80(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	88(%esp),%ebx
	shrl	$10,%edi
	addl	60(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	28(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,88(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,24(%esp)
	xorl	%ecx,%edx
	addl	4(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	12(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,8(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	4094571909(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	32(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	20(%esp),%edx
	addl	%ecx,%ebp
	movl	84(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	92(%esp),%ebx
	shrl	$10,%edi
	addl	64(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	24(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	28(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,92(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,20(%esp)
	xorl	%esi,%edx
	addl	(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	8(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,4(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	275423344(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	36(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%esi,%eax
	movl	88(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	32(%esp),%ebx
	shrl	$10,%edi
	addl	68(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	20(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	24(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,32(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,16(%esp)
	xorl	%ecx,%edx
	addl	28(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	4(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	430227734(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	40(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	12(%esp),%edx
	addl	%ecx,%ebp
	movl	92(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	36(%esp),%ebx
	shrl	$10,%edi
	addl	72(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	16(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	20(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,36(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,12(%esp)
	xorl	%esi,%edx
	addl	24(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,28(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	506948616(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	44(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	8(%esp),%edx
	addl	%esi,%eax
	movl	32(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	40(%esp),%ebx
	shrl	$10,%edi
	addl	76(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	12(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	16(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,40(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,8(%esp)
	xorl	%ecx,%edx
	addl	20(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	28(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,24(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	659060556(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	48(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	4(%esp),%edx
	addl	%ecx,%ebp
	movl	36(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	44(%esp),%ebx
	shrl	$10,%edi
	addl	80(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	8(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	12(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,44(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,4(%esp)
	xorl	%esi,%edx
	addl	16(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	24(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,20(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	883997877(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	52(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%esi,%eax
	movl	40(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	48(%esp),%ebx
	shrl	$10,%edi
	addl	84(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	4(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	8(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,48(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,(%esp)
	xorl	%ecx,%edx
	addl	12(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	20(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,16(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	958139571(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	56(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	28(%esp),%edx
	addl	%ecx,%ebp
	movl	44(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	52(%esp),%ebx
	shrl	$10,%edi
	addl	88(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	4(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,52(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,28(%esp)
	xorl	%esi,%edx
	addl	8(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	16(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,12(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	1322822218(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	60(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	24(%esp),%edx
	addl	%esi,%eax
	movl	48(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	56(%esp),%ebx
	shrl	$10,%edi
	addl	92(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	28(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,56(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,24(%esp)
	xorl	%ecx,%edx
	addl	4(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	12(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,8(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	1537002063(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	64(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	20(%esp),%edx
	addl	%ecx,%ebp
	movl	52(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	60(%esp),%ebx
	shrl	$10,%edi
	addl	32(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	24(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	28(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,60(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,20(%esp)
	xorl	%esi,%edx
	addl	(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	8(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,4(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	1747873779(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	68(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%esi,%eax
	movl	56(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	64(%esp),%ebx
	shrl	$10,%edi
	addl	36(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	20(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	24(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,64(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,16(%esp)
	xorl	%ecx,%edx
	addl	28(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	4(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	1955562222(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	72(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	12(%esp),%edx
	addl	%ecx,%ebp
	movl	60(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	68(%esp),%ebx
	shrl	$10,%edi
	addl	40(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	16(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	20(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,68(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,12(%esp)
	xorl	%esi,%edx
	addl	24(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,28(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	2024104815(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	76(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	8(%esp),%edx
	addl	%esi,%eax
	movl	64(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	72(%esp),%ebx
	shrl	$10,%edi
	addl	44(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	12(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	16(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,72(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,8(%esp)
	xorl	%ecx,%edx
	addl	20(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	28(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,24(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	2227730452(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	80(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	4(%esp),%edx
	addl	%ecx,%ebp
	movl	68(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	76(%esp),%ebx
	shrl	$10,%edi
	addl	48(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	8(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	12(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,76(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,4(%esp)
	xorl	%esi,%edx
	addl	16(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	24(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,20(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	2361852424(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	84(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%esi,%eax
	movl	72(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	80(%esp),%ebx
	shrl	$10,%edi
	addl	52(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	4(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	8(%esp),%edi
	xorl	%ecx,%edx
	movl	%ebx,80(%esp)
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,(%esp)
	xorl	%ecx,%edx
	addl	12(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	20(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,16(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	2428436474(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	88(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	28(%esp),%edx
	addl	%ecx,%ebp
	movl	76(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	84(%esp),%ebx
	shrl	$10,%edi
	addl	56(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	4(%esp),%edi
	xorl	%esi,%edx
	movl	%ebx,84(%esp)
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,28(%esp)
	xorl	%esi,%edx
	addl	8(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	16(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,12(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	2756734187(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	movl	92(%esp),%ecx
	rorl	$2,%esi
	addl	%edx,%eax
	addl	24(%esp),%edx
	addl	%esi,%eax
	movl	80(%esp),%esi
	movl	%ecx,%ebx
	rorl	$11,%ecx
	movl	%esi,%edi
	rorl	$2,%esi
	xorl	%ebx,%ecx
	shrl	$3,%ebx
	rorl	$7,%ecx
	xorl	%edi,%esi
	xorl	%ecx,%ebx
	rorl	$17,%esi
	addl	88(%esp),%ebx
	shrl	$10,%edi
	addl	60(%esp),%ebx
	movl	%edx,%ecx
	xorl	%esi,%edi
	movl	28(%esp),%esi
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	(%esp),%edi
	xorl	%ecx,%edx
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,24(%esp)
	xorl	%ecx,%edx
	addl	4(%esp),%ebx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%ebx
	rorl	$9,%ecx
	movl	%eax,%esi
	movl	12(%esp),%edi
	xorl	%eax,%ecx
	movl	%eax,8(%esp)
	xorl	%edi,%eax
	rorl	$11,%ecx
	andl	%eax,%ebp
	leal	3204031479(%ebx,%edx,1),%edx
	xorl	%esi,%ecx
	xorl	%edi,%ebp
	movl	32(%esp),%esi
	rorl	$2,%ecx
	addl	%edx,%ebp
	addl	20(%esp),%edx
	addl	%ecx,%ebp
	movl	84(%esp),%ecx
	movl	%esi,%ebx
	rorl	$11,%esi
	movl	%ecx,%edi
	rorl	$2,%ecx
	xorl	%ebx,%esi
	shrl	$3,%ebx
	rorl	$7,%esi
	xorl	%edi,%ecx
	xorl	%esi,%ebx
	rorl	$17,%ecx
	addl	92(%esp),%ebx
	shrl	$10,%edi
	addl	64(%esp),%ebx
	movl	%edx,%esi
	xorl	%ecx,%edi
	movl	24(%esp),%ecx
	rorl	$14,%edx
	addl	%edi,%ebx
	movl	28(%esp),%edi
	xorl	%esi,%edx
	xorl	%edi,%ecx
	rorl	$5,%edx
	andl	%esi,%ecx
	movl	%esi,20(%esp)
	xorl	%esi,%edx
	addl	(%esp),%ebx
	xorl	%ecx,%edi
	rorl	$6,%edx
	movl	%ebp,%esi
	addl	%edi,%ebx
	rorl	$9,%esi
	movl	%ebp,%ecx
	movl	8(%esp),%edi
	xorl	%ebp,%esi
	movl	%ebp,4(%esp)
	xorl	%edi,%ebp
	rorl	$11,%esi
	andl	%ebp,%eax
	leal	3329325298(%ebx,%edx,1),%edx
	xorl	%ecx,%esi
	xorl	%edi,%eax
	rorl	$2,%esi
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%esi,%eax
	movl	96(%esp),%esi
	xorl	%edi,%ebp
	movl	12(%esp),%ecx
	addl	(%esi),%eax
	addl	4(%esi),%ebp
	addl	8(%esi),%edi
	addl	12(%esi),%ecx
	movl	%eax,(%esi)
	movl	%ebp,4(%esi)
	movl	%edi,8(%esi)
	movl	%ecx,12(%esi)
	movl	%ebp,4(%esp)
	xorl	%edi,%ebp
	movl	%edi,8(%esp)
	movl	%ecx,12(%esp)
	movl	20(%esp),%edi
	movl	24(%esp),%ebx
	movl	28(%esp),%ecx
	addl	16(%esi),%edx
	addl	20(%esi),%edi
	addl	24(%esi),%ebx
	addl	28(%esi),%ecx
	movl	%edx,16(%esi)
	movl	%edi,20(%esi)
	movl	%ebx,24(%esi)
	movl	%ecx,28(%esi)
	movl	%edi,20(%esp)
	movl	100(%esp),%edi
	movl	%ebx,24(%esp)
	movl	%ecx,28(%esp)
	cmpl	104(%esp),%edi
	jb	.L010grand_loop
	movl	108(%esp),%esp
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.align	32
.L004shaext:
	subl	$32,%esp
	movdqu	(%esi),%xmm1
	leal	128(%ebp),%ebp
	movdqu	16(%esi),%xmm2
	movdqa	128(%ebp),%xmm7
	pshufd	$27,%xmm1,%xmm0
	pshufd	$177,%xmm1,%xmm1
	pshufd	$27,%xmm2,%xmm2
.byte	102,15,58,15,202,8
	punpcklqdq	%xmm0,%xmm2
	jmp	.L011loop_shaext
.align	16
.L011loop_shaext:
	movdqu	(%edi),%xmm3
	movdqu	16(%edi),%xmm4
	movdqu	32(%edi),%xmm5
.byte	102,15,56,0,223
	movdqu	48(%edi),%xmm6
	movdqa	%xmm2,16(%esp)
	movdqa	-128(%ebp),%xmm0
	paddd	%xmm3,%xmm0
.byte	102,15,56,0,231
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
	nop
	movdqa	%xmm1,(%esp)
.byte	15,56,203,202
	movdqa	-112(%ebp),%xmm0
	paddd	%xmm4,%xmm0
.byte	102,15,56,0,239
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
	leal	64(%edi),%edi
.byte	15,56,204,220
.byte	15,56,203,202
	movdqa	-96(%ebp),%xmm0
	paddd	%xmm5,%xmm0
.byte	102,15,56,0,247
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
	movdqa	%xmm6,%xmm7
.byte	102,15,58,15,253,4
	nop
	paddd	%xmm7,%xmm3
.byte	15,56,204,229
.byte	15,56,203,202
	movdqa	-80(%ebp),%xmm0
	paddd	%xmm6,%xmm0
.byte	15,56,205,222
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
	movdqa	%xmm3,%xmm7
.byte	102,15,58,15,254,4
	nop
	paddd	%xmm7,%xmm4
.byte	15,56,204,238
.byte	15,56,203,202
	movdqa	-64(%ebp),%xmm0
	paddd	%xmm3,%xmm0
.byte	15,56,205,227
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
	movdqa	%xmm4,%xmm7
.byte	102,15,58,15,251,4
	nop
	paddd	%xmm7,%xmm5
.byte	15,56,204,243
.byte	15,56,203,202
	movdqa	-48(%ebp),%xmm0
	paddd	%xmm4,%xmm0
.byte	15,56,205,236
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
	movdqa	%xmm5,%xmm7
.byte	102,15,58,15,252,4
	nop
	paddd	%xmm7,%xmm6
.byte	15,56,204,220
.byte	15,56,203,202
	movdqa	-32(%ebp),%xmm0
	paddd	%xmm5,%xmm0
.byte	15,56,205,245
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
	movdqa	%xmm6,%xmm7
.byte	102,15,58,15,253,4
	nop
	paddd	%xmm7,%xmm3
.byte	15,56,204,229
.byte	15,56,203,202
	movdqa	-16(%ebp),%xmm0
	paddd	%xmm6,%xmm0
.byte	15,56,205,222
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
	movdqa	%xmm3,%xmm7
.byte	102,15,58,15,254,4
	nop
	paddd	%xmm7,%xmm4
.byte	15,56,204,238
.byte	15,56,203,202
	movdqa	(%ebp),%xmm0
	paddd	%xmm3,%xmm0
.byte	15,56,205,227
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
	movdqa	%xmm4,%xmm7
.byte	102,15,58,15,251,4
	nop
	paddd	%xmm7,%xmm5
.byte	15,56,204,243
.byte	15,56,203,202
	movdqa	16(%ebp),%xmm0
	paddd	%xmm4,%xmm0
.byte	15,56,205,236
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
	movdqa	%xmm5,%xmm7
.byte	102,15,58,15,252,4
	nop
	paddd	%xmm7,%xmm6
.byte	15,56,204,220
.byte	15,56,203,202
	movdqa	32(%ebp),%xmm0
	paddd	%xmm5,%xmm0
.byte	15,56,205,245
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
	movdqa	%xmm6,%xmm7
.byte	102,15,58,15,253,4
	nop
	paddd	%xmm7,%xmm3
.byte	15,56,204,229
.byte	15,56,203,202
	movdqa	48(%ebp),%xmm0
	paddd	%xmm6,%xmm0
.byte	15,56,205,222
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
	movdqa	%xmm3,%xmm7
.byte	102,15,58,15,254,4
	nop
	paddd	%xmm7,%xmm4
.byte	15,56,204,238
.byte	15,56,203,202
	movdqa	64(%ebp),%xmm0
	paddd	%xmm3,%xmm0
.byte	15,56,205,227
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
	movdqa	%xmm4,%xmm7
.byte	102,15,58,15,251,4
	nop
	paddd	%xmm7,%xmm5
.byte	15,56,204,243
.byte	15,56,203,202
	movdqa	80(%ebp),%xmm0
	paddd	%xmm4,%xmm0
.byte	15,56,205,236
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
	movdqa	%xmm5,%xmm7
.byte	102,15,58,15,252,4
.byte	15,56,203,202
	paddd	%xmm7,%xmm6
	movdqa	96(%ebp),%xmm0
	paddd	%xmm5,%xmm0
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
.byte	15,56,205,245
	movdqa	128(%ebp),%xmm7
.byte	15,56,203,202
	movdqa	112(%ebp),%xmm0
	paddd	%xmm6,%xmm0
	nop
.byte	15,56,203,209
	pshufd	$14,%xmm0,%xmm0
	cmpl	%edi,%eax
	nop
.byte	15,56,203,202
	paddd	16(%esp),%xmm2
	paddd	(%esp),%xmm1
	jnz	.L011loop_shaext
	pshufd	$177,%xmm2,%xmm2
	pshufd	$27,%xmm1,%xmm7
	pshufd	$177,%xmm1,%xmm1
	punpckhqdq	%xmm2,%xmm1
.byte	102,15,58,15,215,8
	movl	44(%esp),%esp
	movdqu	%xmm1,(%esi)
	movdqu	%xmm2,16(%esi)
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.align	32
.L006SSSE3:
	leal	-96(%esp),%esp
	movl	(%esi),%eax
	movl	4(%esi),%ebx
	movl	8(%esi),%ecx
	movl	12(%esi),%edi
	movl	%ebx,4(%esp)
	xorl	%ecx,%ebx
	movl	%ecx,8(%esp)
	movl	%edi,12(%esp)
	movl	16(%esi),%edx
	movl	20(%esi),%edi
	movl	24(%esi),%ecx
	movl	28(%esi),%esi
	movl	%edi,20(%esp)
	movl	100(%esp),%edi
	movl	%ecx,24(%esp)
	movl	%esi,28(%esp)
	movdqa	256(%ebp),%xmm7
	jmp	.L012grand_ssse3
.align	16
.L012grand_ssse3:
	movdqu	(%edi),%xmm0
	movdqu	16(%edi),%xmm1
	movdqu	32(%edi),%xmm2
	movdqu	48(%edi),%xmm3
	addl	$64,%edi
.byte	102,15,56,0,199
	movl	%edi,100(%esp)
.byte	102,15,56,0,207
	movdqa	(%ebp),%xmm4
.byte	102,15,56,0,215
	movdqa	16(%ebp),%xmm5
	paddd	%xmm0,%xmm4
.byte	102,15,56,0,223
	movdqa	32(%ebp),%xmm6
	paddd	%xmm1,%xmm5
	movdqa	48(%ebp),%xmm7
	movdqa	%xmm4,32(%esp)
	paddd	%xmm2,%xmm6
	movdqa	%xmm5,48(%esp)
	paddd	%xmm3,%xmm7
	movdqa	%xmm6,64(%esp)
	movdqa	%xmm7,80(%esp)
	jmp	.L013ssse3_00_47
.align	16
.L013ssse3_00_47:
	addl	$64,%ebp
	movl	%edx,%ecx
	movdqa	%xmm1,%xmm4
	rorl	$14,%edx
	movl	20(%esp),%esi
	movdqa	%xmm3,%xmm7
	xorl	%ecx,%edx
	movl	24(%esp),%edi
.byte	102,15,58,15,224,4
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
.byte	102,15,58,15,250,4
	movl	%ecx,16(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	movdqa	%xmm4,%xmm5
	rorl	$6,%edx
	movl	%eax,%ecx
	movdqa	%xmm4,%xmm6
	addl	%edi,%edx
	movl	4(%esp),%edi
	psrld	$3,%xmm4
	movl	%eax,%esi
	rorl	$9,%ecx
	paddd	%xmm7,%xmm0
	movl	%eax,(%esp)
	xorl	%eax,%ecx
	psrld	$7,%xmm6
	xorl	%edi,%eax
	addl	28(%esp),%edx
	rorl	$11,%ecx
	andl	%eax,%ebx
	pshufd	$250,%xmm3,%xmm7
	xorl	%esi,%ecx
	addl	32(%esp),%edx
	pslld	$14,%xmm5
	xorl	%edi,%ebx
	rorl	$2,%ecx
	pxor	%xmm6,%xmm4
	addl	%edx,%ebx
	addl	12(%esp),%edx
	psrld	$11,%xmm6
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	pxor	%xmm5,%xmm4
	movl	16(%esp),%esi
	xorl	%ecx,%edx
	pslld	$11,%xmm5
	movl	20(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	pxor	%xmm6,%xmm4
	andl	%ecx,%esi
	movl	%ecx,12(%esp)
	movdqa	%xmm7,%xmm6
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	pxor	%xmm5,%xmm4
	movl	%ebx,%ecx
	addl	%edi,%edx
	psrld	$10,%xmm7
	movl	(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	paddd	%xmm4,%xmm0
	movl	%ebx,28(%esp)
	xorl	%ebx,%ecx
	psrlq	$17,%xmm6
	xorl	%edi,%ebx
	addl	24(%esp),%edx
	rorl	$11,%ecx
	pxor	%xmm6,%xmm7
	andl	%ebx,%eax
	xorl	%esi,%ecx
	psrlq	$2,%xmm6
	addl	36(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	pxor	%xmm6,%xmm7
	addl	%edx,%eax
	addl	8(%esp),%edx
	pshufd	$128,%xmm7,%xmm7
	addl	%ecx,%eax
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	12(%esp),%esi
	xorl	%ecx,%edx
	movl	16(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	psrldq	$8,%xmm7
	movl	%ecx,8(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	paddd	%xmm7,%xmm0
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	28(%esp),%edi
	movl	%eax,%esi
	rorl	$9,%ecx
	movl	%eax,24(%esp)
	pshufd	$80,%xmm0,%xmm7
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	20(%esp),%edx
	movdqa	%xmm7,%xmm6
	rorl	$11,%ecx
	psrld	$10,%xmm7
	andl	%eax,%ebx
	psrlq	$17,%xmm6
	xorl	%esi,%ecx
	addl	40(%esp),%edx
	xorl	%edi,%ebx
	rorl	$2,%ecx
	pxor	%xmm6,%xmm7
	addl	%edx,%ebx
	addl	4(%esp),%edx
	psrlq	$2,%xmm6
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	pxor	%xmm6,%xmm7
	movl	8(%esp),%esi
	xorl	%ecx,%edx
	movl	12(%esp),%edi
	pshufd	$8,%xmm7,%xmm7
	xorl	%edi,%esi
	rorl	$5,%edx
	movdqa	(%ebp),%xmm6
	andl	%ecx,%esi
	movl	%ecx,4(%esp)
	pslldq	$8,%xmm7
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	24(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	paddd	%xmm7,%xmm0
	movl	%ebx,20(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	16(%esp),%edx
	paddd	%xmm0,%xmm6
	rorl	$11,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	44(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%ecx,%eax
	movdqa	%xmm6,32(%esp)
	movl	%edx,%ecx
	movdqa	%xmm2,%xmm4
	rorl	$14,%edx
	movl	4(%esp),%esi
	movdqa	%xmm0,%xmm7
	xorl	%ecx,%edx
	movl	8(%esp),%edi
.byte	102,15,58,15,225,4
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
.byte	102,15,58,15,251,4
	movl	%ecx,(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	movdqa	%xmm4,%xmm5
	rorl	$6,%edx
	movl	%eax,%ecx
	movdqa	%xmm4,%xmm6
	addl	%edi,%edx
	movl	20(%esp),%edi
	psrld	$3,%xmm4
	movl	%eax,%esi
	rorl	$9,%ecx
	paddd	%xmm7,%xmm1
	movl	%eax,16(%esp)
	xorl	%eax,%ecx
	psrld	$7,%xmm6
	xorl	%edi,%eax
	addl	12(%esp),%edx
	rorl	$11,%ecx
	andl	%eax,%ebx
	pshufd	$250,%xmm0,%xmm7
	xorl	%esi,%ecx
	addl	48(%esp),%edx
	pslld	$14,%xmm5
	xorl	%edi,%ebx
	rorl	$2,%ecx
	pxor	%xmm6,%xmm4
	addl	%edx,%ebx
	addl	28(%esp),%edx
	psrld	$11,%xmm6
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	pxor	%xmm5,%xmm4
	movl	(%esp),%esi
	xorl	%ecx,%edx
	pslld	$11,%xmm5
	movl	4(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	pxor	%xmm6,%xmm4
	andl	%ecx,%esi
	movl	%ecx,28(%esp)
	movdqa	%xmm7,%xmm6
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	pxor	%xmm5,%xmm4
	movl	%ebx,%ecx
	addl	%edi,%edx
	psrld	$10,%xmm7
	movl	16(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	paddd	%xmm4,%xmm1
	movl	%ebx,12(%esp)
	xorl	%ebx,%ecx
	psrlq	$17,%xmm6
	xorl	%edi,%ebx
	addl	8(%esp),%edx
	rorl	$11,%ecx
	pxor	%xmm6,%xmm7
	andl	%ebx,%eax
	xorl	%esi,%ecx
	psrlq	$2,%xmm6
	addl	52(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	pxor	%xmm6,%xmm7
	addl	%edx,%eax
	addl	24(%esp),%edx
	pshufd	$128,%xmm7,%xmm7
	addl	%ecx,%eax
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	28(%esp),%esi
	xorl	%ecx,%edx
	movl	(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	psrldq	$8,%xmm7
	movl	%ecx,24(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	paddd	%xmm7,%xmm1
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	12(%esp),%edi
	movl	%eax,%esi
	rorl	$9,%ecx
	movl	%eax,8(%esp)
	pshufd	$80,%xmm1,%xmm7
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	4(%esp),%edx
	movdqa	%xmm7,%xmm6
	rorl	$11,%ecx
	psrld	$10,%xmm7
	andl	%eax,%ebx
	psrlq	$17,%xmm6
	xorl	%esi,%ecx
	addl	56(%esp),%edx
	xorl	%edi,%ebx
	rorl	$2,%ecx
	pxor	%xmm6,%xmm7
	addl	%edx,%ebx
	addl	20(%esp),%edx
	psrlq	$2,%xmm6
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	pxor	%xmm6,%xmm7
	movl	24(%esp),%esi
	xorl	%ecx,%edx
	movl	28(%esp),%edi
	pshufd	$8,%xmm7,%xmm7
	xorl	%edi,%esi
	rorl	$5,%edx
	movdqa	16(%ebp),%xmm6
	andl	%ecx,%esi
	movl	%ecx,20(%esp)
	pslldq	$8,%xmm7
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	8(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	paddd	%xmm7,%xmm1
	movl	%ebx,4(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	(%esp),%edx
	paddd	%xmm1,%xmm6
	rorl	$11,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	60(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%ecx,%eax
	movdqa	%xmm6,48(%esp)
	movl	%edx,%ecx
	movdqa	%xmm3,%xmm4
	rorl	$14,%edx
	movl	20(%esp),%esi
	movdqa	%xmm1,%xmm7
	xorl	%ecx,%edx
	movl	24(%esp),%edi
.byte	102,15,58,15,226,4
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
.byte	102,15,58,15,248,4
	movl	%ecx,16(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	movdqa	%xmm4,%xmm5
	rorl	$6,%edx
	movl	%eax,%ecx
	movdqa	%xmm4,%xmm6
	addl	%edi,%edx
	movl	4(%esp),%edi
	psrld	$3,%xmm4
	movl	%eax,%esi
	rorl	$9,%ecx
	paddd	%xmm7,%xmm2
	movl	%eax,(%esp)
	xorl	%eax,%ecx
	psrld	$7,%xmm6
	xorl	%edi,%eax
	addl	28(%esp),%edx
	rorl	$11,%ecx
	andl	%eax,%ebx
	pshufd	$250,%xmm1,%xmm7
	xorl	%esi,%ecx
	addl	64(%esp),%edx
	pslld	$14,%xmm5
	xorl	%edi,%ebx
	rorl	$2,%ecx
	pxor	%xmm6,%xmm4
	addl	%edx,%ebx
	addl	12(%esp),%edx
	psrld	$11,%xmm6
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	pxor	%xmm5,%xmm4
	movl	16(%esp),%esi
	xorl	%ecx,%edx
	pslld	$11,%xmm5
	movl	20(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	pxor	%xmm6,%xmm4
	andl	%ecx,%esi
	movl	%ecx,12(%esp)
	movdqa	%xmm7,%xmm6
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	pxor	%xmm5,%xmm4
	movl	%ebx,%ecx
	addl	%edi,%edx
	psrld	$10,%xmm7
	movl	(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	paddd	%xmm4,%xmm2
	movl	%ebx,28(%esp)
	xorl	%ebx,%ecx
	psrlq	$17,%xmm6
	xorl	%edi,%ebx
	addl	24(%esp),%edx
	rorl	$11,%ecx
	pxor	%xmm6,%xmm7
	andl	%ebx,%eax
	xorl	%esi,%ecx
	psrlq	$2,%xmm6
	addl	68(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	pxor	%xmm6,%xmm7
	addl	%edx,%eax
	addl	8(%esp),%edx
	pshufd	$128,%xmm7,%xmm7
	addl	%ecx,%eax
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	12(%esp),%esi
	xorl	%ecx,%edx
	movl	16(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	psrldq	$8,%xmm7
	movl	%ecx,8(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	paddd	%xmm7,%xmm2
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	28(%esp),%edi
	movl	%eax,%esi
	rorl	$9,%ecx
	movl	%eax,24(%esp)
	pshufd	$80,%xmm2,%xmm7
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	20(%esp),%edx
	movdqa	%xmm7,%xmm6
	rorl	$11,%ecx
	psrld	$10,%xmm7
	andl	%eax,%ebx
	psrlq	$17,%xmm6
	xorl	%esi,%ecx
	addl	72(%esp),%edx
	xorl	%edi,%ebx
	rorl	$2,%ecx
	pxor	%xmm6,%xmm7
	addl	%edx,%ebx
	addl	4(%esp),%edx
	psrlq	$2,%xmm6
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	pxor	%xmm6,%xmm7
	movl	8(%esp),%esi
	xorl	%ecx,%edx
	movl	12(%esp),%edi
	pshufd	$8,%xmm7,%xmm7
	xorl	%edi,%esi
	rorl	$5,%edx
	movdqa	32(%ebp),%xmm6
	andl	%ecx,%esi
	movl	%ecx,4(%esp)
	pslldq	$8,%xmm7
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	24(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	paddd	%xmm7,%xmm2
	movl	%ebx,20(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	16(%esp),%edx
	paddd	%xmm2,%xmm6
	rorl	$11,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	76(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%ecx,%eax
	movdqa	%xmm6,64(%esp)
	movl	%edx,%ecx
	movdqa	%xmm0,%xmm4
	rorl	$14,%edx
	movl	4(%esp),%esi
	movdqa	%xmm2,%xmm7
	xorl	%ecx,%edx
	movl	8(%esp),%edi
.byte	102,15,58,15,227,4
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
.byte	102,15,58,15,249,4
	movl	%ecx,(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	movdqa	%xmm4,%xmm5
	rorl	$6,%edx
	movl	%eax,%ecx
	movdqa	%xmm4,%xmm6
	addl	%edi,%edx
	movl	20(%esp),%edi
	psrld	$3,%xmm4
	movl	%eax,%esi
	rorl	$9,%ecx
	paddd	%xmm7,%xmm3
	movl	%eax,16(%esp)
	xorl	%eax,%ecx
	psrld	$7,%xmm6
	xorl	%edi,%eax
	addl	12(%esp),%edx
	rorl	$11,%ecx
	andl	%eax,%ebx
	pshufd	$250,%xmm2,%xmm7
	xorl	%esi,%ecx
	addl	80(%esp),%edx
	pslld	$14,%xmm5
	xorl	%edi,%ebx
	rorl	$2,%ecx
	pxor	%xmm6,%xmm4
	addl	%edx,%ebx
	addl	28(%esp),%edx
	psrld	$11,%xmm6
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	pxor	%xmm5,%xmm4
	movl	(%esp),%esi
	xorl	%ecx,%edx
	pslld	$11,%xmm5
	movl	4(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	pxor	%xmm6,%xmm4
	andl	%ecx,%esi
	movl	%ecx,28(%esp)
	movdqa	%xmm7,%xmm6
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	pxor	%xmm5,%xmm4
	movl	%ebx,%ecx
	addl	%edi,%edx
	psrld	$10,%xmm7
	movl	16(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	paddd	%xmm4,%xmm3
	movl	%ebx,12(%esp)
	xorl	%ebx,%ecx
	psrlq	$17,%xmm6
	xorl	%edi,%ebx
	addl	8(%esp),%edx
	rorl	$11,%ecx
	pxor	%xmm6,%xmm7
	andl	%ebx,%eax
	xorl	%esi,%ecx
	psrlq	$2,%xmm6
	addl	84(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	pxor	%xmm6,%xmm7
	addl	%edx,%eax
	addl	24(%esp),%edx
	pshufd	$128,%xmm7,%xmm7
	addl	%ecx,%eax
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	28(%esp),%esi
	xorl	%ecx,%edx
	movl	(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	psrldq	$8,%xmm7
	movl	%ecx,24(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	paddd	%xmm7,%xmm3
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	12(%esp),%edi
	movl	%eax,%esi
	rorl	$9,%ecx
	movl	%eax,8(%esp)
	pshufd	$80,%xmm3,%xmm7
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	4(%esp),%edx
	movdqa	%xmm7,%xmm6
	rorl	$11,%ecx
	psrld	$10,%xmm7
	andl	%eax,%ebx
	psrlq	$17,%xmm6
	xorl	%esi,%ecx
	addl	88(%esp),%edx
	xorl	%edi,%ebx
	rorl	$2,%ecx
	pxor	%xmm6,%xmm7
	addl	%edx,%ebx
	addl	20(%esp),%edx
	psrlq	$2,%xmm6
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	pxor	%xmm6,%xmm7
	movl	24(%esp),%esi
	xorl	%ecx,%edx
	movl	28(%esp),%edi
	pshufd	$8,%xmm7,%xmm7
	xorl	%edi,%esi
	rorl	$5,%edx
	movdqa	48(%ebp),%xmm6
	andl	%ecx,%esi
	movl	%ecx,20(%esp)
	pslldq	$8,%xmm7
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	8(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	paddd	%xmm7,%xmm3
	movl	%ebx,4(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	(%esp),%edx
	paddd	%xmm3,%xmm6
	rorl	$11,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	92(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%ecx,%eax
	movdqa	%xmm6,80(%esp)
	cmpl	$66051,64(%ebp)
	jne	.L013ssse3_00_47
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	20(%esp),%esi
	xorl	%ecx,%edx
	movl	24(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,16(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	4(%esp),%edi
	movl	%eax,%esi
	rorl	$9,%ecx
	movl	%eax,(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	28(%esp),%edx
	rorl	$11,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	32(%esp),%edx
	xorl	%edi,%ebx
	rorl	$2,%ecx
	addl	%edx,%ebx
	addl	12(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	16(%esp),%esi
	xorl	%ecx,%edx
	movl	20(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,12(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	movl	%ebx,28(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	24(%esp),%edx
	rorl	$11,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	36(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	addl	%edx,%eax
	addl	8(%esp),%edx
	addl	%ecx,%eax
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	12(%esp),%esi
	xorl	%ecx,%edx
	movl	16(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,8(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	28(%esp),%edi
	movl	%eax,%esi
	rorl	$9,%ecx
	movl	%eax,24(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	20(%esp),%edx
	rorl	$11,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	40(%esp),%edx
	xorl	%edi,%ebx
	rorl	$2,%ecx
	addl	%edx,%ebx
	addl	4(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	8(%esp),%esi
	xorl	%ecx,%edx
	movl	12(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,4(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	24(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	movl	%ebx,20(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	16(%esp),%edx
	rorl	$11,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	44(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%ecx,%eax
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	4(%esp),%esi
	xorl	%ecx,%edx
	movl	8(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	20(%esp),%edi
	movl	%eax,%esi
	rorl	$9,%ecx
	movl	%eax,16(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	12(%esp),%edx
	rorl	$11,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	48(%esp),%edx
	xorl	%edi,%ebx
	rorl	$2,%ecx
	addl	%edx,%ebx
	addl	28(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	(%esp),%esi
	xorl	%ecx,%edx
	movl	4(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,28(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	16(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	movl	%ebx,12(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	8(%esp),%edx
	rorl	$11,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	52(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	addl	%edx,%eax
	addl	24(%esp),%edx
	addl	%ecx,%eax
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	28(%esp),%esi
	xorl	%ecx,%edx
	movl	(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,24(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	12(%esp),%edi
	movl	%eax,%esi
	rorl	$9,%ecx
	movl	%eax,8(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	4(%esp),%edx
	rorl	$11,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	56(%esp),%edx
	xorl	%edi,%ebx
	rorl	$2,%ecx
	addl	%edx,%ebx
	addl	20(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	24(%esp),%esi
	xorl	%ecx,%edx
	movl	28(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,20(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	8(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	movl	%ebx,4(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	(%esp),%edx
	rorl	$11,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	60(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%ecx,%eax
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	20(%esp),%esi
	xorl	%ecx,%edx
	movl	24(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,16(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	4(%esp),%edi
	movl	%eax,%esi
	rorl	$9,%ecx
	movl	%eax,(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	28(%esp),%edx
	rorl	$11,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	64(%esp),%edx
	xorl	%edi,%ebx
	rorl	$2,%ecx
	addl	%edx,%ebx
	addl	12(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	16(%esp),%esi
	xorl	%ecx,%edx
	movl	20(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,12(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	movl	%ebx,28(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	24(%esp),%edx
	rorl	$11,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	68(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	addl	%edx,%eax
	addl	8(%esp),%edx
	addl	%ecx,%eax
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	12(%esp),%esi
	xorl	%ecx,%edx
	movl	16(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,8(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	28(%esp),%edi
	movl	%eax,%esi
	rorl	$9,%ecx
	movl	%eax,24(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	20(%esp),%edx
	rorl	$11,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	72(%esp),%edx
	xorl	%edi,%ebx
	rorl	$2,%ecx
	addl	%edx,%ebx
	addl	4(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	8(%esp),%esi
	xorl	%ecx,%edx
	movl	12(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,4(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	24(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	movl	%ebx,20(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	16(%esp),%edx
	rorl	$11,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	76(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%ecx,%eax
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	4(%esp),%esi
	xorl	%ecx,%edx
	movl	8(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	20(%esp),%edi
	movl	%eax,%esi
	rorl	$9,%ecx
	movl	%eax,16(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	12(%esp),%edx
	rorl	$11,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	80(%esp),%edx
	xorl	%edi,%ebx
	rorl	$2,%ecx
	addl	%edx,%ebx
	addl	28(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	(%esp),%esi
	xorl	%ecx,%edx
	movl	4(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,28(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	16(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	movl	%ebx,12(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	8(%esp),%edx
	rorl	$11,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	84(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	addl	%edx,%eax
	addl	24(%esp),%edx
	addl	%ecx,%eax
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	28(%esp),%esi
	xorl	%ecx,%edx
	movl	(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,24(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	12(%esp),%edi
	movl	%eax,%esi
	rorl	$9,%ecx
	movl	%eax,8(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	4(%esp),%edx
	rorl	$11,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	88(%esp),%edx
	xorl	%edi,%ebx
	rorl	$2,%ecx
	addl	%edx,%ebx
	addl	20(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	rorl	$14,%edx
	movl	24(%esp),%esi
	xorl	%ecx,%edx
	movl	28(%esp),%edi
	xorl	%edi,%esi
	rorl	$5,%edx
	andl	%ecx,%esi
	movl	%ecx,20(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	rorl	$6,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	8(%esp),%edi
	movl	%ebx,%esi
	rorl	$9,%ecx
	movl	%ebx,4(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	(%esp),%edx
	rorl	$11,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	92(%esp),%edx
	xorl	%edi,%eax
	rorl	$2,%ecx
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%ecx,%eax
	movl	96(%esp),%esi
	xorl	%edi,%ebx
	movl	12(%esp),%ecx
	addl	(%esi),%eax
	addl	4(%esi),%ebx
	addl	8(%esi),%edi
	addl	12(%esi),%ecx
	movl	%eax,(%esi)
	movl	%ebx,4(%esi)
	movl	%edi,8(%esi)
	movl	%ecx,12(%esi)
	movl	%ebx,4(%esp)
	xorl	%edi,%ebx
	movl	%edi,8(%esp)
	movl	%ecx,12(%esp)
	movl	20(%esp),%edi
	movl	24(%esp),%ecx
	addl	16(%esi),%edx
	addl	20(%esi),%edi
	addl	24(%esi),%ecx
	movl	%edx,16(%esi)
	movl	%edi,20(%esi)
	movl	%edi,20(%esp)
	movl	28(%esp),%edi
	movl	%ecx,24(%esi)
	addl	28(%esi),%edi
	movl	%ecx,24(%esp)
	movl	%edi,28(%esi)
	movl	%edi,28(%esp)
	movl	100(%esp),%edi
	movdqa	64(%ebp),%xmm7
	subl	$192,%ebp
	cmpl	104(%esp),%edi
	jb	.L012grand_ssse3
	movl	108(%esp),%esp
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.align	32
.L005AVX:
	andl	$264,%edx
	cmpl	$264,%edx
	je	.L014AVX_BMI
	leal	-96(%esp),%esp
	vzeroall
	movl	(%esi),%eax
	movl	4(%esi),%ebx
	movl	8(%esi),%ecx
	movl	12(%esi),%edi
	movl	%ebx,4(%esp)
	xorl	%ecx,%ebx
	movl	%ecx,8(%esp)
	movl	%edi,12(%esp)
	movl	16(%esi),%edx
	movl	20(%esi),%edi
	movl	24(%esi),%ecx
	movl	28(%esi),%esi
	movl	%edi,20(%esp)
	movl	100(%esp),%edi
	movl	%ecx,24(%esp)
	movl	%esi,28(%esp)
	vmovdqa	256(%ebp),%xmm7
	jmp	.L015grand_avx
.align	32
.L015grand_avx:
	vmovdqu	(%edi),%xmm0
	vmovdqu	16(%edi),%xmm1
	vmovdqu	32(%edi),%xmm2
	vmovdqu	48(%edi),%xmm3
	addl	$64,%edi
	vpshufb	%xmm7,%xmm0,%xmm0
	movl	%edi,100(%esp)
	vpshufb	%xmm7,%xmm1,%xmm1
	vpshufb	%xmm7,%xmm2,%xmm2
	vpaddd	(%ebp),%xmm0,%xmm4
	vpshufb	%xmm7,%xmm3,%xmm3
	vpaddd	16(%ebp),%xmm1,%xmm5
	vpaddd	32(%ebp),%xmm2,%xmm6
	vpaddd	48(%ebp),%xmm3,%xmm7
	vmovdqa	%xmm4,32(%esp)
	vmovdqa	%xmm5,48(%esp)
	vmovdqa	%xmm6,64(%esp)
	vmovdqa	%xmm7,80(%esp)
	jmp	.L016avx_00_47
.align	16
.L016avx_00_47:
	addl	$64,%ebp
	vpalignr	$4,%xmm0,%xmm1,%xmm4
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	20(%esp),%esi
	vpalignr	$4,%xmm2,%xmm3,%xmm7
	xorl	%ecx,%edx
	movl	24(%esp),%edi
	xorl	%edi,%esi
	vpsrld	$7,%xmm4,%xmm6
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,16(%esp)
	vpaddd	%xmm7,%xmm0,%xmm0
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	vpsrld	$3,%xmm4,%xmm7
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	4(%esp),%edi
	vpslld	$14,%xmm4,%xmm5
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,(%esp)
	vpxor	%xmm6,%xmm7,%xmm4
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	28(%esp),%edx
	vpshufd	$250,%xmm3,%xmm7
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	vpsrld	$11,%xmm6,%xmm6
	addl	32(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	vpxor	%xmm5,%xmm4,%xmm4
	addl	%edx,%ebx
	addl	12(%esp),%edx
	addl	%ecx,%ebx
	vpslld	$11,%xmm5,%xmm5
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	16(%esp),%esi
	vpxor	%xmm6,%xmm4,%xmm4
	xorl	%ecx,%edx
	movl	20(%esp),%edi
	xorl	%edi,%esi
	vpsrld	$10,%xmm7,%xmm6
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,12(%esp)
	vpxor	%xmm5,%xmm4,%xmm4
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	vpsrlq	$17,%xmm7,%xmm5
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	(%esp),%edi
	vpaddd	%xmm4,%xmm0,%xmm0
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,28(%esp)
	vpxor	%xmm5,%xmm6,%xmm6
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	24(%esp),%edx
	vpsrlq	$19,%xmm7,%xmm7
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	vpxor	%xmm7,%xmm6,%xmm6
	addl	36(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	vpshufd	$132,%xmm6,%xmm7
	addl	%edx,%eax
	addl	8(%esp),%edx
	addl	%ecx,%eax
	vpsrldq	$8,%xmm7,%xmm7
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	12(%esp),%esi
	vpaddd	%xmm7,%xmm0,%xmm0
	xorl	%ecx,%edx
	movl	16(%esp),%edi
	xorl	%edi,%esi
	vpshufd	$80,%xmm0,%xmm7
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,8(%esp)
	vpsrld	$10,%xmm7,%xmm6
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	vpsrlq	$17,%xmm7,%xmm5
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	28(%esp),%edi
	vpxor	%xmm5,%xmm6,%xmm6
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,24(%esp)
	vpsrlq	$19,%xmm7,%xmm7
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	20(%esp),%edx
	vpxor	%xmm7,%xmm6,%xmm6
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	vpshufd	$232,%xmm6,%xmm7
	addl	40(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	vpslldq	$8,%xmm7,%xmm7
	addl	%edx,%ebx
	addl	4(%esp),%edx
	addl	%ecx,%ebx
	vpaddd	%xmm7,%xmm0,%xmm0
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	8(%esp),%esi
	vpaddd	(%ebp),%xmm0,%xmm6
	xorl	%ecx,%edx
	movl	12(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,4(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	24(%esp),%edi
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,20(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	16(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	44(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%ecx,%eax
	vmovdqa	%xmm6,32(%esp)
	vpalignr	$4,%xmm1,%xmm2,%xmm4
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	4(%esp),%esi
	vpalignr	$4,%xmm3,%xmm0,%xmm7
	xorl	%ecx,%edx
	movl	8(%esp),%edi
	xorl	%edi,%esi
	vpsrld	$7,%xmm4,%xmm6
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,(%esp)
	vpaddd	%xmm7,%xmm1,%xmm1
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	vpsrld	$3,%xmm4,%xmm7
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	20(%esp),%edi
	vpslld	$14,%xmm4,%xmm5
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,16(%esp)
	vpxor	%xmm6,%xmm7,%xmm4
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	12(%esp),%edx
	vpshufd	$250,%xmm0,%xmm7
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	vpsrld	$11,%xmm6,%xmm6
	addl	48(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	vpxor	%xmm5,%xmm4,%xmm4
	addl	%edx,%ebx
	addl	28(%esp),%edx
	addl	%ecx,%ebx
	vpslld	$11,%xmm5,%xmm5
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	(%esp),%esi
	vpxor	%xmm6,%xmm4,%xmm4
	xorl	%ecx,%edx
	movl	4(%esp),%edi
	xorl	%edi,%esi
	vpsrld	$10,%xmm7,%xmm6
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,28(%esp)
	vpxor	%xmm5,%xmm4,%xmm4
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	vpsrlq	$17,%xmm7,%xmm5
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	16(%esp),%edi
	vpaddd	%xmm4,%xmm1,%xmm1
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,12(%esp)
	vpxor	%xmm5,%xmm6,%xmm6
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	8(%esp),%edx
	vpsrlq	$19,%xmm7,%xmm7
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	vpxor	%xmm7,%xmm6,%xmm6
	addl	52(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	vpshufd	$132,%xmm6,%xmm7
	addl	%edx,%eax
	addl	24(%esp),%edx
	addl	%ecx,%eax
	vpsrldq	$8,%xmm7,%xmm7
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	28(%esp),%esi
	vpaddd	%xmm7,%xmm1,%xmm1
	xorl	%ecx,%edx
	movl	(%esp),%edi
	xorl	%edi,%esi
	vpshufd	$80,%xmm1,%xmm7
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,24(%esp)
	vpsrld	$10,%xmm7,%xmm6
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	vpsrlq	$17,%xmm7,%xmm5
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	12(%esp),%edi
	vpxor	%xmm5,%xmm6,%xmm6
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,8(%esp)
	vpsrlq	$19,%xmm7,%xmm7
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	4(%esp),%edx
	vpxor	%xmm7,%xmm6,%xmm6
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	vpshufd	$232,%xmm6,%xmm7
	addl	56(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	vpslldq	$8,%xmm7,%xmm7
	addl	%edx,%ebx
	addl	20(%esp),%edx
	addl	%ecx,%ebx
	vpaddd	%xmm7,%xmm1,%xmm1
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	24(%esp),%esi
	vpaddd	16(%ebp),%xmm1,%xmm6
	xorl	%ecx,%edx
	movl	28(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,20(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	8(%esp),%edi
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,4(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	60(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%ecx,%eax
	vmovdqa	%xmm6,48(%esp)
	vpalignr	$4,%xmm2,%xmm3,%xmm4
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	20(%esp),%esi
	vpalignr	$4,%xmm0,%xmm1,%xmm7
	xorl	%ecx,%edx
	movl	24(%esp),%edi
	xorl	%edi,%esi
	vpsrld	$7,%xmm4,%xmm6
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,16(%esp)
	vpaddd	%xmm7,%xmm2,%xmm2
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	vpsrld	$3,%xmm4,%xmm7
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	4(%esp),%edi
	vpslld	$14,%xmm4,%xmm5
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,(%esp)
	vpxor	%xmm6,%xmm7,%xmm4
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	28(%esp),%edx
	vpshufd	$250,%xmm1,%xmm7
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	vpsrld	$11,%xmm6,%xmm6
	addl	64(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	vpxor	%xmm5,%xmm4,%xmm4
	addl	%edx,%ebx
	addl	12(%esp),%edx
	addl	%ecx,%ebx
	vpslld	$11,%xmm5,%xmm5
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	16(%esp),%esi
	vpxor	%xmm6,%xmm4,%xmm4
	xorl	%ecx,%edx
	movl	20(%esp),%edi
	xorl	%edi,%esi
	vpsrld	$10,%xmm7,%xmm6
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,12(%esp)
	vpxor	%xmm5,%xmm4,%xmm4
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	vpsrlq	$17,%xmm7,%xmm5
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	(%esp),%edi
	vpaddd	%xmm4,%xmm2,%xmm2
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,28(%esp)
	vpxor	%xmm5,%xmm6,%xmm6
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	24(%esp),%edx
	vpsrlq	$19,%xmm7,%xmm7
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	vpxor	%xmm7,%xmm6,%xmm6
	addl	68(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	vpshufd	$132,%xmm6,%xmm7
	addl	%edx,%eax
	addl	8(%esp),%edx
	addl	%ecx,%eax
	vpsrldq	$8,%xmm7,%xmm7
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	12(%esp),%esi
	vpaddd	%xmm7,%xmm2,%xmm2
	xorl	%ecx,%edx
	movl	16(%esp),%edi
	xorl	%edi,%esi
	vpshufd	$80,%xmm2,%xmm7
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,8(%esp)
	vpsrld	$10,%xmm7,%xmm6
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	vpsrlq	$17,%xmm7,%xmm5
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	28(%esp),%edi
	vpxor	%xmm5,%xmm6,%xmm6
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,24(%esp)
	vpsrlq	$19,%xmm7,%xmm7
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	20(%esp),%edx
	vpxor	%xmm7,%xmm6,%xmm6
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	vpshufd	$232,%xmm6,%xmm7
	addl	72(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	vpslldq	$8,%xmm7,%xmm7
	addl	%edx,%ebx
	addl	4(%esp),%edx
	addl	%ecx,%ebx
	vpaddd	%xmm7,%xmm2,%xmm2
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	8(%esp),%esi
	vpaddd	32(%ebp),%xmm2,%xmm6
	xorl	%ecx,%edx
	movl	12(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,4(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	24(%esp),%edi
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,20(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	16(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	76(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%ecx,%eax
	vmovdqa	%xmm6,64(%esp)
	vpalignr	$4,%xmm3,%xmm0,%xmm4
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	4(%esp),%esi
	vpalignr	$4,%xmm1,%xmm2,%xmm7
	xorl	%ecx,%edx
	movl	8(%esp),%edi
	xorl	%edi,%esi
	vpsrld	$7,%xmm4,%xmm6
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,(%esp)
	vpaddd	%xmm7,%xmm3,%xmm3
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	vpsrld	$3,%xmm4,%xmm7
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	20(%esp),%edi
	vpslld	$14,%xmm4,%xmm5
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,16(%esp)
	vpxor	%xmm6,%xmm7,%xmm4
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	12(%esp),%edx
	vpshufd	$250,%xmm2,%xmm7
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	vpsrld	$11,%xmm6,%xmm6
	addl	80(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	vpxor	%xmm5,%xmm4,%xmm4
	addl	%edx,%ebx
	addl	28(%esp),%edx
	addl	%ecx,%ebx
	vpslld	$11,%xmm5,%xmm5
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	(%esp),%esi
	vpxor	%xmm6,%xmm4,%xmm4
	xorl	%ecx,%edx
	movl	4(%esp),%edi
	xorl	%edi,%esi
	vpsrld	$10,%xmm7,%xmm6
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,28(%esp)
	vpxor	%xmm5,%xmm4,%xmm4
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	vpsrlq	$17,%xmm7,%xmm5
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	16(%esp),%edi
	vpaddd	%xmm4,%xmm3,%xmm3
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,12(%esp)
	vpxor	%xmm5,%xmm6,%xmm6
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	8(%esp),%edx
	vpsrlq	$19,%xmm7,%xmm7
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	vpxor	%xmm7,%xmm6,%xmm6
	addl	84(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	vpshufd	$132,%xmm6,%xmm7
	addl	%edx,%eax
	addl	24(%esp),%edx
	addl	%ecx,%eax
	vpsrldq	$8,%xmm7,%xmm7
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	28(%esp),%esi
	vpaddd	%xmm7,%xmm3,%xmm3
	xorl	%ecx,%edx
	movl	(%esp),%edi
	xorl	%edi,%esi
	vpshufd	$80,%xmm3,%xmm7
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,24(%esp)
	vpsrld	$10,%xmm7,%xmm6
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	vpsrlq	$17,%xmm7,%xmm5
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	12(%esp),%edi
	vpxor	%xmm5,%xmm6,%xmm6
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,8(%esp)
	vpsrlq	$19,%xmm7,%xmm7
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	4(%esp),%edx
	vpxor	%xmm7,%xmm6,%xmm6
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	vpshufd	$232,%xmm6,%xmm7
	addl	88(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	vpslldq	$8,%xmm7,%xmm7
	addl	%edx,%ebx
	addl	20(%esp),%edx
	addl	%ecx,%ebx
	vpaddd	%xmm7,%xmm3,%xmm3
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	24(%esp),%esi
	vpaddd	48(%ebp),%xmm3,%xmm6
	xorl	%ecx,%edx
	movl	28(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,20(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	8(%esp),%edi
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,4(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	92(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%ecx,%eax
	vmovdqa	%xmm6,80(%esp)
	cmpl	$66051,64(%ebp)
	jne	.L016avx_00_47
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	20(%esp),%esi
	xorl	%ecx,%edx
	movl	24(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,16(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	4(%esp),%edi
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	28(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	32(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	addl	%edx,%ebx
	addl	12(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	16(%esp),%esi
	xorl	%ecx,%edx
	movl	20(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,12(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	(%esp),%edi
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,28(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	24(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	36(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	addl	%edx,%eax
	addl	8(%esp),%edx
	addl	%ecx,%eax
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	12(%esp),%esi
	xorl	%ecx,%edx
	movl	16(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,8(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	28(%esp),%edi
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,24(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	20(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	40(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	addl	%edx,%ebx
	addl	4(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	8(%esp),%esi
	xorl	%ecx,%edx
	movl	12(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,4(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	24(%esp),%edi
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,20(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	16(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	44(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%ecx,%eax
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	4(%esp),%esi
	xorl	%ecx,%edx
	movl	8(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	20(%esp),%edi
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,16(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	12(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	48(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	addl	%edx,%ebx
	addl	28(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	(%esp),%esi
	xorl	%ecx,%edx
	movl	4(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,28(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	16(%esp),%edi
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,12(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	8(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	52(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	addl	%edx,%eax
	addl	24(%esp),%edx
	addl	%ecx,%eax
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	28(%esp),%esi
	xorl	%ecx,%edx
	movl	(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,24(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	12(%esp),%edi
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,8(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	4(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	56(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	addl	%edx,%ebx
	addl	20(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	24(%esp),%esi
	xorl	%ecx,%edx
	movl	28(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,20(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	8(%esp),%edi
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,4(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	60(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%ecx,%eax
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	20(%esp),%esi
	xorl	%ecx,%edx
	movl	24(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,16(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	4(%esp),%edi
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	28(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	64(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	addl	%edx,%ebx
	addl	12(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	16(%esp),%esi
	xorl	%ecx,%edx
	movl	20(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,12(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	(%esp),%edi
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,28(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	24(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	68(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	addl	%edx,%eax
	addl	8(%esp),%edx
	addl	%ecx,%eax
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	12(%esp),%esi
	xorl	%ecx,%edx
	movl	16(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,8(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	28(%esp),%edi
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,24(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	20(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	72(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	addl	%edx,%ebx
	addl	4(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	8(%esp),%esi
	xorl	%ecx,%edx
	movl	12(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,4(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	24(%esp),%edi
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,20(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	16(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	76(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	addl	%edx,%eax
	addl	(%esp),%edx
	addl	%ecx,%eax
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	4(%esp),%esi
	xorl	%ecx,%edx
	movl	8(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	20(%esp),%edi
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,16(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	12(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	80(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	addl	%edx,%ebx
	addl	28(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	(%esp),%esi
	xorl	%ecx,%edx
	movl	4(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,28(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	16(%esp),%edi
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,12(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	8(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	84(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	addl	%edx,%eax
	addl	24(%esp),%edx
	addl	%ecx,%eax
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	28(%esp),%esi
	xorl	%ecx,%edx
	movl	(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,24(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%eax,%ecx
	addl	%edi,%edx
	movl	12(%esp),%edi
	movl	%eax,%esi
	shrdl	$9,%ecx,%ecx
	movl	%eax,8(%esp)
	xorl	%eax,%ecx
	xorl	%edi,%eax
	addl	4(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%eax,%ebx
	xorl	%esi,%ecx
	addl	88(%esp),%edx
	xorl	%edi,%ebx
	shrdl	$2,%ecx,%ecx
	addl	%edx,%ebx
	addl	20(%esp),%edx
	addl	%ecx,%ebx
	movl	%edx,%ecx
	shrdl	$14,%edx,%edx
	movl	24(%esp),%esi
	xorl	%ecx,%edx
	movl	28(%esp),%edi
	xorl	%edi,%esi
	shrdl	$5,%edx,%edx
	andl	%ecx,%esi
	movl	%ecx,20(%esp)
	xorl	%ecx,%edx
	xorl	%esi,%edi
	shrdl	$6,%edx,%edx
	movl	%ebx,%ecx
	addl	%edi,%edx
	movl	8(%esp),%edi
	movl	%ebx,%esi
	shrdl	$9,%ecx,%ecx
	movl	%ebx,4(%esp)
	xorl	%ebx,%ecx
	xorl	%edi,%ebx
	addl	(%esp),%edx
	shrdl	$11,%ecx,%ecx
	andl	%ebx,%eax
	xorl	%esi,%ecx
	addl	92(%esp),%edx
	xorl	%edi,%eax
	shrdl	$2,%ecx,%ecx
	addl	%edx,%eax
	addl	16(%esp),%edx
	addl	%ecx,%eax
	movl	96(%esp),%esi
	xorl	%edi,%ebx
	movl	12(%esp),%ecx
	addl	(%esi),%eax
	addl	4(%esi),%ebx
	addl	8(%esi),%edi
	addl	12(%esi),%ecx
	movl	%eax,(%esi)
	movl	%ebx,4(%esi)
	movl	%edi,8(%esi)
	movl	%ecx,12(%esi)
	movl	%ebx,4(%esp)
	xorl	%edi,%ebx
	movl	%edi,8(%esp)
	movl	%ecx,12(%esp)
	movl	20(%esp),%edi
	movl	24(%esp),%ecx
	addl	16(%esi),%edx
	addl	20(%esi),%edi
	addl	24(%esi),%ecx
	movl	%edx,16(%esi)
	movl	%edi,20(%esi)
	movl	%edi,20(%esp)
	movl	28(%esp),%edi
	movl	%ecx,24(%esi)
	addl	28(%esi),%edi
	movl	%ecx,24(%esp)
	movl	%edi,28(%esi)
	movl	%edi,28(%esp)
	movl	100(%esp),%edi
	vmovdqa	64(%ebp),%xmm7
	subl	$192,%ebp
	cmpl	104(%esp),%edi
	jb	.L015grand_avx
	movl	108(%esp),%esp
	vzeroall
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.align	32
.L014AVX_BMI:
	leal	-96(%esp),%esp
	vzeroall
	movl	(%esi),%eax
	movl	4(%esi),%ebx
	movl	8(%esi),%ecx
	movl	12(%esi),%edi
	movl	%ebx,4(%esp)
	xorl	%ecx,%ebx
	movl	%ecx,8(%esp)
	movl	%edi,12(%esp)
	movl	16(%esi),%edx
	movl	20(%esi),%edi
	movl	24(%esi),%ecx
	movl	28(%esi),%esi
	movl	%edi,20(%esp)
	movl	100(%esp),%edi
	movl	%ecx,24(%esp)
	movl	%esi,28(%esp)
	vmovdqa	256(%ebp),%xmm7
	jmp	.L017grand_avx_bmi
.align	32
.L017grand_avx_bmi:
	vmovdqu	(%edi),%xmm0
	vmovdqu	16(%edi),%xmm1
	vmovdqu	32(%edi),%xmm2
	vmovdqu	48(%edi),%xmm3
	addl	$64,%edi
	vpshufb	%xmm7,%xmm0,%xmm0
	movl	%edi,100(%esp)
	vpshufb	%xmm7,%xmm1,%xmm1
	vpshufb	%xmm7,%xmm2,%xmm2
	vpaddd	(%ebp),%xmm0,%xmm4
	vpshufb	%xmm7,%xmm3,%xmm3
	vpaddd	16(%ebp),%xmm1,%xmm5
	vpaddd	32(%ebp),%xmm2,%xmm6
	vpaddd	48(%ebp),%xmm3,%xmm7
	vmovdqa	%xmm4,32(%esp)
	vmovdqa	%xmm5,48(%esp)
	vmovdqa	%xmm6,64(%esp)
	vmovdqa	%xmm7,80(%esp)
	jmp	.L018avx_bmi_00_47
.align	16
.L018avx_bmi_00_47:
	addl	$64,%ebp
	vpalignr	$4,%xmm0,%xmm1,%xmm4
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,16(%esp)
	vpalignr	$4,%xmm2,%xmm3,%xmm7
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	24(%esp),%edx,%esi
	vpsrld	$7,%xmm4,%xmm6
	xorl	%edi,%ecx
	andl	20(%esp),%edx
	movl	%eax,(%esp)
	vpaddd	%xmm7,%xmm0,%xmm0
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	vpsrld	$3,%xmm4,%xmm7
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	vpslld	$14,%xmm4,%xmm5
	movl	4(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	vpxor	%xmm6,%xmm7,%xmm4
	addl	28(%esp),%edx
	andl	%eax,%ebx
	addl	32(%esp),%edx
	vpshufd	$250,%xmm3,%xmm7
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	12(%esp),%edx
	vpsrld	$11,%xmm6,%xmm6
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	vpxor	%xmm5,%xmm4,%xmm4
	movl	%edx,12(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	vpslld	$11,%xmm5,%xmm5
	andnl	20(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	16(%esp),%edx
	vpxor	%xmm6,%xmm4,%xmm4
	movl	%ebx,28(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	vpsrld	$10,%xmm7,%xmm6
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	vpxor	%xmm5,%xmm4,%xmm4
	movl	(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	vpsrlq	$17,%xmm7,%xmm5
	addl	24(%esp),%edx
	andl	%ebx,%eax
	addl	36(%esp),%edx
	vpaddd	%xmm4,%xmm0,%xmm0
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	8(%esp),%edx
	vpxor	%xmm5,%xmm6,%xmm6
	leal	(%eax,%ecx,1),%eax
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	vpsrlq	$19,%xmm7,%xmm7
	movl	%edx,8(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	vpxor	%xmm7,%xmm6,%xmm6
	andnl	16(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	12(%esp),%edx
	vpshufd	$132,%xmm6,%xmm7
	movl	%eax,24(%esp)
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	vpsrldq	$8,%xmm7,%xmm7
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	vpaddd	%xmm7,%xmm0,%xmm0
	movl	28(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	vpshufd	$80,%xmm0,%xmm7
	addl	20(%esp),%edx
	andl	%eax,%ebx
	addl	40(%esp),%edx
	vpsrld	$10,%xmm7,%xmm6
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	4(%esp),%edx
	vpsrlq	$17,%xmm7,%xmm5
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	vpxor	%xmm5,%xmm6,%xmm6
	movl	%edx,4(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	vpsrlq	$19,%xmm7,%xmm7
	andnl	12(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	8(%esp),%edx
	vpxor	%xmm7,%xmm6,%xmm6
	movl	%ebx,20(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	vpshufd	$232,%xmm6,%xmm7
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	vpslldq	$8,%xmm7,%xmm7
	movl	24(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	vpaddd	%xmm7,%xmm0,%xmm0
	addl	16(%esp),%edx
	andl	%ebx,%eax
	addl	44(%esp),%edx
	vpaddd	(%ebp),%xmm0,%xmm6
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	(%esp),%edx
	leal	(%eax,%ecx,1),%eax
	vmovdqa	%xmm6,32(%esp)
	vpalignr	$4,%xmm1,%xmm2,%xmm4
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,(%esp)
	vpalignr	$4,%xmm3,%xmm0,%xmm7
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	8(%esp),%edx,%esi
	vpsrld	$7,%xmm4,%xmm6
	xorl	%edi,%ecx
	andl	4(%esp),%edx
	movl	%eax,16(%esp)
	vpaddd	%xmm7,%xmm1,%xmm1
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	vpsrld	$3,%xmm4,%xmm7
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	vpslld	$14,%xmm4,%xmm5
	movl	20(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	vpxor	%xmm6,%xmm7,%xmm4
	addl	12(%esp),%edx
	andl	%eax,%ebx
	addl	48(%esp),%edx
	vpshufd	$250,%xmm0,%xmm7
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	28(%esp),%edx
	vpsrld	$11,%xmm6,%xmm6
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	vpxor	%xmm5,%xmm4,%xmm4
	movl	%edx,28(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	vpslld	$11,%xmm5,%xmm5
	andnl	4(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	(%esp),%edx
	vpxor	%xmm6,%xmm4,%xmm4
	movl	%ebx,12(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	vpsrld	$10,%xmm7,%xmm6
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	vpxor	%xmm5,%xmm4,%xmm4
	movl	16(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	vpsrlq	$17,%xmm7,%xmm5
	addl	8(%esp),%edx
	andl	%ebx,%eax
	addl	52(%esp),%edx
	vpaddd	%xmm4,%xmm1,%xmm1
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	24(%esp),%edx
	vpxor	%xmm5,%xmm6,%xmm6
	leal	(%eax,%ecx,1),%eax
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	vpsrlq	$19,%xmm7,%xmm7
	movl	%edx,24(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	vpxor	%xmm7,%xmm6,%xmm6
	andnl	(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	28(%esp),%edx
	vpshufd	$132,%xmm6,%xmm7
	movl	%eax,8(%esp)
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	vpsrldq	$8,%xmm7,%xmm7
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	vpaddd	%xmm7,%xmm1,%xmm1
	movl	12(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	vpshufd	$80,%xmm1,%xmm7
	addl	4(%esp),%edx
	andl	%eax,%ebx
	addl	56(%esp),%edx
	vpsrld	$10,%xmm7,%xmm6
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	20(%esp),%edx
	vpsrlq	$17,%xmm7,%xmm5
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	vpxor	%xmm5,%xmm6,%xmm6
	movl	%edx,20(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	vpsrlq	$19,%xmm7,%xmm7
	andnl	28(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	24(%esp),%edx
	vpxor	%xmm7,%xmm6,%xmm6
	movl	%ebx,4(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	vpshufd	$232,%xmm6,%xmm7
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	vpslldq	$8,%xmm7,%xmm7
	movl	8(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	vpaddd	%xmm7,%xmm1,%xmm1
	addl	(%esp),%edx
	andl	%ebx,%eax
	addl	60(%esp),%edx
	vpaddd	16(%ebp),%xmm1,%xmm6
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	16(%esp),%edx
	leal	(%eax,%ecx,1),%eax
	vmovdqa	%xmm6,48(%esp)
	vpalignr	$4,%xmm2,%xmm3,%xmm4
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,16(%esp)
	vpalignr	$4,%xmm0,%xmm1,%xmm7
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	24(%esp),%edx,%esi
	vpsrld	$7,%xmm4,%xmm6
	xorl	%edi,%ecx
	andl	20(%esp),%edx
	movl	%eax,(%esp)
	vpaddd	%xmm7,%xmm2,%xmm2
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	vpsrld	$3,%xmm4,%xmm7
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	vpslld	$14,%xmm4,%xmm5
	movl	4(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	vpxor	%xmm6,%xmm7,%xmm4
	addl	28(%esp),%edx
	andl	%eax,%ebx
	addl	64(%esp),%edx
	vpshufd	$250,%xmm1,%xmm7
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	12(%esp),%edx
	vpsrld	$11,%xmm6,%xmm6
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	vpxor	%xmm5,%xmm4,%xmm4
	movl	%edx,12(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	vpslld	$11,%xmm5,%xmm5
	andnl	20(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	16(%esp),%edx
	vpxor	%xmm6,%xmm4,%xmm4
	movl	%ebx,28(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	vpsrld	$10,%xmm7,%xmm6
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	vpxor	%xmm5,%xmm4,%xmm4
	movl	(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	vpsrlq	$17,%xmm7,%xmm5
	addl	24(%esp),%edx
	andl	%ebx,%eax
	addl	68(%esp),%edx
	vpaddd	%xmm4,%xmm2,%xmm2
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	8(%esp),%edx
	vpxor	%xmm5,%xmm6,%xmm6
	leal	(%eax,%ecx,1),%eax
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	vpsrlq	$19,%xmm7,%xmm7
	movl	%edx,8(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	vpxor	%xmm7,%xmm6,%xmm6
	andnl	16(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	12(%esp),%edx
	vpshufd	$132,%xmm6,%xmm7
	movl	%eax,24(%esp)
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	vpsrldq	$8,%xmm7,%xmm7
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	vpaddd	%xmm7,%xmm2,%xmm2
	movl	28(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	vpshufd	$80,%xmm2,%xmm7
	addl	20(%esp),%edx
	andl	%eax,%ebx
	addl	72(%esp),%edx
	vpsrld	$10,%xmm7,%xmm6
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	4(%esp),%edx
	vpsrlq	$17,%xmm7,%xmm5
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	vpxor	%xmm5,%xmm6,%xmm6
	movl	%edx,4(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	vpsrlq	$19,%xmm7,%xmm7
	andnl	12(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	8(%esp),%edx
	vpxor	%xmm7,%xmm6,%xmm6
	movl	%ebx,20(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	vpshufd	$232,%xmm6,%xmm7
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	vpslldq	$8,%xmm7,%xmm7
	movl	24(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	vpaddd	%xmm7,%xmm2,%xmm2
	addl	16(%esp),%edx
	andl	%ebx,%eax
	addl	76(%esp),%edx
	vpaddd	32(%ebp),%xmm2,%xmm6
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	(%esp),%edx
	leal	(%eax,%ecx,1),%eax
	vmovdqa	%xmm6,64(%esp)
	vpalignr	$4,%xmm3,%xmm0,%xmm4
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,(%esp)
	vpalignr	$4,%xmm1,%xmm2,%xmm7
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	8(%esp),%edx,%esi
	vpsrld	$7,%xmm4,%xmm6
	xorl	%edi,%ecx
	andl	4(%esp),%edx
	movl	%eax,16(%esp)
	vpaddd	%xmm7,%xmm3,%xmm3
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	vpsrld	$3,%xmm4,%xmm7
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	vpslld	$14,%xmm4,%xmm5
	movl	20(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	vpxor	%xmm6,%xmm7,%xmm4
	addl	12(%esp),%edx
	andl	%eax,%ebx
	addl	80(%esp),%edx
	vpshufd	$250,%xmm2,%xmm7
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	28(%esp),%edx
	vpsrld	$11,%xmm6,%xmm6
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	vpxor	%xmm5,%xmm4,%xmm4
	movl	%edx,28(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	vpslld	$11,%xmm5,%xmm5
	andnl	4(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	(%esp),%edx
	vpxor	%xmm6,%xmm4,%xmm4
	movl	%ebx,12(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	vpsrld	$10,%xmm7,%xmm6
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	vpxor	%xmm5,%xmm4,%xmm4
	movl	16(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	vpsrlq	$17,%xmm7,%xmm5
	addl	8(%esp),%edx
	andl	%ebx,%eax
	addl	84(%esp),%edx
	vpaddd	%xmm4,%xmm3,%xmm3
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	24(%esp),%edx
	vpxor	%xmm5,%xmm6,%xmm6
	leal	(%eax,%ecx,1),%eax
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	vpsrlq	$19,%xmm7,%xmm7
	movl	%edx,24(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	vpxor	%xmm7,%xmm6,%xmm6
	andnl	(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	28(%esp),%edx
	vpshufd	$132,%xmm6,%xmm7
	movl	%eax,8(%esp)
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	vpsrldq	$8,%xmm7,%xmm7
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	vpaddd	%xmm7,%xmm3,%xmm3
	movl	12(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	vpshufd	$80,%xmm3,%xmm7
	addl	4(%esp),%edx
	andl	%eax,%ebx
	addl	88(%esp),%edx
	vpsrld	$10,%xmm7,%xmm6
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	20(%esp),%edx
	vpsrlq	$17,%xmm7,%xmm5
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	vpxor	%xmm5,%xmm6,%xmm6
	movl	%edx,20(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	vpsrlq	$19,%xmm7,%xmm7
	andnl	28(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	24(%esp),%edx
	vpxor	%xmm7,%xmm6,%xmm6
	movl	%ebx,4(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	vpshufd	$232,%xmm6,%xmm7
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	vpslldq	$8,%xmm7,%xmm7
	movl	8(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	vpaddd	%xmm7,%xmm3,%xmm3
	addl	(%esp),%edx
	andl	%ebx,%eax
	addl	92(%esp),%edx
	vpaddd	48(%ebp),%xmm3,%xmm6
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	16(%esp),%edx
	leal	(%eax,%ecx,1),%eax
	vmovdqa	%xmm6,80(%esp)
	cmpl	$66051,64(%ebp)
	jne	.L018avx_bmi_00_47
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,16(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	24(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	20(%esp),%edx
	movl	%eax,(%esp)
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	movl	4(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	addl	28(%esp),%edx
	andl	%eax,%ebx
	addl	32(%esp),%edx
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	12(%esp),%edx
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,12(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	20(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	16(%esp),%edx
	movl	%ebx,28(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	movl	(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	addl	24(%esp),%edx
	andl	%ebx,%eax
	addl	36(%esp),%edx
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	8(%esp),%edx
	leal	(%eax,%ecx,1),%eax
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,8(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	16(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	12(%esp),%edx
	movl	%eax,24(%esp)
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	movl	28(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	addl	20(%esp),%edx
	andl	%eax,%ebx
	addl	40(%esp),%edx
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	4(%esp),%edx
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,4(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	12(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	8(%esp),%edx
	movl	%ebx,20(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	movl	24(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	addl	16(%esp),%edx
	andl	%ebx,%eax
	addl	44(%esp),%edx
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	(%esp),%edx
	leal	(%eax,%ecx,1),%eax
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	8(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	4(%esp),%edx
	movl	%eax,16(%esp)
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	movl	20(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	addl	12(%esp),%edx
	andl	%eax,%ebx
	addl	48(%esp),%edx
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	28(%esp),%edx
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,28(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	4(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	(%esp),%edx
	movl	%ebx,12(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	movl	16(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	addl	8(%esp),%edx
	andl	%ebx,%eax
	addl	52(%esp),%edx
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	24(%esp),%edx
	leal	(%eax,%ecx,1),%eax
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,24(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	28(%esp),%edx
	movl	%eax,8(%esp)
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	movl	12(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	addl	4(%esp),%edx
	andl	%eax,%ebx
	addl	56(%esp),%edx
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	20(%esp),%edx
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,20(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	28(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	24(%esp),%edx
	movl	%ebx,4(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	movl	8(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	addl	(%esp),%edx
	andl	%ebx,%eax
	addl	60(%esp),%edx
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	16(%esp),%edx
	leal	(%eax,%ecx,1),%eax
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,16(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	24(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	20(%esp),%edx
	movl	%eax,(%esp)
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	movl	4(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	addl	28(%esp),%edx
	andl	%eax,%ebx
	addl	64(%esp),%edx
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	12(%esp),%edx
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,12(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	20(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	16(%esp),%edx
	movl	%ebx,28(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	movl	(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	addl	24(%esp),%edx
	andl	%ebx,%eax
	addl	68(%esp),%edx
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	8(%esp),%edx
	leal	(%eax,%ecx,1),%eax
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,8(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	16(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	12(%esp),%edx
	movl	%eax,24(%esp)
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	movl	28(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	addl	20(%esp),%edx
	andl	%eax,%ebx
	addl	72(%esp),%edx
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	4(%esp),%edx
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,4(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	12(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	8(%esp),%edx
	movl	%ebx,20(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	movl	24(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	addl	16(%esp),%edx
	andl	%ebx,%eax
	addl	76(%esp),%edx
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	(%esp),%edx
	leal	(%eax,%ecx,1),%eax
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	8(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	4(%esp),%edx
	movl	%eax,16(%esp)
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	movl	20(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	addl	12(%esp),%edx
	andl	%eax,%ebx
	addl	80(%esp),%edx
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	28(%esp),%edx
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,28(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	4(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	(%esp),%edx
	movl	%ebx,12(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	movl	16(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	addl	8(%esp),%edx
	andl	%ebx,%eax
	addl	84(%esp),%edx
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	24(%esp),%edx
	leal	(%eax,%ecx,1),%eax
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,24(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	28(%esp),%edx
	movl	%eax,8(%esp)
	orl	%esi,%edx
	rorxl	$2,%eax,%edi
	rorxl	$13,%eax,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%eax,%ecx
	xorl	%edi,%esi
	movl	12(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%eax
	addl	4(%esp),%edx
	andl	%eax,%ebx
	addl	88(%esp),%edx
	xorl	%edi,%ebx
	addl	%edx,%ecx
	addl	20(%esp),%edx
	leal	(%ebx,%ecx,1),%ebx
	rorxl	$6,%edx,%ecx
	rorxl	$11,%edx,%esi
	movl	%edx,20(%esp)
	rorxl	$25,%edx,%edi
	xorl	%esi,%ecx
	andnl	28(%esp),%edx,%esi
	xorl	%edi,%ecx
	andl	24(%esp),%edx
	movl	%ebx,4(%esp)
	orl	%esi,%edx
	rorxl	$2,%ebx,%edi
	rorxl	$13,%ebx,%esi
	leal	(%edx,%ecx,1),%edx
	rorxl	$22,%ebx,%ecx
	xorl	%edi,%esi
	movl	8(%esp),%edi
	xorl	%esi,%ecx
	xorl	%edi,%ebx
	addl	(%esp),%edx
	andl	%ebx,%eax
	addl	92(%esp),%edx
	xorl	%edi,%eax
	addl	%edx,%ecx
	addl	16(%esp),%edx
	leal	(%eax,%ecx,1),%eax
	movl	96(%esp),%esi
	xorl	%edi,%ebx
	movl	12(%esp),%ecx
	addl	(%esi),%eax
	addl	4(%esi),%ebx
	addl	8(%esi),%edi
	addl	12(%esi),%ecx
	movl	%eax,(%esi)
	movl	%ebx,4(%esi)
	movl	%edi,8(%esi)
	movl	%ecx,12(%esi)
	movl	%ebx,4(%esp)
	xorl	%edi,%ebx
	movl	%edi,8(%esp)
	movl	%ecx,12(%esp)
	movl	20(%esp),%edi
	movl	24(%esp),%ecx
	addl	16(%esi),%edx
	addl	20(%esi),%edi
	addl	24(%esi),%ecx
	movl	%edx,16(%esi)
	movl	%edi,20(%esi)
	movl	%edi,20(%esp)
	movl	28(%esp),%edi
	movl	%ecx,24(%esi)
	addl	28(%esi),%edi
	movl	%ecx,24(%esp)
	movl	%edi,28(%esi)
	movl	%edi,28(%esp)
	movl	100(%esp),%edi
	vmovdqa	64(%ebp),%xmm7
	subl	$192,%ebp
	cmpl	104(%esp),%edi
	jb	.L017grand_avx_bmi
	movl	108(%esp),%esp
	vzeroall
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	sha256_block_data_order,.-.L_sha256_block_data_order_begin
.comm	OPENSSL_ia32cap_P,16,4

	.section ".note.gnu.property", "a"
	.p2align 2
	.long 1f - 0f
	.long 4f - 1f
	.long 5
0:
	.asciz "GNU"
1:
	.p2align 2
	.long 0xc0000002
	.long 3f - 2f
2:
	.long 3
3:
	.p2align 2
4:
                                node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/sha/sha512-586.S                         0000664 0000000 0000000 00000141155 14746647661 0025774 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        .text
.globl	sha512_block_data_order
.type	sha512_block_data_order,@function
.align	16
sha512_block_data_order:
.L_sha512_block_data_order_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%esi
	movl	24(%esp),%edi
	movl	28(%esp),%eax
	movl	%esp,%ebx
	call	.L000pic_point
.L000pic_point:
	popl	%ebp
	leal	.L001K512-.L000pic_point(%ebp),%ebp
	subl	$16,%esp
	andl	$-64,%esp
	shll	$7,%eax
	addl	%edi,%eax
	movl	%esi,(%esp)
	movl	%edi,4(%esp)
	movl	%eax,8(%esp)
	movl	%ebx,12(%esp)
	leal	OPENSSL_ia32cap_P-.L001K512(%ebp),%edx
	movl	(%edx),%ecx
	testl	$67108864,%ecx
	jz	.L002loop_x86
	movl	4(%edx),%edx
	movq	(%esi),%mm0
	andl	$16777216,%ecx
	movq	8(%esi),%mm1
	andl	$512,%edx
	movq	16(%esi),%mm2
	orl	%edx,%ecx
	movq	24(%esi),%mm3
	movq	32(%esi),%mm4
	movq	40(%esi),%mm5
	movq	48(%esi),%mm6
	movq	56(%esi),%mm7
	cmpl	$16777728,%ecx
	je	.L003SSSE3
	subl	$80,%esp
	jmp	.L004loop_sse2
.align	16
.L004loop_sse2:
	movq	%mm1,8(%esp)
	movq	%mm2,16(%esp)
	movq	%mm3,24(%esp)
	movq	%mm5,40(%esp)
	movq	%mm6,48(%esp)
	pxor	%mm1,%mm2
	movq	%mm7,56(%esp)
	movq	%mm0,%mm3
	movl	(%edi),%eax
	movl	4(%edi),%ebx
	addl	$8,%edi
	movl	$15,%edx
	bswap	%eax
	bswap	%ebx
	jmp	.L00500_14_sse2
.align	16
.L00500_14_sse2:
	movd	%eax,%mm1
	movl	(%edi),%eax
	movd	%ebx,%mm7
	movl	4(%edi),%ebx
	addl	$8,%edi
	bswap	%eax
	bswap	%ebx
	punpckldq	%mm1,%mm7
	movq	%mm4,%mm1
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,32(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	movq	%mm3,%mm0
	movq	%mm7,72(%esp)
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	56(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	paddq	(%ebp),%mm7
	pxor	%mm4,%mm3
	movq	24(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	8(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	subl	$8,%esp
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	40(%esp),%mm5
	paddq	%mm2,%mm3
	movq	%mm0,%mm2
	addl	$8,%ebp
	paddq	%mm6,%mm3
	movq	48(%esp),%mm6
	decl	%edx
	jnz	.L00500_14_sse2
	movd	%eax,%mm1
	movd	%ebx,%mm7
	punpckldq	%mm1,%mm7
	movq	%mm4,%mm1
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,32(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	movq	%mm3,%mm0
	movq	%mm7,72(%esp)
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	56(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	paddq	(%ebp),%mm7
	pxor	%mm4,%mm3
	movq	24(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	8(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	subl	$8,%esp
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	192(%esp),%mm7
	paddq	%mm2,%mm3
	movq	%mm0,%mm2
	addl	$8,%ebp
	paddq	%mm6,%mm3
	pxor	%mm0,%mm0
	movl	$32,%edx
	jmp	.L00616_79_sse2
.align	16
.L00616_79_sse2:
	movq	88(%esp),%mm5
	movq	%mm7,%mm1
	psrlq	$1,%mm7
	movq	%mm5,%mm6
	psrlq	$6,%mm5
	psllq	$56,%mm1
	paddq	%mm3,%mm0
	movq	%mm7,%mm3
	psrlq	$6,%mm7
	pxor	%mm1,%mm3
	psllq	$7,%mm1
	pxor	%mm7,%mm3
	psrlq	$1,%mm7
	pxor	%mm1,%mm3
	movq	%mm5,%mm1
	psrlq	$13,%mm5
	pxor	%mm3,%mm7
	psllq	$3,%mm6
	pxor	%mm5,%mm1
	paddq	200(%esp),%mm7
	pxor	%mm6,%mm1
	psrlq	$42,%mm5
	paddq	128(%esp),%mm7
	pxor	%mm5,%mm1
	psllq	$42,%mm6
	movq	40(%esp),%mm5
	pxor	%mm6,%mm1
	movq	48(%esp),%mm6
	paddq	%mm1,%mm7
	movq	%mm4,%mm1
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,32(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	movq	%mm7,72(%esp)
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	56(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	paddq	(%ebp),%mm7
	pxor	%mm4,%mm3
	movq	24(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	8(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	subl	$8,%esp
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	192(%esp),%mm7
	paddq	%mm6,%mm2
	addl	$8,%ebp
	movq	88(%esp),%mm5
	movq	%mm7,%mm1
	psrlq	$1,%mm7
	movq	%mm5,%mm6
	psrlq	$6,%mm5
	psllq	$56,%mm1
	paddq	%mm3,%mm2
	movq	%mm7,%mm3
	psrlq	$6,%mm7
	pxor	%mm1,%mm3
	psllq	$7,%mm1
	pxor	%mm7,%mm3
	psrlq	$1,%mm7
	pxor	%mm1,%mm3
	movq	%mm5,%mm1
	psrlq	$13,%mm5
	pxor	%mm3,%mm7
	psllq	$3,%mm6
	pxor	%mm5,%mm1
	paddq	200(%esp),%mm7
	pxor	%mm6,%mm1
	psrlq	$42,%mm5
	paddq	128(%esp),%mm7
	pxor	%mm5,%mm1
	psllq	$42,%mm6
	movq	40(%esp),%mm5
	pxor	%mm6,%mm1
	movq	48(%esp),%mm6
	paddq	%mm1,%mm7
	movq	%mm4,%mm1
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,32(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	movq	%mm7,72(%esp)
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	56(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	paddq	(%ebp),%mm7
	pxor	%mm4,%mm3
	movq	24(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	8(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	subl	$8,%esp
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	192(%esp),%mm7
	paddq	%mm6,%mm0
	addl	$8,%ebp
	decl	%edx
	jnz	.L00616_79_sse2
	paddq	%mm3,%mm0
	movq	8(%esp),%mm1
	movq	24(%esp),%mm3
	movq	40(%esp),%mm5
	movq	48(%esp),%mm6
	movq	56(%esp),%mm7
	pxor	%mm1,%mm2
	paddq	(%esi),%mm0
	paddq	8(%esi),%mm1
	paddq	16(%esi),%mm2
	paddq	24(%esi),%mm3
	paddq	32(%esi),%mm4
	paddq	40(%esi),%mm5
	paddq	48(%esi),%mm6
	paddq	56(%esi),%mm7
	movl	$640,%eax
	movq	%mm0,(%esi)
	movq	%mm1,8(%esi)
	movq	%mm2,16(%esi)
	movq	%mm3,24(%esi)
	movq	%mm4,32(%esi)
	movq	%mm5,40(%esi)
	movq	%mm6,48(%esi)
	movq	%mm7,56(%esi)
	leal	(%esp,%eax,1),%esp
	subl	%eax,%ebp
	cmpl	88(%esp),%edi
	jb	.L004loop_sse2
	movl	92(%esp),%esp
	emms
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.align	32
.L003SSSE3:
	leal	-64(%esp),%edx
	subl	$256,%esp
	movdqa	640(%ebp),%xmm1
	movdqu	(%edi),%xmm0
.byte	102,15,56,0,193
	movdqa	(%ebp),%xmm3
	movdqa	%xmm1,%xmm2
	movdqu	16(%edi),%xmm1
	paddq	%xmm0,%xmm3
.byte	102,15,56,0,202
	movdqa	%xmm3,-128(%edx)
	movdqa	16(%ebp),%xmm4
	movdqa	%xmm2,%xmm3
	movdqu	32(%edi),%xmm2
	paddq	%xmm1,%xmm4
.byte	102,15,56,0,211
	movdqa	%xmm4,-112(%edx)
	movdqa	32(%ebp),%xmm5
	movdqa	%xmm3,%xmm4
	movdqu	48(%edi),%xmm3
	paddq	%xmm2,%xmm5
.byte	102,15,56,0,220
	movdqa	%xmm5,-96(%edx)
	movdqa	48(%ebp),%xmm6
	movdqa	%xmm4,%xmm5
	movdqu	64(%edi),%xmm4
	paddq	%xmm3,%xmm6
.byte	102,15,56,0,229
	movdqa	%xmm6,-80(%edx)
	movdqa	64(%ebp),%xmm7
	movdqa	%xmm5,%xmm6
	movdqu	80(%edi),%xmm5
	paddq	%xmm4,%xmm7
.byte	102,15,56,0,238
	movdqa	%xmm7,-64(%edx)
	movdqa	%xmm0,(%edx)
	movdqa	80(%ebp),%xmm0
	movdqa	%xmm6,%xmm7
	movdqu	96(%edi),%xmm6
	paddq	%xmm5,%xmm0
.byte	102,15,56,0,247
	movdqa	%xmm0,-48(%edx)
	movdqa	%xmm1,16(%edx)
	movdqa	96(%ebp),%xmm1
	movdqa	%xmm7,%xmm0
	movdqu	112(%edi),%xmm7
	paddq	%xmm6,%xmm1
.byte	102,15,56,0,248
	movdqa	%xmm1,-32(%edx)
	movdqa	%xmm2,32(%edx)
	movdqa	112(%ebp),%xmm2
	movdqa	(%edx),%xmm0
	paddq	%xmm7,%xmm2
	movdqa	%xmm2,-16(%edx)
	nop
.align	32
.L007loop_ssse3:
	movdqa	16(%edx),%xmm2
	movdqa	%xmm3,48(%edx)
	leal	128(%ebp),%ebp
	movq	%mm1,8(%esp)
	movl	%edi,%ebx
	movq	%mm2,16(%esp)
	leal	128(%edi),%edi
	movq	%mm3,24(%esp)
	cmpl	%eax,%edi
	movq	%mm5,40(%esp)
	cmovbl	%edi,%ebx
	movq	%mm6,48(%esp)
	movl	$4,%ecx
	pxor	%mm1,%mm2
	movq	%mm7,56(%esp)
	pxor	%mm3,%mm3
	jmp	.L00800_47_ssse3
.align	32
.L00800_47_ssse3:
	movdqa	%xmm5,%xmm3
	movdqa	%xmm2,%xmm1
.byte	102,15,58,15,208,8
	movdqa	%xmm4,(%edx)
.byte	102,15,58,15,220,8
	movdqa	%xmm2,%xmm4
	psrlq	$7,%xmm2
	paddq	%xmm3,%xmm0
	movdqa	%xmm4,%xmm3
	psrlq	$1,%xmm4
	psllq	$56,%xmm3
	pxor	%xmm4,%xmm2
	psrlq	$7,%xmm4
	pxor	%xmm3,%xmm2
	psllq	$7,%xmm3
	pxor	%xmm4,%xmm2
	movdqa	%xmm7,%xmm4
	pxor	%xmm3,%xmm2
	movdqa	%xmm7,%xmm3
	psrlq	$6,%xmm4
	paddq	%xmm2,%xmm0
	movdqa	%xmm7,%xmm2
	psrlq	$19,%xmm3
	psllq	$3,%xmm2
	pxor	%xmm3,%xmm4
	psrlq	$42,%xmm3
	pxor	%xmm2,%xmm4
	psllq	$42,%xmm2
	pxor	%xmm3,%xmm4
	movdqa	32(%edx),%xmm3
	pxor	%xmm2,%xmm4
	movdqa	(%ebp),%xmm2
	movq	%mm4,%mm1
	paddq	%xmm4,%xmm0
	movq	-128(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,32(%esp)
	paddq	%xmm0,%xmm2
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	56(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	24(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	8(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	32(%esp),%mm5
	paddq	%mm6,%mm2
	movq	40(%esp),%mm6
	movq	%mm4,%mm1
	movq	-120(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,24(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,56(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	48(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	16(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	24(%esp),%mm5
	paddq	%mm6,%mm0
	movq	32(%esp),%mm6
	movdqa	%xmm2,-128(%edx)
	movdqa	%xmm6,%xmm4
	movdqa	%xmm3,%xmm2
.byte	102,15,58,15,217,8
	movdqa	%xmm5,16(%edx)
.byte	102,15,58,15,229,8
	movdqa	%xmm3,%xmm5
	psrlq	$7,%xmm3
	paddq	%xmm4,%xmm1
	movdqa	%xmm5,%xmm4
	psrlq	$1,%xmm5
	psllq	$56,%xmm4
	pxor	%xmm5,%xmm3
	psrlq	$7,%xmm5
	pxor	%xmm4,%xmm3
	psllq	$7,%xmm4
	pxor	%xmm5,%xmm3
	movdqa	%xmm0,%xmm5
	pxor	%xmm4,%xmm3
	movdqa	%xmm0,%xmm4
	psrlq	$6,%xmm5
	paddq	%xmm3,%xmm1
	movdqa	%xmm0,%xmm3
	psrlq	$19,%xmm4
	psllq	$3,%xmm3
	pxor	%xmm4,%xmm5
	psrlq	$42,%xmm4
	pxor	%xmm3,%xmm5
	psllq	$42,%xmm3
	pxor	%xmm4,%xmm5
	movdqa	48(%edx),%xmm4
	pxor	%xmm3,%xmm5
	movdqa	16(%ebp),%xmm3
	movq	%mm4,%mm1
	paddq	%xmm5,%xmm1
	movq	-112(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,16(%esp)
	paddq	%xmm1,%xmm3
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,48(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	40(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	8(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	56(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	16(%esp),%mm5
	paddq	%mm6,%mm2
	movq	24(%esp),%mm6
	movq	%mm4,%mm1
	movq	-104(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,8(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,40(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	32(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	48(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	8(%esp),%mm5
	paddq	%mm6,%mm0
	movq	16(%esp),%mm6
	movdqa	%xmm3,-112(%edx)
	movdqa	%xmm7,%xmm5
	movdqa	%xmm4,%xmm3
.byte	102,15,58,15,226,8
	movdqa	%xmm6,32(%edx)
.byte	102,15,58,15,238,8
	movdqa	%xmm4,%xmm6
	psrlq	$7,%xmm4
	paddq	%xmm5,%xmm2
	movdqa	%xmm6,%xmm5
	psrlq	$1,%xmm6
	psllq	$56,%xmm5
	pxor	%xmm6,%xmm4
	psrlq	$7,%xmm6
	pxor	%xmm5,%xmm4
	psllq	$7,%xmm5
	pxor	%xmm6,%xmm4
	movdqa	%xmm1,%xmm6
	pxor	%xmm5,%xmm4
	movdqa	%xmm1,%xmm5
	psrlq	$6,%xmm6
	paddq	%xmm4,%xmm2
	movdqa	%xmm1,%xmm4
	psrlq	$19,%xmm5
	psllq	$3,%xmm4
	pxor	%xmm5,%xmm6
	psrlq	$42,%xmm5
	pxor	%xmm4,%xmm6
	psllq	$42,%xmm4
	pxor	%xmm5,%xmm6
	movdqa	(%edx),%xmm5
	pxor	%xmm4,%xmm6
	movdqa	32(%ebp),%xmm4
	movq	%mm4,%mm1
	paddq	%xmm6,%xmm2
	movq	-96(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,(%esp)
	paddq	%xmm2,%xmm4
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,32(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	24(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	56(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	40(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	(%esp),%mm5
	paddq	%mm6,%mm2
	movq	8(%esp),%mm6
	movq	%mm4,%mm1
	movq	-88(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,56(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,24(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	16(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	48(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	32(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	56(%esp),%mm5
	paddq	%mm6,%mm0
	movq	(%esp),%mm6
	movdqa	%xmm4,-96(%edx)
	movdqa	%xmm0,%xmm6
	movdqa	%xmm5,%xmm4
.byte	102,15,58,15,235,8
	movdqa	%xmm7,48(%edx)
.byte	102,15,58,15,247,8
	movdqa	%xmm5,%xmm7
	psrlq	$7,%xmm5
	paddq	%xmm6,%xmm3
	movdqa	%xmm7,%xmm6
	psrlq	$1,%xmm7
	psllq	$56,%xmm6
	pxor	%xmm7,%xmm5
	psrlq	$7,%xmm7
	pxor	%xmm6,%xmm5
	psllq	$7,%xmm6
	pxor	%xmm7,%xmm5
	movdqa	%xmm2,%xmm7
	pxor	%xmm6,%xmm5
	movdqa	%xmm2,%xmm6
	psrlq	$6,%xmm7
	paddq	%xmm5,%xmm3
	movdqa	%xmm2,%xmm5
	psrlq	$19,%xmm6
	psllq	$3,%xmm5
	pxor	%xmm6,%xmm7
	psrlq	$42,%xmm6
	pxor	%xmm5,%xmm7
	psllq	$42,%xmm5
	pxor	%xmm6,%xmm7
	movdqa	16(%edx),%xmm6
	pxor	%xmm5,%xmm7
	movdqa	48(%ebp),%xmm5
	movq	%mm4,%mm1
	paddq	%xmm7,%xmm3
	movq	-80(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,48(%esp)
	paddq	%xmm3,%xmm5
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,16(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	8(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	40(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	24(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	48(%esp),%mm5
	paddq	%mm6,%mm2
	movq	56(%esp),%mm6
	movq	%mm4,%mm1
	movq	-72(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,40(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,8(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	32(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	16(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	40(%esp),%mm5
	paddq	%mm6,%mm0
	movq	48(%esp),%mm6
	movdqa	%xmm5,-80(%edx)
	movdqa	%xmm1,%xmm7
	movdqa	%xmm6,%xmm5
.byte	102,15,58,15,244,8
	movdqa	%xmm0,(%edx)
.byte	102,15,58,15,248,8
	movdqa	%xmm6,%xmm0
	psrlq	$7,%xmm6
	paddq	%xmm7,%xmm4
	movdqa	%xmm0,%xmm7
	psrlq	$1,%xmm0
	psllq	$56,%xmm7
	pxor	%xmm0,%xmm6
	psrlq	$7,%xmm0
	pxor	%xmm7,%xmm6
	psllq	$7,%xmm7
	pxor	%xmm0,%xmm6
	movdqa	%xmm3,%xmm0
	pxor	%xmm7,%xmm6
	movdqa	%xmm3,%xmm7
	psrlq	$6,%xmm0
	paddq	%xmm6,%xmm4
	movdqa	%xmm3,%xmm6
	psrlq	$19,%xmm7
	psllq	$3,%xmm6
	pxor	%xmm7,%xmm0
	psrlq	$42,%xmm7
	pxor	%xmm6,%xmm0
	psllq	$42,%xmm6
	pxor	%xmm7,%xmm0
	movdqa	32(%edx),%xmm7
	pxor	%xmm6,%xmm0
	movdqa	64(%ebp),%xmm6
	movq	%mm4,%mm1
	paddq	%xmm0,%xmm4
	movq	-64(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,32(%esp)
	paddq	%xmm4,%xmm6
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	56(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	24(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	8(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	32(%esp),%mm5
	paddq	%mm6,%mm2
	movq	40(%esp),%mm6
	movq	%mm4,%mm1
	movq	-56(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,24(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,56(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	48(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	16(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	24(%esp),%mm5
	paddq	%mm6,%mm0
	movq	32(%esp),%mm6
	movdqa	%xmm6,-64(%edx)
	movdqa	%xmm2,%xmm0
	movdqa	%xmm7,%xmm6
.byte	102,15,58,15,253,8
	movdqa	%xmm1,16(%edx)
.byte	102,15,58,15,193,8
	movdqa	%xmm7,%xmm1
	psrlq	$7,%xmm7
	paddq	%xmm0,%xmm5
	movdqa	%xmm1,%xmm0
	psrlq	$1,%xmm1
	psllq	$56,%xmm0
	pxor	%xmm1,%xmm7
	psrlq	$7,%xmm1
	pxor	%xmm0,%xmm7
	psllq	$7,%xmm0
	pxor	%xmm1,%xmm7
	movdqa	%xmm4,%xmm1
	pxor	%xmm0,%xmm7
	movdqa	%xmm4,%xmm0
	psrlq	$6,%xmm1
	paddq	%xmm7,%xmm5
	movdqa	%xmm4,%xmm7
	psrlq	$19,%xmm0
	psllq	$3,%xmm7
	pxor	%xmm0,%xmm1
	psrlq	$42,%xmm0
	pxor	%xmm7,%xmm1
	psllq	$42,%xmm7
	pxor	%xmm0,%xmm1
	movdqa	48(%edx),%xmm0
	pxor	%xmm7,%xmm1
	movdqa	80(%ebp),%xmm7
	movq	%mm4,%mm1
	paddq	%xmm1,%xmm5
	movq	-48(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,16(%esp)
	paddq	%xmm5,%xmm7
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,48(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	40(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	8(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	56(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	16(%esp),%mm5
	paddq	%mm6,%mm2
	movq	24(%esp),%mm6
	movq	%mm4,%mm1
	movq	-40(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,8(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,40(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	32(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	48(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	8(%esp),%mm5
	paddq	%mm6,%mm0
	movq	16(%esp),%mm6
	movdqa	%xmm7,-48(%edx)
	movdqa	%xmm3,%xmm1
	movdqa	%xmm0,%xmm7
.byte	102,15,58,15,198,8
	movdqa	%xmm2,32(%edx)
.byte	102,15,58,15,202,8
	movdqa	%xmm0,%xmm2
	psrlq	$7,%xmm0
	paddq	%xmm1,%xmm6
	movdqa	%xmm2,%xmm1
	psrlq	$1,%xmm2
	psllq	$56,%xmm1
	pxor	%xmm2,%xmm0
	psrlq	$7,%xmm2
	pxor	%xmm1,%xmm0
	psllq	$7,%xmm1
	pxor	%xmm2,%xmm0
	movdqa	%xmm5,%xmm2
	pxor	%xmm1,%xmm0
	movdqa	%xmm5,%xmm1
	psrlq	$6,%xmm2
	paddq	%xmm0,%xmm6
	movdqa	%xmm5,%xmm0
	psrlq	$19,%xmm1
	psllq	$3,%xmm0
	pxor	%xmm1,%xmm2
	psrlq	$42,%xmm1
	pxor	%xmm0,%xmm2
	psllq	$42,%xmm0
	pxor	%xmm1,%xmm2
	movdqa	(%edx),%xmm1
	pxor	%xmm0,%xmm2
	movdqa	96(%ebp),%xmm0
	movq	%mm4,%mm1
	paddq	%xmm2,%xmm6
	movq	-32(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,(%esp)
	paddq	%xmm6,%xmm0
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,32(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	24(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	56(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	40(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	(%esp),%mm5
	paddq	%mm6,%mm2
	movq	8(%esp),%mm6
	movq	%mm4,%mm1
	movq	-24(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,56(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,24(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	16(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	48(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	32(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	56(%esp),%mm5
	paddq	%mm6,%mm0
	movq	(%esp),%mm6
	movdqa	%xmm0,-32(%edx)
	movdqa	%xmm4,%xmm2
	movdqa	%xmm1,%xmm0
.byte	102,15,58,15,207,8
	movdqa	%xmm3,48(%edx)
.byte	102,15,58,15,211,8
	movdqa	%xmm1,%xmm3
	psrlq	$7,%xmm1
	paddq	%xmm2,%xmm7
	movdqa	%xmm3,%xmm2
	psrlq	$1,%xmm3
	psllq	$56,%xmm2
	pxor	%xmm3,%xmm1
	psrlq	$7,%xmm3
	pxor	%xmm2,%xmm1
	psllq	$7,%xmm2
	pxor	%xmm3,%xmm1
	movdqa	%xmm6,%xmm3
	pxor	%xmm2,%xmm1
	movdqa	%xmm6,%xmm2
	psrlq	$6,%xmm3
	paddq	%xmm1,%xmm7
	movdqa	%xmm6,%xmm1
	psrlq	$19,%xmm2
	psllq	$3,%xmm1
	pxor	%xmm2,%xmm3
	psrlq	$42,%xmm2
	pxor	%xmm1,%xmm3
	psllq	$42,%xmm1
	pxor	%xmm2,%xmm3
	movdqa	16(%edx),%xmm2
	pxor	%xmm1,%xmm3
	movdqa	112(%ebp),%xmm1
	movq	%mm4,%mm1
	paddq	%xmm3,%xmm7
	movq	-16(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,48(%esp)
	paddq	%xmm7,%xmm1
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,16(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	8(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	40(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	24(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	48(%esp),%mm5
	paddq	%mm6,%mm2
	movq	56(%esp),%mm6
	movq	%mm4,%mm1
	movq	-8(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,40(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,8(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	32(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	16(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	40(%esp),%mm5
	paddq	%mm6,%mm0
	movq	48(%esp),%mm6
	movdqa	%xmm1,-16(%edx)
	leal	128(%ebp),%ebp
	decl	%ecx
	jnz	.L00800_47_ssse3
	movdqa	(%ebp),%xmm1
	leal	-640(%ebp),%ebp
	movdqu	(%ebx),%xmm0
.byte	102,15,56,0,193
	movdqa	(%ebp),%xmm3
	movdqa	%xmm1,%xmm2
	movdqu	16(%ebx),%xmm1
	paddq	%xmm0,%xmm3
.byte	102,15,56,0,202
	movq	%mm4,%mm1
	movq	-128(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,32(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	56(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	24(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	8(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	32(%esp),%mm5
	paddq	%mm6,%mm2
	movq	40(%esp),%mm6
	movq	%mm4,%mm1
	movq	-120(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,24(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,56(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	48(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	16(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	24(%esp),%mm5
	paddq	%mm6,%mm0
	movq	32(%esp),%mm6
	movdqa	%xmm3,-128(%edx)
	movdqa	16(%ebp),%xmm4
	movdqa	%xmm2,%xmm3
	movdqu	32(%ebx),%xmm2
	paddq	%xmm1,%xmm4
.byte	102,15,56,0,211
	movq	%mm4,%mm1
	movq	-112(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,16(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,48(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	40(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	8(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	56(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	16(%esp),%mm5
	paddq	%mm6,%mm2
	movq	24(%esp),%mm6
	movq	%mm4,%mm1
	movq	-104(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,8(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,40(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	32(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	48(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	8(%esp),%mm5
	paddq	%mm6,%mm0
	movq	16(%esp),%mm6
	movdqa	%xmm4,-112(%edx)
	movdqa	32(%ebp),%xmm5
	movdqa	%xmm3,%xmm4
	movdqu	48(%ebx),%xmm3
	paddq	%xmm2,%xmm5
.byte	102,15,56,0,220
	movq	%mm4,%mm1
	movq	-96(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,32(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	24(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	56(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	40(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	(%esp),%mm5
	paddq	%mm6,%mm2
	movq	8(%esp),%mm6
	movq	%mm4,%mm1
	movq	-88(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,56(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,24(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	16(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	48(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	32(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	56(%esp),%mm5
	paddq	%mm6,%mm0
	movq	(%esp),%mm6
	movdqa	%xmm5,-96(%edx)
	movdqa	48(%ebp),%xmm6
	movdqa	%xmm4,%xmm5
	movdqu	64(%ebx),%xmm4
	paddq	%xmm3,%xmm6
.byte	102,15,56,0,229
	movq	%mm4,%mm1
	movq	-80(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,48(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,16(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	8(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	40(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	24(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	48(%esp),%mm5
	paddq	%mm6,%mm2
	movq	56(%esp),%mm6
	movq	%mm4,%mm1
	movq	-72(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,40(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,8(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	32(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	16(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	40(%esp),%mm5
	paddq	%mm6,%mm0
	movq	48(%esp),%mm6
	movdqa	%xmm6,-80(%edx)
	movdqa	64(%ebp),%xmm7
	movdqa	%xmm5,%xmm6
	movdqu	80(%ebx),%xmm5
	paddq	%xmm4,%xmm7
.byte	102,15,56,0,238
	movq	%mm4,%mm1
	movq	-64(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,32(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	56(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	24(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	8(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	32(%esp),%mm5
	paddq	%mm6,%mm2
	movq	40(%esp),%mm6
	movq	%mm4,%mm1
	movq	-56(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,24(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,56(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	48(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	16(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	24(%esp),%mm5
	paddq	%mm6,%mm0
	movq	32(%esp),%mm6
	movdqa	%xmm7,-64(%edx)
	movdqa	%xmm0,(%edx)
	movdqa	80(%ebp),%xmm0
	movdqa	%xmm6,%xmm7
	movdqu	96(%ebx),%xmm6
	paddq	%xmm5,%xmm0
.byte	102,15,56,0,247
	movq	%mm4,%mm1
	movq	-48(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,16(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,48(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	40(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	8(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	56(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	16(%esp),%mm5
	paddq	%mm6,%mm2
	movq	24(%esp),%mm6
	movq	%mm4,%mm1
	movq	-40(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,8(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,40(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	32(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	48(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	8(%esp),%mm5
	paddq	%mm6,%mm0
	movq	16(%esp),%mm6
	movdqa	%xmm0,-48(%edx)
	movdqa	%xmm1,16(%edx)
	movdqa	96(%ebp),%xmm1
	movdqa	%xmm7,%xmm0
	movdqu	112(%ebx),%xmm7
	paddq	%xmm6,%xmm1
.byte	102,15,56,0,248
	movq	%mm4,%mm1
	movq	-32(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,32(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	24(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	56(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	40(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	(%esp),%mm5
	paddq	%mm6,%mm2
	movq	8(%esp),%mm6
	movq	%mm4,%mm1
	movq	-24(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,56(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,24(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	16(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	48(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	32(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	56(%esp),%mm5
	paddq	%mm6,%mm0
	movq	(%esp),%mm6
	movdqa	%xmm1,-32(%edx)
	movdqa	%xmm2,32(%edx)
	movdqa	112(%ebp),%xmm2
	movdqa	(%edx),%xmm0
	paddq	%xmm7,%xmm2
	movq	%mm4,%mm1
	movq	-16(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,48(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm0
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm0,16(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	8(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	40(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm0,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm0,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	24(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm0,%mm2
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	pxor	%mm7,%mm6
	movq	48(%esp),%mm5
	paddq	%mm6,%mm2
	movq	56(%esp),%mm6
	movq	%mm4,%mm1
	movq	-8(%edx),%mm7
	pxor	%mm6,%mm5
	psrlq	$14,%mm1
	movq	%mm4,40(%esp)
	pand	%mm4,%mm5
	psllq	$23,%mm4
	paddq	%mm3,%mm2
	movq	%mm1,%mm3
	psrlq	$4,%mm1
	pxor	%mm6,%mm5
	pxor	%mm4,%mm3
	psllq	$23,%mm4
	pxor	%mm1,%mm3
	movq	%mm2,8(%esp)
	paddq	%mm5,%mm7
	pxor	%mm4,%mm3
	psrlq	$23,%mm1
	paddq	(%esp),%mm7
	pxor	%mm1,%mm3
	psllq	$4,%mm4
	pxor	%mm4,%mm3
	movq	32(%esp),%mm4
	paddq	%mm7,%mm3
	movq	%mm2,%mm5
	psrlq	$28,%mm5
	paddq	%mm3,%mm4
	movq	%mm2,%mm6
	movq	%mm5,%mm7
	psllq	$25,%mm6
	movq	16(%esp),%mm1
	psrlq	$6,%mm5
	pxor	%mm6,%mm7
	psllq	$5,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm2
	psrlq	$5,%mm5
	pxor	%mm6,%mm7
	pand	%mm2,%mm0
	psllq	$6,%mm6
	pxor	%mm5,%mm7
	pxor	%mm1,%mm0
	pxor	%mm7,%mm6
	movq	40(%esp),%mm5
	paddq	%mm6,%mm0
	movq	48(%esp),%mm6
	movdqa	%xmm2,-16(%edx)
	movq	8(%esp),%mm1
	paddq	%mm3,%mm0
	movq	24(%esp),%mm3
	movq	56(%esp),%mm7
	pxor	%mm1,%mm2
	paddq	(%esi),%mm0
	paddq	8(%esi),%mm1
	paddq	16(%esi),%mm2
	paddq	24(%esi),%mm3
	paddq	32(%esi),%mm4
	paddq	40(%esi),%mm5
	paddq	48(%esi),%mm6
	paddq	56(%esi),%mm7
	movq	%mm0,(%esi)
	movq	%mm1,8(%esi)
	movq	%mm2,16(%esi)
	movq	%mm3,24(%esi)
	movq	%mm4,32(%esi)
	movq	%mm5,40(%esi)
	movq	%mm6,48(%esi)
	movq	%mm7,56(%esi)
	cmpl	%eax,%edi
	jb	.L007loop_ssse3
	movl	76(%edx),%esp
	emms
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.align	16
.L002loop_x86:
	movl	(%edi),%eax
	movl	4(%edi),%ebx
	movl	8(%edi),%ecx
	movl	12(%edi),%edx
	bswap	%eax
	bswap	%ebx
	bswap	%ecx
	bswap	%edx
	pushl	%eax
	pushl	%ebx
	pushl	%ecx
	pushl	%edx
	movl	16(%edi),%eax
	movl	20(%edi),%ebx
	movl	24(%edi),%ecx
	movl	28(%edi),%edx
	bswap	%eax
	bswap	%ebx
	bswap	%ecx
	bswap	%edx
	pushl	%eax
	pushl	%ebx
	pushl	%ecx
	pushl	%edx
	movl	32(%edi),%eax
	movl	36(%edi),%ebx
	movl	40(%edi),%ecx
	movl	44(%edi),%edx
	bswap	%eax
	bswap	%ebx
	bswap	%ecx
	bswap	%edx
	pushl	%eax
	pushl	%ebx
	pushl	%ecx
	pushl	%edx
	movl	48(%edi),%eax
	movl	52(%edi),%ebx
	movl	56(%edi),%ecx
	movl	60(%edi),%edx
	bswap	%eax
	bswap	%ebx
	bswap	%ecx
	bswap	%edx
	pushl	%eax
	pushl	%ebx
	pushl	%ecx
	pushl	%edx
	movl	64(%edi),%eax
	movl	68(%edi),%ebx
	movl	72(%edi),%ecx
	movl	76(%edi),%edx
	bswap	%eax
	bswap	%ebx
	bswap	%ecx
	bswap	%edx
	pushl	%eax
	pushl	%ebx
	pushl	%ecx
	pushl	%edx
	movl	80(%edi),%eax
	movl	84(%edi),%ebx
	movl	88(%edi),%ecx
	movl	92(%edi),%edx
	bswap	%eax
	bswap	%ebx
	bswap	%ecx
	bswap	%edx
	pushl	%eax
	pushl	%ebx
	pushl	%ecx
	pushl	%edx
	movl	96(%edi),%eax
	movl	100(%edi),%ebx
	movl	104(%edi),%ecx
	movl	108(%edi),%edx
	bswap	%eax
	bswap	%ebx
	bswap	%ecx
	bswap	%edx
	pushl	%eax
	pushl	%ebx
	pushl	%ecx
	pushl	%edx
	movl	112(%edi),%eax
	movl	116(%edi),%ebx
	movl	120(%edi),%ecx
	movl	124(%edi),%edx
	bswap	%eax
	bswap	%ebx
	bswap	%ecx
	bswap	%edx
	pushl	%eax
	pushl	%ebx
	pushl	%ecx
	pushl	%edx
	addl	$128,%edi
	subl	$72,%esp
	movl	%edi,204(%esp)
	leal	8(%esp),%edi
	movl	$16,%ecx
.long	2784229001
.align	16
.L00900_15_x86:
	movl	40(%esp),%ecx
	movl	44(%esp),%edx
	movl	%ecx,%esi
	shrl	$9,%ecx
	movl	%edx,%edi
	shrl	$9,%edx
	movl	%ecx,%ebx
	shll	$14,%esi
	movl	%edx,%eax
	shll	$14,%edi
	xorl	%esi,%ebx
	shrl	$5,%ecx
	xorl	%edi,%eax
	shrl	$5,%edx
	xorl	%ecx,%eax
	shll	$4,%esi
	xorl	%edx,%ebx
	shll	$4,%edi
	xorl	%esi,%ebx
	shrl	$4,%ecx
	xorl	%edi,%eax
	shrl	$4,%edx
	xorl	%ecx,%eax
	shll	$5,%esi
	xorl	%edx,%ebx
	shll	$5,%edi
	xorl	%esi,%eax
	xorl	%edi,%ebx
	movl	48(%esp),%ecx
	movl	52(%esp),%edx
	movl	56(%esp),%esi
	movl	60(%esp),%edi
	addl	64(%esp),%eax
	adcl	68(%esp),%ebx
	xorl	%esi,%ecx
	xorl	%edi,%edx
	andl	40(%esp),%ecx
	andl	44(%esp),%edx
	addl	192(%esp),%eax
	adcl	196(%esp),%ebx
	xorl	%esi,%ecx
	xorl	%edi,%edx
	movl	(%ebp),%esi
	movl	4(%ebp),%edi
	addl	%ecx,%eax
	adcl	%edx,%ebx
	movl	32(%esp),%ecx
	movl	36(%esp),%edx
	addl	%esi,%eax
	adcl	%edi,%ebx
	movl	%eax,(%esp)
	movl	%ebx,4(%esp)
	addl	%ecx,%eax
	adcl	%edx,%ebx
	movl	8(%esp),%ecx
	movl	12(%esp),%edx
	movl	%eax,32(%esp)
	movl	%ebx,36(%esp)
	movl	%ecx,%esi
	shrl	$2,%ecx
	movl	%edx,%edi
	shrl	$2,%edx
	movl	%ecx,%ebx
	shll	$4,%esi
	movl	%edx,%eax
	shll	$4,%edi
	xorl	%esi,%ebx
	shrl	$5,%ecx
	xorl	%edi,%eax
	shrl	$5,%edx
	xorl	%ecx,%ebx
	shll	$21,%esi
	xorl	%edx,%eax
	shll	$21,%edi
	xorl	%esi,%eax
	shrl	$21,%ecx
	xorl	%edi,%ebx
	shrl	$21,%edx
	xorl	%ecx,%eax
	shll	$5,%esi
	xorl	%edx,%ebx
	shll	$5,%edi
	xorl	%esi,%eax
	xorl	%edi,%ebx
	movl	8(%esp),%ecx
	movl	12(%esp),%edx
	movl	16(%esp),%esi
	movl	20(%esp),%edi
	addl	(%esp),%eax
	adcl	4(%esp),%ebx
	orl	%esi,%ecx
	orl	%edi,%edx
	andl	24(%esp),%ecx
	andl	28(%esp),%edx
	andl	8(%esp),%esi
	andl	12(%esp),%edi
	orl	%esi,%ecx
	orl	%edi,%edx
	addl	%ecx,%eax
	adcl	%edx,%ebx
	movl	%eax,(%esp)
	movl	%ebx,4(%esp)
	movb	(%ebp),%dl
	subl	$8,%esp
	leal	8(%ebp),%ebp
	cmpb	$148,%dl
	jne	.L00900_15_x86
.align	16
.L01016_79_x86:
	movl	312(%esp),%ecx
	movl	316(%esp),%edx
	movl	%ecx,%esi
	shrl	$1,%ecx
	movl	%edx,%edi
	shrl	$1,%edx
	movl	%ecx,%eax
	shll	$24,%esi
	movl	%edx,%ebx
	shll	$24,%edi
	xorl	%esi,%ebx
	shrl	$6,%ecx
	xorl	%edi,%eax
	shrl	$6,%edx
	xorl	%ecx,%eax
	shll	$7,%esi
	xorl	%edx,%ebx
	shll	$1,%edi
	xorl	%esi,%ebx
	shrl	$1,%ecx
	xorl	%edi,%eax
	shrl	$1,%edx
	xorl	%ecx,%eax
	shll	$6,%edi
	xorl	%edx,%ebx
	xorl	%edi,%eax
	movl	%eax,(%esp)
	movl	%ebx,4(%esp)
	movl	208(%esp),%ecx
	movl	212(%esp),%edx
	movl	%ecx,%esi
	shrl	$6,%ecx
	movl	%edx,%edi
	shrl	$6,%edx
	movl	%ecx,%eax
	shll	$3,%esi
	movl	%edx,%ebx
	shll	$3,%edi
	xorl	%esi,%eax
	shrl	$13,%ecx
	xorl	%edi,%ebx
	shrl	$13,%edx
	xorl	%ecx,%eax
	shll	$10,%esi
	xorl	%edx,%ebx
	shll	$10,%edi
	xorl	%esi,%ebx
	shrl	$10,%ecx
	xorl	%edi,%eax
	shrl	$10,%edx
	xorl	%ecx,%ebx
	shll	$13,%edi
	xorl	%edx,%eax
	xorl	%edi,%eax
	movl	320(%esp),%ecx
	movl	324(%esp),%edx
	addl	(%esp),%eax
	adcl	4(%esp),%ebx
	movl	248(%esp),%esi
	movl	252(%esp),%edi
	addl	%ecx,%eax
	adcl	%edx,%ebx
	addl	%esi,%eax
	adcl	%edi,%ebx
	movl	%eax,192(%esp)
	movl	%ebx,196(%esp)
	movl	40(%esp),%ecx
	movl	44(%esp),%edx
	movl	%ecx,%esi
	shrl	$9,%ecx
	movl	%edx,%edi
	shrl	$9,%edx
	movl	%ecx,%ebx
	shll	$14,%esi
	movl	%edx,%eax
	shll	$14,%edi
	xorl	%esi,%ebx
	shrl	$5,%ecx
	xorl	%edi,%eax
	shrl	$5,%edx
	xorl	%ecx,%eax
	shll	$4,%esi
	xorl	%edx,%ebx
	shll	$4,%edi
	xorl	%esi,%ebx
	shrl	$4,%ecx
	xorl	%edi,%eax
	shrl	$4,%edx
	xorl	%ecx,%eax
	shll	$5,%esi
	xorl	%edx,%ebx
	shll	$5,%edi
	xorl	%esi,%eax
	xorl	%edi,%ebx
	movl	48(%esp),%ecx
	movl	52(%esp),%edx
	movl	56(%esp),%esi
	movl	60(%esp),%edi
	addl	64(%esp),%eax
	adcl	68(%esp),%ebx
	xorl	%esi,%ecx
	xorl	%edi,%edx
	andl	40(%esp),%ecx
	andl	44(%esp),%edx
	addl	192(%esp),%eax
	adcl	196(%esp),%ebx
	xorl	%esi,%ecx
	xorl	%edi,%edx
	movl	(%ebp),%esi
	movl	4(%ebp),%edi
	addl	%ecx,%eax
	adcl	%edx,%ebx
	movl	32(%esp),%ecx
	movl	36(%esp),%edx
	addl	%esi,%eax
	adcl	%edi,%ebx
	movl	%eax,(%esp)
	movl	%ebx,4(%esp)
	addl	%ecx,%eax
	adcl	%edx,%ebx
	movl	8(%esp),%ecx
	movl	12(%esp),%edx
	movl	%eax,32(%esp)
	movl	%ebx,36(%esp)
	movl	%ecx,%esi
	shrl	$2,%ecx
	movl	%edx,%edi
	shrl	$2,%edx
	movl	%ecx,%ebx
	shll	$4,%esi
	movl	%edx,%eax
	shll	$4,%edi
	xorl	%esi,%ebx
	shrl	$5,%ecx
	xorl	%edi,%eax
	shrl	$5,%edx
	xorl	%ecx,%ebx
	shll	$21,%esi
	xorl	%edx,%eax
	shll	$21,%edi
	xorl	%esi,%eax
	shrl	$21,%ecx
	xorl	%edi,%ebx
	shrl	$21,%edx
	xorl	%ecx,%eax
	shll	$5,%esi
	xorl	%edx,%ebx
	shll	$5,%edi
	xorl	%esi,%eax
	xorl	%edi,%ebx
	movl	8(%esp),%ecx
	movl	12(%esp),%edx
	movl	16(%esp),%esi
	movl	20(%esp),%edi
	addl	(%esp),%eax
	adcl	4(%esp),%ebx
	orl	%esi,%ecx
	orl	%edi,%edx
	andl	24(%esp),%ecx
	andl	28(%esp),%edx
	andl	8(%esp),%esi
	andl	12(%esp),%edi
	orl	%esi,%ecx
	orl	%edi,%edx
	addl	%ecx,%eax
	adcl	%edx,%ebx
	movl	%eax,(%esp)
	movl	%ebx,4(%esp)
	movb	(%ebp),%dl
	subl	$8,%esp
	leal	8(%ebp),%ebp
	cmpb	$23,%dl
	jne	.L01016_79_x86
	movl	840(%esp),%esi
	movl	844(%esp),%edi
	movl	(%esi),%eax
	movl	4(%esi),%ebx
	movl	8(%esi),%ecx
	movl	12(%esi),%edx
	addl	8(%esp),%eax
	adcl	12(%esp),%ebx
	movl	%eax,(%esi)
	movl	%ebx,4(%esi)
	addl	16(%esp),%ecx
	adcl	20(%esp),%edx
	movl	%ecx,8(%esi)
	movl	%edx,12(%esi)
	movl	16(%esi),%eax
	movl	20(%esi),%ebx
	movl	24(%esi),%ecx
	movl	28(%esi),%edx
	addl	24(%esp),%eax
	adcl	28(%esp),%ebx
	movl	%eax,16(%esi)
	movl	%ebx,20(%esi)
	addl	32(%esp),%ecx
	adcl	36(%esp),%edx
	movl	%ecx,24(%esi)
	movl	%edx,28(%esi)
	movl	32(%esi),%eax
	movl	36(%esi),%ebx
	movl	40(%esi),%ecx
	movl	44(%esi),%edx
	addl	40(%esp),%eax
	adcl	44(%esp),%ebx
	movl	%eax,32(%esi)
	movl	%ebx,36(%esi)
	addl	48(%esp),%ecx
	adcl	52(%esp),%edx
	movl	%ecx,40(%esi)
	movl	%edx,44(%esi)
	movl	48(%esi),%eax
	movl	52(%esi),%ebx
	movl	56(%esi),%ecx
	movl	60(%esi),%edx
	addl	56(%esp),%eax
	adcl	60(%esp),%ebx
	movl	%eax,48(%esi)
	movl	%ebx,52(%esi)
	addl	64(%esp),%ecx
	adcl	68(%esp),%edx
	movl	%ecx,56(%esi)
	movl	%edx,60(%esi)
	addl	$840,%esp
	subl	$640,%ebp
	cmpl	8(%esp),%edi
	jb	.L002loop_x86
	movl	12(%esp),%esp
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.align	64
.L001K512:
.long	3609767458,1116352408
.long	602891725,1899447441
.long	3964484399,3049323471
.long	2173295548,3921009573
.long	4081628472,961987163
.long	3053834265,1508970993
.long	2937671579,2453635748
.long	3664609560,2870763221
.long	2734883394,3624381080
.long	1164996542,310598401
.long	1323610764,607225278
.long	3590304994,1426881987
.long	4068182383,1925078388
.long	991336113,2162078206
.long	633803317,2614888103
.long	3479774868,3248222580
.long	2666613458,3835390401
.long	944711139,4022224774
.long	2341262773,264347078
.long	2007800933,604807628
.long	1495990901,770255983
.long	1856431235,1249150122
.long	3175218132,1555081692
.long	2198950837,1996064986
.long	3999719339,2554220882
.long	766784016,2821834349
.long	2566594879,2952996808
.long	3203337956,3210313671
.long	1034457026,3336571891
.long	2466948901,3584528711
.long	3758326383,113926993
.long	168717936,338241895
.long	1188179964,666307205
.long	1546045734,773529912
.long	1522805485,1294757372
.long	2643833823,1396182291
.long	2343527390,1695183700
.long	1014477480,1986661051
.long	1206759142,2177026350
.long	344077627,2456956037
.long	1290863460,2730485921
.long	3158454273,2820302411
.long	3505952657,3259730800
.long	106217008,3345764771
.long	3606008344,3516065817
.long	1432725776,3600352804
.long	1467031594,4094571909
.long	851169720,275423344
.long	3100823752,430227734
.long	1363258195,506948616
.long	3750685593,659060556
.long	3785050280,883997877
.long	3318307427,958139571
.long	3812723403,1322822218
.long	2003034995,1537002063
.long	3602036899,1747873779
.long	1575990012,1955562222
.long	1125592928,2024104815
.long	2716904306,2227730452
.long	442776044,2361852424
.long	593698344,2428436474
.long	3733110249,2756734187
.long	2999351573,3204031479
.long	3815920427,3329325298
.long	3928383900,3391569614
.long	566280711,3515267271
.long	3454069534,3940187606
.long	4000239992,4118630271
.long	1914138554,116418474
.long	2731055270,174292421
.long	3203993006,289380356
.long	320620315,460393269
.long	587496836,685471733
.long	1086792851,852142971
.long	365543100,1017036298
.long	2618297676,1126000580
.long	3409855158,1288033470
.long	4234509866,1501505948
.long	987167468,1607167915
.long	1246189591,1816402316
.long	67438087,66051
.long	202182159,134810123
.size	sha512_block_data_order,.-.L_sha512_block_data_order_begin
.byte	83,72,65,53,49,50,32,98,108,111,99,107,32,116,114,97
.byte	110,115,102,111,114,109,32,102,111,114,32,120,56,54,44,32
.byte	67,82,89,80,84,79,71,65,77,83,32,98,121,32,60,97
.byte	112,112,114,111,64,111,112,101,110,115,115,108,46,111,114,103
.byte	62,0
.comm	OPENSSL_ia32cap_P,16,4

	.section ".note.gnu.property", "a"
	.p2align 2
	.long 1f - 0f
	.long 4f - 1f
	.long 5
0:
	.asciz "GNU"
1:
	.p2align 2
	.long 0xc0000002
	.long 3f - 2f
2:
	.long 3
3:
	.p2align 2
4:
                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/whrlpool/                                0000775 0000000 0000000 00000000000 14746647661 0025411 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/whrlpool/wp-mmx.S                        0000664 0000000 0000000 00000073654 14746647661 0027001 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        .text
.globl	whirlpool_block_mmx
.type	whirlpool_block_mmx,@function
.align	16
whirlpool_block_mmx:
.L_whirlpool_block_mmx_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%esi
	movl	24(%esp),%edi
	movl	28(%esp),%ebp
	movl	%esp,%eax
	subl	$148,%esp
	andl	$-64,%esp
	leal	128(%esp),%ebx
	movl	%esi,(%ebx)
	movl	%edi,4(%ebx)
	movl	%ebp,8(%ebx)
	movl	%eax,16(%ebx)
	call	.L000pic_point
.L000pic_point:
	popl	%ebp
	leal	.L001table-.L000pic_point(%ebp),%ebp
	xorl	%ecx,%ecx
	xorl	%edx,%edx
	movq	(%esi),%mm0
	movq	8(%esi),%mm1
	movq	16(%esi),%mm2
	movq	24(%esi),%mm3
	movq	32(%esi),%mm4
	movq	40(%esi),%mm5
	movq	48(%esi),%mm6
	movq	56(%esi),%mm7
.L002outerloop:
	movq	%mm0,(%esp)
	movq	%mm1,8(%esp)
	movq	%mm2,16(%esp)
	movq	%mm3,24(%esp)
	movq	%mm4,32(%esp)
	movq	%mm5,40(%esp)
	movq	%mm6,48(%esp)
	movq	%mm7,56(%esp)
	pxor	(%edi),%mm0
	pxor	8(%edi),%mm1
	pxor	16(%edi),%mm2
	pxor	24(%edi),%mm3
	pxor	32(%edi),%mm4
	pxor	40(%edi),%mm5
	pxor	48(%edi),%mm6
	pxor	56(%edi),%mm7
	movq	%mm0,64(%esp)
	movq	%mm1,72(%esp)
	movq	%mm2,80(%esp)
	movq	%mm3,88(%esp)
	movq	%mm4,96(%esp)
	movq	%mm5,104(%esp)
	movq	%mm6,112(%esp)
	movq	%mm7,120(%esp)
	xorl	%esi,%esi
	movl	%esi,12(%ebx)
.align	16
.L003round:
	movq	4096(%ebp,%esi,8),%mm0
	movl	(%esp),%eax
	movl	4(%esp),%ebx
	movzbl	%al,%ecx
	movzbl	%ah,%edx
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm0
	movq	7(%ebp,%edi,8),%mm1
	movl	8(%esp),%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	movq	6(%ebp,%esi,8),%mm2
	movq	5(%ebp,%edi,8),%mm3
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	movq	4(%ebp,%esi,8),%mm4
	movq	3(%ebp,%edi,8),%mm5
	movl	12(%esp),%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	movq	2(%ebp,%esi,8),%mm6
	movq	1(%ebp,%edi,8),%mm7
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm1
	pxor	7(%ebp,%edi,8),%mm2
	movl	16(%esp),%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	6(%ebp,%esi,8),%mm3
	pxor	5(%ebp,%edi,8),%mm4
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	4(%ebp,%esi,8),%mm5
	pxor	3(%ebp,%edi,8),%mm6
	movl	20(%esp),%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	2(%ebp,%esi,8),%mm7
	pxor	1(%ebp,%edi,8),%mm0
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm2
	pxor	7(%ebp,%edi,8),%mm3
	movl	24(%esp),%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	6(%ebp,%esi,8),%mm4
	pxor	5(%ebp,%edi,8),%mm5
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	4(%ebp,%esi,8),%mm6
	pxor	3(%ebp,%edi,8),%mm7
	movl	28(%esp),%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	2(%ebp,%esi,8),%mm0
	pxor	1(%ebp,%edi,8),%mm1
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm3
	pxor	7(%ebp,%edi,8),%mm4
	movl	32(%esp),%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	6(%ebp,%esi,8),%mm5
	pxor	5(%ebp,%edi,8),%mm6
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	4(%ebp,%esi,8),%mm7
	pxor	3(%ebp,%edi,8),%mm0
	movl	36(%esp),%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	2(%ebp,%esi,8),%mm1
	pxor	1(%ebp,%edi,8),%mm2
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm4
	pxor	7(%ebp,%edi,8),%mm5
	movl	40(%esp),%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	6(%ebp,%esi,8),%mm6
	pxor	5(%ebp,%edi,8),%mm7
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	4(%ebp,%esi,8),%mm0
	pxor	3(%ebp,%edi,8),%mm1
	movl	44(%esp),%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	2(%ebp,%esi,8),%mm2
	pxor	1(%ebp,%edi,8),%mm3
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm5
	pxor	7(%ebp,%edi,8),%mm6
	movl	48(%esp),%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	6(%ebp,%esi,8),%mm7
	pxor	5(%ebp,%edi,8),%mm0
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	4(%ebp,%esi,8),%mm1
	pxor	3(%ebp,%edi,8),%mm2
	movl	52(%esp),%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	2(%ebp,%esi,8),%mm3
	pxor	1(%ebp,%edi,8),%mm4
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm6
	pxor	7(%ebp,%edi,8),%mm7
	movl	56(%esp),%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	6(%ebp,%esi,8),%mm0
	pxor	5(%ebp,%edi,8),%mm1
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	4(%ebp,%esi,8),%mm2
	pxor	3(%ebp,%edi,8),%mm3
	movl	60(%esp),%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	2(%ebp,%esi,8),%mm4
	pxor	1(%ebp,%edi,8),%mm5
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm7
	pxor	7(%ebp,%edi,8),%mm0
	movl	64(%esp),%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	6(%ebp,%esi,8),%mm1
	pxor	5(%ebp,%edi,8),%mm2
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	4(%ebp,%esi,8),%mm3
	pxor	3(%ebp,%edi,8),%mm4
	movl	68(%esp),%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	2(%ebp,%esi,8),%mm5
	pxor	1(%ebp,%edi,8),%mm6
	movq	%mm0,(%esp)
	movq	%mm1,8(%esp)
	movq	%mm2,16(%esp)
	movq	%mm3,24(%esp)
	movq	%mm4,32(%esp)
	movq	%mm5,40(%esp)
	movq	%mm6,48(%esp)
	movq	%mm7,56(%esp)
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm0
	pxor	7(%ebp,%edi,8),%mm1
	movl	72(%esp),%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	6(%ebp,%esi,8),%mm2
	pxor	5(%ebp,%edi,8),%mm3
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	4(%ebp,%esi,8),%mm4
	pxor	3(%ebp,%edi,8),%mm5
	movl	76(%esp),%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	2(%ebp,%esi,8),%mm6
	pxor	1(%ebp,%edi,8),%mm7
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm1
	pxor	7(%ebp,%edi,8),%mm2
	movl	80(%esp),%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	6(%ebp,%esi,8),%mm3
	pxor	5(%ebp,%edi,8),%mm4
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	4(%ebp,%esi,8),%mm5
	pxor	3(%ebp,%edi,8),%mm6
	movl	84(%esp),%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	2(%ebp,%esi,8),%mm7
	pxor	1(%ebp,%edi,8),%mm0
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm2
	pxor	7(%ebp,%edi,8),%mm3
	movl	88(%esp),%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	6(%ebp,%esi,8),%mm4
	pxor	5(%ebp,%edi,8),%mm5
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	4(%ebp,%esi,8),%mm6
	pxor	3(%ebp,%edi,8),%mm7
	movl	92(%esp),%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	2(%ebp,%esi,8),%mm0
	pxor	1(%ebp,%edi,8),%mm1
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm3
	pxor	7(%ebp,%edi,8),%mm4
	movl	96(%esp),%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	6(%ebp,%esi,8),%mm5
	pxor	5(%ebp,%edi,8),%mm6
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	4(%ebp,%esi,8),%mm7
	pxor	3(%ebp,%edi,8),%mm0
	movl	100(%esp),%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	2(%ebp,%esi,8),%mm1
	pxor	1(%ebp,%edi,8),%mm2
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm4
	pxor	7(%ebp,%edi,8),%mm5
	movl	104(%esp),%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	6(%ebp,%esi,8),%mm6
	pxor	5(%ebp,%edi,8),%mm7
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	4(%ebp,%esi,8),%mm0
	pxor	3(%ebp,%edi,8),%mm1
	movl	108(%esp),%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	2(%ebp,%esi,8),%mm2
	pxor	1(%ebp,%edi,8),%mm3
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm5
	pxor	7(%ebp,%edi,8),%mm6
	movl	112(%esp),%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	6(%ebp,%esi,8),%mm7
	pxor	5(%ebp,%edi,8),%mm0
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	4(%ebp,%esi,8),%mm1
	pxor	3(%ebp,%edi,8),%mm2
	movl	116(%esp),%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	2(%ebp,%esi,8),%mm3
	pxor	1(%ebp,%edi,8),%mm4
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm6
	pxor	7(%ebp,%edi,8),%mm7
	movl	120(%esp),%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	6(%ebp,%esi,8),%mm0
	pxor	5(%ebp,%edi,8),%mm1
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	4(%ebp,%esi,8),%mm2
	pxor	3(%ebp,%edi,8),%mm3
	movl	124(%esp),%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	2(%ebp,%esi,8),%mm4
	pxor	1(%ebp,%edi,8),%mm5
	shrl	$16,%eax
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	(%ebp,%esi,8),%mm7
	pxor	7(%ebp,%edi,8),%mm0
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	6(%ebp,%esi,8),%mm1
	pxor	5(%ebp,%edi,8),%mm2
	shrl	$16,%ebx
	leal	(%ecx,%ecx,1),%esi
	movzbl	%bl,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%bh,%edx
	pxor	4(%ebp,%esi,8),%mm3
	pxor	3(%ebp,%edi,8),%mm4
	leal	(%ecx,%ecx,1),%esi
	movzbl	%al,%ecx
	leal	(%edx,%edx,1),%edi
	movzbl	%ah,%edx
	pxor	2(%ebp,%esi,8),%mm5
	pxor	1(%ebp,%edi,8),%mm6
	leal	128(%esp),%ebx
	movl	12(%ebx),%esi
	addl	$1,%esi
	cmpl	$10,%esi
	je	.L004roundsdone
	movl	%esi,12(%ebx)
	movq	%mm0,64(%esp)
	movq	%mm1,72(%esp)
	movq	%mm2,80(%esp)
	movq	%mm3,88(%esp)
	movq	%mm4,96(%esp)
	movq	%mm5,104(%esp)
	movq	%mm6,112(%esp)
	movq	%mm7,120(%esp)
	jmp	.L003round
.align	16
.L004roundsdone:
	movl	(%ebx),%esi
	movl	4(%ebx),%edi
	movl	8(%ebx),%eax
	pxor	(%edi),%mm0
	pxor	8(%edi),%mm1
	pxor	16(%edi),%mm2
	pxor	24(%edi),%mm3
	pxor	32(%edi),%mm4
	pxor	40(%edi),%mm5
	pxor	48(%edi),%mm6
	pxor	56(%edi),%mm7
	pxor	(%esi),%mm0
	pxor	8(%esi),%mm1
	pxor	16(%esi),%mm2
	pxor	24(%esi),%mm3
	pxor	32(%esi),%mm4
	pxor	40(%esi),%mm5
	pxor	48(%esi),%mm6
	pxor	56(%esi),%mm7
	movq	%mm0,(%esi)
	movq	%mm1,8(%esi)
	movq	%mm2,16(%esi)
	movq	%mm3,24(%esi)
	movq	%mm4,32(%esi)
	movq	%mm5,40(%esi)
	movq	%mm6,48(%esi)
	movq	%mm7,56(%esi)
	leal	64(%edi),%edi
	subl	$1,%eax
	jz	.L005alldone
	movl	%edi,4(%ebx)
	movl	%eax,8(%ebx)
	jmp	.L002outerloop
.L005alldone:
	emms
	movl	16(%ebx),%esp
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.align	64
.L001table:
.byte	24,24,96,24,192,120,48,216
.byte	24,24,96,24,192,120,48,216
.byte	35,35,140,35,5,175,70,38
.byte	35,35,140,35,5,175,70,38
.byte	198,198,63,198,126,249,145,184
.byte	198,198,63,198,126,249,145,184
.byte	232,232,135,232,19,111,205,251
.byte	232,232,135,232,19,111,205,251
.byte	135,135,38,135,76,161,19,203
.byte	135,135,38,135,76,161,19,203
.byte	184,184,218,184,169,98,109,17
.byte	184,184,218,184,169,98,109,17
.byte	1,1,4,1,8,5,2,9
.byte	1,1,4,1,8,5,2,9
.byte	79,79,33,79,66,110,158,13
.byte	79,79,33,79,66,110,158,13
.byte	54,54,216,54,173,238,108,155
.byte	54,54,216,54,173,238,108,155
.byte	166,166,162,166,89,4,81,255
.byte	166,166,162,166,89,4,81,255
.byte	210,210,111,210,222,189,185,12
.byte	210,210,111,210,222,189,185,12
.byte	245,245,243,245,251,6,247,14
.byte	245,245,243,245,251,6,247,14
.byte	121,121,249,121,239,128,242,150
.byte	121,121,249,121,239,128,242,150
.byte	111,111,161,111,95,206,222,48
.byte	111,111,161,111,95,206,222,48
.byte	145,145,126,145,252,239,63,109
.byte	145,145,126,145,252,239,63,109
.byte	82,82,85,82,170,7,164,248
.byte	82,82,85,82,170,7,164,248
.byte	96,96,157,96,39,253,192,71
.byte	96,96,157,96,39,253,192,71
.byte	188,188,202,188,137,118,101,53
.byte	188,188,202,188,137,118,101,53
.byte	155,155,86,155,172,205,43,55
.byte	155,155,86,155,172,205,43,55
.byte	142,142,2,142,4,140,1,138
.byte	142,142,2,142,4,140,1,138
.byte	163,163,182,163,113,21,91,210
.byte	163,163,182,163,113,21,91,210
.byte	12,12,48,12,96,60,24,108
.byte	12,12,48,12,96,60,24,108
.byte	123,123,241,123,255,138,246,132
.byte	123,123,241,123,255,138,246,132
.byte	53,53,212,53,181,225,106,128
.byte	53,53,212,53,181,225,106,128
.byte	29,29,116,29,232,105,58,245
.byte	29,29,116,29,232,105,58,245
.byte	224,224,167,224,83,71,221,179
.byte	224,224,167,224,83,71,221,179
.byte	215,215,123,215,246,172,179,33
.byte	215,215,123,215,246,172,179,33
.byte	194,194,47,194,94,237,153,156
.byte	194,194,47,194,94,237,153,156
.byte	46,46,184,46,109,150,92,67
.byte	46,46,184,46,109,150,92,67
.byte	75,75,49,75,98,122,150,41
.byte	75,75,49,75,98,122,150,41
.byte	254,254,223,254,163,33,225,93
.byte	254,254,223,254,163,33,225,93
.byte	87,87,65,87,130,22,174,213
.byte	87,87,65,87,130,22,174,213
.byte	21,21,84,21,168,65,42,189
.byte	21,21,84,21,168,65,42,189
.byte	119,119,193,119,159,182,238,232
.byte	119,119,193,119,159,182,238,232
.byte	55,55,220,55,165,235,110,146
.byte	55,55,220,55,165,235,110,146
.byte	229,229,179,229,123,86,215,158
.byte	229,229,179,229,123,86,215,158
.byte	159,159,70,159,140,217,35,19
.byte	159,159,70,159,140,217,35,19
.byte	240,240,231,240,211,23,253,35
.byte	240,240,231,240,211,23,253,35
.byte	74,74,53,74,106,127,148,32
.byte	74,74,53,74,106,127,148,32
.byte	218,218,79,218,158,149,169,68
.byte	218,218,79,218,158,149,169,68
.byte	88,88,125,88,250,37,176,162
.byte	88,88,125,88,250,37,176,162
.byte	201,201,3,201,6,202,143,207
.byte	201,201,3,201,6,202,143,207
.byte	41,41,164,41,85,141,82,124
.byte	41,41,164,41,85,141,82,124
.byte	10,10,40,10,80,34,20,90
.byte	10,10,40,10,80,34,20,90
.byte	177,177,254,177,225,79,127,80
.byte	177,177,254,177,225,79,127,80
.byte	160,160,186,160,105,26,93,201
.byte	160,160,186,160,105,26,93,201
.byte	107,107,177,107,127,218,214,20
.byte	107,107,177,107,127,218,214,20
.byte	133,133,46,133,92,171,23,217
.byte	133,133,46,133,92,171,23,217
.byte	189,189,206,189,129,115,103,60
.byte	189,189,206,189,129,115,103,60
.byte	93,93,105,93,210,52,186,143
.byte	93,93,105,93,210,52,186,143
.byte	16,16,64,16,128,80,32,144
.byte	16,16,64,16,128,80,32,144
.byte	244,244,247,244,243,3,245,7
.byte	244,244,247,244,243,3,245,7
.byte	203,203,11,203,22,192,139,221
.byte	203,203,11,203,22,192,139,221
.byte	62,62,248,62,237,198,124,211
.byte	62,62,248,62,237,198,124,211
.byte	5,5,20,5,40,17,10,45
.byte	5,5,20,5,40,17,10,45
.byte	103,103,129,103,31,230,206,120
.byte	103,103,129,103,31,230,206,120
.byte	228,228,183,228,115,83,213,151
.byte	228,228,183,228,115,83,213,151
.byte	39,39,156,39,37,187,78,2
.byte	39,39,156,39,37,187,78,2
.byte	65,65,25,65,50,88,130,115
.byte	65,65,25,65,50,88,130,115
.byte	139,139,22,139,44,157,11,167
.byte	139,139,22,139,44,157,11,167
.byte	167,167,166,167,81,1,83,246
.byte	167,167,166,167,81,1,83,246
.byte	125,125,233,125,207,148,250,178
.byte	125,125,233,125,207,148,250,178
.byte	149,149,110,149,220,251,55,73
.byte	149,149,110,149,220,251,55,73
.byte	216,216,71,216,142,159,173,86
.byte	216,216,71,216,142,159,173,86
.byte	251,251,203,251,139,48,235,112
.byte	251,251,203,251,139,48,235,112
.byte	238,238,159,238,35,113,193,205
.byte	238,238,159,238,35,113,193,205
.byte	124,124,237,124,199,145,248,187
.byte	124,124,237,124,199,145,248,187
.byte	102,102,133,102,23,227,204,113
.byte	102,102,133,102,23,227,204,113
.byte	221,221,83,221,166,142,167,123
.byte	221,221,83,221,166,142,167,123
.byte	23,23,92,23,184,75,46,175
.byte	23,23,92,23,184,75,46,175
.byte	71,71,1,71,2,70,142,69
.byte	71,71,1,71,2,70,142,69
.byte	158,158,66,158,132,220,33,26
.byte	158,158,66,158,132,220,33,26
.byte	202,202,15,202,30,197,137,212
.byte	202,202,15,202,30,197,137,212
.byte	45,45,180,45,117,153,90,88
.byte	45,45,180,45,117,153,90,88
.byte	191,191,198,191,145,121,99,46
.byte	191,191,198,191,145,121,99,46
.byte	7,7,28,7,56,27,14,63
.byte	7,7,28,7,56,27,14,63
.byte	173,173,142,173,1,35,71,172
.byte	173,173,142,173,1,35,71,172
.byte	90,90,117,90,234,47,180,176
.byte	90,90,117,90,234,47,180,176
.byte	131,131,54,131,108,181,27,239
.byte	131,131,54,131,108,181,27,239
.byte	51,51,204,51,133,255,102,182
.byte	51,51,204,51,133,255,102,182
.byte	99,99,145,99,63,242,198,92
.byte	99,99,145,99,63,242,198,92
.byte	2,2,8,2,16,10,4,18
.byte	2,2,8,2,16,10,4,18
.byte	170,170,146,170,57,56,73,147
.byte	170,170,146,170,57,56,73,147
.byte	113,113,217,113,175,168,226,222
.byte	113,113,217,113,175,168,226,222
.byte	200,200,7,200,14,207,141,198
.byte	200,200,7,200,14,207,141,198
.byte	25,25,100,25,200,125,50,209
.byte	25,25,100,25,200,125,50,209
.byte	73,73,57,73,114,112,146,59
.byte	73,73,57,73,114,112,146,59
.byte	217,217,67,217,134,154,175,95
.byte	217,217,67,217,134,154,175,95
.byte	242,242,239,242,195,29,249,49
.byte	242,242,239,242,195,29,249,49
.byte	227,227,171,227,75,72,219,168
.byte	227,227,171,227,75,72,219,168
.byte	91,91,113,91,226,42,182,185
.byte	91,91,113,91,226,42,182,185
.byte	136,136,26,136,52,146,13,188
.byte	136,136,26,136,52,146,13,188
.byte	154,154,82,154,164,200,41,62
.byte	154,154,82,154,164,200,41,62
.byte	38,38,152,38,45,190,76,11
.byte	38,38,152,38,45,190,76,11
.byte	50,50,200,50,141,250,100,191
.byte	50,50,200,50,141,250,100,191
.byte	176,176,250,176,233,74,125,89
.byte	176,176,250,176,233,74,125,89
.byte	233,233,131,233,27,106,207,242
.byte	233,233,131,233,27,106,207,242
.byte	15,15,60,15,120,51,30,119
.byte	15,15,60,15,120,51,30,119
.byte	213,213,115,213,230,166,183,51
.byte	213,213,115,213,230,166,183,51
.byte	128,128,58,128,116,186,29,244
.byte	128,128,58,128,116,186,29,244
.byte	190,190,194,190,153,124,97,39
.byte	190,190,194,190,153,124,97,39
.byte	205,205,19,205,38,222,135,235
.byte	205,205,19,205,38,222,135,235
.byte	52,52,208,52,189,228,104,137
.byte	52,52,208,52,189,228,104,137
.byte	72,72,61,72,122,117,144,50
.byte	72,72,61,72,122,117,144,50
.byte	255,255,219,255,171,36,227,84
.byte	255,255,219,255,171,36,227,84
.byte	122,122,245,122,247,143,244,141
.byte	122,122,245,122,247,143,244,141
.byte	144,144,122,144,244,234,61,100
.byte	144,144,122,144,244,234,61,100
.byte	95,95,97,95,194,62,190,157
.byte	95,95,97,95,194,62,190,157
.byte	32,32,128,32,29,160,64,61
.byte	32,32,128,32,29,160,64,61
.byte	104,104,189,104,103,213,208,15
.byte	104,104,189,104,103,213,208,15
.byte	26,26,104,26,208,114,52,202
.byte	26,26,104,26,208,114,52,202
.byte	174,174,130,174,25,44,65,183
.byte	174,174,130,174,25,44,65,183
.byte	180,180,234,180,201,94,117,125
.byte	180,180,234,180,201,94,117,125
.byte	84,84,77,84,154,25,168,206
.byte	84,84,77,84,154,25,168,206
.byte	147,147,118,147,236,229,59,127
.byte	147,147,118,147,236,229,59,127
.byte	34,34,136,34,13,170,68,47
.byte	34,34,136,34,13,170,68,47
.byte	100,100,141,100,7,233,200,99
.byte	100,100,141,100,7,233,200,99
.byte	241,241,227,241,219,18,255,42
.byte	241,241,227,241,219,18,255,42
.byte	115,115,209,115,191,162,230,204
.byte	115,115,209,115,191,162,230,204
.byte	18,18,72,18,144,90,36,130
.byte	18,18,72,18,144,90,36,130
.byte	64,64,29,64,58,93,128,122
.byte	64,64,29,64,58,93,128,122
.byte	8,8,32,8,64,40,16,72
.byte	8,8,32,8,64,40,16,72
.byte	195,195,43,195,86,232,155,149
.byte	195,195,43,195,86,232,155,149
.byte	236,236,151,236,51,123,197,223
.byte	236,236,151,236,51,123,197,223
.byte	219,219,75,219,150,144,171,77
.byte	219,219,75,219,150,144,171,77
.byte	161,161,190,161,97,31,95,192
.byte	161,161,190,161,97,31,95,192
.byte	141,141,14,141,28,131,7,145
.byte	141,141,14,141,28,131,7,145
.byte	61,61,244,61,245,201,122,200
.byte	61,61,244,61,245,201,122,200
.byte	151,151,102,151,204,241,51,91
.byte	151,151,102,151,204,241,51,91
.byte	0,0,0,0,0,0,0,0
.byte	0,0,0,0,0,0,0,0
.byte	207,207,27,207,54,212,131,249
.byte	207,207,27,207,54,212,131,249
.byte	43,43,172,43,69,135,86,110
.byte	43,43,172,43,69,135,86,110
.byte	118,118,197,118,151,179,236,225
.byte	118,118,197,118,151,179,236,225
.byte	130,130,50,130,100,176,25,230
.byte	130,130,50,130,100,176,25,230
.byte	214,214,127,214,254,169,177,40
.byte	214,214,127,214,254,169,177,40
.byte	27,27,108,27,216,119,54,195
.byte	27,27,108,27,216,119,54,195
.byte	181,181,238,181,193,91,119,116
.byte	181,181,238,181,193,91,119,116
.byte	175,175,134,175,17,41,67,190
.byte	175,175,134,175,17,41,67,190
.byte	106,106,181,106,119,223,212,29
.byte	106,106,181,106,119,223,212,29
.byte	80,80,93,80,186,13,160,234
.byte	80,80,93,80,186,13,160,234
.byte	69,69,9,69,18,76,138,87
.byte	69,69,9,69,18,76,138,87
.byte	243,243,235,243,203,24,251,56
.byte	243,243,235,243,203,24,251,56
.byte	48,48,192,48,157,240,96,173
.byte	48,48,192,48,157,240,96,173
.byte	239,239,155,239,43,116,195,196
.byte	239,239,155,239,43,116,195,196
.byte	63,63,252,63,229,195,126,218
.byte	63,63,252,63,229,195,126,218
.byte	85,85,73,85,146,28,170,199
.byte	85,85,73,85,146,28,170,199
.byte	162,162,178,162,121,16,89,219
.byte	162,162,178,162,121,16,89,219
.byte	234,234,143,234,3,101,201,233
.byte	234,234,143,234,3,101,201,233
.byte	101,101,137,101,15,236,202,106
.byte	101,101,137,101,15,236,202,106
.byte	186,186,210,186,185,104,105,3
.byte	186,186,210,186,185,104,105,3
.byte	47,47,188,47,101,147,94,74
.byte	47,47,188,47,101,147,94,74
.byte	192,192,39,192,78,231,157,142
.byte	192,192,39,192,78,231,157,142
.byte	222,222,95,222,190,129,161,96
.byte	222,222,95,222,190,129,161,96
.byte	28,28,112,28,224,108,56,252
.byte	28,28,112,28,224,108,56,252
.byte	253,253,211,253,187,46,231,70
.byte	253,253,211,253,187,46,231,70
.byte	77,77,41,77,82,100,154,31
.byte	77,77,41,77,82,100,154,31
.byte	146,146,114,146,228,224,57,118
.byte	146,146,114,146,228,224,57,118
.byte	117,117,201,117,143,188,234,250
.byte	117,117,201,117,143,188,234,250
.byte	6,6,24,6,48,30,12,54
.byte	6,6,24,6,48,30,12,54
.byte	138,138,18,138,36,152,9,174
.byte	138,138,18,138,36,152,9,174
.byte	178,178,242,178,249,64,121,75
.byte	178,178,242,178,249,64,121,75
.byte	230,230,191,230,99,89,209,133
.byte	230,230,191,230,99,89,209,133
.byte	14,14,56,14,112,54,28,126
.byte	14,14,56,14,112,54,28,126
.byte	31,31,124,31,248,99,62,231
.byte	31,31,124,31,248,99,62,231
.byte	98,98,149,98,55,247,196,85
.byte	98,98,149,98,55,247,196,85
.byte	212,212,119,212,238,163,181,58
.byte	212,212,119,212,238,163,181,58
.byte	168,168,154,168,41,50,77,129
.byte	168,168,154,168,41,50,77,129
.byte	150,150,98,150,196,244,49,82
.byte	150,150,98,150,196,244,49,82
.byte	249,249,195,249,155,58,239,98
.byte	249,249,195,249,155,58,239,98
.byte	197,197,51,197,102,246,151,163
.byte	197,197,51,197,102,246,151,163
.byte	37,37,148,37,53,177,74,16
.byte	37,37,148,37,53,177,74,16
.byte	89,89,121,89,242,32,178,171
.byte	89,89,121,89,242,32,178,171
.byte	132,132,42,132,84,174,21,208
.byte	132,132,42,132,84,174,21,208
.byte	114,114,213,114,183,167,228,197
.byte	114,114,213,114,183,167,228,197
.byte	57,57,228,57,213,221,114,236
.byte	57,57,228,57,213,221,114,236
.byte	76,76,45,76,90,97,152,22
.byte	76,76,45,76,90,97,152,22
.byte	94,94,101,94,202,59,188,148
.byte	94,94,101,94,202,59,188,148
.byte	120,120,253,120,231,133,240,159
.byte	120,120,253,120,231,133,240,159
.byte	56,56,224,56,221,216,112,229
.byte	56,56,224,56,221,216,112,229
.byte	140,140,10,140,20,134,5,152
.byte	140,140,10,140,20,134,5,152
.byte	209,209,99,209,198,178,191,23
.byte	209,209,99,209,198,178,191,23
.byte	165,165,174,165,65,11,87,228
.byte	165,165,174,165,65,11,87,228
.byte	226,226,175,226,67,77,217,161
.byte	226,226,175,226,67,77,217,161
.byte	97,97,153,97,47,248,194,78
.byte	97,97,153,97,47,248,194,78
.byte	179,179,246,179,241,69,123,66
.byte	179,179,246,179,241,69,123,66
.byte	33,33,132,33,21,165,66,52
.byte	33,33,132,33,21,165,66,52
.byte	156,156,74,156,148,214,37,8
.byte	156,156,74,156,148,214,37,8
.byte	30,30,120,30,240,102,60,238
.byte	30,30,120,30,240,102,60,238
.byte	67,67,17,67,34,82,134,97
.byte	67,67,17,67,34,82,134,97
.byte	199,199,59,199,118,252,147,177
.byte	199,199,59,199,118,252,147,177
.byte	252,252,215,252,179,43,229,79
.byte	252,252,215,252,179,43,229,79
.byte	4,4,16,4,32,20,8,36
.byte	4,4,16,4,32,20,8,36
.byte	81,81,89,81,178,8,162,227
.byte	81,81,89,81,178,8,162,227
.byte	153,153,94,153,188,199,47,37
.byte	153,153,94,153,188,199,47,37
.byte	109,109,169,109,79,196,218,34
.byte	109,109,169,109,79,196,218,34
.byte	13,13,52,13,104,57,26,101
.byte	13,13,52,13,104,57,26,101
.byte	250,250,207,250,131,53,233,121
.byte	250,250,207,250,131,53,233,121
.byte	223,223,91,223,182,132,163,105
.byte	223,223,91,223,182,132,163,105
.byte	126,126,229,126,215,155,252,169
.byte	126,126,229,126,215,155,252,169
.byte	36,36,144,36,61,180,72,25
.byte	36,36,144,36,61,180,72,25
.byte	59,59,236,59,197,215,118,254
.byte	59,59,236,59,197,215,118,254
.byte	171,171,150,171,49,61,75,154
.byte	171,171,150,171,49,61,75,154
.byte	206,206,31,206,62,209,129,240
.byte	206,206,31,206,62,209,129,240
.byte	17,17,68,17,136,85,34,153
.byte	17,17,68,17,136,85,34,153
.byte	143,143,6,143,12,137,3,131
.byte	143,143,6,143,12,137,3,131
.byte	78,78,37,78,74,107,156,4
.byte	78,78,37,78,74,107,156,4
.byte	183,183,230,183,209,81,115,102
.byte	183,183,230,183,209,81,115,102
.byte	235,235,139,235,11,96,203,224
.byte	235,235,139,235,11,96,203,224
.byte	60,60,240,60,253,204,120,193
.byte	60,60,240,60,253,204,120,193
.byte	129,129,62,129,124,191,31,253
.byte	129,129,62,129,124,191,31,253
.byte	148,148,106,148,212,254,53,64
.byte	148,148,106,148,212,254,53,64
.byte	247,247,251,247,235,12,243,28
.byte	247,247,251,247,235,12,243,28
.byte	185,185,222,185,161,103,111,24
.byte	185,185,222,185,161,103,111,24
.byte	19,19,76,19,152,95,38,139
.byte	19,19,76,19,152,95,38,139
.byte	44,44,176,44,125,156,88,81
.byte	44,44,176,44,125,156,88,81
.byte	211,211,107,211,214,184,187,5
.byte	211,211,107,211,214,184,187,5
.byte	231,231,187,231,107,92,211,140
.byte	231,231,187,231,107,92,211,140
.byte	110,110,165,110,87,203,220,57
.byte	110,110,165,110,87,203,220,57
.byte	196,196,55,196,110,243,149,170
.byte	196,196,55,196,110,243,149,170
.byte	3,3,12,3,24,15,6,27
.byte	3,3,12,3,24,15,6,27
.byte	86,86,69,86,138,19,172,220
.byte	86,86,69,86,138,19,172,220
.byte	68,68,13,68,26,73,136,94
.byte	68,68,13,68,26,73,136,94
.byte	127,127,225,127,223,158,254,160
.byte	127,127,225,127,223,158,254,160
.byte	169,169,158,169,33,55,79,136
.byte	169,169,158,169,33,55,79,136
.byte	42,42,168,42,77,130,84,103
.byte	42,42,168,42,77,130,84,103
.byte	187,187,214,187,177,109,107,10
.byte	187,187,214,187,177,109,107,10
.byte	193,193,35,193,70,226,159,135
.byte	193,193,35,193,70,226,159,135
.byte	83,83,81,83,162,2,166,241
.byte	83,83,81,83,162,2,166,241
.byte	220,220,87,220,174,139,165,114
.byte	220,220,87,220,174,139,165,114
.byte	11,11,44,11,88,39,22,83
.byte	11,11,44,11,88,39,22,83
.byte	157,157,78,157,156,211,39,1
.byte	157,157,78,157,156,211,39,1
.byte	108,108,173,108,71,193,216,43
.byte	108,108,173,108,71,193,216,43
.byte	49,49,196,49,149,245,98,164
.byte	49,49,196,49,149,245,98,164
.byte	116,116,205,116,135,185,232,243
.byte	116,116,205,116,135,185,232,243
.byte	246,246,255,246,227,9,241,21
.byte	246,246,255,246,227,9,241,21
.byte	70,70,5,70,10,67,140,76
.byte	70,70,5,70,10,67,140,76
.byte	172,172,138,172,9,38,69,165
.byte	172,172,138,172,9,38,69,165
.byte	137,137,30,137,60,151,15,181
.byte	137,137,30,137,60,151,15,181
.byte	20,20,80,20,160,68,40,180
.byte	20,20,80,20,160,68,40,180
.byte	225,225,163,225,91,66,223,186
.byte	225,225,163,225,91,66,223,186
.byte	22,22,88,22,176,78,44,166
.byte	22,22,88,22,176,78,44,166
.byte	58,58,232,58,205,210,116,247
.byte	58,58,232,58,205,210,116,247
.byte	105,105,185,105,111,208,210,6
.byte	105,105,185,105,111,208,210,6
.byte	9,9,36,9,72,45,18,65
.byte	9,9,36,9,72,45,18,65
.byte	112,112,221,112,167,173,224,215
.byte	112,112,221,112,167,173,224,215
.byte	182,182,226,182,217,84,113,111
.byte	182,182,226,182,217,84,113,111
.byte	208,208,103,208,206,183,189,30
.byte	208,208,103,208,206,183,189,30
.byte	237,237,147,237,59,126,199,214
.byte	237,237,147,237,59,126,199,214
.byte	204,204,23,204,46,219,133,226
.byte	204,204,23,204,46,219,133,226
.byte	66,66,21,66,42,87,132,104
.byte	66,66,21,66,42,87,132,104
.byte	152,152,90,152,180,194,45,44
.byte	152,152,90,152,180,194,45,44
.byte	164,164,170,164,73,14,85,237
.byte	164,164,170,164,73,14,85,237
.byte	40,40,160,40,93,136,80,117
.byte	40,40,160,40,93,136,80,117
.byte	92,92,109,92,218,49,184,134
.byte	92,92,109,92,218,49,184,134
.byte	248,248,199,248,147,63,237,107
.byte	248,248,199,248,147,63,237,107
.byte	134,134,34,134,68,164,17,194
.byte	134,134,34,134,68,164,17,194
.byte	24,35,198,232,135,184,1,79
.byte	54,166,210,245,121,111,145,82
.byte	96,188,155,142,163,12,123,53
.byte	29,224,215,194,46,75,254,87
.byte	21,119,55,229,159,240,74,218
.byte	88,201,41,10,177,160,107,133
.byte	189,93,16,244,203,62,5,103
.byte	228,39,65,139,167,125,149,216
.byte	251,238,124,102,221,23,71,158
.byte	202,45,191,7,173,90,131,51
.size	whirlpool_block_mmx,.-.L_whirlpool_block_mmx_begin

	.section ".note.gnu.property", "a"
	.p2align 2
	.long 1f - 0f
	.long 4f - 1f
	.long 5
0:
	.asciz "GNU"
1:
	.p2align 2
	.long 0xc0000002
	.long 3f - 2f
2:
	.long 3
3:
	.p2align 2
4:
                                                                                    node-23.7.0/deps/openssl/config/archs/linux-elf/asm/crypto/x86cpuid.S                               0000664 0000000 0000000 00000023663 14746647661 0025353 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        .text
.globl	OPENSSL_ia32_cpuid
.type	OPENSSL_ia32_cpuid,@function
.align	16
OPENSSL_ia32_cpuid:
.L_OPENSSL_ia32_cpuid_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	xorl	%edx,%edx
	pushfl
	popl	%eax
	movl	%eax,%ecx
	xorl	$2097152,%eax
	pushl	%eax
	popfl
	pushfl
	popl	%eax
	xorl	%eax,%ecx
	xorl	%eax,%eax
	movl	20(%esp),%esi
	movl	%eax,8(%esi)
	btl	$21,%ecx
	jnc	.L000nocpuid
	.byte	0x0f,0xa2
	movl	%eax,%edi
	xorl	%eax,%eax
	cmpl	$1970169159,%ebx
	setne	%al
	movl	%eax,%ebp
	cmpl	$1231384169,%edx
	setne	%al
	orl	%eax,%ebp
	cmpl	$1818588270,%ecx
	setne	%al
	orl	%eax,%ebp
	jz	.L001intel
	cmpl	$1752462657,%ebx
	setne	%al
	movl	%eax,%esi
	cmpl	$1769238117,%edx
	setne	%al
	orl	%eax,%esi
	cmpl	$1145913699,%ecx
	setne	%al
	orl	%eax,%esi
	jnz	.L001intel
	movl	$2147483648,%eax
	.byte	0x0f,0xa2
	cmpl	$2147483649,%eax
	jb	.L001intel
	movl	%eax,%esi
	movl	$2147483649,%eax
	.byte	0x0f,0xa2
	orl	%ecx,%ebp
	andl	$2049,%ebp
	cmpl	$2147483656,%esi
	jb	.L001intel
	movl	$2147483656,%eax
	.byte	0x0f,0xa2
	movzbl	%cl,%esi
	incl	%esi
	movl	$1,%eax
	xorl	%ecx,%ecx
	.byte	0x0f,0xa2
	btl	$28,%edx
	jnc	.L002generic
	shrl	$16,%ebx
	andl	$255,%ebx
	cmpl	%esi,%ebx
	ja	.L002generic
	andl	$4026531839,%edx
	jmp	.L002generic
.L001intel:
	cmpl	$4,%edi
	movl	$-1,%esi
	jb	.L003nocacheinfo
	movl	$4,%eax
	movl	$0,%ecx
	.byte	0x0f,0xa2
	movl	%eax,%esi
	shrl	$14,%esi
	andl	$4095,%esi
.L003nocacheinfo:
	movl	$1,%eax
	xorl	%ecx,%ecx
	.byte	0x0f,0xa2
	andl	$3220176895,%edx
	cmpl	$0,%ebp
	jne	.L004notintel
	orl	$1073741824,%edx
	andb	$15,%ah
	cmpb	$15,%ah
	jne	.L004notintel
	orl	$1048576,%edx
.L004notintel:
	btl	$28,%edx
	jnc	.L002generic
	andl	$4026531839,%edx
	cmpl	$0,%esi
	je	.L002generic
	orl	$268435456,%edx
	shrl	$16,%ebx
	cmpb	$1,%bl
	ja	.L002generic
	andl	$4026531839,%edx
.L002generic:
	andl	$2048,%ebp
	andl	$4294965247,%ecx
	movl	%edx,%esi
	orl	%ecx,%ebp
	cmpl	$7,%edi
	movl	20(%esp),%edi
	jb	.L005no_extended_info
	movl	$7,%eax
	xorl	%ecx,%ecx
	.byte	0x0f,0xa2
	movl	%ebx,8(%edi)
.L005no_extended_info:
	btl	$27,%ebp
	jnc	.L006clear_avx
	xorl	%ecx,%ecx
.byte	15,1,208
	andl	$6,%eax
	cmpl	$6,%eax
	je	.L007done
	cmpl	$2,%eax
	je	.L006clear_avx
.L008clear_xmm:
	andl	$4261412861,%ebp
	andl	$4278190079,%esi
.L006clear_avx:
	andl	$4026525695,%ebp
	andl	$4294967263,8(%edi)
.L007done:
	movl	%esi,%eax
	movl	%ebp,%edx
.L000nocpuid:
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	OPENSSL_ia32_cpuid,.-.L_OPENSSL_ia32_cpuid_begin
.globl	OPENSSL_rdtsc
.type	OPENSSL_rdtsc,@function
.align	16
OPENSSL_rdtsc:
.L_OPENSSL_rdtsc_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	xorl	%eax,%eax
	xorl	%edx,%edx
	call	.L009PIC_me_up
.L009PIC_me_up:
	popl	%ecx
	leal	OPENSSL_ia32cap_P-.L009PIC_me_up(%ecx),%ecx
	btl	$4,(%ecx)
	jnc	.L010notsc
	.byte	0x0f,0x31
.L010notsc:
	ret
.size	OPENSSL_rdtsc,.-.L_OPENSSL_rdtsc_begin
.globl	OPENSSL_instrument_halt
.type	OPENSSL_instrument_halt,@function
.align	16
OPENSSL_instrument_halt:
.L_OPENSSL_instrument_halt_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	call	.L011PIC_me_up
.L011PIC_me_up:
	popl	%ecx
	leal	OPENSSL_ia32cap_P-.L011PIC_me_up(%ecx),%ecx
	btl	$4,(%ecx)
	jnc	.L012nohalt
.long	2421723150
	andl	$3,%eax
	jnz	.L012nohalt
	pushfl
	popl	%eax
	btl	$9,%eax
	jnc	.L012nohalt
	.byte	0x0f,0x31
	pushl	%edx
	pushl	%eax
	hlt
	.byte	0x0f,0x31
	subl	(%esp),%eax
	sbbl	4(%esp),%edx
	addl	$8,%esp
	ret
.L012nohalt:
	xorl	%eax,%eax
	xorl	%edx,%edx
	ret
.size	OPENSSL_instrument_halt,.-.L_OPENSSL_instrument_halt_begin
.globl	OPENSSL_far_spin
.type	OPENSSL_far_spin,@function
.align	16
OPENSSL_far_spin:
.L_OPENSSL_far_spin_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushfl
	popl	%eax
	btl	$9,%eax
	jnc	.L013nospin
	movl	4(%esp),%eax
	movl	8(%esp),%ecx
.long	2430111262
	xorl	%eax,%eax
	movl	(%ecx),%edx
	jmp	.L014spin
.align	16
.L014spin:
	incl	%eax
	cmpl	(%ecx),%edx
	je	.L014spin
.long	529567888
	ret
.L013nospin:
	xorl	%eax,%eax
	xorl	%edx,%edx
	ret
.size	OPENSSL_far_spin,.-.L_OPENSSL_far_spin_begin
.globl	OPENSSL_wipe_cpu
.type	OPENSSL_wipe_cpu,@function
.align	16
OPENSSL_wipe_cpu:
.L_OPENSSL_wipe_cpu_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	xorl	%eax,%eax
	xorl	%edx,%edx
	call	.L015PIC_me_up
.L015PIC_me_up:
	popl	%ecx
	leal	OPENSSL_ia32cap_P-.L015PIC_me_up(%ecx),%ecx
	movl	(%ecx),%ecx
	btl	$1,(%ecx)
	jnc	.L016no_x87
	andl	$83886080,%ecx
	cmpl	$83886080,%ecx
	jne	.L017no_sse2
	pxor	%xmm0,%xmm0
	pxor	%xmm1,%xmm1
	pxor	%xmm2,%xmm2
	pxor	%xmm3,%xmm3
	pxor	%xmm4,%xmm4
	pxor	%xmm5,%xmm5
	pxor	%xmm6,%xmm6
	pxor	%xmm7,%xmm7
.L017no_sse2:
.long	4007259865,4007259865,4007259865,4007259865,2430851995
.L016no_x87:
	leal	4(%esp),%eax
	ret
.size	OPENSSL_wipe_cpu,.-.L_OPENSSL_wipe_cpu_begin
.globl	OPENSSL_atomic_add
.type	OPENSSL_atomic_add,@function
.align	16
OPENSSL_atomic_add:
.L_OPENSSL_atomic_add_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	movl	4(%esp),%edx
	movl	8(%esp),%ecx
	pushl	%ebx
	nop
	movl	(%edx),%eax
.L018spin:
	leal	(%eax,%ecx,1),%ebx
	nop
.long	447811568
	jne	.L018spin
	movl	%ebx,%eax
	popl	%ebx
	ret
.size	OPENSSL_atomic_add,.-.L_OPENSSL_atomic_add_begin
.globl	OPENSSL_cleanse
.type	OPENSSL_cleanse,@function
.align	16
OPENSSL_cleanse:
.L_OPENSSL_cleanse_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	movl	4(%esp),%edx
	movl	8(%esp),%ecx
	xorl	%eax,%eax
	cmpl	$7,%ecx
	jae	.L019lot
	cmpl	$0,%ecx
	je	.L020ret
.L021little:
	movb	%al,(%edx)
	subl	$1,%ecx
	leal	1(%edx),%edx
	jnz	.L021little
.L020ret:
	ret
.align	16
.L019lot:
	testl	$3,%edx
	jz	.L022aligned
	movb	%al,(%edx)
	leal	-1(%ecx),%ecx
	leal	1(%edx),%edx
	jmp	.L019lot
.L022aligned:
	movl	%eax,(%edx)
	leal	-4(%ecx),%ecx
	testl	$-4,%ecx
	leal	4(%edx),%edx
	jnz	.L022aligned
	cmpl	$0,%ecx
	jne	.L021little
	ret
.size	OPENSSL_cleanse,.-.L_OPENSSL_cleanse_begin
.globl	CRYPTO_memcmp
.type	CRYPTO_memcmp,@function
.align	16
CRYPTO_memcmp:
.L_CRYPTO_memcmp_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%esi
	pushl	%edi
	movl	12(%esp),%esi
	movl	16(%esp),%edi
	movl	20(%esp),%ecx
	xorl	%eax,%eax
	xorl	%edx,%edx
	cmpl	$0,%ecx
	je	.L023no_data
.L024loop:
	movb	(%esi),%dl
	leal	1(%esi),%esi
	xorb	(%edi),%dl
	leal	1(%edi),%edi
	orb	%dl,%al
	decl	%ecx
	jnz	.L024loop
	negl	%eax
	shrl	$31,%eax
.L023no_data:
	popl	%edi
	popl	%esi
	ret
.size	CRYPTO_memcmp,.-.L_CRYPTO_memcmp_begin
.globl	OPENSSL_instrument_bus
.type	OPENSSL_instrument_bus,@function
.align	16
OPENSSL_instrument_bus:
.L_OPENSSL_instrument_bus_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	$0,%eax
	call	.L025PIC_me_up
.L025PIC_me_up:
	popl	%edx
	leal	OPENSSL_ia32cap_P-.L025PIC_me_up(%edx),%edx
	btl	$4,(%edx)
	jnc	.L026nogo
	btl	$19,(%edx)
	jnc	.L026nogo
	movl	20(%esp),%edi
	movl	24(%esp),%ecx
	.byte	0x0f,0x31
	movl	%eax,%esi
	movl	$0,%ebx
	clflush	(%edi)
.byte	240
	addl	%ebx,(%edi)
	jmp	.L027loop
.align	16
.L027loop:
	.byte	0x0f,0x31
	movl	%eax,%edx
	subl	%esi,%eax
	movl	%edx,%esi
	movl	%eax,%ebx
	clflush	(%edi)
.byte	240
	addl	%eax,(%edi)
	leal	4(%edi),%edi
	subl	$1,%ecx
	jnz	.L027loop
	movl	24(%esp),%eax
.L026nogo:
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	OPENSSL_instrument_bus,.-.L_OPENSSL_instrument_bus_begin
.globl	OPENSSL_instrument_bus2
.type	OPENSSL_instrument_bus2,@function
.align	16
OPENSSL_instrument_bus2:
.L_OPENSSL_instrument_bus2_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	$0,%eax
	call	.L028PIC_me_up
.L028PIC_me_up:
	popl	%edx
	leal	OPENSSL_ia32cap_P-.L028PIC_me_up(%edx),%edx
	btl	$4,(%edx)
	jnc	.L029nogo
	btl	$19,(%edx)
	jnc	.L029nogo
	movl	20(%esp),%edi
	movl	24(%esp),%ecx
	movl	28(%esp),%ebp
	.byte	0x0f,0x31
	movl	%eax,%esi
	movl	$0,%ebx
	clflush	(%edi)
.byte	240
	addl	%ebx,(%edi)
	.byte	0x0f,0x31
	movl	%eax,%edx
	subl	%esi,%eax
	movl	%edx,%esi
	movl	%eax,%ebx
	jmp	.L030loop2
.align	16
.L030loop2:
	clflush	(%edi)
.byte	240
	addl	%eax,(%edi)
	subl	$1,%ebp
	jz	.L031done2
	.byte	0x0f,0x31
	movl	%eax,%edx
	subl	%esi,%eax
	movl	%edx,%esi
	cmpl	%ebx,%eax
	movl	%eax,%ebx
	movl	$0,%edx
	setne	%dl
	subl	%edx,%ecx
	leal	(%edi,%edx,4),%edi
	jnz	.L030loop2
.L031done2:
	movl	24(%esp),%eax
	subl	%ecx,%eax
.L029nogo:
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	OPENSSL_instrument_bus2,.-.L_OPENSSL_instrument_bus2_begin
.globl	OPENSSL_ia32_rdrand_bytes
.type	OPENSSL_ia32_rdrand_bytes,@function
.align	16
OPENSSL_ia32_rdrand_bytes:
.L_OPENSSL_ia32_rdrand_bytes_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%edi
	pushl	%ebx
	xorl	%eax,%eax
	movl	12(%esp),%edi
	movl	16(%esp),%ebx
	cmpl	$0,%ebx
	je	.L032done
	movl	$8,%ecx
.L033loop:
.byte	15,199,242
	jc	.L034break
	loop	.L033loop
	jmp	.L032done
.align	16
.L034break:
	cmpl	$4,%ebx
	jb	.L035tail
	movl	%edx,(%edi)
	leal	4(%edi),%edi
	addl	$4,%eax
	subl	$4,%ebx
	jz	.L032done
	movl	$8,%ecx
	jmp	.L033loop
.align	16
.L035tail:
	movb	%dl,(%edi)
	leal	1(%edi),%edi
	incl	%eax
	shrl	$8,%edx
	decl	%ebx
	jnz	.L035tail
.L032done:
	xorl	%edx,%edx
	popl	%ebx
	popl	%edi
	ret
.size	OPENSSL_ia32_rdrand_bytes,.-.L_OPENSSL_ia32_rdrand_bytes_begin
.globl	OPENSSL_ia32_rdseed_bytes
.type	OPENSSL_ia32_rdseed_bytes,@function
.align	16
OPENSSL_ia32_rdseed_bytes:
.L_OPENSSL_ia32_rdseed_bytes_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%edi
	pushl	%ebx
	xorl	%eax,%eax
	movl	12(%esp),%edi
	movl	16(%esp),%ebx
	cmpl	$0,%ebx
	je	.L036done
	movl	$8,%ecx
.L037loop:
.byte	15,199,250
	jc	.L038break
	loop	.L037loop
	jmp	.L036done
.align	16
.L038break:
	cmpl	$4,%ebx
	jb	.L039tail
	movl	%edx,(%edi)
	leal	4(%edi),%edi
	addl	$4,%eax
	subl	$4,%ebx
	jz	.L036done
	movl	$8,%ecx
	jmp	.L037loop
.align	16
.L039tail:
	movb	%dl,(%edi)
	leal	1(%edi),%edi
	incl	%eax
	shrl	$8,%edx
	decl	%ebx
	jnz	.L039tail
.L036done:
	xorl	%edx,%edx
	popl	%ebx
	popl	%edi
	ret
.size	OPENSSL_ia32_rdseed_bytes,.-.L_OPENSSL_ia32_rdseed_bytes_begin
.hidden	OPENSSL_cpuid_setup
.hidden	OPENSSL_ia32cap_P
.comm	OPENSSL_ia32cap_P,16,4
.section	.init
	call	OPENSSL_cpuid_setup

	.section ".note.gnu.property", "a"
	.p2align 2
	.long 1f - 0f
	.long 4f - 1f
	.long 5
0:
	.asciz "GNU"
1:
	.p2align 2
	.long 0xc0000002
	.long 3f - 2f
2:
	.long 3
3:
	.p2align 2
4:
                                                                             node-23.7.0/deps/openssl/config/archs/linux-elf/asm/engines/                                        0000775 0000000 0000000 00000000000 14746647661 0023653 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/linux-elf/asm/engines/e_padlock-x86.S                         0000664 0000000 0000000 00000047610 14746647661 0026353 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        .text
.globl	padlock_capability
.type	padlock_capability,@function
.align	16
padlock_capability:
.L_padlock_capability_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebx
	pushfl
	popl	%eax
	movl	%eax,%ecx
	xorl	$2097152,%eax
	pushl	%eax
	popfl
	pushfl
	popl	%eax
	xorl	%eax,%ecx
	xorl	%eax,%eax
	btl	$21,%ecx
	jnc	.L000noluck
	.byte	0x0f,0xa2
	xorl	%eax,%eax
	cmpl	$0x746e6543,%ebx
	jne	.L001zhaoxin
	cmpl	$0x48727561,%edx
	jne	.L000noluck
	cmpl	$0x736c7561,%ecx
	jne	.L000noluck
	jmp	.L002zhaoxinEnd
.L001zhaoxin:
	cmpl	$0x68532020,%ebx
	jne	.L000noluck
	cmpl	$0x68676e61,%edx
	jne	.L000noluck
	cmpl	$0x20206961,%ecx
	jne	.L000noluck
.L002zhaoxinEnd:
	movl	$3221225472,%eax
	.byte	0x0f,0xa2
	movl	%eax,%edx
	xorl	%eax,%eax
	cmpl	$3221225473,%edx
	jb	.L000noluck
	movl	$1,%eax
	.byte	0x0f,0xa2
	orl	$15,%eax
	xorl	%ebx,%ebx
	andl	$4095,%eax
	cmpl	$1791,%eax
	sete	%bl
	movl	$3221225473,%eax
	pushl	%ebx
	.byte	0x0f,0xa2
	popl	%ebx
	movl	%edx,%eax
	shll	$4,%ebx
	andl	$4294967279,%eax
	orl	%ebx,%eax
.L000noluck:
	popl	%ebx
	ret
.size	padlock_capability,.-.L_padlock_capability_begin
.globl	padlock_key_bswap
.type	padlock_key_bswap,@function
.align	16
padlock_key_bswap:
.L_padlock_key_bswap_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	movl	4(%esp),%edx
	movl	240(%edx),%ecx
	incl	%ecx
	shll	$2,%ecx
.L003bswap_loop:
	movl	(%edx),%eax
	bswap	%eax
	movl	%eax,(%edx)
	leal	4(%edx),%edx
	subl	$1,%ecx
	jnz	.L003bswap_loop
	ret
.size	padlock_key_bswap,.-.L_padlock_key_bswap_begin
.globl	padlock_verify_context
.type	padlock_verify_context,@function
.align	16
padlock_verify_context:
.L_padlock_verify_context_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	movl	4(%esp),%edx
	leal	.Lpadlock_saved_context-.L004verify_pic_point,%eax
	pushfl
	call	_padlock_verify_ctx
.L004verify_pic_point:
	leal	4(%esp),%esp
	ret
.size	padlock_verify_context,.-.L_padlock_verify_context_begin
.type	_padlock_verify_ctx,@function
.align	16
_padlock_verify_ctx:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	addl	(%esp),%eax
	btl	$30,4(%esp)
	jnc	.L005verified
	cmpl	(%eax),%edx
	je	.L005verified
	pushfl
	popfl
.L005verified:
	movl	%edx,(%eax)
	ret
.size	_padlock_verify_ctx,.-_padlock_verify_ctx
.globl	padlock_reload_key
.type	padlock_reload_key,@function
.align	16
padlock_reload_key:
.L_padlock_reload_key_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushfl
	popfl
	ret
.size	padlock_reload_key,.-.L_padlock_reload_key_begin
.globl	padlock_aes_block
.type	padlock_aes_block,@function
.align	16
padlock_aes_block:
.L_padlock_aes_block_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%edi
	pushl	%esi
	pushl	%ebx
	movl	16(%esp),%edi
	movl	20(%esp),%esi
	movl	24(%esp),%edx
	movl	$1,%ecx
	leal	32(%edx),%ebx
	leal	16(%edx),%edx
.byte	243,15,167,200
	popl	%ebx
	popl	%esi
	popl	%edi
	ret
.size	padlock_aes_block,.-.L_padlock_aes_block_begin
.globl	padlock_ecb_encrypt
.type	padlock_ecb_encrypt,@function
.align	16
padlock_ecb_encrypt:
.L_padlock_ecb_encrypt_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%edi
	movl	24(%esp),%esi
	movl	28(%esp),%edx
	movl	32(%esp),%ecx
	testl	$15,%edx
	jnz	.L006ecb_abort
	testl	$15,%ecx
	jnz	.L006ecb_abort
	leal	.Lpadlock_saved_context-.L007ecb_pic_point,%eax
	pushfl
	cld
	call	_padlock_verify_ctx
.L007ecb_pic_point:
	leal	16(%edx),%edx
	xorl	%eax,%eax
	xorl	%ebx,%ebx
	testl	$32,(%edx)
	jnz	.L008ecb_aligned
	testl	$15,%edi
	setz	%al
	testl	$15,%esi
	setz	%bl
	testl	%ebx,%eax
	jnz	.L008ecb_aligned
	negl	%eax
	movl	$512,%ebx
	notl	%eax
	leal	-24(%esp),%ebp
	cmpl	%ebx,%ecx
	cmovcl	%ecx,%ebx
	andl	%ebx,%eax
	movl	%ecx,%ebx
	negl	%eax
	andl	$511,%ebx
	leal	(%eax,%ebp,1),%esp
	movl	$512,%eax
	cmovzl	%eax,%ebx
	movl	%ebp,%eax
	andl	$-16,%ebp
	andl	$-16,%esp
	movl	%eax,16(%ebp)
	cmpl	%ebx,%ecx
	ja	.L009ecb_loop
	movl	%esi,%eax
	cmpl	%esp,%ebp
	cmovel	%edi,%eax
	addl	%ecx,%eax
	negl	%eax
	andl	$4095,%eax
	cmpl	$128,%eax
	movl	$-128,%eax
	cmovael	%ebx,%eax
	andl	%eax,%ebx
	jz	.L010ecb_unaligned_tail
	jmp	.L009ecb_loop
.align	16
.L009ecb_loop:
	movl	%edi,(%ebp)
	movl	%esi,4(%ebp)
	movl	%ecx,8(%ebp)
	movl	%ebx,%ecx
	movl	%ebx,12(%ebp)
	testl	$15,%edi
	cmovnzl	%esp,%edi
	testl	$15,%esi
	jz	.L011ecb_inp_aligned
	shrl	$2,%ecx
.byte	243,165
	subl	%ebx,%edi
	movl	%ebx,%ecx
	movl	%edi,%esi
.L011ecb_inp_aligned:
	leal	-16(%edx),%eax
	leal	16(%edx),%ebx
	shrl	$4,%ecx
.byte	243,15,167,200
	movl	(%ebp),%edi
	movl	12(%ebp),%ebx
	testl	$15,%edi
	jz	.L012ecb_out_aligned
	movl	%ebx,%ecx
	leal	(%esp),%esi
	shrl	$2,%ecx
.byte	243,165
	subl	%ebx,%edi
.L012ecb_out_aligned:
	movl	4(%ebp),%esi
	movl	8(%ebp),%ecx
	addl	%ebx,%edi
	addl	%ebx,%esi
	subl	%ebx,%ecx
	movl	$512,%ebx
	jz	.L013ecb_break
	cmpl	%ebx,%ecx
	jae	.L009ecb_loop
.L010ecb_unaligned_tail:
	xorl	%eax,%eax
	cmpl	%ebp,%esp
	cmovel	%ecx,%eax
	subl	%eax,%esp
	movl	%edi,%eax
	movl	%ecx,%ebx
	shrl	$2,%ecx
	leal	(%esp),%edi
.byte	243,165
	movl	%esp,%esi
	movl	%eax,%edi
	movl	%ebx,%ecx
	jmp	.L009ecb_loop
.align	16
.L013ecb_break:
	cmpl	%ebp,%esp
	je	.L014ecb_done
	pxor	%xmm0,%xmm0
	leal	(%esp),%eax
.L015ecb_bzero:
	movaps	%xmm0,(%eax)
	leal	16(%eax),%eax
	cmpl	%eax,%ebp
	ja	.L015ecb_bzero
.L014ecb_done:
	movl	16(%ebp),%ebp
	leal	24(%ebp),%esp
	jmp	.L016ecb_exit
.align	16
.L008ecb_aligned:
	leal	(%esi,%ecx,1),%ebp
	negl	%ebp
	andl	$4095,%ebp
	xorl	%eax,%eax
	cmpl	$128,%ebp
	movl	$127,%ebp
	cmovael	%eax,%ebp
	andl	%ecx,%ebp
	subl	%ebp,%ecx
	jz	.L017ecb_aligned_tail
	leal	-16(%edx),%eax
	leal	16(%edx),%ebx
	shrl	$4,%ecx
.byte	243,15,167,200
	testl	%ebp,%ebp
	jz	.L016ecb_exit
.L017ecb_aligned_tail:
	movl	%ebp,%ecx
	leal	-24(%esp),%ebp
	movl	%ebp,%esp
	movl	%ebp,%eax
	subl	%ecx,%esp
	andl	$-16,%ebp
	andl	$-16,%esp
	movl	%eax,16(%ebp)
	movl	%edi,%eax
	movl	%ecx,%ebx
	shrl	$2,%ecx
	leal	(%esp),%edi
.byte	243,165
	movl	%esp,%esi
	movl	%eax,%edi
	movl	%ebx,%ecx
	jmp	.L009ecb_loop
.L016ecb_exit:
	movl	$1,%eax
	leal	4(%esp),%esp
.L006ecb_abort:
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	padlock_ecb_encrypt,.-.L_padlock_ecb_encrypt_begin
.globl	padlock_cbc_encrypt
.type	padlock_cbc_encrypt,@function
.align	16
padlock_cbc_encrypt:
.L_padlock_cbc_encrypt_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%edi
	movl	24(%esp),%esi
	movl	28(%esp),%edx
	movl	32(%esp),%ecx
	testl	$15,%edx
	jnz	.L018cbc_abort
	testl	$15,%ecx
	jnz	.L018cbc_abort
	leal	.Lpadlock_saved_context-.L019cbc_pic_point,%eax
	pushfl
	cld
	call	_padlock_verify_ctx
.L019cbc_pic_point:
	leal	16(%edx),%edx
	xorl	%eax,%eax
	xorl	%ebx,%ebx
	testl	$32,(%edx)
	jnz	.L020cbc_aligned
	testl	$15,%edi
	setz	%al
	testl	$15,%esi
	setz	%bl
	testl	%ebx,%eax
	jnz	.L020cbc_aligned
	negl	%eax
	movl	$512,%ebx
	notl	%eax
	leal	-24(%esp),%ebp
	cmpl	%ebx,%ecx
	cmovcl	%ecx,%ebx
	andl	%ebx,%eax
	movl	%ecx,%ebx
	negl	%eax
	andl	$511,%ebx
	leal	(%eax,%ebp,1),%esp
	movl	$512,%eax
	cmovzl	%eax,%ebx
	movl	%ebp,%eax
	andl	$-16,%ebp
	andl	$-16,%esp
	movl	%eax,16(%ebp)
	cmpl	%ebx,%ecx
	ja	.L021cbc_loop
	movl	%esi,%eax
	cmpl	%esp,%ebp
	cmovel	%edi,%eax
	addl	%ecx,%eax
	negl	%eax
	andl	$4095,%eax
	cmpl	$64,%eax
	movl	$-64,%eax
	cmovael	%ebx,%eax
	andl	%eax,%ebx
	jz	.L022cbc_unaligned_tail
	jmp	.L021cbc_loop
.align	16
.L021cbc_loop:
	movl	%edi,(%ebp)
	movl	%esi,4(%ebp)
	movl	%ecx,8(%ebp)
	movl	%ebx,%ecx
	movl	%ebx,12(%ebp)
	testl	$15,%edi
	cmovnzl	%esp,%edi
	testl	$15,%esi
	jz	.L023cbc_inp_aligned
	shrl	$2,%ecx
.byte	243,165
	subl	%ebx,%edi
	movl	%ebx,%ecx
	movl	%edi,%esi
.L023cbc_inp_aligned:
	leal	-16(%edx),%eax
	leal	16(%edx),%ebx
	shrl	$4,%ecx
.byte	243,15,167,208
	movaps	(%eax),%xmm0
	movaps	%xmm0,-16(%edx)
	movl	(%ebp),%edi
	movl	12(%ebp),%ebx
	testl	$15,%edi
	jz	.L024cbc_out_aligned
	movl	%ebx,%ecx
	leal	(%esp),%esi
	shrl	$2,%ecx
.byte	243,165
	subl	%ebx,%edi
.L024cbc_out_aligned:
	movl	4(%ebp),%esi
	movl	8(%ebp),%ecx
	addl	%ebx,%edi
	addl	%ebx,%esi
	subl	%ebx,%ecx
	movl	$512,%ebx
	jz	.L025cbc_break
	cmpl	%ebx,%ecx
	jae	.L021cbc_loop
.L022cbc_unaligned_tail:
	xorl	%eax,%eax
	cmpl	%ebp,%esp
	cmovel	%ecx,%eax
	subl	%eax,%esp
	movl	%edi,%eax
	movl	%ecx,%ebx
	shrl	$2,%ecx
	leal	(%esp),%edi
.byte	243,165
	movl	%esp,%esi
	movl	%eax,%edi
	movl	%ebx,%ecx
	jmp	.L021cbc_loop
.align	16
.L025cbc_break:
	cmpl	%ebp,%esp
	je	.L026cbc_done
	pxor	%xmm0,%xmm0
	leal	(%esp),%eax
.L027cbc_bzero:
	movaps	%xmm0,(%eax)
	leal	16(%eax),%eax
	cmpl	%eax,%ebp
	ja	.L027cbc_bzero
.L026cbc_done:
	movl	16(%ebp),%ebp
	leal	24(%ebp),%esp
	jmp	.L028cbc_exit
.align	16
.L020cbc_aligned:
	leal	(%esi,%ecx,1),%ebp
	negl	%ebp
	andl	$4095,%ebp
	xorl	%eax,%eax
	cmpl	$64,%ebp
	movl	$63,%ebp
	cmovael	%eax,%ebp
	andl	%ecx,%ebp
	subl	%ebp,%ecx
	jz	.L029cbc_aligned_tail
	leal	-16(%edx),%eax
	leal	16(%edx),%ebx
	shrl	$4,%ecx
.byte	243,15,167,208
	movaps	(%eax),%xmm0
	movaps	%xmm0,-16(%edx)
	testl	%ebp,%ebp
	jz	.L028cbc_exit
.L029cbc_aligned_tail:
	movl	%ebp,%ecx
	leal	-24(%esp),%ebp
	movl	%ebp,%esp
	movl	%ebp,%eax
	subl	%ecx,%esp
	andl	$-16,%ebp
	andl	$-16,%esp
	movl	%eax,16(%ebp)
	movl	%edi,%eax
	movl	%ecx,%ebx
	shrl	$2,%ecx
	leal	(%esp),%edi
.byte	243,165
	movl	%esp,%esi
	movl	%eax,%edi
	movl	%ebx,%ecx
	jmp	.L021cbc_loop
.L028cbc_exit:
	movl	$1,%eax
	leal	4(%esp),%esp
.L018cbc_abort:
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	padlock_cbc_encrypt,.-.L_padlock_cbc_encrypt_begin
.globl	padlock_cfb_encrypt
.type	padlock_cfb_encrypt,@function
.align	16
padlock_cfb_encrypt:
.L_padlock_cfb_encrypt_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%edi
	movl	24(%esp),%esi
	movl	28(%esp),%edx
	movl	32(%esp),%ecx
	testl	$15,%edx
	jnz	.L030cfb_abort
	testl	$15,%ecx
	jnz	.L030cfb_abort
	leal	.Lpadlock_saved_context-.L031cfb_pic_point,%eax
	pushfl
	cld
	call	_padlock_verify_ctx
.L031cfb_pic_point:
	leal	16(%edx),%edx
	xorl	%eax,%eax
	xorl	%ebx,%ebx
	testl	$32,(%edx)
	jnz	.L032cfb_aligned
	testl	$15,%edi
	setz	%al
	testl	$15,%esi
	setz	%bl
	testl	%ebx,%eax
	jnz	.L032cfb_aligned
	negl	%eax
	movl	$512,%ebx
	notl	%eax
	leal	-24(%esp),%ebp
	cmpl	%ebx,%ecx
	cmovcl	%ecx,%ebx
	andl	%ebx,%eax
	movl	%ecx,%ebx
	negl	%eax
	andl	$511,%ebx
	leal	(%eax,%ebp,1),%esp
	movl	$512,%eax
	cmovzl	%eax,%ebx
	movl	%ebp,%eax
	andl	$-16,%ebp
	andl	$-16,%esp
	movl	%eax,16(%ebp)
	jmp	.L033cfb_loop
.align	16
.L033cfb_loop:
	movl	%edi,(%ebp)
	movl	%esi,4(%ebp)
	movl	%ecx,8(%ebp)
	movl	%ebx,%ecx
	movl	%ebx,12(%ebp)
	testl	$15,%edi
	cmovnzl	%esp,%edi
	testl	$15,%esi
	jz	.L034cfb_inp_aligned
	shrl	$2,%ecx
.byte	243,165
	subl	%ebx,%edi
	movl	%ebx,%ecx
	movl	%edi,%esi
.L034cfb_inp_aligned:
	leal	-16(%edx),%eax
	leal	16(%edx),%ebx
	shrl	$4,%ecx
.byte	243,15,167,224
	movaps	(%eax),%xmm0
	movaps	%xmm0,-16(%edx)
	movl	(%ebp),%edi
	movl	12(%ebp),%ebx
	testl	$15,%edi
	jz	.L035cfb_out_aligned
	movl	%ebx,%ecx
	leal	(%esp),%esi
	shrl	$2,%ecx
.byte	243,165
	subl	%ebx,%edi
.L035cfb_out_aligned:
	movl	4(%ebp),%esi
	movl	8(%ebp),%ecx
	addl	%ebx,%edi
	addl	%ebx,%esi
	subl	%ebx,%ecx
	movl	$512,%ebx
	jnz	.L033cfb_loop
	cmpl	%ebp,%esp
	je	.L036cfb_done
	pxor	%xmm0,%xmm0
	leal	(%esp),%eax
.L037cfb_bzero:
	movaps	%xmm0,(%eax)
	leal	16(%eax),%eax
	cmpl	%eax,%ebp
	ja	.L037cfb_bzero
.L036cfb_done:
	movl	16(%ebp),%ebp
	leal	24(%ebp),%esp
	jmp	.L038cfb_exit
.align	16
.L032cfb_aligned:
	leal	-16(%edx),%eax
	leal	16(%edx),%ebx
	shrl	$4,%ecx
.byte	243,15,167,224
	movaps	(%eax),%xmm0
	movaps	%xmm0,-16(%edx)
.L038cfb_exit:
	movl	$1,%eax
	leal	4(%esp),%esp
.L030cfb_abort:
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	padlock_cfb_encrypt,.-.L_padlock_cfb_encrypt_begin
.globl	padlock_ofb_encrypt
.type	padlock_ofb_encrypt,@function
.align	16
padlock_ofb_encrypt:
.L_padlock_ofb_encrypt_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%edi
	movl	24(%esp),%esi
	movl	28(%esp),%edx
	movl	32(%esp),%ecx
	testl	$15,%edx
	jnz	.L039ofb_abort
	testl	$15,%ecx
	jnz	.L039ofb_abort
	leal	.Lpadlock_saved_context-.L040ofb_pic_point,%eax
	pushfl
	cld
	call	_padlock_verify_ctx
.L040ofb_pic_point:
	leal	16(%edx),%edx
	xorl	%eax,%eax
	xorl	%ebx,%ebx
	testl	$32,(%edx)
	jnz	.L041ofb_aligned
	testl	$15,%edi
	setz	%al
	testl	$15,%esi
	setz	%bl
	testl	%ebx,%eax
	jnz	.L041ofb_aligned
	negl	%eax
	movl	$512,%ebx
	notl	%eax
	leal	-24(%esp),%ebp
	cmpl	%ebx,%ecx
	cmovcl	%ecx,%ebx
	andl	%ebx,%eax
	movl	%ecx,%ebx
	negl	%eax
	andl	$511,%ebx
	leal	(%eax,%ebp,1),%esp
	movl	$512,%eax
	cmovzl	%eax,%ebx
	movl	%ebp,%eax
	andl	$-16,%ebp
	andl	$-16,%esp
	movl	%eax,16(%ebp)
	jmp	.L042ofb_loop
.align	16
.L042ofb_loop:
	movl	%edi,(%ebp)
	movl	%esi,4(%ebp)
	movl	%ecx,8(%ebp)
	movl	%ebx,%ecx
	movl	%ebx,12(%ebp)
	testl	$15,%edi
	cmovnzl	%esp,%edi
	testl	$15,%esi
	jz	.L043ofb_inp_aligned
	shrl	$2,%ecx
.byte	243,165
	subl	%ebx,%edi
	movl	%ebx,%ecx
	movl	%edi,%esi
.L043ofb_inp_aligned:
	leal	-16(%edx),%eax
	leal	16(%edx),%ebx
	shrl	$4,%ecx
.byte	243,15,167,232
	movaps	(%eax),%xmm0
	movaps	%xmm0,-16(%edx)
	movl	(%ebp),%edi
	movl	12(%ebp),%ebx
	testl	$15,%edi
	jz	.L044ofb_out_aligned
	movl	%ebx,%ecx
	leal	(%esp),%esi
	shrl	$2,%ecx
.byte	243,165
	subl	%ebx,%edi
.L044ofb_out_aligned:
	movl	4(%ebp),%esi
	movl	8(%ebp),%ecx
	addl	%ebx,%edi
	addl	%ebx,%esi
	subl	%ebx,%ecx
	movl	$512,%ebx
	jnz	.L042ofb_loop
	cmpl	%ebp,%esp
	je	.L045ofb_done
	pxor	%xmm0,%xmm0
	leal	(%esp),%eax
.L046ofb_bzero:
	movaps	%xmm0,(%eax)
	leal	16(%eax),%eax
	cmpl	%eax,%ebp
	ja	.L046ofb_bzero
.L045ofb_done:
	movl	16(%ebp),%ebp
	leal	24(%ebp),%esp
	jmp	.L047ofb_exit
.align	16
.L041ofb_aligned:
	leal	-16(%edx),%eax
	leal	16(%edx),%ebx
	shrl	$4,%ecx
.byte	243,15,167,232
	movaps	(%eax),%xmm0
	movaps	%xmm0,-16(%edx)
.L047ofb_exit:
	movl	$1,%eax
	leal	4(%esp),%esp
.L039ofb_abort:
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	padlock_ofb_encrypt,.-.L_padlock_ofb_encrypt_begin
.globl	padlock_ctr32_encrypt
.type	padlock_ctr32_encrypt,@function
.align	16
padlock_ctr32_encrypt:
.L_padlock_ctr32_encrypt_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%ebp
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	movl	20(%esp),%edi
	movl	24(%esp),%esi
	movl	28(%esp),%edx
	movl	32(%esp),%ecx
	testl	$15,%edx
	jnz	.L048ctr32_abort
	testl	$15,%ecx
	jnz	.L048ctr32_abort
	leal	.Lpadlock_saved_context-.L049ctr32_pic_point,%eax
	pushfl
	cld
	call	_padlock_verify_ctx
.L049ctr32_pic_point:
	leal	16(%edx),%edx
	xorl	%eax,%eax
	movq	-16(%edx),%mm0
	movl	$512,%ebx
	notl	%eax
	leal	-24(%esp),%ebp
	cmpl	%ebx,%ecx
	cmovcl	%ecx,%ebx
	andl	%ebx,%eax
	movl	%ecx,%ebx
	negl	%eax
	andl	$511,%ebx
	leal	(%eax,%ebp,1),%esp
	movl	$512,%eax
	cmovzl	%eax,%ebx
	movl	%ebp,%eax
	andl	$-16,%ebp
	andl	$-16,%esp
	movl	%eax,16(%ebp)
	jmp	.L050ctr32_loop
.align	16
.L050ctr32_loop:
	movl	%edi,(%ebp)
	movl	%esi,4(%ebp)
	movl	%ecx,8(%ebp)
	movl	%ebx,%ecx
	movl	%ebx,12(%ebp)
	movl	-4(%edx),%ecx
	xorl	%edi,%edi
	movl	-8(%edx),%eax
.L051ctr32_prepare:
	movl	%ecx,12(%esp,%edi,1)
	bswap	%ecx
	movq	%mm0,(%esp,%edi,1)
	incl	%ecx
	movl	%eax,8(%esp,%edi,1)
	bswap	%ecx
	leal	16(%edi),%edi
	cmpl	%ebx,%edi
	jb	.L051ctr32_prepare
	movl	%ecx,-4(%edx)
	leal	(%esp),%esi
	leal	(%esp),%edi
	movl	%ebx,%ecx
	leal	-16(%edx),%eax
	leal	16(%edx),%ebx
	shrl	$4,%ecx
.byte	243,15,167,200
	movl	(%ebp),%edi
	movl	12(%ebp),%ebx
	movl	4(%ebp),%esi
	xorl	%ecx,%ecx
.L052ctr32_xor:
	movups	(%esi,%ecx,1),%xmm1
	leal	16(%ecx),%ecx
	pxor	-16(%esp,%ecx,1),%xmm1
	movups	%xmm1,-16(%edi,%ecx,1)
	cmpl	%ebx,%ecx
	jb	.L052ctr32_xor
	movl	8(%ebp),%ecx
	addl	%ebx,%edi
	addl	%ebx,%esi
	subl	%ebx,%ecx
	movl	$512,%ebx
	jnz	.L050ctr32_loop
	pxor	%xmm0,%xmm0
	leal	(%esp),%eax
.L053ctr32_bzero:
	movaps	%xmm0,(%eax)
	leal	16(%eax),%eax
	cmpl	%eax,%ebp
	ja	.L053ctr32_bzero
.L054ctr32_done:
	movl	16(%ebp),%ebp
	leal	24(%ebp),%esp
	movl	$1,%eax
	leal	4(%esp),%esp
	emms
.L048ctr32_abort:
	popl	%edi
	popl	%esi
	popl	%ebx
	popl	%ebp
	ret
.size	padlock_ctr32_encrypt,.-.L_padlock_ctr32_encrypt_begin
.globl	padlock_xstore
.type	padlock_xstore,@function
.align	16
padlock_xstore:
.L_padlock_xstore_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%edi
	movl	8(%esp),%edi
	movl	12(%esp),%edx
.byte	15,167,192
	popl	%edi
	ret
.size	padlock_xstore,.-.L_padlock_xstore_begin
.type	_win32_segv_handler,@function
.align	16
_win32_segv_handler:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	movl	$1,%eax
	movl	4(%esp),%edx
	movl	12(%esp),%ecx
	cmpl	$3221225477,(%edx)
	jne	.L055ret
	addl	$4,184(%ecx)
	movl	$0,%eax
.L055ret:
	ret
.size	_win32_segv_handler,.-_win32_segv_handler
.globl	padlock_sha1_oneshot
.type	padlock_sha1_oneshot,@function
.align	16
padlock_sha1_oneshot:
.L_padlock_sha1_oneshot_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%edi
	pushl	%esi
	xorl	%eax,%eax
	movl	12(%esp),%edi
	movl	16(%esp),%esi
	movl	20(%esp),%ecx
	movl	%esp,%edx
	addl	$-128,%esp
	movups	(%edi),%xmm0
	andl	$-16,%esp
	movl	16(%edi),%eax
	movaps	%xmm0,(%esp)
	movl	%esp,%edi
	movl	%eax,16(%esp)
	xorl	%eax,%eax
.byte	243,15,166,200
	movaps	(%esp),%xmm0
	movl	16(%esp),%eax
	movl	%edx,%esp
	movl	12(%esp),%edi
	movups	%xmm0,(%edi)
	movl	%eax,16(%edi)
	popl	%esi
	popl	%edi
	ret
.size	padlock_sha1_oneshot,.-.L_padlock_sha1_oneshot_begin
.globl	padlock_sha1_blocks
.type	padlock_sha1_blocks,@function
.align	16
padlock_sha1_blocks:
.L_padlock_sha1_blocks_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%edi
	pushl	%esi
	movl	12(%esp),%edi
	movl	16(%esp),%esi
	movl	%esp,%edx
	movl	20(%esp),%ecx
	addl	$-128,%esp
	movups	(%edi),%xmm0
	andl	$-16,%esp
	movl	16(%edi),%eax
	movaps	%xmm0,(%esp)
	movl	%esp,%edi
	movl	%eax,16(%esp)
	movl	$-1,%eax
.byte	243,15,166,200
	movaps	(%esp),%xmm0
	movl	16(%esp),%eax
	movl	%edx,%esp
	movl	12(%esp),%edi
	movups	%xmm0,(%edi)
	movl	%eax,16(%edi)
	popl	%esi
	popl	%edi
	ret
.size	padlock_sha1_blocks,.-.L_padlock_sha1_blocks_begin
.globl	padlock_sha256_oneshot
.type	padlock_sha256_oneshot,@function
.align	16
padlock_sha256_oneshot:
.L_padlock_sha256_oneshot_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%edi
	pushl	%esi
	xorl	%eax,%eax
	movl	12(%esp),%edi
	movl	16(%esp),%esi
	movl	20(%esp),%ecx
	movl	%esp,%edx
	addl	$-128,%esp
	movups	(%edi),%xmm0
	andl	$-16,%esp
	movups	16(%edi),%xmm1
	movaps	%xmm0,(%esp)
	movl	%esp,%edi
	movaps	%xmm1,16(%esp)
	xorl	%eax,%eax
.byte	243,15,166,208
	movaps	(%esp),%xmm0
	movaps	16(%esp),%xmm1
	movl	%edx,%esp
	movl	12(%esp),%edi
	movups	%xmm0,(%edi)
	movups	%xmm1,16(%edi)
	popl	%esi
	popl	%edi
	ret
.size	padlock_sha256_oneshot,.-.L_padlock_sha256_oneshot_begin
.globl	padlock_sha256_blocks
.type	padlock_sha256_blocks,@function
.align	16
padlock_sha256_blocks:
.L_padlock_sha256_blocks_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%edi
	pushl	%esi
	movl	12(%esp),%edi
	movl	16(%esp),%esi
	movl	20(%esp),%ecx
	movl	%esp,%edx
	addl	$-128,%esp
	movups	(%edi),%xmm0
	andl	$-16,%esp
	movups	16(%edi),%xmm1
	movaps	%xmm0,(%esp)
	movl	%esp,%edi
	movaps	%xmm1,16(%esp)
	movl	$-1,%eax
.byte	243,15,166,208
	movaps	(%esp),%xmm0
	movaps	16(%esp),%xmm1
	movl	%edx,%esp
	movl	12(%esp),%edi
	movups	%xmm0,(%edi)
	movups	%xmm1,16(%edi)
	popl	%esi
	popl	%edi
	ret
.size	padlock_sha256_blocks,.-.L_padlock_sha256_blocks_begin
.globl	padlock_sha512_blocks
.type	padlock_sha512_blocks,@function
.align	16
padlock_sha512_blocks:
.L_padlock_sha512_blocks_begin:
	%ifdef __CET__

.byte	243,15,30,251
	%endif

	pushl	%edi
	pushl	%esi
	movl	12(%esp),%edi
	movl	16(%esp),%esi
	movl	20(%esp),%ecx
	movl	%esp,%edx
	addl	$-128,%esp
	movups	(%edi),%xmm0
	andl	$-16,%esp
	movups	16(%edi),%xmm1
	movups	32(%edi),%xmm2
	movups	48(%edi),%xmm3
	movaps	%xmm0,(%esp)
	movl	%esp,%edi
	movaps	%xmm1,16(%esp)
	movaps	%xmm2,32(%esp)
	movaps	%xmm3,48(%esp)
.byte	243,15,166,224
	movaps	(%esp),%xmm0
	movaps	16(%esp),%xmm1
	movaps	32(%esp),%xmm2
	movaps	48(%esp),%xmm3
	movl	%edx,%esp
	movl	12(%esp),%edi
	movups	%xmm0,(%edi)
	movups	%xmm1,16(%edi)
	movups	%xmm2,32(%edi)
	movups	%xmm3,48(%edi)
	popl	%esi
	popl	%edi
	ret
.size	padlock_sha512_blocks,.-.L_padlock_sha512_blocks_begin
.byte	86,73,65,32,80,97,100,108,111,99,107,32,120,56,54,32
.byte	109,111,100,117,108,101,44,32,67,82,89,80,84,79,71,65
.byte	77,83,32,98,121,32,60,97,112,112,114,111,64,111,112,101
.byte	110,115,115,108,46,111,114,103,62,0
.align	16
.data
.align	4
.Lpadlock_saved_context:
.long	0

	.section ".note.gnu.property", "a"
	.p2align 2
	.long 1f - 0f
	.long 4f - 1f
	.long 5
0:
	.asciz "GNU"
1:
	.p2align 2
	.long 0xc0000002
	.long 3f - 2f
2:
	.long 3
3:
	.p2align 2
4:
                                                                                                                        node-23.7.0/deps/openssl/config/archs/linux-elf/asm/include/                                        0000775 0000000 0000000 00000000000 14746647661 0023646 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/linux-elf/asm/include/crypto/                                 0000775 0000000 0000000 00000000000 14746647661 0025166 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/linux-elf/asm/include/crypto/bn_conf.h                        0000664 0000000 0000000 00000001505 14746647661 0026744 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        /* WARNING: do not edit! */
/* Generated by Makefile from include/crypto/bn_conf.h.in */
/*
 * Copyright 2016-2021 The OpenSSL Project Authors. All Rights Reserved.
 *
 * Licensed under the Apache License 2.0 (the "License").  You may not use
 * this file except in compliance with the License.  You can obtain a copy
 * in the file LICENSE in the source distribution or at
 * https://www.openssl.org/source/license.html
 */

#ifndef OSSL_CRYPTO_BN_CONF_H
# define OSSL_CRYPTO_BN_CONF_H
# pragma once

/*
 * The contents of this file are not used in the UEFI build, as
 * both 32-bit and 64-bit builds are supported from a single run
 * of the Configure script.
 */

/* Should we define BN_DIV2W here? */

/* Only one for the following should be defined */
#undef SIXTY_FOUR_BIT_LONG
#undef SIXTY_FOUR_BIT
#define THIRTY_TWO_BIT

#endif
                                                                                                                                                                                           node-23.7.0/deps/openssl/config/archs/linux-elf/asm/include/crypto/dso_conf.h                       0000664 0000000 0000000 00000001106 14746647661 0027127 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        /* WARNING: do not edit! */
/* Generated by Makefile from include/crypto/dso_conf.h.in */
/*
 * Copyright 2016-2021 The OpenSSL Project Authors. All Rights Reserved.
 *
 * Licensed under the Apache License 2.0 (the "License").  You may not use
 * this file except in compliance with the License.  You can obtain a copy
 * in the file LICENSE in the source distribution or at
 * https://www.openssl.org/source/license.html
 */

#ifndef OSSL_CRYPTO_DSO_CONF_H
# define OSSL_CRYPTO_DSO_CONF_H
# pragma once

# define DSO_DLFCN
# define HAVE_DLFCN_H
# define DSO_EXTENSION ".so"
#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                          node-23.7.0/deps/openssl/config/archs/linux-elf/asm/include/openssl/                                0000775 0000000 0000000 00000000000 14746647661 0025331 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/deps/openssl/config/archs/linux-elf/asm/include/openssl/asn1.h                          0000664 0000000 0000000 00000166762 14746647661 0026366 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        /*
 * WARNING: do not edit!
 * Generated by Makefile from include/openssl/asn1.h.in
 *
 * Copyright 1995-2021 The OpenSSL Project Authors. All Rights Reserved.
 *
 * Licensed under the Apache License 2.0 (the "License").  You may not use
 * this file except in compliance with the License.  You can obtain a copy
 * in the file LICENSE in the source distribution or at
 * https://www.openssl.org/source/license.html
 */



#ifndef OPENSSL_ASN1_H
# define OPENSSL_ASN1_H
# pragma once

# include <openssl/macros.h>
# ifndef OPENSSL_NO_DEPRECATED_3_0
#  define HEADER_ASN1_H
# endif

# include <time.h>
# include <openssl/e_os2.h>
# include <openssl/opensslconf.h>
# include <openssl/bio.h>
# include <openssl/safestack.h>
# include <openssl/asn1err.h>
# include <openssl/symhacks.h>

# include <openssl/types.h>
# include <openssl/bn.h>

# ifdef OPENSSL_BUILD_SHLIBCRYPTO
#  undef OPENSSL_EXTERN
#  define OPENSSL_EXTERN OPENSSL_EXPORT
# endif

#ifdef  __cplusplus
extern "C" {
#endif

# define V_ASN1_UNIVERSAL                0x00
# define V_ASN1_APPLICATION              0x40
# define V_ASN1_CONTEXT_SPECIFIC         0x80
# define V_ASN1_PRIVATE                  0xc0

# define V_ASN1_CONSTRUCTED              0x20
# define V_ASN1_PRIMITIVE_TAG            0x1f
# define V_ASN1_PRIMATIVE_TAG /*compat*/ V_ASN1_PRIMITIVE_TAG

# define V_ASN1_APP_CHOOSE               -2/* let the recipient choose */
# define V_ASN1_OTHER                    -3/* used in ASN1_TYPE */
# define V_ASN1_ANY                      -4/* used in ASN1 template code */

# define V_ASN1_UNDEF                    -1
/* ASN.1 tag values */
# define V_ASN1_EOC                      0
# define V_ASN1_BOOLEAN                  1 /**/
# define V_ASN1_INTEGER                  2
# define V_ASN1_BIT_STRING               3
# define V_ASN1_OCTET_STRING             4
# define V_ASN1_NULL                     5
# define V_ASN1_OBJECT                   6
# define V_ASN1_OBJECT_DESCRIPTOR        7
# define V_ASN1_EXTERNAL                 8
# define V_ASN1_REAL                     9
# define V_ASN1_ENUMERATED               10
# define V_ASN1_UTF8STRING               12
# define V_ASN1_SEQUENCE                 16
# define V_ASN1_SET                      17
# define V_ASN1_NUMERICSTRING            18 /**/
# define V_ASN1_PRINTABLESTRING          19
# define V_ASN1_T61STRING                20
# define V_ASN1_TELETEXSTRING            20/* alias */
# define V_ASN1_VIDEOTEXSTRING           21 /**/
# define V_ASN1_IA5STRING                22
# define V_ASN1_UTCTIME                  23
# define V_ASN1_GENERALIZEDTIME          24 /**/
# define V_ASN1_GRAPHICSTRING            25 /**/
# define V_ASN1_ISO64STRING              26 /**/
# define V_ASN1_VISIBLESTRING            26/* alias */
# define V_ASN1_GENERALSTRING            27 /**/
# define V_ASN1_UNIVERSALSTRING          28 /**/
# define V_ASN1_BMPSTRING                30

/*
 * NB the constants below are used internally by ASN1_INTEGER
 * and ASN1_ENUMERATED to indicate the sign. They are *not* on
 * the wire tag values.
 */

# define V_ASN1_NEG                      0x100
# define V_ASN1_NEG_INTEGER              (2 | V_ASN1_NEG)
# define V_ASN1_NEG_ENUMERATED           (10 | V_ASN1_NEG)

/* For use with d2i_ASN1_type_bytes() */
# define B_ASN1_NUMERICSTRING    0x0001
# define B_ASN1_PRINTABLESTRING  0x0002
# define B_ASN1_T61STRING        0x0004
# define B_ASN1_TELETEXSTRING    0x0004
# define B_ASN1_VIDEOTEXSTRING   0x0008
# define B_ASN1_IA5STRING        0x0010
# define B_ASN1_GRAPHICSTRING    0x0020
# define B_ASN1_ISO64STRING      0x0040
# define B_ASN1_VISIBLESTRING    0x0040
# define B_ASN1_GENERALSTRING    0x0080
# define B_ASN1_UNIVERSALSTRING  0x0100
# define B_ASN1_OCTET_STRING     0x0200
# define B_ASN1_BIT_STRING       0x0400
# define B_ASN1_BMPSTRING        0x0800
# define B_ASN1_UNKNOWN          0x1000
# define B_ASN1_UTF8STRING       0x2000
# define B_ASN1_UTCTIME          0x4000
# define B_ASN1_GENERALIZEDTIME  0x8000
# define B_ASN1_SEQUENCE         0x10000
/* For use with ASN1_mbstring_copy() */
# define MBSTRING_FLAG           0x1000
# define MBSTRING_UTF8           (MBSTRING_FLAG)
# define MBSTRING_ASC            (MBSTRING_FLAG|1)
# define MBSTRING_BMP            (MBSTRING_FLAG|2)
# define MBSTRING_UNIV           (MBSTRING_FLAG|4)
# define SMIME_OLDMIME           0x400
# define SMIME_CRLFEOL           0x800
# define SMIME_STREAM            0x1000

/* Stacks for types not otherwise defined in this header */
SKM_DEFINE_STACK_OF_INTERNAL(X509_ALGOR, X509_ALGOR, X509_ALGOR)
#define sk_X509_ALGOR_num(sk) OPENSSL_sk_num(ossl_check_const_X509_ALGOR_sk_type(sk))
#define sk_X509_ALGOR_value(sk, idx) ((X509_ALGOR *)OPENSSL_sk_value(ossl_check_const_X509_ALGOR_sk_type(sk), (idx)))
#define sk_X509_ALGOR_new(cmp) ((STACK_OF(X509_ALGOR) *)OPENSSL_sk_new(ossl_check_X509_ALGOR_compfunc_type(cmp)))
#define sk_X509_ALGOR_new_null() ((STACK_OF(X509_ALGOR) *)OPENSSL_sk_new_null())
#define sk_X509_ALGOR_new_reserve(cmp, n) ((STACK_OF(X509_ALGOR) *)OPENSSL_sk_new_reserve(ossl_check_X509_ALGOR_compfunc_type(cmp), (n)))
#define sk_X509_ALGOR_reserve(sk, n) OPENSSL_sk_reserve(ossl_check_X509_ALGOR_sk_type(sk), (n))
#define sk_X509_ALGOR_free(sk) OPENSSL_sk_free(ossl_check_X509_ALGOR_sk_type(sk))
#define sk_X509_ALGOR_zero(sk) OPENSSL_sk_zero(ossl_check_X509_ALGOR_sk_type(sk))
#define sk_X509_ALGOR_delete(sk, i) ((X509_ALGOR *)OPENSSL_sk_delete(ossl_check_X509_ALGOR_sk_type(sk), (i)))
#define sk_X509_ALGOR_delete_ptr(sk, ptr) ((X509_ALGOR *)OPENSSL_sk_delete_ptr(ossl_check_X509_ALGOR_sk_type(sk), ossl_check_X509_ALGOR_type(ptr)))
#define sk_X509_ALGOR_push(sk, ptr) OPENSSL_sk_push(ossl_check_X509_ALGOR_sk_type(sk), ossl_check_X509_ALGOR_type(ptr))
#define sk_X509_ALGOR_unshift(sk, ptr) OPENSSL_sk_unshift(ossl_check_X509_ALGOR_sk_type(sk), ossl_check_X509_ALGOR_type(ptr))
#define sk_X509_ALGOR_pop(sk) ((X509_ALGOR *)OPENSSL_sk_pop(ossl_check_X509_ALGOR_sk_type(sk)))
#define sk_X509_ALGOR_shift(sk) ((X509_ALGOR *)OPENSSL_sk_shift(ossl_check_X509_ALGOR_sk_type(sk)))
#define sk_X509_ALGOR_pop_free(sk, freefunc) OPENSSL_sk_pop_free(ossl_check_X509_ALGOR_sk_type(sk),ossl_check_X509_ALGOR_freefunc_type(freefunc))
#define sk_X509_ALGOR_insert(sk, ptr, idx) OPENSSL_sk_insert(ossl_check_X509_ALGOR_sk_type(sk), ossl_check_X509_ALGOR_type(ptr), (idx))
#define sk_X509_ALGOR_set(sk, idx, ptr) ((X509_ALGOR *)OPENSSL_sk_set(ossl_check_X509_ALGOR_sk_type(sk), (idx), ossl_check_X509_ALGOR_type(ptr)))
#define sk_X509_ALGOR_find(sk, ptr) OPENSSL_sk_find(ossl_check_X509_ALGOR_sk_type(sk), ossl_check_X509_ALGOR_type(ptr))
#define sk_X509_ALGOR_find_ex(sk, ptr) OPENSSL_sk_find_ex(ossl_check_X509_ALGOR_sk_type(sk), ossl_check_X509_ALGOR_type(ptr))
#define sk_X509_ALGOR_find_all(sk, ptr, pnum) OPENSSL_sk_find_all(ossl_check_X509_ALGOR_sk_type(sk), ossl_check_X509_ALGOR_type(ptr), pnum)
#define sk_X509_ALGOR_sort(sk) OPENSSL_sk_sort(ossl_check_X509_ALGOR_sk_type(sk))
#define sk_X509_ALGOR_is_sorted(sk) OPENSSL_sk_is_sorted(ossl_check_const_X509_ALGOR_sk_type(sk))
#define sk_X509_ALGOR_dup(sk) ((STACK_OF(X509_ALGOR) *)OPENSSL_sk_dup(ossl_check_const_X509_ALGOR_sk_type(sk)))
#define sk_X509_ALGOR_deep_copy(sk, copyfunc, freefunc) ((STACK_OF(X509_ALGOR) *)OPENSSL_sk_deep_copy(ossl_check_const_X509_ALGOR_sk_type(sk), ossl_check_X509_ALGOR_copyfunc_type(copyfunc), ossl_check_X509_ALGOR_freefunc_type(freefunc)))
#define sk_X509_ALGOR_set_cmp_func(sk, cmp) ((sk_X509_ALGOR_compfunc)OPENSSL_sk_set_cmp_func(ossl_check_X509_ALGOR_sk_type(sk), ossl_check_X509_ALGOR_compfunc_type(cmp)))



# define ASN1_STRING_FLAG_BITS_LEFT 0x08/* Set if 0x07 has bits left value */
/*
 * This indicates that the ASN1_STRING is not a real value but just a place
 * holder for the location where indefinite length constructed data should be
 * inserted in the memory buffer
 */
# define ASN1_STRING_FLAG_NDEF 0x010

/*
 * This flag is used by the CMS code to indicate that a string is not
 * complete and is a place holder for content when it had all been accessed.
 * The flag will be reset when content has been written to it.
 */

# define ASN1_STRING_FLAG_CONT 0x020
/*
 * This flag is used by ASN1 code to indicate an ASN1_STRING is an MSTRING
 * type.
 */
# define ASN1_STRING_FLAG_MSTRING 0x040
/* String is embedded and only content should be freed */
# define ASN1_STRING_FLAG_EMBED 0x080
/* String should be parsed in RFC 5280's time format */
# define ASN1_STRING_FLAG_X509_TIME 0x100
/* This is the base type that holds just about everything :-) */
struct asn1_string_st {
    int length;
    int type;
    unsigned char *data;
    /*
     * The value of the following field depends on the type being held.  It
     * is mostly being used for BIT_STRING so if the input data has a
     * non-zero 'unused bits' value, it will be handled correctly
     */
    long flags;
};

/*
 * ASN1_ENCODING structure: this is used to save the received encoding of an
 * ASN1 type. This is useful to get round problems with invalid encodings
 * which can break signatures.
 */

typedef struct ASN1_ENCODING_st {
    unsigned char *enc;         /* DER encoding */
    long len;                   /* Length of encoding */
    int modified;               /* set to 1 if 'enc' is invalid */
} ASN1_ENCODING;

/* Used with ASN1 LONG type: if a long is set to this it is omitted */
# define ASN1_LONG_UNDEF 0x7fffffffL

# define STABLE_FLAGS_MALLOC     0x01
/*
 * A zero passed to ASN1_STRING_TABLE_new_add for the flags is interpreted
 * as "don't change" and STABLE_FLAGS_MALLOC is always set. By setting
 * STABLE_FLAGS_MALLOC only we can clear the existing value. Use the alias
 * STABLE_FLAGS_CLEAR to reflect this.
 */
# define STABLE_FLAGS_CLEAR      STABLE_FLAGS_MALLOC
# define STABLE_NO_MASK          0x02
# define DIRSTRING_TYPE  \
 (B_ASN1_PRINTABLESTRING|B_ASN1_T61STRING|B_ASN1_BMPSTRING|B_ASN1_UTF8STRING)
# define PKCS9STRING_TYPE (DIRSTRING_TYPE|B_ASN1_IA5STRING)

struct asn1_string_table_st {
    int nid;
    long minsize;
    long maxsize;
    unsigned long mask;
    unsigned long flags;
};

SKM_DEFINE_STACK_OF_INTERNAL(ASN1_STRING_TABLE, ASN1_STRING_TABLE, ASN1_STRING_TABLE)
#define sk_ASN1_STRING_TABLE_num(sk) OPENSSL_sk_num(ossl_check_const_ASN1_STRING_TABLE_sk_type(sk))
#define sk_ASN1_STRING_TABLE_value(sk, idx) ((ASN1_STRING_TABLE *)OPENSSL_sk_value(ossl_check_const_ASN1_STRING_TABLE_sk_type(sk), (idx)))
#define sk_ASN1_STRING_TABLE_new(cmp) ((STACK_OF(ASN1_STRING_TABLE) *)OPENSSL_sk_new(ossl_check_ASN1_STRING_TABLE_compfunc_type(cmp)))
#define sk_ASN1_STRING_TABLE_new_null() ((STACK_OF(ASN1_STRING_TABLE) *)OPENSSL_sk_new_null())
#define sk_ASN1_STRING_TABLE_new_reserve(cmp, n) ((STACK_OF(ASN1_STRING_TABLE) *)OPENSSL_sk_new_reserve(ossl_check_ASN1_STRING_TABLE_compfunc_type(cmp), (n)))
#define sk_ASN1_STRING_TABLE_reserve(sk, n) OPENSSL_sk_reserve(ossl_check_ASN1_STRING_TABLE_sk_type(sk), (n))
#define sk_ASN1_STRING_TABLE_free(sk) OPENSSL_sk_free(ossl_check_ASN1_STRING_TABLE_sk_type(sk))
#define sk_ASN1_STRING_TABLE_zero(sk) OPENSSL_sk_zero(ossl_check_ASN1_STRING_TABLE_sk_type(sk))
#define sk_ASN1_STRING_TABLE_delete(sk, i) ((ASN1_STRING_TABLE *)OPENSSL_sk_delete(ossl_check_ASN1_STRING_TABLE_sk_type(sk), (i)))
#define sk_ASN1_STRING_TABLE_delete_ptr(sk, ptr) ((ASN1_STRING_TABLE *)OPENSSL_sk_delete_ptr(ossl_check_ASN1_STRING_TABLE_sk_type(sk), ossl_check_ASN1_STRING_TABLE_type(ptr)))
#define sk_ASN1_STRING_TABLE_push(sk, ptr) OPENSSL_sk_push(ossl_check_ASN1_STRING_TABLE_sk_type(sk), ossl_check_ASN1_STRING_TABLE_type(ptr))
#define sk_ASN1_STRING_TABLE_unshift(sk, ptr) OPENSSL_sk_unshift(ossl_check_ASN1_STRING_TABLE_sk_type(sk), ossl_check_ASN1_STRING_TABLE_type(ptr))
#define sk_ASN1_STRING_TABLE_pop(sk) ((ASN1_STRING_TABLE *)OPENSSL_sk_pop(ossl_check_ASN1_STRING_TABLE_sk_type(sk)))
#define sk_ASN1_STRING_TABLE_shift(sk) ((ASN1_STRING_TABLE *)OPENSSL_sk_shift(ossl_check_ASN1_STRING_TABLE_sk_type(sk)))
#define sk_ASN1_STRING_TABLE_pop_free(sk, freefunc) OPENSSL_sk_pop_free(ossl_check_ASN1_STRING_TABLE_sk_type(sk),ossl_check_ASN1_STRING_TABLE_freefunc_type(freefunc))
#define sk_ASN1_STRING_TABLE_insert(sk, ptr, idx) OPENSSL_sk_insert(ossl_check_ASN1_STRING_TABLE_sk_type(sk), ossl_check_ASN1_STRING_TABLE_type(ptr), (idx))
#define sk_ASN1_STRING_TABLE_set(sk, idx, ptr) ((ASN1_STRING_TABLE *)OPENSSL_sk_set(ossl_check_ASN1_STRING_TABLE_sk_type(sk), (idx), ossl_check_ASN1_STRING_TABLE_type(ptr)))
#define sk_ASN1_STRING_TABLE_find(sk, ptr) OPENSSL_sk_find(ossl_check_ASN1_STRING_TABLE_sk_type(sk), ossl_check_ASN1_STRING_TABLE_type(ptr))
#define sk_ASN1_STRING_TABLE_find_ex(sk, ptr) OPENSSL_sk_find_ex(ossl_check_ASN1_STRING_TABLE_sk_type(sk), ossl_check_ASN1_STRING_TABLE_type(ptr))
#define sk_ASN1_STRING_TABLE_find_all(sk, ptr, pnum) OPENSSL_sk_find_all(ossl_check_ASN1_STRING_TABLE_sk_type(sk), ossl_check_ASN1_STRING_TABLE_type(ptr), pnum)
#define sk_ASN1_STRING_TABLE_sort(sk) OPENSSL_sk_sort(ossl_check_ASN1_STRING_TABLE_sk_type(sk))
#define sk_ASN1_STRING_TABLE_is_sorted(sk) OPENSSL_sk_is_sorted(ossl_check_const_ASN1_STRING_TABLE_sk_type(sk))
#define sk_ASN1_STRING_TABLE_dup(sk) ((STACK_OF(ASN1_STRING_TABLE) *)OPENSSL_sk_dup(ossl_check_const_ASN1_STRING_TABLE_sk_type(sk)))
#define sk_ASN1_STRING_TABLE_deep_copy(sk, copyfunc, freefunc) ((STACK_OF(ASN1_STRING_TABLE) *)OPENSSL_sk_deep_copy(ossl_check_const_ASN1_STRING_TABLE_sk_type(sk), ossl_check_ASN1_STRING_TABLE_copyfunc_type(copyfunc), ossl_check_ASN1_STRING_TABLE_freefunc_type(freefunc)))
#define sk_ASN1_STRING_TABLE_set_cmp_func(sk, cmp) ((sk_ASN1_STRING_TABLE_compfunc)OPENSSL_sk_set_cmp_func(ossl_check_ASN1_STRING_TABLE_sk_type(sk), ossl_check_ASN1_STRING_TABLE_compfunc_type(cmp)))


/* size limits: this stuff is taken straight from RFC2459 */

# define ub_name                         32768
# define ub_common_name                  64
# define ub_locality_name                128
# define ub_state_name                   128
# define ub_organization_name            64
# define ub_organization_unit_name       64
# define ub_title                        64
# define ub_email_address                128

/*
 * Declarations for template structures: for full definitions see asn1t.h
 */
typedef struct ASN1_TEMPLATE_st ASN1_TEMPLATE;
typedef struct ASN1_TLC_st ASN1_TLC;
/* This is just an opaque pointer */
typedef struct ASN1_VALUE_st ASN1_VALUE;

/* Declare ASN1 functions: the implement macro in in asn1t.h */

/*
 * The mysterious 'extern' that's passed to some macros is innocuous,
 * and is there to quiet pre-C99 compilers that may complain about empty
 * arguments in macro calls.
 */

# define DECLARE_ASN1_FUNCTIONS_attr(attr, type)                            \
    DECLARE_ASN1_FUNCTIONS_name_attr(attr, type, type)
# define DECLARE_ASN1_FUNCTIONS(type)                                       \
    DECLARE_ASN1_FUNCTIONS_attr(extern, type)

# define DECLARE_ASN1_ALLOC_FUNCTIONS_attr(attr, type)                      \
    DECLARE_ASN1_ALLOC_FUNCTIONS_name_attr(attr, type, type)
# define DECLARE_ASN1_ALLOC_FUNCTIONS(type)                                 \
    DECLARE_ASN1_ALLOC_FUNCTIONS_attr(extern, type)

# define DECLARE_ASN1_FUNCTIONS_name_attr(attr, type, name)                 \
    DECLARE_ASN1_ALLOC_FUNCTIONS_name_attr(attr, type, name)                \
    DECLARE_ASN1_ENCODE_FUNCTIONS_name_attr(attr, type, name)
# define DECLARE_ASN1_FUNCTIONS_name(type, name)                            \
    DECLARE_ASN1_FUNCTIONS_name_attr(extern, type, name)

# define DECLARE_ASN1_ENCODE_FUNCTIONS_attr(attr, type, itname, name)       \
    DECLARE_ASN1_ENCODE_FUNCTIONS_only_attr(attr, type, name)               \
    DECLARE_ASN1_ITEM_attr(attr, itname)
# define DECLARE_ASN1_ENCODE_FUNCTIONS(type, itname, name)                  \
    DECLARE_ASN1_ENCODE_FUNCTIONS_attr(extern, type, itname, name)

# define DECLARE_ASN1_ENCODE_FUNCTIONS_name_attr(attr, type, name)          \
    DECLARE_ASN1_ENCODE_FUNCTIONS_attr(attr, type, name, name)
# define DECLARE_ASN1_ENCODE_FUNCTIONS_name(type, name) \
    DECLARE_ASN1_ENCODE_FUNCTIONS_name_attr(extern, type, name)

# define DECLARE_ASN1_ENCODE_FUNCTIONS_only_attr(attr, type, name)          \
    attr type *d2i_##name(type **a, const unsigned char **in, long len);    \
    attr int i2d_##name(const type *a, unsigned char **out);
# define DECLARE_ASN1_ENCODE_FUNCTIONS_only(type, name)                     \
    DECLARE_ASN1_ENCODE_FUNCTIONS_only_attr(extern, type, name)

# define DECLARE_ASN1_NDEF_FUNCTION_attr(attr, name)                        \
    attr int i2d_##name##_NDEF(const name *a, unsigned char **out);
# define DECLARE_ASN1_NDEF_FUNCTION(name)                                   \
    DECLARE_ASN1_NDEF_FUNCTION_attr(extern, name)

# define DECLARE_ASN1_ALLOC_FUNCTIONS_name_attr(attr, type, name)           \
    attr type *name##_new(void);                                            \
    attr void name##_free(type *a);
# define DECLARE_ASN1_ALLOC_FUNCTIONS_name(type, name)                      \
    DECLARE_ASN1_ALLOC_FUNCTIONS_name_attr(extern, type, name)

# define DECLARE_ASN1_DUP_FUNCTION_attr(attr, type)                         \
    DECLARE_ASN1_DUP_FUNCTION_name_attr(attr, type, type)
# define DECLARE_ASN1_DUP_FUNCTION(type)                                    \
    DECLARE_ASN1_DUP_FUNCTION_attr(extern, type)

# define DECLARE_ASN1_DUP_FUNCTION_name_attr(attr, type, name)              \
    attr type *name##_dup(const type *a);
# define DECLARE_ASN1_DUP_FUNCTION_name(type, name)                         \
    DECLARE_ASN1_DUP_FUNCTION_name_attr(extern, type, name)

# define DECLARE_ASN1_PRINT_FUNCTION_attr(attr, stname)                     \
    DECLARE_ASN1_PRINT_FUNCTION_fname_attr(attr, stname, stname)
# define DECLARE_ASN1_PRINT_FUNCTION(stname)                                \
    DECLARE_ASN1_PRINT_FUNCTION_attr(extern, stname)

# define DECLARE_ASN1_PRINT_FUNCTION_fname_attr(attr, stname, fname)        \
    attr int fname##_print_ctx(BIO *out, const stname *x, int indent,       \
                               const ASN1_PCTX *pctx);
# define DECLARE_ASN1_PRINT_FUNCTION_fname(stname, fname)                   \
    DECLARE_ASN1_PRINT_FUNCTION_fname_attr(extern, stname, fname)

# define D2I_OF(type) type *(*)(type **,const unsigned char **,long)
# define I2D_OF(type) int (*)(const type *,unsigned char **)

# define CHECKED_D2I_OF(type, d2i) \
    ((d2i_of_void*) (1 ? d2i : ((D2I_OF(type))0)))
# define CHECKED_I2D_OF(type, i2d) \
    ((i2d_of_void*) (1 ? i2d : ((I2D_OF(type))0)))
# define CHECKED_NEW_OF(type, xnew) \
    ((void *(*)(void)) (1 ? xnew : ((type *(*)(void))0)))
# define CHECKED_PTR_OF(type, p) \
    ((void*) (1 ? p : (type*)0))
# define CHECKED_PPTR_OF(type, p) \
    ((void**) (1 ? p : (type**)0))

# define TYPEDEF_D2I_OF(type) typedef type *d2i_of_##type(type **,const unsigned char **,long)
# define TYPEDEF_I2D_OF(type) typedef int i2d_of_##type(const type *,unsigned char **)
# define TYPEDEF_D2I2D_OF(type) TYPEDEF_D2I_OF(type); TYPEDEF_I2D_OF(type)

typedef void *d2i_of_void(void **, const unsigned char **, long);
typedef int i2d_of_void(const void *, unsigned char **);

/*-
 * The following macros and typedefs allow an ASN1_ITEM
 * to be embedded in a structure and referenced. Since
 * the ASN1_ITEM pointers need to be globally accessible
 * (possibly from shared libraries) they may exist in
 * different forms. On platforms that support it the
 * ASN1_ITEM structure itself will be globally exported.
 * Other platforms will export a function that returns
 * an ASN1_ITEM pointer.
 *
 * To handle both cases transparently the macros below
 * should be used instead of hard coding an ASN1_ITEM
 * pointer in a structure.
 *
 * The structure will look like this:
 *
 * typedef struct SOMETHING_st {
 *      ...
 *      ASN1_ITEM_EXP *iptr;
 *      ...
 * } SOMETHING;
 *
 * It would be initialised as e.g.:
 *
 * SOMETHING somevar = {...,ASN1_ITEM_ref(X509),...};
 *
 * and the actual pointer extracted with:
 *
 * const ASN1_ITEM *it = ASN1_ITEM_ptr(somevar.iptr);
 *
 * Finally an ASN1_ITEM pointer can be extracted from an
 * appropriate reference with: ASN1_ITEM_rptr(X509). This
 * would be used when a function takes an ASN1_ITEM * argument.
 *
 */


/*
 * Platforms that can't easily handle shared global variables are declared as
 * functions returning ASN1_ITEM pointers.
 */

/* ASN1_ITEM pointer exported type */
typedef const ASN1_ITEM *ASN1_ITEM_EXP (void);

/* Macro to obtain ASN1_ITEM pointer from exported type */
# define ASN1_ITEM_ptr(iptr) (iptr())

/* Macro to include ASN1_ITEM pointer from base type */
# define ASN1_ITEM_ref(iptr) (iptr##_it)

# define ASN1_ITEM_rptr(ref) (ref##_it())

# define DECLARE_ASN1_ITEM_attr(attr, name)                                 \
    attr const ASN1_ITEM * name##_it(void);
# define DECLARE_ASN1_ITEM(name)                                            \
    DECLARE_ASN1_ITEM_attr(extern, name)

/* Parameters used by ASN1_STRING_print_ex() */

/*
 * These determine which characters to escape: RFC2253 special characters,
 * control characters and MSB set characters
 */

# define ASN1_STRFLGS_ESC_2253           1
# define ASN1_STRFLGS_ESC_CTRL           2
# define ASN1_STRFLGS_ESC_MSB            4

/* Lower 8 bits are reserved as an output type specifier */
# define ASN1_DTFLGS_TYPE_MASK    0x0FUL
# define ASN1_DTFLGS_RFC822       0x00UL
# define ASN1_DTFLGS_ISO8601      0x01UL

/*
 * This flag determines how we do escaping: normally RC2253 backslash only,
 * set this to use backslash and quote.
 */

# define ASN1_STRFLGS_ESC_QUOTE          8

/* These three flags are internal use only. */

/* Character is a valid PrintableString character */
# define CHARTYPE_PRINTABLESTRING        0x10
/* Character needs escaping if it is the first character */
# define CHARTYPE_FIRST_ESC_2253         0x20
/* Character needs escaping if it is the last character */
# define CHARTYPE_LAST_ESC_2253          0x40

/*
 * NB the internal flags are safely reused below by flags handled at the top
 * level.
 */

/*
 * If this is set we convert all character strings to UTF8 first
 */

# define ASN1_STRFLGS_UTF8_CONVERT       0x10

/*
 * If this is set we don't attempt to interpret content: just assume all
 * strings are 1 byte per character. This will produce some pretty odd
 * looking output!
 */

# define ASN1_STRFLGS_IGNORE_TYPE        0x20

/* If this is set we include the string type in the output */
# define ASN1_STRFLGS_SHOW_TYPE          0x40

/*
 * This determines which strings to display and which to 'dump' (hex dump of
 * content octets or DER encoding). We can only dump non character strings or
 * everything. If we don't dump 'unknown' they are interpreted as character
 * strings with 1 octet per character and are subject to the usual escaping
 * options.
 */

# define ASN1_STRFLGS_DUMP_ALL           0x80
# define ASN1_STRFLGS_DUMP_UNKNOWN       0x100

/*
 * These determine what 'dumping' does, we can dump the content octets or the
 * DER encoding: both use the RFC2253 #XXXXX notation.
 */

# define ASN1_STRFLGS_DUMP_DER           0x200

/*
 * This flag specifies that RC2254 escaping shall be performed.
 */
#define ASN1_STRFLGS_ESC_2254           0x400

/*
 * All the string flags consistent with RFC2253, escaping control characters
 * isn't essential in RFC2253 but it is advisable anyway.
 */

# define ASN1_STRFLGS_RFC2253    (ASN1_STRFLGS_ESC_2253 | \
                                ASN1_STRFLGS_ESC_CTRL | \
                                ASN1_STRFLGS_ESC_MSB | \
                                ASN1_STRFLGS_UTF8_CONVERT | \
                                ASN1_STRFLGS_DUMP_UNKNOWN | \
                                ASN1_STRFLGS_DUMP_DER)


struct asn1_type_st {
    int type;
    union {
        char *ptr;
        ASN1_BOOLEAN boolean;
        ASN1_STRING *asn1_string;
        ASN1_OBJECT *object;
        ASN1_INTEGER *integer;
        ASN1_ENUMERATED *enumerated;
        ASN1_BIT_STRING *bit_string;
        ASN1_OCTET_STRING *octet_string;
        ASN1_PRINTABLESTRING *printablestring;
        ASN1_T61STRING *t61string;
        ASN1_IA5STRING *ia5string;
        ASN1_GENERALSTRING *generalstring;
        ASN1_BMPSTRING *bmpstring;
        ASN1_UNIVERSALSTRING *universalstring;
        ASN1_UTCTIME *utctime;
        ASN1_GENERALIZEDTIME *generalizedtime;
        ASN1_VISIBLESTRING *visiblestring;
        ASN1_UTF8STRING *utf8string;
        /*
         * set and sequence are left complete and still contain the set or
         * sequence bytes
         */
        ASN1_STRING *set;
        ASN1_STRING *sequence;
        ASN1_VALUE *asn1_value;
    } value;
};

SKM_DEFINE_STACK_OF_INTERNAL(ASN1_TYPE, ASN1_TYPE, ASN1_TYPE)
#define sk_ASN1_TYPE_num(sk) OPENSSL_sk_num(ossl_check_const_ASN1_TYPE_sk_type(sk))
#define sk_ASN1_TYPE_value(sk, idx) ((ASN1_TYPE *)OPENSSL_sk_value(ossl_check_const_ASN1_TYPE_sk_type(sk), (idx)))
#define sk_ASN1_TYPE_new(cmp) ((STACK_OF(ASN1_TYPE) *)OPENSSL_sk_new(ossl_check_ASN1_TYPE_compfunc_type(cmp)))
#define sk_ASN1_TYPE_new_null() ((STACK_OF(ASN1_TYPE) *)OPENSSL_sk_new_null())
#define sk_ASN1_TYPE_new_reserve(cmp, n) ((STACK_OF(ASN1_TYPE) *)OPENSSL_sk_new_reserve(ossl_check_ASN1_TYPE_compfunc_type(cmp), (n)))
#define sk_ASN1_TYPE_reserve(sk, n) OPENSSL_sk_reserve(ossl_check_ASN1_TYPE_sk_type(sk), (n))
#define sk_ASN1_TYPE_free(sk) OPENSSL_sk_free(ossl_check_ASN1_TYPE_sk_type(sk))
#define sk_ASN1_TYPE_zero(sk) OPENSSL_sk_zero(ossl_check_ASN1_TYPE_sk_type(sk))
#define sk_ASN1_TYPE_delete(sk, i) ((ASN1_TYPE *)OPENSSL_sk_delete(ossl_check_ASN1_TYPE_sk_type(sk), (i)))
#define sk_ASN1_TYPE_delete_ptr(sk, ptr) ((ASN1_TYPE *)OPENSSL_sk_delete_ptr(ossl_check_ASN1_TYPE_sk_type(sk), ossl_check_ASN1_TYPE_type(ptr)))
#define sk_ASN1_TYPE_push(sk, ptr) OPENSSL_sk_push(ossl_check_ASN1_TYPE_sk_type(sk), ossl_check_ASN1_TYPE_type(ptr))
#define sk_ASN1_TYPE_unshift(sk, ptr) OPENSSL_sk_unshift(ossl_check_ASN1_TYPE_sk_type(sk), ossl_check_ASN1_TYPE_type(ptr))
#define sk_ASN1_TYPE_pop(sk) ((ASN1_TYPE *)OPENSSL_sk_pop(ossl_check_ASN1_TYPE_sk_type(sk)))
#define sk_ASN1_TYPE_shift(sk) ((ASN1_TYPE *)OPENSSL_sk_shift(ossl_check_ASN1_TYPE_sk_type(sk)))
#define sk_ASN1_TYPE_pop_free(sk, freefunc) OPENSSL_sk_pop_free(ossl_check_ASN1_TYPE_sk_type(sk),ossl_check_ASN1_TYPE_freefunc_type(freefunc))
#define sk_ASN1_TYPE_insert(sk, ptr, idx) OPENSSL_sk_insert(ossl_check_ASN1_TYPE_sk_type(sk), ossl_check_ASN1_TYPE_type(ptr), (idx))
#define sk_ASN1_TYPE_set(sk, idx, ptr) ((ASN1_TYPE *)OPENSSL_sk_set(ossl_check_ASN1_TYPE_sk_type(sk), (idx), ossl_check_ASN1_TYPE_type(ptr)))
#define sk_ASN1_TYPE_find(sk, ptr) OPENSSL_sk_find(ossl_check_ASN1_TYPE_sk_type(sk), ossl_check_ASN1_TYPE_type(ptr))
#define sk_ASN1_TYPE_find_ex(sk, ptr) OPENSSL_sk_find_ex(ossl_check_ASN1_TYPE_sk_type(sk), ossl_check_ASN1_TYPE_type(ptr))
#define sk_ASN1_TYPE_find_all(sk, ptr, pnum) OPENSSL_sk_find_all(ossl_check_ASN1_TYPE_sk_type(sk), ossl_check_ASN1_TYPE_type(ptr), pnum)
#define sk_ASN1_TYPE_sort(sk) OPENSSL_sk_sort(ossl_check_ASN1_TYPE_sk_type(sk))
#define sk_ASN1_TYPE_is_sorted(sk) OPENSSL_sk_is_sorted(ossl_check_const_ASN1_TYPE_sk_type(sk))
#define sk_ASN1_TYPE_dup(sk) ((STACK_OF(ASN1_TYPE) *)OPENSSL_sk_dup(ossl_check_const_ASN1_TYPE_sk_type(sk)))
#define sk_ASN1_TYPE_deep_copy(sk, copyfunc, freefunc) ((STACK_OF(ASN1_TYPE) *)OPENSSL_sk_deep_copy(ossl_check_const_ASN1_TYPE_sk_type(sk), ossl_check_ASN1_TYPE_copyfunc_type(copyfunc), ossl_check_ASN1_TYPE_freefunc_type(freefunc)))
#define sk_ASN1_TYPE_set_cmp_func(sk, cmp) ((sk_ASN1_TYPE_compfunc)OPENSSL_sk_set_cmp_func(ossl_check_ASN1_TYPE_sk_type(sk), ossl_check_ASN1_TYPE_compfunc_type(cmp)))


typedef STACK_OF(ASN1_TYPE) ASN1_SEQUENCE_ANY;

DECLARE_ASN1_ENCODE_FUNCTIONS_name(ASN1_SEQUENCE_ANY, ASN1_SEQUENCE_ANY)
DECLARE_ASN1_ENCODE_FUNCTIONS_name(ASN1_SEQUENCE_ANY, ASN1_SET_ANY)

/* This is used to contain a list of bit names */
typedef struct BIT_STRING_BITNAME_st {
    int bitnum;
    const char *lname;
    const char *sname;
} BIT_STRING_BITNAME;

# define B_ASN1_TIME \
                        B_ASN1_UTCTIME | \
                        B_ASN1_GENERALIZEDTIME

# define B_ASN1_PRINTABLE \
                        B_ASN1_NUMERICSTRING| \
                        B_ASN1_PRINTABLESTRING| \
                        B_ASN1_T61STRING| \
                        B_ASN1_IA5STRING| \
                        B_ASN1_BIT_STRING| \
                        B_ASN1_UNIVERSALSTRING|\
                        B_ASN1_BMPSTRING|\
                        B_ASN1_UTF8STRING|\
                        B_ASN1_SEQUENCE|\
                        B_ASN1_UNKNOWN

# define B_ASN1_DIRECTORYSTRING \
                        B_ASN1_PRINTABLESTRING| \
                        B_ASN1_TELETEXSTRING|\
                        B_ASN1_BMPSTRING|\
                        B_ASN1_UNIVERSALSTRING|\
                        B_ASN1_UTF8STRING

# define B_ASN1_DISPLAYTEXT \
                        B_ASN1_IA5STRING| \
                        B_ASN1_VISIBLESTRING| \
                        B_ASN1_BMPSTRING|\
                        B_ASN1_UTF8STRING

DECLARE_ASN1_ALLOC_FUNCTIONS_name(ASN1_TYPE, ASN1_TYPE)
DECLARE_ASN1_ENCODE_FUNCTIONS(ASN1_TYPE, ASN1_ANY, ASN1_TYPE)

int ASN1_TYPE_get(const ASN1_TYPE *a);
void ASN1_TYPE_set(ASN1_TYPE *a, int type, void *value);
int ASN1_TYPE_set1(ASN1_TYPE *a, int type, const void *value);
int ASN1_TYPE_cmp(const ASN1_TYPE *a, const ASN1_TYPE *b);

ASN1_TYPE *ASN1_TYPE_pack_sequence(const ASN1_ITEM *it, void *s, ASN1_TYPE **t);
void *ASN1_TYPE_unpack_sequence(const ASN1_ITEM *it, const ASN1_TYPE *t);

SKM_DEFINE_STACK_OF_INTERNAL(ASN1_OBJECT, ASN1_OBJECT, ASN1_OBJECT)
#define sk_ASN1_OBJECT_num(sk) OPENSSL_sk_num(ossl_check_const_ASN1_OBJECT_sk_type(sk))
#define sk_ASN1_OBJECT_value(sk, idx) ((ASN1_OBJECT *)OPENSSL_sk_value(ossl_check_const_ASN1_OBJECT_sk_type(sk), (idx)))
#define sk_ASN1_OBJECT_new(cmp) ((STACK_OF(ASN1_OBJECT) *)OPENSSL_sk_new(ossl_check_ASN1_OBJECT_compfunc_type(cmp)))
#define sk_ASN1_OBJECT_new_null() ((STACK_OF(ASN1_OBJECT) *)OPENSSL_sk_new_null())
#define sk_ASN1_OBJECT_new_reserve(cmp, n) ((STACK_OF(ASN1_OBJECT) *)OPENSSL_sk_new_reserve(ossl_check_ASN1_OBJECT_compfunc_type(cmp), (n)))
#define sk_ASN1_OBJECT_reserve(sk, n) OPENSSL_sk_reserve(ossl_check_ASN1_OBJECT_sk_type(sk), (n))
#define sk_ASN1_OBJECT_free(sk) OPENSSL_sk_free(ossl_check_ASN1_OBJECT_sk_type(sk))
#define sk_ASN1_OBJECT_zero(sk) OPENSSL_sk_zero(ossl_check_ASN1_OBJECT_sk_type(sk))
#define sk_ASN1_OBJECT_delete(sk, i) ((ASN1_OBJECT *)OPENSSL_sk_delete(ossl_check_ASN1_OBJECT_sk_type(sk), (i)))
#define sk_ASN1_OBJECT_delete_ptr(sk, ptr) ((ASN1_OBJECT *)OPENSSL_sk_delete_ptr(ossl_check_ASN1_OBJECT_sk_type(sk), ossl_check_ASN1_OBJECT_type(ptr)))
#define sk_ASN1_OBJECT_push(sk, ptr) OPENSSL_sk_push(ossl_check_ASN1_OBJECT_sk_type(sk), ossl_check_ASN1_OBJECT_type(ptr))
#define sk_ASN1_OBJECT_unshift(sk, ptr) OPENSSL_sk_unshift(ossl_check_ASN1_OBJECT_sk_type(sk), ossl_check_ASN1_OBJECT_type(ptr))
#define sk_ASN1_OBJECT_pop(sk) ((ASN1_OBJECT *)OPENSSL_sk_pop(ossl_check_ASN1_OBJECT_sk_type(sk)))
#define sk_ASN1_OBJECT_shift(sk) ((ASN1_OBJECT *)OPENSSL_sk_shift(ossl_check_ASN1_OBJECT_sk_type(sk)))
#define sk_ASN1_OBJECT_pop_free(sk, freefunc) OPENSSL_sk_pop_free(ossl_check_ASN1_OBJECT_sk_type(sk),ossl_check_ASN1_OBJECT_freefunc_type(freefunc))
#define sk_ASN1_OBJECT_insert(sk, ptr, idx) OPENSSL_sk_insert(ossl_check_ASN1_OBJECT_sk_type(sk), ossl_check_ASN1_OBJECT_type(ptr), (idx))
#define sk_ASN1_OBJECT_set(sk, idx, ptr) ((ASN1_OBJECT *)OPENSSL_sk_set(ossl_check_ASN1_OBJECT_sk_type(sk), (idx), ossl_check_ASN1_OBJECT_type(ptr)))
#define sk_ASN1_OBJECT_find(sk, ptr) OPENSSL_sk_find(ossl_check_ASN1_OBJECT_sk_type(sk), ossl_check_ASN1_OBJECT_type(ptr))
#define sk_ASN1_OBJECT_find_ex(sk, ptr) OPENSSL_sk_find_ex(ossl_check_ASN1_OBJECT_sk_type(sk), ossl_check_ASN1_OBJECT_type(ptr))
#define sk_ASN1_OBJECT_find_all(sk, ptr, pnum) OPENSSL_sk_find_all(ossl_check_ASN1_OBJECT_sk_type(sk), ossl_check_ASN1_OBJECT_type(ptr), pnum)
#define sk_ASN1_OBJECT_sort(sk) OPENSSL_sk_sort(ossl_check_ASN1_OBJECT_sk_type(sk))
#define sk_ASN1_OBJECT_is_sorted(sk) OPENSSL_sk_is_sorted(ossl_check_const_ASN1_OBJECT_sk_type(sk))
#define sk_ASN1_OBJECT_dup(sk) ((STACK_OF(ASN1_OBJECT) *)OPENSSL_sk_dup(ossl_check_const_ASN1_OBJECT_sk_type(sk)))
#define sk_ASN1_OBJECT_deep_copy(sk, copyfunc, freefunc) ((STACK_OF(ASN1_OBJECT) *)OPENSSL_sk_deep_copy(ossl_check_const_ASN1_OBJECT_sk_type(sk), ossl_check_ASN1_OBJECT_copyfunc_type(copyfunc), ossl_check_ASN1_OBJECT_freefunc_type(freefunc)))
#define sk_ASN1_OBJECT_set_cmp_func(sk, cmp) ((sk_ASN1_OBJECT_compfunc)OPENSSL_sk_set_cmp_func(ossl_check_ASN1_OBJECT_sk_type(sk), ossl_check_ASN1_OBJECT_compfunc_type(cmp)))


DECLARE_ASN1_FUNCTIONS(ASN1_OBJECT)

ASN1_STRING *ASN1_STRING_new(void);
void ASN1_STRING_free(ASN1_STRING *a);
void ASN1_STRING_clear_free(ASN1_STRING *a);
int ASN1_STRING_copy(ASN1_STRING *dst, const ASN1_STRING *str);
DECLARE_ASN1_DUP_FUNCTION(ASN1_STRING)
ASN1_STRING *ASN1_STRING_type_new(int type);
int ASN1_STRING_cmp(const ASN1_STRING *a, const ASN1_STRING *b);
  /*
   * Since this is used to store all sorts of things, via macros, for now,
   * make its data void *
   */
int ASN1_STRING_set(ASN1_STRING *str, const void *data, int len);
void ASN1_STRING_set0(ASN1_STRING *str, void *data, int len);
int ASN1_STRING_length(const ASN1_STRING *x);
# ifndef OPENSSL_NO_DEPRECATED_3_0
OSSL_DEPRECATEDIN_3_0 void ASN1_STRING_length_set(ASN1_STRING *x, int n);
# endif
int ASN1_STRING_type(const ASN1_STRING *x);
# ifndef OPENSSL_NO_DEPRECATED_1_1_0
OSSL_DEPRECATEDIN_1_1_0 unsigned char *ASN1_STRING_data(ASN1_STRING *x);
# endif
const unsigned char *ASN1_STRING_get0_data(const ASN1_STRING *x);

DECLARE_ASN1_FUNCTIONS(ASN1_BIT_STRING)
int ASN1_BIT_STRING_set(ASN1_BIT_STRING *a, unsigned char *d, int length);
int ASN1_BIT_STRING_set_bit(ASN1_BIT_STRING *a, int n, int value);
int ASN1_BIT_STRING_get_bit(const ASN1_BIT_STRING *a, int n);
int ASN1_BIT_STRING_check(const ASN1_BIT_STRING *a,
                          const unsigned char *flags, int flags_len);

int ASN1_BIT_STRING_name_print(BIO *out, ASN1_BIT_STRING *bs,
                               BIT_STRING_BITNAME *tbl, int indent);
int ASN1_BIT_STRING_num_asc(const char *name, BIT_STRING_BITNAME *tbl);
int ASN1_BIT_STRING_set_asc(ASN1_BIT_STRING *bs, const char *name, int value,
                            BIT_STRING_BITNAME *tbl);

SKM_DEFINE_STACK_OF_INTERNAL(ASN1_INTEGER, ASN1_INTEGER, ASN1_INTEGER)
#define sk_ASN1_INTEGER_num(sk) OPENSSL_sk_num(ossl_check_const_ASN1_INTEGER_sk_type(sk))
#define sk_ASN1_INTEGER_value(sk, idx) ((ASN1_INTEGER *)OPENSSL_sk_value(ossl_check_const_ASN1_INTEGER_sk_type(sk), (idx)))
#define sk_ASN1_INTEGER_new(cmp) ((STACK_OF(ASN1_INTEGER) *)OPENSSL_sk_new(ossl_check_ASN1_INTEGER_compfunc_type(cmp)))
#define sk_ASN1_INTEGER_new_null() ((STACK_OF(ASN1_INTEGER) *)OPENSSL_sk_new_null())
#define sk_ASN1_INTEGER_new_reserve(cmp, n) ((STACK_OF(ASN1_INTEGER) *)OPENSSL_sk_new_reserve(ossl_check_ASN1_INTEGER_compfunc_type(cmp), (n)))
#define sk_ASN1_INTEGER_reserve(sk, n) OPENSSL_sk_reserve(ossl_check_ASN1_INTEGER_sk_type(sk), (n))
#define sk_ASN1_INTEGER_free(sk) OPENSSL_sk_free(ossl_check_ASN1_INTEGER_sk_type(sk))
#define sk_ASN1_INTEGER_zero(sk) OPENSSL_sk_zero(ossl_check_ASN1_INTEGER_sk_type(sk))
#define sk_ASN1_INTEGER_delete(sk, i) ((ASN1_INTEGER *)OPENSSL_sk_delete(ossl_check_ASN1_INTEGER_sk_type(sk), (i)))
#define sk_ASN1_INTEGER_delete_ptr(sk, ptr) ((ASN1_INTEGER *)OPENSSL_sk_delete_ptr(ossl_check_ASN1_INTEGER_sk_type(sk), ossl_check_ASN1_INTEGER_type(ptr)))
#define sk_ASN1_INTEGER_push(sk, ptr) OPENSSL_sk_push(ossl_check_ASN1_INTEGER_sk_type(sk), ossl_check_ASN1_INTEGER_type(ptr))
#define sk_ASN1_INTEGER_unshift(sk, ptr) OPENSSL_sk_unshift(ossl_check_ASN1_INTEGER_sk_type(sk), ossl_check_ASN1_INTEGER_type(ptr))
#define sk_ASN1_INTEGER_pop(sk) ((ASN1_INTEGER *)OPENSSL_sk_pop(ossl_check_ASN1_INTEGER_sk_type(sk)))
#define sk_ASN1_INTEGER_shift(sk) ((ASN1_INTEGER *)OPENSSL_sk_shift(ossl_check_ASN1_INTEGER_sk_type(sk)))
#define sk_ASN1_INTEGER_pop_free(sk, freefunc) OPENSSL_sk_pop_free(ossl_check_ASN1_INTEGER_sk_type(sk),ossl_check_ASN1_INTEGER_freefunc_type(freefunc))
#define sk_ASN1_INTEGER_insert(sk, ptr, idx) OPENSSL_sk_insert(ossl_check_ASN1_INTEGER_sk_type(sk), ossl_check_ASN1_INTEGER_type(ptr), (idx))
#define sk_ASN1_INTEGER_set(sk, idx, ptr) ((ASN1_INTEGER *)OPENSSL_sk_set(ossl_check_ASN1_INTEGER_sk_type(sk), (idx), ossl_check_ASN1_INTEGER_type(ptr)))
#define sk_ASN1_INTEGER_find(sk, ptr) OPENSSL_sk_find(ossl_check_ASN1_INTEGER_sk_type(sk), ossl_check_ASN1_INTEGER_type(ptr))
#define sk_ASN1_INTEGER_find_ex(sk, ptr) OPENSSL_sk_find_ex(ossl_check_ASN1_INTEGER_sk_type(sk), ossl_check_ASN1_INTEGER_type(ptr))
#define sk_ASN1_INTEGER_find_all(sk, ptr, pnum) OPENSSL_sk_find_all(ossl_check_ASN1_INTEGER_sk_type(sk), ossl_check_ASN1_INTEGER_type(ptr), pnum)
#define sk_ASN1_INTEGER_sort(sk) OPENSSL_sk_sort(ossl_check_ASN1_INTEGER_sk_type(sk))
#define sk_ASN1_INTEGER_is_sorted(sk) OPENSSL_sk_is_sorted(ossl_check_const_ASN1_INTEGER_sk_type(sk))
#define sk_ASN1_INTEGER_dup(sk) ((STACK_OF(ASN1_INTEGER) *)OPENSSL_sk_dup(ossl_check_const_ASN1_INTEGER_sk_type(sk)))
#define sk_ASN1_INTEGER_deep_copy(sk, copyfunc, freefunc) ((STACK_OF(ASN1_INTEGER) *)OPENSSL_sk_deep_copy(ossl_check_const_ASN1_INTEGER_sk_type(sk), ossl_check_ASN1_INTEGER_copyfunc_type(copyfunc), ossl_check_ASN1_INTEGER_freefunc_type(freefunc)))
#define sk_ASN1_INTEGER_set_cmp_func(sk, cmp) ((sk_ASN1_INTEGER_compfunc)OPENSSL_sk_set_cmp_func(ossl_check_ASN1_INTEGER_sk_type(sk), ossl_check_ASN1_INTEGER_compfunc_type(cmp)))



DECLARE_ASN1_FUNCTIONS(ASN1_INTEGER)
ASN1_INTEGER *d2i_ASN1_UINTEGER(ASN1_INTEGER **a, const unsigned char **pp,
                                long length);
DECLARE_ASN1_DUP_FUNCTION(ASN1_INTEGER)
int ASN1_INTEGER_cmp(const ASN1_INTEGER *x, const ASN1_INTEGER *y);

DECLARE_ASN1_FUNCTIONS(ASN1_ENUMERATED)

int ASN1_UTCTIME_check(const ASN1_UTCTIME *a);
ASN1_UTCTIME *ASN1_UTCTIME_set(ASN1_UTCTIME *s, time_t t);
ASN1_UTCTIME *ASN1_UTCTIME_adj(ASN1_UTCTIME *s, time_t t,
                               int offset_day, long offset_sec);
int ASN1_UTCTIME_set_string(ASN1_UTCTIME *s, const char *str);
int ASN1_UTCTIME_cmp_time_t(const ASN1_UTCTIME *s, time_t t);

int ASN1_GENERALIZEDTIME_check(const ASN1_GENERALIZEDTIME *a);
ASN1_GENERALIZEDTIME *ASN1_GENERALIZEDTIME_set(ASN1_GENERALIZEDTIME *s,
                                               time_t t);
ASN1_GENERALIZEDTIME *ASN1_GENERALIZEDTIME_adj(ASN1_GENERALIZEDTIME *s,
                                               time_t t, int offset_day,
                                               long offset_sec);
int ASN1_GENERALIZEDTIME_set_string(ASN1_GENERALIZEDTIME *s, const char *str);

int ASN1_TIME_diff(int *pday, int *psec,
                   const ASN1_TIME *from, const ASN1_TIME *to);

DECLARE_ASN1_FUNCTIONS(ASN1_OCTET_STRING)
DECLARE_ASN1_DUP_FUNCTION(ASN1_OCTET_STRING)
int ASN1_OCTET_STRING_cmp(const ASN1_OCTET_STRING *a,
                          const ASN1_OCTET_STRING *b);
int ASN1_OCTET_STRING_set(ASN1_OCTET_STRING *str, const unsigned char *data,
                          int len);

SKM_DEFINE_STACK_OF_INTERNAL(ASN1_UTF8STRING, ASN1_UTF8STRING, ASN1_UTF8STRING)
#define sk_ASN1_UTF8STRING_num(sk) OPENSSL_sk_num(ossl_check_const_ASN1_UTF8STRING_sk_type(sk))
#define sk_ASN1_UTF8STRING_value(sk, idx) ((ASN1_UTF8STRING *)OPENSSL_sk_value(ossl_check_const_ASN1_UTF8STRING_sk_type(sk), (idx)))
#define sk_ASN1_UTF8STRING_new(cmp) ((STACK_OF(ASN1_UTF8STRING) *)OPENSSL_sk_new(ossl_check_ASN1_UTF8STRING_compfunc_type(cmp)))
#define sk_ASN1_UTF8STRING_new_null() ((STACK_OF(ASN1_UTF8STRING) *)OPENSSL_sk_new_null())
#define sk_ASN1_UTF8STRING_new_reserve(cmp, n) ((STACK_OF(ASN1_UTF8STRING) *)OPENSSL_sk_new_reserve(ossl_check_ASN1_UTF8STRING_compfunc_type(cmp), (n)))
#define sk_ASN1_UTF8STRING_reserve(sk, n) OPENSSL_sk_reserve(ossl_check_ASN1_UTF8STRING_sk_type(sk), (n))
#define sk_ASN1_UTF8STRING_free(sk) OPENSSL_sk_free(ossl_check_ASN1_UTF8STRING_sk_type(sk))
#define sk_ASN1_UTF8STRING_zero(sk) OPENSSL_sk_zero(ossl_check_ASN1_UTF8STRING_sk_type(sk))
#define sk_ASN1_UTF8STRING_delete(sk, i) ((ASN1_UTF8STRING *)OPENSSL_sk_delete(ossl_check_ASN1_UTF8STRING_sk_type(sk), (i)))
#define sk_ASN1_UTF8STRING_delete_ptr(sk, ptr) ((ASN1_UTF8STRING *)OPENSSL_sk_delete_ptr(ossl_check_ASN1_UTF8STRING_sk_type(sk), ossl_check_ASN1_UTF8STRING_type(ptr)))
#define sk_ASN1_UTF8STRING_push(sk, ptr) OPENSSL_sk_push(ossl_check_ASN1_UTF8STRING_sk_type(sk), ossl_check_ASN1_UTF8STRING_type(ptr))
#define sk_ASN1_UTF8STRING_unshift(sk, ptr) OPENSSL_sk_unshift(ossl_check_ASN1_UTF8STRING_sk_type(sk), ossl_check_ASN1_UTF8STRING_type(ptr))
#define sk_ASN1_UTF8STRING_pop(sk) ((ASN1_UTF8STRING *)OPENSSL_sk_pop(ossl_check_ASN1_UTF8STRING_sk_type(sk)))
#define sk_ASN1_UTF8STRING_shift(sk) ((ASN1_UTF8STRING *)OPENSSL_sk_shift(ossl_check_ASN1_UTF8STRING_sk_type(sk)))
#define sk_ASN1_UTF8STRING_pop_free(sk, freefunc) OPENSSL_sk_pop_free(ossl_check_ASN1_UTF8STRING_sk_type(sk),ossl_check_ASN1_UTF8STRING_freefunc_type(freefunc))
#define sk_ASN1_UTF8STRING_insert(sk, ptr, idx) OPENSSL_sk_insert(ossl_check_ASN1_UTF8STRING_sk_type(sk), ossl_check_ASN1_UTF8STRING_type(ptr), (idx))
#define sk_ASN1_UTF8STRING_set(sk, idx, ptr) ((ASN1_UTF8STRING *)OPENSSL_sk_set(ossl_check_ASN1_UTF8STRING_sk_type(sk), (idx), ossl_check_ASN1_UTF8STRING_type(ptr)))
#define sk_ASN1_UTF8STRING_find(sk, ptr) OPENSSL_sk_find(ossl_check_ASN1_UTF8STRING_sk_type(sk), ossl_check_ASN1_UTF8STRING_type(ptr))
#define sk_ASN1_UTF8STRING_find_ex(sk, ptr) OPENSSL_sk_find_ex(ossl_check_ASN1_UTF8STRING_sk_type(sk), ossl_check_ASN1_UTF8STRING_type(ptr))
#define sk_ASN1_UTF8STRING_find_all(sk, ptr, pnum) OPENSSL_sk_find_all(ossl_check_ASN1_UTF8STRING_sk_type(sk), ossl_check_ASN1_UTF8STRING_type(ptr), pnum)
#define sk_ASN1_UTF8STRING_sort(sk) OPENSSL_sk_sort(ossl_check_ASN1_UTF8STRING_sk_type(sk))
#define sk_ASN1_UTF8STRING_is_sorted(sk) OPENSSL_sk_is_sorted(ossl_check_const_ASN1_UTF8STRING_sk_type(sk))
#define sk_ASN1_UTF8STRING_dup(sk) ((STACK_OF(ASN1_UTF8STRING) *)OPENSSL_sk_dup(ossl_check_const_ASN1_UTF8STRING_sk_type(sk)))
#define sk_ASN1_UTF8STRING_deep_copy(sk, copyfunc, freefunc) ((STACK_OF(ASN1_UTF8STRING) *)OPENSSL_sk_deep_copy(ossl_check_const_ASN1_UTF8STRING_sk_type(sk), ossl_check_ASN1_UTF8STRING_copyfunc_type(copyfunc), ossl_check_ASN1_UTF8STRING_freefunc_type(freefunc)))
#define sk_ASN1_UTF8STRING_set_cmp_func(sk, cmp) ((sk_ASN1_UTF8STRING_compfunc)OPENSSL_sk_set_cmp_func(ossl_check_ASN1_UTF8STRING_sk_type(sk), ossl_check_ASN1_UTF8STRING_compfunc_type(cmp)))


DECLARE_ASN1_FUNCTIONS(ASN1_VISIBLESTRING)
DECLARE_ASN1_FUNCTIONS(ASN1_UNIVERSALSTRING)
DECLARE_ASN1_FUNCTIONS(ASN1_UTF8STRING)
DECLARE_ASN1_FUNCTIONS(ASN1_NULL)
DECLARE_ASN1_FUNCTIONS(ASN1_BMPSTRING)

int UTF8_getc(const unsigned char *str, int len, unsigned long *val);
int UTF8_putc(unsigned char *str, int len, unsigned long value);

SKM_DEFINE_STACK_OF_INTERNAL(ASN1_GENERALSTRING, ASN1_GENERALSTRING, ASN1_GENERALSTRING)
#define sk_ASN1_GENERALSTRING_num(sk) OPENSSL_sk_num(ossl_check_const_ASN1_GENERALSTRING_sk_type(sk))
#define sk_ASN1_GENERALSTRING_value(sk, idx) ((ASN1_GENERALSTRING *)OPENSSL_sk_value(ossl_check_const_ASN1_GENERALSTRING_sk_type(sk), (idx)))
#define sk_ASN1_GENERALSTRING_new(cmp) ((STACK_OF(ASN1_GENERALSTRING) *)OPENSSL_sk_new(ossl_check_ASN1_GENERALSTRING_compfunc_type(cmp)))
#define sk_ASN1_GENERALSTRING_new_null() ((STACK_OF(ASN1_GENERALSTRING) *)OPENSSL_sk_new_null())
#define sk_ASN1_GENERALSTRING_new_reserve(cmp, n) ((STACK_OF(ASN1_GENERALSTRING) *)OPENSSL_sk_new_reserve(ossl_check_ASN1_GENERALSTRING_compfunc_type(cmp), (n)))
#define sk_ASN1_GENERALSTRING_reserve(sk, n) OPENSSL_sk_reserve(ossl_check_ASN1_GENERALSTRING_sk_type(sk), (n))
#define sk_ASN1_GENERALSTRING_free(sk) OPENSSL_sk_free(ossl_check_ASN1_GENERALSTRING_sk_type(sk))
#define sk_ASN1_GENERALSTRING_zero(sk) OPENSSL_sk_zero(ossl_check_ASN1_GENERALSTRING_sk_type(sk))
#define sk_ASN1_GENERALSTRING_delete(sk, i) ((ASN1_GENERALSTRING *)OPENSSL_sk_delete(ossl_check_ASN1_GENERALSTRING_sk_type(sk), (i)))
#define sk_ASN1_GENERALSTRING_delete_ptr(sk, ptr) ((ASN1_GENERALSTRING *)OPENSSL_sk_delete_ptr(ossl_check_ASN1_GENERALSTRING_sk_type(sk), ossl_check_ASN1_GENERALSTRING_type(ptr)))
#define sk_ASN1_GENERALSTRING_push(sk, ptr) OPENSSL_sk_push(ossl_check_ASN1_GENERALSTRING_sk_type(sk), ossl_check_ASN1_GENERALSTRING_type(ptr))
#define sk_ASN1_GENERALSTRING_unshift(sk, ptr) OPENSSL_sk_unshift(ossl_check_ASN1_GENERALSTRING_sk_type(sk), ossl_check_ASN1_GENERALSTRING_type(ptr))
#define sk_ASN1_GENERALSTRING_pop(sk) ((ASN1_GENERALSTRING *)OPENSSL_sk_pop(ossl_check_ASN1_GENERALSTRING_sk_type(sk)))
#define sk_ASN1_GENERALSTRING_shift(sk) ((ASN1_GENERALSTRING *)OPENSSL_sk_shift(ossl_check_ASN1_GENERALSTRING_sk_type(sk)))
#define sk_ASN1_GENERALSTRING_pop_free(sk, freefunc) OPENSSL_sk_pop_free(ossl_check_ASN1_GENERALSTRING_sk_type(sk),ossl_check_ASN1_GENERALSTRING_freefunc_type(freefunc))
#define sk_ASN1_GENERALSTRING_insert(sk, ptr, idx) OPENSSL_sk_insert(ossl_check_ASN1_GENERALSTRING_sk_type(sk), ossl_check_ASN1_GENERALSTRING_type(ptr), (idx))
#define sk_ASN1_GENERALSTRING_set(sk, idx, ptr) ((ASN1_GENERALSTRING *)OPENSSL_sk_set(ossl_check_ASN1_GENERALSTRING_sk_type(sk), (idx), ossl_check_ASN1_GENERALSTRING_type(ptr)))
#define sk_ASN1_GENERALSTRING_find(sk, ptr) OPENSSL_sk_find(ossl_check_ASN1_GENERALSTRING_sk_type(sk), ossl_check_ASN1_GENERALSTRING_type(ptr))
#define sk_ASN1_GENERALSTRING_find_ex(sk, ptr) OPENSSL_sk_find_ex(ossl_check_ASN1_GENERALSTRING_sk_type(sk), ossl_check_ASN1_GENERALSTRING_type(ptr))
#define sk_ASN1_GENERALSTRING_find_all(sk, ptr, pnum) OPENSSL_sk_find_all(ossl_check_ASN1_GENERALSTRING_sk_type(sk), ossl_check_ASN1_GENERALSTRING_type(ptr), pnum)
#define sk_ASN1_GENERALSTRING_sort(sk) OPENSSL_sk_sort(ossl_check_ASN1_GENERALSTRING_sk_type(sk))
#define sk_ASN1_GENERALSTRING_is_sorted(sk) OPENSSL_sk_is_sorted(ossl_check_const_ASN1_GENERALSTRING_sk_type(sk))
#define sk_ASN1_GENERALSTRING_dup(sk) ((STACK_OF(ASN1_GENERALSTRING) *)OPENSSL_sk_dup(ossl_check_const_ASN1_GENERALSTRING_sk_type(sk)))
#define sk_ASN1_GENERALSTRING_deep_copy(sk, copyfunc, freefunc) ((STACK_OF(ASN1_GENERALSTRING) *)OPENSSL_sk_deep_copy(ossl_check_const_ASN1_GENERALSTRING_sk_type(sk), ossl_check_ASN1_GENERALSTRING_copyfunc_type(copyfunc), ossl_check_ASN1_GENERALSTRING_freefunc_type(freefunc)))
#define sk_ASN1_GENERALSTRING_set_cmp_func(sk, cmp) ((sk_ASN1_GENERALSTRING_compfunc)OPENSSL_sk_set_cmp_func(ossl_check_ASN1_GENERALSTRING_sk_type(sk), ossl_check_ASN1_GENERALSTRING_compfunc_type(cmp)))


DECLARE_ASN1_FUNCTIONS_name(ASN1_STRING, ASN1_PRINTABLE)

DECLARE_ASN1_FUNCTIONS_name(ASN1_STRING, DIRECTORYSTRING)
DECLARE_ASN1_FUNCTIONS_name(ASN1_STRING, DISPLAYTEXT)
DECLARE_ASN1_FUNCTIONS(ASN1_PRINTABLESTRING)
DECLARE_ASN1_FUNCTIONS(ASN1_T61STRING)
DECLARE_ASN1_FUNCTIONS(ASN1_IA5STRING)
DECLARE_ASN1_FUNCTIONS(ASN1_GENERALSTRING)
DECLARE_ASN1_FUNCTIONS(ASN1_UTCTIME)
DECLARE_ASN1_FUNCTIONS(ASN1_GENERALIZEDTIME)
DECLARE_ASN1_FUNCTIONS(ASN1_TIME)

DECLARE_ASN1_DUP_FUNCTION(ASN1_TIME)
DECLARE_ASN1_DUP_FUNCTION(ASN1_UTCTIME)
DECLARE_ASN1_DUP_FUNCTION(ASN1_GENERALIZEDTIME)

DECLARE_ASN1_ITEM(ASN1_OCTET_STRING_NDEF)

ASN1_TIME *ASN1_TIME_set(ASN1_TIME *s, time_t t);
ASN1_TIME *ASN1_TIME_adj(ASN1_TIME *s, time_t t,
                         int offset_day, long offset_sec);
int ASN1_TIME_check(const ASN1_TIME *t);
ASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(const ASN1_TIME *t,
                                                   ASN1_GENERALIZEDTIME **out);
int ASN1_TIME_set_string(ASN1_TIME *s, const char *str);
int ASN1_TIME_set_string_X509(ASN1_TIME *s, const char *str);
int ASN1_TIME_to_tm(const ASN1_TIME *s, struct tm *tm);
int ASN1_TIME_normalize(ASN1_TIME *s);
int ASN1_TIME_cmp_time_t(const ASN1_TIME *s, time_t t);
int ASN1_TIME_compare(const ASN1_TIME *a, const ASN1_TIME *b);

int i2a_ASN1_INTEGER(BIO *bp, const ASN1_INTEGER *a);
int a2i_ASN1_INTEGER(BIO *bp, ASN1_INTEGER *bs, char *buf, int size);
int i2a_ASN1_ENUMERATED(BIO *bp, const ASN1_ENUMERATED *a);
int a2i_ASN1_ENUMERATED(BIO *bp, ASN1_ENUMERATED *bs, char *buf, int size);
int i2a_ASN1_OBJECT(BIO *bp, const ASN1_OBJECT *a);
int a2i_ASN1_STRING(BIO *bp, ASN1_STRING *bs, char *buf, int size);
int i2a_ASN1_STRING(BIO *bp, const ASN1_STRING *a, int type);
int i2t_ASN1_OBJECT(char *buf, int buf_len, const ASN1_OBJECT *a);

int a2d_ASN1_OBJECT(unsigned char *out, int olen, const char *buf, int num);
ASN1_OBJECT *ASN1_OBJECT_create(int nid, unsigned char *data, int len,
                                const char *sn, const char *ln);

int ASN1_INTEGER_get_int64(int64_t *pr, const ASN1_INTEGER *a);
int ASN1_INTEGER_set_int64(ASN1_INTEGER *a, int64_t r);
int ASN1_INTEGER_get_uint64(uint64_t *pr, const ASN1_INTEGER *a);
int ASN1_INTEGER_set_uint64(ASN1_INTEGER *a, uint64_t r);

int ASN1_INTEGER_set(ASN1_INTEGER *a, long v);
long ASN1_INTEGER_get(const ASN1_INTEGER *a);
ASN1_INTEGER *BN_to_ASN1_INTEGER(const BIGNUM *bn, ASN1_INTEGER *ai);
BIGNUM *ASN1_INTEGER_to_BN(const ASN1_INTEGER *ai, BIGNUM *bn);

int ASN1_ENUMERATED_get_int64(int64_t *pr, const ASN1_ENUMERATED *a);
int ASN1_ENUMERATED_set_int64(ASN1_ENUMERATED *a, int64_t r);


int ASN1_ENUMERATED_set(ASN1_ENUMERATED *a, long v);
long ASN1_ENUMERATED_get(const ASN1_ENUMERATED *a);
ASN1_ENUMERATED *BN_to_ASN1_ENUMERATED(const BIGNUM *bn, ASN1_ENUMERATED *ai);
BIGNUM *ASN1_ENUMERATED_to_BN(const ASN1_ENUMERATED *ai, BIGNUM *bn);

/* General */
/* given a string, return the correct type, max is the maximum length */
int ASN1_PRINTABLE_type(const unsigned char *s, int max);

unsigned long ASN1_tag2bit(int tag);

/* SPECIALS */
int ASN1_get_object(const unsigned char **pp, long *plength, int *ptag,
                    int *pclass, long omax);
int ASN1_check_infinite_end(unsigned char **p, long len);
int ASN1_const_check_infinite_end(const unsigned char **p, long len);
void ASN1_put_object(unsigned char **pp, int constructed, int length,
                     int tag, int xclass);
int ASN1_put_eoc(unsigned char **pp);
int ASN1_object_size(int constructed, int length, int tag);

/* Used to implement other functions */
void *ASN1_dup(i2d_of_void *i2d, d2i_of_void *d2i, const void *x);

# define ASN1_dup_of(type,i2d,d2i,x) \
    ((type*)ASN1_dup(CHECKED_I2D_OF(type, i2d), \
                     CHECKED_D2I_OF(type, d2i), \
                     CHECKED_PTR_OF(const type, x)))

void *ASN1_item_dup(const ASN1_ITEM *it, const void *x);
int ASN1_item_sign_ex(const ASN1_ITEM *it, X509_ALGOR *algor1,
                      X509_ALGOR *algor2, ASN1_BIT_STRING *signature,
                      const void *data, const ASN1_OCTET_STRING *id,
                      EVP_PKEY *pkey, const EVP_MD *md, OSSL_LIB_CTX *libctx,
                      const char *propq);
int ASN1_item_verify_ex(const ASN1_ITEM *it, const X509_ALGOR *alg,
                        const ASN1_BIT_STRING *signature, const void *data,
                        const ASN1_OCTET_STRING *id, EVP_PKEY *pkey,
                        OSSL_LIB_CTX *libctx, const char *propq);

/* ASN1 alloc/free macros for when a type is only used internally */

# define M_ASN1_new_of(type) (type *)ASN1_item_new(ASN1_ITEM_rptr(type))
# define M_ASN1_free_of(x, type) \
                ASN1_item_free(CHECKED_PTR_OF(type, x), ASN1_ITEM_rptr(type))

# ifndef OPENSSL_NO_STDIO
void *ASN1_d2i_fp(void *(*xnew) (void), d2i_of_void *d2i, FILE *in, void **x);

#  define ASN1_d2i_fp_of(type,xnew,d2i,in,x) \
    ((type*)ASN1_d2i_fp(CHECKED_NEW_OF(type, xnew), \
                        CHECKED_D2I_OF(type, d2i), \
                        in, \
                        CHECKED_PPTR_OF(type, x)))

void *ASN1_item_d2i_fp_ex(const ASN1_ITEM *it, FILE *in, void *x,
                          OSSL_LIB_CTX *libctx, const char *propq);
void *ASN1_item_d2i_fp(const ASN1_ITEM *it, FILE *in, void *x);
int ASN1_i2d_fp(i2d_of_void *i2d, FILE *out, const void *x);

#  define ASN1_i2d_fp_of(type,i2d,out,x) \
    (ASN1_i2d_fp(CHECKED_I2D_OF(type, i2d), \
                 out, \
                 CHECKED_PTR_OF(const type, x)))

int ASN1_item_i2d_fp(const ASN1_ITEM *it, FILE *out, const void *x);
int ASN1_STRING_print_ex_fp(FILE *fp, const ASN1_STRING *str, unsigned long flags);
# endif

int ASN1_STRING_to_UTF8(unsigned char **out, const ASN1_STRING *in);

void *ASN1_d2i_bio(void *(*xnew) (void), d2i_of_void *d2i, BIO *in, void **x);

#  define ASN1_d2i_bio_of(type,xnew,d2i,in,x) \
    ((type*)ASN1_d2i_bio( CHECKED_NEW_OF(type, xnew), \
                          CHECKED_D2I_OF(type, d2i), \
                          in, \
                          CHECKED_PPTR_OF(type, x)))

void *ASN1_item_d2i_bio_ex(const ASN1_ITEM *it, BIO *in, void *pval,
                           OSSL_LIB_CTX *libctx, const char *propq);
void *ASN1_item_d2i_bio(const ASN1_ITEM *it, BIO *in, void *pval);
int ASN1_i2d_bio(i2d_of_void *i2d, BIO *out, const void *x);

#  define ASN1_i2d_bio_of(type,i2d,out,x) \
    (ASN1_i2d_bio(CHECKED_I2D_OF(type, i2d), \
                  out, \
                  CHECKED_PTR_OF(const type, x)))

int ASN1_item_i2d_bio(const ASN1_ITEM *it, BIO *out, const void *x);
BIO *ASN1_item_i2d_mem_bio(const ASN1_ITEM *it, const ASN1_VALUE *val);
int ASN1_UTCTIME_print(BIO *fp, const ASN1_UTCTIME *a);
int ASN1_GENERALIZEDTIME_print(BIO *fp, const ASN1_GENERALIZEDTIME *a);
int ASN1_TIME_print(BIO *bp, const ASN1_TIME *tm);
int ASN1_TIME_print_ex(BIO *bp, const ASN1_TIME *tm, unsigned long flags);
int ASN1_STRING_print(BIO *bp, const ASN1_STRING *v);
int ASN1_STRING_print_ex(BIO *out, const ASN1_STRING *str, unsigned long flags);
int ASN1_buf_print(BIO *bp, const unsigned char *buf, size_t buflen, int off);
int ASN1_bn_print(BIO *bp, const char *number, const BIGNUM *num,
                  unsigned char *buf, int off);
int ASN1_parse(BIO *bp, const unsigned char *pp, long len, int indent);
int ASN1_parse_dump(BIO *bp, const unsigned char *pp, long len, int indent,
                    int dump);
const char *ASN1_tag2str(int tag);

/* Used to load and write Netscape format cert */

int ASN1_UNIVERSALSTRING_to_string(ASN1_UNIVERSALSTRING *s);

int ASN1_TYPE_set_octetstring(ASN1_TYPE *a, unsigned char *data, int len);
int ASN1_TYPE_get_octetstring(const ASN1_TYPE *a, unsigned char *data, int max_len);
int ASN1_TYPE_set_int_octetstring(ASN1_TYPE *a, long num,
                                  unsigned char *data, int len);
int ASN1_TYPE_get_int_octetstring(const ASN1_TYPE *a, long *num,
                                  unsigned char *data, int max_len);

void *ASN1_item_unpack(const ASN1_STRING *oct, const ASN1_ITEM *it);

ASN1_STRING *ASN1_item_pack(void *obj, const ASN1_ITEM *it,
                            ASN1_OCTET_STRING **oct);

void ASN1_STRING_set_default_mask(unsigned long mask);
int ASN1_STRING_set_default_mask_asc(const char *p);
unsigned long ASN1_STRING_get_default_mask(void);
int ASN1_mbstring_copy(ASN1_STRING **out, const unsigned char *in, int len,
                       int inform, unsigned long mask);
int ASN1_mbstring_ncopy(ASN1_STRING **out, const unsigned char *in, int len,
                        int inform, unsigned long mask,
                        long minsize, long maxsize);

ASN1_STRING *ASN1_STRING_set_by_NID(ASN1_STRING **out,
                                    const unsigned char *in, int inlen,
                                    int inform, int nid);
ASN1_STRING_TABLE *ASN1_STRING_TABLE_get(int nid);
int ASN1_STRING_TABLE_add(int, long, long, unsigned long, unsigned long);
void ASN1_STRING_TABLE_cleanup(void);

/* ASN1 template functions */

/* Old API compatible functions */
ASN1_VALUE *ASN1_item_new(const ASN1_ITEM *it);
ASN1_VALUE *ASN1_item_new_ex(const ASN1_ITEM *it, OSSL_LIB_CTX *libctx,
                             const char *propq);
void ASN1_item_free(ASN1_VALUE *val, const ASN1_ITEM *it);
ASN1_VALUE *ASN1_item_d2i_ex(ASN1_VALUE **val, const unsigned char **in,
                             long len, const ASN1_ITEM *it,
                             OSSL_LIB_CTX *libctx, const char *propq);
ASN1_VALUE *ASN1_item_d2i(ASN1_VALUE **val, const unsigned char **in,
                          long len, const ASN1_ITEM *it);
int ASN1_item_i2d(const ASN1_VALUE *val, unsigned char **out, const ASN1_ITEM *it);
int ASN1_item_ndef_i2d(const ASN1_VALUE *val, unsigned char **out,
                       const ASN1_ITEM *it);

void ASN1_add_oid_module(void);
void ASN1_add_stable_module(void);

ASN1_TYPE *ASN1_generate_nconf(const char *str, CONF *nconf);
ASN1_TYPE *ASN1_generate_v3(const char *str, X509V3_CTX *cnf);
int ASN1_str2mask(const char *str, unsigned long *pmask);

/* ASN1 Print flags */

/* Indicate missing OPTIONAL fields */
# define ASN1_PCTX_FLAGS_SHOW_ABSENT             0x001
/* Mark start and end of SEQUENCE */
# define ASN1_PCTX_FLAGS_SHOW_SEQUENCE           0x002
/* Mark start and end of SEQUENCE/SET OF */
# define ASN1_PCTX_FLAGS_SHOW_SSOF               0x004
/* Show the ASN1 type of primitives */
# define ASN1_PCTX_FLAGS_SHOW_TYPE               0x008
/* Don't show ASN1 type of ANY */
# define ASN1_PCTX_FLAGS_NO_ANY_TYPE             0x010
/* Don't show ASN1 type of MSTRINGs */
# define ASN1_PCTX_FLAGS_NO_MSTRING_TYPE         0x020
/* Don't show field names in SEQUENCE */
# define ASN1_PCTX_FLAGS_NO_FIELD_NAME           0x040
/* Show structure names of each SEQUENCE field */
# define ASN1_PCTX_FLAGS_SHOW_FIELD_STRUCT_NAME  0x080
/* Don't show structure name even at top level */
# define ASN1_PCTX_FLAGS_NO_STRUCT_NAME          0x100

int ASN1_item_print(BIO *out, const ASN1_VALUE *ifld, int indent,
                    const ASN1_ITEM *it, const ASN1_PCTX *pctx);
ASN1_PCTX *ASN1_PCTX_new(void);
void ASN1_PCTX_free(ASN1_PCTX *p);
unsigned long ASN1_PCTX_get_flags(const ASN1_PCTX *p);
void ASN1_PCTX_set_flags(ASN1_PCTX *p, unsigned long flags);
unsigned long ASN1_PCTX_get_nm_flags(const ASN1_PCTX *p);
void ASN1_PCTX_set_nm_flags(ASN1_PCTX *p, unsigned long flags);
unsigned long ASN1_PCTX_get_cert_flags(const ASN1_PCTX *p);
void ASN1_PCTX_set_cert_flags(ASN1_PCTX *p, unsigned long flags);
unsigned long ASN1_PCTX_get_oid_flags(const ASN1_PCTX *p);
void ASN1_PCTX_set_oid_flags(ASN1_PCTX *p, unsigned long flags);
unsigned long ASN1_PCTX_get_str_flags(const ASN1_PCTX *p);
void ASN1_PCTX_set_str_flags(ASN1_PCTX *p, unsigned long flags);

ASN1_SCTX *ASN1_SCTX_new(int (*scan_cb) (ASN1_SCTX *ctx));
void ASN1_SCTX_free(ASN1_SCTX *p);
const ASN1_ITEM *ASN1_SCTX_get_item(ASN1_SCTX *p);
const ASN1_TEMPLATE *ASN1_SCTX_get_template(ASN1_SCTX *p);
unsigned long ASN1_SCTX_get_flags(ASN1_SCTX *p);
void ASN1_SCTX_set_app_data(ASN1_SCTX *p, void *data);
void *ASN1_SCTX_get_app_data(ASN1_SCTX *p);

const BIO_METHOD *BIO_f_asn1(void);

/* cannot constify val because of CMS_stream() */
BIO *BIO_new_NDEF(BIO *out, ASN1_VALUE *val, const ASN1_ITEM *it);

int i2d_ASN1_bio_stream(BIO *out, ASN1_VALUE *val, BIO *in, int flags,
                        const ASN1_ITEM *it);
int PEM_write_bio_ASN1_stream(BIO *out, ASN1_VALUE *val, BIO *in, int flags,
                              const char *hdr, const ASN1_ITEM *it);
/* cannot constify val because of CMS_dataFinal() */
int SMIME_write_ASN1(BIO *bio, ASN1_VALUE *val, BIO *data, int flags,
                     int ctype_nid, int econt_nid,
                     STACK_OF(X509_ALGOR) *mdalgs, const ASN1_ITEM *it);
int SMIME_write_ASN1_ex(BIO *bio, ASN1_VALUE *val, BIO *data, int flags,
                        int ctype_nid, int econt_nid,
                        STACK_OF(X509_ALGOR) *mdalgs, const ASN1_ITEM *it,
                        OSSL_LIB_CTX *libctx, const char *propq);
ASN1_VALUE *SMIME_read_ASN1(BIO *bio, BIO **bcont, const ASN1_ITEM *it);
ASN1_VALUE *SMIME_read_ASN1_ex(BIO *bio, int flags, BIO **bcont,
                               const ASN1_ITEM *it, ASN1_VALUE **x,
                               OSSL_LIB_CTX *libctx, const char *propq);
int SMIME_crlf_copy(BIO *in, BIO *out, int flags);
int SMIME_text(BIO *in, BIO *out);

const ASN1_ITEM *ASN1_ITEM_lookup(const char *name);
const ASN1_ITEM *ASN1_ITEM_get(size_t i);

/* Legacy compatibility */
# define DECLARE_ASN1_FUNCTIONS_fname(type, itname, name) \
         DECLARE_ASN1_ALLOC_FUNCTIONS_name(type, name) \
         DECLARE_ASN1_ENCODE_FUNCTIONS(type, itname, name)
# define DECLARE_ASN1_FUNCTIONS_const(type) DECLARE_ASN1_FUNCTIONS(type)
# define DECLARE_ASN1_ENCODE_FUNCTIONS_const(type, name) \
         DECLARE_ASN1_ENCODE_FUNCTIONS(type, name)
# define I2D_OF_const(type) I2D_OF(type)
# define ASN1_dup_of_const(type,i2d,d2i,x) ASN1_dup_of(type,i2d,d2i,x)
# define ASN1_i2d_fp_of_const(type,i2d,out,x) ASN1_i2d_fp_of(type,i2d,out,x)
# define ASN1_i2d_bio_of_const(type,i2d,out,x) ASN1_i2d_bio_of(type,i2d,out,x)

# ifdef  __cplusplus
}
# endif
#endif
              node-23.7.0/deps/openssl/config/archs/linux-elf/asm/include/openssl/asn1t.h                         0000664 0000000 0000000 00000106141 14746647661 0026533 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        /*
 * WARNING: do not edit!
 * Generated by Makefile from include/openssl/asn1t.h.in
 *
 * Copyright 2000-2021 The OpenSSL Project Authors. All Rights Reserved.
 *
 * Licensed under the Apache License 2.0 (the "License").  You may not use
 * this file except in compliance with the License.  You can obtain a copy
 * in the file LICENSE in the source distribution or at
 * https://www.openssl.org/source/license.html
 */



#ifndef OPENSSL_ASN1T_H
# define OPENSSL_ASN1T_H
# pragma once

# include <openssl/macros.h>
# ifndef OPENSSL_NO_DEPRECATED_3_0
#  define HEADER_ASN1T_H
# endif

# include <stddef.h>
# include <openssl/e_os2.h>
# include <openssl/asn1.h>

# ifdef OPENSSL_BUILD_SHLIBCRYPTO
#  undef OPENSSL_EXTERN
#  define OPENSSL_EXTERN OPENSSL_EXPORT
# endif

/* ASN1 template defines, structures and functions */

#ifdef  __cplusplus
extern "C" {
#endif

/*-
 * These are the possible values for the itype field of the
 * ASN1_ITEM structure and determine how it is interpreted.
 *
 * For PRIMITIVE types the underlying type
 * determines the behaviour if items is NULL.
 *
 * Otherwise templates must contain a single
 * template and the type is treated in the
 * same way as the type specified in the template.
 *
 * For SEQUENCE types the templates field points
 * to the members, the size field is the
 * structure size.
 *
 * For CHOICE types the templates field points
 * to each possible member (typically a union)
 * and the 'size' field is the offset of the
 * selector.
 *
 * The 'funcs' field is used for application-specific
 * data and functions.
 *
 * The EXTERN type uses a new style d2i/i2d.
 * The new style should be used where possible
 * because it avoids things like the d2i IMPLICIT
 * hack.
 *
 * MSTRING is a multiple string type, it is used
 * for a CHOICE of character strings where the
 * actual strings all occupy an ASN1_STRING
 * structure. In this case the 'utype' field
 * has a special meaning, it is used as a mask
 * of acceptable types using the B_ASN1 constants.
 *
 * NDEF_SEQUENCE is the same as SEQUENCE except
 * that it will use indefinite length constructed
 * encoding if requested.
 *
 */

# define ASN1_ITYPE_PRIMITIVE            0x0
# define ASN1_ITYPE_SEQUENCE             0x1
# define ASN1_ITYPE_CHOICE               0x2
/* unused value                          0x3 */
# define ASN1_ITYPE_EXTERN               0x4
# define ASN1_ITYPE_MSTRING              0x5
# define ASN1_ITYPE_NDEF_SEQUENCE        0x6

/* Macro to obtain ASN1_ADB pointer from a type (only used internally) */
# define ASN1_ADB_ptr(iptr) ((const ASN1_ADB *)((iptr)()))

/* Macros for start and end of ASN1_ITEM definition */

# define ASN1_ITEM_start(itname) \
        const ASN1_ITEM * itname##_it(void) \
        { \
                static const ASN1_ITEM local_it = {

# define static_ASN1_ITEM_start(itname) \
        static ASN1_ITEM_start(itname)

# define ASN1_ITEM_end(itname) \
                }; \
        return &local_it; \
        }

/* Macros to aid ASN1 template writing */

# define ASN1_ITEM_TEMPLATE(tname) \
        static const ASN1_TEMPLATE tname##_item_tt

# define ASN1_ITEM_TEMPLATE_END(tname) \
        ;\
        ASN1_ITEM_start(tname) \
                ASN1_ITYPE_PRIMITIVE,\
                -1,\
                &tname##_item_tt,\
                0,\
                NULL,\
                0,\
                #tname \
        ASN1_ITEM_end(tname)
# define static_ASN1_ITEM_TEMPLATE_END(tname) \
        ;\
        static_ASN1_ITEM_start(tname) \
                ASN1_ITYPE_PRIMITIVE,\
                -1,\
                &tname##_item_tt,\
                0,\
                NULL,\
                0,\
                #tname \
        ASN1_ITEM_end(tname)

/* This is a ASN1 type which just embeds a template */

/*-
 * This pair helps declare a SEQUENCE. We can do:
 *
 *      ASN1_SEQUENCE(stname) = {
 *              ... SEQUENCE components ...
 *      } ASN1_SEQUENCE_END(stname)
 *
 *      This will produce an ASN1_ITEM called stname_it
 *      for a structure called stname.
 *
 *      If you want the same structure but a different
 *      name then use:
 *
 *      ASN1_SEQUENCE(itname) = {
 *              ... SEQUENCE components ...
 *      } ASN1_SEQUENCE_END_name(stname, itname)
 *
 *      This will create an item called itname_it using
 *      a structure called stname.
 */

# define ASN1_SEQUENCE(tname) \
        static const ASN1_TEMPLATE tname##_seq_tt[]

# define ASN1_SEQUENCE_END(stname) ASN1_SEQUENCE_END_name(stname, stname)

# define static_ASN1_SEQUENCE_END(stname) static_ASN1_SEQUENCE_END_name(stname, stname)

# define ASN1_SEQUENCE_END_name(stname, tname) \
        ;\
        ASN1_ITEM_start(tname) \
                ASN1_ITYPE_SEQUENCE,\
                V_ASN1_SEQUENCE,\
                tname##_seq_tt,\
                sizeof(tname##_seq_tt) / sizeof(ASN1_TEMPLATE),\
                NULL,\
                sizeof(stname),\
                #tname \
        ASN1_ITEM_end(tname)

# define static_ASN1_SEQUENCE_END_name(stname, tname) \
        ;\
        static_ASN1_ITEM_start(tname) \
                ASN1_ITYPE_SEQUENCE,\
                V_ASN1_SEQUENCE,\
                tname##_seq_tt,\
                sizeof(tname##_seq_tt) / sizeof(ASN1_TEMPLATE),\
                NULL,\
                sizeof(stname),\
                #stname \
        ASN1_ITEM_end(tname)

# define ASN1_NDEF_SEQUENCE(tname) \
        ASN1_SEQUENCE(tname)

# define ASN1_NDEF_SEQUENCE_cb(tname, cb) \
        ASN1_SEQUENCE_cb(tname, cb)

# define ASN1_SEQUENCE_cb(tname, cb) \
        static const ASN1_AUX tname##_aux = {NULL, 0, 0, 0, cb, 0, NULL}; \
        ASN1_SEQUENCE(tname)

# define ASN1_SEQUENCE_const_cb(tname, const_cb) \
        static const ASN1_AUX tname##_aux = \
            {NULL, ASN1_AFLG_CONST_CB, 0, 0, NULL, 0, const_cb}; \
        ASN1_SEQUENCE(tname)

# define ASN1_SEQUENCE_cb_const_cb(tname, cb, const_cb) \
        static const ASN1_AUX tname##_aux = \
            {NULL, ASN1_AFLG_CONST_CB, 0, 0, cb, 0, const_cb}; \
        ASN1_SEQUENCE(tname)

# define ASN1_SEQUENCE_ref(tname, cb) \
        static const ASN1_AUX tname##_aux = {NULL, ASN1_AFLG_REFCOUNT, offsetof(tname, references), offsetof(tname, lock), cb, 0, NULL}; \
        ASN1_SEQUENCE(tname)

# define ASN1_SEQUENCE_enc(tname, enc, cb) \
        static const ASN1_AUX tname##_aux = {NULL, ASN1_AFLG_ENCODING, 0, 0, cb, offsetof(tname, enc), NULL}; \
        ASN1_SEQUENCE(tname)

# define ASN1_NDEF_SEQUENCE_END(tname) \
        ;\
        ASN1_ITEM_start(tname) \
                ASN1_ITYPE_NDEF_SEQUENCE,\
                V_ASN1_SEQUENCE,\
                tname##_seq_tt,\
                sizeof(tname##_seq_tt) / sizeof(ASN1_TEMPLATE),\
                NULL,\
                sizeof(tname),\
                #tname \
        ASN1_ITEM_end(tname)
# define static_ASN1_NDEF_SEQUENCE_END(tname) \
        ;\
        static_ASN1_ITEM_start(tname) \
                ASN1_ITYPE_NDEF_SEQUENCE,\
                V_ASN1_SEQUENCE,\
                tname##_seq_tt,\
                sizeof(tname##_seq_tt) / sizeof(ASN1_TEMPLATE),\
                NULL,\
                sizeof(tname),\
                #tname \
        ASN1_ITEM_end(tname)


# define ASN1_SEQUENCE_END_enc(stname, tname) ASN1_SEQUENCE_END_ref(stname, tname)

# define ASN1_SEQUENCE_END_cb(stname, tname) ASN1_SEQUENCE_END_ref(stname, tname)
# define static_ASN1_SEQUENCE_END_cb(stname, tname) static_ASN1_SEQUENCE_END_ref(stname, tname)

# define ASN1_SEQUENCE_END_ref(stname, tname) \
        ;\
        ASN1_ITEM_start(tname) \
                ASN1_ITYPE_SEQUENCE,\
                V_ASN1_SEQUENCE,\
                tname##_seq_tt,\
                sizeof(tname##_seq_tt) / sizeof(ASN1_TEMPLATE),\
                &tname##_aux,\
                sizeof(stname),\
                #tname \
        ASN1_ITEM_end(tname)
# define static_ASN1_SEQUENCE_END_ref(stname, tname) \
        ;\
        static_ASN1_ITEM_start(tname) \
                ASN1_ITYPE_SEQUENCE,\
                V_ASN1_SEQUENCE,\
                tname##_seq_tt,\
                sizeof(tname##_seq_tt) / sizeof(ASN1_TEMPLATE),\
                &tname##_aux,\
                sizeof(stname),\
                #stname \
        ASN1_ITEM_end(tname)

# define ASN1_NDEF_SEQUENCE_END_cb(stname, tname) \
        ;\
        ASN1_ITEM_start(tname) \
                ASN1_ITYPE_NDEF_SEQUENCE,\
                V_ASN1_SEQUENCE,\
                tname##_seq_tt,\
                sizeof(tname##_seq_tt) / sizeof(ASN1_TEMPLATE),\
                &tname##_aux,\
                sizeof(stname),\
                #stname \
        ASN1_ITEM_end(tname)

/*-
 * This pair helps declare a CHOICE type. We can do:
 *
 *      ASN1_CHOICE(chname) = {
 *              ... CHOICE options ...
 *      ASN1_CHOICE_END(chname)
 *
 *      This will produce an ASN1_ITEM called chname_it
 *      for a structure called chname. The structure
 *      definition must look like this:
 *      typedef struct {
 *              int type;
 *              union {
 *                      ASN1_SOMETHING *opt1;
 *                      ASN1_SOMEOTHER *opt2;
 *              } value;
 *      } chname;
 *
 *      the name of the selector must be 'type'.
 *      to use an alternative selector name use the
 *      ASN1_CHOICE_END_selector() version.
 */

# define ASN1_CHOICE(tname) \
        static const ASN1_TEMPLATE tname##_ch_tt[]

# define ASN1_CHOICE_cb(tname, cb) \
        static const ASN1_AUX tname##_aux = {NULL, 0, 0, 0, cb, 0, NULL}; \
        ASN1_CHOICE(tname)

# define ASN1_CHOICE_END(stname) ASN1_CHOICE_END_name(stname, stname)

# define static_ASN1_CHOICE_END(stname) static_ASN1_CHOICE_END_name(stname, stname)

# define ASN1_CHOICE_END_name(stname, tname) ASN1_CHOICE_END_selector(stname, tname, type)

# define static_ASN1_CHOICE_END_name(stname, tname) static_ASN1_CHOICE_END_selector(stname, tname, type)

# define ASN1_CHOICE_END_selector(stname, tname, selname) \
        ;\
        ASN1_ITEM_start(tname) \
                ASN1_ITYPE_CHOICE,\
                offsetof(stname,selname) ,\
                tname##_ch_tt,\
                sizeof(tname##_ch_tt) / sizeof(ASN1_TEMPLATE),\
                NULL,\
                sizeof(stname),\
                #stname \
        ASN1_ITEM_end(tname)

# define static_ASN1_CHOICE_END_selector(stname, tname, selname) \
        ;\
        static_ASN1_ITEM_start(tname) \
                ASN1_ITYPE_CHOICE,\
                offsetof(stname,selname) ,\
                tname##_ch_tt,\
                sizeof(tname##_ch_tt) / sizeof(ASN1_TEMPLATE),\
                NULL,\
                sizeof(stname),\
                #stname \
        ASN1_ITEM_end(tname)

# define ASN1_CHOICE_END_cb(stname, tname, selname) \
        ;\
        ASN1_ITEM_start(tname) \
                ASN1_ITYPE_CHOICE,\
                offsetof(stname,selname) ,\
                tname##_ch_tt,\
                sizeof(tname##_ch_tt) / sizeof(ASN1_TEMPLATE),\
                &tname##_aux,\
                sizeof(stname),\
                #stname \
        ASN1_ITEM_end(tname)

/* This helps with the template wrapper form of ASN1_ITEM */

# define ASN1_EX_TEMPLATE_TYPE(flags, tag, name, type) { \
        (flags), (tag), 0,\
        #name, ASN1_ITEM_ref(type) }

/* These help with SEQUENCE or CHOICE components */

/* used to declare other types */

# define ASN1_EX_TYPE(flags, tag, stname, field, type) { \
        (flags), (tag), offsetof(stname, field),\
        #field, ASN1_ITEM_ref(type) }

/* implicit and explicit helper macros */

# define ASN1_IMP_EX(stname, field, type, tag, ex) \
         ASN1_EX_TYPE(ASN1_TFLG_IMPLICIT | (ex), tag, stname, field, type)

# define ASN1_EXP_EX(stname, field, type, tag, ex) \
         ASN1_EX_TYPE(ASN1_TFLG_EXPLICIT | (ex), tag, stname, field, type)

/* Any defined by macros: the field used is in the table itself */

# define ASN1_ADB_OBJECT(tblname) { ASN1_TFLG_ADB_OID, -1, 0, #tblname, tblname##_adb }
# define ASN1_ADB_INTEGER(tblname) { ASN1_TFLG_ADB_INT, -1, 0, #tblname, tblname##_adb }

/* Plain simple type */
# define ASN1_SIMPLE(stname, field, type) ASN1_EX_TYPE(0,0, stname, field, type)
/* Embedded simple type */
# define ASN1_EMBED(stname, field, type) ASN1_EX_TYPE(ASN1_TFLG_EMBED,0, stname, field, type)

/* OPTIONAL simple type */
# define ASN1_OPT(stname, field, type) ASN1_EX_TYPE(ASN1_TFLG_OPTIONAL, 0, stname, field, type)
# define ASN1_OPT_EMBED(stname, field, type) ASN1_EX_TYPE(ASN1_TFLG_OPTIONAL|ASN1_TFLG_EMBED, 0, stname, field, type)

/* IMPLICIT tagged simple type */
# define ASN1_IMP(stname, field, type, tag) ASN1_IMP_EX(stname, field, type, tag, 0)
# define ASN1_IMP_EMBED(stname, field, type, tag) ASN1_IMP_EX(stname, field, type, tag, ASN1_TFLG_EMBED)

/* IMPLICIT tagged OPTIONAL simple type */
# define ASN1_IMP_OPT(stname, field, type, tag) ASN1_IMP_EX(stname, field, type, tag, ASN1_TFLG_OPTIONAL)
# define ASN1_IMP_OPT_EMBED(stname, field, type, tag) ASN1_IMP_EX(stname, field, type, tag, ASN1_TFLG_OPTIONAL|ASN1_TFLG_EMBED)

/* Same as above but EXPLICIT */

# define ASN1_EXP(stname, field, type, tag) ASN1_EXP_EX(stname, field, type, tag, 0)
# define ASN1_EXP_EMBED(stname, field, type, tag) ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_EMBED)
# define ASN1_EXP_OPT(stname, field, type, tag) ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_OPTIONAL)
# define ASN1_EXP_OPT_EMBED(stname, field, type, tag) ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_OPTIONAL|ASN1_TFLG_EMBED)

/* SEQUENCE OF type */
# define ASN1_SEQUENCE_OF(stname, field, type) \
                ASN1_EX_TYPE(ASN1_TFLG_SEQUENCE_OF, 0, stname, field, type)

/* OPTIONAL SEQUENCE OF */
# define ASN1_SEQUENCE_OF_OPT(stname, field, type) \
                ASN1_EX_TYPE(ASN1_TFLG_SEQUENCE_OF|ASN1_TFLG_OPTIONAL, 0, stname, field, type)

/* Same as above but for SET OF */

# define ASN1_SET_OF(stname, field, type) \
                ASN1_EX_TYPE(ASN1_TFLG_SET_OF, 0, stname, field, type)

# define ASN1_SET_OF_OPT(stname, field, type) \
                ASN1_EX_TYPE(ASN1_TFLG_SET_OF|ASN1_TFLG_OPTIONAL, 0, stname, field, type)

/* Finally compound types of SEQUENCE, SET, IMPLICIT, EXPLICIT and OPTIONAL */

# define ASN1_IMP_SET_OF(stname, field, type, tag) \
                        ASN1_IMP_EX(stname, field, type, tag, ASN1_TFLG_SET_OF)

# define ASN1_EXP_SET_OF(stname, field, type, tag) \
                        ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_SET_OF)

# define ASN1_IMP_SET_OF_OPT(stname, field, type, tag) \
                        ASN1_IMP_EX(stname, field, type, tag, ASN1_TFLG_SET_OF|ASN1_TFLG_OPTIONAL)

# define ASN1_EXP_SET_OF_OPT(stname, field, type, tag) \
                        ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_SET_OF|ASN1_TFLG_OPTIONAL)

# define ASN1_IMP_SEQUENCE_OF(stname, field, type, tag) \
                        ASN1_IMP_EX(stname, field, type, tag, ASN1_TFLG_SEQUENCE_OF)

# define ASN1_IMP_SEQUENCE_OF_OPT(stname, field, type, tag) \
                        ASN1_IMP_EX(stname, field, type, tag, ASN1_TFLG_SEQUENCE_OF|ASN1_TFLG_OPTIONAL)

# define ASN1_EXP_SEQUENCE_OF(stname, field, type, tag) \
                        ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_SEQUENCE_OF)

# define ASN1_EXP_SEQUENCE_OF_OPT(stname, field, type, tag) \
                        ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_SEQUENCE_OF|ASN1_TFLG_OPTIONAL)

/* EXPLICIT using indefinite length constructed form */
# define ASN1_NDEF_EXP(stname, field, type, tag) \
                        ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_NDEF)

/* EXPLICIT OPTIONAL using indefinite length constructed form */
# define ASN1_NDEF_EXP_OPT(stname, field, type, tag) \
                        ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_OPTIONAL|ASN1_TFLG_NDEF)

/* Macros for the ASN1_ADB structure */

# define ASN1_ADB(name) \
        static const ASN1_ADB_TABLE name##_adbtbl[]

# define ASN1_ADB_END(name, flags, field, adb_cb, def, none) \
        ;\
        static const ASN1_ITEM *name##_adb(void) \
        { \
        static const ASN1_ADB internal_adb = \
                {\
                flags,\
                offsetof(name, field),\
                adb_cb,\
                name##_adbtbl,\
                sizeof(name##_adbtbl) / sizeof(ASN1_ADB_TABLE),\
                def,\
                none\
                }; \
                return (const ASN1_ITEM *) &internal_adb; \
        } \
        void dummy_function(void)

# define ADB_ENTRY(val, template) {val, template}

# define ASN1_ADB_TEMPLATE(name) \
        static const ASN1_TEMPLATE name##_tt

/*
 * This is the ASN1 template structure that defines a wrapper round the
 * actual type. It determines the actual position of the field in the value
 * structure, various flags such as OPTIONAL and the field name.
 */

struct ASN1_TEMPLATE_st {
    unsigned long flags;        /* Various flags */
    long tag;                   /* tag, not used if no tagging */
    unsigned long offset;       /* Offset of this field in structure */
    const char *field_name;     /* Field name */
    ASN1_ITEM_EXP *item;        /* Relevant ASN1_ITEM or ASN1_ADB */
};

/* Macro to extract ASN1_ITEM and ASN1_ADB pointer from ASN1_TEMPLATE */

# define ASN1_TEMPLATE_item(t) (t->item_ptr)
# define ASN1_TEMPLATE_adb(t) (t->item_ptr)

typedef struct ASN1_ADB_TABLE_st ASN1_ADB_TABLE;
typedef struct ASN1_ADB_st ASN1_ADB;

struct ASN1_ADB_st {
    unsigned long flags;        /* Various flags */
    unsigned long offset;       /* Offset of selector field */
    int (*adb_cb)(long *psel);  /* Application callback */
    const ASN1_ADB_TABLE *tbl;  /* Table of possible types */
    long tblcount;              /* Number of entries in tbl */
    const ASN1_TEMPLATE *default_tt; /* Type to use if no match */
    const ASN1_TEMPLATE *null_tt; /* Type to use if selector is NULL */
};

struct ASN1_ADB_TABLE_st {
    long value;                 /* NID for an object or value for an int */
    const ASN1_TEMPLATE tt;     /* item for this value */
};

/* template flags */

/* Field is optional */
# define ASN1_TFLG_OPTIONAL      (0x1)

/* Field is a SET OF */
# define ASN1_TFLG_SET_OF        (0x1 << 1)

/* Field is a SEQUENCE OF */
# define ASN1_TFLG_SEQUENCE_OF   (0x2 << 1)

/*
 * Special case: this refers to a SET OF that will be sorted into DER order
 * when encoded *and* the corresponding STACK will be modified to match the
 * new order.
 */
# define ASN1_TFLG_SET_ORDER     (0x3 << 1)

/* Mask for SET OF or SEQUENCE OF */
# define ASN1_TFLG_SK_MASK       (0x3 << 1)

/*
 * These flags mean the tag should be taken from the tag field. If EXPLICIT
 * then the underlying type is used for the inner tag.
 */

/* IMPLICIT tagging */
# define ASN1_TFLG_IMPTAG        (0x1 << 3)

/* EXPLICIT tagging, inner tag from underlying type */
# define ASN1_TFLG_EXPTAG        (0x2 << 3)

# define ASN1_TFLG_TAG_MASK      (0x3 << 3)

/* context specific IMPLICIT */
# define ASN1_TFLG_IMPLICIT      (ASN1_TFLG_IMPTAG|ASN1_TFLG_CONTEXT)

/* context specific EXPLICIT */
# define ASN1_TFLG_EXPLICIT      (ASN1_TFLG_EXPTAG|ASN1_TFLG_CONTEXT)

/*
 * If tagging is in force these determine the type of tag to use. Otherwise
 * the tag is determined by the underlying type. These values reflect the
 * actual octet format.
 */

/* Universal tag */
# define ASN1_TFLG_UNIVERSAL     (0x0<<6)
/* Application tag */
# define ASN1_TFLG_APPLICATION   (0x1<<6)
/* Context specific tag */
# define ASN1_TFLG_CONTEXT       (0x2<<6)
/* Private tag */
# define ASN1_TFLG_PRIVATE       (0x3<<6)

# define ASN1_TFLG_TAG_CLASS     (0x3<<6)

/*
 * These are for ANY DEFINED BY type. In this case the 'item' field points to
 * an ASN1_ADB structure which contains a table of values to decode the
 * relevant type
 */

# define ASN1_TFLG_ADB_MASK      (0x3<<8)

# define ASN1_TFLG_ADB_OID       (0x1<<8)

# define ASN1_TFLG_ADB_INT       (0x1<<9)

/*
 * This flag when present in a SEQUENCE OF, SET OF or EXPLICIT causes
 * indefinite length constructed encoding to be used if required.
 */

# define ASN1_TFLG_NDEF          (0x1<<11)

/* Field is embedded and not a pointer */
# define ASN1_TFLG_EMBED         (0x1 << 12)

/* This is the actual ASN1 item itself */

struct ASN1_ITEM_st {
    char itype;                 /* The item type, primitive, SEQUENCE, CHOICE
                                 * or extern */
    long utype;                 /* underlying type */
    const ASN1_TEMPLATE *templates; /* If SEQUENCE or CHOICE this contains
                                     * the contents */
    long tcount;                /* Number of templates if SEQUENCE or CHOICE */
    const void *funcs;          /* further data and type-specific functions */
    /* funcs can be ASN1_PRIMITIVE_FUNCS*, ASN1_EXTERN_FUNCS*, or ASN1_AUX* */
    long size;                  /* Structure size (usually) */
    const char *sname;          /* Structure name */
};

/*
 * Cache for ASN1 tag and length, so we don't keep re-reading it for things
 * like CHOICE
 */

struct ASN1_TLC_st {
    char valid;                 /* Values below are valid */
    int ret;                    /* return value */
    long plen;                  /* length */
    int ptag;                   /* class value */
    int pclass;                 /* class value */
    int hdrlen;                 /* header length */
};

/* Typedefs for ASN1 function pointers */
typedef int ASN1_ex_d2i(ASN1_VALUE **pval, const unsigned char **in, long len,
                        const ASN1_ITEM *it, int tag, int aclass, char opt,
                        ASN1_TLC *ctx);

typedef int ASN1_ex_d2i_ex(ASN1_VALUE **pval, const unsigned char **in, long len,
                           const ASN1_ITEM *it, int tag, int aclass, char opt,
                           ASN1_TLC *ctx, OSSL_LIB_CTX *libctx,
                           const char *propq);
typedef int ASN1_ex_i2d(const ASN1_VALUE **pval, unsigned char **out,
                        const ASN1_ITEM *it, int tag, int aclass);
typedef int ASN1_ex_new_func(ASN1_VALUE **pval, const ASN1_ITEM *it);
typedef int ASN1_ex_new_ex_func(ASN1_VALUE **pval, const ASN1_ITEM *it,
                                OSSL_LIB_CTX *libctx, const char *propq);
typedef void ASN1_ex_free_func(ASN1_VALUE **pval, const ASN1_ITEM *it);

typedef int ASN1_ex_print_func(BIO *out, const ASN1_VALUE **pval,
                               int indent, const char *fname,
                               const ASN1_PCTX *pctx);

typedef int ASN1_primitive_i2c(const ASN1_VALUE **pval, unsigned char *cont,
                               int *putype, const ASN1_ITEM *it);
typedef int ASN1_primitive_c2i(ASN1_VALUE **pval, const unsigned char *cont,
                               int len, int utype, char *free_cont,
                               const ASN1_ITEM *it);
typedef int ASN1_primitive_print(BIO *out, const ASN1_VALUE **pval,
                                 const ASN1_ITEM *it, int indent,
                                 const ASN1_PCTX *pctx);

typedef struct ASN1_EXTERN_FUNCS_st {
    void *app_data;
    ASN1_ex_new_func *asn1_ex_new;
    ASN1_ex_free_func *asn1_ex_free;
    ASN1_ex_free_func *asn1_ex_clear;
    ASN1_ex_d2i *asn1_ex_d2i;
    ASN1_ex_i2d *asn1_ex_i2d;
    ASN1_ex_print_func *asn1_ex_print;
    ASN1_ex_new_ex_func *asn1_ex_new_ex;
    ASN1_ex_d2i_ex *asn1_ex_d2i_ex;
} ASN1_EXTERN_FUNCS;

typedef struct ASN1_PRIMITIVE_FUNCS_st {
    void *app_data;
    unsigned long flags;
    ASN1_ex_new_func *prim_new;
    ASN1_ex_free_func *prim_free;
    ASN1_ex_free_func *prim_clear;
    ASN1_primitive_c2i *prim_c2i;
    ASN1_primitive_i2c *prim_i2c;
    ASN1_primitive_print *prim_print;
} ASN1_PRIMITIVE_FUNCS;

/*
 * This is the ASN1_AUX structure: it handles various miscellaneous
 * requirements. For example the use of reference counts and an informational
 * callback. The "informational callback" is called at various points during
 * the ASN1 encoding and decoding. It can be used to provide minor
 * customisation of the structures used. This is most useful where the
 * supplied routines *almost* do the right thing but need some extra help at
 * a few points. If the callback returns zero then it is assumed a fatal
 * error has occurred and the main operation should be abandoned. If major
 * changes in the default behaviour are required then an external type is
 * more appropriate.
 * For the operations ASN1_OP_I2D_PRE, ASN1_OP_I2D_POST, ASN1_OP_PRINT_PRE, and
 * ASN1_OP_PRINT_POST, meanwhile a variant of the callback with const parameter
 * 'in' is provided to make clear statically that its input is not modified. If
 * and only if this variant is in use the flag ASN1_AFLG_CONST_CB must be set.
 */

typedef int ASN1_aux_cb(int operation, ASN1_VALUE **in, const ASN1_ITEM *it,
                        void *exarg);
typedef int ASN1_aux_const_cb(int operation, const ASN1_VALUE **in,
                              const ASN1_ITEM *it, void *exarg);

typedef struct ASN1_AUX_st {
    void *app_data;
    int flags;
    int ref_offset;             /* Offset of reference value */
    int ref_lock;               /* Offset of lock value */
    ASN1_aux_cb *asn1_cb;
    int enc_offset;             /* Offset of ASN1_ENCODING structure */
    ASN1_aux_const_cb *asn1_const_cb; /* for ASN1_OP_I2D_ and ASN1_OP_PRINT_ */
} ASN1_AUX;

/* For print related callbacks exarg points to this structure */
typedef struct ASN1_PRINT_ARG_st {
    BIO *out;
    int indent;
    const ASN1_PCTX *pctx;
} ASN1_PRINT_ARG;

/* For streaming related callbacks exarg points to this structure */
typedef struct ASN1_STREAM_ARG_st {
    /* BIO to stream through */
    BIO *out;
    /* BIO with filters appended */
    BIO *ndef_bio;
    /* Streaming I/O boundary */
    unsigned char **boundary;
} ASN1_STREAM_ARG;

/* Flags in ASN1_AUX */

/* Use a reference count */
# define ASN1_AFLG_REFCOUNT      1
/* Save the encoding of structure (useful for signatures) */
# define ASN1_AFLG_ENCODING      2
/* The Sequence length is invalid */
# define ASN1_AFLG_BROKEN        4
/* Use the new asn1_const_cb */
# define ASN1_AFLG_CONST_CB      8

/* operation values for asn1_cb */

# define ASN1_OP_NEW_PRE         0
# define ASN1_OP_NEW_POST        1
# define ASN1_OP_FREE_PRE        2
# define ASN1_OP_FREE_POST       3
# define ASN1_OP_D2I_PRE         4
# define ASN1_OP_D2I_POST        5
# define ASN1_OP_I2D_PRE         6
# define ASN1_OP_I2D_POST        7
# define ASN1_OP_PRINT_PRE       8
# define ASN1_OP_PRINT_POST      9
# define ASN1_OP_STREAM_PRE      10
# define ASN1_OP_STREAM_POST     11
# define ASN1_OP_DETACHED_PRE    12
# define ASN1_OP_DETACHED_POST   13
# define ASN1_OP_DUP_PRE         14
# define ASN1_OP_DUP_POST        15
# define ASN1_OP_GET0_LIBCTX     16
# define ASN1_OP_GET0_PROPQ      17

/* Macro to implement a primitive type */
# define IMPLEMENT_ASN1_TYPE(stname) IMPLEMENT_ASN1_TYPE_ex(stname, stname, 0)
# define IMPLEMENT_ASN1_TYPE_ex(itname, vname, ex) \
                                ASN1_ITEM_start(itname) \
                                        ASN1_ITYPE_PRIMITIVE, V_##vname, NULL, 0, NULL, ex, #itname \
                                ASN1_ITEM_end(itname)

/* Macro to implement a multi string type */
# define IMPLEMENT_ASN1_MSTRING(itname, mask) \
                                ASN1_ITEM_start(itname) \
                                        ASN1_ITYPE_MSTRING, mask, NULL, 0, NULL, sizeof(ASN1_STRING), #itname \
                                ASN1_ITEM_end(itname)

# define IMPLEMENT_EXTERN_ASN1(sname, tag, fptrs) \
        ASN1_ITEM_start(sname) \
                ASN1_ITYPE_EXTERN, \
                tag, \
                NULL, \
                0, \
                &fptrs, \
                0, \
                #sname \
        ASN1_ITEM_end(sname)

/* Macro to implement standard functions in terms of ASN1_ITEM structures */

# define IMPLEMENT_ASN1_FUNCTIONS(stname) IMPLEMENT_ASN1_FUNCTIONS_fname(stname, stname, stname)

# define IMPLEMENT_ASN1_FUNCTIONS_name(stname, itname) IMPLEMENT_ASN1_FUNCTIONS_fname(stname, itname, itname)

# define IMPLEMENT_ASN1_FUNCTIONS_ENCODE_name(stname, itname) \
                        IMPLEMENT_ASN1_FUNCTIONS_ENCODE_fname(stname, itname, itname)

# define IMPLEMENT_STATIC_ASN1_ALLOC_FUNCTIONS(stname) \
                IMPLEMENT_ASN1_ALLOC_FUNCTIONS_pfname(static, stname, stname, stname)

# define IMPLEMENT_ASN1_ALLOC_FUNCTIONS(stname) \
                IMPLEMENT_ASN1_ALLOC_FUNCTIONS_fname(stname, stname, stname)

# define IMPLEMENT_ASN1_ALLOC_FUNCTIONS_pfname(pre, stname, itname, fname) \
        pre stname *fname##_new(void) \
        { \
                return (stname *)ASN1_item_new(ASN1_ITEM_rptr(itname)); \
        } \
        pre void fname##_free(stname *a) \
        { \
                ASN1_item_free((ASN1_VALUE *)a, ASN1_ITEM_rptr(itname)); \
        }

# define IMPLEMENT_ASN1_ALLOC_FUNCTIONS_fname(stname, itname, fname) \
        stname *fname##_new(void) \
        { \
                return (stname *)ASN1_item_new(ASN1_ITEM_rptr(itname)); \
        } \
        void fname##_free(stname *a) \
        { \
                ASN1_item_free((ASN1_VALUE *)a, ASN1_ITEM_rptr(itname)); \
        }

# define IMPLEMENT_ASN1_FUNCTIONS_fname(stname, itname, fname) \
        IMPLEMENT_ASN1_ENCODE_FUNCTIONS_fname(stname, itname, fname) \
        IMPLEMENT_ASN1_ALLOC_FUNCTIONS_fname(stname, itname, fname)

# define IMPLEMENT_ASN1_ENCODE_FUNCTIONS_fname(stname, itname, fname) \
        stname *d2i_##fname(stname **a, const unsigned char **in, long len) \
        { \
                return (stname *)ASN1_item_d2i((ASN1_VALUE **)a, in, len, ASN1_ITEM_rptr(itname));\
        } \
        int i2d_##fname(const stname *a, unsigned char **out) \
        { \
                return ASN1_item_i2d((const ASN1_VALUE *)a, out, ASN1_ITEM_rptr(itname));\
        }

# define IMPLEMENT_ASN1_NDEF_FUNCTION(stname) \
        int i2d_##stname##_NDEF(const stname *a, unsigned char **out) \
        { \
                return ASN1_item_ndef_i2d((const ASN1_VALUE *)a, out, ASN1_ITEM_rptr(stname));\
        }

# define IMPLEMENT_STATIC_ASN1_ENCODE_FUNCTIONS(stname) \
        static stname *d2i_##stname(stname **a, \
                                   const unsigned char **in, long len) \
        { \
                return (stname *)ASN1_item_d2i((ASN1_VALUE **)a, in, len, \
                                               ASN1_ITEM_rptr(stname)); \
        } \
        static int i2d_##stname(const stname *a, unsigned char **out) \
        { \
                return ASN1_item_i2d((const ASN1_VALUE *)a, out, \
                                     ASN1_ITEM_rptr(stname)); \
        }

# define IMPLEMENT_ASN1_DUP_FUNCTION(stname) \
        stname * stname##_dup(const stname *x) \
        { \
        return ASN1_item_dup(ASN1_ITEM_rptr(stname), x); \
        }

# define IMPLEMENT_ASN1_PRINT_FUNCTION(stname) \
        IMPLEMENT_ASN1_PRINT_FUNCTION_fname(stname, stname, stname)

# define IMPLEMENT_ASN1_PRINT_FUNCTION_fname(stname, itname, fname) \
        int fname##_print_ctx(BIO *out, const stname *x, int indent, \
                                                const ASN1_PCTX *pctx) \
        { \
                return ASN1_item_print(out, (const ASN1_VALUE *)x, indent, \
                        ASN1_ITEM_rptr(itname), pctx); \
        }

/* external definitions for primitive types */

DECLARE_ASN1_ITEM(ASN1_BOOLEAN)
DECLARE_ASN1_ITEM(ASN1_TBOOLEAN)
DECLARE_ASN1_ITEM(ASN1_FBOOLEAN)
DECLARE_ASN1_ITEM(ASN1_SEQUENCE)
DECLARE_ASN1_ITEM(CBIGNUM)
DECLARE_ASN1_ITEM(BIGNUM)
DECLARE_ASN1_ITEM(INT32)
DECLARE_ASN1_ITEM(ZINT32)
DECLARE_ASN1_ITEM(UINT32)
DECLARE_ASN1_ITEM(ZUINT32)
DECLARE_ASN1_ITEM(INT64)
DECLARE_ASN1_ITEM(ZINT64)
DECLARE_ASN1_ITEM(UINT64)
DECLARE_ASN1_ITEM(ZUINT64)

# ifndef OPENSSL_NO_DEPRECATED_3_0
/*
 * LONG and ZLONG are strongly discouraged for use as stored data, as the
 * underlying C type (long) differs in size depending on the architecture.
 * They are designed with 32-bit longs in mind.
 */
DECLARE_ASN1_ITEM(LONG)
DECLARE_ASN1_ITEM(ZLONG)
# endif

SKM_DEFINE_STACK_OF_INTERNAL(ASN1_VALUE, ASN1_VALUE, ASN1_VALUE)
#define sk_ASN1_VALUE_num(sk) OPENSSL_sk_num(ossl_check_const_ASN1_VALUE_sk_type(sk))
#define sk_ASN1_VALUE_value(sk, idx) ((ASN1_VALUE *)OPENSSL_sk_value(ossl_check_const_ASN1_VALUE_sk_type(sk), (idx)))
#define sk_ASN1_VALUE_new(cmp) ((STACK_OF(ASN1_VALUE) *)OPENSSL_sk_new(ossl_check_ASN1_VALUE_compfunc_type(cmp)))
#define sk_ASN1_VALUE_new_null() ((STACK_OF(ASN1_VALUE) *)OPENSSL_sk_new_null())
#define sk_ASN1_VALUE_new_reserve(cmp, n) ((STACK_OF(ASN1_VALUE) *)OPENSSL_sk_new_reserve(ossl_check_ASN1_VALUE_compfunc_type(cmp), (n)))
#define sk_ASN1_VALUE_reserve(sk, n) OPENSSL_sk_reserve(ossl_check_ASN1_VALUE_sk_type(sk), (n))
#define sk_ASN1_VALUE_free(sk) OPENSSL_sk_free(ossl_check_ASN1_VALUE_sk_type(sk))
#define sk_ASN1_VALUE_zero(sk) OPENSSL_sk_zero(ossl_check_ASN1_VALUE_sk_type(sk))
#define sk_ASN1_VALUE_delete(sk, i) ((ASN1_VALUE *)OPENSSL_sk_delete(ossl_check_ASN1_VALUE_sk_type(sk), (i)))
#define sk_ASN1_VALUE_delete_ptr(sk, ptr) ((ASN1_VALUE *)OPENSSL_sk_delete_ptr(ossl_check_ASN1_VALUE_sk_type(sk), ossl_check_ASN1_VALUE_type(ptr)))
#define sk_ASN1_VALUE_push(sk, ptr) OPENSSL_sk_push(ossl_check_ASN1_VALUE_sk_type(sk), ossl_check_ASN1_VALUE_type(ptr))
#define sk_ASN1_VALUE_unshift(sk, ptr) OPENSSL_sk_unshift(ossl_check_ASN1_VALUE_sk_type(sk), ossl_check_ASN1_VALUE_type(ptr))
#define sk_ASN1_VALUE_pop(sk) ((ASN1_VALUE *)OPENSSL_sk_pop(ossl_check_ASN1_VALUE_sk_type(sk)))
#define sk_ASN1_VALUE_shift(sk) ((ASN1_VALUE *)OPENSSL_sk_shift(ossl_check_ASN1_VALUE_sk_type(sk)))
#define sk_ASN1_VALUE_pop_free(sk, freefunc) OPENSSL_sk_pop_free(ossl_check_ASN1_VALUE_sk_type(sk),ossl_check_ASN1_VALUE_freefunc_type(freefunc))
#define sk_ASN1_VALUE_insert(sk, ptr, idx) OPENSSL_sk_insert(ossl_check_ASN1_VALUE_sk_type(sk), ossl_check_ASN1_VALUE_type(ptr), (idx))
#define sk_ASN1_VALUE_set(sk, idx, ptr) ((ASN1_VALUE *)OPENSSL_sk_set(ossl_check_ASN1_VALUE_sk_type(sk), (idx), ossl_check_ASN1_VALUE_type(ptr)))
#define sk_ASN1_VALUE_find(sk, ptr) OPENSSL_sk_find(ossl_check_ASN1_VALUE_sk_type(sk), ossl_check_ASN1_VALUE_type(ptr))
#define sk_ASN1_VALUE_find_ex(sk, ptr) OPENSSL_sk_find_ex(ossl_check_ASN1_VALUE_sk_type(sk), ossl_check_ASN1_VALUE_type(ptr))
#define sk_ASN1_VALUE_find_all(sk, ptr, pnum) OPENSSL_sk_find_all(ossl_check_ASN1_VALUE_sk_type(sk), ossl_check_ASN1_VALUE_type(ptr), pnum)
#define sk_ASN1_VALUE_sort(sk) OPENSSL_sk_sort(ossl_check_ASN1_VALUE_sk_type(sk))
#define sk_ASN1_VALUE_is_sorted(sk) OPENSSL_sk_is_sorted(ossl_check_const_ASN1_VALUE_sk_type(sk))
#define sk_ASN1_VALUE_dup(sk) ((STACK_OF(ASN1_VALUE) *)OPENSSL_sk_dup(ossl_check_const_ASN1_VALUE_sk_type(sk)))
#define sk_ASN1_VALUE_deep_copy(sk, copyfunc, freefunc) ((STACK_OF(ASN1_VALUE) *)OPENSSL_sk_deep_copy(ossl_check_const_ASN1_VALUE_sk_type(sk), ossl_check_ASN1_VALUE_copyfunc_type(copyfunc), ossl_check_ASN1_VALUE_freefunc_type(freefunc)))
#define sk_ASN1_VALUE_set_cmp_func(sk, cmp) ((sk_ASN1_VALUE_compfunc)OPENSSL_sk_set_cmp_func(ossl_check_ASN1_VALUE_sk_type(sk), ossl_check_ASN1_VALUE_compfunc_type(cmp)))



/* Functions used internally by the ASN1 code */

int ASN1_item_ex_new(ASN1_VALUE **pval, const ASN1_ITEM *it);
void ASN1_item_ex_free(ASN1_VALUE **pval, const ASN1_ITEM *it);

int ASN1_item_ex_d2i(ASN1_VALUE **pval, const unsigned char **in, long len,
                     const ASN1_ITEM *it, int tag, int aclass, char opt,
                     ASN1_TLC *ctx);

int ASN1_item_ex_i2d(const ASN1_VALUE **pval, unsigned char **out,
                     const ASN1_ITEM *it, int tag, int aclass);

/* Legacy compatibility */
# define IMPLEMENT_ASN1_FUNCTIONS_const(name) IMPLEMENT_ASN1_FUNCTIONS(name)
# define IMPLEMENT_ASN1_ENCODE_FUNCTIONS_const_fname(stname, itname, fname) \
         IMPLEMENT_ASN1_ENCODE_FUNCTIONS_fname(stname, itname, fname)

#ifdef  __cplusplus
}
#endif
#endif
                                                                                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/deps/openssl/config/archs/linux-elf/asm/include/openssl/bio.h                           0000664 0000000 0000000 00000115644 14746647661 0026266 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        /*
 * WARNING: do not edit!
 * Generated by Makefile from include/openssl/bio.h.in
 *
 * Copyright 1995-2022 The OpenSSL Project Authors. All Rights Reserved.
 *
 * Licensed under the Apache License 2.0 (the "License").  You may not use
 * this file except in compliance with the License.  You can obtain a copy
 * in the file LICENSE in the source distribution or at
 * https://www.openssl.org/source/license.html
 */


#ifndef OPENSSL_BIO_H
# define OPENSSL_BIO_H
# pragma once

# include <openssl/macros.h>
# ifndef OPENSSL_NO_DEPRECATED_3_0
#  define HEADER_BIO_H
# endif

# include <openssl/e_os2.h>

# ifndef OPENSSL_NO_STDIO
#  include <stdio.h>
# endif
# include <stdarg.h>

# include <openssl/crypto.h>
# include <openssl/bioerr.h>
# include <openssl/core.h>

#ifdef  __cplusplus
extern "C" {
#endif

/* There are the classes of BIOs */
# define BIO_TYPE_DESCRIPTOR     0x0100 /* socket, fd, connect or accept */
# define BIO_TYPE_FILTER         0x0200
# define BIO_TYPE_SOURCE_SINK    0x0400

/* These are the 'types' of BIOs */
# define BIO_TYPE_NONE             0
# define BIO_TYPE_MEM            ( 1|BIO_TYPE_SOURCE_SINK)
# define BIO_TYPE_FILE           ( 2|BIO_TYPE_SOURCE_SINK)

# define BIO_TYPE_FD             ( 4|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)
# define BIO_TYPE_SOCKET         ( 5|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)
# define BIO_TYPE_NULL           ( 6|BIO_TYPE_SOURCE_SINK)
# define BIO_TYPE_SSL            ( 7|BIO_TYPE_FILTER)
# define BIO_TYPE_MD             ( 8|BIO_TYPE_FILTER)
# define BIO_TYPE_BUFFER         ( 9|BIO_TYPE_FILTER)
# define BIO_TYPE_CIPHER         (10|BIO_TYPE_FILTER)
# define BIO_TYPE_BASE64         (11|BIO_TYPE_FILTER)
# define BIO_TYPE_CONNECT        (12|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)
# define BIO_TYPE_ACCEPT         (13|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)

# define BIO_TYPE_NBIO_TEST      (16|BIO_TYPE_FILTER)/* server proxy BIO */
# define BIO_TYPE_NULL_FILTER    (17|BIO_TYPE_FILTER)
# define BIO_TYPE_BIO            (19|BIO_TYPE_SOURCE_SINK)/* half a BIO pair */
# define BIO_TYPE_LINEBUFFER     (20|BIO_TYPE_FILTER)
# define BIO_TYPE_DGRAM          (21|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)
# define BIO_TYPE_ASN1           (22|BIO_TYPE_FILTER)
# define BIO_TYPE_COMP           (23|BIO_TYPE_FILTER)
# ifndef OPENSSL_NO_SCTP
#  define BIO_TYPE_DGRAM_SCTP    (24|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)
# endif
# define BIO_TYPE_CORE_TO_PROV   (25|BIO_TYPE_SOURCE_SINK)

#define BIO_TYPE_START           128

/*
 * BIO_FILENAME_READ|BIO_CLOSE to open or close on free.
 * BIO_set_fp(in,stdin,BIO_NOCLOSE);
 */
# define BIO_NOCLOSE             0x00
# define BIO_CLOSE               0x01

/*
 * These are used in the following macros and are passed to BIO_ctrl()
 */
# define BIO_CTRL_RESET          1/* opt - rewind/zero etc */
# define BIO_CTRL_EOF            2/* opt - are we at the eof */
# define BIO_CTRL_INFO           3/* opt - extra tit-bits */
# define BIO_CTRL_SET            4/* man - set the 'IO' type */
# define BIO_CTRL_GET            5/* man - get the 'IO' type */
# define BIO_CTRL_PUSH           6/* opt - internal, used to signify change */
# define BIO_CTRL_POP            7/* opt - internal, used to signify change */
# define BIO_CTRL_GET_CLOSE      8/* man - set the 'close' on free */
# define BIO_CTRL_SET_CLOSE      9/* man - set the 'close' on free */
# define BIO_CTRL_PENDING        10/* opt - is their more data buffered */
# define BIO_CTRL_FLUSH          11/* opt - 'flush' buffered output */
# define BIO_CTRL_DUP            12/* man - extra stuff for 'duped' BIO */
# define BIO_CTRL_WPENDING       13/* opt - number of bytes still to write */
# define BIO_CTRL_SET_CALLBACK   14/* opt - set callback function */
# define BIO_CTRL_GET_CALLBACK   15/* opt - set callback function */

# define BIO_CTRL_PEEK           29/* BIO_f_buffer special */
# define BIO_CTRL_SET_FILENAME   30/* BIO_s_file special */

/* dgram BIO stuff */
# define BIO_CTRL_DGRAM_CONNECT       31/* BIO dgram special */
# define BIO_CTRL_DGRAM_SET_CONNECTED 32/* allow for an externally connected
                                         * socket to be passed in */
# define BIO_CTRL_DGRAM_SET_RECV_TIMEOUT 33/* setsockopt, essentially */
# define BIO_CTRL_DGRAM_GET_RECV_TIMEOUT 34/* getsockopt, essentially */
# define BIO_CTRL_DGRAM_SET_SEND_TIMEOUT 35/* setsockopt, essentially */
# define BIO_CTRL_DGRAM_GET_SEND_TIMEOUT 36/* getsockopt, essentially */

# define BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP 37/* flag whether the last */
# define BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP 38/* I/O operation timed out */

/* #ifdef IP_MTU_DISCOVER */
# define BIO_CTRL_DGRAM_MTU_DISCOVER       39/* set DF bit on egress packets */
/* #endif */

# define BIO_CTRL_DGRAM_QUERY_MTU          40/* as kernel for current MTU */
# define BIO_CTRL_DGRAM_GET_FALLBACK_MTU   47
# define BIO_CTRL_DGRAM_GET_MTU            41/* get cached value for MTU */
# define BIO_CTRL_DGRAM_SET_MTU            42/* set cached value for MTU.
                                              * want to use this if asking
                                              * the kernel fails */

# define BIO_CTRL_DGRAM_MTU_EXCEEDED       43/* check whether the MTU was
                                              * exceed in the previous write
                                              * operation */

# define BIO_CTRL_DGRAM_GET_PEER           46
# define BIO_CTRL_DGRAM_SET_PEER           44/* Destination for the data */

# define BIO_CTRL_DGRAM_SET_NEXT_TIMEOUT   45/* Next DTLS handshake timeout
                                              * to adjust socket timeouts */
# define BIO_CTRL_DGRAM_SET_DONT_FRAG      48

# define BIO_CTRL_DGRAM_GET_MTU_OVERHEAD   49

/* Deliberately outside of OPENSSL_NO_SCTP - used in bss_dgram.c */
#  define BIO_CTRL_DGRAM_SCTP_SET_IN_HANDSHAKE    50
# ifndef OPENSSL_NO_SCTP
/* SCTP stuff */
#  define BIO_CTRL_DGRAM_SCTP_ADD_AUTH_KEY                51
#  define BIO_CTRL_DGRAM_SCTP_NEXT_AUTH_KEY               52
#  define BIO_CTRL_DGRAM_SCTP_AUTH_CCS_RCVD               53
#  define BIO_CTRL_DGRAM_SCTP_GET_SNDINFO         60
#  define BIO_CTRL_DGRAM_SCTP_SET_SNDINFO         61
#  define BIO_CTRL_DGRAM_SCTP_GET_RCVINFO         62
#  define BIO_CTRL_DGRAM_SCTP_SET_RCVINFO         63
#  define BIO_CTRL_DGRAM_SCTP_GET_PRINFO                  64
#  define BIO_CTRL_DGRAM_SCTP_SET_PRINFO                  65
#  define BIO_CTRL_DGRAM_SCTP_SAVE_SHUTDOWN               70
# endif

# define BIO_CTRL_DGRAM_SET_PEEK_MODE      71

/*
 * internal BIO:
 * # define BIO_CTRL_SET_KTLS_SEND                 72
 * # define BIO_CTRL_SET_KTLS_SEND_CTRL_MSG        74
 * # define BIO_CTRL_CLEAR_KTLS_CTRL_MSG           75
 */

# define BIO_CTRL_GET_KTLS_SEND                 73
# define BIO_CTRL_GET_KTLS_RECV                 76

# define BIO_CTRL_DGRAM_SCTP_WAIT_FOR_DRY       77
# define BIO_CTRL_DGRAM_SCTP_MSG_WAITING        78

/* BIO_f_prefix controls */
# define BIO_CTRL_SET_PREFIX                    79
# define BIO_CTRL_SET_INDENT                    80
# define BIO_CTRL_GET_INDENT                    81

# ifndef OPENSSL_NO_KTLS
#  define BIO_get_ktls_send(b)         \
     (BIO_ctrl(b, BIO_CTRL_GET_KTLS_SEND, 0, NULL) > 0)
#  define BIO_get_ktls_recv(b)         \
     (BIO_ctrl(b, BIO_CTRL_GET_KTLS_RECV, 0, NULL) > 0)
# else
#  define BIO_get_ktls_send(b)  (0)
#  define BIO_get_ktls_recv(b)  (0)
# endif

/* modifiers */
# define BIO_FP_READ             0x02
# define BIO_FP_WRITE            0x04
# define BIO_FP_APPEND           0x08
# define BIO_FP_TEXT             0x10

# define BIO_FLAGS_READ          0x01
# define BIO_FLAGS_WRITE         0x02
# define BIO_FLAGS_IO_SPECIAL    0x04
# define BIO_FLAGS_RWS (BIO_FLAGS_READ|BIO_FLAGS_WRITE|BIO_FLAGS_IO_SPECIAL)
# define BIO_FLAGS_SHOULD_RETRY  0x08
# ifndef OPENSSL_NO_DEPRECATED_3_0
/* This #define was replaced by an internal constant and should not be used. */
#  define BIO_FLAGS_UPLINK       0
# endif

# define BIO_FLAGS_BASE64_NO_NL  0x100

/*
 * This is used with memory BIOs:
 * BIO_FLAGS_MEM_RDONLY means we shouldn't free up or change the data in any way;
 * BIO_FLAGS_NONCLEAR_RST means we shouldn't clear data on reset.
 */
# define BIO_FLAGS_MEM_RDONLY    0x200
# define BIO_FLAGS_NONCLEAR_RST  0x400
# define BIO_FLAGS_IN_EOF        0x800

/* the BIO FLAGS values 0x1000 to 0x4000 are reserved for internal KTLS flags */

typedef union bio_addr_st BIO_ADDR;
typedef struct bio_addrinfo_st BIO_ADDRINFO;

int BIO_get_new_index(void);
void BIO_set_flags(BIO *b, int flags);
int BIO_test_flags(const BIO *b, int flags);
void BIO_clear_flags(BIO *b, int flags);

# define BIO_get_flags(b) BIO_test_flags(b, ~(0x0))
# define BIO_set_retry_special(b) \
                BIO_set_flags(b, (BIO_FLAGS_IO_SPECIAL|BIO_FLAGS_SHOULD_RETRY))
# define BIO_set_retry_read(b) \
                BIO_set_flags(b, (BIO_FLAGS_READ|BIO_FLAGS_SHOULD_RETRY))
# define BIO_set_retry_write(b) \
                BIO_set_flags(b, (BIO_FLAGS_WRITE|BIO_FLAGS_SHOULD_RETRY))

/* These are normally used internally in BIOs */
# define BIO_clear_retry_flags(b) \
                BIO_clear_flags(b, (BIO_FLAGS_RWS|BIO_FLAGS_SHOULD_RETRY))
# define BIO_get_retry_flags(b) \
                BIO_test_flags(b, (BIO_FLAGS_RWS|BIO_FLAGS_SHOULD_RETRY))

/* These should be used by the application to tell why we should retry */
# define BIO_should_read(a)              BIO_test_flags(a, BIO_FLAGS_READ)
# define BIO_should_write(a)             BIO_test_flags(a, BIO_FLAGS_WRITE)
# define BIO_should_io_special(a)        BIO_test_flags(a, BIO_FLAGS_IO_SPECIAL)
# define BIO_retry_type(a)               BIO_test_flags(a, BIO_FLAGS_RWS)
# define BIO_should_retry(a)             BIO_test_flags(a, BIO_FLAGS_SHOULD_RETRY)

/*
 * The next three are used in conjunction with the BIO_should_io_special()
 * condition.  After this returns true, BIO *BIO_get_retry_BIO(BIO *bio, int
 * *reason); will walk the BIO stack and return the 'reason' for the special
 * and the offending BIO. Given a BIO, BIO_get_retry_reason(bio) will return
 * the code.
 */
/*
 * Returned from the SSL bio when the certificate retrieval code had an error
 */
# define BIO_RR_SSL_X509_LOOKUP          0x01
/* Returned from the connect BIO when a connect would have blocked */
# define BIO_RR_CONNECT                  0x02
/* Returned from the accept BIO when an accept would have blocked */
# define BIO_RR_ACCEPT                   0x03

/* These are passed by the BIO callback */
# define BIO_CB_FREE     0x01
# define BIO_CB_READ     0x02
# define BIO_CB_WRITE    0x03
# define BIO_CB_PUTS     0x04
# define BIO_CB_GETS     0x05
# define BIO_CB_CTRL     0x06

/*
 * The callback is called before and after the underling operation, The
 * BIO_CB_RETURN flag indicates if it is after the call
 */
# define BIO_CB_RETURN   0x80
# define BIO_CB_return(a) ((a)|BIO_CB_RETURN)
# define BIO_cb_pre(a)   (!((a)&BIO_CB_RETURN))
# define BIO_cb_post(a)  ((a)&BIO_CB_RETURN)

# ifndef OPENSSL_NO_DEPRECATED_3_0
typedef long (*BIO_callback_fn)(BIO *b, int oper, const char *argp, int argi,
                                long argl, long ret);
OSSL_DEPRECATEDIN_3_0 BIO_callback_fn BIO_get_callback(const BIO *b);
OSSL_DEPRECATEDIN_3_0 void BIO_set_callback(BIO *b, BIO_callback_fn callback);
OSSL_DEPRECATEDIN_3_0 long BIO_debug_callback(BIO *bio, int cmd,
                                               const char *argp, int argi,
                                               long argl, long ret);
# endif

typedef long (*BIO_callback_fn_ex)(BIO *b, int oper, const char *argp,
                                   size_t len, int argi,
                                   long argl, int ret, size_t *processed);
BIO_callback_fn_ex BIO_get_callback_ex(const BIO *b);
void BIO_set_callback_ex(BIO *b, BIO_callback_fn_ex callback);
long BIO_debug_callback_ex(BIO *bio, int oper, const char *argp, size_t len,
                           int argi, long argl, int ret, size_t *processed);

char *BIO_get_callback_arg(const BIO *b);
void BIO_set_callback_arg(BIO *b, char *arg);

typedef struct bio_method_st BIO_METHOD;

const char *BIO_method_name(const BIO *b);
int BIO_method_type(const BIO *b);

typedef int BIO_info_cb(BIO *, int, int);
typedef BIO_info_cb bio_info_cb;  /* backward compatibility */

SKM_DEFINE_STACK_OF_INTERNAL(BIO, BIO, BIO)
#define sk_BIO_num(sk) OPENSSL_sk_num(ossl_check_const_BIO_sk_type(sk))
#define sk_BIO_value(sk, idx) ((BIO *)OPENSSL_sk_value(ossl_check_const_BIO_sk_type(sk), (idx)))
#define sk_BIO_new(cmp) ((STACK_OF(BIO) *)OPENSSL_sk_new(ossl_check_BIO_compfunc_type(cmp)))
#define sk_BIO_new_null() ((STACK_OF(BIO) *)OPENSSL_sk_new_null())
#define sk_BIO_new_reserve(cmp, n) ((STACK_OF(BIO) *)OPENSSL_sk_new_reserve(ossl_check_BIO_compfunc_type(cmp), (n)))
#define sk_BIO_reserve(sk, n) OPENSSL_sk_reserve(ossl_check_BIO_sk_type(sk), (n))
#define sk_BIO_free(sk) OPENSSL_sk_free(ossl_check_BIO_sk_type(sk))
#define sk_BIO_zero(sk) OPENSSL_sk_zero(ossl_check_BIO_sk_type(sk))
#define sk_BIO_delete(sk, i) ((BIO *)OPENSSL_sk_delete(ossl_check_BIO_sk_type(sk), (i)))
#define sk_BIO_delete_ptr(sk, ptr) ((BIO *)OPENSSL_sk_delete_ptr(ossl_check_BIO_sk_type(sk), ossl_check_BIO_type(ptr)))
#define sk_BIO_push(sk, ptr) OPENSSL_sk_push(ossl_check_BIO_sk_type(sk), ossl_check_BIO_type(ptr))
#define sk_BIO_unshift(sk, ptr) OPENSSL_sk_unshift(ossl_check_BIO_sk_type(sk), ossl_check_BIO_type(ptr))
#define sk_BIO_pop(sk) ((BIO *)OPENSSL_sk_pop(ossl_check_BIO_sk_type(sk)))
#define sk_BIO_shift(sk) ((BIO *)OPENSSL_sk_shift(ossl_check_BIO_sk_type(sk)))
#define sk_BIO_pop_free(sk, freefunc) OPENSSL_sk_pop_free(ossl_check_BIO_sk_type(sk),ossl_check_BIO_freefunc_type(freefunc))
#define sk_BIO_insert(sk, ptr, idx) OPENSSL_sk_insert(ossl_check_BIO_sk_type(sk), ossl_check_BIO_type(ptr), (idx))
#define sk_BIO_set(sk, idx, ptr) ((BIO *)OPENSSL_sk_set(ossl_check_BIO_sk_type(sk), (idx), ossl_check_BIO_type(ptr)))
#define sk_BIO_find(sk, ptr) OPENSSL_sk_find(ossl_check_BIO_sk_type(sk), ossl_check_BIO_type(ptr))
#define sk_BIO_find_ex(sk, ptr) OPENSSL_sk_find_ex(ossl_check_BIO_sk_type(sk), ossl_check_BIO_type(ptr))
#define sk_BIO_find_all(sk, ptr, pnum) OPENSSL_sk_find_all(ossl_check_BIO_sk_type(sk), ossl_check_BIO_type(ptr), pnum)
#define sk_BIO_sort(sk) OPENSSL_sk_sort(ossl_check_BIO_sk_type(sk))
#define sk_BIO_is_sorted(sk) OPENSSL_sk_is_sorted(ossl_check_const_BIO_sk_type(sk))
#define sk_BIO_dup(sk) ((STACK_OF(BIO) *)OPENSSL_sk_dup(ossl_check_const_BIO_sk_type(sk)))
#define sk_BIO_deep_copy(sk, copyfunc, freefunc) ((STACK_OF(BIO) *)OPENSSL_sk_deep_copy(ossl_check_const_BIO_sk_type(sk), ossl_check_BIO_copyfunc_type(copyfunc), ossl_check_BIO_freefunc_type(freefunc)))
#define sk_BIO_set_cmp_func(sk, cmp) ((sk_BIO_compfunc)OPENSSL_sk_set_cmp_func(ossl_check_BIO_sk_type(sk), ossl_check_BIO_compfunc_type(cmp)))



/* Prefix and suffix callback in ASN1 BIO */
typedef int asn1_ps_func (BIO *b, unsigned char **pbuf, int *plen,
                          void *parg);

typedef void (*BIO_dgram_sctp_notification_handler_fn) (BIO *b,
                                                        void *context,
                                                        void *buf);
# ifndef OPENSSL_NO_SCTP
/* SCTP parameter structs */
struct bio_dgram_sctp_sndinfo {
    uint16_t snd_sid;
    uint16_t snd_flags;
    uint32_t snd_ppid;
    uint32_t snd_context;
};

struct bio_dgram_sctp_rcvinfo {
    uint16_t rcv_sid;
    uint16_t rcv_ssn;
    uint16_t rcv_flags;
    uint32_t rcv_ppid;
    uint32_t rcv_tsn;
    uint32_t rcv_cumtsn;
    uint32_t rcv_context;
};

struct bio_dgram_sctp_prinfo {
    uint16_t pr_policy;
    uint32_t pr_value;
};
# endif

/*
 * #define BIO_CONN_get_param_hostname BIO_ctrl
 */

# define BIO_C_SET_CONNECT                       100
# define BIO_C_DO_STATE_MACHINE                  101
# define BIO_C_SET_NBIO                          102
/* # define BIO_C_SET_PROXY_PARAM                   103 */
# define BIO_C_SET_FD                            104
# define BIO_C_GET_FD                            105
# define BIO_C_SET_FILE_PTR                      106
# define BIO_C_GET_FILE_PTR                      107
# define BIO_C_SET_FILENAME                      108
# define BIO_C_SET_SSL                           109
# define BIO_C_GET_SSL                           110
# define BIO_C_SET_MD                            111
# define BIO_C_GET_MD                            112
# define BIO_C_GET_CIPHER_STATUS                 113
# define BIO_C_SET_BUF_MEM                       114
# define BIO_C_GET_BUF_MEM_PTR                   115
# define BIO_C_GET_BUFF_NUM_LINES                116
# define BIO_C_SET_BUFF_SIZE                     117
# define BIO_C_SET_ACCEPT                        118
# define BIO_C_SSL_MODE                          119
# define BIO_C_GET_MD_CTX                        120
/* # define BIO_C_GET_PROXY_PARAM                   121 */
# define BIO_C_SET_BUFF_READ_DATA                122/* data to read first */
# define BIO_C_GET_CONNECT                       123
# define BIO_C_GET_ACCEPT                        124
# define BIO_C_SET_SSL_RENEGOTIATE_BYTES         125
# define BIO_C_GET_SSL_NUM_RENEGOTIATES          126
# define BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT       127
# define BIO_C_FILE_SEEK                         128
# define BIO_C_GET_CIPHER_CTX                    129
# define BIO_C_SET_BUF_MEM_EOF_RETURN            130/* return end of input
                                                     * value */
# define BIO_C_SET_BIND_MODE                     131
# define BIO_C_GET_BIND_MODE                     132
# define BIO_C_FILE_TELL                         133
# define BIO_C_GET_SOCKS                         134
# define BIO_C_SET_SOCKS                         135

# define BIO_C_SET_WRITE_BUF_SIZE                136/* for BIO_s_bio */
# define BIO_C_GET_WRITE_BUF_SIZE                137
# define BIO_C_MAKE_BIO_PAIR                     138
# define BIO_C_DESTROY_BIO_PAIR                  139
# define BIO_C_GET_WRITE_GUARANTEE               140
# define BIO_C_GET_READ_REQUEST                  141
# define BIO_C_SHUTDOWN_WR                       142
# define BIO_C_NREAD0                            143
# define BIO_C_NREAD                             144
# define BIO_C_NWRITE0                           145
# define BIO_C_NWRITE                            146
# define BIO_C_RESET_READ_REQUEST                147
# define BIO_C_SET_MD_CTX                        148

# define BIO_C_SET_PREFIX                        149
# define BIO_C_GET_PREFIX                        150
# define BIO_C_SET_SUFFIX                        151
# define BIO_C_GET_SUFFIX                        152

# define BIO_C_SET_EX_ARG                        153
# define BIO_C_GET_EX_ARG                        154

# define BIO_C_SET_CONNECT_MODE                  155

# define BIO_set_app_data(s,arg)         BIO_set_ex_data(s,0,arg)
# define BIO_get_app_data(s)             BIO_get_ex_data(s,0)

# define BIO_set_nbio(b,n)             BIO_ctrl(b,BIO_C_SET_NBIO,(n),NULL)

# ifndef OPENSSL_NO_SOCK
/* IP families we support, for BIO_s_connect() and BIO_s_accept() */
/* Note: the underlying operating system may not support some of them */
#  define BIO_FAMILY_IPV4                         4
#  define BIO_FAMILY_IPV6                         6
#  define BIO_FAMILY_IPANY                        256

/* BIO_s_connect() */
#  define BIO_set_conn_hostname(b,name) BIO_ctrl(b,BIO_C_SET_CONNECT,0, \
                                                 (char *)(name))
#  define BIO_set_conn_port(b,port)     BIO_ctrl(b,BIO_C_SET_CONNECT,1, \
                                                 (char *)(port))
#  define BIO_set_conn_address(b,addr)  BIO_ctrl(b,BIO_C_SET_CONNECT,2, \
                                                 (char *)(addr))
#  define BIO_set_conn_ip_family(b,f)   BIO_int_ctrl(b,BIO_C_SET_CONNECT,3,f)
#  define BIO_get_conn_hostname(b)      ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_CONNECT,0))
#  define BIO_get_conn_port(b)          ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_CONNECT,1))
#  define BIO_get_conn_address(b)       ((const BIO_ADDR *)BIO_ptr_ctrl(b,BIO_C_GET_CONNECT,2))
#  define BIO_get_conn_ip_family(b)     BIO_ctrl(b,BIO_C_GET_CONNECT,3,NULL)
#  define BIO_set_conn_mode(b,n)        BIO_ctrl(b,BIO_C_SET_CONNECT_MODE,(n),NULL)

/* BIO_s_accept() */
#  define BIO_set_accept_name(b,name)   BIO_ctrl(b,BIO_C_SET_ACCEPT,0, \
                                                 (char *)(name))
#  define BIO_set_accept_port(b,port)   BIO_ctrl(b,BIO_C_SET_ACCEPT,1, \
                                                 (char *)(port))
#  define BIO_get_accept_name(b)        ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,0))
#  define BIO_get_accept_port(b)        ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,1))
#  define BIO_get_peer_name(b)          ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,2))
#  define BIO_get_peer_port(b)          ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,3))
/* #define BIO_set_nbio(b,n)    BIO_ctrl(b,BIO_C_SET_NBIO,(n),NULL) */
#  define BIO_set_nbio_accept(b,n)      BIO_ctrl(b,BIO_C_SET_ACCEPT,2,(n)?(void *)"a":NULL)
#  define BIO_set_accept_bios(b,bio)    BIO_ctrl(b,BIO_C_SET_ACCEPT,3, \
                                                 (char *)(bio))
#  define BIO_set_accept_ip_family(b,f) BIO_int_ctrl(b,BIO_C_SET_ACCEPT,4,f)
#  define BIO_get_accept_ip_family(b)   BIO_ctrl(b,BIO_C_GET_ACCEPT,4,NULL)

/* Aliases kept for backward compatibility */
#  define BIO_BIND_NORMAL                 0
#  define BIO_BIND_REUSEADDR              BIO_SOCK_REUSEADDR
#  define BIO_BIND_REUSEADDR_IF_UNUSED    BIO_SOCK_REUSEADDR
#  define BIO_set_bind_mode(b,mode) BIO_ctrl(b,BIO_C_SET_BIND_MODE,mode,NULL)
#  define BIO_get_bind_mode(b)    BIO_ctrl(b,BIO_C_GET_BIND_MODE,0,NULL)
# endif /* OPENSSL_NO_SOCK */

# define BIO_do_connect(b)       BIO_do_handshake(b)
# define BIO_do_accept(b)        BIO_do_handshake(b)

# define BIO_do_handshake(b)     BIO_ctrl(b,BIO_C_DO_STATE_MACHINE,0,NULL)

/* BIO_s_datagram(), BIO_s_fd(), BIO_s_socket(), BIO_s_accept() and BIO_s_connect() */
# define BIO_set_fd(b,fd,c)      BIO_int_ctrl(b,BIO_C_SET_FD,c,fd)
# define BIO_get_fd(b,c)         BIO_ctrl(b,BIO_C_GET_FD,0,(char *)(c))

/* BIO_s_file() */
# define BIO_set_fp(b,fp,c)      BIO_ctrl(b,BIO_C_SET_FILE_PTR,c,(char *)(fp))
# define BIO_get_fp(b,fpp)       BIO_ctrl(b,BIO_C_GET_FILE_PTR,0,(char *)(fpp))

/* BIO_s_fd() and BIO_s_file() */
# define BIO_seek(b,ofs) (int)BIO_ctrl(b,BIO_C_FILE_SEEK,ofs,NULL)
# define BIO_tell(b)     (int)BIO_ctrl(b,BIO_C_FILE_TELL,0,NULL)

/*
 * name is cast to lose const, but might be better to route through a
 * function so we can do it safely
 */
# ifdef CONST_STRICT
/*
 * If you are wondering why this isn't defined, its because CONST_STRICT is
 * purely a compile-time kludge to allow const to be checked.
 */
int BIO_read_filename(BIO *b, const char *name);
# else
#  define BIO_read_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, \
                BIO_CLOSE|BIO_FP_READ,(char *)(name))
# endif
# define BIO_write_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, \
                BIO_CLOSE|BIO_FP_WRITE,name)
# define BIO_append_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, \
                BIO_CLOSE|BIO_FP_APPEND,name)
# define BIO_rw_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, \
                BIO_CLOSE|BIO_FP_READ|BIO_FP_WRITE,name)

/*
 * WARNING WARNING, this ups the reference count on the read bio of the SSL
 * structure.  This is because the ssl read BIO is now pointed to by the
 * next_bio field in the bio.  So when you free the BIO, make sure you are
 * doing a BIO_free_all() to catch the underlying BIO.
 */
# define BIO_set_ssl(b,ssl,c)    BIO_ctrl(b,BIO_C_SET_SSL,c,(char *)(ssl))
# define BIO_get_ssl(b,sslp)     BIO_ctrl(b,BIO_C_GET_SSL,0,(char *)(sslp))
# define BIO_set_ssl_mode(b,client)      BIO_ctrl(b,BIO_C_SSL_MODE,client,NULL)
# define BIO_set_ssl_renegotiate_bytes(b,num) \
        BIO_ctrl(b,BIO_C_SET_SSL_RENEGOTIATE_BYTES,num,NULL)
# define BIO_get_num_renegotiates(b) \
        BIO_ctrl(b,BIO_C_GET_SSL_NUM_RENEGOTIATES,0,NULL)
# define BIO_set_ssl_renegotiate_timeout(b,seconds) \
        BIO_ctrl(b,BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT,seconds,NULL)

/* defined in evp.h */
/* #define BIO_set_md(b,md)     BIO_ctrl(b,BIO_C_SET_MD,1,(char *)(md)) */

# define BIO_get_mem_data(b,pp)  BIO_ctrl(b,BIO_CTRL_INFO,0,(char *)(pp))
# define BIO_set_mem_buf(b,bm,c) BIO_ctrl(b,BIO_C_SET_BUF_MEM,c,(char *)(bm))
# define BIO_get_mem_ptr(b,pp)   BIO_ctrl(b,BIO_C_GET_BUF_MEM_PTR,0, \
                                          (char *)(pp))
# define BIO_set_mem_eof_return(b,v) \
                                BIO_ctrl(b,BIO_C_SET_BUF_MEM_EOF_RETURN,v,NULL)

/* For the BIO_f_buffer() type */
# define BIO_get_buffer_num_lines(b)     BIO_ctrl(b,BIO_C_GET_BUFF_NUM_LINES,0,NULL)
# define BIO_set_buffer_size(b,size)     BIO_ctrl(b,BIO_C_SET_BUFF_SIZE,size,NULL)
# define BIO_set_read_buffer_size(b,size) BIO_int_ctrl(b,BIO_C_SET_BUFF_SIZE,size,0)
# define BIO_set_write_buffer_size(b,size) BIO_int_ctrl(b,BIO_C_SET_BUFF_SIZE,size,1)
# define BIO_set_buffer_read_data(b,buf,num) BIO_ctrl(b,BIO_C_SET_BUFF_READ_DATA,num,buf)

/* Don't use the next one unless you know what you are doing :-) */
# define BIO_dup_state(b,ret)    BIO_ctrl(b,BIO_CTRL_DUP,0,(char *)(ret))

# define BIO_reset(b)            (int)BIO_ctrl(b,BIO_CTRL_RESET,0,NULL)
# define BIO_eof(b)              (int)BIO_ctrl(b,BIO_CTRL_EOF,0,NULL)
# define BIO_set_close(b,c)      (int)BIO_ctrl(b,BIO_CTRL_SET_CLOSE,(c),NULL)
# define BIO_get_close(b)        (int)BIO_ctrl(b,BIO_CTRL_GET_CLOSE,0,NULL)
# define BIO_pending(b)          (int)BIO_ctrl(b,BIO_CTRL_PENDING,0,NULL)
# define BIO_wpending(b)         (int)BIO_ctrl(b,BIO_CTRL_WPENDING,0,NULL)
/* ...pending macros have inappropriate return type */
size_t BIO_ctrl_pending(BIO *b);
size_t BIO_ctrl_wpending(BIO *b);
# define BIO_flush(b)            (int)BIO_ctrl(b,BIO_CTRL_FLUSH,0,NULL)
# define BIO_get_info_callback(b,cbp) (int)BIO_ctrl(b,BIO_CTRL_GET_CALLBACK,0, \
                                                   cbp)
# define BIO_set_info_callback(b,cb) (int)BIO_callback_ctrl(b,BIO_CTRL_SET_CALLBACK,cb)

/* For the BIO_f_buffer() type */
# define BIO_buffer_get_num_lines(b) BIO_ctrl(b,BIO_CTRL_GET,0,NULL)
# define BIO_buffer_peek(b,s,l) BIO_ctrl(b,BIO_CTRL_PEEK,(l),(s))

/* For BIO_s_bio() */
# define BIO_set_write_buf_size(b,size) (int)BIO_ctrl(b,BIO_C_SET_WRITE_BUF_SIZE,size,NULL)
# define BIO_get_write_buf_size(b,size) (size_t)BIO_ctrl(b,BIO_C_GET_WRITE_BUF_SIZE,size,NULL)
# define BIO_make_bio_pair(b1,b2)   (int)BIO_ctrl(b1,BIO_C_MAKE_BIO_PAIR,0,b2)
# define BIO_destroy_bio_pair(b)    (int)BIO_ctrl(b,BIO_C_DESTROY_BIO_PAIR,0,NULL)
# define BIO_shutdown_wr(b) (int)BIO_ctrl(b, BIO_C_SHUTDOWN_WR, 0, NULL)
/* macros with inappropriate type -- but ...pending macros use int too: */
# define BIO_get_write_guarantee(b) (int)BIO_ctrl(b,BIO_C_GET_WRITE_GUARANTEE,0,NULL)
# define BIO_get_read_request(b)    (int)BIO_ctrl(b,BIO_C_GET_READ_REQUEST,0,NULL)
size_t BIO_ctrl_get_write_guarantee(BIO *b);
size_t BIO_ctrl_get_read_request(BIO *b);
int BIO_ctrl_reset_read_request(BIO *b);

/* ctrl macros for dgram */
# define BIO_ctrl_dgram_connect(b,peer)  \
                     (int)BIO_ctrl(b,BIO_CTRL_DGRAM_CONNECT,0, (char *)(peer))
# define BIO_ctrl_set_connected(b,peer) \
         (int)BIO_ctrl(b, BIO_CTRL_DGRAM_SET_CONNECTED, 0, (char *)(peer))
# define BIO_dgram_recv_timedout(b) \
         (int)BIO_ctrl(b, BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP, 0, NULL)
# define BIO_dgram_send_timedout(b) \
         (int)BIO_ctrl(b, BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP, 0, NULL)
# define BIO_dgram_get_peer(b,peer) \
         (int)BIO_ctrl(b, BIO_CTRL_DGRAM_GET_PEER, 0, (char *)(peer))
# define BIO_dgram_set_peer(b,peer) \
         (int)BIO_ctrl(b, BIO_CTRL_DGRAM_SET_PEER, 0, (char *)(peer))
# define BIO_dgram_get_mtu_overhead(b) \
         (unsigned int)BIO_ctrl((b), BIO_CTRL_DGRAM_GET_MTU_OVERHEAD, 0, NULL)

/* ctrl macros for BIO_f_prefix */
# define BIO_set_prefix(b,p) BIO_ctrl((b), BIO_CTRL_SET_PREFIX, 0, (void *)(p))
# define BIO_set_indent(b,i) BIO_ctrl((b), BIO_CTRL_SET_INDENT, (i), NULL)
# define BIO_get_indent(b) BIO_ctrl((b), BIO_CTRL_GET_INDENT, 0, NULL)

#define BIO_get_ex_new_index(l, p, newf, dupf, freef) \
    CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_BIO, l, p, newf, dupf, freef)
int BIO_set_ex_data(BIO *bio, int idx, void *data);
void *BIO_get_ex_data(const BIO *bio, int idx);
uint64_t BIO_number_read(BIO *bio);
uint64_t BIO_number_written(BIO *bio);

/* For BIO_f_asn1() */
int BIO_asn1_set_prefix(BIO *b, asn1_ps_func *prefix,
                        asn1_ps_func *prefix_free);
int BIO_asn1_get_prefix(BIO *b, asn1_ps_func **pprefix,
                        asn1_ps_func **pprefix_free);
int BIO_asn1_set_suffix(BIO *b, asn1_ps_func *suffix,
                        asn1_ps_func *suffix_free);
int BIO_asn1_get_suffix(BIO *b, asn1_ps_func **psuffix,
                        asn1_ps_func **psuffix_free);

const BIO_METHOD *BIO_s_file(void);
BIO *BIO_new_file(const char *filename, const char *mode);
BIO *BIO_new_from_core_bio(OSSL_LIB_CTX *libctx, OSSL_CORE_BIO *corebio);
# ifndef OPENSSL_NO_STDIO
BIO *BIO_new_fp(FILE *stream, int close_flag);
# endif
BIO *BIO_new_ex(OSSL_LIB_CTX *libctx, const BIO_METHOD *method);
BIO *BIO_new(const BIO_METHOD *type);
int BIO_free(BIO *a);
void BIO_set_data(BIO *a, void *ptr);
void *BIO_get_data(BIO *a);
void BIO_set_init(BIO *a, int init);
int BIO_get_init(BIO *a);
void BIO_set_shutdown(BIO *a, int shut);
int BIO_get_shutdown(BIO *a);
void BIO_vfree(BIO *a);
int BIO_up_ref(BIO *a);
int BIO_read(BIO *b, void *data, int dlen);
int BIO_read_ex(BIO *b, void *data, size_t dlen, size_t *readbytes);
int BIO_gets(BIO *bp, char *buf, int size);
int BIO_get_line(BIO *bio, char *buf, int size);
int BIO_write(BIO *b, const void *data, int dlen);
int BIO_write_ex(BIO *b, const void *data, size_t dlen, size_t *written);
int BIO_puts(BIO *bp, const char *buf);
int BIO_indent(BIO *b, int indent, int max);
long BIO_ctrl(BIO *bp, int cmd, long larg, void *parg);
long BIO_callback_ctrl(BIO *b, int cmd, BIO_info_cb *fp);
void *BIO_ptr_ctrl(BIO *bp, int cmd, long larg);
long BIO_int_ctrl(BIO *bp, int cmd, long larg, int iarg);
BIO *BIO_push(BIO *b, BIO *append);
BIO *BIO_pop(BIO *b);
void BIO_free_all(BIO *a);
BIO *BIO_find_type(BIO *b, int bio_type);
BIO *BIO_next(BIO *b);
void BIO_set_next(BIO *b, BIO *next);
BIO *BIO_get_retry_BIO(BIO *bio, int *reason);
int BIO_get_retry_reason(BIO *bio);
void BIO_set_retry_reason(BIO *bio, int reason);
BIO *BIO_dup_chain(BIO *in);

int BIO_nread0(BIO *bio, char **buf);
int BIO_nread(BIO *bio, char **buf, int num);
int BIO_nwrite0(BIO *bio, char **buf);
int BIO_nwrite(BIO *bio, char **buf, int num);

const BIO_METHOD *BIO_s_mem(void);
const BIO_METHOD *BIO_s_secmem(void);
BIO *BIO_new_mem_buf(const void *buf, int len);
# ifndef OPENSSL_NO_SOCK
const BIO_METHOD *BIO_s_socket(void);
const BIO_METHOD *BIO_s_connect(void);
const BIO_METHOD *BIO_s_accept(void);
# endif
const BIO_METHOD *BIO_s_fd(void);
const BIO_METHOD *BIO_s_log(void);
const BIO_METHOD *BIO_s_bio(void);
const BIO_METHOD *BIO_s_null(void);
const BIO_METHOD *BIO_f_null(void);
const BIO_METHOD *BIO_f_buffer(void);
const BIO_METHOD *BIO_f_readbuffer(void);
const BIO_METHOD *BIO_f_linebuffer(void);
const BIO_METHOD *BIO_f_nbio_test(void);
const BIO_METHOD *BIO_f_prefix(void);
const BIO_METHOD *BIO_s_core(void);
# ifndef OPENSSL_NO_DGRAM
const BIO_METHOD *BIO_s_datagram(void);
int BIO_dgram_non_fatal_error(int error);
BIO *BIO_new_dgram(int fd, int close_flag);
#  ifndef OPENSSL_NO_SCTP
const BIO_METHOD *BIO_s_datagram_sctp(void);
BIO *BIO_new_dgram_sctp(int fd, int close_flag);
int BIO_dgram_is_sctp(BIO *bio);
int BIO_dgram_sctp_notification_cb(BIO *b,
                BIO_dgram_sctp_notification_handler_fn handle_notifications,
                void *context);
int BIO_dgram_sctp_wait_for_dry(BIO *b);
int BIO_dgram_sctp_msg_waiting(BIO *b);
#  endif
# endif

# ifndef OPENSSL_NO_SOCK
int BIO_sock_should_retry(int i);
int BIO_sock_non_fatal_error(int error);
int BIO_socket_wait(int fd, int for_read, time_t max_time);
# endif
int BIO_wait(BIO *bio, time_t max_time, unsigned int nap_milliseconds);
int BIO_do_connect_retry(BIO *bio, int timeout, int nap_milliseconds);

int BIO_fd_should_retry(int i);
int BIO_fd_non_fatal_error(int error);
int BIO_dump_cb(int (*cb) (const void *data, size_t len, void *u),
                void *u, const void *s, int len);
int BIO_dump_indent_cb(int (*cb) (const void *data, size_t len, void *u),
                       void *u, const void *s, int len, int indent);
int BIO_dump(BIO *b, const void *bytes, int len);
int BIO_dump_indent(BIO *b, const void *bytes, int len, int indent);
# ifndef OPENSSL_NO_STDIO
int BIO_dump_fp(FILE *fp, const void *s, int len);
int BIO_dump_indent_fp(FILE *fp, const void *s, int len, int indent);
# endif
int BIO_hex_string(BIO *out, int indent, int width, const void *data,
                   int datalen);

# ifndef OPENSSL_NO_SOCK
BIO_ADDR *BIO_ADDR_new(void);
int BIO_ADDR_rawmake(BIO_ADDR *ap, int family,
                     const void *where, size_t wherelen, unsigned short port);
void BIO_ADDR_free(BIO_ADDR *);
void BIO_ADDR_clear(BIO_ADDR *ap);
int BIO_ADDR_family(const BIO_ADDR *ap);
int BIO_ADDR_rawaddress(const BIO_ADDR *ap, void *p, size_t *l);
unsigned short BIO_ADDR_rawport(const BIO_ADDR *ap);
char *BIO_ADDR_hostname_string(const BIO_ADDR *ap, int numeric);
char *BIO_ADDR_service_string(const BIO_ADDR *ap, int numeric);
char *BIO_ADDR_path_string(const BIO_ADDR *ap);

const BIO_ADDRINFO *BIO_ADDRINFO_next(const BIO_ADDRINFO *bai);
int BIO_ADDRINFO_family(const BIO_ADDRINFO *bai);
int BIO_ADDRINFO_socktype(const BIO_ADDRINFO *bai);
int BIO_ADDRINFO_protocol(const BIO_ADDRINFO *bai);
const BIO_ADDR *BIO_ADDRINFO_address(const BIO_ADDRINFO *bai);
void BIO_ADDRINFO_free(BIO_ADDRINFO *bai);

enum BIO_hostserv_priorities {
    BIO_PARSE_PRIO_HOST, BIO_PARSE_PRIO_SERV
};
int BIO_parse_hostserv(const char *hostserv, char **host, char **service,
                       enum BIO_hostserv_priorities hostserv_prio);
enum BIO_lookup_type {
    BIO_LOOKUP_CLIENT, BIO_LOOKUP_SERVER
};
int BIO_lookup(const char *host, const char *service,
               enum BIO_lookup_type lookup_type,
               int family, int socktype, BIO_ADDRINFO **res);
int BIO_lookup_ex(const char *host, const char *service,
                  int lookup_type, int family, int socktype, int protocol,
                  BIO_ADDRINFO **res);
int BIO_sock_error(int sock);
int BIO_socket_ioctl(int fd, long type, void *arg);
int BIO_socket_nbio(int fd, int mode);
int BIO_sock_init(void);
# ifndef OPENSSL_NO_DEPRECATED_1_1_0
#  define BIO_sock_cleanup() while(0) continue
# endif
int BIO_set_tcp_ndelay(int sock, int turn_on);
# ifndef OPENSSL_NO_DEPRECATED_1_1_0
OSSL_DEPRECATEDIN_1_1_0 struct hostent *BIO_gethostbyname(const char *name);
OSSL_DEPRECATEDIN_1_1_0 int BIO_get_port(const char *str, unsigned short *port_ptr);
OSSL_DEPRECATEDIN_1_1_0 int BIO_get_host_ip(const char *str, unsigned char *ip);
OSSL_DEPRECATEDIN_1_1_0 int BIO_get_accept_socket(char *host_port, int mode);
OSSL_DEPRECATEDIN_1_1_0 int BIO_accept(int sock, char **ip_port);
# endif

union BIO_sock_info_u {
    BIO_ADDR *addr;
};
enum BIO_sock_info_type {
    BIO_SOCK_INFO_ADDRESS
};
int BIO_sock_info(int sock,
                  enum BIO_sock_info_type type, union BIO_sock_info_u *info);

#  define BIO_SOCK_REUSEADDR    0x01
#  define BIO_SOCK_V6_ONLY      0x02
#  define BIO_SOCK_KEEPALIVE    0x04
#  define BIO_SOCK_NONBLOCK     0x08
#  define BIO_SOCK_NODELAY      0x10

int BIO_socket(int domain, int socktype, int protocol, int options);
int BIO_connect(int sock, const BIO_ADDR *addr, int options);
int BIO_bind(int sock, const BIO_ADDR *addr, int options);
int BIO_listen(int sock, const BIO_ADDR *addr, int options);
int BIO_accept_ex(int accept_sock, BIO_ADDR *addr, int options);
int BIO_closesocket(int sock);

BIO *BIO_new_socket(int sock, int close_flag);
BIO *BIO_new_connect(const char *host_port);
BIO *BIO_new_accept(const char *host_port);
# endif /* OPENSSL_NO_SOCK*/

BIO *BIO_new_fd(int fd, int close_flag);

int BIO_new_bio_pair(BIO **bio1, size_t writebuf1,
                     BIO **bio2, size_t writebuf2);
/*
 * If successful, returns 1 and in *bio1, *bio2 two BIO pair endpoints.
 * Otherwise returns 0 and sets *bio1 and *bio2 to NULL. Size 0 uses default
 * value.
 */

void BIO_copy_next_retry(BIO *b);

/*
 * long BIO_ghbn_ctrl(int cmd,int iarg,char *parg);
 */

# define ossl_bio__attr__(x)
# if defined(__GNUC__) && defined(__STDC_VERSION__) \
    && !defined(__MINGW32__) && !defined(__MINGW64__) \
    && !defined(__APPLE__)
    /*
     * Because we support the 'z' modifier, which made its appearance in C99,
     * we can't use __attribute__ with pre C99 dialects.
     */
#  if __STDC_VERSION__ >= 199901L
#   undef ossl_bio__attr__
#   define ossl_bio__attr__ __attribute__
#   if __GNUC__*10 + __GNUC_MINOR__ >= 44
#    define ossl_bio__printf__ __gnu_printf__
#   else
#    define ossl_bio__printf__ __printf__
#   endif
#  endif
# endif
int BIO_printf(BIO *bio, const char *format, ...)
ossl_bio__attr__((__format__(ossl_bio__printf__, 2, 3)));
int BIO_vprintf(BIO *bio, const char *format, va_list args)
ossl_bio__attr__((__format__(ossl_bio__printf__, 2, 0)));
int BIO_snprintf(char *buf, size_t n, const char *format, ...)
ossl_bio__attr__((__format__(ossl_bio__printf__, 3, 4)));
int BIO_vsnprintf(char *buf, size_t n, const char *format, va_list args)
ossl_bio__attr__((__format__(ossl_bio__printf__, 3, 0)));
# undef ossl_bio__attr__
# undef ossl_bio__printf__


BIO_METHOD *BIO_meth_new(int type, const char *name);
void BIO_meth_free(BIO_METHOD *biom);
int (*BIO_meth_get_write(const BIO_METHOD *biom)) (BIO *, const char *, int);
int (*BIO_meth_get_write_ex(const BIO_METHOD *biom)) (BIO *, const char *, size_t,
                                                size_t *);
int BIO_meth_set_write(BIO_METHOD *biom,
                       int (*write) (BIO *, const char *, int));
int BIO_meth_set_write_ex(BIO_METHOD *biom,
                       int (*bwrite) (BIO *, const char *, size_t, size_t *));
int (*BIO_meth_get_read(const BIO_METHOD *biom)) (BIO *, char *, int);
int (*BIO_meth_get_read_ex(const BIO_METHOD *biom)) (BIO *, char *, size_t, size_t *);
int BIO_meth_set_read(BIO_METHOD *biom,
                      int (*read) (BIO *, char *, int));
int BIO_meth_set_read_ex(BIO_METHOD *biom,
                         int (*bread) (BIO *, char *, size_t, size_t *));
int (*BIO_meth_get_puts(const BIO_METHOD *biom)) (BIO *, const char *);
int BIO_meth_set_puts(BIO_METHOD *biom,
                      int (*puts) (BIO *, const char *));
int (*BIO_meth_get_gets(const BIO_METHOD *biom)) (BIO *, char *, int);
int BIO_meth_set_gets(BIO_METHOD *biom,
                      int (*ossl_gets) (BIO *, char *, int));
long (*BIO_meth_get_ctrl(const BIO_METHOD *biom)) (BIO *, int, long, void *);
int BIO_meth_set_ctrl(BIO_METHOD *biom,
                      long (*ctrl) (BIO *, int, long, void *));
int (*BIO_meth_get_create(const BIO_METHOD *bion)) (BIO *);
int BIO_meth_set_create(BIO_METHOD *biom, int (*create) (BIO *));
int (*BIO_meth_get_destroy(const BIO_METHOD *biom)) (BIO *);
int BIO_meth_set_destroy(BIO_METHOD *biom, int (*destroy) (BIO *));
long (*BIO_meth_get_callback_ctrl(const BIO_METHOD *biom))
                                 (BIO *, int, BIO_info_cb *);
int BIO_meth_set_callback_ctrl(BIO_METHOD *biom,
                               long (*callback_ctrl) (BIO *, int,
                                                      BIO_info_cb *));

# ifdef  __cplusplus
}
# endif
#endif
                                                                                            node-23.7.0/deps/openssl/config/archs/linux-elf/asm/include/openssl/cmp.h                           0000664 0000000 0000000 00000120243 14746647661 0026263 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        /*
 * WARNING: do not edit!
 * Generated by Makefile from include/openssl/cmp.h.in
 *
 * Copyright 2007-2023 The OpenSSL Project Authors. All Rights Reserved.
 * Copyright Nokia 2007-2019
 * Copyright Siemens AG 2015-2019
 *
 * Licensed under the Apache License 2.0 (the "License").  You may not use
 * this file except in compliance with the License.  You can obtain a copy
 * in the file LICENSE in the source distribution or at
 * https://www.openssl.org/source/license.html
 */



#ifndef OPENSSL_CMP_H
# define OPENSSL_CMP_H

# include <openssl/opensslconf.h>
# ifndef OPENSSL_NO_CMP

#  include <openssl/crmf.h>
#  include <openssl/cmperr.h>
#  include <openssl/cmp_util.h>
#  include <openssl/http.h>

/* explicit #includes not strictly needed since implied by the above: */
#  include <openssl/types.h>
#  include <openssl/safestack.h>
#  include <openssl/x509.h>
#  include <openssl/x509v3.h>

#  ifdef __cplusplus
extern "C" {
#  endif

#  define OSSL_CMP_PVNO 2

/*-
 *   PKIFailureInfo ::= BIT STRING {
 *   -- since we can fail in more than one way!
 *   -- More codes may be added in the future if/when required.
 *       badAlg              (0),
 *       -- unrecognized or unsupported Algorithm Identifier
 *       badMessageCheck     (1),
 *       -- integrity check failed (e.g., signature did not verify)
 *       badRequest          (2),
 *       -- transaction not permitted or supported
 *       badTime             (3),
 *       -- messageTime was not sufficiently close to the system time,
 *       -- as defined by local policy
 *       badCertId           (4),
 *       -- no certificate could be found matching the provided criteria
 *       badDataFormat       (5),
 *       -- the data submitted has the wrong format
 *       wrongAuthority      (6),
 *       -- the authority indicated in the request is different from the
 *       -- one creating the response token
 *       incorrectData       (7),
 *       -- the requester's data is incorrect (for notary services)
 *       missingTimeStamp    (8),
 *       -- when the timestamp is missing but should be there
 *       -- (by policy)
 *       badPOP              (9),
 *       -- the proof-of-possession failed
 *       certRevoked         (10),
 *          -- the certificate has already been revoked
 *       certConfirmed       (11),
 *          -- the certificate has already been confirmed
 *       wrongIntegrity      (12),
 *          -- invalid integrity, password based instead of signature or
 *          -- vice versa
 *       badRecipientNonce   (13),
 *          -- invalid recipient nonce, either missing or wrong value
 *       timeNotAvailable    (14),
 *          -- the TSA's time source is not available
 *       unacceptedPolicy    (15),
 *          -- the requested TSA policy is not supported by the TSA.
 *       unacceptedExtension (16),
 *          -- the requested extension is not supported by the TSA.
 *       addInfoNotAvailable (17),
 *          -- the additional information requested could not be
 *          -- understood or is not available
 *       badSenderNonce      (18),
 *          -- invalid sender nonce, either missing or wrong size
 *       badCertTemplate     (19),
 *          -- invalid cert. template or missing mandatory information
 *       signerNotTrusted    (20),
 *          -- signer of the message unknown or not trusted
 *       transactionIdInUse  (21),
 *          -- the transaction identifier is already in use
 *       unsupportedVersion  (22),
 *          -- the version of the message is not supported
 *       notAuthorized       (23),
 *          -- the sender was not authorized to make the preceding
 *          -- request or perform the preceding action
 *       systemUnavail       (24),
 *       -- the request cannot be handled due to system unavailability
 *       systemFailure       (25),
 *       -- the request cannot be handled due to system failure
 *       duplicateCertReq    (26)
 *       -- certificate cannot be issued because a duplicate
 *       -- certificate already exists
 *   }
 */
#  define OSSL_CMP_PKIFAILUREINFO_badAlg 0
#  define OSSL_CMP_PKIFAILUREINFO_badMessageCheck 1
#  define OSSL_CMP_PKIFAILUREINFO_badRequest 2
#  define OSSL_CMP_PKIFAILUREINFO_badTime 3
#  define OSSL_CMP_PKIFAILUREINFO_badCertId 4
#  define OSSL_CMP_PKIFAILUREINFO_badDataFormat 5
#  define OSSL_CMP_PKIFAILUREINFO_wrongAuthority 6
#  define OSSL_CMP_PKIFAILUREINFO_incorrectData 7
#  define OSSL_CMP_PKIFAILUREINFO_missingTimeStamp 8
#  define OSSL_CMP_PKIFAILUREINFO_badPOP 9
#  define OSSL_CMP_PKIFAILUREINFO_certRevoked 10
#  define OSSL_CMP_PKIFAILUREINFO_certConfirmed 11
#  define OSSL_CMP_PKIFAILUREINFO_wrongIntegrity 12
#  define OSSL_CMP_PKIFAILUREINFO_badRecipientNonce 13
#  define OSSL_CMP_PKIFAILUREINFO_timeNotAvailable 14
#  define OSSL_CMP_PKIFAILUREINFO_unacceptedPolicy 15
#  define OSSL_CMP_PKIFAILUREINFO_unacceptedExtension 16
#  define OSSL_CMP_PKIFAILUREINFO_addInfoNotAvailable 17
#  define OSSL_CMP_PKIFAILUREINFO_badSenderNonce 18
#  define OSSL_CMP_PKIFAILUREINFO_badCertTemplate 19
#  define OSSL_CMP_PKIFAILUREINFO_signerNotTrusted 20
#  define OSSL_CMP_PKIFAILUREINFO_transactionIdInUse 21
#  define OSSL_CMP_PKIFAILUREINFO_unsupportedVersion 22
#  define OSSL_CMP_PKIFAILUREINFO_notAuthorized 23
#  define OSSL_CMP_PKIFAILUREINFO_systemUnavail 24
#  define OSSL_CMP_PKIFAILUREINFO_systemFailure 25
#  define OSSL_CMP_PKIFAILUREINFO_duplicateCertReq 26
#  define OSSL_CMP_PKIFAILUREINFO_MAX 26
#  define OSSL_CMP_PKIFAILUREINFO_MAX_BIT_PATTERN \
    ((1 << (OSSL_CMP_PKIFAILUREINFO_MAX + 1)) - 1)
#  if OSSL_CMP_PKIFAILUREINFO_MAX_BIT_PATTERN > INT_MAX
#   error CMP_PKIFAILUREINFO_MAX bit pattern does not fit in type int
#  endif

typedef ASN1_BIT_STRING OSSL_CMP_PKIFAILUREINFO;

#  define OSSL_CMP_CTX_FAILINFO_badAlg (1 << 0)
#  define OSSL_CMP_CTX_FAILINFO_badMessageCheck (1 << 1)
#  define OSSL_CMP_CTX_FAILINFO_badRequest (1 << 2)
#  define OSSL_CMP_CTX_FAILINFO_badTime (1 << 3)
#  define OSSL_CMP_CTX_FAILINFO_badCertId (1 << 4)
#  define OSSL_CMP_CTX_FAILINFO_badDataFormat (1 << 5)
#  define OSSL_CMP_CTX_FAILINFO_wrongAuthority (1 << 6)
#  define OSSL_CMP_CTX_FAILINFO_incorrectData (1 << 7)
#  define OSSL_CMP_CTX_FAILINFO_missingTimeStamp (1 << 8)
#  define OSSL_CMP_CTX_FAILINFO_badPOP (1 << 9)
#  define OSSL_CMP_CTX_FAILINFO_certRevoked (1 << 10)
#  define OSSL_CMP_CTX_FAILINFO_certConfirmed (1 << 11)
#  define OSSL_CMP_CTX_FAILINFO_wrongIntegrity (1 << 12)
#  define OSSL_CMP_CTX_FAILINFO_badRecipientNonce (1 << 13)
#  define OSSL_CMP_CTX_FAILINFO_timeNotAvailable (1 << 14)
#  define OSSL_CMP_CTX_FAILINFO_unacceptedPolicy (1 << 15)
#  define OSSL_CMP_CTX_FAILINFO_unacceptedExtension (1 << 16)
#  define OSSL_CMP_CTX_FAILINFO_addInfoNotAvailable (1 << 17)
#  define OSSL_CMP_CTX_FAILINFO_badSenderNonce (1 << 18)
#  define OSSL_CMP_CTX_FAILINFO_badCertTemplate (1 << 19)
#  define OSSL_CMP_CTX_FAILINFO_signerNotTrusted (1 << 20)
#  define OSSL_CMP_CTX_FAILINFO_transactionIdInUse (1 << 21)
#  define OSSL_CMP_CTX_FAILINFO_unsupportedVersion (1 << 22)
#  define OSSL_CMP_CTX_FAILINFO_notAuthorized (1 << 23)
#  define OSSL_CMP_CTX_FAILINFO_systemUnavail (1 << 24)
#  define OSSL_CMP_CTX_FAILINFO_systemFailure (1 << 25)
#  define OSSL_CMP_CTX_FAILINFO_duplicateCertReq (1 << 26)

/*-
 *   PKIStatus ::= INTEGER {
 *       accepted                (0),
 *       -- you got exactly what you asked for
 *       grantedWithMods        (1),
 *       -- you got something like what you asked for; the
 *       -- requester is responsible for ascertaining the differences
 *       rejection              (2),
 *       -- you don't get it, more information elsewhere in the message
 *       waiting                (3),
 *       -- the request body part has not yet been processed; expect to
 *       -- hear more later (note: proper handling of this status
 *       -- response MAY use the polling req/rep PKIMessages specified
 *       -- in Section 5.3.22; alternatively, polling in the underlying
 *       -- transport layer MAY have some utility in this regard)
 *       revocationWarning      (4),
 *       -- this message contains a warning that a revocation is
 *       -- imminent
 *       revocationNotification (5),
 *       -- notification that a revocation has occurred
 *       keyUpdateWarning       (6)
 *       -- update already done for the oldCertId specified in
 *       -- CertReqMsg
 *   }
 */
#  define OSSL_CMP_PKISTATUS_request                -3
#  define OSSL_CMP_PKISTATUS_trans                  -2
#  define OSSL_CMP_PKISTATUS_unspecified            -1
#  define OSSL_CMP_PKISTATUS_accepted               0
#  define OSSL_CMP_PKISTATUS_grantedWithMods        1
#  define OSSL_CMP_PKISTATUS_rejection              2
#  define OSSL_CMP_PKISTATUS_waiting                3
#  define OSSL_CMP_PKISTATUS_revocationWarning      4
#  define OSSL_CMP_PKISTATUS_revocationNotification 5
#  define OSSL_CMP_PKISTATUS_keyUpdateWarning       6

typedef ASN1_INTEGER OSSL_CMP_PKISTATUS;
DECLARE_ASN1_ITEM(OSSL_CMP_PKISTATUS)

#  define OSSL_CMP_CERTORENCCERT_CERTIFICATE 0
#  define OSSL_CMP_CERTORENCCERT_ENCRYPTEDCERT 1

/* data type declarations */
typedef struct ossl_cmp_ctx_st OSSL_CMP_CTX;
typedef struct ossl_cmp_pkiheader_st OSSL_CMP_PKIHEADER;
DECLARE_ASN1_FUNCTIONS(OSSL_CMP_PKIHEADER)
typedef struct ossl_cmp_msg_st OSSL_CMP_MSG;
DECLARE_ASN1_DUP_FUNCTION(OSSL_CMP_MSG)
DECLARE_ASN1_ENCODE_FUNCTIONS(OSSL_CMP_MSG, OSSL_CMP_MSG, OSSL_CMP_MSG)
typedef struct ossl_cmp_certstatus_st OSSL_CMP_CERTSTATUS;
SKM_DEFINE_STACK_OF_INTERNAL(OSSL_CMP_CERTSTATUS, OSSL_CMP_CERTSTATUS, OSSL_CMP_CERTSTATUS)
#define sk_OSSL_CMP_CERTSTATUS_num(sk) OPENSSL_sk_num(ossl_check_const_OSSL_CMP_CERTSTATUS_sk_type(sk))
#define sk_OSSL_CMP_CERTSTATUS_value(sk, idx) ((OSSL_CMP_CERTSTATUS *)OPENSSL_sk_value(ossl_check_const_OSSL_CMP_CERTSTATUS_sk_type(sk), (idx)))
#define sk_OSSL_CMP_CERTSTATUS_new(cmp) ((STACK_OF(OSSL_CMP_CERTSTATUS) *)OPENSSL_sk_new(ossl_check_OSSL_CMP_CERTSTATUS_compfunc_type(cmp)))
#define sk_OSSL_CMP_CERTSTATUS_new_null() ((STACK_OF(OSSL_CMP_CERTSTATUS) *)OPENSSL_sk_new_null())
#define sk_OSSL_CMP_CERTSTATUS_new_reserve(cmp, n) ((STACK_OF(OSSL_CMP_CERTSTATUS) *)OPENSSL_sk_new_reserve(ossl_check_OSSL_CMP_CERTSTATUS_compfunc_type(cmp), (n)))
#define sk_OSSL_CMP_CERTSTATUS_reserve(sk, n) OPENSSL_sk_reserve(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk), (n))
#define sk_OSSL_CMP_CERTSTATUS_free(sk) OPENSSL_sk_free(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk))
#define sk_OSSL_CMP_CERTSTATUS_zero(sk) OPENSSL_sk_zero(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk))
#define sk_OSSL_CMP_CERTSTATUS_delete(sk, i) ((OSSL_CMP_CERTSTATUS *)OPENSSL_sk_delete(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk), (i)))
#define sk_OSSL_CMP_CERTSTATUS_delete_ptr(sk, ptr) ((OSSL_CMP_CERTSTATUS *)OPENSSL_sk_delete_ptr(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk), ossl_check_OSSL_CMP_CERTSTATUS_type(ptr)))
#define sk_OSSL_CMP_CERTSTATUS_push(sk, ptr) OPENSSL_sk_push(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk), ossl_check_OSSL_CMP_CERTSTATUS_type(ptr))
#define sk_OSSL_CMP_CERTSTATUS_unshift(sk, ptr) OPENSSL_sk_unshift(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk), ossl_check_OSSL_CMP_CERTSTATUS_type(ptr))
#define sk_OSSL_CMP_CERTSTATUS_pop(sk) ((OSSL_CMP_CERTSTATUS *)OPENSSL_sk_pop(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk)))
#define sk_OSSL_CMP_CERTSTATUS_shift(sk) ((OSSL_CMP_CERTSTATUS *)OPENSSL_sk_shift(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk)))
#define sk_OSSL_CMP_CERTSTATUS_pop_free(sk, freefunc) OPENSSL_sk_pop_free(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk),ossl_check_OSSL_CMP_CERTSTATUS_freefunc_type(freefunc))
#define sk_OSSL_CMP_CERTSTATUS_insert(sk, ptr, idx) OPENSSL_sk_insert(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk), ossl_check_OSSL_CMP_CERTSTATUS_type(ptr), (idx))
#define sk_OSSL_CMP_CERTSTATUS_set(sk, idx, ptr) ((OSSL_CMP_CERTSTATUS *)OPENSSL_sk_set(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk), (idx), ossl_check_OSSL_CMP_CERTSTATUS_type(ptr)))
#define sk_OSSL_CMP_CERTSTATUS_find(sk, ptr) OPENSSL_sk_find(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk), ossl_check_OSSL_CMP_CERTSTATUS_type(ptr))
#define sk_OSSL_CMP_CERTSTATUS_find_ex(sk, ptr) OPENSSL_sk_find_ex(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk), ossl_check_OSSL_CMP_CERTSTATUS_type(ptr))
#define sk_OSSL_CMP_CERTSTATUS_find_all(sk, ptr, pnum) OPENSSL_sk_find_all(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk), ossl_check_OSSL_CMP_CERTSTATUS_type(ptr), pnum)
#define sk_OSSL_CMP_CERTSTATUS_sort(sk) OPENSSL_sk_sort(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk))
#define sk_OSSL_CMP_CERTSTATUS_is_sorted(sk) OPENSSL_sk_is_sorted(ossl_check_const_OSSL_CMP_CERTSTATUS_sk_type(sk))
#define sk_OSSL_CMP_CERTSTATUS_dup(sk) ((STACK_OF(OSSL_CMP_CERTSTATUS) *)OPENSSL_sk_dup(ossl_check_const_OSSL_CMP_CERTSTATUS_sk_type(sk)))
#define sk_OSSL_CMP_CERTSTATUS_deep_copy(sk, copyfunc, freefunc) ((STACK_OF(OSSL_CMP_CERTSTATUS) *)OPENSSL_sk_deep_copy(ossl_check_const_OSSL_CMP_CERTSTATUS_sk_type(sk), ossl_check_OSSL_CMP_CERTSTATUS_copyfunc_type(copyfunc), ossl_check_OSSL_CMP_CERTSTATUS_freefunc_type(freefunc)))
#define sk_OSSL_CMP_CERTSTATUS_set_cmp_func(sk, cmp) ((sk_OSSL_CMP_CERTSTATUS_compfunc)OPENSSL_sk_set_cmp_func(ossl_check_OSSL_CMP_CERTSTATUS_sk_type(sk), ossl_check_OSSL_CMP_CERTSTATUS_compfunc_type(cmp)))

typedef struct ossl_cmp_itav_st OSSL_CMP_ITAV;
DECLARE_ASN1_DUP_FUNCTION(OSSL_CMP_ITAV)
SKM_DEFINE_STACK_OF_INTERNAL(OSSL_CMP_ITAV, OSSL_CMP_ITAV, OSSL_CMP_ITAV)
#define sk_OSSL_CMP_ITAV_num(sk) OPENSSL_sk_num(ossl_check_const_OSSL_CMP_ITAV_sk_type(sk))
#define sk_OSSL_CMP_ITAV_value(sk, idx) ((OSSL_CMP_ITAV *)OPENSSL_sk_value(ossl_check_const_OSSL_CMP_ITAV_sk_type(sk), (idx)))
#define sk_OSSL_CMP_ITAV_new(cmp) ((STACK_OF(OSSL_CMP_ITAV) *)OPENSSL_sk_new(ossl_check_OSSL_CMP_ITAV_compfunc_type(cmp)))
#define sk_OSSL_CMP_ITAV_new_null() ((STACK_OF(OSSL_CMP_ITAV) *)OPENSSL_sk_new_null())
#define sk_OSSL_CMP_ITAV_new_reserve(cmp, n) ((STACK_OF(OSSL_CMP_ITAV) *)OPENSSL_sk_new_reserve(ossl_check_OSSL_CMP_ITAV_compfunc_type(cmp), (n)))
#define sk_OSSL_CMP_ITAV_reserve(sk, n) OPENSSL_sk_reserve(ossl_check_OSSL_CMP_ITAV_sk_type(sk), (n))
#define sk_OSSL_CMP_ITAV_free(sk) OPENSSL_sk_free(ossl_check_OSSL_CMP_ITAV_sk_type(sk))
#define sk_OSSL_CMP_ITAV_zero(sk) OPENSSL_sk_zero(ossl_check_OSSL_CMP_ITAV_sk_type(sk))
#define sk_OSSL_CMP_ITAV_delete(sk, i) ((OSSL_CMP_ITAV *)OPENSSL_sk_delete(ossl_check_OSSL_CMP_ITAV_sk_type(sk), (i)))
#define sk_OSSL_CMP_ITAV_delete_ptr(sk, ptr) ((OSSL_CMP_ITAV *)OPENSSL_sk_delete_ptr(ossl_check_OSSL_CMP_ITAV_sk_type(sk), ossl_check_OSSL_CMP_ITAV_type(ptr)))
#define sk_OSSL_CMP_ITAV_push(sk, ptr) OPENSSL_sk_push(ossl_check_OSSL_CMP_ITAV_sk_type(sk), ossl_check_OSSL_CMP_ITAV_type(ptr))
#define sk_OSSL_CMP_ITAV_unshift(sk, ptr) OPENSSL_sk_unshift(ossl_check_OSSL_CMP_ITAV_sk_type(sk), ossl_check_OSSL_CMP_ITAV_type(ptr))
#define sk_OSSL_CMP_ITAV_pop(sk) ((OSSL_CMP_ITAV *)OPENSSL_sk_pop(ossl_check_OSSL_CMP_ITAV_sk_type(sk)))
#define sk_OSSL_CMP_ITAV_shift(sk) ((OSSL_CMP_ITAV *)OPENSSL_sk_shift(ossl_check_OSSL_CMP_ITAV_sk_type(sk)))
#define sk_OSSL_CMP_ITAV_pop_free(sk, freefunc) OPENSSL_sk_pop_free(ossl_check_OSSL_CMP_ITAV_sk_type(sk),ossl_check_OSSL_CMP_ITAV_freefunc_type(freefunc))
#define sk_OSSL_CMP_ITAV_insert(sk, ptr, idx) OPENSSL_sk_insert(ossl_check_OSSL_CMP_ITAV_sk_type(sk), ossl_check_OSSL_CMP_ITAV_type(ptr), (idx))
#define sk_OSSL_CMP_ITAV_set(sk, idx, ptr) ((OSSL_CMP_ITAV *)OPENSSL_sk_set(ossl_check_OSSL_CMP_ITAV_sk_type(sk), (idx), ossl_check_OSSL_CMP_ITAV_type(ptr)))
#define sk_OSSL_CMP_ITAV_find(sk, ptr) OPENSSL_sk_find(ossl_check_OSSL_CMP_ITAV_sk_type(sk), ossl_check_OSSL_CMP_ITAV_type(ptr))
#define sk_OSSL_CMP_ITAV_find_ex(sk, ptr) OPENSSL_sk_find_ex(ossl_check_OSSL_CMP_ITAV_sk_type(sk), ossl_check_OSSL_CMP_ITAV_type(ptr))
#define sk_OSSL_CMP_ITAV_find_all(sk, ptr, pnum) OPENSSL_sk_find_all(ossl_check_OSSL_CMP_ITAV_sk_type(sk), ossl_check_OSSL_CMP_ITAV_type(ptr), pnum)
#define sk_OSSL_CMP_ITAV_sort(sk) OPENSSL_sk_sort(ossl_check_OSSL_CMP_ITAV_sk_type(sk))
#define sk_OSSL_CMP_ITAV_is_sorted(sk) OPENSSL_sk_is_sorted(ossl_check_const_OSSL_CMP_ITAV_sk_type(sk))
#define sk_OSSL_CMP_ITAV_dup(sk) ((STACK_OF(OSSL_CMP_ITAV) *)OPENSSL_sk_dup(ossl_check_const_OSSL_CMP_ITAV_sk_type(sk)))
#define sk_OSSL_CMP_ITAV_deep_copy(sk, copyfunc, freefunc) ((STACK_OF(OSSL_CMP_ITAV) *)OPENSSL_sk_deep_copy(ossl_check_const_OSSL_CMP_ITAV_sk_type(sk), ossl_check_OSSL_CMP_ITAV_copyfunc_type(copyfunc), ossl_check_OSSL_CMP_ITAV_freefunc_type(freefunc)))
#define sk_OSSL_CMP_ITAV_set_cmp_func(sk, cmp) ((sk_OSSL_CMP_ITAV_compfunc)OPENSSL_sk_set_cmp_func(ossl_check_OSSL_CMP_ITAV_sk_type(sk), ossl_check_OSSL_CMP_ITAV_compfunc_type(cmp)))

typedef struct ossl_cmp_revrepcontent_st OSSL_CMP_REVREPCONTENT;
typedef struct ossl_cmp_pkisi_st OSSL_CMP_PKISI;
DECLARE_ASN1_FUNCTIONS(OSSL_CMP_PKISI)
DECLARE_ASN1_DUP_FUNCTION(OSSL_CMP_PKISI)
SKM_DEFINE_STACK_OF_INTERNAL(OSSL_CMP_PKISI, OSSL_CMP_PKISI, OSSL_CMP_PKISI)
#define sk_OSSL_CMP_PKISI_num(sk) OPENSSL_sk_num(ossl_check_const_OSSL_CMP_PKISI_sk_type(sk))
#define sk_OSSL_CMP_PKISI_value(sk, idx) ((OSSL_CMP_PKISI *)OPENSSL_sk_value(ossl_check_const_OSSL_CMP_PKISI_sk_type(sk), (idx)))
#define sk_OSSL_CMP_PKISI_new(cmp) ((STACK_OF(OSSL_CMP_PKISI) *)OPENSSL_sk_new(ossl_check_OSSL_CMP_PKISI_compfunc_type(cmp)))
#define sk_OSSL_CMP_PKISI_new_null() ((STACK_OF(OSSL_CMP_PKISI) *)OPENSSL_sk_new_null())
#define sk_OSSL_CMP_PKISI_new_reserve(cmp, n) ((STACK_OF(OSSL_CMP_PKISI) *)OPENSSL_sk_new_reserve(ossl_check_OSSL_CMP_PKISI_compfunc_type(cmp), (n)))
#define sk_OSSL_CMP_PKISI_reserve(sk, n) OPENSSL_sk_reserve(ossl_check_OSSL_CMP_PKISI_sk_type(sk), (n))
#define sk_OSSL_CMP_PKISI_free(sk) OPENSSL_sk_free(ossl_check_OSSL_CMP_PKISI_sk_type(sk))
#define sk_OSSL_CMP_PKISI_zero(sk) OPENSSL_sk_zero(ossl_check_OSSL_CMP_PKISI_sk_type(sk))
#define sk_OSSL_CMP_PKISI_delete(sk, i) ((OSSL_CMP_PKISI *)OPENSSL_sk_delete(ossl_check_OSSL_CMP_PKISI_sk_type(sk), (i)))
#define sk_OSSL_CMP_PKISI_delete_ptr(sk, ptr) ((OSSL_CMP_PKISI *)OPENSSL_sk_delete_ptr(ossl_check_OSSL_CMP_PKISI_sk_type(sk), ossl_check_OSSL_CMP_PKISI_type(ptr)))
#define sk_OSSL_CMP_PKISI_push(sk, ptr) OPENSSL_sk_push(ossl_check_OSSL_CMP_PKISI_sk_type(sk), ossl_check_OSSL_CMP_PKISI_type(ptr))
#define sk_OSSL_CMP_PKISI_unshift(sk, ptr) OPENSSL_sk_unshift(ossl_check_OSSL_CMP_PKISI_sk_type(sk), ossl_check_OSSL_CMP_PKISI_type(ptr))
#define sk_OSSL_CMP_PKISI_pop(sk) ((OSSL_CMP_PKISI *)OPENSSL_sk_pop(ossl_check_OSSL_CMP_PKISI_sk_type(sk)))
#define sk_OSSL_CMP_PKISI_shift(sk) ((OSSL_CMP_PKISI *)OPENSSL_sk_shift(ossl_check_OSSL_CMP_PKISI_sk_type(sk)))
#define sk_OSSL_CMP_PKISI_pop_free(sk, freefunc) OPENSSL_sk_pop_free(ossl_check_OSSL_CMP_PKISI_sk_type(sk),ossl_check_OSSL_CMP_PKISI_freefunc_type(freefunc))
#define sk_OSSL_CMP_PKISI_insert(sk, ptr, idx) OPENSSL_sk_insert(ossl_check_OSSL_CMP_PKISI_sk_type(sk), ossl_check_OSSL_CMP_PKISI_type(ptr), (idx))
#define sk_OSSL_CMP_PKISI_set(sk, idx, ptr) ((OSSL_CMP_PKISI *)OPENSSL_sk_set(ossl_check_OSSL_CMP_PKISI_sk_type(sk), (idx), ossl_check_OSSL_CMP_PKISI_type(ptr)))
#define sk_OSSL_CMP_PKISI_find(sk, ptr) OPENSSL_sk_find(ossl_check_OSSL_CMP_PKISI_sk_type(sk), ossl_check_OSSL_CMP_PKISI_type(ptr))
#define sk_OSSL_CMP_PKISI_find_ex(sk, ptr) OPENSSL_sk_find_ex(ossl_check_OSSL_CMP_PKISI_sk_type(sk), ossl_check_OSSL_CMP_PKISI_type(ptr))
#define sk_OSSL_CMP_PKISI_find_all(sk, ptr, pnum) OPENSSL_sk_find_all(ossl_check_OSSL_CMP_PKISI_sk_type(sk), ossl_check_OSSL_CMP_PKISI_type(ptr), pnum)
#define sk_OSSL_CMP_PKISI_sort(sk) OPENSSL_sk_sort(ossl_check_OSSL_CMP_PKISI_sk_type(sk))
#define sk_OSSL_CMP_PKISI_is_sorted(sk) OPENSSL_sk_is_sorted(ossl_check_const_OSSL_CMP_PKISI_sk_type(sk))
#define sk_OSSL_CMP_PKISI_dup(sk) ((STACK_OF(OSSL_CMP_PKISI) *)OPENSSL_sk_dup(ossl_check_const_OSSL_CMP_PKISI_sk_type(sk)))
#define sk_OSSL_CMP_PKISI_deep_copy(sk, copyfunc, freefunc) ((STACK_OF(OSSL_CMP_PKISI) *)OPENSSL_sk_deep_copy(ossl_check_const_OSSL_CMP_PKISI_sk_type(sk), ossl_check_OSSL_CMP_PKISI_copyfunc_type(copyfunc), ossl_check_OSSL_CMP_PKISI_freefunc_type(freefunc)))
#define sk_OSSL_CMP_PKISI_set_cmp_func(sk, cmp) ((sk_OSSL_CMP_PKISI_compfunc)OPENSSL_sk_set_cmp_func(ossl_check_OSSL_CMP_PKISI_sk_type(sk), ossl_check_OSSL_CMP_PKISI_compfunc_type(cmp)))

typedef struct ossl_cmp_certrepmessage_st OSSL_CMP_CERTREPMESSAGE;
SKM_DEFINE_STACK_OF_INTERNAL(OSSL_CMP_CERTREPMESSAGE, OSSL_CMP_CERTREPMESSAGE, OSSL_CMP_CERTREPMESSAGE)
#define sk_OSSL_CMP_CERTREPMESSAGE_num(sk) OPENSSL_sk_num(ossl_check_const_OSSL_CMP_CERTREPMESSAGE_sk_type(sk))
#define sk_OSSL_CMP_CERTREPMESSAGE_value(sk, idx) ((OSSL_CMP_CERTREPMESSAGE *)OPENSSL_sk_value(ossl_check_const_OSSL_CMP_CERTREPMESSAGE_sk_type(sk), (idx)))
#define sk_OSSL_CMP_CERTREPMESSAGE_new(cmp) ((STACK_OF(OSSL_CMP_CERTREPMESSAGE) *)OPENSSL_sk_new(ossl_check_OSSL_CMP_CERTREPMESSAGE_compfunc_type(cmp)))
#define sk_OSSL_CMP_CERTREPMESSAGE_new_null() ((STACK_OF(OSSL_CMP_CERTREPMESSAGE) *)OPENSSL_sk_new_null())
#define sk_OSSL_CMP_CERTREPMESSAGE_new_reserve(cmp, n) ((STACK_OF(OSSL_CMP_CERTREPMESSAGE) *)OPENSSL_sk_new_reserve(ossl_check_OSSL_CMP_CERTREPMESSAGE_compfunc_type(cmp), (n)))
#define sk_OSSL_CMP_CERTREPMESSAGE_reserve(sk, n) OPENSSL_sk_reserve(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk), (n))
#define sk_OSSL_CMP_CERTREPMESSAGE_free(sk) OPENSSL_sk_free(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk))
#define sk_OSSL_CMP_CERTREPMESSAGE_zero(sk) OPENSSL_sk_zero(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk))
#define sk_OSSL_CMP_CERTREPMESSAGE_delete(sk, i) ((OSSL_CMP_CERTREPMESSAGE *)OPENSSL_sk_delete(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk), (i)))
#define sk_OSSL_CMP_CERTREPMESSAGE_delete_ptr(sk, ptr) ((OSSL_CMP_CERTREPMESSAGE *)OPENSSL_sk_delete_ptr(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk), ossl_check_OSSL_CMP_CERTREPMESSAGE_type(ptr)))
#define sk_OSSL_CMP_CERTREPMESSAGE_push(sk, ptr) OPENSSL_sk_push(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk), ossl_check_OSSL_CMP_CERTREPMESSAGE_type(ptr))
#define sk_OSSL_CMP_CERTREPMESSAGE_unshift(sk, ptr) OPENSSL_sk_unshift(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk), ossl_check_OSSL_CMP_CERTREPMESSAGE_type(ptr))
#define sk_OSSL_CMP_CERTREPMESSAGE_pop(sk) ((OSSL_CMP_CERTREPMESSAGE *)OPENSSL_sk_pop(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk)))
#define sk_OSSL_CMP_CERTREPMESSAGE_shift(sk) ((OSSL_CMP_CERTREPMESSAGE *)OPENSSL_sk_shift(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk)))
#define sk_OSSL_CMP_CERTREPMESSAGE_pop_free(sk, freefunc) OPENSSL_sk_pop_free(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk),ossl_check_OSSL_CMP_CERTREPMESSAGE_freefunc_type(freefunc))
#define sk_OSSL_CMP_CERTREPMESSAGE_insert(sk, ptr, idx) OPENSSL_sk_insert(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk), ossl_check_OSSL_CMP_CERTREPMESSAGE_type(ptr), (idx))
#define sk_OSSL_CMP_CERTREPMESSAGE_set(sk, idx, ptr) ((OSSL_CMP_CERTREPMESSAGE *)OPENSSL_sk_set(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk), (idx), ossl_check_OSSL_CMP_CERTREPMESSAGE_type(ptr)))
#define sk_OSSL_CMP_CERTREPMESSAGE_find(sk, ptr) OPENSSL_sk_find(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk), ossl_check_OSSL_CMP_CERTREPMESSAGE_type(ptr))
#define sk_OSSL_CMP_CERTREPMESSAGE_find_ex(sk, ptr) OPENSSL_sk_find_ex(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk), ossl_check_OSSL_CMP_CERTREPMESSAGE_type(ptr))
#define sk_OSSL_CMP_CERTREPMESSAGE_find_all(sk, ptr, pnum) OPENSSL_sk_find_all(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk), ossl_check_OSSL_CMP_CERTREPMESSAGE_type(ptr), pnum)
#define sk_OSSL_CMP_CERTREPMESSAGE_sort(sk) OPENSSL_sk_sort(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk))
#define sk_OSSL_CMP_CERTREPMESSAGE_is_sorted(sk) OPENSSL_sk_is_sorted(ossl_check_const_OSSL_CMP_CERTREPMESSAGE_sk_type(sk))
#define sk_OSSL_CMP_CERTREPMESSAGE_dup(sk) ((STACK_OF(OSSL_CMP_CERTREPMESSAGE) *)OPENSSL_sk_dup(ossl_check_const_OSSL_CMP_CERTREPMESSAGE_sk_type(sk)))
#define sk_OSSL_CMP_CERTREPMESSAGE_deep_copy(sk, copyfunc, freefunc) ((STACK_OF(OSSL_CMP_CERTREPMESSAGE) *)OPENSSL_sk_deep_copy(ossl_check_const_OSSL_CMP_CERTREPMESSAGE_sk_type(sk), ossl_check_OSSL_CMP_CERTREPMESSAGE_copyfunc_type(copyfunc), ossl_check_OSSL_CMP_CERTREPMESSAGE_freefunc_type(freefunc)))
#define sk_OSSL_CMP_CERTREPMESSAGE_set_cmp_func(sk, cmp) ((sk_OSSL_CMP_CERTREPMESSAGE_compfunc)OPENSSL_sk_set_cmp_func(ossl_check_OSSL_CMP_CERTREPMESSAGE_sk_type(sk), ossl_check_OSSL_CMP_CERTREPMESSAGE_compfunc_type(cmp)))

typedef struct ossl_cmp_pollrep_st OSSL_CMP_POLLREP;
typedef STACK_OF(OSSL_CMP_POLLREP) OSSL_CMP_POLLREPCONTENT;
typedef struct ossl_cmp_certresponse_st OSSL_CMP_CERTRESPONSE;
SKM_DEFINE_STACK_OF_INTERNAL(OSSL_CMP_CERTRESPONSE, OSSL_CMP_CERTRESPONSE, OSSL_CMP_CERTRESPONSE)
#define sk_OSSL_CMP_CERTRESPONSE_num(sk) OPENSSL_sk_num(ossl_check_const_OSSL_CMP_CERTRESPONSE_sk_type(sk))
#define sk_OSSL_CMP_CERTRESPONSE_value(sk, idx) ((OSSL_CMP_CERTRESPONSE *)OPENSSL_sk_value(ossl_check_const_OSSL_CMP_CERTRESPONSE_sk_type(sk), (idx)))
#define sk_OSSL_CMP_CERTRESPONSE_new(cmp) ((STACK_OF(OSSL_CMP_CERTRESPONSE) *)OPENSSL_sk_new(ossl_check_OSSL_CMP_CERTRESPONSE_compfunc_type(cmp)))
#define sk_OSSL_CMP_CERTRESPONSE_new_null() ((STACK_OF(OSSL_CMP_CERTRESPONSE) *)OPENSSL_sk_new_null())
#define sk_OSSL_CMP_CERTRESPONSE_new_reserve(cmp, n) ((STACK_OF(OSSL_CMP_CERTRESPONSE) *)OPENSSL_sk_new_reserve(ossl_check_OSSL_CMP_CERTRESPONSE_compfunc_type(cmp), (n)))
#define sk_OSSL_CMP_CERTRESPONSE_reserve(sk, n) OPENSSL_sk_reserve(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk), (n))
#define sk_OSSL_CMP_CERTRESPONSE_free(sk) OPENSSL_sk_free(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk))
#define sk_OSSL_CMP_CERTRESPONSE_zero(sk) OPENSSL_sk_zero(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk))
#define sk_OSSL_CMP_CERTRESPONSE_delete(sk, i) ((OSSL_CMP_CERTRESPONSE *)OPENSSL_sk_delete(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk), (i)))
#define sk_OSSL_CMP_CERTRESPONSE_delete_ptr(sk, ptr) ((OSSL_CMP_CERTRESPONSE *)OPENSSL_sk_delete_ptr(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk), ossl_check_OSSL_CMP_CERTRESPONSE_type(ptr)))
#define sk_OSSL_CMP_CERTRESPONSE_push(sk, ptr) OPENSSL_sk_push(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk), ossl_check_OSSL_CMP_CERTRESPONSE_type(ptr))
#define sk_OSSL_CMP_CERTRESPONSE_unshift(sk, ptr) OPENSSL_sk_unshift(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk), ossl_check_OSSL_CMP_CERTRESPONSE_type(ptr))
#define sk_OSSL_CMP_CERTRESPONSE_pop(sk) ((OSSL_CMP_CERTRESPONSE *)OPENSSL_sk_pop(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk)))
#define sk_OSSL_CMP_CERTRESPONSE_shift(sk) ((OSSL_CMP_CERTRESPONSE *)OPENSSL_sk_shift(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk)))
#define sk_OSSL_CMP_CERTRESPONSE_pop_free(sk, freefunc) OPENSSL_sk_pop_free(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk),ossl_check_OSSL_CMP_CERTRESPONSE_freefunc_type(freefunc))
#define sk_OSSL_CMP_CERTRESPONSE_insert(sk, ptr, idx) OPENSSL_sk_insert(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk), ossl_check_OSSL_CMP_CERTRESPONSE_type(ptr), (idx))
#define sk_OSSL_CMP_CERTRESPONSE_set(sk, idx, ptr) ((OSSL_CMP_CERTRESPONSE *)OPENSSL_sk_set(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk), (idx), ossl_check_OSSL_CMP_CERTRESPONSE_type(ptr)))
#define sk_OSSL_CMP_CERTRESPONSE_find(sk, ptr) OPENSSL_sk_find(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk), ossl_check_OSSL_CMP_CERTRESPONSE_type(ptr))
#define sk_OSSL_CMP_CERTRESPONSE_find_ex(sk, ptr) OPENSSL_sk_find_ex(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk), ossl_check_OSSL_CMP_CERTRESPONSE_type(ptr))
#define sk_OSSL_CMP_CERTRESPONSE_find_all(sk, ptr, pnum) OPENSSL_sk_find_all(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk), ossl_check_OSSL_CMP_CERTRESPONSE_type(ptr), pnum)
#define sk_OSSL_CMP_CERTRESPONSE_sort(sk) OPENSSL_sk_sort(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk))
#define sk_OSSL_CMP_CERTRESPONSE_is_sorted(sk) OPENSSL_sk_is_sorted(ossl_check_const_OSSL_CMP_CERTRESPONSE_sk_type(sk))
#define sk_OSSL_CMP_CERTRESPONSE_dup(sk) ((STACK_OF(OSSL_CMP_CERTRESPONSE) *)OPENSSL_sk_dup(ossl_check_const_OSSL_CMP_CERTRESPONSE_sk_type(sk)))
#define sk_OSSL_CMP_CERTRESPONSE_deep_copy(sk, copyfunc, freefunc) ((STACK_OF(OSSL_CMP_CERTRESPONSE) *)OPENSSL_sk_deep_copy(ossl_check_const_OSSL_CMP_CERTRESPONSE_sk_type(sk), ossl_check_OSSL_CMP_CERTRESPONSE_copyfunc_type(copyfunc), ossl_check_OSSL_CMP_CERTRESPONSE_freefunc_type(freefunc)))
#define sk_OSSL_CMP_CERTRESPONSE_set_cmp_func(sk, cmp) ((sk_OSSL_CMP_CERTRESPONSE_compfunc)OPENSSL_sk_set_cmp_func(ossl_check_OSSL_CMP_CERTRESPONSE_sk_type(sk), ossl_check_OSSL_CMP_CERTRESPONSE_compfunc_type(cmp)))

typedef STACK_OF(ASN1_UTF8STRING) OSSL_CMP_PKIFREETEXT;

/*
 * function DECLARATIONS
 */

/* from cmp_asn.c */
OSSL_CMP_ITAV *OSSL_CMP_ITAV_create(ASN1_OBJECT *type, ASN1_TYPE *value);
void OSSL_CMP_ITAV_set0(OSSL_CMP_ITAV *itav, ASN1_OBJECT *type,
                        ASN1_TYPE *value);
ASN1_OBJECT *OSSL_CMP_ITAV_get0_type(const OSSL_CMP_ITAV *itav);
ASN1_TYPE *OSSL_CMP_ITAV_get0_value(const OSSL_CMP_ITAV *itav);
int OSSL_CMP_ITAV_push0_stack_item(STACK_OF(OSSL_CMP_ITAV) **itav_sk_p,
                                   OSSL_CMP_ITAV *itav);
void OSSL_CMP_ITAV_free(OSSL_CMP_ITAV *itav);
void OSSL_CMP_MSG_free(OSSL_CMP_MSG *msg);

/* from cmp_ctx.c */
OSSL_CMP_CTX *OSSL_CMP_CTX_new(OSSL_LIB_CTX *libctx, const char *propq);
void OSSL_CMP_CTX_free(OSSL_CMP_CTX *ctx);
int OSSL_CMP_CTX_reinit(OSSL_CMP_CTX *ctx);
/* CMP general options: */
#  define OSSL_CMP_OPT_LOG_VERBOSITY 0
/* CMP transfer options: */
#  define OSSL_CMP_OPT_KEEP_ALIVE 10
#  define OSSL_CMP_OPT_MSG_TIMEOUT 11
#  define OSSL_CMP_OPT_TOTAL_TIMEOUT 12
/* CMP request options: */
#  define OSSL_CMP_OPT_VALIDITY_DAYS 20
#  define OSSL_CMP_OPT_SUBJECTALTNAME_NODEFAULT 21
#  define OSSL_CMP_OPT_SUBJECTALTNAME_CRITICAL 22
#  define OSSL_CMP_OPT_POLICIES_CRITICAL 23
#  define OSSL_CMP_OPT_POPO_METHOD 24
#  define OSSL_CMP_OPT_IMPLICIT_CONFIRM 25
#  define OSSL_CMP_OPT_DISABLE_CONFIRM 26
#  define OSSL_CMP_OPT_REVOCATION_REASON 27
/* CMP protection options: */
#  define OSSL_CMP_OPT_UNPROTECTED_SEND 30
#  define OSSL_CMP_OPT_UNPROTECTED_ERRORS 31
#  define OSSL_CMP_OPT_OWF_ALGNID 32
#  define OSSL_CMP_OPT_MAC_ALGNID 33
#  define OSSL_CMP_OPT_DIGEST_ALGNID 34
#  define OSSL_CMP_OPT_IGNORE_KEYUSAGE 35
#  define OSSL_CMP_OPT_PERMIT_TA_IN_EXTRACERTS_FOR_IR 36
int OSSL_CMP_CTX_set_option(OSSL_CMP_CTX *ctx, int opt, int val);
int OSSL_CMP_CTX_get_option(const OSSL_CMP_CTX *ctx, int opt);
/* CMP-specific callback for logging and outputting the error queue: */
int OSSL_CMP_CTX_set_log_cb(OSSL_CMP_CTX *ctx, OSSL_CMP_log_cb_t cb);
#  define OSSL_CMP_CTX_set_log_verbosity(ctx, level) \
    OSSL_CMP_CTX_set_option(ctx, OSSL_CMP_OPT_LOG_VERBOSITY, level)
void OSSL_CMP_CTX_print_errors(const OSSL_CMP_CTX *ctx);
/* message transfer: */
int OSSL_CMP_CTX_set1_serverPath(OSSL_CMP_CTX *ctx, const char *path);
int OSSL_CMP_CTX_set1_server(OSSL_CMP_CTX *ctx, const char *address);
int OSSL_CMP_CTX_set_serverPort(OSSL_CMP_CTX *ctx, int port);
int OSSL_CMP_CTX_set1_proxy(OSSL_CMP_CTX *ctx, const char *name);
int OSSL_CMP_CTX_set1_no_proxy(OSSL_CMP_CTX *ctx, const char *names);
int OSSL_CMP_CTX_set_http_cb(OSSL_CMP_CTX *ctx, OSSL_HTTP_bio_cb_t cb);
int OSSL_CMP_CTX_set_http_cb_arg(OSSL_CMP_CTX *ctx, void *arg);
void *OSSL_CMP_CTX_get_http_cb_arg(const OSSL_CMP_CTX *ctx);
typedef OSSL_CMP_MSG *(*OSSL_CMP_transfer_cb_t) (OSSL_CMP_CTX *ctx,
                                                 const OSSL_CMP_MSG *req);
int OSSL_CMP_CTX_set_transfer_cb(OSSL_CMP_CTX *ctx, OSSL_CMP_transfer_cb_t cb);
int OSSL_CMP_CTX_set_transfer_cb_arg(OSSL_CMP_CTX *ctx, void *arg);
void *OSSL_CMP_CTX_get_transfer_cb_arg(const OSSL_CMP_CTX *ctx);
/* server authentication: */
int OSSL_CMP_CTX_set1_srvCert(OSSL_CMP_CTX *ctx, X509 *cert);
int OSSL_CMP_CTX_set1_expected_sender(OSSL_CMP_CTX *ctx, const X509_NAME *name);
int OSSL_CMP_CTX_set0_trustedStore(OSSL_CMP_CTX *ctx, X509_STORE *store);
X509_STORE *OSSL_CMP_CTX_get0_trustedStore(const OSSL_CMP_CTX *ctx);
int OSSL_CMP_CTX_set1_untrusted(OSSL_CMP_CTX *ctx, STACK_OF(X509) *certs);
STACK_OF(X509) *OSSL_CMP_CTX_get0_untrusted(const OSSL_CMP_CTX *ctx);
/* client authentication: */
int OSSL_CMP_CTX_set1_cert(OSSL_CMP_CTX *ctx, X509 *cert);
int OSSL_CMP_CTX_build_cert_chain(OSSL_CMP_CTX *ctx, X509_STORE *own_trusted,
                                  STACK_OF(X509) *candidates);
int OSSL_CMP_CTX_set1_pkey(OSSL_CMP_CTX *ctx, EVP_PKEY *pkey);
int OSSL_CMP_CTX_set1_referenceValue(OSSL_CMP_CTX *ctx,
                                     const unsigned char *ref, int len);
int OSSL_CMP_CTX_set1_secretValue(OSSL_CMP_CTX *ctx,
                                  const unsigned char *sec, int len);
/* CMP message header and extra certificates: */
int OSSL_CMP_CTX_set1_recipient(OSSL_CMP_CTX *ctx, const X509_NAME *name);
int OSSL_CMP_CTX_push0_geninfo_ITAV(OSSL_CMP_CTX *ctx, OSSL_CMP_ITAV *itav);
int OSSL_CMP_CTX_reset_geninfo_ITAVs(OSSL_CMP_CTX *ctx);
int OSSL_CMP_CTX_set1_extraCertsOut(OSSL_CMP_CTX *ctx,
                                    STACK_OF(X509) *extraCertsOut);
/* certificate template: */
int OSSL_CMP_CTX_set0_newPkey(OSSL_CMP_CTX *ctx, int priv, EVP_PKEY *pkey);
EVP_PKEY *OSSL_CMP_CTX_get0_newPkey(const OSSL_CMP_CTX *ctx, int priv);
int OSSL_CMP_CTX_set1_issuer(OSSL_CMP_CTX *ctx, const X509_NAME *name);
int OSSL_CMP_CTX_set1_subjectName(OSSL_CMP_CTX *ctx, const X509_NAME *name);
int OSSL_CMP_CTX_push1_subjectAltName(OSSL_CMP_CTX *ctx,
                                      const GENERAL_NAME *name);
int OSSL_CMP_CTX_set0_reqExtensions(OSSL_CMP_CTX *ctx, X509_EXTENSIONS *exts);
int OSSL_CMP_CTX_reqExtensions_have_SAN(OSSL_CMP_CTX *ctx);
int OSSL_CMP_CTX_push0_policy(OSSL_CMP_CTX *ctx, POLICYINFO *pinfo);
int OSSL_CMP_CTX_set1_oldCert(OSSL_CMP_CTX *ctx, X509 *cert);
int OSSL_CMP_CTX_set1_p10CSR(OSSL_CMP_CTX *ctx, const X509_REQ *csr);
/* misc body contents: */
int OSSL_CMP_CTX_push0_genm_ITAV(OSSL_CMP_CTX *ctx, OSSL_CMP_ITAV *itav);
/* certificate confirmation: */
typedef int (*OSSL_CMP_certConf_cb_t) (OSSL_CMP_CTX *ctx, X509 *cert,
                                       int fail_info, const char **txt);
int OSSL_CMP_certConf_cb(OSSL_CMP_CTX *ctx, X509 *cert, int fail_info,
                         const char **text);
int OSSL_CMP_CTX_set_certConf_cb(OSSL_CMP_CTX *ctx, OSSL_CMP_certConf_cb_t cb);
int OSSL_CMP_CTX_set_certConf_cb_arg(OSSL_CMP_CTX *ctx, void *arg);
void *OSSL_CMP_CTX_get_certConf_cb_arg(const OSSL_CMP_CTX *ctx);
/* result fetching: */
int OSSL_CMP_CTX_get_status(const OSSL_CMP_CTX *ctx);
OSSL_CMP_PKIFREETEXT *OSSL_CMP_CTX_get0_statusString(const OSSL_CMP_CTX *ctx);
int OSSL_CMP_CTX_get_failInfoCode(const OSSL_CMP_CTX *ctx);
#  define OSSL_CMP_PKISI_BUFLEN 1024
X509 *OSSL_CMP_CTX_get0_newCert(const OSSL_CMP_CTX *ctx);
STACK_OF(X509) *OSSL_CMP_CTX_get1_newChain(const OSSL_CMP_CTX *ctx);
STACK_OF(X509) *OSSL_CMP_CTX_get1_caPubs(const OSSL_CMP_CTX *ctx);
STACK_OF(X509) *OSSL_CMP_CTX_get1_extraCertsIn(const OSSL_CMP_CTX *ctx);
int OSSL_CMP_CTX_set1_transactionID(OSSL_CMP_CTX *ctx,
                                    const ASN1_OCTET_STRING *id);
int OSSL_CMP_CTX_set1_senderNonce(OSSL_CMP_CTX *ctx,
                                  const ASN1_OCTET_STRING *nonce);

/* from cmp_status.c */
char *OSSL_CMP_CTX_snprint_PKIStatus(const OSSL_CMP_CTX *ctx, char *buf,
                                     size_t bufsize);
char *OSSL_CMP_snprint_PKIStatusInfo(const OSSL_CMP_PKISI *statusInfo,
                                     char *buf, size_t bufsize);
OSSL_CMP_PKISI *
OSSL_CMP_STATUSINFO_new(int status, int fail_info, const char *text);

/* from cmp_hdr.c */
ASN1_OCTET_STRING *OSSL_CMP_HDR_get0_transactionID(const
                                                   OSSL_CMP_PKIHEADER *hdr);
ASN1_OCTET_STRING *OSSL_CMP_HDR_get0_recipNonce(const OSSL_CMP_PKIHEADER *hdr);

/* from cmp_msg.c */
OSSL_CMP_PKIHEADER *OSSL_CMP_MSG_get0_header(const OSSL_CMP_MSG *msg);
int OSSL_CMP_MSG_get_bodytype(const OSSL_CMP_MSG *msg);
int OSSL_CMP_MSG_update_transactionID(OSSL_CMP_CTX *ctx, OSSL_CMP_MSG *msg);
int OSSL_CMP_MSG_update_recipNonce(OSSL_CMP_CTX *ctx, OSSL_CMP_MSG *msg);
OSSL_CRMF_MSG *OSSL_CMP_CTX_setup_CRM(OSSL_CMP_CTX *ctx, int for_KUR, int rid);
OSSL_CMP_MSG *OSSL_CMP_MSG_read(const char *file, OSSL_LIB_CTX *libctx,
                                const char *propq);
int OSSL_CMP_MSG_write(const char *file, const OSSL_CMP_MSG *msg);
OSSL_CMP_MSG *d2i_OSSL_CMP_MSG_bio(BIO *bio, OSSL_CMP_MSG **msg);
int i2d_OSSL_CMP_MSG_bio(BIO *bio, const OSSL_CMP_MSG *msg);

/* from cmp_vfy.c */
int OSSL_CMP_validate_msg(OSSL_CMP_CTX *ctx, const OSSL_CMP_MSG *msg);
int OSSL_CMP_validate_cert_path(const OSSL_CMP_CTX *ctx,
                                X509_STORE *trusted_store, X509 *cert);

/* from cmp_http.c */
OSSL_CMP_MSG *OSSL_CMP_MSG_http_perform(OSSL_CMP_CTX *ctx,
                                        const OSSL_CMP_MSG *req);

/* from cmp_server.c */
typedef struct ossl_cmp_srv_ctx_st OSSL_CMP_SRV_CTX;
OSSL_CMP_MSG *OSSL_CMP_SRV_process_request(OSSL_CMP_SRV_CTX *srv_ctx,
                                           const OSSL_CMP_MSG *req);
OSSL_CMP_MSG * OSSL_CMP_CTX_server_perform(OSSL_CMP_CTX *client_ctx,
                                           const OSSL_CMP_MSG *req);
OSSL_CMP_SRV_CTX *OSSL_CMP_SRV_CTX_new(OSSL_LIB_CTX *libctx, const char *propq);
void OSSL_CMP_SRV_CTX_free(OSSL_CMP_SRV_CTX *srv_ctx);
typedef OSSL_CMP_PKISI *(*OSSL_CMP_SRV_cert_request_cb_t)
    (OSSL_CMP_SRV_CTX *srv_ctx, const OSSL_CMP_MSG *req, int certReqId,
     const OSSL_CRMF_MSG *crm, const X509_REQ *p10cr,
     X509 **certOut, STACK_OF(X509) **chainOut, STACK_OF(X509) **caPubs);
typedef OSSL_CMP_PKISI *(*OSSL_CMP_SRV_rr_cb_t)(OSSL_CMP_SRV_CTX *srv_ctx,
                                                const OSSL_CMP_MSG *req,
                                                const X509_NAME *issuer,
                                                const ASN1_INTEGER *serial);
typedef int (*OSSL_CMP_SRV_genm_cb_t)(OSSL_CMP_SRV_CTX *srv_ctx,
                                      const OSSL_CMP_MSG *req,
                                      const STACK_OF(OSSL_CMP_ITAV) *in,
                                      STACK_OF(OSSL_CMP_ITAV) **out);
typedef void (*OSSL_CMP_SRV_error_cb_t)(OSSL_CMP_SRV_CTX *srv_ctx,
                                        const OSSL_CMP_MSG *req,
                                        const OSSL_CMP_PKISI *statusInfo,
                                        const ASN1_INTEGER *errorCode,
                                        const OSSL_CMP_PKIFREETEXT *errDetails);
typedef int (*OSSL_CMP_SRV_certConf_cb_t)(OSSL_CMP_SRV_CTX *srv_ctx,
                                          const OSSL_CMP_MSG *req,
                                          int certReqId,
                                          const ASN1_OCTET_STRING *certHash,
                                          const OSSL_CMP_PKISI *si);
typedef int (*OSSL_CMP_SRV_pollReq_cb_t)(OSSL_CMP_SRV_CTX *srv_ctx,
                                         const OSSL_CMP_MSG *req, int certReqId,
                                         OSSL_CMP_MSG **certReq,
                                         int64_t *check_after);
int OSSL_CMP_SRV_CTX_init(OSSL_CMP_SRV_CTX *srv_ctx, void *custom_ctx,
                          OSSL_CMP_SRV_cert_request_cb_t process_cert_request,
                          OSSL_CMP_SRV_rr_cb_t process_rr,
                          OSSL_CMP_SRV_genm_cb_t process_genm,
                          OSSL_CMP_SRV_error_cb_t process_error,
                          OSSL_CMP_SRV_certConf_cb_t process_certConf,
                          OSSL_CMP_SRV_pollReq_cb_t process_pollReq);
OSSL_CMP_CTX *OSSL_CMP_SRV_CTX_get0_cmp_ctx(const OSSL_CMP_SRV_CTX *srv_ctx);
void *OSSL_CMP_SRV_CTX_get0_custom_ctx(const OSSL_CMP_SRV_CTX *srv_ctx);
int OSSL_CMP_SRV_CTX_set_send_unprotected_errors(OSSL_CMP_SRV_CTX *srv_ctx,
                                                 int val);
int OSSL_CMP_SRV_CTX_set_accept_unprotected(OSSL_CMP_SRV_CTX *srv_ctx, int val);
int OSSL_CMP_SRV_CTX_set_accept_raverified(OSSL_CMP_SRV_CTX *srv_ctx, int val);
int OSSL_CMP_SRV_CTX_set_grant_implicit_confirm(OSSL_CMP_SRV_CTX *srv_ctx,
                                                int val);

/* from cmp_client.c */
X509 *OSSL_CMP_exec_certreq(OSSL_CMP_CTX *ctx, int req_type,
                            const OSSL_CRMF_MSG *crm);
#  define OSSL_CMP_IR    0
#  define OSSL_CMP_CR    2
#  define OSSL_CMP_P10CR 4
#  define OSSL_CMP_KUR   7
#  define OSSL_CMP_exec_IR_ses(ctx) \
    OSSL_CMP_exec_certreq(ctx, OSSL_CMP_IR, NULL)
#  define OSSL_CMP_exec_CR_ses(ctx) \
    OSSL_CMP_exec_certreq(ctx, OSSL_CMP_CR, NULL)
#  define OSSL_CMP_exec_P10CR_ses(ctx) \
    OSSL_CMP_exec_certreq(ctx, OSSL_CMP_P10CR, NULL)
#  define OSSL_CMP_exec_KUR_ses(ctx) \
    OSSL_CMP_exec_certreq(ctx, OSSL_CMP_KUR, NULL)
int OSSL_CMP_try_certreq(OSSL_CMP_CTX *ctx, int req_type,
                         const OSSL_CRMF_MSG *crm, int *checkAfter);
int OSSL_CMP_exec_RR_ses(OSSL_CMP_CTX *ctx);
STACK_OF(OSSL_CMP_ITAV) *OSSL_CMP_exec_GENM_ses(OSSL_CMP_CTX *ctx);

#  ifdef  __cplusplus
}
#  endif
# endif /* !defined(OPENSSL_NO_CMP) */
#endif /* !defined(OPENSSL_CMP_H) */
                                                                                                                                                                                                                                                                                                                                                             