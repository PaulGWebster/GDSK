NTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that an array being dead does not result in register allocation failures.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS foo() is 2
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                  node-23.7.0/deps/v8/test/webkit/dfg-array-dead.js                                                   0000664 0000000 0000000 00000004160 14746647661 0021417 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that an array being dead does not result in register allocation failures."
);

function foo() {
    var z = new Array(00, 01, 02, 03, 04, 05, 06, 07, 08, 09,
                      10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
                      20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
                      30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                      40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
                      50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
                      60, 61, 62, 63, 64, 65, 66, 67, 68, 69);

    z = bar(1);

    return z.length;
}

function bar(x) {
    var a = [];
    a[x] = 1;

    return a;
}

for (var i = 0; i < 1000; ++i) {
    shouldBe("foo()", "2");
}
                                                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/deps/v8/test/webkit/dfg-array-length-dead-expected.txt                                  0000664 0000000 0000000 00000060104 14746647661 0024700 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that an array length access being dead does not result in register allocation failures.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS foo({f:[]}) is 42
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                                                                                                                                                                            node-23.7.0/deps/v8/test/webkit/dfg-array-length-dead.js                                            0000664 0000000 0000000 00000003221 14746647661 0022673 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that an array length access being dead does not result in register allocation failures."
);

function foo(x) {
    var y = x.f.length;
    return 42;
}

for (var i = 0; i < 1000; ++i) {
    shouldBe("foo({f:[]})", "42");
}
                                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/deps/v8/test/webkit/dfg-array-pop-side-effects-expected.txt                             0000664 0000000 0000000 00000014043 14746647661 0025662 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that ArrayPop is known to the DFG to be a side effect.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
PASS foo(a, b) is 45
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
Ouch!
PASS foo(a, b) is 0/0
PASS ouches is 50
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             node-23.7.0/deps/v8/test/webkit/dfg-array-pop-side-effects.js                                       0000664 0000000 0000000 00000004437 14746647661 0023666 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that ArrayPop is known to the DFG to be a side effect."
);

function foo(a, b) {
    var result = a.f;
    result += b.pop();
    result += a.g;
    return result;
}

var ouches = 0;
for (var i = 0; i < 200; ++i) {
    var a = {f:1, g:2};
    var b = [];
    var expected;
    if (i < 150) {
        // Ensure that we always transition the array's structure to one that indicates
        // that we have array storage.
        b.__defineGetter__("0", function() {
            testFailed("Should never get here");
        });
        b.length = 0;
        b[0] = 42;
        expected = "45";
    } else {
        b.__defineGetter__("0", function() {
            debug("Ouch!");
            ouches++;
            delete a.g;
            a.h = 43;
            return 5;
        });
        expected = "0/0";
    }
    shouldBe("foo(a, b)", expected);
}

shouldBe("ouches", "50");
                                                                                                                                                                                                                                 node-23.7.0/deps/v8/test/webkit/dfg-array-pop-value-clearing-expected.txt                           0000664 0000000 0000000 00000073626 14746647661 0026233 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that array popping properly cleans up the popped element.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS foo([1, 2]) is [2,42,,]
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                          node-23.7.0/deps/v8/test/webkit/dfg-array-pop-value-clearing.js                                     0000664 0000000 0000000 00000003237 14746647661 0024220 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that array popping properly cleans up the popped element."
);

function foo(a) {
    var x = a.pop();
    a[a.length + 1] = 42;
    return [x, a.pop(), a.pop()];
}

for (var i = 0; i < 1000; ++i)
    shouldBe("foo([1, 2])", "[2,42,,]");
                                                                                                                                                                                                                                                                                                                                                                 node-23.7.0/deps/v8/test/webkit/dfg-arrayify-elimination-expected.txt                               0000664 0000000 0000000 00000067460 14746647661 0025560 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS array is [,42,43,44]
PASS array is [52,42,43,44]
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                node-23.7.0/deps/v8/test/webkit/dfg-arrayify-elimination.js                                         0000664 0000000 0000000 00000003321 14746647661 0023540 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

function foo(a, i, j, k) {
    a[i] = 42;
    a[j] = 43;
    a[k] = 44;
}

for (var i = 0; i < 1000; ++i) {
    var array = [];
    if (i % 2)
        array.unshift(52);
    foo(array, 1, 2, 3);
    if (i % 2)
        shouldBe("array", "[52,42,43,44]");
    else
        shouldBe("array", "[,42,43,44]");
}
                                                                                                                                                                                                                                                                                                               node-23.7.0/deps/v8/test/webkit/dfg-arrayify-when-late-prevent-extensions-expected.txt              0000664 0000000 0000000 00000012473 14746647661 0031004 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that Arraify does good things when Object.preventExtensions() has been called.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is 42
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                     node-23.7.0/deps/v8/test/webkit/dfg-arrayify-when-late-prevent-extensions.js                        0000664 0000000 0000000 00000003433 14746647661 0026776 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that Arraify does good things when Object.preventExtensions() has been called."
);

function foo(o) {
    o[0] = 42;
    return o[0];
}

for (var i = 0; i < 200; ++i) {
    var o = {};
    var expected;
    if (i >= 150) {
        Object.preventExtensions(o);
        expected = "void 0";
    } else
        expected = "42";
    shouldBe("foo(o)", expected);
}
                                                                                                                                                                                                                                     node-23.7.0/deps/v8/test/webkit/dfg-arrayify-when-prevent-extensions-expected.txt                   0000664 0000000 0000000 00000013623 14746647661 0030057 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that Arraify does good things when Object.preventExtensions() has been called.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS foo(o) is void 0
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                             node-23.7.0/deps/v8/test/webkit/dfg-arrayify-when-prevent-extensions.js                             0000664 0000000 0000000 00000003260 14746647661 0026051 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that Arraify does good things when Object.preventExtensions() has been called."
);

function foo(o) {
    o[0] = 42;
    return o[0];
}

for (var i = 0; i < 200; ++i) {
    var o = {};
    Object.preventExtensions(o);
    shouldBe("foo(o)", "void 0");
}
                                                                                                                                                                                                                                                                                                                                                node-23.7.0/deps/v8/test/webkit/dfg-bool-to-int32-reuse-expected.txt                                0000664 0000000 0000000 00000010602 14746647661 0025037 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that using a value predicted boolean after it is converted to an int32 doesn't crash the compiler while causing bad code gen.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS foo(true) is [2, true]
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                              node-23.7.0/deps/v8/test/webkit/dfg-bool-to-int32-reuse.js                                          0000664 0000000 0000000 00000003250 14746647661 0023036 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that using a value predicted boolean after it is converted to an int32 doesn't crash the compiler while causing bad code gen."
);

function foo(x) {
    return [x << 1, x];
}

for (var i = 0; i < 100; ++i)
    shouldBe("foo(true)", "[2, true]");
                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/deps/v8/test/webkit/dfg-branch-logical-not-peephole-around-osr-exit-expected.txt        0000664 0000000 0000000 00000026206 14746647661 0031715 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that our attempts to do peephole Branch(LogicalNot) optimization doesn't break OSR exit's ability to recover the value of LogicalNot.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 6
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 7
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 8
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 9
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 10
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 9
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 12
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 13
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 14
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 15
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 16
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 17
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 18
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 19
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 20
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 21
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 22
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 23
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 24
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 25
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 26
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 27
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 28
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 29
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 30
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 31
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 32
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 33
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 34
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 35
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 36
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 37
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 38
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 39
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 40
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 41
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 42
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 43
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 44
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 45
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 46
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 47
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 48
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 49
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 50
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 51
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 52
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 53
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 54
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 55
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 56
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 57
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 58
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 59
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 60
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 61
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 62
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 63
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 64
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 65
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 66
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 67
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 68
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 69
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 70
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 71
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 72
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 73
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 74
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 75
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 76
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 77
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 78
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 79
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 80
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 81
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 82
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 83
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 84
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 85
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 86
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 87
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 88
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 89
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 90
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 91
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 92
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 93
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 94
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 95
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 96
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 97
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 98
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 99
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 100
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 101
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 102
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 103
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 104
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 105
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 106
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 107
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 108
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 109
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 110
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 111
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 112
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 113
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 114
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 115
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 116
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 117
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 118
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 119
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 120
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 121
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 122
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 123
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 124
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 125
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 126
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 127
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 128
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 129
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 130
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 131
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 132
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 133
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 134
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 135
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 136
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 137
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 138
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 139
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 140
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 141
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 142
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 143
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 144
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 145
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 146
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 147
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 148
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 149
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 150
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 151
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 152
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 153
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 154
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 155
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 156
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 157
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 158
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 159
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 160
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 161
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 162
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 163
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 164
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 165
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 166
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 167
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 168
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 169
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 170
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 171
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 172
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 173
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 174
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 175
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 176
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 177
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 178
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 179
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 180
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 181
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 182
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 183
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 184
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 185
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 186
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 187
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 188
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 189
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 190
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 191
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 192
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 193
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 194
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 195
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 196
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 197
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 198
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 199
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 200
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 201
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 202
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 203
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 204
PASS foo(i, 5, i == 199 ? 2147483647 : 5) is 2147483847
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                                                                                                          node-23.7.0/deps/v8/test/webkit/dfg-branch-logical-not-peephole-around-osr-exit.js                  0000664 0000000 0000000 00000003577 14746647661 0027721 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that our attempts to do peephole Branch(LogicalNot) optimization doesn't break OSR exit's ability to recover the value of LogicalNot."
);

function foo(a, b, c) {
    var x = a !== b;
    var result = a + c;
    if (x)
        result++;
    else
        result--;
    return result;
}

for (var i = 0; i < 200; ++i) {
    var expected = i + (i == 199 ? 2147483647 : 5) + (i !== 5 ? 1 : -1)
    shouldBe("foo(i, 5, i == 199 ? 2147483647 : 5)", "" + expected);
}
                                                                                                                                 node-23.7.0/deps/v8/test/webkit/dfg-branch-not-fail-expected.txt                                    0000664 0000000 0000000 00000051447 14746647661 0024366 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Check that short-circuiting Branch(LogicalNot(@a)) and then failing speculation does not result in the branch being taken the wrong way.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS foo({f:True}) is 1
PASS foo({f:False}) is 0
PASS bar({f:True}) is 0
PASS bar({f:False}) is 1
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                         node-23.7.0/deps/v8/test/webkit/dfg-branch-not-fail.js                                              0000664 0000000 0000000 00000003774 14746647661 0022364 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Check that short-circuiting Branch(LogicalNot(@a)) and then failing speculation does not result in the branch being taken the wrong way."
);

function foo(a) {
    if (a.f)
        return 1;
    return 0;
}

function bar(a) {
    var b = !a.f;
    if (b)
        return 1;
    return 0;
}

var True = true;
var False = false;
for (var i = 0; i < 200; ++i) {
    var x;
    if (i == 100) {
        True = "string";
        False = void 0;
    }
    shouldBe("foo({f:True})", "1");
    shouldBe("foo({f:False})", "0");
    shouldBe("bar({f:True})", "0");
    shouldBe("bar({f:False})", "1");
}
    node-23.7.0/deps/v8/test/webkit/dfg-call-function-hit-watchpoint-expected.txt                       0000664 0000000 0000000 00000015073 14746647661 0027113 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests correctness of function calls when the function is overwritten.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS bar(i, i + 1) is 1
PASS bar(i, i + 1) is 3
PASS bar(i, i + 1) is 5
PASS bar(i, i + 1) is 7
PASS bar(i, i + 1) is 9
PASS bar(i, i + 1) is 11
PASS bar(i, i + 1) is 13
PASS bar(i, i + 1) is 15
PASS bar(i, i + 1) is 17
PASS bar(i, i + 1) is 19
PASS bar(i, i + 1) is 21
PASS bar(i, i + 1) is 23
PASS bar(i, i + 1) is 25
PASS bar(i, i + 1) is 27
PASS bar(i, i + 1) is 29
PASS bar(i, i + 1) is 31
PASS bar(i, i + 1) is 33
PASS bar(i, i + 1) is 35
PASS bar(i, i + 1) is 37
PASS bar(i, i + 1) is 39
PASS bar(i, i + 1) is 41
PASS bar(i, i + 1) is 43
PASS bar(i, i + 1) is 45
PASS bar(i, i + 1) is 47
PASS bar(i, i + 1) is 49
PASS bar(i, i + 1) is 51
PASS bar(i, i + 1) is 53
PASS bar(i, i + 1) is 55
PASS bar(i, i + 1) is 57
PASS bar(i, i + 1) is 59
PASS bar(i, i + 1) is 61
PASS bar(i, i + 1) is 63
PASS bar(i, i + 1) is 65
PASS bar(i, i + 1) is 67
PASS bar(i, i + 1) is 69
PASS bar(i, i + 1) is 71
PASS bar(i, i + 1) is 73
PASS bar(i, i + 1) is 75
PASS bar(i, i + 1) is 77
PASS bar(i, i + 1) is 79
PASS bar(i, i + 1) is 81
PASS bar(i, i + 1) is 83
PASS bar(i, i + 1) is 85
PASS bar(i, i + 1) is 87
PASS bar(i, i + 1) is 89
PASS bar(i, i + 1) is 91
PASS bar(i, i + 1) is 93
PASS bar(i, i + 1) is 95
PASS bar(i, i + 1) is 97
PASS bar(i, i + 1) is 99
PASS bar(i, i + 1) is 101
PASS bar(i, i + 1) is 103
PASS bar(i, i + 1) is 105
PASS bar(i, i + 1) is 107
PASS bar(i, i + 1) is 109
PASS bar(i, i + 1) is 111
PASS bar(i, i + 1) is 113
PASS bar(i, i + 1) is 115
PASS bar(i, i + 1) is 117
PASS bar(i, i + 1) is 119
PASS bar(i, i + 1) is 121
PASS bar(i, i + 1) is 123
PASS bar(i, i + 1) is 125
PASS bar(i, i + 1) is 127
PASS bar(i, i + 1) is 129
PASS bar(i, i + 1) is 131
PASS bar(i, i + 1) is 133
PASS bar(i, i + 1) is 135
PASS bar(i, i + 1) is 137
PASS bar(i, i + 1) is 139
PASS bar(i, i + 1) is 141
PASS bar(i, i + 1) is 143
PASS bar(i, i + 1) is 145
PASS bar(i, i + 1) is 147
PASS bar(i, i + 1) is 149
PASS bar(i, i + 1) is 151
PASS bar(i, i + 1) is 153
PASS bar(i, i + 1) is 155
PASS bar(i, i + 1) is 157
PASS bar(i, i + 1) is 159
PASS bar(i, i + 1) is 161
PASS bar(i, i + 1) is 163
PASS bar(i, i + 1) is 165
PASS bar(i, i + 1) is 167
PASS bar(i, i + 1) is 169
PASS bar(i, i + 1) is 171
PASS bar(i, i + 1) is 173
PASS bar(i, i + 1) is 175
PASS bar(i, i + 1) is 177
PASS bar(i, i + 1) is 179
PASS bar(i, i + 1) is 181
PASS bar(i, i + 1) is 183
PASS bar(i, i + 1) is 185
PASS bar(i, i + 1) is 187
PASS bar(i, i + 1) is 189
PASS bar(i, i + 1) is 191
PASS bar(i, i + 1) is 193
PASS bar(i, i + 1) is 195
PASS bar(i, i + 1) is 197
PASS bar(i, i + 1) is 199
PASS bar(i, i + 1) is 201
PASS bar(i, i + 1) is 203
PASS bar(i, i + 1) is 205
PASS bar(i, i + 1) is 207
PASS bar(i, i + 1) is 209
PASS bar(i, i + 1) is 211
PASS bar(i, i + 1) is 213
PASS bar(i, i + 1) is 215
PASS bar(i, i + 1) is 217
PASS bar(i, i + 1) is 219
PASS bar(i, i + 1) is 221
PASS bar(i, i + 1) is 223
PASS bar(i, i + 1) is 225
PASS bar(i, i + 1) is 227
PASS bar(i, i + 1) is 229
PASS bar(i, i + 1) is 231
PASS bar(i, i + 1) is 233
PASS bar(i, i + 1) is 235
PASS bar(i, i + 1) is 237
PASS bar(i, i + 1) is 239
PASS bar(i, i + 1) is 241
PASS bar(i, i + 1) is 243
PASS bar(i, i + 1) is 245
PASS bar(i, i + 1) is 247
PASS bar(i, i + 1) is 249
PASS bar(i, i + 1) is 251
PASS bar(i, i + 1) is 253
PASS bar(i, i + 1) is 255
PASS bar(i, i + 1) is 257
PASS bar(i, i + 1) is 259
PASS bar(i, i + 1) is 261
PASS bar(i, i + 1) is 263
PASS bar(i, i + 1) is 265
PASS bar(i, i + 1) is 267
PASS bar(i, i + 1) is 269
PASS bar(i, i + 1) is 271
PASS bar(i, i + 1) is 273
PASS bar(i, i + 1) is 275
PASS bar(i, i + 1) is 277
PASS bar(i, i + 1) is 279
PASS bar(i, i + 1) is 281
PASS bar(i, i + 1) is 283
PASS bar(i, i + 1) is 285
PASS bar(i, i + 1) is 287
PASS bar(i, i + 1) is 289
PASS bar(i, i + 1) is 291
PASS bar(i, i + 1) is 293
PASS bar(i, i + 1) is 295
PASS bar(i, i + 1) is 297
PASS bar(i, i + 1) is 299
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS bar(i, i + 1) is -1
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/deps/v8/test/webkit/dfg-call-function-hit-watchpoint.js                                 0000664 0000000 0000000 00000003501 14746647661 0025102 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests correctness of function calls when the function is overwritten."
);

function foo(a, b) {
    return a + b;
}

function bar(a, b) {
    return foo(a, b);
}

for (var i = 0; i < 200; ++i) {
    if (i == 150)
        foo = function(a, b) { return a - b; }
    var expected;
    if (i < 150)
        expected = i + i + 1;
    else
        expected = -1;
    shouldBe("bar(i, i + 1)", "" + expected);
}
                                                                                                                                                                                               node-23.7.0/deps/v8/test/webkit/dfg-call-method-hit-watchpoint-expected.txt                         0000664 0000000 0000000 00000013577 14746647661 0026555 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests correctness of method calls when the prototype is changed.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 42
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS callFoo(o) is 56
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                 node-23.7.0/deps/v8/test/webkit/dfg-call-method-hit-watchpoint.js                                   0000664 0000000 0000000 00000003607 14746647661 0024544 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests correctness of method calls when the prototype is changed."
);

function Thingy() {
}

Thingy.prototype = {
    foo: function() {
        return 42;
    }
};

function callFoo(o) {
    return o.foo();
}

var o = new Thingy();

for (var i = 0; i < 200; ++i) {
    if (i == 150)
        Thingy.prototype.foo = function() { return 56; }
    var expected;
    if (i < 150)
        expected = 42;
    else
        expected = 56;
    shouldBe("callFoo(o)", "" + expected);
}
                                                                                                                         node-23.7.0/deps/v8/test/webkit/dfg-captured-var-get-local-expected.txt                             0000664 0000000 0000000 00000006401 14746647661 0025652 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that GetLocals on captured variables aren't eliminated too aggressively.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS foo() is 42
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                               node-23.7.0/deps/v8/test/webkit/dfg-captured-var-get-local.js                                       0000664 0000000 0000000 00000005222 14746647661 0023650 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that GetLocals on captured variables aren't eliminated too aggressively."
);

function foo() {
    var x;
    (function(){
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
        x = 42;
    })();
    var y = x;
    return y;
}

for (var i = 0; i < 100; ++i)
    shouldBe("foo()", "42");
                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/deps/v8/test/webkit/dfg-cfa-merge-with-dead-use-at-tail-expected.txt                    0000664 0000000 0000000 00000017334 14746647661 0027234 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that a dead use of a variable at the tail of a basic block doesn't confuse the CFA into believing that the variable being used is dead as well.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS foo(false, true, 5) is 42
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                    node-23.7.0/deps/v8/test/webkit/dfg-cfa-merge-with-dead-use-at-tail.js                              0000664 0000000 0000000 00000003541 14746647661 0025225 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that a dead use of a variable at the tail of a basic block doesn't confuse the CFA into believing that the variable being used is dead as well."
);

function foo(p, q, v) {
    var x, y;
    if (p)
        x = 0;
    else {
        if (q)
            x = v;
        else
            x = 0;
        y = x;
    }
    if (x)
        return 42;
    return 0;
}

for (var i = 0; i < 200; ++i)
    shouldBe("foo(false, true, 5)", "42");
                                                                                                                                                               dfg-cfa-prove-put-by-id-simple-when-storing-to-specialized-function-expected.txt                    0000664 0000000 0000000 00000013464 14746647661 0035500 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/deps/v8/test/webkit                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Checks that the DFG CFA does the right things if it proves that a put_by_id is a simple replace when storing to a specialized function property.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
baz!
PASS bar.call({f:baz}, baz) is "baz"
fuzz!
PASS bar.call({f:baz}, fuzz) is "fuzz"
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                            dfg-cfa-prove-put-by-id-simple-when-storing-to-specialized-function.js                              0000664 0000000 0000000 00000004024 14746647661 0033466 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/deps/v8/test/webkit                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Checks that the DFG CFA does the right things if it proves that a put_by_id is a simple replace when storing to a specialized function property."
);

function foo(o, v) {
    o.f = v;
}

// Warm up foo's put_by_id to make it look polymorphic.
for (var i = 0; i < 100; ++i)
    foo(i % 2 ? {a: 1} : {b: 2});

function bar(f) {
    foo(this, f);
    return this.f();
}

function baz() {
    debug("baz!");
    return "baz";
}

for (var i = 0; i < 100; ++i)
    shouldBe("bar.call({f:baz}, baz)", "\"baz\"");

function fuzz() {
    debug("fuzz!");
    return "fuzz";
}

shouldBe("bar.call({f:baz}, fuzz)", "\"fuzz\"");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            dfg-cfg-simplify-eliminate-set-local-type-check-then-branch-not-null-and-decrement-expected.txt     0000664 0000000 0000000 00000027045 14746647661 0040252 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/deps/v8/test/webkit                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests what happens when CFG simplification leads to the elimination of a set local that had a type check, and then we branch on the variable not being null while decrementing the variable in the same basic block.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is true
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS foo(o) is false
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           dfg-cfg-simplify-eliminate-set-local-type-check-then-branch-not-null-and-decrement.js               0000664 0000000 0000000 00000004047 14746647661 0036245 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/deps/v8/test/webkit                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests what happens when CFG simplification leads to the elimination of a set local that had a type check, and then we branch on the variable not being null while decrementing the variable in the same basic block."
);

function foo(o) {
    var x;
    if (o.f)
        x = o.g;
    else
        x = o.h;
    var y = x != null;
    x--;
    if (y)
        return y;
    else
        return false;
}

for (var i = 0; i < 500; ++i) {
    var o = {f:foo};
    var expected;
    if (i < 450) {
        o.g = i;
        expected = "true";
    } else {
        o.g = null;
        expected = "false";
    }
    shouldBe("foo(o)", expected);
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         dfg-cfg-simplify-eliminate-set-local-type-check-then-branch-not-null-expected.txt                   0000664 0000000 0000000 00000025612 14746647661 0035544 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/deps/v8/test/webkit                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests what happens when CFG simplification leads to the elimination of a set local that had a type check, and then we branch on the variable not being null.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(o) is -1
PASS foo(o) is 0
PASS foo(o) is 1
PASS foo(o) is 2
PASS foo(o) is 3
PASS foo(o) is 4
PASS foo(o) is 5
PASS foo(o) is 6
PASS foo(o) is 7
PASS foo(o) is 8
PASS foo(o) is 9
PASS foo(o) is 10
PASS foo(o) is 11
PASS foo(o) is 12
PASS foo(o) is 13
PASS foo(o) is 14
PASS foo(o) is 15
PASS foo(o) is 16
PASS foo(o) is 17
PASS foo(o) is 18
PASS foo(o) is 19
PASS foo(o) is 20
PASS foo(o) is 21
PASS foo(o) is 22
PASS foo(o) is 23
PASS foo(o) is 24
PASS foo(o) is 25
PASS foo(o) is 26
PASS foo(o) is 27
PASS foo(o) is 28
PASS foo(o) is 29
PASS foo(o) is 30
PASS foo(o) is 31
PASS foo(o) is 32
PASS foo(o) is 33
PASS foo(o) is 34
PASS foo(o) is 35
PASS foo(o) is 36
PASS foo(o) is 37
PASS foo(o) is 38
PASS foo(o) is 39
PASS foo(o) is 40
PASS foo(o) is 41
PASS foo(o) is 42
PASS foo(o) is 43
PASS foo(o) is 44
PASS foo(o) is 45
PASS foo(o) is 46
PASS foo(o) is 47
PASS foo(o) is 48
PASS foo(o) is 49
PASS foo(o) is 50
PASS foo(o) is 51
PASS foo(o) is 52
PASS foo(o) is 53
PASS foo(o) is 54
PASS foo(o) is 55
PASS foo(o) is 56
PASS foo(o) is 57
PASS foo(o) is 58
PASS foo(o) is 59
PASS foo(o) is 60
PASS foo(o) is 61
PASS foo(o) is 62
PASS foo(o) is 63
PASS foo(o) is 64
PASS foo(o) is 65
PASS foo(o) is 66
PASS foo(o) is 67
PASS foo(o) is 68
PASS foo(o) is 69
PASS foo(o) is 70
PASS foo(o) is 71
PASS foo(o) is 72
PASS foo(o) is 73
PASS foo(o) is 74
PASS foo(o) is 75
PASS foo(o) is 76
PASS foo(o) is 77
PASS foo(o) is 78
PASS foo(o) is 79
PASS foo(o) is 80
PASS foo(o) is 81
PASS foo(o) is 82
PASS foo(o) is 83
PASS foo(o) is 84
PASS foo(o) is 85
PASS foo(o) is 86
PASS foo(o) is 87
PASS foo(o) is 88
PASS foo(o) is 89
PASS foo(o) is 90
PASS foo(o) is 91
PASS foo(o) is 92
PASS foo(o) is 93
PASS foo(o) is 94
PASS foo(o) is 95
PASS foo(o) is 96
PASS foo(o) is 97
PASS foo(o) is 98
PASS foo(o) is 99
PASS foo(o) is 100
PASS foo(o) is 101
PASS foo(o) is 102
PASS foo(o) is 103
PASS foo(o) is 104
PASS foo(o) is 105
PASS foo(o) is 106
PASS foo(o) is 107
PASS foo(o) is 108
PASS foo(o) is 109
PASS foo(o) is 110
PASS foo(o) is 111
PASS foo(o) is 112
PASS foo(o) is 113
PASS foo(o) is 114
PASS foo(o) is 115
PASS foo(o) is 116
PASS foo(o) is 117
PASS foo(o) is 118
PASS foo(o) is 119
PASS foo(o) is 120
PASS foo(o) is 121
PASS foo(o) is 122
PASS foo(o) is 123
PASS foo(o) is 124
PASS foo(o) is 125
PASS foo(o) is 126
PASS foo(o) is 127
PASS foo(o) is 128
PASS foo(o) is 129
PASS foo(o) is 130
PASS foo(o) is 131
PASS foo(o) is 132
PASS foo(o) is 133
PASS foo(o) is 134
PASS foo(o) is 135
PASS foo(o) is 136
PASS foo(o) is 137
PASS foo(o) is 138
PASS foo(o) is 139
PASS foo(o) is 140
PASS foo(o) is 141
PASS foo(o) is 142
PASS foo(o) is 143
PASS foo(o) is 144
PASS foo(o) is 145
PASS foo(o) is 146
PASS foo(o) is 147
PASS foo(o) is 148
PASS foo(o) is 149
PASS foo(o) is 150
PASS foo(o) is 151
PASS foo(o) is 152
PASS foo(o) is 153
PASS foo(o) is 154
PASS foo(o) is 155
PASS foo(o) is 156
PASS foo(o) is 157
PASS foo(o) is 158
PASS foo(o) is 159
PASS foo(o) is 160
PASS foo(o) is 161
PASS foo(o) is 162
PASS foo(o) is 163
PASS foo(o) is 164
PASS foo(o) is 165
PASS foo(o) is 166
PASS foo(o) is 167
PASS foo(o) is 168
PASS foo(o) is 169
PASS foo(o) is 170
PASS foo(o) is 171
PASS foo(o) is 172
PASS foo(o) is 173
PASS foo(o) is 174
PASS foo(o) is 175
PASS foo(o) is 176
PASS foo(o) is 177
PASS foo(o) is 178
PASS foo(o) is 179
PASS foo(o) is 180
PASS foo(o) is 181
PASS foo(o) is 182
PASS foo(o) is 183
PASS foo(o) is 184
PASS foo(o) is 185
PASS foo(o) is 186
PASS foo(o) is 187
PASS foo(o) is 188
PASS foo(o) is 189
PASS foo(o) is 190
PASS foo(o) is 191
PASS foo(o) is 192
PASS foo(o) is 193
PASS foo(o) is 194
PASS foo(o) is 195
PASS foo(o) is 196
PASS foo(o) is 197
PASS foo(o) is 198
PASS foo(o) is 199
PASS foo(o) is 200
PASS foo(o) is 201
PASS foo(o) is 202
PASS foo(o) is 203
PASS foo(o) is 204
PASS foo(o) is 205
PASS foo(o) is 206
PASS foo(o) is 207
PASS foo(o) is 208
PASS foo(o) is 209
PASS foo(o) is 210
PASS foo(o) is 211
PASS foo(o) is 212
PASS foo(o) is 213
PASS foo(o) is 214
PASS foo(o) is 215
PASS foo(o) is 216
PASS foo(o) is 217
PASS foo(o) is 218
PASS foo(o) is 219
PASS foo(o) is 220
PASS foo(o) is 221
PASS foo(o) is 222
PASS foo(o) is 223
PASS foo(o) is 224
PASS foo(o) is 225
PASS foo(o) is 226
PASS foo(o) is 227
PASS foo(o) is 228
PASS foo(o) is 229
PASS foo(o) is 230
PASS foo(o) is 231
PASS foo(o) is 232
PASS foo(o) is 233
PASS foo(o) is 234
PASS foo(o) is 235
PASS foo(o) is 236
PASS foo(o) is 237
PASS foo(o) is 238
PASS foo(o) is 239
PASS foo(o) is 240
PASS foo(o) is 241
PASS foo(o) is 242
PASS foo(o) is 243
PASS foo(o) is 244
PASS foo(o) is 245
PASS foo(o) is 246
PASS foo(o) is 247
PASS foo(o) is 248
PASS foo(o) is 249
PASS foo(o) is 250
PASS foo(o) is 251
PASS foo(o) is 252
PASS foo(o) is 253
PASS foo(o) is 254
PASS foo(o) is 255
PASS foo(o) is 256
PASS foo(o) is 257
PASS foo(o) is 258
PASS foo(o) is 259
PASS foo(o) is 260
PASS foo(o) is 261
PASS foo(o) is 262
PASS foo(o) is 263
PASS foo(o) is 264
PASS foo(o) is 265
PASS foo(o) is 266
PASS foo(o) is 267
PASS foo(o) is 268
PASS foo(o) is 269
PASS foo(o) is 270
PASS foo(o) is 271
PASS foo(o) is 272
PASS foo(o) is 273
PASS foo(o) is 274
PASS foo(o) is 275
PASS foo(o) is 276
PASS foo(o) is 277
PASS foo(o) is 278
PASS foo(o) is 279
PASS foo(o) is 280
PASS foo(o) is 281
PASS foo(o) is 282
PASS foo(o) is 283
PASS foo(o) is 284
PASS foo(o) is 285
PASS foo(o) is 286
PASS foo(o) is 287
PASS foo(o) is 288
PASS foo(o) is 289
PASS foo(o) is 290
PASS foo(o) is 291
PASS foo(o) is 292
PASS foo(o) is 293
PASS foo(o) is 294
PASS foo(o) is 295
PASS foo(o) is 296
PASS foo(o) is 297
PASS foo(o) is 298
PASS foo(o) is 299
PASS foo(o) is 300
PASS foo(o) is 301
PASS foo(o) is 302
PASS foo(o) is 303
PASS foo(o) is 304
PASS foo(o) is 305
PASS foo(o) is 306
PASS foo(o) is 307
PASS foo(o) is 308
PASS foo(o) is 309
PASS foo(o) is 310
PASS foo(o) is 311
PASS foo(o) is 312
PASS foo(o) is 313
PASS foo(o) is 314
PASS foo(o) is 315
PASS foo(o) is 316
PASS foo(o) is 317
PASS foo(o) is 318
PASS foo(o) is 319
PASS foo(o) is 320
PASS foo(o) is 321
PASS foo(o) is 322
PASS foo(o) is 323
PASS foo(o) is 324
PASS foo(o) is 325
PASS foo(o) is 326
PASS foo(o) is 327
PASS foo(o) is 328
PASS foo(o) is 329
PASS foo(o) is 330
PASS foo(o) is 331
PASS foo(o) is 332
PASS foo(o) is 333
PASS foo(o) is 334
PASS foo(o) is 335
PASS foo(o) is 336
PASS foo(o) is 337
PASS foo(o) is 338
PASS foo(o) is 339
PASS foo(o) is 340
PASS foo(o) is 341
PASS foo(o) is 342
PASS foo(o) is 343
PASS foo(o) is 344
PASS foo(o) is 345
PASS foo(o) is 346
PASS foo(o) is 347
PASS foo(o) is 348
PASS foo(o) is 349
PASS foo(o) is 350
PASS foo(o) is 351
PASS foo(o) is 352
PASS foo(o) is 353
PASS foo(o) is 354
PASS foo(o) is 355
PASS foo(o) is 356
PASS foo(o) is 357
PASS foo(o) is 358
PASS foo(o) is 359
PASS foo(o) is 360
PASS foo(o) is 361
PASS foo(o) is 362
PASS foo(o) is 363
PASS foo(o) is 364
PASS foo(o) is 365
PASS foo(o) is 366
PASS foo(o) is 367
PASS foo(o) is 368
PASS foo(o) is 369
PASS foo(o) is 370
PASS foo(o) is 371
PASS foo(o) is 372
PASS foo(o) is 373
PASS foo(o) is 374
PASS foo(o) is 375
PASS foo(o) is 376
PASS foo(o) is 377
PASS foo(o) is 378
PASS foo(o) is 379
PASS foo(o) is 380
PASS foo(o) is 381
PASS foo(o) is 382
PASS foo(o) is 383
PASS foo(o) is 384
PASS foo(o) is 385
PASS foo(o) is 386
PASS foo(o) is 387
PASS foo(o) is 388
PASS foo(o) is 389
PASS foo(o) is 390
PASS foo(o) is 391
PASS foo(o) is 392
PASS foo(o) is 393
PASS foo(o) is 394
PASS foo(o) is 395
PASS foo(o) is 396
PASS foo(o) is 397
PASS foo(o) is 398
PASS foo(o) is 399
PASS foo(o) is 400
PASS foo(o) is 401
PASS foo(o) is 402
PASS foo(o) is 403
PASS foo(o) is 404
PASS foo(o) is 405
PASS foo(o) is 406
PASS foo(o) is 407
PASS foo(o) is 408
PASS foo(o) is 409
PASS foo(o) is 410
PASS foo(o) is 411
PASS foo(o) is 412
PASS foo(o) is 413
PASS foo(o) is 414
PASS foo(o) is 415
PASS foo(o) is 416
PASS foo(o) is 417
PASS foo(o) is 418
PASS foo(o) is 419
PASS foo(o) is 420
PASS foo(o) is 421
PASS foo(o) is 422
PASS foo(o) is 423
PASS foo(o) is 424
PASS foo(o) is 425
PASS foo(o) is 426
PASS foo(o) is 427
PASS foo(o) is 428
PASS foo(o) is 429
PASS foo(o) is 430
PASS foo(o) is 431
PASS foo(o) is 432
PASS foo(o) is 433
PASS foo(o) is 434
PASS foo(o) is 435
PASS foo(o) is 436
PASS foo(o) is 437
PASS foo(o) is 438
PASS foo(o) is 439
PASS foo(o) is 440
PASS foo(o) is 441
PASS foo(o) is 442
PASS foo(o) is 443
PASS foo(o) is 444
PASS foo(o) is 445
PASS foo(o) is 446
PASS foo(o) is 447
PASS foo(o) is 448
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS foo(o) is null
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                      dfg-cfg-simplify-eliminate-set-local-type-check-then-branch-not-null.js                             0000664 0000000 0000000 00000003734 14746647661 0033543 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/deps/v8/test/webkit                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests what happens when CFG simplification leads to the elimination of a set local that had a type check, and then we branch on the variable not being null."
);

function foo(o) {
    var x;
    if (o.f)
        x = o.g;
    else
        x = o.h;
    if (x != null)
        return x - 1;
    else
        return x;
}

for (var i = 0; i < 500; ++i) {
    var o = {f:foo};
    var expected;
    if (i < 450) {
        o.g = i;
        expected = "" + (i - 1);
    } else {
        o.g = null;
        expected = "null";
    }
    shouldBe("foo(o)", expected);
}
                                    dfg-cfg-simplify-eliminate-set-local-type-check-then-typeof-expected.txt                            0000664 0000000 0000000 00000062747 14746647661 0034061 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/deps/v8/test/webkit                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests what happens when CFG simplification leads to the elimination of a set local that had a type check, and then we do a typeof on the value, which can be constant folded if the type check stays.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS result[0] is "number"
PASS result[1] is -1
PASS result[0] is "number"
PASS result[1] is 0
PASS result[0] is "number"
PASS result[1] is 1
PASS result[0] is "number"
PASS result[1] is 2
PASS result[0] is "number"
PASS result[1] is 3
PASS result[0] is "number"
PASS result[1] is 4
PASS result[0] is "number"
PASS result[1] is 5
PASS result[0] is "number"
PASS result[1] is 6
PASS result[0] is "number"
PASS result[1] is 7
PASS result[0] is "number"
PASS result[1] is 8
PASS result[0] is "number"
PASS result[1] is 9
PASS result[0] is "number"
PASS result[1] is 10
PASS result[0] is "number"
PASS result[1] is 11
PASS result[0] is "number"
PASS result[1] is 12
PASS result[0] is "number"
PASS result[1] is 13
PASS result[0] is "number"
PASS result[1] is 14
PASS result[0] is "number"
PASS result[1] is 15
PASS result[0] is "number"
PASS result[1] is 16
PASS result[0] is "number"
PASS result[1] is 17
PASS result[0] is "number"
PASS result[1] is 18
PASS result[0] is "number"
PASS result[1] is 19
PASS result[0] is "number"
PASS result[1] is 20
PASS result[0] is "number"
PASS result[1] is 21
PASS result[0] is "number"
PASS result[1] is 22
PASS result[0] is "number"
PASS result[1] is 23
PASS result[0] is "number"
PASS result[1] is 24
PASS result[0] is "number"
PASS result[1] is 25
PASS result[0] is "number"
PASS result[1] is 26
PASS result[0] is "number"
PASS result[1] is 27
PASS result[0] is "number"
PASS result[1] is 28
PASS result[0] is "number"
PASS result[1] is 29
PASS result[0] is "number"
PASS result[1] is 30
PASS result[0] is "number"
PASS result[1] is 31
PASS result[0] is "number"
PASS result[1] is 32
PASS result[0] is "number"
PASS result[1] is 33
PASS result[0] is "number"
PASS result[1] is 34
PASS result[0] is "number"
PASS result[1] is 35
PASS result[0] is "number"
PASS result[1] is 36
PASS result[0] is "number"
PASS result[1] is 37
PASS result[0] is "number"
PASS result[1] is 38
PASS result[0] is "number"
PASS result[1] is 39
PASS result[0] is "number"
PASS result[1] is 40
PASS result[0] is "number"
PASS result[1] is 41
PASS result[0] is "number"
PASS result[1] is 42
PASS result[0] is "number"
PASS result[1] is 43
PASS result[0] is "number"
PASS result[1] is 44
PASS result[0] is "number"
PASS result[1] is 45
PASS result[0] is "number"
PASS result[1] is 46
PASS result[0] is "number"
PASS result[1] is 47
PASS result[0] is "number"
PASS result[1] is 48
PASS result[0] is "number"
PASS result[1] is 49
PASS result[0] is "number"
PASS result[1] is 50
PASS result[0] is "number"
PASS result[1] is 51
PASS result[0] is "number"
PASS result[1] is 52
PASS result[0] is "number"
PASS result[1] is 53
PASS result[0] is "number"
PASS result[1] is 54
PASS result[0] is "number"
PASS result[1] is 55
PASS result[0] is "number"
PASS result[1] is 56
PASS result[0] is "number"
PASS result[1] is 57
PASS result[0] is "number"
PASS result[1] is 58
PASS result[0] is "number"
PASS result[1] is 59
PASS result[0] is "number"
PASS result[1] is 60
PASS result[0] is "number"
PASS result[1] is 61
PASS result[0] is "number"
PASS result[1] is 62
PASS result[0] is "number"
PASS result[1] is 63
PASS result[0] is "number"
PASS result[1] is 64
PASS result[0] is "number"
PASS result[1] is 65
PASS result[0] is "number"
PASS result[1] is 66
PASS result[0] is "number"
PASS result[1] is 67
PASS result[0] is "number"
PASS result[1] is 68
PASS result[0] is "number"
PASS result[1] is 69
PASS result[0] is "number"
PASS result[1] is 70
PASS result[0] is "number"
PASS result[1] is 71
PASS result[0] is "number"
PASS result[1] is 72
PASS result[0] is "number"
PASS result[1] is 73
PASS result[0] is "number"
PASS result[1] is 74
PASS result[0] is "number"
PASS result[1] is 75
PASS result[0] is "number"
PASS result[1] is 76
PASS result[0] is "number"
PASS result[1] is 77
PASS result[0] is "number"
PASS result[1] is 78
PASS result[0] is "number"
PASS result[1] is 79
PASS result[0] is "number"
PASS result[1] is 80
PASS result[0] is "number"
PASS result[1] is 81
PASS result[0] is "number"
PASS result[1] is 82
PASS result[0] is "number"
PASS result[1] is 83
PASS result[0] is "number"
PASS result[1] is 84
PASS result[0] is "number"
PASS result[1] is 85
PASS result[0] is "number"
PASS result[1] is 86
PASS result[0] is "number"
PASS result[1] is 87
PASS result[0] is "number"
PASS result[1] is 88
PASS result[0] is "number"
PASS result[1] is 89
PASS result[0] is "number"
PASS result[1] is 90
PASS result[0] is "number"
PASS result[1] is 91
PASS result[0] is "number"
PASS result[1] is 92
PASS result[0] is "number"
PASS result[1] is 93
PASS result[0] is "number"
PASS result[1] is 94
PASS result[0] is "number"
PASS result[1] is 95
PASS result[0] is "number"
PASS result[1] is 96
PASS result[0] is "number"
PASS result[1] is 97
PASS result[0] is "number"
PASS result[1] is 98
PASS result[0] is "number"
PASS result[1] is 99
PASS result[0] is "number"
PASS result[1] is 100
PASS result[0] is "number"
PASS result[1] is 101
PASS result[0] is "number"
PASS result[1] is 102
PASS result[0] is "number"
PASS result[1] is 103
PASS result[0] is "number"
PASS result[1] is 104
PASS result[0] is "number"
PASS result[1] is 105
PASS result[0] is "number"
PASS result[1] is 106
PASS result[0] is "number"
PASS result[1] is 107
PASS result[0] is "number"
PASS result[1] is 108
PASS result[0] is "number"
PASS result[1] is 109
PASS result[0] is "number"
PASS result[1] is 110
PASS result[0] is "number"
PASS result[1] is 111
PASS result[0] is "number"
PASS result[1] is 112
PASS result[0] is "number"
PASS result[1] is 113
PASS result[0] is "number"
PASS result[1] is 114
PASS result[0] is "number"
PASS result[1] is 115
PASS result[0] is "number"
PASS result[1] is 116
PASS result[0] is "number"
PASS result[1] is 117
PASS result[0] is "number"
PASS result[1] is 118
PASS result[0] is "number"
PASS result[1] is 119
PASS result[0] is "number"
PASS result[1] is 120
PASS result[0] is "number"
PASS result[1] is 121
PASS result[0] is "number"
PASS result[1] is 122
PASS result[0] is "number"
PASS result[1] is 123
PASS result[0] is "number"
PASS result[1] is 124
PASS result[0] is "number"
PASS result[1] is 125
PASS result[0] is "number"
PASS result[1] is 126
PASS result[0] is "number"
PASS result[1] is 127
PASS result[0] is "number"
PASS result[1] is 128
PASS result[0] is "number"
PASS result[1] is 129
PASS result[0] is "number"
PASS result[1] is 130
PASS result[0] is "number"
PASS result[1] is 131
PASS result[0] is "number"
PASS result[1] is 132
PASS result[0] is "number"
PASS result[1] is 133
PASS result[0] is "number"
PASS result[1] is 134
PASS result[0] is "number"
PASS result[1] is 135
PASS result[0] is "number"
PASS result[1] is 136
PASS result[0] is "number"
PASS result[1] is 137
PASS result[0] is "number"
PASS result[1] is 138
PASS result[0] is "number"
PASS result[1] is 139
PASS result[0] is "number"
PASS result[1] is 140
PASS result[0] is "number"
PASS result[1] is 141
PASS result[0] is "number"
PASS result[1] is 142
PASS result[0] is "number"
PASS result[1] is 143
PASS result[0] is "number"
PASS result[1] is 144
PASS result[0] is "number"
PASS result[1] is 145
PASS result[0] is "number"
PASS result[1] is 146
PASS result[0] is "number"
PASS result[1] is 147
PASS result[0] is "number"
PASS result[1] is 148
PASS result[0] is "number"
PASS result[1] is 149
PASS result[0] is "number"
PASS result[1] is 150
PASS result[0] is "number"
PASS result[1] is 151
PASS result[0] is "number"
PASS result[1] is 152
PASS result[0] is "number"
PASS result[1] is 153
PASS result[0] is "number"
PASS result[1] is 154
PASS result[0] is "number"
PASS result[1] is 155
PASS result[0] is "number"
PASS result[1] is 156
PASS result[0] is "number"
PASS result[1] is 157
PASS result[0] is "number"
PASS result[1] is 158
PASS result[0] is "number"
PASS result[1] is 159
PASS result[0] is "number"
PASS result[1] is 160
PASS result[0] is "number"
PASS result[1] is 161
PASS result[0] is "number"
PASS result[1] is 162
PASS result[0] is "number"
PASS result[1] is 163
PASS result[0] is "number"
PASS result[1] is 164
PASS result[0] is "number"
PASS result[1] is 165
PASS result[0] is "number"
PASS result[1] is 166
PASS result[0] is "number"
PASS result[1] is 167
PASS result[0] is "number"
PASS result[1] is 168
PASS result[0] is "number"
PASS result[1] is 169
PASS result[0] is "number"
PASS result[1] is 170
PASS result[0] is "number"
PASS result[1] is 171
PASS result[0] is "number"
PASS result[1] is 172
PASS result[0] is "number"
PASS result[1] is 173
PASS result[0] is "number"
PASS result[1] is 174
PASS result[0] is "number"
PASS result[1] is 175
PASS result[0] is "number"
PASS result[1] is 176
PASS result[0] is "number"
PASS result[1] is 177
PASS result[0] is "number"
PASS result[1] is 178
PASS result[0] is "number"
PASS result[1] is 179
PASS result[0] is "number"
PASS result[1] is 180
PASS result[0] is "number"
PASS result[1] is 181
PASS result[0] is "number"
PASS result[1] is 182
PASS result[0] is "number"
PASS result[1] is 183
PASS result[0] is "number"
PASS result[1] is 184
PASS result[0] is "number"
PASS result[1] is 185
PASS result[0] is "number"
PASS result[1] is 186
PASS result[0] is "number"
PASS result[1] is 187
PASS result[0] is "number"
PASS result[1] is 188
PASS result[0] is "number"
PASS result[1] is 189
PASS result[0] is "number"
PASS result[1] is 190
PASS result[0] is "number"
PASS result[1] is 191
PASS result[0] is "number"
PASS result[1] is 192
PASS result[0] is "number"
PASS result[1] is 193
PASS result[0] is "number"
PASS result[1] is 194
PASS result[0] is "number"
PASS result[1] is 195
PASS result[0] is "number"
PASS result[1] is 196
PASS result[0] is "number"
PASS result[1] is 197
PASS result[0] is "number"
PASS result[1] is 198
PASS result[0] is "number"
PASS result[1] is 199
PASS result[0] is "number"
PASS result[1] is 200
PASS result[0] is "number"
PASS result[1] is 201
PASS result[0] is "number"
PASS result[1] is 202
PASS result[0] is "number"
PASS result[1] is 203
PASS result[0] is "number"
PASS result[1] is 204
PASS result[0] is "number"
PASS result[1] is 205
PASS result[0] is "number"
PASS result[1] is 206
PASS result[0] is "number"
PASS result[1] is 207
PASS result[0] is "number"
PASS result[1] is 208
PASS result[0] is "number"
PASS result[1] is 209
PASS result[0] is "number"
PASS result[1] is 210
PASS result[0] is "number"
PASS result[1] is 211
PASS result[0] is "number"
PASS result[1] is 212
PASS result[0] is "number"
PASS result[1] is 213
PASS result[0] is "number"
PASS result[1] is 214
PASS result[0] is "number"
PASS result[1] is 215
PASS result[0] is "number"
PASS result[1] is 216
PASS result[0] is "number"
PASS result[1] is 217
PASS result[0] is "number"
PASS result[1] is 218
PASS result[0] is "number"
PASS result[1] is 219
PASS result[0] is "number"
PASS result[1] is 220
PASS result[0] is "number"
PASS result[1] is 221
PASS result[0] is "number"
PASS result[1] is 222
PASS result[0] is "number"
PASS result[1] is 223
PASS result[0] is "number"
PASS result[1] is 224
PASS result[0] is "number"
PASS result[1] is 225
PASS result[0] is "number"
PASS result[1] is 226
PASS result[0] is "number"
PASS result[1] is 227
PASS result[0] is "number"
PASS result[1] is 228
PASS result[0] is "number"
PASS result[1] is 229
PASS result[0] is "number"
PASS result[1] is 230
PASS result[0] is "number"
PASS result[1] is 231
PASS result[0] is "number"
PASS result[1] is 232
PASS result[0] is "number"
PASS result[1] is 233
PASS result[0] is "number"
PASS result[1] is 234
PASS result[0] is "number"
PASS result[1] is 235
PASS result[0] is "number"
PASS result[1] is 236
PASS result[0] is "number"
PASS result[1] is 237
PASS result[0] is "number"
PASS result[1] is 238
PASS result[0] is "number"
PASS result[1] is 239
PASS result[0] is "number"
PASS result[1] is 240
PASS result[0] is "number"
PASS result[1] is 241
PASS result[0] is "number"
PASS result[1] is 242
PASS result[0] is "number"
PASS result[1] is 243
PASS result[0] is "number"
PASS result[1] is 244
PASS result[0] is "number"
PASS result[1] is 245
PASS result[0] is "number"
PASS result[1] is 246
PASS result[0] is "number"
PASS result[1] is 247
PASS result[0] is "number"
PASS result[1] is 248
PASS result[0] is "number"
PASS result[1] is 249
PASS result[0] is "number"
PASS result[1] is 250
PASS result[0] is "number"
PASS result[1] is 251
PASS result[0] is "number"
PASS result[1] is 252
PASS result[0] is "number"
PASS result[1] is 253
PASS result[0] is "number"
PASS result[1] is 254
PASS result[0] is "number"
PASS result[1] is 255
PASS result[0] is "number"
PASS result[1] is 256
PASS result[0] is "number"
PASS result[1] is 257
PASS result[0] is "number"
PASS result[1] is 258
PASS result[0] is "number"
PASS result[1] is 259
PASS result[0] is "number"
PASS result[1] is 260
PASS result[0] is "number"
PASS result[1] is 261
PASS result[0] is "number"
PASS result[1] is 262
PASS result[0] is "number"
PASS result[1] is 263
PASS result[0] is "number"
PASS result[1] is 264
PASS result[0] is "number"
PASS result[1] is 265
PASS result[0] is "number"
PASS result[1] is 266
PASS result[0] is "number"
PASS result[1] is 267
PASS result[0] is "number"
PASS result[1] is 268
PASS result[0] is "number"
PASS result[1] is 269
PASS result[0] is "number"
PASS result[1] is 270
PASS result[0] is "number"
PASS result[1] is 271
PASS result[0] is "number"
PASS result[1] is 272
PASS result[0] is "number"
PASS result[1] is 273
PASS result[0] is "number"
PASS result[1] is 274
PASS result[0] is "number"
PASS result[1] is 275
PASS result[0] is "number"
PASS result[1] is 276
PASS result[0] is "number"
PASS result[1] is 277
PASS result[0] is "number"
PASS result[1] is 278
PASS result[0] is "number"
PASS result[1] is 279
PASS result[0] is "number"
PASS result[1] is 280
PASS result[0] is "number"
PASS result[1] is 281
PASS result[0] is "number"
PASS result[1] is 282
PASS result[0] is "number"
PASS result[1] is 283
PASS result[0] is "number"
PASS result[1] is 284
PASS result[0] is "number"
PASS result[1] is 285
PASS result[0] is "number"
PASS result[1] is 286
PASS result[0] is "number"
PASS result[1] is 287
PASS result[0] is "number"
PASS result[1] is 288
PASS result[0] is "number"
PASS result[1] is 289
PASS result[0] is "number"
PASS result[1] is 290
PASS result[0] is "number"
PASS result[1] is 291
PASS result[0] is "number"
PASS result[1] is 292
PASS result[0] is "number"
PASS result[1] is 293
PASS result[0] is "number"
PASS result[1] is 294
PASS result[0] is "number"
PASS result[1] is 295
PASS result[0] is "number"
PASS result[1] is 296
PASS result[0] is "number"
PASS result[1] is 297
PASS result[0] is "number"
PASS result[1] is 298
PASS result[0] is "number"
PASS result[1] is 299
PASS result[0] is "number"
PASS result[1] is 300
PASS result[0] is "number"
PASS result[1] is 301
PASS result[0] is "number"
PASS result[1] is 302
PASS result[0] is "number"
PASS result[1] is 303
PASS result[0] is "number"
PASS result[1] is 304
PASS result[0] is "number"
PASS result[1] is 305
PASS result[0] is "number"
PASS result[1] is 306
PASS result[0] is "number"
PASS result[1] is 307
PASS result[0] is "number"
PASS result[1] is 308
PASS result[0] is "number"
PASS result[1] is 309
PASS result[0] is "number"
PASS result[1] is 310
PASS result[0] is "number"
PASS result[1] is 311
PASS result[0] is "number"
PASS result[1] is 312
PASS result[0] is "number"
PASS result[1] is 313
PASS result[0] is "number"
PASS result[1] is 314
PASS result[0] is "number"
PASS result[1] is 315
PASS result[0] is "number"
PASS result[1] is 316
PASS result[0] is "number"
PASS result[1] is 317
PASS result[0] is "number"
PASS result[1] is 318
PASS result[0] is "number"
PASS result[1] is 319
PASS result[0] is "number"
PASS result[1] is 320
PASS result[0] is "number"
PASS result[1] is 321
PASS result[0] is "number"
PASS result[1] is 322
PASS result[0] is "number"
PASS result[1] is 323
PASS result[0] is "number"
PASS result[1] is 324
PASS result[0] is "number"
PASS result[1] is 325
PASS result[0] is "number"
PASS result[1] is 326
PASS result[0] is "number"
PASS result[1] is 327
PASS result[0] is "number"
PASS result[1] is 328
PASS result[0] is "number"
PASS result[1] is 329
PASS result[0] is "number"
PASS result[1] is 330
PASS result[0] is "number"
PASS result[1] is 331
PASS result[0] is "number"
PASS result[1] is 332
PASS result[0] is "number"
PASS result[1] is 333
PASS result[0] is "number"
PASS result[1] is 334
PASS result[0] is "number"
PASS result[1] is 335
PASS result[0] is "number"
PASS result[1] is 336
PASS result[0] is "number"
PASS result[1] is 337
PASS result[0] is "number"
PASS result[1] is 338
PASS result[0] is "number"
PASS result[1] is 339
PASS result[0] is "number"
PASS result[1] is 340
PASS result[0] is "number"
PASS result[1] is 341
PASS result[0] is "number"
PASS result[1] is 342
PASS result[0] is "number"
PASS result[1] is 343
PASS result[0] is "number"
PASS result[1] is 344
PASS result[0] is "number"
PASS result[1] is 345
PASS result[0] is "number"
PASS result[1] is 346
PASS result[0] is "number"
PASS result[1] is 347
PASS result[0] is "number"
PASS result[1] is 348
PASS result[0] is "number"
PASS result[1] is 349
PASS result[0] is "number"
PASS result[1] is 350
PASS result[0] is "number"
PASS result[1] is 351
PASS result[0] is "number"
PASS result[1] is 352
PASS result[0] is "number"
PASS result[1] is 353
PASS result[0] is "number"
PASS result[1] is 354
PASS result[0] is "number"
PASS result[1] is 355
PASS result[0] is "number"
PASS result[1] is 356
PASS result[0] is "number"
PASS result[1] is 357
PASS result[0] is "number"
PASS result[1] is 358
PASS result[0] is "number"
PASS result[1] is 359
PASS result[0] is "number"
PASS result[1] is 360
PASS result[0] is "number"
PASS result[1] is 361
PASS result[0] is "number"
PASS result[1] is 362
PASS result[0] is "number"
PASS result[1] is 363
PASS result[0] is "number"
PASS result[1] is 364
PASS result[0] is "number"
PASS result[1] is 365
PASS result[0] is "number"
PASS result[1] is 366
PASS result[0] is "number"
PASS result[1] is 367
PASS result[0] is "number"
PASS result[1] is 368
PASS result[0] is "number"
PASS result[1] is 369
PASS result[0] is "number"
PASS result[1] is 370
PASS result[0] is "number"
PASS result[1] is 371
PASS result[0] is "number"
PASS result[1] is 372
PASS result[0] is "number"
PASS result[1] is 373
PASS result[0] is "number"
PASS result[1] is 374
PASS result[0] is "number"
PASS result[1] is 375
PASS result[0] is "number"
PASS result[1] is 376
PASS result[0] is "number"
PASS result[1] is 377
PASS result[0] is "number"
PASS result[1] is 378
PASS result[0] is "number"
PASS result[1] is 379
PASS result[0] is "number"
PASS result[1] is 380
PASS result[0] is "number"
PASS result[1] is 381
PASS result[0] is "number"
PASS result[1] is 382
PASS result[0] is "number"
PASS result[1] is 383
PASS result[0] is "number"
PASS result[1] is 384
PASS result[0] is "number"
PASS result[1] is 385
PASS result[0] is "number"
PASS result[1] is 386
PASS result[0] is "number"
PASS result[1] is 387
PASS result[0] is "number"
PASS result[1] is 388
PASS result[0] is "number"
PASS result[1] is 389
PASS result[0] is "number"
PASS result[1] is 390
PASS result[0] is "number"
PASS result[1] is 391
PASS result[0] is "number"
PASS result[1] is 392
PASS result[0] is "number"
PASS result[1] is 393
PASS result[0] is "number"
PASS result[1] is 394
PASS result[0] is "number"
PASS result[1] is 395
PASS result[0] is "number"
PASS result[1] is 396
PASS result[0] is "number"
PASS result[1] is 397
PASS result[0] is "number"
PASS result[1] is 398
PASS result[0] is "number"
PASS result[1] is 399
PASS result[0] is "number"
PASS result[1] is 400
PASS result[0] is "number"
PASS result[1] is 401
PASS result[0] is "number"
PASS result[1] is 402
PASS result[0] is "number"
PASS result[1] is 403
PASS result[0] is "number"
PASS result[1] is 404
PASS result[0] is "number"
PASS result[1] is 405
PASS result[0] is "number"
PASS result[1] is 406
PASS result[0] is "number"
PASS result[1] is 407
PASS result[0] is "number"
PASS result[1] is 408
PASS result[0] is "number"
PASS result[1] is 409
PASS result[0] is "number"
PASS result[1] is 410
PASS result[0] is "number"
PASS result[1] is 411
PASS result[0] is "number"
PASS result[1] is 412
PASS result[0] is "number"
PASS result[1] is 413
PASS result[0] is "number"
PASS result[1] is 414
PASS result[0] is "number"
PASS result[1] is 415
PASS result[0] is "number"
PASS result[1] is 416
PASS result[0] is "number"
PASS result[1] is 417
PASS result[0] is "number"
PASS result[1] is 418
PASS result[0] is "number"
PASS result[1] is 419
PASS result[0] is "number"
PASS result[1] is 420
PASS result[0] is "number"
PASS result[1] is 421
PASS result[0] is "number"
PASS result[1] is 422
PASS result[0] is "number"
PASS result[1] is 423
PASS result[0] is "number"
PASS result[1] is 424
PASS result[0] is "number"
PASS result[1] is 425
PASS result[0] is "number"
PASS result[1] is 426
PASS result[0] is "number"
PASS result[1] is 427
PASS result[0] is "number"
PASS result[1] is 428
PASS result[0] is "number"
PASS result[1] is 429
PASS result[0] is "number"
PASS result[1] is 430
PASS result[0] is "number"
PASS result[1] is 431
PASS result[0] is "number"
PASS result[1] is 432
PASS result[0] is "number"
PASS result[1] is 433
PASS result[0] is "number"
PASS result[1] is 434
PASS result[0] is "number"
PASS result[1] is 435
PASS result[0] is "number"
PASS result[1] is 436
PASS result[0] is "number"
PASS result[1] is 437
PASS result[0] is "number"
PASS result[1] is 438
PASS result[0] is "number"
PASS result[1] is 439
PASS result[0] is "number"
PASS result[1] is 440
PASS result[0] is "number"
PASS result[1] is 441
PASS result[0] is "number"
PASS result[1] is 442
PASS result[0] is "number"
PASS result[1] is 443
PASS result[0] is "number"
PASS result[1] is 444
PASS result[0] is "number"
PASS result[1] is 445
PASS result[0] is "number"
PASS result[1] is 446
PASS result[0] is "number"
PASS result[1] is 447
PASS result[0] is "number"
PASS result[1] is 448
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS result[0] is "string"
PASS result[1] is 41
PASS successfullyParsed is true

TEST COMPLETE

                         node-23.7.0/deps/v8/test/webkit/dfg-cfg-simplify-eliminate-set-local-type-check-then-typeof.js      0000664 0000000 0000000 00000004236 14746647661 0032123 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests what happens when CFG simplification leads to the elimination of a set local that had a type check, and then we do a typeof on the value, which can be constant folded if the type check stays."
);

function foo(o) {
    var x;
    if (o.f)
        x = o.g;
    else
        x = o.h;
    return [typeof x, x - 1];
}

for (var i = 0; i < 500; ++i) {
    var o = {f:foo};
    var expectedFirst;
    var expectedSecond;
    if (i < 450) {
        o.g = i;
        expectedFirst = "\"number\"";
        expectedSecond = "" + (i - 1);
    } else {
        o.g = "42";
        expectedFirst = "\"string\"";
        expectedSecond = "41";
    }
    var result = foo(o);
    shouldBe("result[0]", expectedFirst);
    shouldBe("result[1]", expectedSecond);
}
                                                                                                                                                                                                                                                                                                                                                                  dfg-cfg-simplify-phantom-get-local-on-same-block-set-local-expected.txt                             0000664 0000000 0000000 00000013540 14746647661 0033543 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/deps/v8/test/webkit                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that attempts by the DFG simplification to short-circuit a Phantom to a GetLocal on a variable that is SetLocal'd in the same block, and where the predecessor block(s) make no mention of that variable, do not result in crashes.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS thingy(o) is 42
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                node-23.7.0/deps/v8/test/webkit/dfg-cfg-simplify-phantom-get-local-on-same-block-set-local.js       0000664 0000000 0000000 00000004761 14746647661 0031625 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that attempts by the DFG simplification to short-circuit a Phantom to a GetLocal on a variable that is SetLocal'd in the same block, and where the predecessor block(s) make no mention of that variable, do not result in crashes."
);

function baz() {
    // Do something that prevents inlining.
    return function() { }
}

function stuff(z) { }

function foo(x, y) {
    var a = arguments; // Force arguments to be captured, so that x is captured.
    baz();
    var z = x;
    stuff(z); // Force a Flush, and then a Phantom on the GetLocal of x.
    return 42;
}

var o = {
    g: function(x) { }
};

function thingy(o) {
    var p = {};
    var result;
    // Trick to delay control flow graph simplification until after the flush of x above gets turned into a phantom.
    if (o.g)
        p.f = true;
    if (p.f) {
        // Basic block that stores to x in foo(), which is a captured variable, with
        // the predecessor block making no mention of x.
        result = foo("hello", 2);
    }
    return result;
}

for (var i = 0; i < 200; ++i)
    shouldBe("thingy(o)", "42");
               node-23.7.0/deps/v8/test/webkit/dfg-cfg-simplify-redundant-dead-get-local-expected.txt              0000664 0000000 0000000 00000105576 14746647661 0030540 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests if the CFG simplifier gracefully handles the case where Block #1 and #2 are merged, #1 has a dead GetLocal, and #2 has a live GetLocal on the same local.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS array[i] is 2.23606797749979
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                  node-23.7.0/deps/v8/test/webkit/dfg-cfg-simplify-redundant-dead-get-local.js                        0000664 0000000 0000000 00000004230 14746647661 0026517 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests if the CFG simplifier gracefully handles the case where Block #1 and #2 are merged, #1 has a dead GetLocal, and #2 has a live GetLocal on the same local."
);

var array = [];

var getDist = function () {
    // a conditional absolutely MUST be here for the whole thing to break.
    // the return value is irrelevant

    if (false) return "I'm irrelevant!";

    return Math.sqrt(5);
}


var calcError = function(){
    var dist = 0; // initialisation is necessary for the bug to occur

    true && (dist = getDist());

    array.push(dist);
}


for(var a=0; a<1000; a++){ // the loop needs to be outside calcError, otherwise no bug...
    calcError();
}

for (var i = 0; i < array.length; ++i)
    shouldBe("array[i]", "2.23606797749979");
                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/deps/v8/test/webkit/dfg-check-structure-elimination-for-non-cell-expected.txt           0000664 0000000 0000000 00000012550 14746647661 0031324 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that we do the right things when we prove that we can eliminate a structure check, but haven't proved that the value is definitely an object - i.e. we've proved that it's either an object with a specific structure, or it's not an object at all.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
Caught exception: TypeError: Cannot read properties of null (reading 'g')
PASS baz(i) is "ERROR"
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS baz(i) is 66
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                        node-23.7.0/deps/v8/test/webkit/dfg-check-structure-elimination-for-non-cell.js                     0000664 0000000 0000000 00000004045 14746647661 0027322 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that we do the right things when we prove that we can eliminate a structure check, but haven't proved that the value is definitely an object - i.e. we've proved that it's either an object with a specific structure, or it's not an object at all."
);

function foo(o, p) {
    var x = o.f;
    if (p)
        o = null;
    return x + o.g();
}

function bar() {
    return 24;
}

function baz(i) {
    try {
        return foo({f:42, g:bar}, i == 190);
    } catch (e) {
        debug("Caught exception: " + e);
        return "ERROR";
    }
}

for (var i = 0; i < 200; ++i)
    shouldBe("baz(i)", i == 190 ? "\"ERROR\"" : "66");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/deps/v8/test/webkit/dfg-check-two-structures-expected.txt                               0000664 0000000 0000000 00000013272 14746647661 0025521 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

This tests that a polymorphic structure check is actually executed.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 44
PASS foo(o, o) is 42
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS foo(o, o) is 46
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                                                      node-23.7.0/deps/v8/test/webkit/dfg-check-two-structures.js                                         0000664 0000000 0000000 00000003721 14746647661 0023515 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"This tests that a polymorphic structure check is actually executed."
);

function foo(o, p) {
    if (o == p)
        return o.f;
    else
        return 75;
}

var o1 = {f:42, g:43};
var o2 = {f:44};
var o3 = {e:45, f:46};

for (var i = 0; i < 200; ++i) {
    var o;
    var expected;
    if (i < 150) {
        if (i & 1) {
            o = o1;
            expected = 42;
        } else {
            o = o2;
            expected = 44;
        }
    } else {
        o = o3;
        expected = 46;
    }
    shouldBe("foo(o, o)", "" + expected);
}
                                               dfg-compare-final-object-to-final-object-or-other-when-both-proven-final-object-expected.txt        0000664 0000000 0000000 00000020057 14746647661 0037560 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/deps/v8/test/webkit                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that the CompareEq optimization for the case where one side is predicted final object and the other side is predicted either final object or other (i.e. null or undefined) doesn't assert when both sides are also proven final object.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, 42, true]
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 dfg-compare-final-object-to-final-object-or-other-when-both-proven-final-object.js                  0000664 0000000 0000000 00000003606 14746647661 0035557 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/deps/v8/test/webkit                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that the CompareEq optimization for the case where one side is predicted final object and the other side is predicted either final object or other (i.e. null or undefined) doesn't assert when both sides are also proven final object."
);

function foo(a, b) {
    return [a.f, b.f, a == b];
}

for (var i = 0; i < 100; ++i) {
    if (i%2) {
        var o = {f:42};
        shouldBe("foo(o, o)", "[42, 42, true]");
    } else
        shouldThrow("foo({f:42}, null)");
}
                                                                                                                          dfg-compare-final-object-to-final-object-or-other-when-proven-final-object-expected.txt             0000664 0000000 0000000 00000017552 14746647661 0036634 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/deps/v8/test/webkit                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that the CompareEq optimization for the case where one side is predicted final object and the other side is predicted either final object or other (i.e. null or undefined) doesn't assert when the other side is also proven final object.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS foo({f:42}, null) threw exception TypeError: Cannot read properties of null (reading 'f').
PASS foo(o, o) is [42, true]
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                      dfg-compare-final-object-to-final-object-or-other-when-proven-final-object.js                       0000664 0000000 0000000 00000003600 14746647661 0034617 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/deps/v8/test/webkit                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that the CompareEq optimization for the case where one side is predicted final object and the other side is predicted either final object or other (i.e. null or undefined) doesn't assert when the other side is also proven final object."
);

function foo(a, b) {
    return [b.f, a == b];
}

for (var i = 0; i < 100; ++i) {
    if (i%2) {
        var o = {f:42};
        shouldBe("foo(o, o)", "[42, true]");
    } else
        shouldThrow("foo({f:42}, null)");
}
                                                                                                                                node-23.7.0/deps/v8/test/webkit/dfg-constant-fold-first-local-read-after-block-merge-expected.txt   0000664 0000000 0000000 00000012354 14746647661 0032601 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that the DFG doesn't crash if we constant fold the first read of a local variable in a block that is the result of merging two blocks, where the first doesn't touch the local and the second reads it.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS bar(5) is 42
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                    node-23.7.0/deps/v8/test/webkit/dfg-constant-fold-first-local-read-after-block-merge.js             0000664 0000000 0000000 00000003627 14746647661 0030602 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that the DFG doesn't crash if we constant fold the first read of a local variable in a block that is the result of merging two blocks, where the first doesn't touch the local and the second reads it."
);

function foo(x, y) {
    var o = {};
    if (y == 5) {
        o.f = 42;
    }
    var z = o.f;
    if (x == 5) {
        if (y == 5) {
            return z;
        }
    }
}

function bar(x) {
    return foo(x, 5);
}

for (var i = 0; i < 200; ++i)
    shouldBe("bar(5)", "42");
                                                                                                         node-23.7.0/deps/v8/test/webkit/dfg-constant-fold-logical-not-branch-expected.txt                   0000664 0000000 0000000 00000164462 14746647661 0027640 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests what happens if we fail to constant fold a LogicalNot that leads into a branch, when the CFA proves that the LogicalNot has a constant value.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS foo1(new Stuff()) is 43
PASS foo2(new Stuff()) is 58
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                              node-23.7.0/deps/v8/test/webkit/dfg-constant-fold-logical-not-branch.js                             0000664 0000000 0000000 00000004045 14746647661 0025624 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests what happens if we fail to constant fold a LogicalNot that leads into a branch, when the CFA proves that the LogicalNot has a constant value."
);

function foo1(o) {
    if (!!o.thingy)
        return o.thingy(42);
    else
        return o.otherThingy(57);
}

function foo2(o) {
    if (!o.thingy)
        return o.otherThingy(42);
    else
        return o.thingy(57);
}

function Stuff() {
}

Stuff.prototype = {
    thingy: function(x) { return x + 1; },
    otherThingy: function(x) { return x - 1; }
};

for (var i = 0; i < 1000; ++i) {
    shouldBe("foo1(new Stuff())", "43");
    shouldBe("foo2(new Stuff())", "58");
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/deps/v8/test/webkit/dfg-constant-fold-misprediction-expected.txt                        0000664 0000000 0000000 00000003435 14746647661 0027036 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

This tests that a constant folding on a node that has obviously mispredicted type doesn't send the compiler into an infinite loop.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(0.5) is 1000.50025
PASS foo(0.5) is 1000.50025
PASS foo(0.5) is 1000.50025
PASS foo(0.5) is 1000.50025
PASS foo(0.5) is 1000.50025
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                   node-23.7.0/deps/v8/test/webkit/dfg-constant-fold-misprediction.js                                  0000664 0000000 0000000 00000006374 14746647661 0025041 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"This tests that a constant folding on a node that has obviously mispredicted type doesn't send the compiler into an infinite loop."
);

// A function with an argument correctly predicted double.
function foo(x) {
    // Two variables holding constants such that the bytecode generation constant folder
    // will not constant fold the division below, but the DFG constant folder will.
    var a = 1;
    var b = 4000;
    // A division that is going to be predicted integer on the first compilation. The
    // compilation will be triggered from the loop below so the slow case counter of the
    // division will be 1, which is too low for the division to be predicted double.
    // If we constant fold this division, we'll have a constant node that is predicted
    // integer but that contains a double. The subsequent addition to x, which is
    // predicted double, will lead the Fixup phase to inject an Int32ToDouble node on
    // the constant-that-was-a-division; subsequent fases in the fixpoint will constant
    // fold that Int32ToDouble. And hence we will have an infinite loop. The correct fix
    // is to disable constant folding of mispredicted nodes; that allows the normal
    // process of correcting predictions (OSR exit profiling, exiting to profiled code,
    // and recompilation with exponential backoff) to take effect so that the next
    // compilation does not make this same mistake.
    var c = (a / b) + x;
    // A pointless loop to force the first compilation to occur before the division got
    // hot. If this loop was not here then the division would be known to produce doubles
    // on the first compilation.
    var d = 0;
    for (var i = 0; i < 1000; ++i)
        d++;
    return c + d;
}

// Call foo() enough times to make totally sure that we optimize.
for (var i = 0; i < 5; ++i)
    shouldBe("foo(0.5)", "1000.50025");
                                                                                                                                                                                                                                                                    dfg-constant-fold-uncaptured-variable-that-is-later-captured-expected.txt                           0000664 0000000 0000000 00000010621 14746647661 0034317 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/deps/v8/test/webkit                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that constant folding an access to an uncaptured variable that is captured later in the same basic block doesn't lead to assertion failures.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS foo(true, 5)[0] is 462
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                               node-23.7.0/deps/v8/test/webkit/dfg-constant-fold-uncaptured-variable-that-is-later-captured.js     0000664 0000000 0000000 00000005273 14746647661 0032403 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that constant folding an access to an uncaptured variable that is captured later in the same basic block doesn't lead to assertion failures."
);

var thingy = 456;

function bar() {
    return thingy;
}

function baz(a) {
    if (a) // Here we have an access to r2. The bug was concerned with our assertions thinking that this access was invalid.
        return arguments; // Force r2 (see below) to get captured.
}

function foo(p, a) {
    // The temporary variable corresponding to the 'bar' callee coming out of the ternary expression will be allocated by
    // the bytecompiler to some virtual register, say r2. This expression is engineered so that (1) the virtual register
    // chosen for the callee here is the same as the one that will be chosen for the first non-this argument below,
    // (2) that the callee ends up being constant but requires CFA to prove it, and (3) that we actually load that constant
    // using GetLocal (which happens because of the CheckFunction to check the callee).
    var x = (a + 1) + (p ? bar : bar)();
    // The temporary variable corresponding to the first non-this argument to baz will be allocated to the same virtual
    // register (i.e. r2).
    return baz(x);
}

for (var i = 0; i < 100; ++i)
    shouldBe("foo(true, 5)[0]", "462");
                                                                                                                                                                                                                                                                                                                                     node-23.7.0/deps/v8/test/webkit/dfg-convert-this-dom-window-expected.txt                            0000664 0000000 0000000 00000254361 14746647661 0026131 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

This tests that we can correctly call Function.prototype.call in the DFG, but more precisely, that we give the correct this object in case it is undefined

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS myObject.call() is [myObject, "myObject.call"]
PASS myFunction('arg1') is [this, "myFunction", "arg1"]
PASS myFunction.call(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.call() is [this, "myFunction", undefined]
PASS myFunction.call(null) is [this, "myFunction", undefined]
PASS myFunction.call(undefined) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(myObject, 'arg1') is [myObject, "myFunction", "arg1"]
PASS myFunction.aliasedCall() is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(null) is [this, "myFunction", undefined]
PASS myFunction.aliasedCall(undefined) is [this, "myFunction", undefined]
PASS myFunctionWithCall.call(myObject, 'arg1') is [myFunctionWithCall, "myFunctionWithCall.call", myObject]
PASS myFunctionWithCall.aliasedCall(myObject, 'arg1') is [myObject, "myFunctionWithCall", "arg1"]
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                               node-23.7.0/deps/v8/test/webkit/dfg-convert-this-dom-window.js                                      0000664 0000000 0000000 00000005745 14746647661 0024127 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"This tests that we can correctly call Function.prototype.call in the DFG, but more precisely, that we give the correct this object in case it is undefined"
);

var myObject = { call: function() { return [myObject, "myObject.call"] } };
var myFunction = function (arg1) { return [this, "myFunction", arg1] };
var myFunctionWithCall = function (arg1) { return [this, "myFunctionWithCall", arg1] };
myFunctionWithCall.call = function (arg1) { return [this, "myFunctionWithCall.call", arg1] };
Function.prototype.aliasedCall = Function.prototype.call;

for (var i = 0; i < 100; ++i) {
    shouldBe("myObject.call()", '[myObject, "myObject.call"]');
    shouldBe("myFunction('arg1')", '[this, "myFunction", "arg1"]');
    shouldBe("myFunction.call(myObject, 'arg1')", '[myObject, "myFunction", "arg1"]');
    shouldBe("myFunction.call()", '[this, "myFunction", undefined]');
    shouldBe("myFunction.call(null)", '[this, "myFunction", undefined]');
    shouldBe("myFunction.call(undefined)", '[this, "myFunction", undefined]');
    shouldBe("myFunction.aliasedCall(myObject, 'arg1')", '[myObject, "myFunction", "arg1"]');
    shouldBe("myFunction.aliasedCall()", '[this, "myFunction", undefined]');
    shouldBe("myFunction.aliasedCall(null)", '[this, "myFunction", undefined]');
    shouldBe("myFunction.aliasedCall(undefined)", '[this, "myFunction", undefined]');
    shouldBe("myFunctionWithCall.call(myObject, 'arg1')", '[myFunctionWithCall, "myFunctionWithCall.call", myObject]');
    shouldBe("myFunctionWithCall.aliasedCall(myObject, 'arg1')", '[myObject, "myFunctionWithCall", "arg1"]');
}
                           node-23.7.0/deps/v8/test/webkit/dfg-convert-this-object-then-exit-on-other-expected.txt             0000664 0000000 0000000 00000014502 14746647661 0030736 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that a convert_this optimized for the case where this is an object behaves correctly when you then pass null.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                              node-23.7.0/deps/v8/test/webkit/dfg-convert-this-object-then-exit-on-other.js                       0000664 0000000 0000000 00000003347 14746647661 0026741 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that a convert_this optimized for the case where this is an object behaves correctly when you then pass null."
);

function foo() {
    return this.x;
}

x = 42;

for (var i = 0; i < 200; ++i) {
    var me;
    if (i < 150)
        me = this;
    else
        me = null;
    shouldBe("foo.call(me)", "42");
}
                                                                                                                                                                                                                                                                                         node-23.7.0/deps/v8/test/webkit/dfg-convert-this-other-then-exit-on-object-expected.txt             0000664 0000000 0000000 00000014502 14746647661 0030736 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that a convert_this optimized for the case where this is null behaves correctly when you then pass an object.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                              node-23.7.0/deps/v8/test/webkit/dfg-convert-this-other-then-exit-on-object.js                       0000664 0000000 0000000 00000003347 14746647661 0026741 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that a convert_this optimized for the case where this is null behaves correctly when you then pass an object."
);

function foo() {
    return this.x;
}

x = 42;

for (var i = 0; i < 200; ++i) {
    var me;
    if (i < 150)
        me = null;
    else
        me = this;
    shouldBe("foo.call(me)", "42");
}
                                                                                                                                                                                                                                                                                         node-23.7.0/deps/v8/test/webkit/dfg-convert-this-polymorphic-object-then-exit-on-other-expected.txt 0000664 0000000 0000000 00000062135 14746647661 0033306 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that a convert_this optimized for the case where this is an object with polymorphic structure behaves correctly when you then pass null.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/deps/v8/test/webkit/dfg-convert-this-polymorphic-object-then-exit-on-other.js           0000664 0000000 0000000 00000003464 14746647661 0031304 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that a convert_this optimized for the case where this is an object with polymorphic structure behaves correctly when you then pass null."
);

function foo() {
    return this.x;
}

x = 42;

for (var i = 0; i < 1000; ++i) {
    var me;
    if (i < 150)
        me = this;
    else if (i < 950)
        me = {x:42, y:62};
    else
        me = null;
    shouldBe("foo.call(me)", "42");
}
                                                                                                                                                                                                            node-23.7.0/deps/v8/test/webkit/dfg-convert-this-polymorphic-object-then-exit-on-string-expected.txt0000664 0000000 0000000 00000062141 14746647661 0033470 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that a convert_this optimized for the case where this is an object with polymorphic structure behaves correctly when you then pass a string.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS foo.call(me) is 42
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/deps/v8/test/webkit/dfg-convert-this-polymorphic-object-then-exit-on-string.js          0000664 0000000 0000000 00000003525 14746647661 0031467 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that a convert_this optimized for the case where this is an object with polymorphic structure behaves correctly when you then pass a string."
);

function foo() {
    return this.x;
}

x = 42;

String.prototype.x = 42;

for (var i = 0; i < 1000; ++i) {
    var me;
    if (i < 150)
        me = this;
    else if (i < 950)
        me = {x:42, y:62};
    else
        me = "hello";
    shouldBe("foo.call(me)", "42");
}
                                                                                                                                                                           node-23.7.0/deps/v8/test/webkit/dfg-create-inlined-arguments-in-closure-inline-expected.txt         0000664 0000000 0000000 00000012111 14746647661 0031623 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that if the DFG tries to create inlined arguments from within a inlined call frame corresponding to a closure call, then we don't crash.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS value is 5
PASS value is 6
PASS value is 7
PASS value is 8
PASS value is 9
PASS value is 10
PASS value is 11
PASS value is 12
PASS value is 13
PASS value is 14
PASS value is 15
PASS value is 16
PASS value is 17
PASS value is 18
PASS value is 19
PASS value is 20
PASS value is 21
PASS value is 22
PASS value is 23
PASS value is 24
PASS value is 25
PASS value is 26
PASS value is 27
PASS value is 28
PASS value is 29
PASS value is 30
PASS value is 31
PASS value is 32
PASS value is 33
PASS value is 34
PASS value is 35
PASS value is 36
PASS value is 37
PASS value is 38
PASS value is 39
PASS value is 40
PASS value is 41
PASS value is 42
PASS value is 43
PASS value is 44
PASS value is 45
PASS value is 46
PASS value is 47
PASS value is 48
PASS value is 49
PASS value is 50
PASS value is 51
PASS value is 52
PASS value is 53
PASS value is 54
PASS value is 55
PASS value is 56
PASS value is 57
PASS value is 58
PASS value is 59
PASS value is 60
PASS value is 61
PASS value is 62
PASS value is 63
PASS value is 64
PASS value is 65
PASS value is 66
PASS value is 67
PASS value is 68
PASS value is 69
PASS value is 70
PASS value is 71
PASS value is 72
PASS value is 73
PASS value is 74
PASS value is 75
PASS value is 76
PASS value is 77
PASS value is 78
PASS value is 79
PASS value is 80
PASS value is 81
PASS value is 82
PASS value is 83
PASS value is 84
PASS value is 85
PASS value is 86
PASS value is 87
PASS value is 88
PASS value is 89
PASS value is 90
PASS value is 91
PASS value is 92
PASS value is 93
PASS value is 94
PASS value is 95
PASS value is 96
PASS value is 97
PASS value is 98
PASS value is 99
PASS value is 100
PASS value is 101
PASS value is 102
PASS value is 103
PASS value is 104
PASS value is 105
PASS value is 106
PASS value is 107
PASS value is 108
PASS value is 109
PASS value is 110
PASS value is 111
PASS value is 112
PASS value is 113
PASS value is 114
PASS value is 115
PASS value is 116
PASS value is 117
PASS value is 118
PASS value is 119
PASS value is 120
PASS value is 121
PASS value is 122
PASS value is 123
PASS value is 124
PASS value is 125
PASS value is 126
PASS value is 127
PASS value is 128
PASS value is 129
PASS value is 130
PASS value is 131
PASS value is 132
PASS value is 133
PASS value is 134
PASS value is 135
PASS value is 136
PASS value is 137
PASS value is 138
PASS value is 139
PASS value is 140
PASS value is 141
PASS value is 142
PASS value is 143
PASS value is 144
PASS value is 145
PASS value is 146
PASS value is 147
PASS value is 148
PASS value is 149
PASS value is 150
PASS value is 151
PASS value is 152
PASS value is 153
PASS value is 154
PASS value is 155
PASS value is 156
PASS value is 157
PASS value is 158
PASS value is 159
PASS value is 160
PASS value is 161
PASS value is 162
PASS value is 163
PASS value is 164
PASS value is 165
PASS value is 166
PASS value is 167
PASS value is 168
PASS value is 169
PASS value is 170
PASS value is 171
PASS value is 172
PASS value is 173
PASS value is 174
PASS value is 175
PASS value is 176
PASS value is 177
PASS value is 178
PASS value is 179
PASS value is 180
PASS value is 181
PASS value is 182
PASS value is 183
PASS value is 184
PASS value is 185
PASS value is 186
PASS value is 187
PASS value is 188
PASS value is 189
PASS value is 190
PASS value is 191
PASS value is 192
PASS value is 193
PASS value is 194
PASS value is 5.5
PASS value is 5.5
PASS value is 5.5
PASS value is 5.5
PASS value is 5.5
PASS value is 5.5
PASS value is 5.5
PASS value is 5.5
PASS value is 5.5
PASS value is 5.5
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/deps/v8/test/webkit/dfg-create-inlined-arguments-in-closure-inline.js                   0000664 0000000 0000000 00000003705 14746647661 0027632 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that if the DFG tries to create inlined arguments from within a inlined call frame corresponding to a closure call, then we don't crash."
);

function foo(x, f) {
    return f(x, 5)[0];
}

for (var i = 0; i < 200; ++i) {
    var value = foo(i < 190 ? i : 0.5, function() {
        var result = 0;
        for (var j = 0; j < arguments.length; ++j)
            result += arguments[j];
        return [result, arguments];
    });
    if (i < 190)
        shouldBe("value", "" + (i + 5));
    else
        shouldBe("value", "5.5");
}
                                                           node-23.7.0/deps/v8/test/webkit/dfg-cse-cfa-discrepancy-expected.txt                                0000664 0000000 0000000 00000015372 14746647661 0025222 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests stability when the CFA finds a constant in block-local data flow over captured variables but the CSE doesn't because of differences in heap modeling.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS foo(i, i + 1) is 162
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                      node-23.7.0/deps/v8/test/webkit/dfg-cse-cfa-discrepancy.js                                          0000664 0000000 0000000 00000004240 14746647661 0023210 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests stability when the CFA finds a constant in block-local data flow over captured variables but the CSE doesn't because of differences in heap modeling."
);

function foo(a, b) {
    var x = a + b;
    var y = a - b;
    function bar() {
        var m = x + y;
        var n = x - y;
        function baz() {
            return m + n;
        }
        m = 23;
        if (m < n) {
            m = 12;
            y = 72; // PutScopedVar appears to clobber world in CSE but only clobbers structures in CFA.
            return m + 6 + n + baz();
        } else
            return 91;
    }
    x = 42;
    if (y < 0) {
        return x + 5 + y + bar();
    } else
        return 73;
}

for (var i = 0; i < 200; ++i)
    shouldBe("foo(i, i + 1)", "162");
                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/deps/v8/test/webkit/dfg-cse-dead-get-scoped-var-expected.txt                            0000664 0000000 0000000 00000063767 14746647661 0025715 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that CSE doesn't try to match against a dead GetScopedVar.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS foo(i)(false) is 42
PASS successfullyParsed is true

TEST COMPLETE

         node-23.7.0/deps/v8/test/webkit/dfg-cse-dead-get-scoped-var.js                                      0000664 0000000 0000000 00000003327 14746647661 0023675 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that CSE doesn't try to match against a dead GetScopedVar."
);

function foo(a) {
    var x = a;
    return function(p) {
        if (p) {
            var tmp = x;
            return x;
        }
        return 42;
    };
}

for (var i = 0; i < 1000; ++i)
    shouldBe("foo(i)(false)", "42");
                                                                                                                                                                                                                                                                                                         node-23.7.0/deps/v8/test/webkit/dfg-dead-min-one-arg-expected.txt                                   0000664 0000000 0000000 00000013554 14746647661 0024423 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that a dummy use of Math.min(a) at least speculates that its argument is indeed a number.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS result is 42
PASS ok is 150
PASS result is 37
PASS ok is 151
PASS result is 37
PASS ok is 152
PASS result is 37
PASS ok is 153
PASS result is 37
PASS ok is 154
PASS result is 37
PASS ok is 155
PASS result is 37
PASS ok is 156
PASS result is 37
PASS ok is 157
PASS result is 37
PASS ok is 158
PASS result is 37
PASS ok is 159
PASS result is 37
PASS ok is 160
PASS result is 37
PASS ok is 161
PASS result is 37
PASS ok is 162
PASS result is 37
PASS ok is 163
PASS result is 37
PASS ok is 164
PASS result is 37
PASS ok is 165
PASS result is 37
PASS ok is 166
PASS result is 37
PASS ok is 167
PASS result is 37
PASS ok is 168
PASS result is 37
PASS ok is 169
PASS result is 37
PASS ok is 170
PASS result is 37
PASS ok is 171
PASS result is 37
PASS ok is 172
PASS result is 37
PASS ok is 173
PASS result is 37
PASS ok is 174
PASS result is 37
PASS ok is 175
PASS result is 37
PASS ok is 176
PASS result is 37
PASS ok is 177
PASS result is 37
PASS ok is 178
PASS result is 37
PASS ok is 179
PASS result is 37
PASS ok is 180
PASS result is 37
PASS ok is 181
PASS result is 37
PASS ok is 182
PASS result is 37
PASS ok is 183
PASS result is 37
PASS ok is 184
PASS result is 37
PASS ok is 185
PASS result is 37
PASS ok is 186
PASS result is 37
PASS ok is 187
PASS result is 37
PASS ok is 188
PASS result is 37
PASS ok is 189
PASS result is 37
PASS ok is 190
PASS result is 37
PASS ok is 191
PASS result is 37
PASS ok is 192
PASS result is 37
PASS ok is 193
PASS result is 37
PASS ok is 194
PASS result is 37
PASS ok is 195
PASS result is 37
PASS ok is 196
PASS result is 37
PASS ok is 197
PASS result is 37
PASS ok is 198
PASS result is 37
PASS ok is 199
PASS result is 37
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                    node-23.7.0/deps/v8/test/webkit/dfg-dead-min-one-arg.js                                             0000664 0000000 0000000 00000003624 14746647661 0022416 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that a dummy use of Math.min(a) at least speculates that its argument is indeed a number."
);

function foo(a) {
    return Math.min(a.f);
}

var x = {f:42};
var ok = null;
var expected = 42;
var empty = "";

for (var i = 0; i < 200; ++i) {
    if (i == 150) {
        x = {f:{valueOf:function(){ ok = i; return 37; }}};
        expected = 37;
    }
    var result = eval(empty + "foo(x)");
    if (i >= 150)
        shouldBe("ok", "" + i);
    shouldBe("result", "" + expected);
}
                                                                                                            node-23.7.0/deps/v8/test/webkit/dfg-dead-min-two-args-expected.txt                                  0000664 0000000 0000000 00000024774 14746647661 0024644 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that a dead use of Math.min(a,b) at least speculates that its arguments are indeed numbers.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS ok is 150
PASS result is 100
PASS ok is 151
PASS result is 100
PASS ok is 152
PASS result is 100
PASS ok is 153
PASS result is 100
PASS ok is 154
PASS result is 100
PASS ok is 155
PASS result is 100
PASS ok is 156
PASS result is 100
PASS ok is 157
PASS result is 100
PASS ok is 158
PASS result is 100
PASS ok is 159
PASS result is 100
PASS ok is 160
PASS result is 100
PASS ok is 161
PASS result is 100
PASS ok is 162
PASS result is 100
PASS ok is 163
PASS result is 100
PASS ok is 164
PASS result is 100
PASS ok is 165
PASS result is 100
PASS ok is 166
PASS result is 100
PASS ok is 167
PASS result is 100
PASS ok is 168
PASS result is 100
PASS ok is 169
PASS result is 100
PASS ok is 170
PASS result is 100
PASS ok is 171
PASS result is 100
PASS ok is 172
PASS result is 100
PASS ok is 173
PASS result is 100
PASS ok is 174
PASS result is 100
PASS ok is 175
PASS result is 100
PASS ok is 176
PASS result is 100
PASS ok is 177
PASS result is 100
PASS ok is 178
PASS result is 100
PASS ok is 179
PASS result is 100
PASS ok is 180
PASS result is 100
PASS ok is 181
PASS result is 100
PASS ok is 182
PASS result is 100
PASS ok is 183
PASS result is 100
PASS ok is 184
PASS result is 100
PASS ok is 185
PASS result is 100
PASS ok is 186
PASS result is 100
PASS ok is 187
PASS result is 100
PASS ok is 188
PASS result is 100
PASS ok is 189
PASS result is 100
PASS ok is 190
PASS result is 100
PASS ok is 191
PASS result is 100
PASS ok is 192
PASS result is 100
PASS ok is 193
PASS result is 100
PASS ok is 194
PASS result is 100
PASS ok is 195
PASS result is 100
PASS ok is 196
PASS result is 100
PASS ok is 197
PASS result is 100
PASS ok is 198
PASS result is 100
PASS ok is 199
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS result is 100
PASS ok is 150
PASS result is 100
PASS ok is 151
PASS result is 100
PASS ok is 152
PASS result is 100
PASS ok is 153
PASS result is 100
PASS ok is 154
PASS result is 100
PASS ok is 155
PASS result is 100
PASS ok is 156
PASS result is 100
PASS ok is 157
PASS result is 100
PASS ok is 158
PASS result is 100
PASS ok is 159
PASS result is 100
PASS ok is 160
PASS result is 100
PASS ok is 161
PASS result is 100
PASS ok is 162
PASS result is 100
PASS ok is 163
PASS result is 100
PASS ok is 164
PASS result is 100
PASS ok is 165
PASS result is 100
PASS ok is 166
PASS result is 100
PASS ok is 167
PASS result is 100
PASS ok is 168
PASS result is 100
PASS ok is 169
PASS result is 100
PASS ok is 170
PASS result is 100
PASS ok is 171
PASS result is 100
PASS ok is 172
PASS result is 100
PASS ok is 173
PASS result is 100
PASS ok is 174
PASS result is 100
PASS ok is 175
PASS result is 100
PASS ok is 176
PASS result is 100
PASS ok is 177
PASS result is 100
PASS ok is 178
PASS result is 100
PASS ok is 179
PASS result is 100
PASS ok is 180
PASS result is 100
PASS ok is 181
PASS result is 100
PASS ok is 182
PASS result is 100
PASS ok is 183
PASS result is 100
PASS ok is 184
PASS result is 100
PASS ok is 185
PASS result is 100
PASS ok is 186
PASS result is 100
PASS ok is 187
PASS result is 100
PASS ok is 188
PASS result is 100
PASS ok is 189
PASS result is 100
PASS ok is 190
PASS result is 100
PASS ok is 191
PASS result is 100
PASS ok is 192
PASS result is 100
PASS ok is 193
PASS result is 100
PASS ok is 194
PASS result is 100
PASS ok is 195
PASS result is 100
PASS ok is 196
PASS result is 100
PASS ok is 197
PASS result is 100
PASS ok is 198
PASS result is 100
PASS ok is 199
PASS result is 100
PASS successfullyParsed is true

TEST COMPLETE

    node-23.7.0/deps/v8/test/webkit/dfg-dead-min-two-args.js                                            0000664 0000000 0000000 00000004462 14746647661 0022632 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that a dead use of Math.min(a,b) at least speculates that its arguments are indeed numbers."
);

function foo(a, b) {
    Math.min(a.f, b.f);
    return 100;
}

function bar(a, b) {
    Math.min(a.f, b.f);
    return 100;
}

var x = {f:42};
var y = {f:43};
var ok = null;
var expected = 42;
var empty = "";

for (var i = 0; i < 200; ++i) {
    if (i == 150) {
        x = {f:{valueOf:function(){ ok = i; return 37; }}};
        expected = 37;
    }
    var result = eval(empty + "foo(x, y)");
    if (i >= 150)
        shouldBe("ok", "" + i);
    shouldBe("result", "100");
}

x = {f:42};
y = {f:43};
ok = null;
expected = 42;

for (var i = 0; i < 200; ++i) {
    if (i == 150) {
        y = {f:{valueOf:function(){ ok = i; return 37; }}};
        expected = 37;
    }
    var result = eval(empty + "bar(x, y)");
    if (i >= 150)
        shouldBe("ok", "" + i);
    shouldBe("result", "100");
}
                                                                                                                                                                                                              node-23.7.0/deps/v8/test/webkit/dfg-dead-redundant-get-array-length-expected.txt                    0000664 0000000 0000000 00000011353 14746647661 0027441 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that having a dead, and redundant, use of array.length doesn't cause compiler crashes.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS foo([1, 2, 3]) is 3
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                     node-23.7.0/deps/v8/test/webkit/dfg-dead-redundant-get-array-length.js                              0000664 0000000 0000000 00000003346 14746647661 0025442 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that having a dead, and redundant, use of array.length doesn't cause compiler crashes."
);

function foo(array) {
    var x = array.length; // This is dead. If it wasn't, it would be redundant with the one below.
    return array.length;
}

for (var i = 0; i < 128; ++i)
    shouldBe("foo([1, 2, 3])", "3");
                                                                                                                                                                                                                                                                                          node-23.7.0/deps/v8/test/webkit/dfg-dead-speculation-expected.txt                                   0000664 0000000 0000000 00000025101 14746647661 0024627 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that the DFG will still perform speculations on dead things.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 84
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS foo(thingy, i) is 10
PASS variable is 24
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/deps/v8/test/webkit/dfg-dead-speculation.js                                             0000664 0000000 0000000 00000003525 14746647661 0022633 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that the DFG will still perform speculations on dead things."
);

function foo(a, b) {
    var x = a.f - b;
    return 10;
}

var thingy = {f:42};
var variable = 84;
var expected = 84;

for (var i = 0; i < 200; ++i) {
    if (i == 150) {
        thingy = {f:{valueOf:function(){ variable = 24; return 5; }}};
        expected = 24;
    }
    shouldBe("foo(thingy, i)", "10");
    shouldBe("variable", "" + expected);
}
                                                                                                                                                                           dfg-dead-unreachable-code-with-chain-of-dead-unchecked-nodes-expected.txt                           0000664 0000000 0000000 00000064121 14746647661 0033773 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/deps/v8/test/webkit                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that code that is dead, unreachable, and contains a chain of nodes that use each other in an untyped way doesn't result in the IR getting corrupted.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS foo(42)(false) is 5
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/deps/v8/test/webkit/dfg-dead-unreachable-code-with-chain-of-dead-unchecked-nodes.js     0000664 0000000 0000000 00000003714 14746647661 0032051 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that code that is dead, unreachable, and contains a chain of nodes that use each other in an untyped way doesn't result in the IR getting corrupted."
);

function foo(a) {
    function bar(p) {
        if (p) {
            var x = a; // It's dead and unreachable, and it involves a GetScopeVar(GetScopeRegisters(GetMyScope())).
        }
        return 5;
    }
    return bar;
}

// Since the function contains unreachable code we need a higher optimization threshold.
for (var i = 0; i < 1000; ++i)
    shouldBe("foo(42)(false)", "5");
                                                    node-23.7.0/deps/v8/test/webkit/dfg-dead-variable-on-exit-expected.txt                              0000664 0000000 0000000 00000050374 14746647661 0025461 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

This tests that if a variable is dead on OSR exit, it will at least contain a valid JS value.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](2); foo(firstArg, secondArg) is 1
PASS array[1](3); foo(firstArg, secondArg) is 1
PASS array[2](4, 5); foo(firstArg, secondArg) is 1
PASS array[2](5, 6); foo(firstArg, secondArg) is 1
PASS array[3](6, 7, 8); foo(firstArg, secondArg) is 1
PASS array[3](7, 8, 9); foo(firstArg, secondArg) is 1
PASS array[4](8, 9, 10, 11); foo(firstArg, secondArg) is 1
PASS array[4](9, 10, 11, 12); foo(firstArg, secondArg) is 1
PASS array[5](10, 11, 12, 13, 14); foo(firstArg, secondArg) is 1
PASS array[5](11, 12, 13, 14, 15); foo(firstArg, secondArg) is 1
PASS array[6](12, 13, 14, 15, 16, 17); foo(firstArg, secondArg) is 1
PASS array[6](13, 14, 15, 16, 17, 18); foo(firstArg, secondArg) is 1
PASS array[7](14, 15, 16, 17, 18, 19, 20); foo(firstArg, secondArg) is 1
PASS array[7](15, 16, 17, 18, 19, 20, 21); foo(firstArg, secondArg) is 1
PASS array[8](16, 17, 18, 19, 20, 21, 22, 23); foo(firstArg, secondArg) is 1
PASS array[8](17, 18, 19, 20, 21, 22, 23, 24); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](20); foo(firstArg, secondArg) is 1
PASS array[1](21); foo(firstArg, secondArg) is 1
PASS array[2](22, 23); foo(firstArg, secondArg) is 1
PASS array[2](23, 24); foo(firstArg, secondArg) is 1
PASS array[3](24, 25, 26); foo(firstArg, secondArg) is 1
PASS array[3](25, 26, 27); foo(firstArg, secondArg) is 1
PASS array[4](26, 27, 28, 29); foo(firstArg, secondArg) is 1
PASS array[4](27, 28, 29, 30); foo(firstArg, secondArg) is 1
PASS array[5](28, 29, 30, 31, 32); foo(firstArg, secondArg) is 1
PASS array[5](29, 30, 31, 32, 33); foo(firstArg, secondArg) is 1
PASS array[6](30, 31, 32, 33, 34, 35); foo(firstArg, secondArg) is 1
PASS array[6](31, 32, 33, 34, 35, 36); foo(firstArg, secondArg) is 1
PASS array[7](32, 33, 34, 35, 36, 37, 38); foo(firstArg, secondArg) is 1
PASS array[7](33, 34, 35, 36, 37, 38, 39); foo(firstArg, secondArg) is 1
PASS array[8](34, 35, 36, 37, 38, 39, 40, 41); foo(firstArg, secondArg) is 1
PASS array[8](35, 36, 37, 38, 39, 40, 41, 42); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](38); foo(firstArg, secondArg) is 1
PASS array[1](39); foo(firstArg, secondArg) is 1
PASS array[2](40, 41); foo(firstArg, secondArg) is 1
PASS array[2](41, 42); foo(firstArg, secondArg) is 1
PASS array[3](42, 43, 44); foo(firstArg, secondArg) is 1
PASS array[3](43, 44, 45); foo(firstArg, secondArg) is 1
PASS array[4](44, 45, 46, 47); foo(firstArg, secondArg) is 1
PASS array[4](45, 46, 47, 48); foo(firstArg, secondArg) is 1
PASS array[5](46, 47, 48, 49, 50); foo(firstArg, secondArg) is 1
PASS array[5](47, 48, 49, 50, 51); foo(firstArg, secondArg) is 1
PASS array[6](48, 49, 50, 51, 52, 53); foo(firstArg, secondArg) is 1
PASS array[6](49, 50, 51, 52, 53, 54); foo(firstArg, secondArg) is 1
PASS array[7](50, 51, 52, 53, 54, 55, 56); foo(firstArg, secondArg) is 1
PASS array[7](51, 52, 53, 54, 55, 56, 57); foo(firstArg, secondArg) is 1
PASS array[8](52, 53, 54, 55, 56, 57, 58, 59); foo(firstArg, secondArg) is 1
PASS array[8](53, 54, 55, 56, 57, 58, 59, 60); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](56); foo(firstArg, secondArg) is 1
PASS array[1](57); foo(firstArg, secondArg) is 1
PASS array[2](58, 59); foo(firstArg, secondArg) is 1
PASS array[2](59, 60); foo(firstArg, secondArg) is 1
PASS array[3](60, 61, 62); foo(firstArg, secondArg) is 1
PASS array[3](61, 62, 63); foo(firstArg, secondArg) is 1
PASS array[4](62, 63, 64, 65); foo(firstArg, secondArg) is 1
PASS array[4](63, 64, 65, 66); foo(firstArg, secondArg) is 1
PASS array[5](64, 65, 66, 67, 68); foo(firstArg, secondArg) is 1
PASS array[5](65, 66, 67, 68, 69); foo(firstArg, secondArg) is 1
PASS array[6](66, 67, 68, 69, 70, 71); foo(firstArg, secondArg) is 1
PASS array[6](67, 68, 69, 70, 71, 72); foo(firstArg, secondArg) is 1
PASS array[7](68, 69, 70, 71, 72, 73, 74); foo(firstArg, secondArg) is 1
PASS array[7](69, 70, 71, 72, 73, 74, 75); foo(firstArg, secondArg) is 1
PASS array[8](70, 71, 72, 73, 74, 75, 76, 77); foo(firstArg, secondArg) is 1
PASS array[8](71, 72, 73, 74, 75, 76, 77, 78); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](74); foo(firstArg, secondArg) is 1
PASS array[1](75); foo(firstArg, secondArg) is 1
PASS array[2](76, 77); foo(firstArg, secondArg) is 1
PASS array[2](77, 78); foo(firstArg, secondArg) is 1
PASS array[3](78, 79, 80); foo(firstArg, secondArg) is 1
PASS array[3](79, 80, 81); foo(firstArg, secondArg) is 1
PASS array[4](80, 81, 82, 83); foo(firstArg, secondArg) is 1
PASS array[4](81, 82, 83, 84); foo(firstArg, secondArg) is 1
PASS array[5](82, 83, 84, 85, 86); foo(firstArg, secondArg) is 1
PASS array[5](83, 84, 85, 86, 87); foo(firstArg, secondArg) is 1
PASS array[6](84, 85, 86, 87, 88, 89); foo(firstArg, secondArg) is 1
PASS array[6](85, 86, 87, 88, 89, 90); foo(firstArg, secondArg) is 1
PASS array[7](86, 87, 88, 89, 90, 91, 92); foo(firstArg, secondArg) is 1
PASS array[7](87, 88, 89, 90, 91, 92, 93); foo(firstArg, secondArg) is 1
PASS array[8](88, 89, 90, 91, 92, 93, 94, 95); foo(firstArg, secondArg) is 1
PASS array[8](89, 90, 91, 92, 93, 94, 95, 96); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](92); foo(firstArg, secondArg) is 1
PASS array[1](93); foo(firstArg, secondArg) is 1
PASS array[2](94, 95); foo(firstArg, secondArg) is 1
PASS array[2](95, 96); foo(firstArg, secondArg) is 1
PASS array[3](96, 97, 98); foo(firstArg, secondArg) is 1
PASS array[3](97, 98, 99); foo(firstArg, secondArg) is 1
PASS array[4](98, 99, 100, 101); foo(firstArg, secondArg) is 1
PASS array[4](99, 100, 101, 102); foo(firstArg, secondArg) is 1
PASS array[5](100, 101, 102, 103, 104); foo(firstArg, secondArg) is 1
PASS array[5](101, 102, 103, 104, 105); foo(firstArg, secondArg) is 1
PASS array[6](102, 103, 104, 105, 106, 107); foo(firstArg, secondArg) is 1
PASS array[6](103, 104, 105, 106, 107, 108); foo(firstArg, secondArg) is 1
PASS array[7](104, 105, 106, 107, 108, 109, 110); foo(firstArg, secondArg) is 1
PASS array[7](105, 106, 107, 108, 109, 110, 111); foo(firstArg, secondArg) is 1
PASS array[8](106, 107, 108, 109, 110, 111, 112, 113); foo(firstArg, secondArg) is 1
PASS array[8](107, 108, 109, 110, 111, 112, 113, 114); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](110); foo(firstArg, secondArg) is 1
PASS array[1](111); foo(firstArg, secondArg) is 1
PASS array[2](112, 113); foo(firstArg, secondArg) is 1
PASS array[2](113, 114); foo(firstArg, secondArg) is 1
PASS array[3](114, 115, 116); foo(firstArg, secondArg) is 1
PASS array[3](115, 116, 117); foo(firstArg, secondArg) is 1
PASS array[4](116, 117, 118, 119); foo(firstArg, secondArg) is 1
PASS array[4](117, 118, 119, 120); foo(firstArg, secondArg) is 1
PASS array[5](118, 119, 120, 121, 122); foo(firstArg, secondArg) is 1
PASS array[5](119, 120, 121, 122, 123); foo(firstArg, secondArg) is 1
PASS array[6](120, 121, 122, 123, 124, 125); foo(firstArg, secondArg) is 1
PASS array[6](121, 122, 123, 124, 125, 126); foo(firstArg, secondArg) is 1
PASS array[7](122, 123, 124, 125, 126, 127, 128); foo(firstArg, secondArg) is 1
PASS array[7](123, 124, 125, 126, 127, 128, 129); foo(firstArg, secondArg) is 1
PASS array[8](124, 125, 126, 127, 128, 129, 130, 131); foo(firstArg, secondArg) is 1
PASS array[8](125, 126, 127, 128, 129, 130, 131, 132); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](128); foo(firstArg, secondArg) is 1
PASS array[1](129); foo(firstArg, secondArg) is 1
PASS array[2](130, 131); foo(firstArg, secondArg) is 1
PASS array[2](131, 132); foo(firstArg, secondArg) is 1
PASS array[3](132, 133, 134); foo(firstArg, secondArg) is 1
PASS array[3](133, 134, 135); foo(firstArg, secondArg) is 1
PASS array[4](134, 135, 136, 137); foo(firstArg, secondArg) is 1
PASS array[4](135, 136, 137, 138); foo(firstArg, secondArg) is 1
PASS array[5](136, 137, 138, 139, 140); foo(firstArg, secondArg) is 1
PASS array[5](137, 138, 139, 140, 141); foo(firstArg, secondArg) is 1
PASS array[6](138, 139, 140, 141, 142, 143); foo(firstArg, secondArg) is 1
PASS array[6](139, 140, 141, 142, 143, 144); foo(firstArg, secondArg) is 1
PASS array[7](140, 141, 142, 143, 144, 145, 146); foo(firstArg, secondArg) is 1
PASS array[7](141, 142, 143, 144, 145, 146, 147); foo(firstArg, secondArg) is 1
PASS array[8](142, 143, 144, 145, 146, 147, 148, 149); foo(firstArg, secondArg) is 1
PASS array[8](143, 144, 145, 146, 147, 148, 149, 150); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](146); foo(firstArg, secondArg) is 1
PASS array[1](147); foo(firstArg, secondArg) is 1
PASS array[2](148, 149); foo(firstArg, secondArg) is 1
PASS array[2](149, 150); foo(firstArg, secondArg) is 1
PASS array[3](150, 151, 152); foo(firstArg, secondArg) is 1
PASS array[3](151, 152, 153); foo(firstArg, secondArg) is 1
PASS array[4](152, 153, 154, 155); foo(firstArg, secondArg) is 1
PASS array[4](153, 154, 155, 156); foo(firstArg, secondArg) is 1
PASS array[5](154, 155, 156, 157, 158); foo(firstArg, secondArg) is 1
PASS array[5](155, 156, 157, 158, 159); foo(firstArg, secondArg) is 1
PASS array[6](156, 157, 158, 159, 160, 161); foo(firstArg, secondArg) is 1
PASS array[6](157, 158, 159, 160, 161, 162); foo(firstArg, secondArg) is 1
PASS array[7](158, 159, 160, 161, 162, 163, 164); foo(firstArg, secondArg) is 1
PASS array[7](159, 160, 161, 162, 163, 164, 165); foo(firstArg, secondArg) is 1
PASS array[8](160, 161, 162, 163, 164, 165, 166, 167); foo(firstArg, secondArg) is 1
PASS array[8](161, 162, 163, 164, 165, 166, 167, 168); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](164); foo(firstArg, secondArg) is 1
PASS array[1](165); foo(firstArg, secondArg) is 1
PASS array[2](166, 167); foo(firstArg, secondArg) is 1
PASS array[2](167, 168); foo(firstArg, secondArg) is 1
PASS array[3](168, 169, 170); foo(firstArg, secondArg) is 1
PASS array[3](169, 170, 171); foo(firstArg, secondArg) is 1
PASS array[4](170, 171, 172, 173); foo(firstArg, secondArg) is 1
PASS array[4](171, 172, 173, 174); foo(firstArg, secondArg) is 1
PASS array[5](172, 173, 174, 175, 176); foo(firstArg, secondArg) is 1
PASS array[5](173, 174, 175, 176, 177); foo(firstArg, secondArg) is 1
PASS array[6](174, 175, 176, 177, 178, 179); foo(firstArg, secondArg) is 1
PASS array[6](175, 176, 177, 178, 179, 180); foo(firstArg, secondArg) is 1
PASS array[7](176, 177, 178, 179, 180, 181, 182); foo(firstArg, secondArg) is 1
PASS array[7](177, 178, 179, 180, 181, 182, 183); foo(firstArg, secondArg) is 1
PASS array[8](178, 179, 180, 181, 182, 183, 184, 185); foo(firstArg, secondArg) is 1
PASS array[8](179, 180, 181, 182, 183, 184, 185, 186); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](182); foo(firstArg, secondArg) is 1
PASS array[1](183); foo(firstArg, secondArg) is 1
PASS array[2](184, 185); foo(firstArg, secondArg) is 1
PASS array[2](185, 186); foo(firstArg, secondArg) is 1
PASS array[3](186, 187, 188); foo(firstArg, secondArg) is 1
PASS array[3](187, 188, 189); foo(firstArg, secondArg) is 1
PASS array[4](188, 189, 190, 191); foo(firstArg, secondArg) is 1
PASS array[4](189, 190, 191, 192); foo(firstArg, secondArg) is 1
PASS array[5](190, 191, 192, 193, 194); foo(firstArg, secondArg) is 1
PASS array[5](191, 192, 193, 194, 195); foo(firstArg, secondArg) is 1
PASS array[6](192, 193, 194, 195, 196, 197); foo(firstArg, secondArg) is 1
PASS array[6](193, 194, 195, 196, 197, 198); foo(firstArg, secondArg) is 1
PASS array[7](194, 195, 196, 197, 198, 199, 200); foo(firstArg, secondArg) is 1
PASS array[7](195, 196, 197, 198, 199, 200, 201); foo(firstArg, secondArg) is 1
PASS array[8](196, 197, 198, 199, 200, 201, 202, 203); foo(firstArg, secondArg) is 1
PASS array[8](197, 198, 199, 200, 201, 202, 203, 204); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](200); foo(firstArg, secondArg) is 1
PASS array[1](201); foo(firstArg, secondArg) is 1
PASS array[2](202, 203); foo(firstArg, secondArg) is 1
PASS array[2](203, 204); foo(firstArg, secondArg) is 1
PASS array[3](204, 205, 206); foo(firstArg, secondArg) is 1
PASS array[3](205, 206, 207); foo(firstArg, secondArg) is 1
PASS array[4](206, 207, 208, 209); foo(firstArg, secondArg) is 1
PASS array[4](207, 208, 209, 210); foo(firstArg, secondArg) is 1
PASS array[5](208, 209, 210, 211, 212); foo(firstArg, secondArg) is 1
PASS array[5](209, 210, 211, 212, 213); foo(firstArg, secondArg) is 1
PASS array[6](210, 211, 212, 213, 214, 215); foo(firstArg, secondArg) is 1
PASS array[6](211, 212, 213, 214, 215, 216); foo(firstArg, secondArg) is 1
PASS array[7](212, 213, 214, 215, 216, 217, 218); foo(firstArg, secondArg) is 1
PASS array[7](213, 214, 215, 216, 217, 218, 219); foo(firstArg, secondArg) is 1
PASS array[8](214, 215, 216, 217, 218, 219, 220, 221); foo(firstArg, secondArg) is 1
PASS array[8](215, 216, 217, 218, 219, 220, 221, 222); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](218); foo(firstArg, secondArg) is 1
PASS array[1](219); foo(firstArg, secondArg) is 1
PASS array[2](220, 221); foo(firstArg, secondArg) is 1
PASS array[2](221, 222); foo(firstArg, secondArg) is 1
PASS array[3](222, 223, 224); foo(firstArg, secondArg) is 1
PASS array[3](223, 224, 225); foo(firstArg, secondArg) is 1
PASS array[4](224, 225, 226, 227); foo(firstArg, secondArg) is 1
PASS array[4](225, 226, 227, 228); foo(firstArg, secondArg) is 1
PASS array[5](226, 227, 228, 229, 230); foo(firstArg, secondArg) is 1
PASS array[5](227, 228, 229, 230, 231); foo(firstArg, secondArg) is 1
PASS array[6](228, 229, 230, 231, 232, 233); foo(firstArg, secondArg) is 1
PASS array[6](229, 230, 231, 232, 233, 234); foo(firstArg, secondArg) is 1
PASS array[7](230, 231, 232, 233, 234, 235, 236); foo(firstArg, secondArg) is 1
PASS array[7](231, 232, 233, 234, 235, 236, 237); foo(firstArg, secondArg) is 1
PASS array[8](232, 233, 234, 235, 236, 237, 238, 239); foo(firstArg, secondArg) is 1
PASS array[8](233, 234, 235, 236, 237, 238, 239, 240); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](236); foo(firstArg, secondArg) is 1
PASS array[1](237); foo(firstArg, secondArg) is 1
PASS array[2](238, 239); foo(firstArg, secondArg) is 1
PASS array[2](239, 240); foo(firstArg, secondArg) is 1
PASS array[3](240, 241, 242); foo(firstArg, secondArg) is 1
PASS array[3](241, 242, 243); foo(firstArg, secondArg) is 1
PASS array[4](242, 243, 244, 245); foo(firstArg, secondArg) is 1
PASS array[4](243, 244, 245, 246); foo(firstArg, secondArg) is 1
PASS array[5](244, 245, 246, 247, 248); foo(firstArg, secondArg) is 1
PASS array[5](245, 246, 247, 248, 249); foo(firstArg, secondArg) is 1
PASS array[6](246, 247, 248, 249, 250, 251); foo(firstArg, secondArg) is 1
PASS array[6](247, 248, 249, 250, 251, 252); foo(firstArg, secondArg) is 1
PASS array[7](248, 249, 250, 251, 252, 253, 254); foo(firstArg, secondArg) is 1
PASS array[7](249, 250, 251, 252, 253, 254, 255); foo(firstArg, secondArg) is 1
PASS array[8](250, 251, 252, 253, 254, 255, 256, 257); foo(firstArg, secondArg) is 1
PASS array[8](251, 252, 253, 254, 255, 256, 257, 258); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](254); foo(firstArg, secondArg) is 1
PASS array[1](255); foo(firstArg, secondArg) is 1
PASS array[2](256, 257); foo(firstArg, secondArg) is 1
PASS array[2](257, 258); foo(firstArg, secondArg) is 1
PASS array[3](258, 259, 260); foo(firstArg, secondArg) is 1
PASS array[3](259, 260, 261); foo(firstArg, secondArg) is 1
PASS array[4](260, 261, 262, 263); foo(firstArg, secondArg) is 1
PASS array[4](261, 262, 263, 264); foo(firstArg, secondArg) is 1
PASS array[5](262, 263, 264, 265, 266); foo(firstArg, secondArg) is 1
PASS array[5](263, 264, 265, 266, 267); foo(firstArg, secondArg) is 1
PASS array[6](264, 265, 266, 267, 268, 269); foo(firstArg, secondArg) is 1
PASS array[6](265, 266, 267, 268, 269, 270); foo(firstArg, secondArg) is 1
PASS array[7](266, 267, 268, 269, 270, 271, 272); foo(firstArg, secondArg) is 1
PASS array[7](267, 268, 269, 270, 271, 272, 273); foo(firstArg, secondArg) is 1
PASS array[8](268, 269, 270, 271, 272, 273, 274, 275); foo(firstArg, secondArg) is 1
PASS array[8](269, 270, 271, 272, 273, 274, 275, 276); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](272); foo(firstArg, secondArg) is 1
PASS array[1](273); foo(firstArg, secondArg) is 1
PASS array[2](274, 275); foo(firstArg, secondArg) is 1
PASS array[2](275, 276); foo(firstArg, secondArg) is 1
PASS array[3](276, 277, 278); foo(firstArg, secondArg) is 1
PASS array[3](277, 278, 279); foo(firstArg, secondArg) is 1
PASS array[4](278, 279, 280, 281); foo(firstArg, secondArg) is 1
PASS array[4](279, 280, 281, 282); foo(firstArg, secondArg) is 1
PASS array[5](280, 281, 282, 283, 284); foo(firstArg, secondArg) is 1
PASS array[5](281, 282, 283, 284, 285); foo(firstArg, secondArg) is 1
PASS array[6](282, 283, 284, 285, 286, 287); foo(firstArg, secondArg) is 1
PASS array[6](283, 284, 285, 286, 287, 288); foo(firstArg, secondArg) is 1
PASS array[7](284, 285, 286, 287, 288, 289, 290); foo(firstArg, secondArg) is 1
PASS array[7](285, 286, 287, 288, 289, 290, 291); foo(firstArg, secondArg) is 1
PASS array[8](286, 287, 288, 289, 290, 291, 292, 293); foo(firstArg, secondArg) is 1
PASS array[8](287, 288, 289, 290, 291, 292, 293, 294); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[0](); foo(firstArg, secondArg) is 1
PASS array[1](290); foo(firstArg, secondArg) is 1
PASS array[1](291); foo(firstArg, secondArg) is 1
PASS array[2](292, 293); foo(firstArg, secondArg) is 1
PASS array[2](293, 294); foo(firstArg, secondArg) is 1
PASS array[3](294, 295, 296); foo(firstArg, secondArg) is 1
PASS array[3](295, 296, 297); foo(firstArg, secondArg) is 1
PASS array[4](296, 297, 298, 299); foo(firstArg, secondArg) is 1
PASS array[4](297, 298, 299, 300); foo(firstArg, secondArg) is 1
PASS array[5](298, 299, 300, 301, 302); foo(firstArg, secondArg) is 1
PASS array[5](299, 300, 301, 302, 303); foo(firstArg, secondArg) is 1
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                    node-23.7.0/deps/v8/test/webkit/dfg-dead-variable-on-exit.js                                        0000664 0000000 0000000 00000005363 14746647661 0023455 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"This tests that if a variable is dead on OSR exit, it will at least contain a valid JS value."
);

var array = [];

for (var i = 0; i < 9; ++i) {
    var code = "";
    code += "(function(";
    for (var j = 0; j < i; ++j) {
        if (j)
            code += ", ";
        code += "arg" + j;
    }
    code += ") {\n";
    code += "    return ";
    if (i) {
        for (var j = 0; j < i; ++j) {
            if (j)
                code += " + ";
            code += "arg" + j;
        }
    } else
        code += "void 0";
    code += ";\n";
    code += "})";
    array[i] = eval(code);
}

function foo(a, b) {
    var x = 0;
    if (a.f < b.f) {
        var result = b.g - a.g;
        x = !x;
        return result;
    } else {
        var result = a.g - b.g;
        x = [x];
        return result;
    }
}

var firstArg = {f:2, g:3};
var secondArg = {f:3, g:4};

for (var i = 0; i < 300; ++i) {
    var code = "";
    code += "array[" + (((i / 2) | 0) % array.length) + "](";
    for (var j = 0; j < (((i / 2) | 0) % array.length); ++j) {
        if (j)
            code += ", ";
        code += i + j;
    }
    if (i == 150) {
        firstArg = {f:2, g:2.5};
        secondArg = {f:3, g:3.5};
    }
    var tmp = firstArg;
    firstArg = secondArg;
    secondArg = tmp;
    code += "); foo(firstArg, secondArg)";
    shouldBe(code, "1");
}
                                                                                                                                                                                                                                                                             node-23.7.0/deps/v8/test/webkit/dfg-double-addition-simplify-to-int-expected.txt                    0000664 0000000 0000000 00000071735 14746647661 0027531 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that the DFG doesn't get confused about an edge being a double edge after we perform CFG simplification.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS foo(42, true)[0] is 84
PASS successfullyParsed is true

TEST COMPLETE

                                   node-23.7.0/deps/v8/test/webkit/dfg-double-addition-simplify-to-int.js                              0000664 0000000 0000000 00000003612 14746647661 0025514 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that the DFG doesn't get confused about an edge being a double edge after we perform CFG simplification."
);

function foo(a, p) {
    var p2;
    var x;
    var y;
    if (p)
        p2 = true;
    else
        p2 = true;
    if (p2)
        x = a;
    else
        x = 0.5;
    if (p2)
        y = a;
    else
        y = 0.7;
    var result = x + y;
    return [result, [x, y], [x, y], [x, y]];
}

for (var i = 0; i < 1000; ++i)
    shouldBe("foo(42, true)[0]", "84");
                                                                                                                      node-23.7.0/deps/v8/test/webkit/dfg-double-use-of-post-simplification-double-prediction-expected.txt0000664 0000000 0000000 00000013717 14746647661 0033467 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests stability of the DFG compiler when you have a double use of a variable that is not revealed to be a double until after CFG simplification.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS foo(0.5) is 42.5
PASS successfullyParsed is true

TEST COMPLETE

                                                 node-23.7.0/deps/v8/test/webkit/dfg-double-use-of-post-simplification-double-prediction.js          0000664 0000000 0000000 00000003374 14746647661 0031463 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests stability of the DFG compiler when you have a double use of a variable that is not revealed to be a double until after CFG simplification."
);

function foo(a) {
    var p = true;
    var x;
    if (p)
        x = 42;
    else
        x = "yo";
    return x + a;
}

for (var i = 0; i < 200; ++i)
    shouldBe("foo(0.5)", "42.5");
                                                                                                                                                                                                                                                                    node-23.7.0/deps/v8/test/webkit/dfg-double-vote-fuzz-expected.txt                                   0000664 0000000 0000000 00000016617 14746647661 0024643 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

This tests that the static analysis we use to infer if a variable should be a double doesn't crash.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


Result value is 54939
Result value is 55039
Result value is 55039
Result value is 55139
Result value is 55039
Result value is 55139
Result value is 55139
Result value is 55239
Result value is 55039
Result value is 55139
Result value is 55139
Result value is 55239
Result value is 55139
Result value is 55239
Result value is 55239
Result value is 55339
Result value is 55821
Result value is 55921
Result value is 55921
Result value is 56021
Result value is 55921
Result value is 56021
Result value is 56021
Result value is 56121
Result value is 55921
Result value is 56021
Result value is 56021
Result value is 56121
Result value is 56021
Result value is 56121
Result value is 56121
Result value is 56221
Result value is 55828.5
Result value is 55928.5
Result value is 55928.5
Result value is 56028.5
Result value is 55928.5
Result value is 56028.5
Result value is 56028.5
Result value is 56128.5
Result value is 55928.5
Result value is 56028.5
Result value is 56028.5
Result value is 56128.5
Result value is 56028.5
Result value is 56128.5
Result value is 56128.5
Result value is 56228.5
Result value is 56710.5
Result value is 56810.5
Result value is 56810.5
Result value is 56910.5
Result value is 56810.5
Result value is 56910.5
Result value is 56910.5
Result value is 57010.5
Result value is 56810.5
Result value is 56910.5
Result value is 56910.5
Result value is 57010.5
Result value is 56910.5
Result value is 57010.5
Result value is 57010.5
Result value is 57110.5
Result value is 55834
Result value is 55934
Result value is 55934
Result value is 56034
Result value is 55934
Result value is 56034
Result value is 56034
Result value is 56134
Result value is 55934
Result value is 56034
Result value is 56034
Result value is 56134
Result value is 56034
Result value is 56134
Result value is 56134
Result value is 56234
Result value is 56716
Result value is 56816
Result value is 56816
Result value is 56916
Result value is 56816
Result value is 56916
Result value is 56916
Result value is 57016
Result value is 56816
Result value is 56916
Result value is 56916
Result value is 57016
Result value is 56916
Result value is 57016
Result value is 57016
Result value is 57116
Result value is 56723.5
Result value is 56823.5
Result value is 56823.5
Result value is 56923.5
Result value is 56823.5
Result value is 56923.5
Result value is 56923.5
Result value is 57023.5
Result value is 56823.5
Result value is 56923.5
Result value is 56923.5
Result value is 57023.5
Result value is 56923.5
Result value is 57023.5
Result value is 57023.5
Result value is 57123.5
Result value is 57605.5
Result value is 57705.5
Result value is 57705.5
Result value is 57805.5
Result value is 57705.5
Result value is 57805.5
Result value is 57805.5
Result value is 57905.5
Result value is 57705.5
Result value is 57805.5
Result value is 57805.5
Result value is 57905.5
Result value is 57805.5
Result value is 57905.5
Result value is 57905.5
Result value is 58005.5
Result value is 55887.5
Result value is 55987.5
Result value is 55987.5
Result value is 56087.5
Result value is 55987.5
Result value is 56087.5
Result value is 56087.5
Result value is 56187.5
Result value is 55987.5
Result value is 56087.5
Result value is 56087.5
Result value is 56187.5
Result value is 56087.5
Result value is 56187.5
Result value is 56187.5
Result value is 56287.5
Result value is 56769.5
Result value is 56869.5
Result value is 56869.5
Result value is 56969.5
Result value is 56869.5
Result value is 56969.5
Result value is 56969.5
Result value is 57069.5
Result value is 56869.5
Result value is 56969.5
Result value is 56969.5
Result value is 57069.5
Result value is 56969.5
Result value is 57069.5
Result value is 57069.5
Result value is 57169.5
Result value is 56777
Result value is 56877
Result value is 56877
Result value is 56977
Result value is 56877
Result value is 56977
Result value is 56977
Result value is 57077
Result value is 56877
Result value is 56977
Result value is 56977
Result value is 57077
Result value is 56977
Result value is 57077
Result value is 57077
Result value is 57177
Result value is 57659
Result value is 57759
Result value is 57759
Result value is 57859
Result value is 57759
Result value is 57859
Result value is 57859
Result value is 57959
Result value is 57759
Result value is 57859
Result value is 57859
Result value is 57959
Result value is 57859
Result value is 57959
Result value is 57959
Result value is 58059
Result value is 56782.5
Result value is 56882.5
Result value is 56882.5
Result value is 56982.5
Result value is 56882.5
Result value is 56982.5
Result value is 56982.5
Result value is 57082.5
Result value is 56882.5
Result value is 56982.5
Result value is 56982.5
Result value is 57082.5
Result value is 56982.5
Result value is 57082.5
Result value is 57082.5
Result value is 57182.5
Result value is 57664.5
Result value is 57764.5
Result value is 57764.5
Result value is 57864.5
Result value is 57764.5
Result value is 57864.5
Result value is 57864.5
Result value is 57964.5
Result value is 57764.5
Result value is 57864.5
Result value is 57864.5
Result value is 57964.5
Result value is 57864.5
Result value is 57964.5
Result value is 57964.5
Result value is 58064.5
Result value is 57672
Result value is 57772
Result value is 57772
Result value is 57872
Result value is 57772
Result value is 57872
Result value is 57872
Result value is 57972
Result value is 57772
Result value is 57872
Result value is 57872
Result value is 57972
Result value is 57872
Result value is 57972
Result value is 57972
Result value is 58072
Result value is 58554
Result value is 58654
Result value is 58654
Result value is 58754
Result value is 58654
Result value is 58754
Result value is 58754
Result value is 58854
Result value is 58654
Result value is 58754
Result value is 58754
Result value is 58854
Result value is 58754
Result value is 58854
Result value is 58854
Result value is 58954
PASS grandResult is 14578304
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                 node-23.7.0/deps/v8/test/webkit/dfg-double-vote-fuzz.js                                             0000664 0000000 0000000 00000007373 14746647661 0022640 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"This tests that the static analysis we use to infer if a variable should be a double doesn't crash."
);

var grandResult = 0;

for (var i = 0; i < 256; ++i) {
    code  = "function foo(o, a, b) {\n";
    code += "    var x = 0;\n";
    code += "    var c = a + b;\n";
    for (var j = 0; j < 8; ++j)
        code += "    var " + String.fromCharCode("d".charCodeAt(0) + j) + " = " + ((i & (1 << ((j / 2) | 0))) ? "0.5" : "0") + ";\n";
    code += "    for (var __i = 0; __i < 10; ++__i) {\n";
    code += "        if (a + b + 1 > __i) {\n";
    code += "            c = d;\n";
    code += "            x += c;\n";
    code += "        }\n";
    code += "        if (a + b + 2 > __i) {\n";
    code += "            c = e;\n";
    code += "            x += c;\n";
    code += "        }\n";
    code += "        if (a + b + 3 > __i) {\n";
    code += "            c = f;\n";
    code += "            x += c;\n";
    code += "        }\n";
    code += "        if (a + b + 4 > __i) {\n";
    code += "            c = g;\n";
    code += "            x += c;\n";
    code += "        }\n";
    code += "        if (a + b + 5 > __i) {\n";
    code += "            c = h;\n";
    code += "            x += c;\n";
    code += "        }\n";
    code += "        if (a + b + 6 > __i) {\n";
    code += "            c = i;\n";
    code += "            x += c;\n";
    code += "        }\n";
    code += "        if (a + b + 7 > __i) {\n";
    code += "            c = j;\n";
    code += "            x += c;\n";
    code += "        }\n";
    code += "        if (a + b + 8 > __i) {\n";
    code += "            c = k;\n";
    code += "            x += c;\n";
    code += "        }\n";
    for (var j = 0; j < 8; ++j) {
        code += "        if (a + b + " + (9 + j) + " > __i)\n";
        code += "            " + String.fromCharCode("d".charCodeAt(0) + j) + " = __i + " + j + " + " + ((i & (1 << (((j / 2) | 0) + 4))) ? "0.5" : "0") + ";\n";
    }
    code += "    }\n";
    code += "    return x + c;\n";
    code += "}\n";
    code += "\n";
    code += "var result = 0;\n"
    code += "for (var __j = 0; __j < 100; ++__j) {\n";
    code += "    result += foo({}, __j, __j + 1);\n";
    code += "}\n";
    code += "\n";
    code += "result";

    var theResult = eval(code);
    debug("Result value is " + theResult);
    grandResult += theResult;
}

shouldBe("grandResult", "14578304");
                                                                                                                                                                                                                                                                     node-23.7.0/deps/v8/test/webkit/dfg-ensure-array-storage-on-string-expected.txt                     0000664 0000000 0000000 00000066321 14746647661 0027414 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Checks that trying to arrayify a string to have array storage doesn't crash.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo("hello") is "0hello"
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                               node-23.7.0/deps/v8/test/webkit/dfg-ensure-array-storage-on-string.js                               0000664 0000000 0000000 00000003617 14746647661 0025411 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Checks that trying to arrayify a string to have array storage doesn't crash."
);

function foo(array) {
    var result = 0;
    for (var i = 0; i < array.length; ++i)
        result += array[i];
    return result;
}

var array = [1, 2, 3];
for (var i = 0; i < 200; ++i)
    shouldBe("foo(array)", "6");

array = [1, , 3];
array.__defineGetter__(1, function() { return 6; });
for (var i = 0; i < 1000; ++i)
    shouldBe("foo(array)", "10");

shouldBe("foo(\"hello\")", "\"0hello\"");
                                                                                                                 node-23.7.0/deps/v8/test/webkit/dfg-ensure-array-storage-on-window-expected.txt                     0000664 0000000 0000000 00000066361 14746647661 0027421 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that passing the global object to an array access that will arrayify to ArrayWithArrayStorage doesn't break things.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(array) is 10
PASS foo(w) is 1
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                               node-23.7.0/deps/v8/test/webkit/dfg-ensure-array-storage-on-window.js                               0000664 0000000 0000000 00000003721 14746647661 0025406 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that passing the global object to an array access that will arrayify to ArrayWithArrayStorage doesn't break things."
);

function foo(array) {
    var result = 0;
    for (var i = 0; i < array.length; ++i)
        result += array[i];
    return result;
}

var array = [1, 2, 3];
for (var i = 0; i < 200; ++i)
    shouldBe("foo(array)", "6");

array = [1, , 3];
array.__defineGetter__(1, function() { return 6; });
for (var i = 0; i < 1000; ++i)
    shouldBe("foo(array)", "10");

var w = this;
w[0] = 1;
w.length = 1;
shouldBe("foo(w)", "1");
                                               node-23.7.0/deps/v8/test/webkit/dfg-ensure-contiguous-on-string-expected.txt                        0000664 0000000 0000000 00000064323 14746647661 0027033 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Checks that trying to arrayify a string doesn't crash.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 6
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo(array) is 4
PASS foo("hello") is "0hello"
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                             node-23.7.0/deps/v8/test/webkit/dfg-ensure-contiguous-on-string.js                                  0000664 0000000 0000000 00000003510 14746647661 0025020 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Checks that trying to arrayify a string doesn't crash."
);

function foo(array) {
    var result = 0;
    for (var i = 0; i < array.length; ++i)
        result += array[i];
    return result;
}

var array = [1, 2, 3];
for (var i = 0; i < 200; ++i)
    shouldBe("foo(array)", "6");

array = [1, false, 3];
for (var i = 0; i < 1000; ++i)
    shouldBe("foo(array)", "4");

shouldBe("foo(\"hello\")", "\"0hello\"");
                                                                                                                                                                                        node-23.7.0/deps/v8/test/webkit/dfg-ensure-non-array-array-storage-on-window-expected.txt           0000664 0000000 0000000 00000161157 14746647661 0031324 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that passing the global object to an array access that will arrayify to NonArrayWithArrayStorage doesn't break things.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 6
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(array) is 10
PASS otherArray[1] is 42
PASS foo(w) is 1
PASS thingy is false
PASS thingy is 42
PASS foo(w) is 1
PASS foo(w) is 0/0
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                                                                                                                                 node-23.7.0/deps/v8/test/webkit/dfg-ensure-non-array-array-storage-on-window.js                     0000664 0000000 0000000 00000006067 14746647661 0027320 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that passing the global object to an array access that will arrayify to NonArrayWithArrayStorage doesn't break things."
);

function foo(array) {
    var result = 0;
    for (var i = 0; i < array.length; ++i)
        result += array[i];
    return result;
}

function bar(array) {
    array[1] = 42;
}

var array = {};
array.length = 3;
array[0] = 1;
array[1] = 2;
array[2] = 3;
for (var i = 0; i < 200; ++i) {
    shouldBe("foo(array)", "6");

    var otherArray = {};
    bar(otherArray);
    shouldBe("otherArray[1]", "42");
}

for (var i = 0; i < 1000; ++i) {
    // Do strange things to ensure that the get_by_id on length goes polymorphic.
    var array = {};
    if (i % 2)
        array.x = 42;
    array.length = 3;
    array[0] = 1;
    array[2] = 3;
    array.__defineGetter__(1, function() { return 6; });

    shouldBe("foo(array)", "10");

    var otherArray = {};
    otherArray.__defineSetter__(0, function(value) { throw "error"; });
    bar(otherArray);
    shouldBe("otherArray[1]", "42");
}

var w = this;
w[0] = 1;
w.length = 1;
var thingy = false;
w.__defineSetter__(1, function(value) { thingy = value; });
shouldBe("foo(w)", "1");
shouldBe("thingy", "false");

// At this point we check to make sure that bar doesn't end up either creating array storage for
// the window proxy, or equally badly, storing to the already created array storage on the proxy
// (since foo() may have made the mistake of creating array storage). That's why we do the setter
// thingy, to detect that for index 1 we fall through the proxy to the real window object.
bar(w);

shouldBe("thingy", "42");
shouldBe("foo(w)", "1");
w.length = 2;
shouldBe("foo(w)", "0/0");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/deps/v8/test/webkit/dfg-exception-expected.txt                                          0000664 0000000 0000000 00000003134 14746647661 0023406 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

This tests that exceptions are thrown correctly.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS caughtException is true
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/deps/v8/test/webkit/dfg-exception.js                                                    0000664 0000000 0000000 00000007102 14746647661 0021403 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"This tests that exceptions are thrown correctly."
);

// A large function containing a try/catch - this prevent DFG compilation.
function doesntDFGCompile()
{
    function callMe() {};

    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);

    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);

    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);

    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);

    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);
    callMe(0,1,2,3,4,5,6,7,8,9);

    try {
        return 1;
    } catch (e) {
        return 2;
    }
};

function test(x)
{
    return x();
};

// warmup the test method
for (i = 0; i < 200; ++i)
    test(doesntDFGCompile);

//
var caughtException = false;
try {
    test();
} catch (e) {
    caughtException = true;
}

shouldBe("caughtException", 'true');
var successfullyParsed = true;
                                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/deps/v8/test/webkit/dfg-float32-array-nan-expected.txt                                  0000664 0000000 0000000 00000012577 14746647661 0024563 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests what happens in the DFG JIT if we load from a Float32 array that contains a weirdly formatted NaN.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


-4587521
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
NaN
PASS "" + foo(floatView) is "NaN"
I didn't crash, which is a good thing.
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                 node-23.7.0/deps/v8/test/webkit/dfg-float32-array-nan.js                                            0000664 0000000 0000000 00000003570 14746647661 0022552 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests what happens in the DFG JIT if we load from a Float32 array that contains a weirdly formatted NaN."
);

var buffer = new ArrayBuffer(4);

var int32View = new Int32Array(buffer);
var floatView = new Float32Array(buffer);

int32View[0] = -4587521;

debug(int32View[0]);

function foo(o) {
    debug(o[0]);
    return o[0];
}

for (var i = 0; i < 100; ++i)
    shouldBe("\"\" + foo(floatView)", "\"NaN\"");

debug("I didn't crash, which is a good thing.");
                                                                                                                                        node-23.7.0/deps/v8/test/webkit/dfg-flush-get-local-expected.txt                                    0000664 0000000 0000000 00000003166 14746647661 0024403 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Tests that if we emit a Flush of a GetLocal, we flush the source of the GetLocal.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS result is 500000
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                                                                                                                                                                                                                                                                                                          node-23.7.0/deps/v8/test/webkit/dfg-flush-get-local.js                                              0000664 0000000 0000000 00000003515 14746647661 0022377 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Tests that if we emit a Flush of a GetLocal, we flush the source of the GetLocal."
);

function foo(a, b) {
    return a.f + a.g + b;
}

function fuzz(a, b) {
    if (a < b)
        return a - b;
    else
        return b - a;
}

function bar(a, b) {
    return foo({f:(a < b ? a - b : b - a), g:a}, b);
}

var result = 0;
for (var i = 0; i < 1000; ++i)
    result += bar(i, 1000 - i);

shouldBe("result", "500000");
                                                                                                                                                                                   dfg-force-exit-then-sparse-conditional-constant-prop-in-loop-expected.txt                           0000664 0000000 0000000 00000014602 14746647661 0034310 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/deps/v8/test/webkit                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Checks that increased aggressiveness in sparse conditional constant propagation resultin from a node being proven to be force exit does not lead to a cascade of unsound decisions.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS foo(array) is 8746
PASS successfullyParsed is true

TEST COMPLETE

                                                                                                                              node-23.7.0/deps/v8/test/webkit/dfg-force-exit-then-sparse-conditional-constant-prop-in-loop.js     0000664 0000000 0000000 00000003642 14746647661 0032367 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright 2013 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

description(
"Checks that increased aggressiveness in sparse conditional constant propagation resultin from a node being proven to be force exit does not lead to a cascade of unsound decisions."
);

function foo(a) {
    var i;
    if (a.push)
        i = 0;
    else
        i = a;
    var result = 0;
    while (i < 10) {
        result += a[i];
        i++;
    }
    return result;
}

var array = [54, 5432, 1234, 54, 1235, 64, 75, 532, 64, 2];

for (var i = 0; i < 200; ++i)
    shouldBe("foo(array)", "8746");
                                                                                              node-23.7.0/deps/v8/test/webkit/dfg-get-by-val-clobber-expected.txt                                 0000664 0000000 0000000 00000405561 14746647661 0024777 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Copyright 2013 the V8 project authors. All rights reserved.
# Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

This tests that common subexpression elimination knows how to accurately model PutBuVal.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 0
PASS doAccesses(array1, array1, i % 4, 0, i) is 0
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 1
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 2
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 3
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 4
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 5
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 6
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 7
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 8
PASS doAccesses(array1, array1, i % 4, 0, i) is 8
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 9
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 10
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 11
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 12
PASS doAccesses(array1, array1, i % 4, 0, i) is 12
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 13
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 14
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 15
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 16
PASS doAccesses(array1, array1, i % 4, 0, i) is 16
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 17
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 18
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 19
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 20
PASS doAccesses(array1, array1, i % 4, 0, i) is 20
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 21
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 22
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 23
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 24
PASS doAccesses(array1, array1, i % 4, 0, i) is 24
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 25
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 26
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 27
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 28
PASS doAccesses(array1, array1, i % 4, 0, i) is 28
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 29
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 30
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 31
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 32
PASS doAccesses(array1, array1, i % 4, 0, i) is 32
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 33
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 34
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 35
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 36
PASS doAccesses(array1, array1, i % 4, 0, i) is 36
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 37
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 38
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 39
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 40
PASS doAccesses(array1, array1, i % 4, 0, i) is 40
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 41
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 42
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 43
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 44
PASS doAccesses(array1, array1, i % 4, 0, i) is 44
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 45
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 46
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 47
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 48
PASS doAccesses(array1, array1, i % 4, 0, i) is 48
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 49
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 50
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 51
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 52
PASS doAccesses(array1, array1, i % 4, 0, i) is 52
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 53
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 54
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 55
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 56
PASS doAccesses(array1, array1, i % 4, 0, i) is 56
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 57
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 58
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 59
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 60
PASS doAccesses(array1, array1, i % 4, 0, i) is 60
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 61
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 62
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 63
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 64
PASS doAccesses(array1, array1, i % 4, 0, i) is 64
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 65
PASS doAccesses(array1, array1, i % 4, 0, i) is 2
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 3
PASS array2[3] is 66
PASS doAccesses(array1, array1, i % 4, 0, i) is 3
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 4
PASS array2[0] is 67
PASS doAccesses(array1, array1, i % 4, 0, i) is 4
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 1
PASS array2[1] is 68
PASS doAccesses(array1, array1, i % 4, 0, i) is 68
PASS doAccesses(array1, array2, i % 4, (i + 1) % 4, i) is 2
PASS array2[2] is 69
PASS doAccesses(array1, array1, i % 