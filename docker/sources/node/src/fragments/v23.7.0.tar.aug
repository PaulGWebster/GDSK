xt instead. */
    ts.createMetaProperty = ts.Debug.deprecate(ts.factory.createMetaProperty, factoryDeprecation);
    /** @deprecated Use `factory.updateMetaProperty` or the factory supplied by your transformation context instead. */
    ts.updateMetaProperty = ts.Debug.deprecate(ts.factory.updateMetaProperty, factoryDeprecation);
    /** @deprecated Use `factory.createTemplateSpan` or the factory supplied by your transformation context instead. */
    ts.createTemplateSpan = ts.Debug.deprecate(ts.factory.createTemplateSpan, factoryDeprecation);
    /** @deprecated Use `factory.updateTemplateSpan` or the factory supplied by your transformation context instead. */
    ts.updateTemplateSpan = ts.Debug.deprecate(ts.factory.updateTemplateSpan, factoryDeprecation);
    /** @deprecated Use `factory.createSemicolonClassElement` or the factory supplied by your transformation context instead. */
    ts.createSemicolonClassElement = ts.Debug.deprecate(ts.factory.createSemicolonClassElement, factoryDeprecation);
    /** @deprecated Use `factory.createBlock` or the factory supplied by your transformation context instead. */
    ts.createBlock = ts.Debug.deprecate(ts.factory.createBlock, factoryDeprecation);
    /** @deprecated Use `factory.updateBlock` or the factory supplied by your transformation context instead. */
    ts.updateBlock = ts.Debug.deprecate(ts.factory.updateBlock, factoryDeprecation);
    /** @deprecated Use `factory.createVariableStatement` or the factory supplied by your transformation context instead. */
    ts.createVariableStatement = ts.Debug.deprecate(ts.factory.createVariableStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateVariableStatement` or the factory supplied by your transformation context instead. */
    ts.updateVariableStatement = ts.Debug.deprecate(ts.factory.updateVariableStatement, factoryDeprecation);
    /** @deprecated Use `factory.createEmptyStatement` or the factory supplied by your transformation context instead. */
    ts.createEmptyStatement = ts.Debug.deprecate(ts.factory.createEmptyStatement, factoryDeprecation);
    /** @deprecated Use `factory.createExpressionStatement` or the factory supplied by your transformation context instead. */
    ts.createExpressionStatement = ts.Debug.deprecate(ts.factory.createExpressionStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateExpressionStatement` or the factory supplied by your transformation context instead. */
    ts.updateExpressionStatement = ts.Debug.deprecate(ts.factory.updateExpressionStatement, factoryDeprecation);
    /** @deprecated Use `factory.createExpressionStatement` or the factory supplied by your transformation context instead. */
    ts.createStatement = ts.Debug.deprecate(ts.factory.createExpressionStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateExpressionStatement` or the factory supplied by your transformation context instead. */
    ts.updateStatement = ts.Debug.deprecate(ts.factory.updateExpressionStatement, factoryDeprecation);
    /** @deprecated Use `factory.createIfStatement` or the factory supplied by your transformation context instead. */
    ts.createIf = ts.Debug.deprecate(ts.factory.createIfStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateIfStatement` or the factory supplied by your transformation context instead. */
    ts.updateIf = ts.Debug.deprecate(ts.factory.updateIfStatement, factoryDeprecation);
    /** @deprecated Use `factory.createDoStatement` or the factory supplied by your transformation context instead. */
    ts.createDo = ts.Debug.deprecate(ts.factory.createDoStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateDoStatement` or the factory supplied by your transformation context instead. */
    ts.updateDo = ts.Debug.deprecate(ts.factory.updateDoStatement, factoryDeprecation);
    /** @deprecated Use `factory.createWhileStatement` or the factory supplied by your transformation context instead. */
    ts.createWhile = ts.Debug.deprecate(ts.factory.createWhileStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateWhileStatement` or the factory supplied by your transformation context instead. */
    ts.updateWhile = ts.Debug.deprecate(ts.factory.updateWhileStatement, factoryDeprecation);
    /** @deprecated Use `factory.createForStatement` or the factory supplied by your transformation context instead. */
    ts.createFor = ts.Debug.deprecate(ts.factory.createForStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateForStatement` or the factory supplied by your transformation context instead. */
    ts.updateFor = ts.Debug.deprecate(ts.factory.updateForStatement, factoryDeprecation);
    /** @deprecated Use `factory.createForInStatement` or the factory supplied by your transformation context instead. */
    ts.createForIn = ts.Debug.deprecate(ts.factory.createForInStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateForInStatement` or the factory supplied by your transformation context instead. */
    ts.updateForIn = ts.Debug.deprecate(ts.factory.updateForInStatement, factoryDeprecation);
    /** @deprecated Use `factory.createForOfStatement` or the factory supplied by your transformation context instead. */
    ts.createForOf = ts.Debug.deprecate(ts.factory.createForOfStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateForOfStatement` or the factory supplied by your transformation context instead. */
    ts.updateForOf = ts.Debug.deprecate(ts.factory.updateForOfStatement, factoryDeprecation);
    /** @deprecated Use `factory.createContinueStatement` or the factory supplied by your transformation context instead. */
    ts.createContinue = ts.Debug.deprecate(ts.factory.createContinueStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateContinueStatement` or the factory supplied by your transformation context instead. */
    ts.updateContinue = ts.Debug.deprecate(ts.factory.updateContinueStatement, factoryDeprecation);
    /** @deprecated Use `factory.createBreakStatement` or the factory supplied by your transformation context instead. */
    ts.createBreak = ts.Debug.deprecate(ts.factory.createBreakStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateBreakStatement` or the factory supplied by your transformation context instead. */
    ts.updateBreak = ts.Debug.deprecate(ts.factory.updateBreakStatement, factoryDeprecation);
    /** @deprecated Use `factory.createReturnStatement` or the factory supplied by your transformation context instead. */
    ts.createReturn = ts.Debug.deprecate(ts.factory.createReturnStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateReturnStatement` or the factory supplied by your transformation context instead. */
    ts.updateReturn = ts.Debug.deprecate(ts.factory.updateReturnStatement, factoryDeprecation);
    /** @deprecated Use `factory.createWithStatement` or the factory supplied by your transformation context instead. */
    ts.createWith = ts.Debug.deprecate(ts.factory.createWithStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateWithStatement` or the factory supplied by your transformation context instead. */
    ts.updateWith = ts.Debug.deprecate(ts.factory.updateWithStatement, factoryDeprecation);
    /** @deprecated Use `factory.createSwitchStatement` or the factory supplied by your transformation context instead. */
    ts.createSwitch = ts.Debug.deprecate(ts.factory.createSwitchStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateSwitchStatement` or the factory supplied by your transformation context instead. */
    ts.updateSwitch = ts.Debug.deprecate(ts.factory.updateSwitchStatement, factoryDeprecation);
    /** @deprecated Use `factory.createLabelStatement` or the factory supplied by your transformation context instead. */
    ts.createLabel = ts.Debug.deprecate(ts.factory.createLabeledStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateLabelStatement` or the factory supplied by your transformation context instead. */
    ts.updateLabel = ts.Debug.deprecate(ts.factory.updateLabeledStatement, factoryDeprecation);
    /** @deprecated Use `factory.createThrowStatement` or the factory supplied by your transformation context instead. */
    ts.createThrow = ts.Debug.deprecate(ts.factory.createThrowStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateThrowStatement` or the factory supplied by your transformation context instead. */
    ts.updateThrow = ts.Debug.deprecate(ts.factory.updateThrowStatement, factoryDeprecation);
    /** @deprecated Use `factory.createTryStatement` or the factory supplied by your transformation context instead. */
    ts.createTry = ts.Debug.deprecate(ts.factory.createTryStatement, factoryDeprecation);
    /** @deprecated Use `factory.updateTryStatement` or the factory supplied by your transformation context instead. */
    ts.updateTry = ts.Debug.deprecate(ts.factory.updateTryStatement, factoryDeprecation);
    /** @deprecated Use `factory.createDebuggerStatement` or the factory supplied by your transformation context instead. */
    ts.createDebuggerStatement = ts.Debug.deprecate(ts.factory.createDebuggerStatement, factoryDeprecation);
    /** @deprecated Use `factory.createVariableDeclarationList` or the factory supplied by your transformation context instead. */
    ts.createVariableDeclarationList = ts.Debug.deprecate(ts.factory.createVariableDeclarationList, factoryDeprecation);
    /** @deprecated Use `factory.updateVariableDeclarationList` or the factory supplied by your transformation context instead. */
    ts.updateVariableDeclarationList = ts.Debug.deprecate(ts.factory.updateVariableDeclarationList, factoryDeprecation);
    /** @deprecated Use `factory.createFunctionDeclaration` or the factory supplied by your transformation context instead. */
    ts.createFunctionDeclaration = ts.Debug.deprecate(ts.factory.createFunctionDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.updateFunctionDeclaration` or the factory supplied by your transformation context instead. */
    ts.updateFunctionDeclaration = ts.Debug.deprecate(ts.factory.updateFunctionDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.createClassDeclaration` or the factory supplied by your transformation context instead. */
    ts.createClassDeclaration = ts.Debug.deprecate(ts.factory.createClassDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.updateClassDeclaration` or the factory supplied by your transformation context instead. */
    ts.updateClassDeclaration = ts.Debug.deprecate(ts.factory.updateClassDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.createInterfaceDeclaration` or the factory supplied by your transformation context instead. */
    ts.createInterfaceDeclaration = ts.Debug.deprecate(ts.factory.createInterfaceDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.updateInterfaceDeclaration` or the factory supplied by your transformation context instead. */
    ts.updateInterfaceDeclaration = ts.Debug.deprecate(ts.factory.updateInterfaceDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.createTypeAliasDeclaration` or the factory supplied by your transformation context instead. */
    ts.createTypeAliasDeclaration = ts.Debug.deprecate(ts.factory.createTypeAliasDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.updateTypeAliasDeclaration` or the factory supplied by your transformation context instead. */
    ts.updateTypeAliasDeclaration = ts.Debug.deprecate(ts.factory.updateTypeAliasDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.createEnumDeclaration` or the factory supplied by your transformation context instead. */
    ts.createEnumDeclaration = ts.Debug.deprecate(ts.factory.createEnumDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.updateEnumDeclaration` or the factory supplied by your transformation context instead. */
    ts.updateEnumDeclaration = ts.Debug.deprecate(ts.factory.updateEnumDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.createModuleDeclaration` or the factory supplied by your transformation context instead. */
    ts.createModuleDeclaration = ts.Debug.deprecate(ts.factory.createModuleDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.updateModuleDeclaration` or the factory supplied by your transformation context instead. */
    ts.updateModuleDeclaration = ts.Debug.deprecate(ts.factory.updateModuleDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.createModuleBlock` or the factory supplied by your transformation context instead. */
    ts.createModuleBlock = ts.Debug.deprecate(ts.factory.createModuleBlock, factoryDeprecation);
    /** @deprecated Use `factory.updateModuleBlock` or the factory supplied by your transformation context instead. */
    ts.updateModuleBlock = ts.Debug.deprecate(ts.factory.updateModuleBlock, factoryDeprecation);
    /** @deprecated Use `factory.createCaseBlock` or the factory supplied by your transformation context instead. */
    ts.createCaseBlock = ts.Debug.deprecate(ts.factory.createCaseBlock, factoryDeprecation);
    /** @deprecated Use `factory.updateCaseBlock` or the factory supplied by your transformation context instead. */
    ts.updateCaseBlock = ts.Debug.deprecate(ts.factory.updateCaseBlock, factoryDeprecation);
    /** @deprecated Use `factory.createNamespaceExportDeclaration` or the factory supplied by your transformation context instead. */
    ts.createNamespaceExportDeclaration = ts.Debug.deprecate(ts.factory.createNamespaceExportDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.updateNamespaceExportDeclaration` or the factory supplied by your transformation context instead. */
    ts.updateNamespaceExportDeclaration = ts.Debug.deprecate(ts.factory.updateNamespaceExportDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.createImportEqualsDeclaration` or the factory supplied by your transformation context instead. */
    ts.createImportEqualsDeclaration = ts.Debug.deprecate(ts.factory.createImportEqualsDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.updateImportEqualsDeclaration` or the factory supplied by your transformation context instead. */
    ts.updateImportEqualsDeclaration = ts.Debug.deprecate(ts.factory.updateImportEqualsDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.createImportDeclaration` or the factory supplied by your transformation context instead. */
    ts.createImportDeclaration = ts.Debug.deprecate(ts.factory.createImportDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.updateImportDeclaration` or the factory supplied by your transformation context instead. */
    ts.updateImportDeclaration = ts.Debug.deprecate(ts.factory.updateImportDeclaration, factoryDeprecation);
    /** @deprecated Use `factory.createNamespaceImport` or the factory supplied by your transformation context instead. */
    ts.createNamespaceImport = ts.Debug.deprecate(ts.factory.createNamespaceImport, factoryDeprecation);
    /** @deprecated Use `factory.updateNamespaceImport` or the factory supplied by your transformation context instead. */
    ts.updateNamespaceImport = ts.Debug.deprecate(ts.factory.updateNamespaceImport, factoryDeprecation);
    /** @deprecated Use `factory.createNamedImports` or the factory supplied by your transformation context instead. */
    ts.createNamedImports = ts.Debug.deprecate(ts.factory.createNamedImports, factoryDeprecation);
    /** @deprecated Use `factory.updateNamedImports` or the factory supplied by your transformation context instead. */
    ts.updateNamedImports = ts.Debug.deprecate(ts.factory.updateNamedImports, factoryDeprecation);
    /** @deprecated Use `factory.createImportSpecifier` or the factory supplied by your transformation context instead. */
    ts.createImportSpecifier = ts.Debug.deprecate(ts.factory.createImportSpecifier, factoryDeprecation);
    /** @deprecated Use `factory.updateImportSpecifier` or the factory supplied by your transformation context instead. */
    ts.updateImportSpecifier = ts.Debug.deprecate(ts.factory.updateImportSpecifier, factoryDeprecation);
    /** @deprecated Use `factory.createExportAssignment` or the factory supplied by your transformation context instead. */
    ts.createExportAssignment = ts.Debug.deprecate(ts.factory.createExportAssignment, factoryDeprecation);
    /** @deprecated Use `factory.updateExportAssignment` or the factory supplied by your transformation context instead. */
    ts.updateExportAssignment = ts.Debug.deprecate(ts.factory.updateExportAssignment, factoryDeprecation);
    /** @deprecated Use `factory.createNamedExports` or the factory supplied by your transformation context instead. */
    ts.createNamedExports = ts.Debug.deprecate(ts.factory.createNamedExports, factoryDeprecation);
    /** @deprecated Use `factory.updateNamedExports` or the factory supplied by your transformation context instead. */
    ts.updateNamedExports = ts.Debug.deprecate(ts.factory.updateNamedExports, factoryDeprecation);
    /** @deprecated Use `factory.createExportSpecifier` or the factory supplied by your transformation context instead. */
    ts.createExportSpecifier = ts.Debug.deprecate(ts.factory.createExportSpecifier, factoryDeprecation);
    /** @deprecated Use `factory.updateExportSpecifier` or the factory supplied by your transformation context instead. */
    ts.updateExportSpecifier = ts.Debug.deprecate(ts.factory.updateExportSpecifier, factoryDeprecation);
    /** @deprecated Use `factory.createExternalModuleReference` or the factory supplied by your transformation context instead. */
    ts.createExternalModuleReference = ts.Debug.deprecate(ts.factory.createExternalModuleReference, factoryDeprecation);
    /** @deprecated Use `factory.updateExternalModuleReference` or the factory supplied by your transformation context instead. */
    ts.updateExternalModuleReference = ts.Debug.deprecate(ts.factory.updateExternalModuleReference, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocTypeExpression` or the factory supplied by your transformation context instead. */
    ts.createJSDocTypeExpression = ts.Debug.deprecate(ts.factory.createJSDocTypeExpression, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocTypeTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocTypeTag = ts.Debug.deprecate(ts.factory.createJSDocTypeTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocReturnTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocReturnTag = ts.Debug.deprecate(ts.factory.createJSDocReturnTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocThisTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocThisTag = ts.Debug.deprecate(ts.factory.createJSDocThisTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocComment` or the factory supplied by your transformation context instead. */
    ts.createJSDocComment = ts.Debug.deprecate(ts.factory.createJSDocComment, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocParameterTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocParameterTag = ts.Debug.deprecate(ts.factory.createJSDocParameterTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocClassTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocClassTag = ts.Debug.deprecate(ts.factory.createJSDocClassTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocAugmentsTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocAugmentsTag = ts.Debug.deprecate(ts.factory.createJSDocAugmentsTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocEnumTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocEnumTag = ts.Debug.deprecate(ts.factory.createJSDocEnumTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocTemplateTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocTemplateTag = ts.Debug.deprecate(ts.factory.createJSDocTemplateTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocTypedefTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocTypedefTag = ts.Debug.deprecate(ts.factory.createJSDocTypedefTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocCallbackTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocCallbackTag = ts.Debug.deprecate(ts.factory.createJSDocCallbackTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocSignature` or the factory supplied by your transformation context instead. */
    ts.createJSDocSignature = ts.Debug.deprecate(ts.factory.createJSDocSignature, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocPropertyTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocPropertyTag = ts.Debug.deprecate(ts.factory.createJSDocPropertyTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocTypeLiteral` or the factory supplied by your transformation context instead. */
    ts.createJSDocTypeLiteral = ts.Debug.deprecate(ts.factory.createJSDocTypeLiteral, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocImplementsTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocImplementsTag = ts.Debug.deprecate(ts.factory.createJSDocImplementsTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocAuthorTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocAuthorTag = ts.Debug.deprecate(ts.factory.createJSDocAuthorTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocPublicTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocPublicTag = ts.Debug.deprecate(ts.factory.createJSDocPublicTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocPrivateTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocPrivateTag = ts.Debug.deprecate(ts.factory.createJSDocPrivateTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocProtectedTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocProtectedTag = ts.Debug.deprecate(ts.factory.createJSDocProtectedTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocReadonlyTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocReadonlyTag = ts.Debug.deprecate(ts.factory.createJSDocReadonlyTag, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocUnknownTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocTag = ts.Debug.deprecate(ts.factory.createJSDocUnknownTag, factoryDeprecation);
    /** @deprecated Use `factory.createJsxElement` or the factory supplied by your transformation context instead. */
    ts.createJsxElement = ts.Debug.deprecate(ts.factory.createJsxElement, factoryDeprecation);
    /** @deprecated Use `factory.updateJsxElement` or the factory supplied by your transformation context instead. */
    ts.updateJsxElement = ts.Debug.deprecate(ts.factory.updateJsxElement, factoryDeprecation);
    /** @deprecated Use `factory.createJsxSelfClosingElement` or the factory supplied by your transformation context instead. */
    ts.createJsxSelfClosingElement = ts.Debug.deprecate(ts.factory.createJsxSelfClosingElement, factoryDeprecation);
    /** @deprecated Use `factory.updateJsxSelfClosingElement` or the factory supplied by your transformation context instead. */
    ts.updateJsxSelfClosingElement = ts.Debug.deprecate(ts.factory.updateJsxSelfClosingElement, factoryDeprecation);
    /** @deprecated Use `factory.createJsxOpeningElement` or the factory supplied by your transformation context instead. */
    ts.createJsxOpeningElement = ts.Debug.deprecate(ts.factory.createJsxOpeningElement, factoryDeprecation);
    /** @deprecated Use `factory.updateJsxOpeningElement` or the factory supplied by your transformation context instead. */
    ts.updateJsxOpeningElement = ts.Debug.deprecate(ts.factory.updateJsxOpeningElement, factoryDeprecation);
    /** @deprecated Use `factory.createJsxClosingElement` or the factory supplied by your transformation context instead. */
    ts.createJsxClosingElement = ts.Debug.deprecate(ts.factory.createJsxClosingElement, factoryDeprecation);
    /** @deprecated Use `factory.updateJsxClosingElement` or the factory supplied by your transformation context instead. */
    ts.updateJsxClosingElement = ts.Debug.deprecate(ts.factory.updateJsxClosingElement, factoryDeprecation);
    /** @deprecated Use `factory.createJsxFragment` or the factory supplied by your transformation context instead. */
    ts.createJsxFragment = ts.Debug.deprecate(ts.factory.createJsxFragment, factoryDeprecation);
    /** @deprecated Use `factory.createJsxText` or the factory supplied by your transformation context instead. */
    ts.createJsxText = ts.Debug.deprecate(ts.factory.createJsxText, factoryDeprecation);
    /** @deprecated Use `factory.updateJsxText` or the factory supplied by your transformation context instead. */
    ts.updateJsxText = ts.Debug.deprecate(ts.factory.updateJsxText, factoryDeprecation);
    /** @deprecated Use `factory.createJsxOpeningFragment` or the factory supplied by your transformation context instead. */
    ts.createJsxOpeningFragment = ts.Debug.deprecate(ts.factory.createJsxOpeningFragment, factoryDeprecation);
    /** @deprecated Use `factory.createJsxJsxClosingFragment` or the factory supplied by your transformation context instead. */
    ts.createJsxJsxClosingFragment = ts.Debug.deprecate(ts.factory.createJsxJsxClosingFragment, factoryDeprecation);
    /** @deprecated Use `factory.updateJsxFragment` or the factory supplied by your transformation context instead. */
    ts.updateJsxFragment = ts.Debug.deprecate(ts.factory.updateJsxFragment, factoryDeprecation);
    /** @deprecated Use `factory.createJsxAttribute` or the factory supplied by your transformation context instead. */
    ts.createJsxAttribute = ts.Debug.deprecate(ts.factory.createJsxAttribute, factoryDeprecation);
    /** @deprecated Use `factory.updateJsxAttribute` or the factory supplied by your transformation context instead. */
    ts.updateJsxAttribute = ts.Debug.deprecate(ts.factory.updateJsxAttribute, factoryDeprecation);
    /** @deprecated Use `factory.createJsxAttributes` or the factory supplied by your transformation context instead. */
    ts.createJsxAttributes = ts.Debug.deprecate(ts.factory.createJsxAttributes, factoryDeprecation);
    /** @deprecated Use `factory.updateJsxAttributes` or the factory supplied by your transformation context instead. */
    ts.updateJsxAttributes = ts.Debug.deprecate(ts.factory.updateJsxAttributes, factoryDeprecation);
    /** @deprecated Use `factory.createJsxSpreadAttribute` or the factory supplied by your transformation context instead. */
    ts.createJsxSpreadAttribute = ts.Debug.deprecate(ts.factory.createJsxSpreadAttribute, factoryDeprecation);
    /** @deprecated Use `factory.updateJsxSpreadAttribute` or the factory supplied by your transformation context instead. */
    ts.updateJsxSpreadAttribute = ts.Debug.deprecate(ts.factory.updateJsxSpreadAttribute, factoryDeprecation);
    /** @deprecated Use `factory.createJsxExpression` or the factory supplied by your transformation context instead. */
    ts.createJsxExpression = ts.Debug.deprecate(ts.factory.createJsxExpression, factoryDeprecation);
    /** @deprecated Use `factory.updateJsxExpression` or the factory supplied by your transformation context instead. */
    ts.updateJsxExpression = ts.Debug.deprecate(ts.factory.updateJsxExpression, factoryDeprecation);
    /** @deprecated Use `factory.createCaseClause` or the factory supplied by your transformation context instead. */
    ts.createCaseClause = ts.Debug.deprecate(ts.factory.createCaseClause, factoryDeprecation);
    /** @deprecated Use `factory.updateCaseClause` or the factory supplied by your transformation context instead. */
    ts.updateCaseClause = ts.Debug.deprecate(ts.factory.updateCaseClause, factoryDeprecation);
    /** @deprecated Use `factory.createDefaultClause` or the factory supplied by your transformation context instead. */
    ts.createDefaultClause = ts.Debug.deprecate(ts.factory.createDefaultClause, factoryDeprecation);
    /** @deprecated Use `factory.updateDefaultClause` or the factory supplied by your transformation context instead. */
    ts.updateDefaultClause = ts.Debug.deprecate(ts.factory.updateDefaultClause, factoryDeprecation);
    /** @deprecated Use `factory.createHeritageClause` or the factory supplied by your transformation context instead. */
    ts.createHeritageClause = ts.Debug.deprecate(ts.factory.createHeritageClause, factoryDeprecation);
    /** @deprecated Use `factory.updateHeritageClause` or the factory supplied by your transformation context instead. */
    ts.updateHeritageClause = ts.Debug.deprecate(ts.factory.updateHeritageClause, factoryDeprecation);
    /** @deprecated Use `factory.createCatchClause` or the factory supplied by your transformation context instead. */
    ts.createCatchClause = ts.Debug.deprecate(ts.factory.createCatchClause, factoryDeprecation);
    /** @deprecated Use `factory.updateCatchClause` or the factory supplied by your transformation context instead. */
    ts.updateCatchClause = ts.Debug.deprecate(ts.factory.updateCatchClause, factoryDeprecation);
    /** @deprecated Use `factory.createPropertyAssignment` or the factory supplied by your transformation context instead. */
    ts.createPropertyAssignment = ts.Debug.deprecate(ts.factory.createPropertyAssignment, factoryDeprecation);
    /** @deprecated Use `factory.updatePropertyAssignment` or the factory supplied by your transformation context instead. */
    ts.updatePropertyAssignment = ts.Debug.deprecate(ts.factory.updatePropertyAssignment, factoryDeprecation);
    /** @deprecated Use `factory.createShorthandPropertyAssignment` or the factory supplied by your transformation context instead. */
    ts.createShorthandPropertyAssignment = ts.Debug.deprecate(ts.factory.createShorthandPropertyAssignment, factoryDeprecation);
    /** @deprecated Use `factory.updateShorthandPropertyAssignment` or the factory supplied by your transformation context instead. */
    ts.updateShorthandPropertyAssignment = ts.Debug.deprecate(ts.factory.updateShorthandPropertyAssignment, factoryDeprecation);
    /** @deprecated Use `factory.createSpreadAssignment` or the factory supplied by your transformation context instead. */
    ts.createSpreadAssignment = ts.Debug.deprecate(ts.factory.createSpreadAssignment, factoryDeprecation);
    /** @deprecated Use `factory.updateSpreadAssignment` or the factory supplied by your transformation context instead. */
    ts.updateSpreadAssignment = ts.Debug.deprecate(ts.factory.updateSpreadAssignment, factoryDeprecation);
    /** @deprecated Use `factory.createEnumMember` or the factory supplied by your transformation context instead. */
    ts.createEnumMember = ts.Debug.deprecate(ts.factory.createEnumMember, factoryDeprecation);
    /** @deprecated Use `factory.updateEnumMember` or the factory supplied by your transformation context instead. */
    ts.updateEnumMember = ts.Debug.deprecate(ts.factory.updateEnumMember, factoryDeprecation);
    /** @deprecated Use `factory.updateSourceFile` or the factory supplied by your transformation context instead. */
    ts.updateSourceFileNode = ts.Debug.deprecate(ts.factory.updateSourceFile, factoryDeprecation);
    /** @deprecated Use `factory.createNotEmittedStatement` or the factory supplied by your transformation context instead. */
    ts.createNotEmittedStatement = ts.Debug.deprecate(ts.factory.createNotEmittedStatement, factoryDeprecation);
    /** @deprecated Use `factory.createPartiallyEmittedExpression` or the factory supplied by your transformation context instead. */
    ts.createPartiallyEmittedExpression = ts.Debug.deprecate(ts.factory.createPartiallyEmittedExpression, factoryDeprecation);
    /** @deprecated Use `factory.updatePartiallyEmittedExpression` or the factory supplied by your transformation context instead. */
    ts.updatePartiallyEmittedExpression = ts.Debug.deprecate(ts.factory.updatePartiallyEmittedExpression, factoryDeprecation);
    /** @deprecated Use `factory.createCommaListExpression` or the factory supplied by your transformation context instead. */
    ts.createCommaList = ts.Debug.deprecate(ts.factory.createCommaListExpression, factoryDeprecation);
    /** @deprecated Use `factory.updateCommaListExpression` or the factory supplied by your transformation context instead. */
    ts.updateCommaList = ts.Debug.deprecate(ts.factory.updateCommaListExpression, factoryDeprecation);
    /** @deprecated Use `factory.createBundle` or the factory supplied by your transformation context instead. */
    ts.createBundle = ts.Debug.deprecate(ts.factory.createBundle, factoryDeprecation);
    /** @deprecated Use `factory.updateBundle` or the factory supplied by your transformation context instead. */
    ts.updateBundle = ts.Debug.deprecate(ts.factory.updateBundle, factoryDeprecation);
    /** @deprecated Use `factory.createImmediatelyInvokedFunctionExpression` or the factory supplied by your transformation context instead. */
    ts.createImmediatelyInvokedFunctionExpression = ts.Debug.deprecate(ts.factory.createImmediatelyInvokedFunctionExpression, factoryDeprecation);
    /** @deprecated Use `factory.createImmediatelyInvokedArrowFunction` or the factory supplied by your transformation context instead. */
    ts.createImmediatelyInvokedArrowFunction = ts.Debug.deprecate(ts.factory.createImmediatelyInvokedArrowFunction, factoryDeprecation);
    /** @deprecated Use `factory.createVoidZero` or the factory supplied by your transformation context instead. */
    ts.createVoidZero = ts.Debug.deprecate(ts.factory.createVoidZero, factoryDeprecation);
    /** @deprecated Use `factory.createExportDefault` or the factory supplied by your transformation context instead. */
    ts.createExportDefault = ts.Debug.deprecate(ts.factory.createExportDefault, factoryDeprecation);
    /** @deprecated Use `factory.createExternalModuleExport` or the factory supplied by your transformation context instead. */
    ts.createExternalModuleExport = ts.Debug.deprecate(ts.factory.createExternalModuleExport, factoryDeprecation);
    /** @deprecated Use `factory.createNamespaceExport` or the factory supplied by your transformation context instead. */
    ts.createNamespaceExport = ts.Debug.deprecate(ts.factory.createNamespaceExport, factoryDeprecation);
    /** @deprecated Use `factory.updateNamespaceExport` or the factory supplied by your transformation context instead. */
    ts.updateNamespaceExport = ts.Debug.deprecate(ts.factory.updateNamespaceExport, factoryDeprecation);
    /** @deprecated Use `factory.createToken` or the factory supplied by your transformation context instead. */
    ts.createToken = ts.Debug.deprecate(function createToken(kind) {
        return ts.factory.createToken(kind);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createIdentifier` or the factory supplied by your transformation context instead. */
    ts.createIdentifier = ts.Debug.deprecate(function createIdentifier(text) {
        return ts.factory.createIdentifier(text, /*typeArguments*/ undefined, /*originalKeywordKind*/ undefined);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createTempVariable` or the factory supplied by your transformation context instead. */
    ts.createTempVariable = ts.Debug.deprecate(function createTempVariable(recordTempVariable) {
        return ts.factory.createTempVariable(recordTempVariable, /*reserveInNestedScopes*/ undefined);
    }, factoryDeprecation);
    /** @deprecated Use `factory.getGeneratedNameForNode` or the factory supplied by your transformation context instead. */
    ts.getGeneratedNameForNode = ts.Debug.deprecate(function getGeneratedNameForNode(node) {
        return ts.factory.getGeneratedNameForNode(node, /*flags*/ undefined);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createUniqueName(text, GeneratedIdentifierFlags.Optimistic)` or the factory supplied by your transformation context instead. */
    ts.createOptimisticUniqueName = ts.Debug.deprecate(function createOptimisticUniqueName(text) {
        return ts.factory.createUniqueName(text, 16 /* GeneratedIdentifierFlags.Optimistic */);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createUniqueName(text, GeneratedIdentifierFlags.Optimistic | GeneratedIdentifierFlags.FileLevel)` or the factory supplied by your transformation context instead. */
    ts.createFileLevelUniqueName = ts.Debug.deprecate(function createFileLevelUniqueName(text) {
        return ts.factory.createUniqueName(text, 16 /* GeneratedIdentifierFlags.Optimistic */ | 32 /* GeneratedIdentifierFlags.FileLevel */);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createIndexSignature` or the factory supplied by your transformation context instead. */
    ts.createIndexSignature = ts.Debug.deprecate(function createIndexSignature(decorators, modifiers, parameters, type) {
        return ts.factory.createIndexSignature(decorators, modifiers, parameters, type);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createTypePredicateNode` or the factory supplied by your transformation context instead. */
    ts.createTypePredicateNode = ts.Debug.deprecate(function createTypePredicateNode(parameterName, type) {
        return ts.factory.createTypePredicateNode(/*assertsModifier*/ undefined, parameterName, type);
    }, factoryDeprecation);
    /** @deprecated Use `factory.updateTypePredicateNode` or the factory supplied by your transformation context instead. */
    ts.updateTypePredicateNode = ts.Debug.deprecate(function updateTypePredicateNode(node, parameterName, type) {
        return ts.factory.updateTypePredicateNode(node, /*assertsModifier*/ undefined, parameterName, type);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createStringLiteral`, `factory.createStringLiteralFromNode`, `factory.createNumericLiteral`, `factory.createBigIntLiteral`, `factory.createTrue`, `factory.createFalse`, or the factory supplied by your transformation context instead. */
    ts.createLiteral = ts.Debug.deprecate(function createLiteral(value) {
        if (typeof value === "number") {
            return ts.factory.createNumericLiteral(value);
        }
        // eslint-disable-next-line no-in-operator
        if (typeof value === "object" && "base10Value" in value) { // PseudoBigInt
            return ts.factory.createBigIntLiteral(value);
        }
        if (typeof value === "boolean") {
            return value ? ts.factory.createTrue() : ts.factory.createFalse();
        }
        if (typeof value === "string") {
            return ts.factory.createStringLiteral(value, /*isSingleQuote*/ undefined);
        }
        return ts.factory.createStringLiteralFromNode(value);
    }, { since: "4.0", warnAfter: "4.1", message: "Use `factory.createStringLiteral`, `factory.createStringLiteralFromNode`, `factory.createNumericLiteral`, `factory.createBigIntLiteral`, `factory.createTrue`, `factory.createFalse`, or the factory supplied by your transformation context instead." });
    /** @deprecated Use `factory.createMethodSignature` or the factory supplied by your transformation context instead. */
    ts.createMethodSignature = ts.Debug.deprecate(function createMethodSignature(typeParameters, parameters, type, name, questionToken) {
        return ts.factory.createMethodSignature(/*modifiers*/ undefined, name, questionToken, typeParameters, parameters, type);
    }, factoryDeprecation);
    /** @deprecated Use `factory.updateMethodSignature` or the factory supplied by your transformation context instead. */
    ts.updateMethodSignature = ts.Debug.deprecate(function updateMethodSignature(node, typeParameters, parameters, type, name, questionToken) {
        return ts.factory.updateMethodSignature(node, node.modifiers, name, questionToken, typeParameters, parameters, type);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createTypeOperatorNode` or the factory supplied by your transformation context instead. */
    ts.createTypeOperatorNode = ts.Debug.deprecate(function createTypeOperatorNode(operatorOrType, type) {
        var operator;
        if (type) {
            operator = operatorOrType;
        }
        else {
            type = operatorOrType;
            operator = 140 /* SyntaxKind.KeyOfKeyword */;
        }
        return ts.factory.createTypeOperatorNode(operator, type);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createTaggedTemplate` or the factory supplied by your transformation context instead. */
    ts.createTaggedTemplate = ts.Debug.deprecate(function createTaggedTemplate(tag, typeArgumentsOrTemplate, template) {
        var typeArguments;
        if (template) {
            typeArguments = typeArgumentsOrTemplate;
        }
        else {
            template = typeArgumentsOrTemplate;
        }
        return ts.factory.createTaggedTemplateExpression(tag, typeArguments, template);
    }, factoryDeprecation);
    /** @deprecated Use `factory.updateTaggedTemplate` or the factory supplied by your transformation context instead. */
    ts.updateTaggedTemplate = ts.Debug.deprecate(function updateTaggedTemplate(node, tag, typeArgumentsOrTemplate, template) {
        var typeArguments;
        if (template) {
            typeArguments = typeArgumentsOrTemplate;
        }
        else {
            template = typeArgumentsOrTemplate;
        }
        return ts.factory.updateTaggedTemplateExpression(node, tag, typeArguments, template);
    }, factoryDeprecation);
    /** @deprecated Use `factory.updateBinary` or the factory supplied by your transformation context instead. */
    ts.updateBinary = ts.Debug.deprecate(function updateBinary(node, left, right, operator) {
        if (operator === void 0) { operator = node.operatorToken; }
        if (typeof operator === "number") {
            operator = operator === node.operatorToken.kind ? node.operatorToken : ts.factory.createToken(operator);
        }
        return ts.factory.updateBinaryExpression(node, left, operator, right);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createConditional` or the factory supplied by your transformation context instead. */
    ts.createConditional = ts.Debug.deprecate(function createConditional(condition, questionTokenOrWhenTrue, whenTrueOrWhenFalse, colonToken, whenFalse) {
        return arguments.length === 5 ? ts.factory.createConditionalExpression(condition, questionTokenOrWhenTrue, whenTrueOrWhenFalse, colonToken, whenFalse) :
            arguments.length === 3 ? ts.factory.createConditionalExpression(condition, ts.factory.createToken(57 /* SyntaxKind.QuestionToken */), questionTokenOrWhenTrue, ts.factory.createToken(58 /* SyntaxKind.ColonToken */), whenTrueOrWhenFalse) :
                ts.Debug.fail("Argument count mismatch");
    }, factoryDeprecation);
    /** @deprecated Use `factory.createYield` or the factory supplied by your transformation context instead. */
    ts.createYield = ts.Debug.deprecate(function createYield(asteriskTokenOrExpression, expression) {
        var asteriskToken;
        if (expression) {
            asteriskToken = asteriskTokenOrExpression;
        }
        else {
            expression = asteriskTokenOrExpression;
        }
        return ts.factory.createYieldExpression(asteriskToken, expression);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createClassExpression` or the factory supplied by your transformation context instead. */
    ts.createClassExpression = ts.Debug.deprecate(function createClassExpression(modifiers, name, typeParameters, heritageClauses, members) {
        return ts.factory.createClassExpression(/*decorators*/ undefined, modifiers, name, typeParameters, heritageClauses, members);
    }, factoryDeprecation);
    /** @deprecated Use `factory.updateClassExpression` or the factory supplied by your transformation context instead. */
    ts.updateClassExpression = ts.Debug.deprecate(function updateClassExpression(node, modifiers, name, typeParameters, heritageClauses, members) {
        return ts.factory.updateClassExpression(node, /*decorators*/ undefined, modifiers, name, typeParameters, heritageClauses, members);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createPropertySignature` or the factory supplied by your transformation context instead. */
    ts.createPropertySignature = ts.Debug.deprecate(function createPropertySignature(modifiers, name, questionToken, type, initializer) {
        var node = ts.factory.createPropertySignature(modifiers, name, questionToken, type);
        node.initializer = initializer;
        return node;
    }, factoryDeprecation);
    /** @deprecated Use `factory.updatePropertySignature` or the factory supplied by your transformation context instead. */
    ts.updatePropertySignature = ts.Debug.deprecate(function updatePropertySignature(node, modifiers, name, questionToken, type, initializer) {
        var updated = ts.factory.updatePropertySignature(node, modifiers, name, questionToken, type);
        if (node.initializer !== initializer) {
            if (updated === node) {
                updated = ts.factory.cloneNode(node);
            }
            updated.initializer = initializer;
        }
        return updated;
    }, factoryDeprecation);
    /** @deprecated Use `factory.createExpressionWithTypeArguments` or the factory supplied by your transformation context instead. */
    ts.createExpressionWithTypeArguments = ts.Debug.deprecate(function createExpressionWithTypeArguments(typeArguments, expression) {
        return ts.factory.createExpressionWithTypeArguments(expression, typeArguments);
    }, factoryDeprecation);
    /** @deprecated Use `factory.updateExpressionWithTypeArguments` or the factory supplied by your transformation context instead. */
    ts.updateExpressionWithTypeArguments = ts.Debug.deprecate(function updateExpressionWithTypeArguments(node, typeArguments, expression) {
        return ts.factory.updateExpressionWithTypeArguments(node, expression, typeArguments);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createArrowFunction` or the factory supplied by your transformation context instead. */
    ts.createArrowFunction = ts.Debug.deprecate(function createArrowFunction(modifiers, typeParameters, parameters, type, equalsGreaterThanTokenOrBody, body) {
        return arguments.length === 6 ? ts.factory.createArrowFunction(modifiers, typeParameters, parameters, type, equalsGreaterThanTokenOrBody, body) :
            arguments.length === 5 ? ts.factory.createArrowFunction(modifiers, typeParameters, parameters, type, /*equalsGreaterThanToken*/ undefined, equalsGreaterThanTokenOrBody) :
                ts.Debug.fail("Argument count mismatch");
    }, factoryDeprecation);
    /** @deprecated Use `factory.updateArrowFunction` or the factory supplied by your transformation context instead. */
    ts.updateArrowFunction = ts.Debug.deprecate(function updateArrowFunction(node, modifiers, typeParameters, parameters, type, equalsGreaterThanTokenOrBody, body) {
        return arguments.length === 7 ? ts.factory.updateArrowFunction(node, modifiers, typeParameters, parameters, type, equalsGreaterThanTokenOrBody, body) :
            arguments.length === 6 ? ts.factory.updateArrowFunction(node, modifiers, typeParameters, parameters, type, node.equalsGreaterThanToken, equalsGreaterThanTokenOrBody) :
                ts.Debug.fail("Argument count mismatch");
    }, factoryDeprecation);
    /** @deprecated Use `factory.createVariableDeclaration` or the factory supplied by your transformation context instead. */
    ts.createVariableDeclaration = ts.Debug.deprecate(function createVariableDeclaration(name, exclamationTokenOrType, typeOrInitializer, initializer) {
        return arguments.length === 4 ? ts.factory.createVariableDeclaration(name, exclamationTokenOrType, typeOrInitializer, initializer) :
            arguments.length >= 1 && arguments.length <= 3 ? ts.factory.createVariableDeclaration(name, /*exclamationToken*/ undefined, exclamationTokenOrType, typeOrInitializer) :
                ts.Debug.fail("Argument count mismatch");
    }, factoryDeprecation);
    /** @deprecated Use `factory.updateVariableDeclaration` or the factory supplied by your transformation context instead. */
    ts.updateVariableDeclaration = ts.Debug.deprecate(function updateVariableDeclaration(node, name, exclamationTokenOrType, typeOrInitializer, initializer) {
        return arguments.length === 5 ? ts.factory.updateVariableDeclaration(node, name, exclamationTokenOrType, typeOrInitializer, initializer) :
            arguments.length === 4 ? ts.factory.updateVariableDeclaration(node, name, node.exclamationToken, exclamationTokenOrType, typeOrInitializer) :
                ts.Debug.fail("Argument count mismatch");
    }, factoryDeprecation);
    /** @deprecated Use `factory.createImportClause` or the factory supplied by your transformation context instead. */
    ts.createImportClause = ts.Debug.deprecate(function createImportClause(name, namedBindings, isTypeOnly) {
        if (isTypeOnly === void 0) { isTypeOnly = false; }
        return ts.factory.createImportClause(isTypeOnly, name, namedBindings);
    }, factoryDeprecation);
    /** @deprecated Use `factory.updateImportClause` or the factory supplied by your transformation context instead. */
    ts.updateImportClause = ts.Debug.deprecate(function updateImportClause(node, name, namedBindings, isTypeOnly) {
        return ts.factory.updateImportClause(node, isTypeOnly, name, namedBindings);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createExportDeclaration` or the factory supplied by your transformation context instead. */
    ts.createExportDeclaration = ts.Debug.deprecate(function createExportDeclaration(decorators, modifiers, exportClause, moduleSpecifier, isTypeOnly) {
        if (isTypeOnly === void 0) { isTypeOnly = false; }
        return ts.factory.createExportDeclaration(decorators, modifiers, isTypeOnly, exportClause, moduleSpecifier);
    }, factoryDeprecation);
    /** @deprecated Use `factory.updateExportDeclaration` or the factory supplied by your transformation context instead. */
    ts.updateExportDeclaration = ts.Debug.deprecate(function updateExportDeclaration(node, decorators, modifiers, exportClause, moduleSpecifier, isTypeOnly) {
        return ts.factory.updateExportDeclaration(node, decorators, modifiers, isTypeOnly, exportClause, moduleSpecifier, node.assertClause);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createJSDocParameterTag` or the factory supplied by your transformation context instead. */
    ts.createJSDocParamTag = ts.Debug.deprecate(function createJSDocParamTag(name, isBracketed, typeExpression, comment) {
        return ts.factory.createJSDocParameterTag(/*tagName*/ undefined, name, isBracketed, typeExpression, /*isNameFirst*/ false, comment ? ts.factory.createNodeArray([ts.factory.createJSDocText(comment)]) : undefined);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createComma` or the factory supplied by your transformation context instead. */
    ts.createComma = ts.Debug.deprecate(function createComma(left, right) {
        return ts.factory.createComma(left, right);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createLessThan` or the factory supplied by your transformation context instead. */
    ts.createLessThan = ts.Debug.deprecate(function createLessThan(left, right) {
        return ts.factory.createLessThan(left, right);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createAssignment` or the factory supplied by your transformation context instead. */
    ts.createAssignment = ts.Debug.deprecate(function createAssignment(left, right) {
        return ts.factory.createAssignment(left, right);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createStrictEquality` or the factory supplied by your transformation context instead. */
    ts.createStrictEquality = ts.Debug.deprecate(function createStrictEquality(left, right) {
        return ts.factory.createStrictEquality(left, right);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createStrictInequality` or the factory supplied by your transformation context instead. */
    ts.createStrictInequality = ts.Debug.deprecate(function createStrictInequality(left, right) {
        return ts.factory.createStrictInequality(left, right);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createAdd` or the factory supplied by your transformation context instead. */
    ts.createAdd = ts.Debug.deprecate(function createAdd(left, right) {
        return ts.factory.createAdd(left, right);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createSubtract` or the factory supplied by your transformation context instead. */
    ts.createSubtract = ts.Debug.deprecate(function createSubtract(left, right) {
        return ts.factory.createSubtract(left, right);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createLogicalAnd` or the factory supplied by your transformation context instead. */
    ts.createLogicalAnd = ts.Debug.deprecate(function createLogicalAnd(left, right) {
        return ts.factory.createLogicalAnd(left, right);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createLogicalOr` or the factory supplied by your transformation context instead. */
    ts.createLogicalOr = ts.Debug.deprecate(function createLogicalOr(left, right) {
        return ts.factory.createLogicalOr(left, right);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createPostfixIncrement` or the factory supplied by your transformation context instead. */
    ts.createPostfixIncrement = ts.Debug.deprecate(function createPostfixIncrement(operand) {
        return ts.factory.createPostfixIncrement(operand);
    }, factoryDeprecation);
    /** @deprecated Use `factory.createLogicalNot` or the factory supplied by your transformation context instead. */
    ts.createLogicalNot = ts.Debug.deprecate(function createLogicalNot(operand) {
        return ts.factory.createLogicalNot(operand);
    }, factoryDeprecation);
    /** @deprecated Use an appropriate `factory` method instead. */
    ts.createNode = ts.Debug.deprecate(function createNode(kind, pos, end) {
        if (pos === void 0) { pos = 0; }
        if (end === void 0) { end = 0; }
        return ts.setTextRangePosEnd(kind === 305 /* SyntaxKind.SourceFile */ ? ts.parseBaseNodeFactory.createBaseSourceFileNode(kind) :
            kind === 79 /* SyntaxKind.Identifier */ ? ts.parseBaseNodeFactory.createBaseIdentifierNode(kind) :
                kind === 80 /* SyntaxKind.PrivateIdentifier */ ? ts.parseBaseNodeFactory.createBasePrivateIdentifierNode(kind) :
                    !ts.isNodeKind(kind) ? ts.parseBaseNodeFactory.createBaseTokenNode(kind) :
                        ts.parseBaseNodeFactory.createBaseNode(kind), pos, end);
    }, { since: "4.0", warnAfter: "4.1", message: "Use an appropriate `factory` method instead." });
    /**
     * Creates a shallow, memberwise clone of a node ~for mutation~ with its `pos`, `end`, and `parent` set.
     *
     * NOTE: It is unsafe to change any properties of a `Node` that relate to its AST children, as those changes won't be
     * captured with respect to transformations.
     *
     * @deprecated Use an appropriate `factory.update...` method instead, use `setCommentRange` or `setSourceMapRange`, and avoid setting `parent`.
     */
    ts.getMutableClone = ts.Debug.deprecate(function getMutableClone(node) {
        var clone = ts.factory.cloneNode(node);
        ts.setTextRange(clone, node);
        ts.setParent(clone, node.parent);
        return clone;
    }, { since: "4.0", warnAfter: "4.1", message: "Use an appropriate `factory.update...` method instead, use `setCommentRange` or `setSourceMapRange`, and avoid setting `parent`." });
    // #endregion Node Factory top-level exports
    // DEPRECATION: Renamed node tests
    // DEPRECATION PLAN:
    //     - soft: 4.0
    //     - warn: 4.1
    //     - error: TBD
    // #region Renamed node Tests
    /** @deprecated Use `isTypeAssertionExpression` instead. */
    ts.isTypeAssertion = ts.Debug.deprecate(function isTypeAssertion(node) {
        return node.kind === 211 /* SyntaxKind.TypeAssertionExpression */;
    }, {
        since: "4.0",
        warnAfter: "4.1",
        message: "Use `isTypeAssertionExpression` instead."
    });
    // #endregion
    // DEPRECATION: Renamed node tests
    // DEPRECATION PLAN:
    //     - soft: 4.2
    //     - warn: 4.3
    //     - error: TBD
    // #region Renamed node Tests
    /**
     * @deprecated Use `isMemberName` instead.
     */
    ts.isIdentifierOrPrivateIdentifier = ts.Debug.deprecate(function isIdentifierOrPrivateIdentifier(node) {
        return ts.isMemberName(node);
    }, {
        since: "4.2",
        warnAfter: "4.3",
        message: "Use `isMemberName` instead."
    });
    // #endregion Renamed node Tests
})(ts || (ts = {}));


//# sourceMappingURL=typescript.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/snapshot/v8-startup-snapshot-api.js                                       0000664 0000000 0000000 00000003451 14746647661 0024246 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

const fs = require('node:fs');
const zlib = require('node:zlib');
const path = require('node:path');
const assert = require('node:assert');

const v8 = require('node:v8');

class BookShelf {
  storage = new Map();

  // Reading a series of files from directory and store them into storage.
  constructor(directory, books) {
    for (const book of books) {
      this.storage.set(book, fs.readFileSync(path.join(directory, book)));
    };
  }

  static compressAll(shelf) {
    for (const [ book, content ] of shelf.storage) {
      shelf.storage.set(book, zlib.gzipSync(content));
    }
  }

  static decompressAll(shelf) {
    for (const [ book, content ] of shelf.storage) {
      shelf.storage.set(book, zlib.gunzipSync(content));
    }
  }
}

// __dirname here is where the snapshot script is placed
// during snapshot building time.
const shelf = new BookShelf(__dirname, [
  'book1.en_US.txt',
  'book1.es_ES.txt',
  'book2.zh_CN.txt',
]);

assert(v8.startupSnapshot.isBuildingSnapshot());

// On snapshot serialization, compress the books to reduce size.
v8.startupSnapshot.addSerializeCallback(BookShelf.compressAll, shelf);
// On snapshot deserialization, decompress the books.
v8.startupSnapshot.addDeserializeCallback(BookShelf.decompressAll, shelf);
v8.startupSnapshot.setDeserializeMainFunction((shelf) => {
  // process.env and process.argv are refreshed during snapshot
  // deserialization.
  const lang = process.env.BOOK_LANG || 'en_US';
  const book = process.argv[1];
  const name = `${book}.${lang}.txt`;
  console.error('Reading', name);
  console.log(shelf.storage.get(name).toString());
}, shelf);

assert.throws(() => v8.startupSnapshot.setDeserializeMainFunction(() => {
  assert.fail('unreachable duplicated main function');
}), {
  code: 'ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION',
});
                                                                                                                                                                                                                       node-23.7.0/test/fixtures/snapshot/warning.js                                                       0000664 0000000 0000000 00000000044 14746647661 0021245 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        process.emitWarning('test warning');                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            node-23.7.0/test/fixtures/snapshot/weak-reference-gc.js                                             0000664 0000000 0000000 00000001071 14746647661 0023053 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

const { WeakReference } = require('internal/util');
const {
  setDeserializeMainFunction
} = require('v8').startupSnapshot

let obj = { hello: 'world' };
const ref = new WeakReference(obj);
let gcCount = 0;
let maxGC = 10;

function run() {
  globalThis.gc();
  setImmediate(() => {
    gcCount++;
    if (ref.get() === undefined) {
      return;
    } else if (gcCount < maxGC) {
      run();
    } else {
      throw new Error(`Reference is still around after ${maxGC} GC`);
    }
  });
}

setDeserializeMainFunction(() => {
  obj = null;
  run();
});
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/snapshot/weak-reference.js                                                0000664 0000000 0000000 00000000475 14746647661 0022473 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

const { WeakReference } = require('internal/util');
const {
  setDeserializeMainFunction
} = require('v8').startupSnapshot
const assert = require('assert');

let obj = { hello: 'world' };
const ref = new WeakReference(obj);

setDeserializeMainFunction(() => {
  assert.strictEqual(ref.get(), obj);
});
                                                                                                                                                                                                   node-23.7.0/test/fixtures/snapshot/worker.js                                                        0000664 0000000 0000000 00000000137 14746647661 0021114 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

const { Worker } = require('worker_threads');

new Worker('1', { eval: true });
                                                                                                                                                                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/source-map/                                                               0000775 0000000 0000000 00000000000 14746647661 0017460 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/source-map/babel-esm-original.mjs                                         0000664 0000000 0000000 00000000176 14746647661 0023630 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import {foo} from './esm-dep.mjs';

const obj = {
  a: {
    b: 22
  }
};

if (obj?.a?.b === 22) throw Error('an exception');
                                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/source-map/babel-esm.mjs                                                  0000664 0000000 0000000 00000001701 14746647661 0022021 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        var _obj$a;

import { foo } from './esm-dep.mjs';
const obj = {
  a: {
    b: 22
  }
};
if ((obj === null || obj === void 0 ? void 0 : (_obj$a = obj.a) === null || _obj$a === void 0 ? void 0 : _obj$a.b) === 22) throw Error('an exception');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhYmVsLWVzbS1vcmlnaW5hbC5tanMiXSwibmFtZXMiOlsiZm9vIiwib2JqIiwiYSIsImIiLCJFcnJvciJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxTQUFRQSxHQUFSLFFBQWtCLGVBQWxCO0FBRUEsTUFBTUMsR0FBRyxHQUFHO0FBQ1ZDLEVBQUFBLENBQUMsRUFBRTtBQUNEQyxJQUFBQSxDQUFDLEVBQUU7QUFERjtBQURPLENBQVo7QUFNQSxJQUFJLENBQUFGLEdBQUcsU0FBSCxJQUFBQSxHQUFHLFdBQUgsc0JBQUFBLEdBQUcsQ0FBRUMsQ0FBTCxrREFBUUMsQ0FBUixNQUFjLEVBQWxCLEVBQXNCLE1BQU1DLEtBQUssQ0FBQyxjQUFELENBQVgiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2Zvb30gZnJvbSAnLi9lc20tZGVwLm1qcyc7XG5cbmNvbnN0IG9iaiA9IHtcbiAgYToge1xuICAgIGI6IDIyXG4gIH1cbn07XG5cbmlmIChvYmo/LmE/LmIgPT09IDIyKSB0aHJvdyBFcnJvcignYW4gZXhjZXB0aW9uJyk7XG5cbiJdfQ==
                                                               node-23.7.0/test/fixtures/source-map/babel-throw-original.js                                        0000664 0000000 0000000 00000000452 14746647661 0024027 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        /*---
esid: prod-OptionalExpression
features: [optional-chaining]
---*/

const obj = {
  a: {
    b: 22
  }
};

function fn () {
  return {};
}

setTimeout((err) => {
  // OptionalExpression (MemberExpression OptionalChain) OptionalChain
  if (obj?.a?.b === 22) throw Error('an exception');
}, 5);
                                                                                                                                                                                                                      node-23.7.0/test/fixtures/source-map/babel-throw.js                                                 0000664 0000000 0000000 00000002747 14746647661 0022236 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        /*---
esid: prod-OptionalExpression
features: [optional-chaining]
---*/
const obj = {
  a: {
    b: 22
  }
};

function fn() {
  return {};
}

setTimeout(err => {
  var _obj$a;

  // OptionalExpression (MemberExpression OptionalChain) OptionalChain
  if ((obj === null || obj === void 0 ? void 0 : (_obj$a = obj.a) === null || _obj$a === void 0 ? void 0 : _obj$a.b) === 22) throw Error('an exception');
}, 5);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhYmVsLXRocm93LW9yaWdpbmFsLmpzIl0sIm5hbWVzIjpbIm9iaiIsImEiLCJiIiwiZm4iLCJzZXRUaW1lb3V0IiwiZXJyIiwiRXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBS0EsTUFBTUEsR0FBRyxHQUFHO0FBQ1ZDLEVBQUFBLENBQUMsRUFBRTtBQUNEQyxJQUFBQSxDQUFDLEVBQUU7QUFERjtBQURPLENBQVo7O0FBTUEsU0FBU0MsRUFBVCxHQUFlO0FBQ2IsU0FBTyxFQUFQO0FBQ0Q7O0FBRURDLFVBQVUsQ0FBRUMsR0FBRCxJQUFTO0FBQUE7O0FBQ2xCO0FBQ0EsTUFBSSxDQUFBTCxHQUFHLFNBQUgsSUFBQUEsR0FBRyxXQUFILHNCQUFBQSxHQUFHLENBQUVDLENBQUwsa0RBQVFDLENBQVIsTUFBYyxFQUFsQixFQUFzQixNQUFNSSxLQUFLLENBQUMsY0FBRCxDQUFYO0FBQ3ZCLENBSFMsRUFHUCxDQUhPLENBQVYiLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLVxuZXNpZDogcHJvZC1PcHRpb25hbEV4cHJlc3Npb25cbmZlYXR1cmVzOiBbb3B0aW9uYWwtY2hhaW5pbmddXG4tLS0qL1xuXG5jb25zdCBvYmogPSB7XG4gIGE6IHtcbiAgICBiOiAyMlxuICB9XG59O1xuXG5mdW5jdGlvbiBmbiAoKSB7XG4gIHJldHVybiB7fTtcbn1cblxuc2V0VGltZW91dCgoZXJyKSA9PiB7XG4gIC8vIE9wdGlvbmFsRXhwcmVzc2lvbiAoTWVtYmVyRXhwcmVzc2lvbiBPcHRpb25hbENoYWluKSBPcHRpb25hbENoYWluXG4gIGlmIChvYmo/LmE/LmIgPT09IDIyKSB0aHJvdyBFcnJvcignYW4gZXhjZXB0aW9uJyk7XG59LCA1KTtcblxuIl19
                         node-23.7.0/test/fixtures/source-map/basic.js                                                       0000664 0000000 0000000 00000000166 14746647661 0021102 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const a = 99;
if (true) {
  const b = 101;
} else {
  const c = 102;
}
//# sourceMappingURL=https://ci.nodejs.org/418
                                                                                                                                                                                                                                                                                                                                                                                                          node-23.7.0/test/fixtures/source-map/disk-index.map                                                 0000664 0000000 0000000 00000001346 14746647661 0022222 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sources": [
    "disk.js"
  ],
  "sections": [
    { "offset": {"line": 0, "column": 0 }, "map": 
     {
      "version": 3,
      "sources": [
        "section.js"
      ],
      "names": [
        "Foo",
        "[object Object]",
        "x",
        "this",
        "console",
        "info",
        "methodC",
        "a",
        "b",
        "methodA"
      ],
      "mappings": "MAAMA,IACJC,YAAaC,EAAE,IACbC,KAAKD,EAAIA,EAAIA,EAAI,GACjB,GAAIC,KAAKD,EAAG,CACVE,QAAQC,KAAK,eACR,CACLD,QAAQC,KAAK,aAEfF,KAAKG,UAEPL,UACEG,QAAQC,KAAK,WAEfJ,UACEG,QAAQC,KAAK,aAEfJ,UACEG,QAAQC,KAAK,WAEfJ,UACEG,QAAQC,KAAK,cAIjB,MAAME,EAAI,IAAIP,IAAI,GAClB,MAAMQ,EAAI,IAAIR,IAAI,IAClBO,EAAEE",
      "sourceRoot": "./"
     }
    }
  ]
}
                                                                                                                                                                                                                                                                                          node-23.7.0/test/fixtures/source-map/disk-relative-path.js                                          0000664 0000000 0000000 00000000533 14746647661 0023514 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        class Foo{constructor(x=33){this.x=x?x:99;if(this.x){console.info("covered")}else{console.info("uncovered")}this.methodC()}methodA(){console.info("covered")}methodB(){console.info("uncovered")}methodC(){console.info("covered")}methodD(){console.info("uncovered")}}const a=new Foo(0);const b=new Foo(33);a.methodA();
//# sourceMappingURL=./disk.map                                                                                                                                                                     node-23.7.0/test/fixtures/source-map/disk.js                                                        0000664 0000000 0000000 00000000657 14746647661 0020760 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        class Foo {
  constructor (x=33) {
    this.x = x ? x : 99
    if (this.x) {
      console.info('covered')
    } else {
      console.info('uncovered')
    }
    this.methodC()
  }
  methodA () {
    console.info('covered')
  }
  methodB () {
    console.info('uncovered')
  }
  methodC () {
    console.info('covered')
  }
  methodD () {
    console.info('uncovered')
  }
}

const a = new Foo(0)
const b = new Foo(33)
a.methodA()
                                                                                 node-23.7.0/test/fixtures/source-map/disk.map                                                       0000664 0000000 0000000 00000001016 14746647661 0021107 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sources": [
    "disk.js"
  ],
  "names": [
    "Foo",
    "[object Object]",
    "x",
    "this",
    "console",
    "info",
    "methodC",
    "a",
    "b",
    "methodA"
  ],
  "mappings": "MAAMA,IACJC,YAAaC,EAAE,IACbC,KAAKD,EAAIA,EAAIA,EAAI,GACjB,GAAIC,KAAKD,EAAG,CACVE,QAAQC,KAAK,eACR,CACLD,QAAQC,KAAK,aAEfF,KAAKG,UAEPL,UACEG,QAAQC,KAAK,WAEfJ,UACEG,QAAQC,KAAK,aAEfJ,UACEG,QAAQC,KAAK,WAEfJ,UACEG,QAAQC,KAAK,cAIjB,MAAME,EAAI,IAAIP,IAAI,GAClB,MAAMQ,EAAI,IAAIR,IAAI,IAClBO,EAAEE",
  "sourceRoot": "./"
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/source-map/emptyStackError.js                                             0000664 0000000 0000000 00000000125 14746647661 0023152 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        "use strict";

Error.stackTraceLimit = 0;
throw new RangeError('emptyStackError');


                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/source-map/enclosing-call-site-min.js                                     0000664 0000000 0000000 00000000427 14746647661 0024436 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        var functionA=function(){functionB()};function functionB(){functionC()}var functionC=function(){functionD()},functionD=function(){if(0<Math.random())throw Error("an error!");},thrower=functionA;try{functionA()}catch(a){throw a;};
//# sourceMappingURL=enclosing-call-site.js.map

                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/source-map/enclosing-call-site.js                                         0000664 0000000 0000000 00000000516 14746647661 0023654 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const functionA = () => {
  functionB()
}

function functionB() {
  functionC()
}

const functionC = () => {
  functionD()
}

const functionD = () => {
  (function functionE () {
    if (Math.random() > 0) {
      throw new Error('an error!')
    }
  })()
}

const thrower = functionA

try {
  thrower()
} catch (err) {
  throw err
}
                                                                                                                                                                                  node-23.7.0/test/fixtures/source-map/enclosing-call-site.js.map                                     0000664 0000000 0000000 00000001045 14746647661 0024426 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
"version":3,
"file":"enclosing-call-site-min.js",
"lineCount":1,
"mappings":"AAAA,IAAMA,UAAYA,QAAA,EAAM,CACtBC,SAAA,EADsB,CAIxBA,SAASA,UAAS,EAAG,CACnBC,SAAA,EADmB,CAIrB,IAAMA,UAAYA,QAAA,EAAM,CACtBC,SAAA,EADsB,CAAxB,CAIMA,UAAYA,QAAA,EAAM,CAEpB,GAAoB,CAApB,CAAIC,IAAA,CAAKC,MAAL,EAAJ,CACE,KAAUC,MAAJ,CAAU,WAAV,CAAN,CAHkB,CAJxB,CAYMC,QAAUP,SAEhB,IAAI,CACFO,SAAA,EADE,CAEF,MAAOC,CAAP,CAAY,CACZ,KAAMA,EAAN,CADY;",
"sources":["enclosing-call-site.js"],
"names":["functionA","functionB","functionC","functionD","Math","random","Error","thrower","err"]
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/source-map/esm-basic.mjs                                                  0000664 0000000 0000000 00000000221 14746647661 0022031 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import {foo} from './esm-dep.mjs';
import {strictEqual} from 'assert';
strictEqual(foo(), 'foo');
//# sourceMappingURL=https://ci.nodejs.org/405
                                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/source-map/esm-dep.mjs                                                    0000664 0000000 0000000 00000000133 14746647661 0021522 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        export function foo () {
  return 'foo';
};
//# sourceMappingURL=https://ci.nodejs.org/422
                                                                                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/source-map/esm-export-missing-module.mjs                                  0000664 0000000 0000000 00000000000 14746647661 0025216 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/source-map/esm-export-missing-module.mjs.map                              0000664 0000000 0000000 00000000250 14746647661 0026001 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {"version":3,"file":"esm-export-missing-module.esm","sourceRoot":"","sources":["./exm-export-missing-module.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,SAAS;AAEzB,CAAC"}                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/source-map/esm-export-missing.mjs                                         0000664 0000000 0000000 00000000155 14746647661 0023746 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import { Something } from './esm-export-missing-module.mjs';
//# sourceMappingURL=esm-export-missing.mjs.map
                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/source-map/esm-export-missing.mjs.map                                     0000664 0000000 0000000 00000000315 14746647661 0024520 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {"version":3,"file":"esm-export-missing.ts","sourceRoot":"","sources":["./esm-export-missing.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC"}                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/source-map/esm-export-missing.ts                                          0000664 0000000 0000000 00000000127 14746647661 0023602 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        
import { Something } from './exm-export-missing-module.mjs';
console.info(Something);
                                                                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/source-map/exit-1.js                                                      0000664 0000000 0000000 00000000207 14746647661 0021124 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const a = 99;
if (true) {
  const b = 101;
} else {
  const c = 102;
}
process.exit(1);
//# sourceMappingURL=https://ci.nodejs.org/404
                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/source-map/extract-url/                                                   0000775 0000000 0000000 00000000000 14746647661 0021732 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/source-map/extract-url/cjs-url-in-middle.js                               0000664 0000000 0000000 00000000524 14746647661 0025510 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        
throw new Error("Hello world!");
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vcHJvamVjdC9pbmRleC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsidGhyb3cgbmV3IEVycm9yKFwiSGVsbG8gd29ybGQhXCIpXG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQUEsTUFBTSxJQUFJLE1BQU0sY0FBYzsiLAogICJuYW1lcyI6IFtdCn0K
console.log(1);
//
                                                                                                                                                                            node-23.7.0/test/fixtures/source-map/extract-url/cjs-url-in-string.js                               0000664 0000000 0000000 00000000526 14746647661 0025562 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        
throw new Error("Hello world!");`
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vcHJvamVjdC9pbmRleC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsidGhyb3cgbmV3IEVycm9yKFwiSGVsbG8gd29ybGQhXCIpXG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQUEsTUFBTSxJQUFJLE1BQU0sY0FBYzsiLAogICJuYW1lcyI6IFtdCn0K
console.log(1);
//`
                                                                                                                                                                          node-23.7.0/test/fixtures/source-map/extract-url/esm-url-in-middle.mjs                              0000664 0000000 0000000 00000000524 14746647661 0025672 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        
throw new Error("Hello world!");
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vcHJvamVjdC9pbmRleC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsidGhyb3cgbmV3IEVycm9yKFwiSGVsbG8gd29ybGQhXCIpXG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQUEsTUFBTSxJQUFJLE1BQU0sY0FBYzsiLAogICJuYW1lcyI6IFtdCn0K
console.log(1);
//
                                                                                                                                                                            node-23.7.0/test/fixtures/source-map/extract-url/esm-url-in-string.mjs                              0000664 0000000 0000000 00000000526 14746647661 0025744 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        
throw new Error("Hello world!");`
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vcHJvamVjdC9pbmRleC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsidGhyb3cgbmV3IEVycm9yKFwiSGVsbG8gd29ybGQhXCIpXG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQUEsTUFBTSxJQUFJLE1BQU0sY0FBYzsiLAogICJuYW1lcyI6IFtdCn0K
console.log(1);
//`
                                                                                                                                                                          node-23.7.0/test/fixtures/source-map/icu.js                                                         0000664 0000000 0000000 00000002171 14746647661 0020577 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const React = {
  createElement: () => {
    "あ 🐕 🐕", function (e) {
      throw e;
    }(Error("an error"));
  }
};
const profile = /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("img", {
  src: "avatar.png",
  className: "profile"
}), /*#__PURE__*/React.createElement("h3", null, ["hello"]));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImljdS5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxLQUFLLEdBQUc7QUFDWixFQUFBLGFBQWEsRUFBRSxNQUFNO0FBQ2xCO0FBQUE7QUFBQSxNQUFpQixLQUFLLENBQUMsVUFBRCxDQUF0QixDQUFEO0FBQ0Q7QUFIVyxDQUFkO0FBTUEsTUFBTSxPQUFPLGdCQUNYLDhDQUNFO0FBQUssRUFBQSxHQUFHLEVBQUMsWUFBVDtBQUFzQixFQUFBLFNBQVMsRUFBQztBQUFoQyxFQURGLGVBRUUsZ0NBQUssQ0FBQyxPQUFELENBQUwsQ0FGRixDQURGIiwiZmlsZSI6InN0ZG91dCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJlYWN0ID0ge1xuICBjcmVhdGVFbGVtZW50OiAoKSA9PiB7XG4gICAgKFwi44GCIPCfkJUg8J+QlVwiLCB0aHJvdyBFcnJvcihcImFuIGVycm9yXCIpKTtcbiAgfVxufTtcblxuY29uc3QgcHJvZmlsZSA9IChcbiAgPGRpdj5cbiAgICA8aW1nIHNyYz1cImF2YXRhci5wbmdcIiBjbGFzc05hbWU9XCJwcm9maWxlXCIgLz5cbiAgICA8aDM+e1tcImhlbGxvXCJdfTwvaDM+XG4gIDwvZGl2PlxuKTtcbiJdfQ==
                                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/source-map/icu.jsx                                                        0000664 0000000 0000000 00000000321 14746647661 0020762 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const React = {
  createElement: () => {
    ("あ 🐕 🐕", throw Error("an error"));
  }
};

const profile = (
  <div>
    <img src="avatar.png" className="profile" />
    <h3>{["hello"]}</h3>
  </div>
);
                                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/source-map/inline-base64-json-error.js                                    0000664 0000000 0000000 00000010340 14746647661 0024452 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        var cov_263bu3eqm8=function(){var path=                                             "./branches.js";var hash="424788076537d051b5bf0e2564aef393124eabc7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:                                             "./branches.js",statementMap:{"0":{start:{line:1,column:0},end:{line:7,column:1}},"1":{start:{line:2,column:2},end:{line:2,column:29}},"2":{start:{line:3,column:7},end:{line:7,column:1}},"3":{start:{line:4,column:2},end:{line:4,column:27}},"4":{start:{line:6,column:2},end:{line:6,column:29}},"5":{start:{line:10,column:2},end:{line:16,column:3}},"6":{start:{line:11,column:4},end:{line:11,column:28}},"7":{start:{line:12,column:9},end:{line:16,column:3}},"8":{start:{line:13,column:4},end:{line:13,column:31}},"9":{start:{line:15,column:4},end:{line:15,column:29}},"10":{start:{line:19,column:0},end:{line:19,column:12}},"11":{start:{line:20,column:0},end:{line:20,column:13}}},fnMap:{"0":{name:"branch",decl:{start:{line:9,column:9},end:{line:9,column:15}},loc:{start:{line:9,column:20},end:{line:17,column:1}},line:9}},branchMap:{"0":{loc:{start:{line:1,column:0},end:{line:7,column:1}},type:"if",locations:[{start:{line:1,column:0},end:{line:7,column:1}},{start:{line:1,column:0},end:{line:7,column:1}}],line:1},"1":{loc:{start:{line:3,column:7},end:{line:7,column:1}},type:"if",locations:[{start:{line:3,column:7},end:{line:7,column:1}},{start:{line:3,column:7},end:{line:7,column:1}}],line:3},"2":{loc:{start:{line:10,column:2},end:{line:16,column:3}},type:"if",locations:[{start:{line:10,column:2},end:{line:16,column:3}},{start:{line:10,column:2},end:{line:16,column:3}}],line:10},"3":{loc:{start:{line:12,column:9},end:{line:16,column:3}},type:"if",locations:[{start:{line:12,column:9},end:{line:16,column:3}},{start:{line:12,column:9},end:{line:16,column:3}}],line:12}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"424788076537d051b5bf0e2564aef393124eabc7"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_263bu3eqm8.s[0]++;if(false){cov_263bu3eqm8.b[0][0]++;cov_263bu3eqm8.s[1]++;console.info('unreachable');}else{cov_263bu3eqm8.b[0][1]++;cov_263bu3eqm8.s[2]++;if(true){cov_263bu3eqm8.b[1][0]++;cov_263bu3eqm8.s[3]++;console.info('reachable');}else{cov_263bu3eqm8.b[1][1]++;cov_263bu3eqm8.s[4]++;console.info('unreachable');}}function branch(a){cov_263bu3eqm8.f[0]++;cov_263bu3eqm8.s[5]++;if(a){cov_263bu3eqm8.b[2][0]++;cov_263bu3eqm8.s[6]++;console.info('a = true');}else{cov_263bu3eqm8.b[2][1]++;cov_263bu3eqm8.s[7]++;if(undefined){cov_263bu3eqm8.b[3][0]++;cov_263bu3eqm8.s[8]++;console.info('unreachable');}else{cov_263bu3eqm8.b[3][1]++;cov_263bu3eqm8.s[9]++;console.info('a = false');}}}cov_263bu3eqm8.s[10]++;branch(true);cov_263bu3eqm8.s[11]++;branch(false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uOjMsInNvdXJjZXMiOlsiLi9icmFuY2hlcy5qcyJdLCJuYW1lcyI6WyJjb25zb2xlIiwiaW5mbyIsImJyYW5jaCIsImEiLCJ1bmRlZmluZWQiXSwibWFwcGluZ3MiOiJzdUVBQUEsR0FBSSxLQUFKLENBQVcsZ0RBQ1RBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhLGFBQWIsRUFDRCxDQUZELElBRU8sbURBQUksSUFBSixDQUFVLGdEQUNmRCxPQUFPLENBQUNDLElBQVIsQ0FBYSxXQUFiLEVBQ0QsQ0FGTSxJQUVBLGdEQUNMRCxPQUFPLENBQUNDLElBQVIsQ0FBYSxhQUFiLEVBQ0QsRUFFRCxRQUFTQyxDQUFBQSxNQUFULENBQWlCQyxDQUFqQixDQUFvQiw2Q0FDbEIsR0FBSUEsQ0FBSixDQUFPLGdEQUNMSCxPQUFPLENBQUNDLElBQVIsQ0FBYSxVQUFiLEVBQ0QsQ0FGRCxJQUVPLG1EQUFJRyxTQUFKLENBQWUsZ0RBQ3BCSixPQUFPLENBQUNDLElBQVIsQ0FBYSxhQUFiLEVBQ0QsQ0FGTSxJQUVBLGdEQUNMRCxPQUFPLENBQUNDLElBQVIsQ0FBYSxXQUFiLEVBQ0QsRUFDRixDLHVCQUVEQyxNQUFNLENBQUMsSUFBRCxDQUFOLEMsdUJBQ0FBLE1BQU0sQ0FBQyxLQUFELENBQU4iLCJzb3VyY2VzQ29udGVudCI6WyJpZiAoZmFsc2UpIHtcbiAgY29uc29sZS5pbmZvKCd1bnJlYWNoYWJsZScpXG59IGVsc2UgaWYgKHRydWUpIHtcbiAgY29uc29sZS5pbmZvKCdyZWFjaGFibGUnKVxufSBlbHNlIHtcbiAgY29uc29sZS5pbmZvKCd1bnJlYWNoYWJsZScpXG59XG5cbmZ1bmN0aW9uIGJyYW5jaCAoYSkge1xuICBpZiAoYSkge1xuICAgIGNvbnNvbGUuaW5mbygnYSA9IHRydWUnKVxuICB9IGVsc2UgaWYgKHVuZGVmaW5lZCkge1xuICAgIGNvbnNvbGUuaW5mbygndW5yZWFjaGFibGUnKVxuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUuaW5mbygnYSA9IGZhbHNlJylcbiAgfVxufVxuXG5icmFuY2godHJ1ZSlcbmJyYW5jaChmYWxzZSlcbiJdfQ==                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/source-map/inline-base64-type-error.js                                    0000664 0000000 0000000 00000010341 14746647661 0024463 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        var cov_263bu3eqm8=function(){var path=                                             "./branches.js";var hash="424788076537d051b5bf0e2564aef393124eabc7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:                                             "./branches.js",statementMap:{"0":{start:{line:1,column:0},end:{line:7,column:1}},"1":{start:{line:2,column:2},end:{line:2,column:29}},"2":{start:{line:3,column:7},end:{line:7,column:1}},"3":{start:{line:4,column:2},end:{line:4,column:27}},"4":{start:{line:6,column:2},end:{line:6,column:29}},"5":{start:{line:10,column:2},end:{line:16,column:3}},"6":{start:{line:11,column:4},end:{line:11,column:28}},"7":{start:{line:12,column:9},end:{line:16,column:3}},"8":{start:{line:13,column:4},end:{line:13,column:31}},"9":{start:{line:15,column:4},end:{line:15,column:29}},"10":{start:{line:19,column:0},end:{line:19,column:12}},"11":{start:{line:20,column:0},end:{line:20,column:13}}},fnMap:{"0":{name:"branch",decl:{start:{line:9,column:9},end:{line:9,column:15}},loc:{start:{line:9,column:20},end:{line:17,column:1}},line:9}},branchMap:{"0":{loc:{start:{line:1,column:0},end:{line:7,column:1}},type:"if",locations:[{start:{line:1,column:0},end:{line:7,column:1}},{start:{line:1,column:0},end:{line:7,column:1}}],line:1},"1":{loc:{start:{line:3,column:7},end:{line:7,column:1}},type:"if",locations:[{start:{line:3,column:7},end:{line:7,column:1}},{start:{line:3,column:7},end:{line:7,column:1}}],line:3},"2":{loc:{start:{line:10,column:2},end:{line:16,column:3}},type:"if",locations:[{start:{line:10,column:2},end:{line:16,column:3}},{start:{line:10,column:2},end:{line:16,column:3}}],line:10},"3":{loc:{start:{line:12,column:9},end:{line:16,column:3}},type:"if",locations:[{start:{line:12,column:9},end:{line:16,column:3}},{start:{line:12,column:9},end:{line:16,column:3}}],line:12}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"424788076537d051b5bf0e2564aef393124eabc7"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_263bu3eqm8.s[0]++;if(false){cov_263bu3eqm8.b[0][0]++;cov_263bu3eqm8.s[1]++;console.info('unreachable');}else{cov_263bu3eqm8.b[0][1]++;cov_263bu3eqm8.s[2]++;if(true){cov_263bu3eqm8.b[1][0]++;cov_263bu3eqm8.s[3]++;console.info('reachable');}else{cov_263bu3eqm8.b[1][1]++;cov_263bu3eqm8.s[4]++;console.info('unreachable');}}function branch(a){cov_263bu3eqm8.f[0]++;cov_263bu3eqm8.s[5]++;if(a){cov_263bu3eqm8.b[2][0]++;cov_263bu3eqm8.s[6]++;console.info('a = true');}else{cov_263bu3eqm8.b[2][1]++;cov_263bu3eqm8.s[7]++;if(undefined){cov_263bu3eqm8.b[3][0]++;cov_263bu3eqm8.s[8]++;console.info('unreachable');}else{cov_263bu3eqm8.b[3][1]++;cov_263bu3eqm8.s[9]++;console.info('a = false');}}}cov_263bu3eqm8.s[10]++;branch(true);cov_263bu3eqm8.s[11]++;branch(false);
//# sourceMappingURL=data:application/text;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vYnJhbmNoZXMuanMiXSwibmFtZXMiOlsiY29uc29sZSIsImluZm8iLCJicmFuY2giLCJhIiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoic3VFQUFBLEdBQUksS0FBSixDQUFXLGdEQUNUQSxPQUFPLENBQUNDLElBQVIsQ0FBYSxhQUFiLEVBQ0QsQ0FGRCxJQUVPLG1EQUFJLElBQUosQ0FBVSxnREFDZkQsT0FBTyxDQUFDQyxJQUFSLENBQWEsV0FBYixFQUNELENBRk0sSUFFQSxnREFDTEQsT0FBTyxDQUFDQyxJQUFSLENBQWEsYUFBYixFQUNELEVBRUQsUUFBU0MsQ0FBQUEsTUFBVCxDQUFpQkMsQ0FBakIsQ0FBb0IsNkNBQ2xCLEdBQUlBLENBQUosQ0FBTyxnREFDTEgsT0FBTyxDQUFDQyxJQUFSLENBQWEsVUFBYixFQUNELENBRkQsSUFFTyxtREFBSUcsU0FBSixDQUFlLGdEQUNwQkosT0FBTyxDQUFDQyxJQUFSLENBQWEsYUFBYixFQUNELENBRk0sSUFFQSxnREFDTEQsT0FBTyxDQUFDQyxJQUFSLENBQWEsV0FBYixFQUNELEVBQ0YsQyx1QkFFREMsTUFBTSxDQUFDLElBQUQsQ0FBTixDLHVCQUNBQSxNQUFNLENBQUMsS0FBRCxDQUFOIiwic291cmNlc0NvbnRlbnQiOlsiaWYgKGZhbHNlKSB7XG4gIGNvbnNvbGUuaW5mbygndW5yZWFjaGFibGUnKVxufSBlbHNlIGlmICh0cnVlKSB7XG4gIGNvbnNvbGUuaW5mbygncmVhY2hhYmxlJylcbn0gZWxzZSB7XG4gIGNvbnNvbGUuaW5mbygndW5yZWFjaGFibGUnKVxufVxuXG5mdW5jdGlvbiBicmFuY2ggKGEpIHtcbiAgaWYgKGEpIHtcbiAgICBjb25zb2xlLmluZm8oJ2EgPSB0cnVlJylcbiAgfSBlbHNlIGlmICh1bmRlZmluZWQpIHtcbiAgICBjb25zb2xlLmluZm8oJ3VucmVhY2hhYmxlJylcbiAgfSBlbHNlIHtcbiAgICBjb25zb2xlLmluZm8oJ2EgPSBmYWxzZScpXG4gIH1cbn1cblxuYnJhbmNoKHRydWUpXG5icmFuY2goZmFsc2UpXG4iXX0=
                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/source-map/inline-base64.js                                               0000664 0000000 0000000 00000010341 14746647661 0022355 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        var cov_263bu3eqm8=function(){var path=                                             "./branches.js";var hash="424788076537d051b5bf0e2564aef393124eabc7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:                                             "./branches.js",statementMap:{"0":{start:{line:1,column:0},end:{line:7,column:1}},"1":{start:{line:2,column:2},end:{line:2,column:29}},"2":{start:{line:3,column:7},end:{line:7,column:1}},"3":{start:{line:4,column:2},end:{line:4,column:27}},"4":{start:{line:6,column:2},end:{line:6,column:29}},"5":{start:{line:10,column:2},end:{line:16,column:3}},"6":{start:{line:11,column:4},end:{line:11,column:28}},"7":{start:{line:12,column:9},end:{line:16,column:3}},"8":{start:{line:13,column:4},end:{line:13,column:31}},"9":{start:{line:15,column:4},end:{line:15,column:29}},"10":{start:{line:19,column:0},end:{line:19,column:12}},"11":{start:{line:20,column:0},end:{line:20,column:13}}},fnMap:{"0":{name:"branch",decl:{start:{line:9,column:9},end:{line:9,column:15}},loc:{start:{line:9,column:20},end:{line:17,column:1}},line:9}},branchMap:{"0":{loc:{start:{line:1,column:0},end:{line:7,column:1}},type:"if",locations:[{start:{line:1,column:0},end:{line:7,column:1}},{start:{line:1,column:0},end:{line:7,column:1}}],line:1},"1":{loc:{start:{line:3,column:7},end:{line:7,column:1}},type:"if",locations:[{start:{line:3,column:7},end:{line:7,column:1}},{start:{line:3,column:7},end:{line:7,column:1}}],line:3},"2":{loc:{start:{line:10,column:2},end:{line:16,column:3}},type:"if",locations:[{start:{line:10,column:2},end:{line:16,column:3}},{start:{line:10,column:2},end:{line:16,column:3}}],line:10},"3":{loc:{start:{line:12,column:9},end:{line:16,column:3}},type:"if",locations:[{start:{line:12,column:9},end:{line:16,column:3}},{start:{line:12,column:9},end:{line:16,column:3}}],line:12}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"424788076537d051b5bf0e2564aef393124eabc7"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_263bu3eqm8.s[0]++;if(false){cov_263bu3eqm8.b[0][0]++;cov_263bu3eqm8.s[1]++;console.info('unreachable');}else{cov_263bu3eqm8.b[0][1]++;cov_263bu3eqm8.s[2]++;if(true){cov_263bu3eqm8.b[1][0]++;cov_263bu3eqm8.s[3]++;console.info('reachable');}else{cov_263bu3eqm8.b[1][1]++;cov_263bu3eqm8.s[4]++;console.info('unreachable');}}function branch(a){cov_263bu3eqm8.f[0]++;cov_263bu3eqm8.s[5]++;if(a){cov_263bu3eqm8.b[2][0]++;cov_263bu3eqm8.s[6]++;console.info('a = true');}else{cov_263bu3eqm8.b[2][1]++;cov_263bu3eqm8.s[7]++;if(undefined){cov_263bu3eqm8.b[3][0]++;cov_263bu3eqm8.s[8]++;console.info('unreachable');}else{cov_263bu3eqm8.b[3][1]++;cov_263bu3eqm8.s[9]++;console.info('a = false');}}}cov_263bu3eqm8.s[10]++;branch(true);cov_263bu3eqm8.s[11]++;branch(false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vYnJhbmNoZXMuanMiXSwibmFtZXMiOlsiY29uc29sZSIsImluZm8iLCJicmFuY2giLCJhIiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoic3VFQUFBLEdBQUksS0FBSixDQUFXLGdEQUNUQSxPQUFPLENBQUNDLElBQVIsQ0FBYSxhQUFiLEVBQ0QsQ0FGRCxJQUVPLG1EQUFJLElBQUosQ0FBVSxnREFDZkQsT0FBTyxDQUFDQyxJQUFSLENBQWEsV0FBYixFQUNELENBRk0sSUFFQSxnREFDTEQsT0FBTyxDQUFDQyxJQUFSLENBQWEsYUFBYixFQUNELEVBRUQsUUFBU0MsQ0FBQUEsTUFBVCxDQUFpQkMsQ0FBakIsQ0FBb0IsNkNBQ2xCLEdBQUlBLENBQUosQ0FBTyxnREFDTEgsT0FBTyxDQUFDQyxJQUFSLENBQWEsVUFBYixFQUNELENBRkQsSUFFTyxtREFBSUcsU0FBSixDQUFlLGdEQUNwQkosT0FBTyxDQUFDQyxJQUFSLENBQWEsYUFBYixFQUNELENBRk0sSUFFQSxnREFDTEQsT0FBTyxDQUFDQyxJQUFSLENBQWEsV0FBYixFQUNELEVBQ0YsQyx1QkFFREMsTUFBTSxDQUFDLElBQUQsQ0FBTixDLHVCQUNBQSxNQUFNLENBQUMsS0FBRCxDQUFOIiwic291cmNlc0NvbnRlbnQiOlsiaWYgKGZhbHNlKSB7XG4gIGNvbnNvbGUuaW5mbygndW5yZWFjaGFibGUnKVxufSBlbHNlIGlmICh0cnVlKSB7XG4gIGNvbnNvbGUuaW5mbygncmVhY2hhYmxlJylcbn0gZWxzZSB7XG4gIGNvbnNvbGUuaW5mbygndW5yZWFjaGFibGUnKVxufVxuXG5mdW5jdGlvbiBicmFuY2ggKGEpIHtcbiAgaWYgKGEpIHtcbiAgICBjb25zb2xlLmluZm8oJ2EgPSB0cnVlJylcbiAgfSBlbHNlIGlmICh1bmRlZmluZWQpIHtcbiAgICBjb25zb2xlLmluZm8oJ3VucmVhY2hhYmxlJylcbiAgfSBlbHNlIHtcbiAgICBjb25zb2xlLmluZm8oJ2EgPSBmYWxzZScpXG4gIH1cbn1cblxuYnJhbmNoKHRydWUpXG5icmFuY2goZmFsc2UpXG4iXX0=
                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/source-map/istanbul-throw-original.js                                     0000664 0000000 0000000 00000000177 14746647661 0024607 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        /*
 * comments dropped by uglify.
 */
function Hello() {
  throw Error('goodbye');
}

setImmediate(function() {
  Hello();
});
                                                                                                                                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/source-map/istanbul-throw.js                                              0000664 0000000 0000000 00000003637 14746647661 0023011 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        var cov_ono70fls3=function(){var path="/Users/bencoe/oss/source-map-testing/istanbul-throw-original.js";var hash="4302fcea4eb0ea4d9af6e63a478f214aa61f9dd8";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/bencoe/oss/source-map-testing/istanbul-throw-original.js",statementMap:{"0":{start:{line:5,column:2},end:{line:5,column:25}},"1":{start:{line:8,column:0},end:{line:10,column:3}},"2":{start:{line:9,column:2},end:{line:9,column:10}}},fnMap:{"0":{name:"Hello",decl:{start:{line:4,column:9},end:{line:4,column:14}},loc:{start:{line:4,column:17},end:{line:6,column:1}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:8,column:13},end:{line:8,column:14}},loc:{start:{line:8,column:24},end:{line:10,column:1}},line:8}},branchMap:{},s:{"0":0,"1":0,"2":0},f:{"0":0,"1":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"4302fcea4eb0ea4d9af6e63a478f214aa61f9dd8"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/*
 * comments dropped by uglify.
 */function Hello(){cov_ono70fls3.f[0]++;cov_ono70fls3.s[0]++;throw Error('goodbye');}cov_ono70fls3.s[1]++;setImmediate(function(){cov_ono70fls3.f[1]++;cov_ono70fls3.s[2]++;Hello();});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iZW5jb2Uvb3NzL3NvdXJjZS1tYXAtdGVzdGluZy9pc3RhbmJ1bC10aHJvdy1vcmlnaW5hbC5qcyJdLCJuYW1lcyI6WyJIZWxsbyIsIkVycm9yIiwic2V0SW1tZWRpYXRlIl0sIm1hcHBpbmdzIjoiMmpDQUFBOztHQUdBLFFBQVNBLENBQUFBLEtBQVQsRUFBaUIsMkNBQ2YsS0FBTUMsQ0FBQUEsS0FBSyxDQUFDLFNBQUQsQ0FBWCxDQUNELEMscUJBRURDLFlBQVksQ0FBQyxVQUFXLDJDQUN0QkYsS0FBSyxHQUNOLENBRlcsQ0FBWiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBjb21tZW50cyBkcm9wcGVkIGJ5IHVnbGlmeS5cbiAqL1xuZnVuY3Rpb24gSGVsbG8oKSB7XG4gIHRocm93IEVycm9yKCdnb29kYnllJyk7XG59XG5cbnNldEltbWVkaWF0ZShmdW5jdGlvbigpIHtcbiAgSGVsbG8oKTtcbn0pO1xuXG4iXX0=
                                                                                                 node-23.7.0/test/fixtures/source-map/no-source.js                                                   0000664 0000000 0000000 00000000404 14746647661 0021726 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function Throw() {
    throw new Error('foo');
}
Throw();
// To recreate:
//
// npx tsc --outDir test/fixtures/source-map --sourceMap test/fixtures/source-map/no-source.ts
// rename the "source.[0]" to "file-not-exists.ts"
//# sourceMappingURL=no-source.js.map                                                                                                                                                                                                                                                            node-23.7.0/test/fixtures/source-map/no-source.js.map                                               0000664 0000000 0000000 00000000357 14746647661 0022511 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {"version":3,"file":"no-source.js","sourceRoot":"","sources":["file-not-exists.ts"],"names":[],"mappings":"AAAA,SAAS,KAAK;IACZ,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;AACzB,CAAC;AAED,KAAK,EAAE,CAAC;AAER,eAAe;AACf,EAAE;AACF,8FAA8F;AAC9F,kDAAkD"}                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/source-map/no-source.ts                                                   0000664 0000000 0000000 00000000337 14746647661 0021745 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function Throw() {
  throw new Error('foo');
}

Throw();

// To recreate:
//
// npx tsc --outDir test/fixtures/source-map --sourceMap test/fixtures/source-map/no-source.ts
// rename the "source.[0]" to "file-not-exists.ts"
                                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/source-map/no-throw.js                                                    0000664 0000000 0000000 00000005016 14746647661 0021575 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        var Foo = /** @class */ (function () {
    function Foo(x) {
        if (x === void 0) { x = 33; }
        this.x = x ? x : 99;
        if (this.x) {
            this.methodA();
        }
        else {
            this.methodB();
        }
        this.methodC();
    }
    Foo.prototype.methodA = function () {
    };
    Foo.prototype.methodB = function () {
    };
    Foo.prototype.methodC = function () {
    };
    Foo.prototype.methodD = function () {
    };
    return Foo;
}());
var a = new Foo(0);
var b = new Foo(33);
a.methodD();
module.exports = {
    a: a,
    b: b,
    Foo: Foo,
};
// To recreate:
//
// npx tsc --outDir test/fixtures/source-map --sourceMap --inlineSources test/fixtures/source-map/no-throw.ts
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm8tdGhyb3cuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuby10aHJvdy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUVFLGFBQWEsQ0FBTTtRQUFOLGtCQUFBLEVBQUEsTUFBTTtRQUNqQixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUE7UUFDbkIsSUFBSSxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFDWCxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUE7UUFDaEIsQ0FBQzthQUFNLENBQUM7WUFDTixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUE7UUFDaEIsQ0FBQztRQUNELElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQTtJQUNoQixDQUFDO0lBQ0QscUJBQU8sR0FBUDtJQUVBLENBQUM7SUFDRCxxQkFBTyxHQUFQO0lBRUEsQ0FBQztJQUNELHFCQUFPLEdBQVA7SUFFQSxDQUFDO0lBQ0QscUJBQU8sR0FBUDtJQUVBLENBQUM7SUFDSCxVQUFDO0FBQUQsQ0FBQyxBQXZCRCxJQXVCQztBQUVELElBQU0sQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ3BCLElBQU0sQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFBO0FBQ3JCLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQTtBQU1YLE1BQU0sQ0FBQyxPQUFPLEdBQUc7SUFDZixDQUFDLEdBQUE7SUFDRCxDQUFDLEdBQUE7SUFDRCxHQUFHLEtBQUE7Q0FDSixDQUFBO0FBRUQsZUFBZTtBQUNmLEVBQUU7QUFDRiw2R0FBNkciLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBGb28ge1xuICB4O1xuICBjb25zdHJ1Y3RvciAoeCA9IDMzKSB7XG4gICAgdGhpcy54ID0geCA/IHggOiA5OVxuICAgIGlmICh0aGlzLngpIHtcbiAgICAgIHRoaXMubWV0aG9kQSgpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubWV0aG9kQigpXG4gICAgfVxuICAgIHRoaXMubWV0aG9kQygpXG4gIH1cbiAgbWV0aG9kQSAoKSB7XG5cbiAgfVxuICBtZXRob2RCICgpIHtcblxuICB9XG4gIG1ldGhvZEMgKCkge1xuXG4gIH1cbiAgbWV0aG9kRCAoKSB7XG5cbiAgfVxufVxuXG5jb25zdCBhID0gbmV3IEZvbygwKVxuY29uc3QgYiA9IG5ldyBGb28oMzMpXG5hLm1ldGhvZEQoKVxuXG5kZWNsYXJlIGNvbnN0IG1vZHVsZToge1xuICBleHBvcnRzOiBhbnlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGEsXG4gIGIsXG4gIEZvbyxcbn1cblxuLy8gVG8gcmVjcmVhdGU6XG4vL1xuLy8gbnB4IHRzYyAtLW91dERpciB0ZXN0L2ZpeHR1cmVzL3NvdXJjZS1tYXAgLS1zb3VyY2VNYXAgLS1pbmxpbmVTb3VyY2VzIHRlc3QvZml4dHVyZXMvc291cmNlLW1hcC9uby10aHJvdy50c1xuIl19                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/source-map/no-throw.ts                                                    0000664 0000000 0000000 00000001013 14746647661 0021600 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        class Foo {
  x;
  constructor (x = 33) {
    this.x = x ? x : 99
    if (this.x) {
      this.methodA()
    } else {
      this.methodB()
    }
    this.methodC()
  }
  methodA () {

  }
  methodB () {

  }
  methodC () {

  }
  methodD () {

  }
}

const a = new Foo(0)
const b = new Foo(33)
a.methodD()

declare const module: {
  exports: any
}

module.exports = {
  a,
  b,
  Foo,
}

// To recreate:
//
// npx tsc --outDir test/fixtures/source-map --inlineSourceMap --inlineSources test/fixtures/source-map/no-throw.ts
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/source-map/no-throw2.js                                                   0000664 0000000 0000000 00000005137 14746647661 0021663 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        var Foo = /** @class */ (function () {
    function Foo(x) {
        if (x === void 0) { x = 33; }
        this.x = x ? x : 99;
        if (this.x) {
            this.methodA();
        }
        else {
            this.methodB();
        }
        this.methodC();
    }
    Foo.prototype.methodA = function () {
    };
    Foo.prototype.methodB = function () {
    };
    Foo.prototype.methodC = function () {
    };
    Foo.prototype.methodD = function () {
    };
    return Foo;
}());
var a = new Foo(0);
var b = new Foo(33);
a.methodD();
module.exports = {
    a: a,
    b: b,
    Foo: Foo,
};
// To recreate:
//
// npx tsc --outDir test/fixtures/source-map --sourceMap --inlineSources test/fixtures/source-map/no-throw.ts
// cp test/fixtures/source-map/no-throw.ts test/fixtures/source-map/no-throw2.ts
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm8tdGhyb3cuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuby10aHJvdy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUVFLGFBQWEsQ0FBTTtRQUFOLGtCQUFBLEVBQUEsTUFBTTtRQUNqQixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUE7UUFDbkIsSUFBSSxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFDWCxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUE7UUFDaEIsQ0FBQzthQUFNLENBQUM7WUFDTixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUE7UUFDaEIsQ0FBQztRQUNELElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQTtJQUNoQixDQUFDO0lBQ0QscUJBQU8sR0FBUDtJQUVBLENBQUM7SUFDRCxxQkFBTyxHQUFQO0lBRUEsQ0FBQztJQUNELHFCQUFPLEdBQVA7SUFFQSxDQUFDO0lBQ0QscUJBQU8sR0FBUDtJQUVBLENBQUM7SUFDSCxVQUFDO0FBQUQsQ0FBQyxBQXZCRCxJQXVCQztBQUVELElBQU0sQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ3BCLElBQU0sQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFBO0FBQ3JCLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQTtBQU1YLE1BQU0sQ0FBQyxPQUFPLEdBQUc7SUFDZixDQUFDLEdBQUE7SUFDRCxDQUFDLEdBQUE7SUFDRCxHQUFHLEtBQUE7Q0FDSixDQUFBO0FBRUQsZUFBZTtBQUNmLEVBQUU7QUFDRiw2R0FBNkciLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBGb28ge1xuICB4O1xuICBjb25zdHJ1Y3RvciAoeCA9IDMzKSB7XG4gICAgdGhpcy54ID0geCA/IHggOiA5OVxuICAgIGlmICh0aGlzLngpIHtcbiAgICAgIHRoaXMubWV0aG9kQSgpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubWV0aG9kQigpXG4gICAgfVxuICAgIHRoaXMubWV0aG9kQygpXG4gIH1cbiAgbWV0aG9kQSAoKSB7XG5cbiAgfVxuICBtZXRob2RCICgpIHtcblxuICB9XG4gIG1ldGhvZEMgKCkge1xuXG4gIH1cbiAgbWV0aG9kRCAoKSB7XG5cbiAgfVxufVxuXG5jb25zdCBhID0gbmV3IEZvbygwKVxuY29uc3QgYiA9IG5ldyBGb28oMzMpXG5hLm1ldGhvZEQoKVxuXG5kZWNsYXJlIGNvbnN0IG1vZHVsZToge1xuICBleHBvcnRzOiBhbnlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGEsXG4gIGIsXG4gIEZvbyxcbn1cblxuLy8gVG8gcmVjcmVhdGU6XG4vL1xuLy8gbnB4IHRzYyAtLW91dERpciB0ZXN0L2ZpeHR1cmVzL3NvdXJjZS1tYXAgLS1zb3VyY2VNYXAgLS1pbmxpbmVTb3VyY2VzIHRlc3QvZml4dHVyZXMvc291cmNlLW1hcC9uby10aHJvdy50c1xuIl19                                                                                                                                                                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/source-map/node_modules/                                                  0000775 0000000 0000000 00000000000 14746647661 0022135 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/source-map/node_modules/error-stack/                                      0000775 0000000 0000000 00000000000 14746647661 0024371 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/source-map/node_modules/error-stack/enclosing-call-site-min.js            0000664 0000000 0000000 00000000427 14746647661 0031347 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        var functionA=function(){functionB()};function functionB(){functionC()}var functionC=function(){functionD()},functionD=function(){if(0<Math.random())throw Error("an error!");},thrower=functionA;try{functionA()}catch(a){throw a;};
//# sourceMappingURL=enclosing-call-site.js.map

                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/source-map/node_modules/error-stack/enclosing-call-site.js                0000664 0000000 0000000 00000000516 14746647661 0030565 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const functionA = () => {
  functionB()
}

function functionB() {
  functionC()
}

const functionC = () => {
  functionD()
}

const functionD = () => {
  (function functionE () {
    if (Math.random() > 0) {
      throw new Error('an error!')
    }
  })()
}

const thrower = functionA

try {
  thrower()
} catch (err) {
  throw err
}
                                                                                                                                                                                  node-23.7.0/test/fixtures/source-map/node_modules/error-stack/enclosing-call-site.js.map            0000664 0000000 0000000 00000001045 14746647661 0031337 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
"version":3,
"file":"enclosing-call-site-min.js",
"lineCount":1,
"mappings":"AAAA,IAAMA,UAAYA,QAAA,EAAM,CACtBC,SAAA,EADsB,CAIxBA,SAASA,UAAS,EAAG,CACnBC,SAAA,EADmB,CAIrB,IAAMA,UAAYA,QAAA,EAAM,CACtBC,SAAA,EADsB,CAAxB,CAIMA,UAAYA,QAAA,EAAM,CAEpB,GAAoB,CAApB,CAAIC,IAAA,CAAKC,MAAL,EAAJ,CACE,KAAUC,MAAJ,CAAU,WAAV,CAAN,CAHkB,CAJxB,CAYMC,QAAUP,SAEhB,IAAI,CACFO,SAAA,EADE,CAEF,MAAOC,CAAP,CAAY,CACZ,KAAMA,EAAN,CADY;",
"sources":["enclosing-call-site.js"],
"names":["functionA","functionB","functionC","functionD","Math","random","Error","thrower","err"]
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/source-map/output/                                                        0000775 0000000 0000000 00000000000 14746647661 0021020 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/source-map/output/source_map_disabled_by_api.js                           0000664 0000000 0000000 00000002167 14746647661 0026673 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --enable-source-maps

'use strict';
require('../../../common');
const assert = require('node:assert');
const Module = require('node:module');
Error.stackTraceLimit = 5;

assert.deepStrictEqual(Module.getSourceMapsSupport(), {
  __proto__: null,
  enabled: true,
  nodeModules: true,
  generatedCode: true,
});
Module.setSourceMapsSupport(false);
assert.deepStrictEqual(Module.getSourceMapsSupport(), {
  __proto__: null,
  enabled: false,
  nodeModules: false,
  generatedCode: false,
});
assert.strictEqual(process.sourceMapsEnabled, false);

try {
  require('../enclosing-call-site-min.js');
} catch (e) {
  console.log(e);
}

// Delete the CJS module cache and loading the module again with source maps
// support enabled programmatically.
delete require.cache[require
  .resolve('../enclosing-call-site-min.js')];
Module.setSourceMapsSupport(true);
assert.deepStrictEqual(Module.getSourceMapsSupport(), {
  __proto__: null,
  enabled: true,
  nodeModules: false,
  generatedCode: false,
});
assert.strictEqual(process.sourceMapsEnabled, true);

try {
  require('../enclosing-call-site-min.js');
} catch (e) {
  console.log(e);
}
                                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/source-map/output/source_map_disabled_by_api.snapshot                     0000664 0000000 0000000 00000001051 14746647661 0030105 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        Error: an error!
    at functionD (*enclosing-call-site-min.js:1:156)
    at functionC (*enclosing-call-site-min.js:1:97)
    at functionB (*enclosing-call-site-min.js:1:60)
    at functionA (*enclosing-call-site-min.js:1:26)
    at Object.<anonymous> (*enclosing-call-site-min.js:1:199)
Error: an error!
    at functionD (*enclosing-call-site.js:16:17)
    at functionC (*enclosing-call-site.js:10:3)
    at functionB (*enclosing-call-site.js:6:3)
    at functionA (*enclosing-call-site.js:2:3)
    at Object.<anonymous> (*enclosing-call-site.js:24:3)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/source-map/output/source_map_disabled_by_process_api.js                   0000664 0000000 0000000 00000002040 14746647661 0030417 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --enable-source-maps

'use strict';
require('../../../common');
const assert = require('node:assert');
const Module = require('node:module');
Error.stackTraceLimit = 5;

assert.strictEqual(process.sourceMapsEnabled, true);
process.setSourceMapsEnabled(false);
assert.strictEqual(process.sourceMapsEnabled, false);
assert.deepStrictEqual(Module.getSourceMapsSupport(), {
  __proto__: null,
  enabled: false,
  nodeModules: false,
  generatedCode: false,
});

try {
  require('../enclosing-call-site-min.js');
} catch (e) {
  console.log(e);
}

// Delete the CJS module cache and loading the module again with source maps
// support enabled programmatically.
delete require.cache[require
  .resolve('../enclosing-call-site-min.js')];
process.setSourceMapsEnabled(true);
assert.strictEqual(process.sourceMapsEnabled, true);
assert.deepStrictEqual(Module.getSourceMapsSupport(), {
  __proto__: null,
  enabled: true,
  nodeModules: true,
  generatedCode: true,
});

try {
  require('../enclosing-call-site-min.js');
} catch (e) {
  console.log(e);
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/source-map/output/source_map_disabled_by_process_api.snapshot             0000664 0000000 0000000 00000001051 14746647661 0031643 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        Error: an error!
    at functionD (*enclosing-call-site-min.js:1:156)
    at functionC (*enclosing-call-site-min.js:1:97)
    at functionB (*enclosing-call-site-min.js:1:60)
    at functionA (*enclosing-call-site-min.js:1:26)
    at Object.<anonymous> (*enclosing-call-site-min.js:1:199)
Error: an error!
    at functionD (*enclosing-call-site.js:16:17)
    at functionC (*enclosing-call-site.js:10:3)
    at functionB (*enclosing-call-site.js:6:3)
    at functionA (*enclosing-call-site.js:2:3)
    at Object.<anonymous> (*enclosing-call-site.js:24:3)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/source-map/output/source_map_enabled_by_api.js                            0000664 0000000 0000000 00000001751 14746647661 0026514 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const assert = require('node:assert');
const Module = require('node:module');
Error.stackTraceLimit = 5;

assert.deepStrictEqual(Module.getSourceMapsSupport(), {
  __proto__: null,
  enabled: false,
  nodeModules: false,
  generatedCode: false,
});
Module.setSourceMapsSupport(true);
assert.deepStrictEqual(Module.getSourceMapsSupport(), {
  __proto__: null,
  enabled: true,
  nodeModules: false,
  generatedCode: false,
});
assert.strictEqual(process.sourceMapsEnabled, true);

try {
  require('../enclosing-call-site-min.js');
} catch (e) {
  console.log(e);
}

delete require.cache[require
  .resolve('../enclosing-call-site-min.js')];

Module.setSourceMapsSupport(false);
assert.deepStrictEqual(Module.getSourceMapsSupport(), {
  __proto__: null,
  enabled: false,
  nodeModules: false,
  generatedCode: false,
});
assert.strictEqual(process.sourceMapsEnabled, false);

try {
  require('../enclosing-call-site-min.js');
} catch (e) {
  console.log(e);
}
                       node-23.7.0/test/fixtures/source-map/output/source_map_enabled_by_api.snapshot                      0000664 0000000 0000000 00000001051 14746647661 0027730 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        Error: an error!
    at functionD (*enclosing-call-site.js:16:17)
    at functionC (*enclosing-call-site.js:10:3)
    at functionB (*enclosing-call-site.js:6:3)
    at functionA (*enclosing-call-site.js:2:3)
    at Object.<anonymous> (*enclosing-call-site.js:24:3)
Error: an error!
    at functionD (*enclosing-call-site-min.js:1:156)
    at functionC (*enclosing-call-site-min.js:1:97)
    at functionB (*enclosing-call-site-min.js:1:60)
    at functionA (*enclosing-call-site-min.js:1:26)
    at Object.<anonymous> (*enclosing-call-site-min.js:1:199)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/source-map/output/source_map_enabled_by_api_node_modules.js               0000664 0000000 0000000 00000002212 14746647661 0031242 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const assert = require('node:assert');
const Module = require('node:module');
Error.stackTraceLimit = 5;

assert.deepStrictEqual(Module.getSourceMapsSupport(), {
  __proto__: null,
  enabled: false,
  nodeModules: false,
  generatedCode: false,
});
Module.setSourceMapsSupport(true, {
  nodeModules: true,
});
assert.deepStrictEqual(Module.getSourceMapsSupport(), {
  __proto__: null,
  enabled: true,
  nodeModules: true,
  generatedCode: false,
});
assert.strictEqual(process.sourceMapsEnabled, true);

try {
  require('../node_modules/error-stack/enclosing-call-site-min.js').simpleErrorStack();
} catch (e) {
  console.log(e);
}

delete require.cache[require
  .resolve('../node_modules/error-stack/enclosing-call-site-min.js')];

Module.setSourceMapsSupport(true, {
  nodeModules: false,
});
assert.deepStrictEqual(Module.getSourceMapsSupport(), {
  __proto__: null,
  enabled: true,
  nodeModules: false,
  generatedCode: false,
});
assert.strictEqual(process.sourceMapsEnabled, true);

try {
  require('../node_modules/error-stack/enclosing-call-site-min.js').simpleErrorStack();
} catch (e) {
  console.log(e);
}                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/source-map/output/source_map_enabled_by_api_node_modules.snapshot         0000664 0000000 0000000 00000001443 14746647661 0032472 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        Error: an error!
    at functionD (*node_modules*error-stack*enclosing-call-site.js:16:17)
    at functionC (*node_modules*error-stack*enclosing-call-site.js:10:3)
    at functionB (*node_modules*error-stack*enclosing-call-site.js:6:3)
    at functionA (*node_modules*error-stack*enclosing-call-site.js:2:3)
    at Object.<anonymous> (*node_modules*error-stack*enclosing-call-site.js:24:3)
Error: an error!
    at functionD (*node_modules*error-stack*enclosing-call-site-min.js:1:156)
    at functionC (*node_modules*error-stack*enclosing-call-site-min.js:1:97)
    at functionB (*node_modules*error-stack*enclosing-call-site-min.js:1:60)
    at functionA (*node_modules*error-stack*enclosing-call-site-min.js:1:26)
    at Object.<anonymous> (*node_modules*error-stack*enclosing-call-site-min.js:1:199)
                                                                                                                                                                                                                             node-23.7.0/test/fixtures/source-map/output/source_map_enabled_by_process_api.js                    0000664 0000000 0000000 00000001620 14746647661 0030245 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const assert = require('node:assert');
const Module = require('node:module');
Error.stackTraceLimit = 5;

assert.strictEqual(process.sourceMapsEnabled, false);
process.setSourceMapsEnabled(true);
assert.strictEqual(process.sourceMapsEnabled, true);
assert.deepStrictEqual(Module.getSourceMapsSupport(), {
  __proto__: null,
  enabled: true,
  nodeModules: true,
  generatedCode: true,
});

try {
  require('../enclosing-call-site-min.js');
} catch (e) {
  console.log(e);
}

delete require.cache[require
  .resolve('../enclosing-call-site-min.js')];

process.setSourceMapsEnabled(false);
assert.strictEqual(process.sourceMapsEnabled, false);
assert.deepStrictEqual(Module.getSourceMapsSupport(), {
  __proto__: null,
  enabled: false,
  nodeModules: false,
  generatedCode: false,
});

try {
  require('../enclosing-call-site-min.js');
} catch (e) {
  console.log(e);
}
                                                                                                                node-23.7.0/test/fixtures/source-map/output/source_map_enabled_by_process_api.snapshot              0000664 0000000 0000000 00000001051 14746647661 0031466 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        Error: an error!
    at functionD (*enclosing-call-site.js:16:17)
    at functionC (*enclosing-call-site.js:10:3)
    at functionB (*enclosing-call-site.js:6:3)
    at functionA (*enclosing-call-site.js:2:3)
    at Object.<anonymous> (*enclosing-call-site.js:24:3)
Error: an error!
    at functionD (*enclosing-call-site-min.js:1:156)
    at functionC (*enclosing-call-site-min.js:1:97)
    at functionB (*enclosing-call-site-min.js:1:60)
    at functionA (*enclosing-call-site-min.js:1:26)
    at Object.<anonymous> (*enclosing-call-site-min.js:1:199)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/source-map/output/source_map_enclosing_function.js                        0000664 0000000 0000000 00000000221 14746647661 0027454 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags:  --enable-source-maps

'use strict';
require('../../../common');
Error.stackTraceLimit = 5;

require('../enclosing-call-site-min.js');
                                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/source-map/output/source_map_enclosing_function.snapshot                  0000664 0000000 0000000 00000000501 14746647661 0030700 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        *enclosing-call-site.js:26
  throw err
  ^


Error: an error!
    at functionD (*enclosing-call-site.js:16:17)
    at functionC (*enclosing-call-site.js:10:3)
    at functionB (*enclosing-call-site.js:6:3)
    at functionA (*enclosing-call-site.js:2:3)
    at Object.<anonymous> (*enclosing-call-site.js:24:3)

Node.js *
                                                                                                                                                                                               node-23.7.0/test/fixtures/source-map/output/source_map_eval.js                                      0000664 0000000 0000000 00000000331 14746647661 0024517 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags:  --enable-source-maps

'use strict';
require('../../../common');
Error.stackTraceLimit = 3;

const fs = require('fs');

const content = fs.readFileSync(require.resolve('../tabs.js'), 'utf8');
eval(content);
                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/source-map/output/source_map_eval.snapshot                                0000664 0000000 0000000 00000000334 14746647661 0025745 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        *tabs.coffee:26
	alert "I knew it!"
	^


ReferenceError: alert is not defined
    at Object.eval (*tabs.coffee:26:2)
    at eval (*tabs.coffee:1:14)
    at Object.<anonymous> (*output*source_map_eval.js:10:1)

Node.js *
                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/source-map/output/source_map_no_source_file.js                            0000664 0000000 0000000 00000000203 14746647661 0026561 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags:  --enable-source-maps

'use strict';
require('../../../common');
Error.stackTraceLimit = 2;

require('../no-source.js');
                                                                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/source-map/output/source_map_no_source_file.snapshot                      0000664 0000000 0000000 00000000244 14746647661 0030011 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        *no-source.js:2
    throw new Error('foo');
    ^

Error: foo
    at Throw (*file-not-exists.ts:2:9)
    at Object.<anonymous> (*file-not-exists.ts:5:1)

Node.js *
                                                                                                                                                                                                                                                                                                                                                            node-23.7.0/test/fixtures/source-map/output/source_map_prepare_stack_trace.js                       0000664 0000000 0000000 00000001647 14746647661 0027604 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --enable-source-maps

'use strict';
require('../../../common');
const assert = require('node:assert');
const Module = require('node:module');
Error.stackTraceLimit = 5;

assert.strictEqual(typeof Error.prepareStackTrace, 'function');
const defaultPrepareStackTrace = Error.prepareStackTrace;
Error.prepareStackTrace = (error, trace) => {
  trace = trace.filter(it => {
    return it.getFunctionName() !== 'functionC';
  });
  return defaultPrepareStackTrace(error, trace);
};

try {
  require('../enclosing-call-site-min.js');
} catch (e) {
  console.log(e);
}

// Source maps support is disabled programmatically even without deleting the
// CJS module cache.
Module.setSourceMapsSupport(false);
assert.deepStrictEqual(Module.getSourceMapsSupport(), {
  __proto__: null,
  enabled: false,
  nodeModules: false,
  generatedCode: false,
});

try {
  require('../enclosing-call-site-min.js');
} catch (e) {
  console.log(e);
}
                                                                                         node-23.7.0/test/fixtures/source-map/output/source_map_prepare_stack_trace.snapshot                 0000664 0000000 0000000 00000000705 14746647661 0031021 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        Error: an error!
    at functionD (*enclosing-call-site.js:16:17)
    at functionB (*enclosing-call-site.js:6:3)
    at functionA (*enclosing-call-site.js:2:3)
    at Object.<anonymous> (*enclosing-call-site.js:24:3)
Error: an error!
    at functionD (*enclosing-call-site-min.js:1:156)
    at functionB (*enclosing-call-site-min.js:1:60)
    at functionA (*enclosing-call-site-min.js:1:26)
    at Object.<anonymous> (*enclosing-call-site-min.js:1:199)
                                                           node-23.7.0/test/fixtures/source-map/output/source_map_reference_error_tabs.js                      0000664 0000000 0000000 00000000176 14746647661 0027757 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags:  --enable-source-maps

'use strict';
require('../../../common');
Error.stackTraceLimit = 2;

require('../tabs.js');
                                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/source-map/output/source_map_reference_error_tabs.snapshot                0000664 0000000 0000000 00000000265 14746647661 0031201 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        *tabs.coffee:26
	alert "I knew it!"
	^


ReferenceError: alert is not defined
    at Object.<anonymous> (*tabs.coffee:26:2)
    at Object.<anonymous> (*tabs.coffee:1:14)

Node.js *
                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/source-map/output/source_map_sourcemapping_url_string.js                  0000664 0000000 0000000 00000000352 14746647661 0030717 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags:  --enable-source-maps

'use strict';
require('../../../common');
Error.stackTraceLimit = 2;

try {
  require('../typescript-sourcemapping_url_string');
} catch (err) {
  setTimeout(() => {
    console.info(err);
  }, 10);
}
                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/source-map/output/source_map_sourcemapping_url_string.snapshot            0000664 0000000 0000000 00000000143 14746647661 0032140 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        Error: an exception.
    at Object.<anonymous> (*typescript-sourcemapping_url_string.ts:3:7)
    *
                                                                                                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/source-map/output/source_map_throw_async_stack_trace.mjs                  0000664 0000000 0000000 00000000746 14746647661 0030662 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags:  --enable-source-maps
import '../../../common/index.mjs';
async function Throw() {
    await 0;
    throw new Error('message');
}
(async function main() {
    await Promise.all([0, 1, 2, Throw()]);
})();
// To recreate:
//
// npx --package typescript tsc --module nodenext --target esnext --outDir test/fixtures/source-map/output --sourceMap test/fixtures/source-map/output/source_map_throw_async_stack_trace.mts
//# sourceMappingURL=source_map_throw_async_stack_trace.mjs.map                          node-23.7.0/test/fixtures/source-map/output/source_map_throw_async_stack_trace.mjs.map              0000664 0000000 0000000 00000000710 14746647661 0031425 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {"version":3,"file":"source_map_throw_async_stack_trace.mjs","sourceRoot":"","sources":["source_map_throw_async_stack_trace.mts"],"names":[],"mappings":"AAAA,+BAA+B;AAE/B,OAAO,2BAA2B,CAAC;AAQnC,KAAK,UAAU,KAAK;IAClB,MAAM,CAAC,CAAC;IACR,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,CAAA;AAC5B,CAAC;AAED,CAAC,KAAK,UAAU,IAAI;IAClB,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,EAAE,CAAA;AAEJ,eAAe;AACf,EAAE;AACF,6LAA6L"}                                                        node-23.7.0/test/fixtures/source-map/output/source_map_throw_async_stack_trace.mts                  0000664 0000000 0000000 00000000725 14746647661 0030671 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags:  --enable-source-maps

import '../../../common/index.mjs';

interface Foo {
  /** line
   *
   * blocks */
}

async function Throw() {
  await 0;
  throw new Error('message')
}

(async function main() {
  await Promise.all([0, 1, 2, Throw()]);
})()

// To recreate:
//
// npx --package typescript tsc --module nodenext --target esnext --outDir test/fixtures/source-map/output --sourceMap test/fixtures/source-map/output/source_map_throw_async_stack_trace.mts
                                           node-23.7.0/test/fixtures/source-map/output/source_map_throw_async_stack_trace.snapshot             0000664 0000000 0000000 00000000443 14746647661 0031722 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        *output*source_map_throw_async_stack_trace.mts:13
  throw new Error('message')
        ^


Error: message
    at Throw (*output*source_map_throw_async_stack_trace.mts:13:9)
    at async Promise.all (index 3)
    at async main (*output*source_map_throw_async_stack_trace.mts:17:3)

Node.js *
                                                                                                                                                                                                                             node-23.7.0/test/fixtures/source-map/output/source_map_throw_catch.js                               0000664 0000000 0000000 00000000327 14746647661 0026102 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags:  --enable-source-maps

'use strict';
require('../../../common');
Error.stackTraceLimit = 2;

try {
  require('../typescript-throw');
} catch (err) {
  setTimeout(() => {
    console.info(err);
  }, 10);
}
                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/source-map/output/source_map_throw_catch.snapshot                         0000664 0000000 0000000 00000000177 14746647661 0027330 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        reachable
Error: an exception
    at branch (*typescript-throw.ts:18:11)
    at Object.<anonymous> (*typescript-throw.ts:24:1)
                                                                                                                                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/source-map/output/source_map_throw_construct.mjs                          0000664 0000000 0000000 00000000633 14746647661 0027221 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags:  --enable-source-maps
import '../../../common/index.mjs';
class Foo {
    constructor() {
        throw new Error('message');
    }
}
new Foo();
// To recreate:
//
// npx --package typescript tsc --module nodenext --target esnext --outDir test/fixtures/source-map/output --sourceMap test/fixtures/source-map/output/source_map_throw_construct.mts
//# sourceMappingURL=source_map_throw_construct.mjs.map                                                                                                     node-23.7.0/test/fixtures/source-map/output/source_map_throw_construct.mjs.map                      0000664 0000000 0000000 00000000463 14746647661 0027776 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {"version":3,"file":"source_map_throw_construct.mjs","sourceRoot":"","sources":["source_map_throw_construct.mts"],"names":[],"mappings":"AAAA,+BAA+B;AAE/B,OAAO,2BAA2B,CAAC;AAQnC,MAAM,GAAG;IACP;QACE,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;IAC7B,CAAC;CACF;AAED,IAAI,GAAG,EAAE,CAAC;AAEV,eAAe;AACf,EAAE;AACF,qLAAqL"}                                                                                                                                                                                                             node-23.7.0/test/fixtures/source-map/output/source_map_throw_construct.mts                          0000664 0000000 0000000 00000000624 14746647661 0027233 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags:  --enable-source-maps

import '../../../common/index.mjs';

interface Block {
  /** line
   *
   * blocks */
}

class Foo {
  constructor() {
    throw new Error('message');
  }
}

new Foo();

// To recreate:
//
// npx --package typescript tsc --module nodenext --target esnext --outDir test/fixtures/source-map/output --sourceMap test/fixtures/source-map/output/source_map_throw_construct.mts
                                                                                                            node-23.7.0/test/fixtures/source-map/output/source_map_throw_construct.snapshot                     0000664 0000000 0000000 00000000403 14746647661 0030262 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        *output*source_map_throw_construct.mts:13
    throw new Error('message');
          ^


Error: message
    at new Foo (*output*source_map_throw_construct.mts:13:11)
    at <anonymous> (*output*source_map_throw_construct.mts:17:1)
    *
    *
    *

Node.js *
                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/source-map/output/source_map_throw_first_tick.js                          0000664 0000000 0000000 00000000207 14746647661 0027156 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags:  --enable-source-maps

'use strict';
require('../../../common');
Error.stackTraceLimit = 2;

require('../typescript-throw');
                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/source-map/output/source_map_throw_first_tick.snapshot                    0000664 0000000 0000000 00000000313 14746647661 0030377 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        reachable
*typescript-throw.ts:18
    throw Error('an exception');
    ^


Error: an exception
    at branch (*typescript-throw.ts:18:11)
    at Object.<anonymous> (*typescript-throw.ts:24:1)

Node.js *
                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/source-map/output/source_map_throw_icu.js                                 0000664 0000000 0000000 00000000171 14746647661 0025575 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --enable-source-maps

'use strict';
require('../../../common');
Error.stackTraceLimit = 2;

require('../icu');
                                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/source-map/output/source_map_throw_icu.snapshot                           0000664 0000000 0000000 00000000264 14746647661 0027023 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        *icu.jsx:3
    ("あ 🐕 🐕", throw Error("an error"));
     ^


Error: an error
    at Object.createElement (*icu.jsx:3:23)
    at Object.<anonymous> (*icu.jsx:9:5)

Node.js *
                                                                                                                                                                                                                                                                                                                                            node-23.7.0/test/fixtures/source-map/output/source_map_throw_set_immediate.js                       0000664 0000000 0000000 00000000147 14746647661 0027631 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags:  --enable-source-maps

'use strict';
require('../../../common');
require('../uglify-throw');
                                                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/source-map/output/source_map_throw_set_immediate.snapshot                 0000664 0000000 0000000 00000000306 14746647661 0031051 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        *uglify-throw-original.js:5
  throw Error('goodbye');
  ^


Error: goodbye
    at Hello (*uglify-throw-original.js:5:9)
    at Immediate.<anonymous> (*uglify-throw-original.js:9:3)
    *

Node.js *
                                                                                                                                                                                                                                                                                                                          node-23.7.0/test/fixtures/source-map/sigint.js                                                      0000664 0000000 0000000 00000000233 14746647661 0021311 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const a = 99;
if (true) {
  const b = 101;
} else {
  const c = 102;
}
process.kill(process.pid, "SIGINT");
//# sourceMappingURL=https://ci.nodejs.org/402
                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/source-map/tabs.coffee                                                    0000664 0000000 0000000 00000000631 14746647661 0021562 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Assignment:
number   = 42
opposite = true

# Conditions:
number = -42 if opposite

# Functions:
square = (x) -> x * x

# Arrays:
list = [1, 2, 3, 4, 5]

# Objects:
math =
	root:   Math.sqrt
	square: square
	cube:   (x) -> x * square x

# Splats:
race = (winner, runners...) ->
	print winner, runners

# Existence:
if true
	alert "I knew it!"

# Array comprehensions:
cubes = (math.cube num for num in list)
                                                                                                       node-23.7.0/test/fixtures/source-map/tabs.js                                                        0000664 0000000 0000000 00000005121 14746647661 0020746 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Generated by CoffeeScript 2.5.1
(function() {
  // Assignment:
  var cubes, list, math, num, number, opposite, race, square;

  number = 42;

  opposite = true;

  if (opposite) {
    // Conditions:
    number = -42;
  }

  // Functions:
  square = function(x) {
    return x * x;
  };

  // Arrays:
  list = [1, 2, 3, 4, 5];

  // Objects:
  math = {
    root: Math.sqrt,
    square: square,
    cube: function(x) {
      return x * square(x);
    }
  };

  // Splats:
  race = function(winner, ...runners) {
    return print(winner, runners);
  };

  // Existence:
  if (true) {
    alert("I knew it!");
  }

  // Array comprehensions:
  cubes = (function() {
    var i, len, results;
    results = [];
    for (i = 0, len = list.length; i < len; i++) {
      num = list[i];
      results.push(math.cube(num));
    }
    return results;
  })();

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInRhYnMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBYTtFQUFBO0FBQUEsTUFBQSxLQUFBLEVBQUEsSUFBQSxFQUFBLElBQUEsRUFBQSxHQUFBLEVBQUEsTUFBQSxFQUFBLFFBQUEsRUFBQSxJQUFBLEVBQUE7O0VBQ2IsTUFBQSxHQUFXOztFQUNYLFFBQUEsR0FBVzs7RUFHWCxJQUFnQixRQUFoQjs7SUFBQSxNQUFBLEdBQVMsQ0FBQyxHQUFWO0dBTGE7OztFQVFiLE1BQUEsR0FBUyxRQUFBLENBQUMsQ0FBRCxDQUFBO1dBQU8sQ0FBQSxHQUFJO0VBQVgsRUFSSTs7O0VBV2IsSUFBQSxHQUFPLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLEVBQVUsQ0FBVixFQUFhLENBQWIsRUFYTTs7O0VBY2IsSUFBQSxHQUNDO0lBQUEsSUFBQSxFQUFRLElBQUksQ0FBQyxJQUFiO0lBQ0EsTUFBQSxFQUFRLE1BRFI7SUFFQSxJQUFBLEVBQVEsUUFBQSxDQUFDLENBQUQsQ0FBQTthQUFPLENBQUEsR0FBSSxNQUFBLENBQU8sQ0FBUDtJQUFYO0VBRlIsRUFmWTs7O0VBb0JiLElBQUEsR0FBTyxRQUFBLENBQUMsTUFBRCxFQUFBLEdBQVMsT0FBVCxDQUFBO1dBQ04sS0FBQSxDQUFNLE1BQU4sRUFBYyxPQUFkO0VBRE0sRUFwQk07OztFQXdCYixJQUFHLElBQUg7SUFDQyxLQUFBLENBQU0sWUFBTixFQUREO0dBeEJhOzs7RUE0QmIsS0FBQTs7QUFBUztJQUFBLEtBQUEsc0NBQUE7O21CQUFBLElBQUksQ0FBQyxJQUFMLENBQVUsR0FBVjtJQUFBLENBQUE7OztBQTVCSSIsInNvdXJjZXNDb250ZW50IjpbIiMgQXNzaWdubWVudDpcbm51bWJlciAgID0gNDJcbm9wcG9zaXRlID0gdHJ1ZVxuXG4jIENvbmRpdGlvbnM6XG5udW1iZXIgPSAtNDIgaWYgb3Bwb3NpdGVcblxuIyBGdW5jdGlvbnM6XG5zcXVhcmUgPSAoeCkgLT4geCAqIHhcblxuIyBBcnJheXM6XG5saXN0ID0gWzEsIDIsIDMsIDQsIDVdXG5cbiMgT2JqZWN0czpcbm1hdGggPVxuXHRyb290OiAgIE1hdGguc3FydFxuXHRzcXVhcmU6IHNxdWFyZVxuXHRjdWJlOiAgICh4KSAtPiB4ICogc3F1YXJlIHhcblxuIyBTcGxhdHM6XG5yYWNlID0gKHdpbm5lciwgcnVubmVycy4uLikgLT5cblx0cHJpbnQgd2lubmVyLCBydW5uZXJzXG5cbiMgRXhpc3RlbmNlOlxuaWYgdHJ1ZVxuXHRhbGVydCBcIkkga25ldyBpdCFcIlxuXG4jIEFycmF5IGNvbXByZWhlbnNpb25zOlxuY3ViZXMgPSAobWF0aC5jdWJlIG51bSBmb3IgbnVtIGluIGxpc3QpXG4iXX0=
//# sourceURL=/Users/bencoe/oss/coffee-script-test/tabs.coffee
                                                                                                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/source-map/throw-async.mjs                                                0000664 0000000 0000000 00000000605 14746647661 0022452 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const message = 'Message ' + Math.random();
export async function Throw() {
    throw new Error(message);
}
await Throw();
// To recreate:
//
// npx tsc --module esnext --target es2017 --outDir test/fixtures/source-map --sourceMap test/fixtures/source-map/throw-async.ts
// + rename js to mjs
// + rename js to mjs in source map comment in mjs file
//# sourceMappingURL=throw-async.mjs.map                                                                                                                           node-23.7.0/test/fixtures/source-map/throw-async.mjs.map                                            0000664 0000000 0000000 00000000510 14746647661 0023221 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {"version":3,"file":"throw-async.mjs","sourceRoot":"","sources":["throw-async.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,GAAG,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AAE3C,MAAM,CAAC,KAAK,UAAU,KAAK;IACzB,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAA;AAC1B,CAAC;AAED,MAAM,KAAK,EAAE,CAAC;AAEd,eAAe;AACf,EAAE;AACF,gIAAgI;AAChI,qBAAqB;AACrB,uDAAuD"}                                                                                                                                                                                        node-23.7.0/test/fixtures/source-map/throw-async.ts                                                 0000664 0000000 0000000 00000000534 14746647661 0022310 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const message = 'Message ' + Math.random();

export async function Throw() {
  throw new Error(message)
}

await Throw();

// To recreate:
//
// npx tsc --module esnext --target es2017 --outDir test/fixtures/source-map --sourceMap test/fixtures/source-map/throw-async.ts
// + rename js to mjs
// + rename js to mjs in source map comment in mjs file                                                                                                                                                                    node-23.7.0/test/fixtures/source-map/throw-on-require-entry.js                                      0000664 0000000 0000000 00000000173 14746647661 0024405 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        "use strict";
exports.__esModule = true;
require("./throw-on-require");
//# sourceMappingURL=throw-on-require-entry.js.map
                                                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/source-map/throw-on-require-entry.js.map                                  0000664 0000000 0000000 00000000216 14746647661 0025157 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {"version":3,"file":"throw-on-require-entry.js","sourceRoot":"","sources":["throw-on-require-entry.ts"],"names":[],"mappings":";;AAAA,8BAA2B"}                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/source-map/throw-on-require.js                                            0000664 0000000 0000000 00000000513 14746647661 0023244 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        var ATrue;
(function (ATrue) {
    ATrue[ATrue["IsTrue"] = 1] = "IsTrue";
    ATrue[ATrue["IsFalse"] = 0] = "IsFalse";
})(ATrue || (ATrue = {}));
if (false) {
    console.info('unreachable');
}
else if (true) {
    throw Error('throw early');
}
else {
    console.info('unreachable');
}
//# sourceMappingURL=throw-on-require.js.map                                                                                                                                                                                     node-23.7.0/test/fixtures/source-map/throw-on-require.js.map                                        0000664 0000000 0000000 00000000607 14746647661 0024024 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {"version":3,"file":"throw-on-require.js","sourceRoot":"","sources":["throw-on-require.ts"],"names":[],"mappings":"AAAA,IAAK,KAGJ;AAHD,WAAK,KAAK;IACR,qCAAU,CAAA;IACV,uCAAW,CAAA;AACb,CAAC,EAHI,KAAK,KAAL,KAAK,QAGT;AAED,IAAI,KAAK,EAAE;IACT,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;CAC5B;KAAM,IAAI,IAAI,EAAE;IACf,MAAM,KAAK,CAAC,aAAa,CAAC,CAAA;CAC3B;KAAM;IACL,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;CAC5B"}                                                                                                                         node-23.7.0/test/fixtures/source-map/throw-on-require.ts                                            0000664 0000000 0000000 00000000261 14746647661 0023256 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        enum ATrue {
  IsTrue = 1,
  IsFalse = 0
}
 
if (false) {
  console.info('unreachable')
} else if (true) {
  throw Error('throw early')
} else {
  console.info('unreachable')
}
                                                                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/source-map/throw-string-original.js                                       0000664 0000000 0000000 00000000130 14746647661 0024261 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        /*
 * comments dropped by uglify.
 */
function Hello() {
  throw 'goodbye';
}

Hello();
                                                                                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/source-map/throw-string.js                                                0000664 0000000 0000000 00000000376 14746647661 0022473 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function Hello(){throw"goodbye"}Hello();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRocm93LXN0cmluZy1vcmlnaW5hbC5qcyJdLCJuYW1lcyI6WyJIZWxsbyJdLCJtYXBwaW5ncyI6IkFBR0EsU0FBU0EsUUFDUCxLQUFNLFVBR1JBIn0=
                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/source-map/ts-node-win32.js                                               0000664 0000000 0000000 00000002561 14746647661 0022333 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function foo(str) {
    return str;
}
foo('noop');
// To recreate (Windows only):
//
// const filePath = require.resolve('./test/fixtures/source-map/ts-node.ts');
// const compiled = require('ts-node').create({ transpileOnly: true }).compile(fs.readFileSync(filePath, 'utf8'), filePath);
// fs.writeFileSync('test/fixtures/source-map/ts-node-win32.js', compiled);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRDovd29ya3NwYWNlcy9ub2RlL3Rlc3QvZml4dHVyZXMvc291cmNlLW1hcC90cy1ub2RlLnRzIiwic291cmNlcyI6WyJEOi93b3Jrc3BhY2VzL25vZGUvdGVzdC9maXh0dXJlcy9zb3VyY2UtbWFwL3RzLW5vZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyxHQUFHLENBQUMsR0FBVztJQUN0QixPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFFRCxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7QUFFWiw4QkFBOEI7QUFDOUIsRUFBRTtBQUNGLDZFQUE2RTtBQUM3RSw0SEFBNEg7QUFDNUgsMkVBQTJFIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZm9vKHN0cjogc3RyaW5nKSB7XG4gIHJldHVybiBzdHI7XG59XG5cbmZvbygnbm9vcCcpO1xuXG4vLyBUbyByZWNyZWF0ZSAoV2luZG93cyBvbmx5KTpcbi8vXG4vLyBjb25zdCBmaWxlUGF0aCA9IHJlcXVpcmUucmVzb2x2ZSgnLi90ZXN0L2ZpeHR1cmVzL3NvdXJjZS1tYXAvdHMtbm9kZS50cycpO1xuLy8gY29uc3QgY29tcGlsZWQgPSByZXF1aXJlKCd0cy1ub2RlJykuY3JlYXRlKHsgdHJhbnNwaWxlT25seTogdHJ1ZSB9KS5jb21waWxlKGZzLnJlYWRGaWxlU3luYyhmaWxlUGF0aCwgJ3V0ZjgnKSwgZmlsZVBhdGgpO1xuLy8gZnMud3JpdGVGaWxlU3luYygndGVzdC9maXh0dXJlcy9zb3VyY2UtbWFwL3RzLW5vZGUtd2luMzIuanMnLCBjb21waWxlZCk7XG4iXX0=
                                                                                                                                               node-23.7.0/test/fixtures/source-map/ts-node.ts                                                     0000664 0000000 0000000 00000000564 14746647661 0021406 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function foo(str: string) {
  return str;
}

foo('noop');

// To recreate (Windows only):
//
// const filePath = require.resolve('./test/fixtures/source-map/ts-node.ts');
// const compiled = require('ts-node').create({ transpileOnly: true }).compile(fs.readFileSync(filePath, 'utf8'), filePath);
// fs.writeFileSync('test/fixtures/source-map/ts-node-win32.js', compiled);
                                                                                                                                            node-23.7.0/test/fixtures/source-map/typescript-sourcemapping_url_string.js                         0000664 0000000 0000000 00000000231 14746647661 0027342 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        "use strict";
const content = '//# sourceMappingURL=';
throw new Error('an exception.');
//# sourceMappingURL=typescript-sourcemapping_url_string.js.map
                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/source-map/typescript-sourcemapping_url_string.js.map                     0000664 0000000 0000000 00000000345 14746647661 0030124 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {"version":3,"file":"typescript-sourcemapping_url_string.js","sourceRoot":"","sources":["typescript-sourcemapping_url_string.ts"],"names":[],"mappings":";AAAA,MAAM,OAAO,GAAG,uBAAuB,CAAC;AAExC,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC"}
                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/source-map/typescript-throw.js                                            0000664 0000000 0000000 00000001100 14746647661 0023355 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        var ATrue;
(function (ATrue) {
    ATrue[ATrue["IsTrue"] = 1] = "IsTrue";
    ATrue[ATrue["IsFalse"] = 0] = "IsFalse";
})(ATrue || (ATrue = {}));
if (false) {
    console.info('unreachable');
}
else if (true) {
    console.info('reachable');
}
else {
    console.info('unreachable');
}
function branch(a) {
    if (a === ATrue.IsFalse) {
        console.info('a = false');
    }
    else if (a === ATrue.IsTrue) {
        throw Error('an exception');
    }
    else {
        console.info('a = ???');
    }
}
branch(ATrue.IsTrue);
//# sourceMappingURL=typescript-throw.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/source-map/typescript-throw.js.map                                        0000664 0000000 0000000 00000001265 14746647661 0024145 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {"version":3,"file":"typescript-throw.js","sourceRoot":"","sources":["typescript-throw.ts"],"names":[],"mappings":"AAAA,IAAK,KAGJ;AAHD,WAAK,KAAK;IACR,qCAAU,CAAA;IACV,uCAAW,CAAA;AACb,CAAC,EAHI,KAAK,KAAL,KAAK,QAGT;AAED,IAAI,KAAK,EAAE;IACT,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;CAC5B;KAAM,IAAI,IAAI,EAAE;IACf,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;CAC1B;KAAM;IACL,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;CAC5B;AAED,SAAS,MAAM,CAAE,CAAQ;IACvB,IAAI,CAAC,KAAK,KAAK,CAAC,OAAO,EAAE;QACvB,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;KAC1B;SAAM,IAAI,CAAC,KAAK,KAAK,CAAC,MAAM,EAAE;QAC7B,MAAM,KAAK,CAAC,cAAc,CAAC,CAAC;KAC7B;SAAM;QACL,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;KACxB;AACH,CAAC;AAED,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA"}
                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/source-map/typescript-throw.ts                                            0000664 0000000 0000000 00000000617 14746647661 0023403 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        enum ATrue {
  IsTrue = 1,
  IsFalse = 0
}

if (false) {
  console.info('unreachable')
} else if (true) {
  console.info('reachable')
} else {
  console.info('unreachable')
}

function branch (a: ATrue) {
  if (a === ATrue.IsFalse) {
    console.info('a = false')
  } else if (a === ATrue.IsTrue) {
    throw Error('an exception');
  } else {
    console.info('a = ???')
  }
}

branch(ATrue.IsTrue)
                                                                                                                 node-23.7.0/test/fixtures/source-map/uglify-throw-original.js                                       0000664 0000000 0000000 00000000177 14746647661 0024265 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        /*
 * comments dropped by uglify.
 */
function Hello() {
  throw Error('goodbye');
}

setImmediate(function() {
  Hello();
});
                                                                                                                                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/source-map/uglify-throw.js                                                0000664 0000000 0000000 00000001032 14746647661 0022452 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        setImmediate(function(){!function(){throw Error("goodbye")}()});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVnbGlmeS10aHJvdy1vcmlnaW5hbC5qcyJdLCJuYW1lcyI6WyJzZXRJbW1lZGlhdGUiLCJFcnJvciIsIkhlbGxvIl0sIm1hcHBpbmdzIjoiQUFPQUEsYUFBYSxZQUpiLFdBQ0UsTUFBTUMsTUFBTSxXQUlaQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBjb21tZW50cyBkcm9wcGVkIGJ5IHVnbGlmeS5cbiAqL1xuZnVuY3Rpb24gSGVsbG8oKSB7XG4gIHRocm93IEVycm9yKCdnb29kYnllJyk7XG59XG5cbnNldEltbWVkaWF0ZShmdW5jdGlvbigpIHtcbiAgSGVsbG8oKTtcbn0pO1xuXG4iXX0=
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/source-map/webpack.js                                                     0000664 0000000 0000000 00000002012 14746647661 0021425 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        !function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t){const r=()=>{n()},n=()=>{o()},o=()=>{throw new Error("oh no!")};r()}]);
//# sourceMappingURL=webpack.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/source-map/webpack.js.map                                                 0000664 0000000 0000000 00000011610 14746647661 0022205 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./webpack.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","functionB","functionC","functionD","Error"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBClFrD,MAIMC,EAAY,KAChBC,KAGIA,EAAY,KAChBC,KAGIA,EAAY,KAChB,MAAM,IAAIC,MAAM,WAZhBH","file":"webpack.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const functionA = () => {\n  functionB()\n}\n\nconst functionB = () => {\n  functionC()\n}\n\nconst functionC = () => {\n  functionD()\n}\n\nconst functionD = () => {\n  throw new Error('oh no!')\n}\n\nfunctionA()\n"],"sourceRoot":""}                                                                                                                        node-23.7.0/test/fixtures/spawn-worker-with-copied-env.js                                           0000664 0000000 0000000 00000001042 14746647661 0023377 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

// This test is meant to be spawned with NODE_OPTIONS=--title=foo
const assert = require('assert');
if (process.platform !== 'sunos' && process.platform !== 'os400') {  // --title is unsupported on SmartOS and IBM i.
  assert.strictEqual(process.title, 'foo');
}

// Spawns a worker that may copy NODE_OPTIONS if it's set by the parent.
const { Worker } = require('worker_threads');
new Worker(`require('assert').strictEqual(process.env.TEST_VAR, 'bar')`, {
  env: {
    ...process.env,
    TEST_VAR: 'bar',
  },
  eval: true,
});
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/spawn-worker-with-trace-exit.js                                           0000664 0000000 0000000 00000000610 14746647661 0023413 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

const { Worker, isMainThread } = require('worker_threads')

// Tests that valid per-isolate/env NODE_OPTIONS are allowed and
// work in child workers.
if (isMainThread) {
  new Worker(__filename, {
    env: {
      ...process.env,
      NODE_OPTIONS: '--trace-exit'
    }
  })
} else {
  setImmediate(() => {
    process.nextTick(() => {
      process.exit(0);
    });
  });
}
                                                                                                                        node-23.7.0/test/fixtures/spawn_closed_stdio.py                                                     0000664 0000000 0000000 00000000226 14746647661 0021642 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import os
import sys
import subprocess
os.close(0)
os.close(1)
os.close(2)
exit_code = subprocess.call(sys.argv[1:], shell=False)
sys.exit(exit_code)
                                                                                                                                                                                                                                                                                                                                                                          node-23.7.0/test/fixtures/syntax/                                                                   0000775 0000000 0000000 00000000000 14746647661 0016733 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/syntax/bad_syntax.js                                                      0000664 0000000 0000000 00000000015 14746647661 0021421 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        var foo bar;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/syntax/bad_syntax.mjs                                                     0000664 0000000 0000000 00000000015 14746647661 0021576 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        var foo bar;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/syntax/bad_syntax_shebang.js                                              0000664 0000000 0000000 00000000041 14746647661 0023107 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        #!/usr/bin/env node
var foo bar;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/syntax/good_syntax.js                                                     0000664 0000000 0000000 00000000021 14746647661 0021620 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        var foo = 'bar';
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/syntax/good_syntax.mjs                                                    0000664 0000000 0000000 00000000074 14746647661 0022005 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        export function testFunction(req, res) {
  return 'PASS';
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/syntax/good_syntax_shebang.js                                             0000664 0000000 0000000 00000000045 14746647661 0023315 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        #!/usr/bin/env node
var foo = 'bar';
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/syntax/illegal_if_not_wrapped.js                                          0000664 0000000 0000000 00000000030 14746647661 0023753 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        if (true) {
  return;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test-error-first-line-offset.js                                           0000664 0000000 0000000 00000000006 14746647661 0023403 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        error
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          node-23.7.0/test/fixtures/test-fs-readfile-error.js                                                 0000664 0000000 0000000 00000002241 14746647661 0022227 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

require('fs').readFileSync('/');  // throws EISDIR
                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/test-fs-stat-sync-overflow.js                                             0000664 0000000 0000000 00000000125 14746647661 0023112 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const fs = require('fs');

function load() {
  fs.statSync('.');
  load();
}
load();
                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test-init-index/                                                          0000775 0000000 0000000 00000000000 14746647661 0020432 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-init-index/index.js                                                  0000664 0000000 0000000 00000002263 14746647661 0022102 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

(function() {
  process.stdout.write('Loaded successfully!');
})();

                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-init-native/                                                         0000775 0000000 0000000 00000000000 14746647661 0020611 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-init-native/fs.js                                                    0000664 0000000 0000000 00000002354 14746647661 0021563 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

(function() {
  const fs = require('fs');
  if (fs.readFile) {
    process.stdout.write('fs loaded successfully');
  }
})();

                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-module-loading-globalpaths/                                          0000775 0000000 0000000 00000000000 14746647661 0023560 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-module-loading-globalpaths/home-pkg-in-both/                         0000775 0000000 0000000 00000000000 14746647661 0026625 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-module-loading-globalpaths/home-pkg-in-both/.node_libraries/         0000775 0000000 0000000 00000000000 14746647661 0031664 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-module-loading-globalpaths/home-pkg-in-both/.node_libraries/foo.js   0000664 0000000 0000000 00000000052 14746647661 0033002 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        exports.string = '$HOME/.node_libraries';
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test-module-loading-globalpaths/home-pkg-in-both/.node_modules/           0000775 0000000 0000000 00000000000 14746647661 0031360 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-module-loading-globalpaths/home-pkg-in-both/.node_modules/foo.js     0000664 0000000 0000000 00000000050 14746647661 0032474 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        exports.string = '$HOME/.node_modules';
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test-module-loading-globalpaths/home-pkg-in-node_libraries/               0000775 0000000 0000000 00000000000 14746647661 0030652 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        .node_libraries/                                                                                    0000775 0000000 0000000 00000000000 14746647661 0033632 5                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/test/fixtures/test-module-loading-globalpaths/home-pkg-in-node_libraries                                                                                   foo.js                                                                                              0000664 0000000 0000000 00000000052 14746647661 0034750 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/test/fixtures/test-module-loading-globalpaths/home-pkg-in-node_libraries/.node_libraries                                                                   exports.string = '$HOME/.node_libraries';
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test-module-loading-globalpaths/home-pkg-in-node_modules/                 0000775 0000000 0000000 00000000000 14746647661 0030346 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-module-loading-globalpaths/home-pkg-in-node_modules/.node_modules/   0000775 0000000 0000000 00000000000 14746647661 0033101 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        foo.js                                                                                              0000664 0000000 0000000 00000000050 14746647661 0034136 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/test/fixtures/test-module-loading-globalpaths/home-pkg-in-node_modules/.node_modules                                                                       exports.string = '$HOME/.node_modules';
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test-module-loading-globalpaths/local-pkg/                                0000775 0000000 0000000 00000000000 14746647661 0025431 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-module-loading-globalpaths/local-pkg/node_modules/                   0000775 0000000 0000000 00000000000 14746647661 0030106 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-module-loading-globalpaths/local-pkg/node_modules/foo.js             0000664 0000000 0000000 00000000032 14746647661 0031222 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        exports.string = 'local';
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test-module-loading-globalpaths/local-pkg/test.js                         0000664 0000000 0000000 00000000062 14746647661 0026744 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
console.log(require('foo').string);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-module-loading-globalpaths/node_path/                                0000775 0000000 0000000 00000000000 14746647661 0025521 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-module-loading-globalpaths/node_path/foo.js                          0000664 0000000 0000000 00000000037 14746647661 0026642 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        exports.string = '$NODE_PATH';
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/test-nodetiming-uvmetricsinfo.js                                          0000664 0000000 0000000 00000002472 14746647661 0023755 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Enforcing strict checks on the order or number of events across different
// platforms can be tricky and unreliable due to various factors.
// As a result, this test relies on the `uv_metrics_info` call instead.
const { performance } = require('node:perf_hooks');
const assert = require('node:assert');
const fs = require('node:fs');
const { nodeTiming } = performance;

function safeMetricsInfo(cb) {
  setImmediate(() => {
    const info = nodeTiming.uvMetricsInfo;
    cb(info);
  });
}

{
  const info = nodeTiming.uvMetricsInfo;
  assert.strictEqual(info.loopCount, 0);
  assert.strictEqual(info.events, 0);
  // This is the only part of the test that we test events waiting
  // Adding checks for this property will make the test flaky
  // as it can be highly influenced by race conditions.
  assert.strictEqual(info.eventsWaiting, 0);
}

{
  // The synchronous call should obviously not affect the uv metrics
  const fd = fs.openSync(__filename, 'r');
  fs.readFileSync(fd);
  const info = nodeTiming.uvMetricsInfo;
  assert.strictEqual(info.loopCount, 0);
  assert.strictEqual(info.events, 0);
  assert.strictEqual(info.eventsWaiting, 0);
}

{
  function openFile(info) {
    assert.strictEqual(info.loopCount, 1);

    fs.open(__filename, 'r', (err) => {
      assert.ifError(err);
    });
  }

  safeMetricsInfo(openFile);
}                                                                                                                                                                                                      node-23.7.0/test/fixtures/test-repl-tab-completion/                                                 0000775 0000000 0000000 00000000000 14746647661 0022237 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-repl-tab-completion/.hiddenfiles                                     0000664 0000000 0000000 00000000016 14746647661 0024513 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        This is hidden                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test-repl-tab-completion/hellorandom.txt                                  0000664 0000000 0000000 00000000012 14746647661 0025275 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        Random txt                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test-repl-tab-completion/helloworld.js                                    0000664 0000000 0000000 00000000033 14746647661 0024744 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        console.log("hello world");                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test-resolution-inspect-brk-main.ext                                      0000664 0000000 0000000 00000000000 14746647661 0024436 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-resolution-inspect-brk-resolver.js                                   0000664 0000000 0000000 00000000154 14746647661 0025201 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const common = require('../common');

require.extensions['.ext'] = require.extensions['.js'];
                                                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner-watch.mjs                                                     0000664 0000000 0000000 00000001140 14746647661 0021506 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import { run } from 'node:test';
import { tap } from 'node:test/reporters';
import { parseArgs } from 'node:util';

const options = {
  file: {
    type: 'string',
  },
  cwd: {
    type: 'string',
  },
  isolation: {
    type: 'string',
  },
};
const {
  values,
  positionals,
} = parseArgs({ args: process.argv.slice(2), options });

let files;
let cwd;
let isolation;

if (values.file) {
  files = [values.file];
}

if (values.cwd) {
  cwd = values.cwd;
}

if (values.isolation) {
  isolation = values.isolation;
}

run({
  files,
  watch: true,
  cwd,
  isolation,
}).compose(tap).pipe(process.stdout);
                                                                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test-runner/                                                              0000775 0000000 0000000 00000000000 14746647661 0017673 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/aborts/                                                       0000775 0000000 0000000 00000000000 14746647661 0021165 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/aborts/failed-test-still-call-abort.js                        0000664 0000000 0000000 00000001104 14746647661 0027063 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const {test, afterEach} = require('node:test');
const assert = require('node:assert');
const { waitForAbort } = require('./wait-for-abort-helper');

let testCount = 0;
let signal;

afterEach(() => {
  assert.equal(signal.aborted, false);

  waitForAbort({ testNumber: ++testCount, signal });
});

test("sync", (t) => {
  signal = t.signal;
  assert.equal(signal.aborted, false);
  throw new Error('failing the sync test');
});

test("async", async (t) => {
  await null;
  signal = t.signal;
  assert.equal(signal.aborted, false);
  throw new Error('failing the async test');
});
                                                                                                                                                                                                                                                                                                                                                                                                                                                            node-23.7.0/test/fixtures/test-runner/aborts/successful-test-still-call-abort.js                    0000664 0000000 0000000 00000000751 14746647661 0030025 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const {test, afterEach} = require('node:test');
const assert = require('node:assert');
const {waitForAbort} = require("./wait-for-abort-helper");

let testCount = 0;
let signal;

afterEach(() => {
  assert.equal(signal.aborted, false);

  waitForAbort({ testNumber: ++testCount, signal });
});

test("sync", (t) => {
  signal = t.signal;
  assert.equal(signal.aborted, false);
});

test("async", async (t) => {
  await null;
  signal = t.signal;
  assert.equal(signal.aborted, false);
});
                       node-23.7.0/test/fixtures/test-runner/aborts/wait-for-abort-helper.js                               0000664 0000000 0000000 00000000705 14746647661 0025637 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        module.exports = {
  waitForAbort: function ({ testNumber, signal }) {
    let retries = 0;

    const interval = setInterval(() => {
      retries++;
      if(signal.aborted) {
        console.log(`abort called for test ${testNumber}`);
        clearInterval(interval);
        return;
      }

      if(retries > 100) {
        clearInterval(interval);
        throw new Error(`abort was not called for test ${testNumber}`);
      }
    }, 10);
  }
}
                                                           node-23.7.0/test/fixtures/test-runner/async-error-in-test-hook.mjs                                  0000664 0000000 0000000 00000000651 14746647661 0025173 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import { after, afterEach, before, beforeEach, test } from 'node:test'

before(() => {
  setTimeout(() => {
    throw new Error('before')
  }, 100)
})

beforeEach(() => {
  setTimeout(() => {
    throw new Error('beforeEach')
  }, 100)
})

after(() => {
  setTimeout(() => {
    throw new Error('after')
  }, 100)
})

afterEach(() => {
  setTimeout(() => {
    throw new Error('afterEach')
  }, 100)
})

test('ok', () => {})
                                                                                       node-23.7.0/test/fixtures/test-runner/concurrency/                                                  0000775 0000000 0000000 00000000000 14746647661 0022225 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/concurrency/a.mjs                                             0000664 0000000 0000000 00000000624 14746647661 0023162 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import tmpdir from '../../../common/tmpdir.js';
import { setTimeout } from 'node:timers/promises';
import fs from 'node:fs/promises';
import path from 'node:path';

await fs.writeFile(tmpdir.resolve('test-runner-concurrency'), 'a.mjs');
while (true) {
  const file = await fs.readFile(tmpdir.resolve('test-runner-concurrency'), 'utf8');
  if (file === 'b.mjs') {
    break;
  }
  await setTimeout(10);
}
                                                                                                            node-23.7.0/test/fixtures/test-runner/concurrency/b.mjs                                             0000664 0000000 0000000 00000000630 14746647661 0023160 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import tmpdir from '../../../common/tmpdir.js';
import { setTimeout } from 'node:timers/promises';
import fs from 'node:fs/promises';
import path from 'node:path';

while (true) {
  const file = await fs.readFile(tmpdir.resolve('test-runner-concurrency'), 'utf8');
  if (file === 'a.mjs') {
    await fs.writeFile(tmpdir.resolve('test-runner-concurrency'), 'b.mjs');
    break;
  }
  await setTimeout(10);
}
                                                                                                        node-23.7.0/test/fixtures/test-runner/coverage-default-exclusion/                                   0000775 0000000 0000000 00000000000 14746647661 0025117 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/coverage-default-exclusion/file-test.js                       0000664 0000000 0000000 00000000270 14746647661 0027350 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const test = require('node:test');
const assert = require('node:assert');
const { foo } = require('./logic-file');

test('foo returns 1', () => {
    assert.strictEqual(foo(), 1);
});
                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/coverage-default-exclusion/file.test.mjs                      0000664 0000000 0000000 00000000254 14746647661 0027530 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import test from 'node:test';
import assert from 'node:assert';
import { foo } from './logic-file.js';

test('foo returns 1', () => {
    assert.strictEqual(foo(), 1);
});
                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/coverage-default-exclusion/file.test.ts                       0000664 0000000 0000000 00000000254 14746647661 0027365 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import test from 'node:test';
import assert from 'node:assert';
import { foo } from './logic-file.js';

test('foo returns 1', () => {
    assert.strictEqual(foo(), 1);
});
                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/coverage-default-exclusion/logic-file.js                      0000664 0000000 0000000 00000000147 14746647661 0027471 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function foo() {
    return 1;
}

function bar() {
    return 'bar';
}

module.exports = { foo, bar };
                                                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test-runner/coverage-default-exclusion/test.cjs                           0000664 0000000 0000000 00000000273 14746647661 0026601 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const test = require('node:test');
const assert = require('node:assert');
const { foo } = require('./logic-file.js');

test('foo returns 1', () => {
    assert.strictEqual(foo(), 1);
});
                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test-runner/coverage-default-exclusion/test/                              0000775 0000000 0000000 00000000000 14746647661 0026076 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/coverage-default-exclusion/test/not-matching-test-name.js     0000664 0000000 0000000 00000000274 14746647661 0032722 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const test = require('node:test');
const assert = require('node:assert');
const { foo } = require('../logic-file.js');

test('foo returns 1', () => {
    assert.strictEqual(foo(), 1);
});
                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/coverage-loader/                                              0000775 0000000 0000000 00000000000 14746647661 0022732 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/coverage-loader/hooks.mjs                                     0000664 0000000 0000000 00000003720 14746647661 0024572 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const sources = {
// Virtual file. Doesn't exist on disk
  "virtual.js": `
  import { test } from 'node:test';
  test('test', async () => {});
`,
// file with source map. this emulates the behavior of tsx
  "sum.test.ts": `\
import{describe,it}from"node:test";import assert from"node:assert";import{sum}from"./sum.ts";describe("sum",()=>{it("should sum two numbers",()=>{assert.deepStrictEqual(sum(1,2),3)});it("should error out if one is not a number",()=>{assert.throws(()=>sum(1,"b"),Error)})});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBQUEsT0FBUyxTQUFVLE9BQVUsWUFDN0IsT0FBTyxXQUFZLGNBQ25CLE9BQVMsUUFBVyxRQUVwQixTQUFTLE1BQU8sSUFBTSxDQUNwQixHQUFHLHlCQUEwQixJQUFNLENBQy9CLE9BQU8sZ0JBQWdCLElBQUksRUFBRSxDQUFDLEVBQUcsQ0FBQyxDQUN0QyxDQUFDLEVBRUQsR0FBRywwQ0FBMkMsSUFBTSxDQUNsRCxPQUFPLE9BQU8sSUFBTSxJQUFJLEVBQUcsR0FBRyxFQUFHLEtBQUssQ0FDeEMsQ0FBQyxDQUNILENBQUMiLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIi4vc3VtLnRlc3QudHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXX0=`,
// file with source map. this emulates the behavior of tsx
  "sum.ts": `\
  var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:true});function sum(...n){if(!n.every(num=>typeof num==="number"))throw new Error("Not a number");return n.reduce((acc,cur)=>acc+cur)}__name(sum,"sum");export{sum};

  //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6ImtIQUFPLFNBQVMsT0FBUSxFQUFHLENBQ3pCLEdBQUksQ0FBQyxFQUFFLE1BQU8sS0FBUSxPQUFPLE1BQVEsUUFBUSxFQUFHLE1BQU0sSUFBSSxNQUFNLGNBQWMsRUFDOUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxJQUFLLE1BQVEsSUFBTSxHQUFHLENBQ3pDLENBSGdCIiwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyIuL3N1bS50cyJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdfQ==`,
};

export async function load(url, context, nextLoad) {
  const file = url.split('/').at(-1);
  if (sources[file] !== undefined) {
    return { format: "module", source: sources[file], shortCircuit: true };
  }
  return nextLoad(url, context);
}
                                                node-23.7.0/test/fixtures/test-runner/coverage-loader/register-hooks.js                             0000664 0000000 0000000 00000000221 14746647661 0026230 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const { register } = require('node:module');
const { pathToFileURL } = require('node:url');

register('./hooks.mjs', pathToFileURL(__filename));
                                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/test-runner/coverage-loader/sum.test.ts                                   0000664 0000000 0000000 00000000501 14746647661 0025060 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import { describe, it } from 'node:test'
import assert from 'node:assert'
import { sum } from './sum'

describe('sum', () => {
  it('should sum two numbers', () => {
    assert.deepStrictEqual(sum(1, 2), 3)
  })

  it('should error out if one is not a number', () => {
    assert.throws(() => sum(1, 'b'), Error)
  })
})
                                                                                                                                                                                               node-23.7.0/test/fixtures/test-runner/coverage-loader/sum.ts                                        0000664 0000000 0000000 00000000234 14746647661 0024105 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        export function sum (...n) {
  if (!n.every((num) => typeof num === 'number')) throw new Error('Not a number')
  return n.reduce((acc, cur) => acc + cur)
}
                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/coverage-loader/virtual.js                                    0000664 0000000 0000000 00000000000 14746647661 0024744 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/coverage-snap/                                                0000775 0000000 0000000 00000000000 14746647661 0022425 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/coverage-snap/a-very-long-long-long-sub-dir/                  0000775 0000000 0000000 00000000000 14746647661 0030022 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/coverage-snap/a-very-long-long-long-sub-dir/c.js              0000664 0000000 0000000 00000001676 14746647661 0030614 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
// Here we can't import common module as the coverage will be different based on the system

// Empty functions that don't do anything
function doNothing1() {
  // Not implemented
}

function doNothing2() {
  // No logic here
}

function unusedFunction1() {
  // Intentionally left empty
}

function unusedFunction2() {
  // Another empty function
}

// Unused variables
const unusedVariable1 = 'This is never used';
const unusedVariable2 = 42;
let unusedVariable3;

// Empty class with no methods
class UnusedClass {
  constructor() {
    // Constructor does nothing
  }
}

// Empty object literal
const emptyObject = {};

// Empty array
const emptyArray = [];

// Function with parameters but no body
function doNothingWithParams(param1, param2) {
  // No implementation
}

// Function that returns nothing
function returnsNothing() {
  // No return statement
}

// Another unused function
function unusedFunction3() {
  // More empty code
}
                                                                  node-23.7.0/test/fixtures/test-runner/coverage-snap/a.js                                            0000664 0000000 0000000 00000001676 14746647661 0023215 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
// Here we can't import common module as the coverage will be different based on the system

// Empty functions that don't do anything
function doNothing1() {
  // Not implemented
}

function doNothing2() {
  // No logic here
}

function unusedFunction1() {
  // Intentionally left empty
}

function unusedFunction2() {
  // Another empty function
}

// Unused variables
const unusedVariable1 = 'This is never used';
const unusedVariable2 = 42;
let unusedVariable3;

// Empty class with no methods
class UnusedClass {
  constructor() {
    // Constructor does nothing
  }
}

// Empty object literal
const emptyObject = {};

// Empty array
const emptyArray = [];

// Function with parameters but no body
function doNothingWithParams(param1, param2) {
  // No implementation
}

// Function that returns nothing
function returnsNothing() {
  // No return statement
}

// Another unused function
function unusedFunction3() {
  // More empty code
}
                                                                  node-23.7.0/test/fixtures/test-runner/coverage-snap/b.js                                            0000664 0000000 0000000 00000000362 14746647661 0023205 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
// Here we can't import common module as the coverage will be different based on the system

// Empty functions that don't do anything
function doNothing1() {
  // Not implemented
}

function doNothing2() {
  // No logic here
}
                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/coverage-snap/many-uncovered-lines.js                         0000664 0000000 0000000 00000015747 14746647661 0027045 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
// Here we can't import common module as the coverage will be different based on the system

// Empty functions that don't do anything
function doNothing1() {
  // Not implemented
}

function doNothing2() {
  // No logic here
}

function unusedFunction1() {
  // Intentionally left empty
}

function unusedFunction2() {
  // Another empty function
}

// Unused variables
const unusedVariable1 = 'This is never used';
const unusedVariable2 = 42;
let unusedVariable3;

// Empty class with no methods
class UnusedClass {
  constructor() {
    // Constructor does nothing
  }
}

// Empty object literal
const emptyObject = {};

// Empty array
const emptyArray = [];

// Function with parameters but no body
function doNothingWithParams(param1, param2) {
  // No implementation
}

// Function that returns nothing
function returnsNothing() {
  // No return statement
}

// Another unused function
function unusedFunction3() {
  // More empty code
}

// Empty functions with different signatures
function doNothing4() {
  // No logic here
}

function doNothing5() {
  // Another placeholder
}

function doNothingWithRestParams(...args) {
  // Function with rest parameters but no logic
}

function doNothingWithCallback(callback) {
  // Callback not called
}

// Unused variables of different types
const unusedVariable7 = null;
const unusedVariable8 = undefined;
const unusedVariable9 = Symbol('unused');
let unusedVariable10;

// Another empty class
class YetAnotherUnusedClass {
  // No properties or methods
}

// Unused object with nested array
const unusedObjectWithArray = {
  innerArray: [],
};

// Another empty array
const anotherEmptyArray = [];

// Function with default and rest parameters
function anotherComplexFunction(param1 = 10, ...rest) {
  // No implementation
}

// More unused functions
function unusedFunction5() {
  // Placeholder
}

function unusedFunction6() {
  // Empty again
}

function unusedFunction7() {
  // Still nothing here
}

// Empty static method in class
class UnusedClassWithStaticMethod {
  static unusedStaticMethod() {
    // No logic inside static method
  }
}

// Empty getter and setter in a class
class ClassWithGetterSetter {
  get unusedGetter() {
    // Empty getter
  }

  set unusedSetter(value) {
    // Empty setter
  }
}

// Unused function returning undefined
function returnsUndefined() {
  return undefined;
}

// Empty promise-returning function
function emptyPromiseFunction() {
  return new Promise((resolve, reject) => {
    // No promise logic
  });
}

// Empty immediately-invoked function expression (IIFE)
(function emptyIIFE() {
  // No implementation
})();

// Unused generator function with parameters
function* unusedGeneratorFunctionWithParams(param1, param2) {
  // No yielding of values
}

// Unused async arrow function
const unusedAsyncArrowFunction = async () => {
  // No async logic here
};

// Unused map function with no logic
const unusedMapFunction = new Map();

// Unused set function with no logic
const unusedSetFunction = new Set();

// Empty for loop
for (let i = 0; i < 10; i++) {
  // Loop does nothing
}

// Empty while loop
while (false) {
  // Never executes
}

// Empty try-catch-finally block
try {
  // Nothing to try
} catch (error) {
  // No error handling
} finally {
  // Nothing to finalize
}

// Empty if-else block
if (false) {
  // No logic here
} else {
  // Nothing here either
}

// Empty switch statement
switch (false) {
  case true:
    // No case logic
    break;
  default:
    // Default does nothing
    break;
}

// Empty nested function
function outerFunction() {
  function innerFunction() {
    // Empty inner function
  }
}

// More unused arrow functions
const unusedArrowFunction1 = () => {};
const unusedArrowFunction2 = (param) => {};

// Empty function with a try-catch block
function emptyTryCatchFunction() {
  try {
    // Nothing to try
  } catch (error) {
    // No error handling
  }
}

// Unused async generator function
async function* unusedAsyncGenerator() {
  // No async yielding
}

// Unused function returning an empty array
function returnsEmptyArray() {
  return [];
}

// Unused function returning an empty object
function returnsEmptyObject() {
  return {};
}

// Empty arrow function with destructuring
const unusedArrowFunctionWithDestructuring = ({ key1, key2 }) => {
  // No logic here
};

// Unused function with default parameters
function unusedFunctionWithDefaults(param1 = 'default', param2 = 100) {
  // No implementation
}

// Unused function returning an empty Map
function returnsEmptyMap() {
  return new Map();
}

// Unused function returning an empty Set
function returnsEmptySet() {
  return new Set();
}

// Unused async function with try-catch
async function unusedAsyncFunctionWithTryCatch() {
  try {
    // Nothing to try
  } catch (error) {
    // No error handling
  }
}

// Function with spread operator but no logic
function unusedFunctionWithSpread(...args) {
  // No implementation
}

// Function with object spread but no logic
function unusedFunctionWithObjectSpread(obj) {
  const newObj = { ...obj };
  // No logic here
}

// Empty function that takes an array and does nothing
function unusedFunctionWithArrayParam(arr) {
  // No logic here
}

// Empty function that returns a function
function unusedFunctionReturningFunction() {
  return function() {
    // Empty function returned
  };
}

// Empty function with destructuring and rest parameters
function unusedFunctionWithDestructuringAndRest({ a, b, ...rest }) {
  // No logic here
}

// Unused async function that returns a promise
async function unusedAsyncFunctionReturningPromise() {
  return Promise.resolve();
}

// Empty recursive function
function unusedRecursiveFunction() {
  // No recursive logic
}

// Empty function using template literals
function unusedFunctionWithTemplateLiterals(param) {
  const message = `Message: ${param}`;
  // No further logic
}

// Function with complex destructuring and no logic
function unusedComplexDestructuringFunction({ a: { b, c }, d }) {
  // No logic here
}

// Empty function that uses bitwise operations
function unusedFunctionWithBitwiseOperations(num) {
  const result = num & 0xff;
  // No further logic
}

// Unused function with optional chaining
function unusedFunctionWithOptionalChaining(obj) {
  const value = obj?.property?.nestedProperty;
  // No further logic
}

// Unused function with nullish coalescing operator
function unusedFunctionWithNullishCoalescing(param) {
  const value = param ?? 'default';
  // No further logic
}

// Unused generator function returning nothing
function* unusedGeneratorFunction() {
  // No yielding
}

// Function using try-catch with finally, but no logic
function unusedFunctionWithTryCatchFinally() {
  try {
    // Nothing to try
  } catch (e) {
    // No error handling
  } finally {
    // Nothing in finally
  }
}

// Function with chaining but no logic
function unusedFunctionWithChaining() {
  const obj = {
    method1: () => ({ method2: () => {} }),
  };
  obj.method1().method2();
}

// Empty function returning a new Date object
function unusedFunctionReturningDate() {
  return new Date();
}
                         node-23.7.0/test/fixtures/test-runner/coverage.js                                                   0000664 0000000 0000000 00000002632 14746647661 0022027 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const http = require('node:http'); // node:* should be filtered out.

try {
  // This block does not throw.
} catch { /* node:coverage ignore next 3 */
  // So this block is uncovered.

  /* node:coverage disable */

  /* node:coverage enable */

  /* node:coverage ignore next */
}

function uncalledTopLevelFunction() {
  if (true) {
    return 5;
  }

  return 9;
}

const test = require('node:test');

if (false) {
  console.log('this does not execute');
} else {
  require('./invalid-tap.js');
}

test('a test', () => {
  const uncalled = () => {};

  function fnWithControlFlow(val) {
    if (val < 0) {
      return -1;
    } else if (val === 0) {
      return 0;
    } else if (val < 100) {
      return 1;
    } else {
      return Infinity;
    }
  }

  fnWithControlFlow(-10);
  fnWithControlFlow(99);
});

try {
  require('test-nm'); // node_modules should be filtered out.
} catch {

}

async function main() {
  if (false) { console.log('boo'); } else { /* console.log('yay'); */ }

  if (false) {
    console.log('not happening');
  }

  if (true) {
    if (false) {
      console.log('not printed');
    }

    // Nothing to see here.
  } else {
    console.log('also not printed');
  }

  try {
    const foo = {};

    foo.x = 1;
    require('../v8-coverage/throw.js');
    foo.y = 2;
    return foo;
  } catch (err) {
    let bar = [];
    bar.push(5);
  } finally {
    const baz = 1;
  }
}

main();
                                                                                                      node-23.7.0/test/fixtures/test-runner/coverage/                                                     0000775 0000000 0000000 00000000000 14746647661 0021466 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/coverage/README.md                                            0000664 0000000 0000000 00000000712 14746647661 0022745 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        The files in the directory are generated by the
following commands:

```sh
npx esbuild a.test.ts --sourcemap --outdir=. --out-extension:.js=.mjs --sources-content=false --minify --bundle --platform=node --format=esm
echo "import { test } from 'node:test';
test('ok', () => {});

function uncovered() {
  return 'uncovered';
}
" | npx esbuild --sourcemap --sourcefile=stdin.test.ts --sources-content=true --bundle --platform=node --outfile="stdin.test.js"
```                                                      node-23.7.0/test/fixtures/test-runner/coverage/a.test.mjs                                           0000664 0000000 0000000 00000000231 14746647661 0023373 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import{test as o}from"node:test";import{strictEqual as r}from"node:assert";function e(){r(1,2)}o("fails",()=>{e()});
//# sourceMappingURL=a.test.mjs.map
                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/test-runner/coverage/a.test.mjs.map                                       0000664 0000000 0000000 00000000423 14746647661 0024152 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sources": ["a.test.ts", "b.test.ts"],
  "mappings": "AAAA,OAAS,QAAAA,MAAY,YCArB,OAAS,eAAAC,MAAmB,cAErB,SAASC,GAAU,CACxBD,EAAY,EAAG,CAAC,CAClB,CDDAE,EAAK,QAAS,IAAM,CAClBC,EAAQ,CACV,CAAC",
  "names": ["test", "strictEqual", "covered", "test", "covered"]
}
                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/coverage/a.test.ts                                            0000664 0000000 0000000 00000000273 14746647661 0023236 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import { test } from 'node:test';
import { covered } from './b.test';

test('fails', () => {
  covered();
});

function uncovered() {
  return 'uncovered';
}
if (false) {
  uncovered();
}                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test-runner/coverage/b.test.ts                                            0000664 0000000 0000000 00000000225 14746647661 0023234 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import { strictEqual } from 'node:assert';

export function covered() {
  strictEqual(1, 2);
}

export function uncovered() {
  return 'uncovered';
}                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test-runner/coverage/index.test.js                                        0000664 0000000 0000000 00000000212 14746647661 0024104 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

const test = require('node:test');
test('no source map', () => {});
if (false) {
  console.log('this does not execute');
}
                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test-runner/coverage/stdin.test.js                                        0000664 0000000 0000000 00000000222 14746647661 0024117 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // stdin.test.ts
var import_node_test = require("node:test");
(0, import_node_test.test)("ok", () => {
});
//# sourceMappingURL=stdin.test.js.map
                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/coverage/stdin.test.js.map                                    0000664 0000000 0000000 00000000420 14746647661 0024673 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sources": ["stdin.test.ts"],
  "sourcesContent": ["import { test } from 'node:test';\ntest('ok', () => {});\n\nfunction uncovered() {\n  return 'uncovered';\n}\n\n"],
  "mappings": ";AAAA,uBAAqB;AAAA,IACrB,uBAAK,MAAM,MAAM;AAAC,CAAC;",
  "names": []
}
                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test-runner/custom_reporters/                                             0000775 0000000 0000000 00000000000 14746647661 0023312 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/custom_reporters/coverage.mjs                                 0000664 0000000 0000000 00000000566 14746647661 0025627 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import { Transform } from 'node:stream';

export default class CoverageReporter extends Transform {
  constructor(options) {
    super({ ...options, writableObjectMode: true });
  }

  _transform(event, _encoding, callback) {
    if (event.type === 'test:coverage') {
      callback(null, JSON.stringify(event.data, null, 2));
    } else {
      callback(null);
    }
  }
}
                                                                                                                                          node-23.7.0/test/fixtures/test-runner/custom_reporters/custom.cjs                                   0000664 0000000 0000000 00000000651 14746647661 0025327 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const { Transform } = require('node:stream');

const customReporter = new Transform({
  writableObjectMode: true,
  transform(event, encoding, callback) {
    this.counters ??= {};
    this.counters[event.type] = (this.counters[event.type] ?? 0) + 1;
    callback();
  },
  flush(callback) {
    this.push('custom.cjs ')
    this.push(JSON.stringify(this.counters));
    callback();
  }
});

module.exports = customReporter;
                                                                                       node-23.7.0/test/fixtures/test-runner/custom_reporters/custom.js                                    0000664 0000000 0000000 00000000654 14746647661 0025167 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const assert = require('assert');
const path = require('path');

module.exports = async function * customReporter(source) {
  const counters = {};
  for await (const event of source) {
    if (event.data.file) {
      assert.strictEqual(event.data.file, path.resolve(__dirname, '../reporters.js'));
    }
    counters[event.type] = (counters[event.type] ?? 0) + 1;
  }
  yield "custom.js ";
  yield JSON.stringify(counters);
};
                                                                                    node-23.7.0/test/fixtures/test-runner/custom_reporters/custom.mjs                                   0000664 0000000 0000000 00000000361 14746647661 0025337 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        export default async function * customReporter(source) {
  const counters = {};
  for await (const event of source) {
    counters[event.type] = (counters[event.type] ?? 0) + 1;
  }
  yield "custom.mjs ";
  yield JSON.stringify(counters);
}
                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/test-runner/custom_reporters/throwing-async.js                            0000664 0000000 0000000 00000000261 14746647661 0026623 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

module.exports = async function * customReporter() {
  yield 'Going to throw an error\n';
  setImmediate(() => {
    throw new Error('Reporting error');
  });
};
                                                                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/test-runner/custom_reporters/throwing.js                                  0000664 0000000 0000000 00000000222 14746647661 0025505 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

module.exports = async function * customReporter() {
  yield 'Going to throw an error\n';
  throw new Error('Reporting error');
};
                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/cwd/                                                          0000775 0000000 0000000 00000000000 14746647661 0020450 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/cwd/test.cjs                                                  0000664 0000000 0000000 00000000114 14746647661 0022124 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/default-behavior/                                             0000775 0000000 0000000 00000000000 14746647661 0023114 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/default-behavior/index.test.js                                0000664 0000000 0000000 00000000114 14746647661 0025533 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/default-behavior/node_modules/                                0000775 0000000 0000000 00000000000 14746647661 0025571 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/default-behavior/node_modules/test-nm.js                      0000664 0000000 0000000 00000000073 14746647661 0027516 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
throw new Error('thrown from node_modules');
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test-runner/default-behavior/random.test.mjs                              0000664 0000000 0000000 00000000161 14746647661 0026063 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import test from 'node:test';

test('this should fail', () => {
  throw new Error('this is a failing test');
});
                                                                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/test-runner/default-behavior/subdir/                                      0000775 0000000 0000000 00000000000 14746647661 0024404 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/default-behavior/subdir/subdir_test.js                        0000664 0000000 0000000 00000000000 14746647661 0027257 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/default-behavior/test/                                        0000775 0000000 0000000 00000000000 14746647661 0024073 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/default-behavior/test/random.cjs                              0000664 0000000 0000000 00000000114 14746647661 0026050 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/default-behavior/test/skip_by_name.cjs                        0000664 0000000 0000000 00000000163 14746647661 0027234 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('this should be skipped');
test('this should be executed');
                                                                                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/default-behavior/test/suite_and_test.cjs                      0000664 0000000 0000000 00000000155 14746647661 0027607 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const {test, suite} = require('node:test');

suite('this is a suite');
test('this is a test');
                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test-runner/error-reporter-fail-fast/                                     0000775 0000000 0000000 00000000000 14746647661 0024530 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/error-reporter-fail-fast/a.mjs                                0000664 0000000 0000000 00000000205 14746647661 0025460 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const assert = require('node:assert');
const { test } = require('node:test');

test('fail', () => {
  assert.fail('a.mjs fail');
});
                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test-runner/error-reporter-fail-fast/b.mjs                                0000664 0000000 0000000 00000000205 14746647661 0025461 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const assert = require('node:assert');
const { test } = require('node:test');

test('fail', () => {
  assert.fail('b.mjs fail');
});
                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test-runner/extraneous_set_immediate_async.mjs                            0000664 0000000 0000000 00000000200 14746647661 0026661 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import test from 'node:test';

test('extraneous async activity test', () => {
  setImmediate(() => { throw new Error(); });
});
                                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test-runner/extraneous_set_timeout_async.mjs                              0000664 0000000 0000000 00000000203 14746647661 0026414 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import test from 'node:test';

test('extraneous async activity test', () => {
  setTimeout(() => { throw new Error(); }, 100);
});
                                                                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/index.js                                                      0000664 0000000 0000000 00000000067 14746647661 0021343 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
throw new Error('thrown from index.js');
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test-runner/invalid-tap.js                                                0000664 0000000 0000000 00000000043 14746647661 0022436 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        console.log('invalid tap output');
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/issue-54726/                                                  0000775 0000000 0000000 00000000000 14746647661 0021510 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/issue-54726/latest.js                                         0000664 0000000 0000000 00000000000 14746647661 0023330 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/issue-54726/non-matching.js                                   0000664 0000000 0000000 00000000000 14746647661 0024416 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/matching-patterns/                                            0000775 0000000 0000000 00000000000 14746647661 0023323 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/matching-patterns/index-test.cjs                              0000664 0000000 0000000 00000000114 14746647661 0026104 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/matching-patterns/index-test.js                               0000664 0000000 0000000 00000000114 14746647661 0025741 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/matching-patterns/index-test.mjs                              0000664 0000000 0000000 00000000107 14746647661 0026120 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
import test from 'node:test';

test('this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test-runner/matching-patterns/typescript-test.cts                         0000664 0000000 0000000 00000000203 14746647661 0027214 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const test = require('node:test');

// 'as string' ensures that type stripping actually occurs
test('this should pass' as string);
                                                                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/matching-patterns/typescript-test.mts                         0000664 0000000 0000000 00000000202 14746647661 0027225 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import { test } from 'node:test';

// 'as string' ensures that type stripping actually occurs
test('this should pass' as string);
                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/matching-patterns/typescript-test.ts                          0000664 0000000 0000000 00000000203 14746647661 0027051 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const test = require('node:test');

// 'as string' ensures that type stripping actually occurs
test('this should pass' as string);
                                                                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/mock-nm.js                                                    0000664 0000000 0000000 00000001126 14746647661 0021572 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const assert = require('node:assert');
const { test } = require('node:test');
const fixture = 'reporter-cjs';

test('mock node_modules dependency', async (t) => {
  const mock = t.mock.module(fixture, {
    namedExports: { fn() { return 42; } },
  });
  let cjsImpl = require(fixture);
  let esmImpl = await import(fixture);

  assert.strictEqual(cjsImpl.fn(), 42);
  assert.strictEqual(esmImpl.fn(), 42);

  mock.restore();
  cjsImpl = require(fixture);
  esmImpl = await import(fixture);
  assert.strictEqual(cjsImpl.fn, undefined);
  assert.strictEqual(esmImpl.fn, undefined);
});
                                                                                                                                                                                                                                                                                                                                                                                                                                          node-23.7.0/test/fixtures/test-runner/nested.js                                                     0000664 0000000 0000000 00000000701 14746647661 0021511 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');



test('level 0a', { concurrency: 4 }, async (t) => {
  t.test('level 1a', async (t) => {
  });

  t.test('level 1b', async (t) => {
    throw new Error('level 1b error');
  });

  t.test('level 1c', { skip: 'aaa' }, async (t) => {
  });

  t.test('level 1d', async (t) => {
    t.diagnostic('level 1d diagnostic');
  });
});

test('level 0b', async (t) => {
  throw new Error('level 0b error');
});                                                               node-23.7.0/test/fixtures/test-runner/never_ending_async.js                                         0000664 0000000 0000000 00000000434 14746647661 0024072 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const test = require('node:test');
const { setTimeout } = require('timers/promises');

// We are using a very large timeout value to ensure that the parent process
// will have time to send a SIGINT signal to cancel the test.
test('never ending test', () => setTimeout(100_000_000));
                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/never_ending_sync.js                                          0000664 0000000 0000000 00000000132 14746647661 0023724 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const test = require('node:test');

test('never ending test', () => {
  while (true);
});
                                                                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test-runner/no-isolation/                                                 0000775 0000000 0000000 00000000000 14746647661 0022306 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/no-isolation/global-hooks.js                                  0000664 0000000 0000000 00000000415 14746647661 0025225 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import('node:test').then((test) => {
  test.before(() => console.log('before(): global'));
  test.beforeEach(() => console.log('beforeEach(): global'));
  test.after(() => console.log('after(): global'));
  test.afterEach(() => console.log('afterEach(): global'));
});
                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test-runner/no-isolation/one.test.js                                      0000664 0000000 0000000 00000001247 14746647661 0024407 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const { before, beforeEach, after, afterEach, test, suite } = require('node:test');

globalThis.GLOBAL_ORDER = [];

function record(data) {
  globalThis.GLOBAL_ORDER.push(data);
  console.log(data);
}

before(function() {
  record(`before one: ${this.name}`);
});

beforeEach(function() {
  record(`beforeEach one: ${this.name}`);
});

after(function() {
  record(`after one: ${this.name}`);
});

afterEach(function() {
  record(`afterEach one: ${this.name}`);
});

suite('suite one', function() {
  record(this.name);

  test('suite one - test', { only: true }, function() {
    record(this.name);
  });
});

test('test one', function() {
  record(this.name);
});
                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test-runner/no-isolation/two.test.js                                      0000664 0000000 0000000 00000001233 14746647661 0024432 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const { before, beforeEach, after, afterEach, test, suite } = require('node:test');

function record(data) {
  globalThis.GLOBAL_ORDER.push(data);
  console.log(data);
}

before(function() {
  record(`before two: ${this.name}`);
});

beforeEach(function() {
  record(`beforeEach two: ${this.name}`);
});

after(function() {
  record(`after two: ${this.name}`);
});

afterEach(function() {
  record(`afterEach two: ${this.name}`);
});

suite('suite two', function() {
  record(this.name);

  before(function() {
    record(`before suite two: ${this.name}`);
  });

  test('suite two - test', { only: true }, function() {
    record(this.name);
  });
});
                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test-runner/node_modules/                                                 0000775 0000000 0000000 00000000000 14746647661 0022350 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/node_modules/reporter-cjs/                                    0000775 0000000 0000000 00000000000 14746647661 0024767 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/node_modules/reporter-cjs/index.js                            0000664 0000000 0000000 00000000376 14746647661 0026442 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        module.exports = async function * customReporter(source) {
  const counters = {};
  for await (const event of source) {
    counters[event.type] = (counters[event.type] ?? 0) + 1;
  }
  yield "package: reporter-cjs";
  yield JSON.stringify(counters);
};
                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test-runner/node_modules/reporter-cjs/package.json                        0000664 0000000 0000000 00000000063 14746647661 0027254 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "name": "reporter-cjs",
  "main": "index.js"
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/node_modules/reporter-esm/                                    0000775 0000000 0000000 00000000000 14746647661 0024774 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/node_modules/reporter-esm/index.mjs                           0000664 0000000 0000000 00000000374 14746647661 0026622 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        export default async function * customReporter(source) {
  const counters = {};
  for await (const event of source) {
    counters[event.type] = (counters[event.type] ?? 0) + 1;
  }
  yield "package: reporter-esm";
  yield JSON.stringify(counters);
};
                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/node_modules/reporter-esm/package.json                        0000664 0000000 0000000 00000000071 14746647661 0027260 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "name": "reporter-esm",
  "exports": "./index.mjs"
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/test-runner/output/                                                       0000775 0000000 0000000 00000000000 14746647661 0021233 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/output/abort-runs-after-hook.js                               0000664 0000000 0000000 00000000456 14746647661 0025727 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const { test } = require('node:test');

test('test that aborts', (t, done) => {
  t.after(() => {
    // This should still run.
    console.log('AFTER');
  });

  setImmediate(() => {
    // This creates an uncaughtException, which aborts the test.
    throw new Error('boom');
  });
});
                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test-runner/output/abort-runs-after-hook.snapshot                         0000664 0000000 0000000 00000000620 14746647661 0027143 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
AFTER
# Subtest: test that aborts
not ok 1 - test that aborts
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/abort-runs-after-hook.js:(LINE):1'
  failureType: 'uncaughtException'
  error: 'boom'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
  ...
1..1
# tests 1
# suites 0
# pass 0
# fail 1
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                                                                                node-23.7.0/test/fixtures/test-runner/output/abort.js                                               0000664 0000000 0000000 00000003312 14746647661 0022677 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const test = require('node:test');

test('promise timeout signal', { signal: AbortSignal.timeout(1) }, async (t) => {
  await Promise.all([
    t.test('ok 1', async () => {}),
    t.test('ok 2', () => {}),
    t.test('ok 3', { signal: t.signal }, async () => {}),
    t.test('ok 4', { signal: t.signal }, () => {}),
    t.test('not ok 1', () => new Promise(() => {})),
    t.test('not ok 2', (t, done) => {}),
    t.test('not ok 3', { signal: t.signal }, () => new Promise(() => {})),
    t.test('not ok 4', { signal: t.signal }, (t, done) => {}),
    t.test('not ok 5', { signal: t.signal }, (t, done) => {
      t.signal.addEventListener('abort', done);
    }),
  ]);
});

test('promise abort signal', { signal: AbortSignal.abort() }, async (t) => {
  await t.test('should not appear', () => {});
});

test('callback timeout signal', { signal: AbortSignal.timeout(1) }, (t, done) => {
  t.test('ok 1', async () => {});
  t.test('ok 2', () => {});
  t.test('ok 3', { signal: t.signal }, async () => {});
  t.test('ok 4', { signal: t.signal }, () => {});
  t.test('not ok 1', () => new Promise(() => {}));
  t.test('not ok 2', (t, done) => {});
  t.test('not ok 3', { signal: t.signal }, () => new Promise(() => {}));
  t.test('not ok 4', { signal: t.signal }, (t, done) => {});
  t.test('not ok 5', { signal: t.signal }, (t, done) => {
    t.signal.addEventListener('abort', done);
  });
});

test('callback abort signal', { signal: AbortSignal.abort() }, (t, done) => {
  t.test('should not appear', done);
});

// AbortSignal.timeout(1) doesn't prevent process from closing
// thus we have to keep the process open to prevent cancelation
// of the entire test tree
setTimeout(() => {}, 1000);
                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test-runner/output/abort.snapshot                                         0000664 0000000 0000000 00000013534 14746647661 0024131 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: promise timeout signal
    # Subtest: ok 1
    ok 1 - ok 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: ok 2
    ok 2 - ok 2
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: ok 3
    ok 3 - ok 3
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: ok 4
    ok 4 - ok 4
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: not ok 1
    not ok 5 - not ok 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    # Subtest: not ok 2
    not ok 6 - not ok 2
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    # Subtest: not ok 3
    not ok 7 - not ok 3
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'
      failureType: 'testAborted'
      error: 'This operation was aborted'
      code: 20
      name: 'AbortError'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # Subtest: not ok 4
    not ok 8 - not ok 4
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'
      failureType: 'testAborted'
      error: 'This operation was aborted'
      code: 20
      name: 'AbortError'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # Subtest: not ok 5
    not ok 9 - not ok 5
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'
      failureType: 'testAborted'
      error: 'This operation was aborted'
      code: 20
      name: 'AbortError'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    1..9
not ok 1 - promise timeout signal
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'
  failureType: 'testAborted'
  error: 'The operation was aborted due to timeout'
  code: 23
  name: 'TimeoutError'
  stack: |-
    *
    *
    *
    *
  ...
# Subtest: promise abort signal
not ok 2 - promise abort signal
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'
  failureType: 'testAborted'
  error: 'This operation was aborted'
  code: 20
  name: 'AbortError'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: callback timeout signal
    # Subtest: ok 1
    ok 1 - ok 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: ok 2
    ok 2 - ok 2
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: ok 3
    ok 3 - ok 3
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: ok 4
    ok 4 - ok 4
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: not ok 1
    not ok 5 - not ok 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    # Subtest: not ok 2
    not ok 6 - not ok 2
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    # Subtest: not ok 3
    not ok 7 - not ok 3
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'
      failureType: 'testAborted'
      error: 'This operation was aborted'
      code: 20
      name: 'AbortError'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # Subtest: not ok 4
    not ok 8 - not ok 4
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'
      failureType: 'testAborted'
      error: 'This operation was aborted'
      code: 20
      name: 'AbortError'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # Subtest: not ok 5
    not ok 9 - not ok 5
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'
      failureType: 'testAborted'
      error: 'This operation was aborted'
      code: 20
      name: 'AbortError'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    1..9
not ok 3 - callback timeout signal
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'
  failureType: 'testAborted'
  error: 'The operation was aborted due to timeout'
  code: 23
  name: 'TimeoutError'
  stack: |-
    *
    *
    *
    *
  ...
# Subtest: callback abort signal
not ok 4 - callback abort signal
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'
  failureType: 'testAborted'
  error: 'This operation was aborted'
  code: 20
  name: 'AbortError'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
    *
    *
  ...
1..4
# tests 22
# suites 0
# pass 8
# fail 0
# cancelled 14
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/output/abort_hooks.js                                         0000664 0000000 0000000 00000002265 14746647661 0024110 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const { before, beforeEach, describe, it, after, afterEach } = require('node:test');

describe('1 before describe', () => {
  const ac = new AbortController();
  before(() => {
    console.log('before');
    ac.abort()
  }, {signal: ac.signal});

  it('test 1', () => {
    console.log('1.1');
  });
  it('test 2', () => {
    console.log('1.2');
  });
});

describe('2 after describe', () => {
  const ac = new AbortController();
  after(() => {
    console.log('after');
    ac.abort()
  }, {signal: ac.signal});

  it('test 1', () => {
    console.log('2.1');
  });
  it('test 2', () => {
    console.log('2.2');
  });
});

describe('3 beforeEach describe', () => {
  const ac = new AbortController();
  beforeEach(() => {
    console.log('beforeEach');
    ac.abort()
  }, {signal: ac.signal});

  it('test 1', () => {
    console.log('3.1');
  });
  it('test 2', () => {
    console.log('3.2');
  });
});

describe('4 afterEach describe', () => {
  const ac = new AbortController();
  afterEach(() => {
    console.log('afterEach');
    ac.abort()
  }, {signal: ac.signal});

  it('test 1', () => {
    console.log('4.1');
  });
  it('test 2', () => {
    console.log('4.2');
  });
});
                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test-runner/output/abort_hooks.snapshot                                   0000664 0000000 0000000 00000007502 14746647661 0025332 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        before
2.1
2.2
after
beforeEach
4.1
afterEach
4.2
TAP version 13
# Subtest: 1 before describe
    # Subtest: test 1
    not ok 1 - test 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    # Subtest: test 2
    not ok 2 - test 2
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    1..2
not ok 1 - 1 before describe
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'
  failureType: 'hookFailed'
  error: 'This operation was aborted'
  code: 20
  name: 'AbortError'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: 2 after describe
    # Subtest: test 1
    ok 1 - test 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: test 2
    ok 2 - test 2
      ---
      duration_ms: *
      type: 'test'
      ...
    1..2
not ok 2 - 2 after describe
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'
  failureType: 'hookFailed'
  error: 'This operation was aborted'
  code: 20
  name: 'AbortError'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: 3 beforeEach describe
    # Subtest: test 1
    not ok 1 - test 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'
      failureType: 'hookFailed'
      error: 'This operation was aborted'
      code: 20
      name: 'AbortError'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # Subtest: test 2
    not ok 2 - test 2
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'
      failureType: 'hookFailed'
      error: 'This operation was aborted'
      code: 20
      name: 'AbortError'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    1..2
not ok 3 - 3 beforeEach describe
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '2 subtests failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: 4 afterEach describe
    # Subtest: test 1
    not ok 1 - test 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'
      failureType: 'hookFailed'
      error: 'This operation was aborted'
      code: 20
      name: 'AbortError'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # Subtest: test 2
    not ok 2 - test 2
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'
      failureType: 'hookFailed'
      error: 'This operation was aborted'
      code: 20
      name: 'AbortError'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    1..2
not ok 4 - 4 afterEach describe
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '2 subtests failed'
  code: 'ERR_TEST_FAILURE'
  ...
1..4
# tests 8
# suites 4
# pass 2
# fail 4
# cancelled 2
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/output/abort_suite.js                                         0000664 0000000 0000000 00000001654 14746647661 0024117 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const { describe, it } = require('node:test');

describe('describe timeout signal', { signal: AbortSignal.timeout(1) }, (t) => {
  it('ok 1', async () => {});
  it('ok 2', () => {});
  it('ok 3', { signal: t.signal }, async () => {});
  it('ok 4', { signal: t.signal }, () => {});
  it('not ok 1', () => new Promise(() => {}));
  it('not ok 2', (done) => {});
  it('not ok 3', { signal: t.signal }, () => new Promise(() => {}));
  it('not ok 4', { signal: t.signal }, (done) => {});
  it('not ok 5', { signal: t.signal }, function(done) {
    this.signal.addEventListener('abort', done);
  });
});

describe('describe abort signal', { signal: AbortSignal.abort() }, () => {
  it('should not appear', () => {});
});

// AbortSignal.timeout(1) doesn't prevent process from closing
// thus we have to keep the process open to prevent cancelation
// of the entire test tree
setTimeout(() => {}, 1000);
                                                                                    node-23.7.0/test/fixtures/test-runner/output/abort_suite.snapshot                                   0000664 0000000 0000000 00000006022 14746647661 0025334 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: describe timeout signal
    # Subtest: ok 1
    ok 1 - ok 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: ok 2
    ok 2 - ok 2
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: ok 3
    ok 3 - ok 3
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: ok 4
    ok 4 - ok 4
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: not ok 1
    not ok 5 - not ok 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    # Subtest: not ok 2
    not ok 6 - not ok 2
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    # Subtest: not ok 3
    not ok 7 - not ok 3
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'
      failureType: 'testAborted'
      error: 'This operation was aborted'
      code: 20
      name: 'AbortError'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # Subtest: not ok 4
    not ok 8 - not ok 4
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'
      failureType: 'testAborted'
      error: 'This operation was aborted'
      code: 20
      name: 'AbortError'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # Subtest: not ok 5
    not ok 9 - not ok 5
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'
      failureType: 'testAborted'
      error: 'This operation was aborted'
      code: 20
      name: 'AbortError'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    1..9
not ok 1 - describe timeout signal
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'
  failureType: 'testAborted'
  error: 'The operation was aborted due to timeout'
  code: 23
  name: 'TimeoutError'
  stack: |-
    *
    *
    *
    *
  ...
# Subtest: describe abort signal
not ok 2 - describe abort signal
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'
  failureType: 'testAborted'
  error: 'This operation was aborted'
  code: 20
  name: 'AbortError'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
    *
    *
  ...
1..2
# tests 9
# suites 2
# pass 4
# fail 0
# cancelled 5
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/output/arbitrary-output-colored-1.js                          0000664 0000000 0000000 00000000202 14746647661 0026703 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

const test = require('node:test');
console.log({ foo: 'bar' });
test('passing test', () => {
  console.log(1);
});
                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/output/arbitrary-output-colored.js                            0000664 0000000 0000000 00000001177 14746647661 0026561 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const common = require('../../../common');
const { once } = require('node:events');
const { spawn } = require('node:child_process');
const fixtures = require('../../../common/fixtures');

(async function run() {
  const test = fixtures.path('test-runner/output/arbitrary-output-colored-1.js');
  const reset = fixtures.path('test-runner/output/reset-color-depth.js');
  await once(spawn(process.execPath, ['-r', reset, '--test', test], { stdio: 'inherit' }), 'exit');
  await once(spawn(process.execPath, ['-r', reset, '--test', '--test-reporter', 'tap', test], { stdio: 'inherit'  }), 'exit');
})().then(common.mustCall());
                                                                                                                                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/test-runner/output/arbitrary-output-colored.snapshot                      0000664 0000000 0000000 00000000735 14746647661 0030003 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        { foo: [32m'bar'[39m }
[33m1[39m
[32m✔ passing test [90m(*ms)[39m[39m
[34mℹ tests 1[39m
[34mℹ suites 0[39m
[34mℹ pass 1[39m
[34mℹ fail 0[39m
[34mℹ cancelled 0[39m
[34mℹ skipped 0[39m
[34mℹ todo 0[39m
[34mℹ duration_ms *[39m
TAP version 13
# { foo: [32m'bar'[39m }
# [33m1[39m
# Subtest: passing test
ok 1 - passing test
  ---
  duration_ms: *
  type: 'test'
  ...
1..1
# tests 1
# suites 0
# pass 1
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                   node-23.7.0/test/fixtures/test-runner/output/arbitrary-output.js                                    0000664 0000000 0000000 00000001223 14746647661 0025124 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test --expose-internals
'use strict';

const v8_reporter = require('internal/test_runner/reporter/v8-serializer');
const { Buffer } = require('buffer');


(async function () {
  const reported = v8_reporter([
    { type: "test:pass", data: { name: "test", nesting: 0, file: __filename, testNumber: 1, details: { duration_ms: 0 } } }
  ]);

  for await (const chunk of reported) {
    process.stdout.write(chunk);
    process.stdout.write(Buffer.concat([Buffer.from("arbitrary - pre"), chunk]));
    process.stdout.write(Buffer.from("arbitrary - mid"));
    process.stdout.write(Buffer.concat([chunk, Buffer.from("arbitrary - post")]));
  }
})();

                                                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/output/arbitrary-output.snapshot                              0000664 0000000 0000000 00000000440 14746647661 0026347 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
ok 1 - test
  ---
  duration_ms: *
  ...
# arbitrary - pre
ok 2 - test
  ---
  duration_ms: *
  ...
# arbitrary - mid
ok 3 - test
  ---
  duration_ms: *
  ...
# arbitrary - post
1..3
# tests 3
# suites 0
# pass 3
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test-runner/output/assertion-color-tty.mjs                                0000664 0000000 0000000 00000000244 14746647661 0025707 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import assert from 'node:assert/strict'
import { test } from 'node:test'

test('failing assertion', () => {
  assert.strictEqual('!Hello World', 'Hello World!')
})
                                                                                                                                                                                                                                                                                                                                                            node-23.7.0/test/fixtures/test-runner/output/assertion-color-tty.snapshot                           0000664 0000000 0000000 00000001330 14746647661 0026752 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        [31m✖ failing assertion [90m(*ms)[39m[39m
[34mℹ tests 1[39m
[34mℹ suites 0[39m
[34mℹ pass 0[39m
[34mℹ fail 1[39m
[34mℹ cancelled 0[39m
[34mℹ skipped 0[39m
[34mℹ todo 0[39m
[34mℹ duration_ms *[39m

[31m✖ failing tests:[39m

*
[31m✖ failing assertion [90m(*ms)[39m[39m
  [AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:
  [32mactual[39m [31mexpected[39m
  
  [39m'[39m[32m![39m[39mH[39m[39me[39m[39ml[39m[39ml[39m[39mo[39m[39m [39m[39mW[39m[39mo[39m[39mr[39m[39ml[39m[39md[39m[31m![39m[39m'[39m
  ] {
    generatedMessage: [33mtrue[39m,
    code: [32m'ERR_ASSERTION'[39m,
    actual: [32m'!Hello World'[39m,
    expected: [32m'Hello World!'[39m,
    operator: [32m'strictEqual'[39m
  }
                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/output/async-test-scheduling.mjs                              0000664 0000000 0000000 00000000627 14746647661 0026170 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import * as common from '../../../common/index.mjs';
import { describe, test } from 'node:test';
import { setTimeout } from 'node:timers/promises';

test('test', common.mustCall());
describe('suite', common.mustCall(async () => {
  test('test', common.mustCall());
  await setTimeout(10);
  test('scheduled async', common.mustCall());
}));

await setTimeout(10);
test('scheduled async', common.mustCall());
                                                                                                         node-23.7.0/test/fixtures/test-runner/output/async-test-scheduling.snapshot                         0000664 0000000 0000000 00000001076 14746647661 0027235 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: test
ok 1 - test
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: suite
    # Subtest: test
    ok 1 - test
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: scheduled async
    ok 2 - scheduled async
      ---
      duration_ms: *
      type: 'test'
      ...
    1..2
ok 2 - suite
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: scheduled async
ok 3 - scheduled async
  ---
  duration_ms: *
  type: 'test'
  ...
1..3
# tests 4
# suites 1
# pass 4
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test-runner/output/before-and-after-each-too-many-listeners.js            0000664 0000000 0000000 00000000263 14746647661 0031340 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const { beforeEach, afterEach, test} = require("node:test");
beforeEach(() => {});
afterEach(() => {});

for (let i = 1; i <= 11; ++i) {
  test(`${i}`, () => {});
}
                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/output/before-and-after-each-too-many-listeners.snapshot      0000664 0000000 0000000 00000001515 14746647661 0032564 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: 1
ok 1 - 1
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 2
ok 2 - 2
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 3
ok 3 - 3
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 4
ok 4 - 4
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 5
ok 5 - 5
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 6
ok 6 - 6
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 7
ok 7 - 7
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 8
ok 8 - 8
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 9
ok 9 - 9
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 10
ok 10 - 10
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 11
ok 11 - 11
  ---
  duration_ms: *
  type: 'test'
  ...
1..11
# tests 11
# suites 0
# pass 11
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                                   before-and-after-each-with-timeout-too-many-listeners.js                                            0000664 0000000 0000000 00000000327 14746647661 0033717 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/test/fixtures/test-runner/output                                                                                                                           'use strict';
const { beforeEach, afterEach, test} = require("node:test");
beforeEach(() => {}, {timeout: 10000});
afterEach(() => {}, {timeout: 10000});

for (let i = 1; i <= 11; ++i) {
  test(`${i}`, () => {});
}
                                                                                                                                                                                                                                                                                                         before-and-after-each-with-timeout-too-many-listeners.snapshot                                      0000664 0000000 0000000 00000001515 14746647661 0035142 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/test/fixtures/test-runner/output                                                                                                                           TAP version 13
# Subtest: 1
ok 1 - 1
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 2
ok 2 - 2
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 3
ok 3 - 3
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 4
ok 4 - 4
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 5
ok 5 - 5
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 6
ok 6 - 6
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 7
ok 7 - 7
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 8
ok 8 - 8
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 9
ok 9 - 9
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 10
ok 10 - 10
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: 11
ok 11 - 11
  ---
  duration_ms: *
  type: 'test'
  ...
1..11
# tests 11
# suites 0
# pass 11
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                                   node-23.7.0/test/fixtures/test-runner/output/coverage-width-100-uncovered-lines.mjs                 0000664 0000000 0000000 00000000737 14746647661 0030263 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --experimental-test-coverage
// here we can't import common module as the coverage will be different based on the system
// Unused imports are here in order to populate the coverage report
import * as a from '../coverage-snap/b.js';
import * as b from '../coverage-snap/a.js';
import * as c from '../coverage-snap/many-uncovered-lines.js';

import { test } from 'node:test';

process.stdout.columns = 100;

test(`Coverage Print Fixed Width ${process.stdout.columns}`);
                                 node-23.7.0/test/fixtures/test-runner/output/coverage-width-100-uncovered-lines.snapshot            0000664 0000000 0000000 00000003123 14746647661 0031321 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: Coverage Print Fixed Width 100
ok 1 - Coverage Print Fixed Width 100
  ---
  duration_ms: *
  type: 'test'
  ...
1..1
# tests 1
# suites 0
# pass 1
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
# start of coverage report
# --------------------------------------------------------------------------------------------------
# file                                       | line % | branch % | funcs % | uncovered lines
# --------------------------------------------------------------------------------------------------
# test                                       |        |          |         | 
#  fixtures                                  |        |          |         | 
#   test-runner                              |        |          |         | 
#    coverage-snap                           |        |          |         | 
#     a.js                                   |  55.77 |   100.00 |    0.00 | 5-7 9-11 13-15 17-19 …
#     b.js                                   |  45.45 |   100.00 |    0.00 | 5-7 9-11
#     many-uncovered-lines.js                |  50.99 |    42.86 |    1.92 | 5-7 9-11 13-15 17-19 …
#    output                                  |        |          |         | 
#     coverage-width-100-uncovered-lines.mjs | 100.00 |   100.00 |  100.00 | 
# --------------------------------------------------------------------------------------------------
# all files                                  |  52.80 |    60.00 |    1.61 | 
# --------------------------------------------------------------------------------------------------
# end of coverage report
                                                                                                                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/output/coverage-width-100.mjs                                 0000664 0000000 0000000 00000000640 14746647661 0025154 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --experimental-test-coverage
// here we can't import common module as the coverage will be different based on the system
// Unused imports are here in order to populate the coverage report
import * as a from '../coverage-snap/b.js';
import * as b from '../coverage-snap/a.js';

import { test } from 'node:test';

process.stdout.columns = 100;

test(`Coverage Print Fixed Width ${process.stdout.columns}`);
                                                                                                node-23.7.0/test/fixtures/test-runner/output/coverage-width-100.snapshot                            0000664 0000000 0000000 00000002535 14746647661 0026227 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: Coverage Print Fixed Width 100
ok 1 - Coverage Print Fixed Width 100
  ---
  duration_ms: *
  type: 'test'
  ...
1..1
# tests 1
# suites 0
# pass 1
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
# start of coverage report
# --------------------------------------------------------------------------------------------------
# file                       | line % | branch % | funcs % | uncovered lines
# --------------------------------------------------------------------------------------------------
# test                       |        |          |         | 
#  fixtures                  |        |          |         | 
#   test-runner              |        |          |         | 
#    coverage-snap           |        |          |         | 
#     a.js                   |  55.77 |   100.00 |    0.00 | 5-7 9-11 13-15 17-19 29-30 40-42 45-4…
#     b.js                   |  45.45 |   100.00 |    0.00 | 5-7 9-11
#    output                  |        |          |         | 
#     coverage-width-100.mjs | 100.00 |   100.00 |  100.00 | 
# --------------------------------------------------------------------------------------------------
# all files                  |  60.81 |   100.00 |    0.00 | 
# --------------------------------------------------------------------------------------------------
# end of coverage report
                                                                                                                                                                   node-23.7.0/test/fixtures/test-runner/output/coverage-width-150-uncovered-lines.mjs                 0000664 0000000 0000000 00000000737 14746647661 0030270 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --experimental-test-coverage
// here we can't import common module as the coverage will be different based on the system
// Unused imports are here in order to populate the coverage report
import * as a from '../coverage-snap/b.js';
import * as b from '../coverage-snap/a.js';
import * as c from '../coverage-snap/many-uncovered-lines.js';

import { test } from 'node:test';

process.stdout.columns = 150;

test(`Coverage Print Fixed Width ${process.stdout.columns}`);
                                 node-23.7.0/test/fixtures/test-runner/output/coverage-width-150-uncovered-lines.snapshot            0000664 0000000 0000000 00000003541 14746647661 0031332 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: Coverage Print Fixed Width 150
ok 1 - Coverage Print Fixed Width 150
  ---
  duration_ms: *
  type: 'test'
  ...
1..1
# tests 1
# suites 0
# pass 1
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
# start of coverage report
# ----------------------------------------------------------------------------------------------------------------------------------------------------
# file                                       | line % | branch % | funcs % | uncovered lines
# ----------------------------------------------------------------------------------------------------------------------------------------------------
# test                                       |        |          |         | 
#  fixtures                                  |        |          |         | 
#   test-runner                              |        |          |         | 
#    coverage-snap                           |        |          |         | 
#     a.js                                   |  55.77 |   100.00 |    0.00 | 5-7 9-11 13-15 17-19 29-30 40-42 45-47 50-52
#     b.js                                   |  45.45 |   100.00 |    0.00 | 5-7 9-11
#     many-uncovered-lines.js                |  50.99 |    42.86 |    1.92 | 5-7 9-11 13-15 17-19 29-30 40-42 45-47 50-52 55-57 59-61 63-65 67-69 91…
#    output                                  |        |          |         | 
#     coverage-width-150-uncovered-lines.mjs | 100.00 |   100.00 |  100.00 | 
# ----------------------------------------------------------------------------------------------------------------------------------------------------
# all files                                  |  52.80 |    60.00 |    1.61 | 
# ----------------------------------------------------------------------------------------------------------------------------------------------------
# end of coverage report
                                                                                                                                                               node-23.7.0/test/fixtures/test-runner/output/coverage-width-150.mjs                                 0000664 0000000 0000000 00000000640 14746647661 0025161 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --experimental-test-coverage
// here we can't import common module as the coverage will be different based on the system
// Unused imports are here in order to populate the coverage report
import * as a from '../coverage-snap/b.js';
import * as b from '../coverage-snap/a.js';

import { test } from 'node:test';

process.stdout.columns = 150;

test(`Coverage Print Fixed Width ${process.stdout.columns}`);
                                                                                                node-23.7.0/test/fixtures/test-runner/output/coverage-width-150.snapshot                            0000664 0000000 0000000 00000002571 14746647661 0026234 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: Coverage Print Fixed Width 150
ok 1 - Coverage Print Fixed Width 150
  ---
  duration_ms: *
  type: 'test'
  ...
1..1
# tests 1
# suites 0
# pass 1
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
# start of coverage report
# --------------------------------------------------------------------------------------------------------
# file                       | line % | branch % | funcs % | uncovered lines
# --------------------------------------------------------------------------------------------------------
# test                       |        |          |         | 
#  fixtures                  |        |          |         | 
#   test-runner              |        |          |         | 
#    coverage-snap           |        |          |         | 
#     a.js                   |  55.77 |   100.00 |    0.00 | 5-7 9-11 13-15 17-19 29-30 40-42 45-47 50-52
#     b.js                   |  45.45 |   100.00 |    0.00 | 5-7 9-11
#    output                  |        |          |         | 
#     coverage-width-150.mjs | 100.00 |   100.00 |  100.00 | 
# --------------------------------------------------------------------------------------------------------
# all files                  |  60.81 |   100.00 |    0.00 | 
# --------------------------------------------------------------------------------------------------------
# end of coverage report
                                                                                                                                       node-23.7.0/test/fixtures/test-runner/output/coverage-width-40.mjs                                  0000664 0000000 0000000 00000000751 14746647661 0025102 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --experimental-test-coverage
// here we can't import common module as the coverage will be different based on the system
// Unused imports are here in order to populate the coverage report
import * as a from '../coverage-snap/b.js';
import * as b from '../coverage-snap/a.js';
import * as c from '../coverage-snap/a-very-long-long-long-sub-dir/c.js';

import { test } from 'node:test';

process.stdout.columns = 40;

test(`Coverage Print Fixed Width ${process.stdout.columns}`);
                       node-23.7.0/test/fixtures/test-runner/output/coverage-width-40.snapshot                             0000664 0000000 0000000 00000002144 14746647661 0026146 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: Coverage Print Fixed Width 40
ok 1 - Coverage Print Fixed Width 40
  ---
  duration_ms: *
  type: 'test'
  ...
1..1
# tests 1
# suites 0
# pass 1
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
# start of coverage report
# --------------------------------------
# file                | line % | branch % | funcs % | …
# --------------------------------------
# test                |        |          |         | 
#  fixtures           |        |          |         | 
#   test-runner       |        |          |         | 
#    coverage-snap    |        |          |         | 
#     …g-long-sub-dir |        |          |         | 
#      c.js           |  55.77 |   100.00 |    0.00 | …
#     a.js            |  55.77 |   100.00 |    0.00 | …
#     b.js            |  45.45 |   100.00 |    0.00 | …
#    output           |        |          |         | 
#     …e-width-40.mjs | 100.00 |   100.00 |  100.00 | 
# --------------------------------------
# all files           |  59.06 |   100.00 |    0.00 | 
# --------------------------------------
# end of coverage report
                                                                                                                                                                                                                                                                                                                                                                                                                            node-23.7.0/test/fixtures/test-runner/output/coverage-width-80-color.mjs                            0000664 0000000 0000000 00000000676 14746647661 0026230 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --experimental-test-coverage
// here we can't import common module as the coverage will be different based on the system
// Unused imports are here in order to populate the coverage report
import * as a from '../coverage-snap/b.js';
import * as b from '../coverage-snap/a.js';

import { test } from 'node:test';

process.env.FORCE_COLOR = '3';
process.stdout.columns = 80;

test(`Coverage Print Fixed Width ${process.stdout.columns}`);
                                                                  node-23.7.0/test/fixtures/test-runner/output/coverage-width-80-color.snapshot                       0000664 0000000 0000000 00000003136 14746647661 0027270 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        [32m✔ Coverage Print Fixed Width 80 [90m(*ms)[39m[39m
[34mℹ tests 1[39m
[34mℹ suites 0[39m
[34mℹ pass 1[39m
[34mℹ fail 0[39m
[34mℹ cancelled 0[39m
[34mℹ skipped 0[39m
[34mℹ todo 0[39m
[34mℹ duration_ms *[39m
[34mℹ start of coverage report
ℹ ------------------------------------------------------------------------------
ℹ file                              | [31mline %[34m | [31mbranch %[34m | [31mfuncs %[34m | uncovered …
ℹ ------------------------------------------------------------------------------
ℹ test                              | [31m      [34m | [31m        [34m | [31m       [34m | 
ℹ  fixtures                         | [31m      [34m | [31m        [34m | [31m       [34m | 
ℹ   test-runner                     | [31m      [34m | [31m        [34m | [31m       [34m | 
ℹ    coverage-snap                  | [31m      [34m | [31m        [34m | [31m       [34m | 
ℹ     [33ma.js                         [34m | [33m 55.77[34m | [32m  100.00[34m | [31m   0.00[34m | 5-7 9-11 1…
ℹ     [31mb.js                         [34m | [31m 45.45[34m | [32m  100.00[34m | [31m   0.00[34m | 5-7 9-11
ℹ    output                         | [31m      [34m | [31m        [34m | [31m       [34m | 
ℹ     [32mcoverage-width-80-color.mjs  [34m | [32m100.00[34m | [32m  100.00[34m | [32m 100.00[34m | 
ℹ ------------------------------------------------------------------------------
ℹ all files                         | [33m 61.33[34m | [32m  100.00[34m | [31m   0.00[34m | 
ℹ ------------------------------------------------------------------------------
ℹ end of coverage report
[39m                                                                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test-runner/output/coverage-width-80-uncovered-lines-color.mjs            0000664 0000000 0000000 00000000776 14746647661 0031331 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --experimental-test-coverage
// here we can't import common module as the coverage will be different based on the system
// Unused imports are here in order to populate the coverage report
import * as a from '../coverage-snap/b.js';
import * as b from '../coverage-snap/a.js';
import * as c from '../coverage-snap/many-uncovered-lines.js';

import { test } from 'node:test';

process.env.FORCE_COLOR = '3';
process.stdout.columns = 100;

test(`Coverage Print Fixed Width ${process.stdout.columns}`);
  node-23.7.0/test/fixtures/test-runner/output/coverage-width-80-uncovered-lines-color.snapshot       0000664 0000000 0000000 00000003735 14746647661 0032375 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        [32m✔ Coverage Print Fixed Width 100 [90m(*ms)[39m[39m
[34mℹ tests 1[39m
[34mℹ suites 0[39m
[34mℹ pass 1[39m
[34mℹ fail 0[39m
[34mℹ cancelled 0[39m
[34mℹ skipped 0[39m
[34mℹ todo 0[39m
[34mℹ duration_ms *[39m
[34mℹ start of coverage report
ℹ --------------------------------------------------------------------------------------------------
ℹ file                                              | [31mline %[34m | [31mbranch %[34m | [31mfuncs %[34m | uncovered lines
ℹ --------------------------------------------------------------------------------------------------
ℹ test                                              | [31m      [34m | [31m        [34m | [31m       [34m | 
ℹ  fixtures                                         | [31m      [34m | [31m        [34m | [31m       [34m | 
ℹ   test-runner                                     | [31m      [34m | [31m        [34m | [31m       [34m | 
ℹ    coverage-snap                                  | [31m      [34m | [31m        [34m | [31m       [34m | 
ℹ     [33ma.js                                         [34m | [33m 55.77[34m | [32m  100.00[34m | [31m   0.00[34m | 5-7 9-11 13-15…
ℹ     [31mb.js                                         [34m | [31m 45.45[34m | [32m  100.00[34m | [31m   0.00[34m | 5-7 9-11
ℹ     [31mmany-uncovered-lines.js                      [34m | [33m 50.99[34m | [31m   42.86[34m | [31m   1.92[34m | 5-7 9-11 13-15…
ℹ    output                                         | [31m      [34m | [31m        [34m | [31m       [34m | 
ℹ     [32mcoverage-width-80-uncovered-lines-color.mjs  [34m | [32m100.00[34m | [32m  100.00[34m | [32m 100.00[34m | 
ℹ --------------------------------------------------------------------------------------------------
ℹ all files                                         | [33m 52.91[34m | [33m   60.00[34m | [31m   1.61[34m | 
ℹ --------------------------------------------------------------------------------------------------
ℹ end of coverage report
[39m                                   node-23.7.0/test/fixtures/test-runner/output/coverage-width-80-uncovered-lines.mjs                  0000664 0000000 0000000 00000000737 14746647661 0030212 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --experimental-test-coverage
// here we can't import common module as the coverage will be different based on the system
// Unused imports are here in order to populate the coverage report
import * as a from '../coverage-snap/b.js';
import * as b from '../coverage-snap/a.js';
import * as c from '../coverage-snap/many-uncovered-lines.js';

import { test } from 'node:test';

process.stdout.columns = 100;

test(`Coverage Print Fixed Width ${process.stdout.columns}`);
                                 node-23.7.0/test/fixtures/test-runner/output/coverage-width-80-uncovered-lines.snapshot             0000664 0000000 0000000 00000003112 14746647661 0031246 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: Coverage Print Fixed Width 100
ok 1 - Coverage Print Fixed Width 100
  ---
  duration_ms: *
  type: 'test'
  ...
1..1
# tests 1
# suites 0
# pass 1
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
# start of coverage report
# --------------------------------------------------------------------------------------------------
# file                                      | line % | branch % | funcs % | uncovered lines
# --------------------------------------------------------------------------------------------------
# test                                      |        |          |         | 
#  fixtures                                 |        |          |         | 
#   test-runner                             |        |          |         | 
#    coverage-snap                          |        |          |         | 
#     a.js                                  |  55.77 |   100.00 |    0.00 | 5-7 9-11 13-15 17-19 2…
#     b.js                                  |  45.45 |   100.00 |    0.00 | 5-7 9-11
#     many-uncovered-lines.js               |  50.99 |    42.86 |    1.92 | 5-7 9-11 13-15 17-19 2…
#    output                                 |        |          |         | 
#     coverage-width-80-uncovered-lines.mjs | 100.00 |   100.00 |  100.00 | 
# --------------------------------------------------------------------------------------------------
# all files                                 |  52.80 |    60.00 |    1.61 | 
# --------------------------------------------------------------------------------------------------
# end of coverage report
                                                                                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test-runner/output/coverage-width-80.mjs                                  0000664 0000000 0000000 00000000637 14746647661 0025111 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --experimental-test-coverage
// here we can't import common module as the coverage will be different based on the system
// Unused imports are here in order to populate the coverage report
import * as a from '../coverage-snap/b.js';
import * as b from '../coverage-snap/a.js';

import { test } from 'node:test';

process.stdout.columns = 80;

test(`Coverage Print Fixed Width ${process.stdout.columns}`);
                                                                                                 node-23.7.0/test/fixtures/test-runner/output/coverage-width-80.snapshot                             0000664 0000000 0000000 00000002356 14746647661 0026157 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: Coverage Print Fixed Width 80
ok 1 - Coverage Print Fixed Width 80
  ---
  duration_ms: *
  type: 'test'
  ...
1..1
# tests 1
# suites 0
# pass 1
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
# start of coverage report
# ------------------------------------------------------------------------------
# file                      | line % | branch % | funcs % | uncovered lines
# ------------------------------------------------------------------------------
# test                      |        |          |         | 
#  fixtures                 |        |          |         | 
#   test-runner             |        |          |         | 
#    coverage-snap          |        |          |         | 
#     a.js                  |  55.77 |   100.00 |    0.00 | 5-7 9-11 13-15 17-…
#     b.js                  |  45.45 |   100.00 |    0.00 | 5-7 9-11
#    output                 |        |          |         | 
#     coverage-width-80.mjs | 100.00 |   100.00 |  100.00 | 
# ------------------------------------------------------------------------------
# all files                 |  60.81 |   100.00 |    0.00 | 
# ------------------------------------------------------------------------------
# end of coverage report
                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test-runner/output/coverage-width-infinity-uncovered-lines.mjs            0000664 0000000 0000000 00000000744 14746647661 0031612 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --experimental-test-coverage
// here we can't import common module as the coverage will be different based on the system
// Unused imports are here in order to populate the coverage report
import * as a from '../coverage-snap/b.js';
import * as b from '../coverage-snap/a.js';
import * as c from '../coverage-snap/many-uncovered-lines.js';

import { test } from 'node:test';

process.stdout.columns = Infinity;

test(`Coverage Print Fixed Width ${process.stdout.columns}`);
                            node-23.7.0/test/fixtures/test-runner/output/coverage-width-infinity-uncovered-lines.snapshot       0000664 0000000 0000000 00000006644 14746647661 0032665 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: Coverage Print Fixed Width Infinity
ok 1 - Coverage Print Fixed Width Infinity
  ---
  duration_ms: *
  type: 'test'
  ...
1..1
# tests 1
# suites 0
# pass 1
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
# start of coverage report
# -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# file                                            | line % | branch % | funcs % | uncovered lines
# -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# test                                            |        |          |         | 
#  fixtures                                       |        |          |         | 
#   test-runner                                   |        |          |         | 
#    coverage-snap                                |        |          |         | 
#     a.js                                        |  55.77 |   100.00 |    0.00 | 5-7 9-11 13-15 17-19 29-30 40-42 45-47 50-52
#     b.js                                        |  45.45 |   100.00 |    0.00 | 5-7 9-11
#     many-uncovered-lines.js                     |  50.99 |    42.86 |    1.92 | 5-7 9-11 13-15 17-19 29-30 40-42 45-47 50-52 55-57 59-61 63-65 67-69 91-93 96-98 100-102 104-106 111-112 118-119 122-123 127-129 132-136 144-146 150 166-167 173 180 188-189 196-200 207-213 216-218 221-223 226-228 232 236-238 241-243 246-248 251-257 260-262 265-268 271-273 276-280 283-285 288-290 293-295 298-301 304-306 309-312 315-318 321-324 327-329 332-340 343-348 351-353
#    output                                       |        |          |         | 
#     coverage-width-infinity-uncovered-lines.mjs | 100.00 |   100.00 |  100.00 | 
# -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# all files                                       |  52.80 |    60.00 |    1.61 | 
# -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# end of coverage report
                                                                                            node-23.7.0/test/fixtures/test-runner/output/coverage-width-infinity.mjs                            0000664 0000000 0000000 00000000645 14746647661 0026512 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --experimental-test-coverage
// here we can't import common module as the coverage will be different based on the system
// Unused imports are here in order to populate the coverage report
import * as a from '../coverage-snap/b.js';
import * as b from '../coverage-snap/a.js';

import { test } from 'node:test';

process.stdout.columns = Infinity;

test(`Coverage Print Fixed Width ${process.stdout.columns}`);
                                                                                           node-23.7.0/test/fixtures/test-runner/output/coverage-width-infinity.snapshot                       0000664 0000000 0000000 00000002711 14746647661 0027554 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: Coverage Print Fixed Width Infinity
ok 1 - Coverage Print Fixed Width Infinity
  ---
  duration_ms: *
  type: 'test'
  ...
1..1
# tests 1
# suites 0
# pass 1
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
# start of coverage report
# -------------------------------------------------------------------------------------------------------------
# file                            | line % | branch % | funcs % | uncovered lines
# -------------------------------------------------------------------------------------------------------------
# test                            |        |          |         | 
#  fixtures                       |        |          |         | 
#   test-runner                   |        |          |         | 
#    coverage-snap                |        |          |         | 
#     a.js                        |  55.77 |   100.00 |    0.00 | 5-7 9-11 13-15 17-19 29-30 40-42 45-47 50-52
#     b.js                        |  45.45 |   100.00 |    0.00 | 5-7 9-11
#    output                       |        |          |         | 
#     coverage-width-infinity.mjs | 100.00 |   100.00 |  100.00 | 
# -------------------------------------------------------------------------------------------------------------
# all files                       |  60.81 |   100.00 |    0.00 | 
# -------------------------------------------------------------------------------------------------------------
# end of coverage report
                                                       node-23.7.0/test/fixtures/test-runner/output/coverage_failure.js                                    0000664 0000000 0000000 00000000520 14746647661 0025070 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --expose-internals --experimental-test-coverage

'use strict';
require('../../../common');
const { TestCoverage } = require('internal/test_runner/coverage');
const { test, mock } = require('node:test');

mock.method(TestCoverage.prototype, 'summary', () => {
  throw new Error('Failed to collect coverage');
});

test('ok');

                                                                                                                                                                                node-23.7.0/test/fixtures/test-runner/output/coverage_failure.snapshot                              0000664 0000000 0000000 00000000377 14746647661 0026325 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: ok
ok 1 - ok
  ---
  duration_ms: *
  type: 'test'
  ...
1..1
# Warning: Could not report code coverage. Error: Failed to collect coverage
# tests 1
# suites 0
# pass 1
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/test-runner/output/default_output.js                                      0000664 0000000 0000000 00000000750 14746647661 0024637 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
process.env.FORCE_COLOR = '1';
delete process.env.NODE_DISABLE_COLORS;
delete process.env.NO_COLOR;

require('../../../common');
const test = require('node:test');

test('should pass', () => {});
test('should fail', () => { throw new Error('fail'); });
test('should skip', { skip: true }, () => {});
test('parent', (t) => {
  t.test('should fail', () => { throw new Error('fail'); });
  t.test('should pass but parent fail', (t, done) => {
    setImmediate(done);
  });
});
                        node-23.7.0/test/fixtures/test-runner/output/default_output.snapshot                                0000664 0000000 0000000 00000001512 14746647661 0026057 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        [32m✔ should pass [90m(*ms)[39m[39m
[31m✖ should fail [90m(*ms)[39m[39m
[90m﹣ should skip [90m(*ms)[39m # SKIP[39m
▶ parent
  [31m✖ should fail [90m(*ms)[39m[39m
  [31m✖ should pass but parent fail [90m(*ms)[39m[39m
[31m✖ parent [90m(*ms)[39m[39m
[34mℹ tests 6[39m
[34mℹ suites 0[39m
[34mℹ pass 1[39m
[34mℹ fail 3[39m
[34mℹ cancelled 1[39m
[34mℹ skipped 1[39m
[34mℹ todo 0[39m
[34mℹ duration_ms *[39m

[31m✖ failing tests:[39m

*
[31m✖ should fail [90m(*ms)[39m[39m
  Error: fail
      *[39m
  *[39m
  *[39m
  *[39m
  *[39m
  *[39m
  *[39m

*
[31m✖ should fail [90m(*ms)[39m[39m
  Error: fail
      *[39m
  *[39m
  *[39m
  *[39m
  *[39m
      *[39m
  *[39m
  *[39m
  *[39m
  *[39m

*
[31m✖ should pass but parent fail [90m(*ms)[39m[39m
  [32m'test did not finish before its parent and was cancelled'[39m
                                                                                                                                                                                      node-23.7.0/test/fixtures/test-runner/output/describe_it.js                                         0000664 0000000 0000000 00000020575 14746647661 0024056 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const assert = require('node:assert');
const { describe, it, test } = require('node:test');
const util = require('util');


it.todo('sync pass todo', () => {

});

it('sync pass todo with message', { todo: 'this is a passing todo' }, () => {
});

it.todo('sync todo', () => {
  throw new Error('should not count as a failure');
});

it('sync todo with message', { todo: 'this is a failing todo' }, () => {
  throw new Error('should not count as a failure');
});

it.skip('sync skip pass', () => {
});

it('sync skip pass with message', { skip: 'this is skipped' }, () => {
});

it('sync pass', () => {
});

it('sync throw fail', () => {
  throw new Error('thrown from sync throw fail');
});

it.skip('async skip pass', async () => {
});

it('async pass', async () => {

});

test('mixing describe/it and test should work', () => {});

it('async throw fail', async () => {
  throw new Error('thrown from async throw fail');
});

it('async skip fail', async (t, done) => {
  t.skip();
  throw new Error('thrown from async throw fail');
});

it('async assertion fail', async () => {
  // Make sure the assert module is handled.
  assert.strictEqual(true, false);
});

it('resolve pass', () => {
  return Promise.resolve();
});

it('reject fail', () => {
  return Promise.reject(new Error('rejected from reject fail'));
});

it('unhandled rejection - passes but warns', () => {
  Promise.reject(new Error('rejected from unhandled rejection fail'));
});

it('async unhandled rejection - passes but warns', async () => {
  Promise.reject(new Error('rejected from async unhandled rejection fail'));
});

it('immediate throw - passes but warns', () => {
  setImmediate(() => {
    throw new Error('thrown from immediate throw fail');
  });
});

it('immediate reject - passes but warns', () => {
  setImmediate(() => {
    Promise.reject(new Error('rejected from immediate reject fail'));
  });
});

it('immediate resolve pass', () => {
  return new Promise((resolve) => {
    setImmediate(() => {
      resolve();
    });
  });
});

describe('subtest sync throw fail', () => {
  it('+sync throw fail', () => {
    throw new Error('thrown from subtest sync throw fail');
  });
  test('mixing describe/it and test should work', () => {});
});

it('sync throw non-error fail', async () => {
  throw Symbol('thrown symbol from sync throw non-error fail');
});

describe('level 0a', { concurrency: 4 }, () => {
  it('level 1a', async () => {
    const p1a = new Promise((resolve) => {
      setTimeout(() => {
        resolve();
      }, 100);
    });

    return p1a;
  });

  it('level 1b', async () => {
    const p1b = new Promise((resolve) => {
      resolve();
    });

    return p1b;
  });

  it('level 1c', async () => {
    const p1c = new Promise((resolve) => {
      setTimeout(() => {
        resolve();
      }, 200);
    });

    return p1c;
  });

  it('level 1d', async () => {
    const p1c = new Promise((resolve) => {
      setTimeout(() => {
        resolve();
      }, 150);
    });

    return p1c;
  });

  const p0a = new Promise((resolve) => {
    setTimeout(() => {
      resolve();
    }, 300);
  });

  return p0a;
});


describe('invalid subtest - pass but subtest fails', () => {
  setImmediate(() => {
    it('invalid subtest fail', () => {
      throw new Error('this should not be thrown');
    });
  });
});

it.skip('sync skip option', () => {
  throw new Error('this should not be executed');
});

it('sync skip option with message', { skip: 'this is skipped' }, () => {
  throw new Error('this should not be executed');
});

it('sync skip option is false fail', { skip: false }, () => {
  throw new Error('this should be executed');
});

// A test with no arguments provided.
it();

// A test with only a named function provided.
it(function functionOnly() {});

// A test with only an anonymous function provided.
it(() => {});

// A test with only a name provided.
it('test with only a name provided');

// A test with an empty string name.
it('');

// A test with only options provided.
it({ skip: true });

// A test with only a name and options provided.
it('test with a name and options provided', { skip: true });

// A test with only options and a function provided.
it({ skip: true }, function functionAndOptions() {});

it('callback pass', (t, done) => {
  setImmediate(done);
});

it('callback fail', (t, done) => {
  setImmediate(() => {
    done(new Error('callback failure'));
  });
});

it('sync t is this in test', function(t) {
  assert.strictEqual(this, t);
});

it('async t is this in test', async function(t) {
  assert.strictEqual(this, t);
});

it('callback t is this in test', function(t, done) {
  assert.strictEqual(this, t);
  done();
});

it('callback also returns a Promise', async (t, done) => {
  throw new Error('thrown from callback also returns a Promise');
});

it('callback throw', (t, done) => {
  throw new Error('thrown from callback throw');
});

it('callback called twice', (t, done) => {
  done();
  done();
});

it('callback called twice in different ticks', (t, done) => {
  setImmediate(done);
  done();
});

it('callback called twice in future tick', (t, done) => {
  setImmediate(() => {
    done();
    done();
  });
});

it('callback async throw', (t, done) => {
  setImmediate(() => {
    throw new Error('thrown from callback async throw');
  });
});

it('callback async throw after done', (t, done) => {
  setImmediate(() => {
    throw new Error('thrown from callback async throw after done');
  });

  done();
});

it('custom inspect symbol fail', () => {
  const obj = {
    [util.inspect.custom]() {
      return 'customized';
    },
    foo: 1,
  };

  throw obj;
});

it('custom inspect symbol that throws fail', () => {
  const obj = {
    [util.inspect.custom]() {
      throw new Error('bad-inspect');
    },
    foo: 1,
  };

  throw obj;
});

describe('subtest sync throw fails', () => {
  it('sync throw fails at first', () => {
    throw new Error('thrown from subtest sync throw fails at first');
  });
  it('sync throw fails at second', () => {
    throw new Error('thrown from subtest sync throw fails at second');
  });
});

describe('describe sync throw fails', () => {
  it('should not run', () => {});
  throw new Error('thrown from describe');
});

describe('describe async throw fails', async () => {
  it('should not run', () => {});
  throw new Error('thrown from describe');
});

describe('timeouts', () => {
  it('timed out async test', { timeout: 5 }, async () => {
    return new Promise((resolve) => {
      setTimeout(() => {
        // Empty timer so the process doesn't exit before the timeout triggers.
      }, 5);
      setTimeout(resolve, 30_000_000).unref();
    });
  });

  it('timed out callback test', { timeout: 5 }, (t, done) => {
    setTimeout(() => {
        // Empty timer so the process doesn't exit before the timeout triggers.
    }, 5);
    setTimeout(done, 30_000_000).unref();
  });


  it('large timeout async test is ok', { timeout: 30_000_000 }, async () => {
    return new Promise((resolve) => {
      setTimeout(resolve, 10);
    });
  });

  it('large timeout callback test is ok', { timeout: 30_000_000 }, (t, done) => {
    setTimeout(done, 10);
  });
});

describe('successful thenable', () => {
  it('successful thenable', () => {
    let thenCalled = false;
    return {
      get then() {
        if (thenCalled) throw new Error();
        thenCalled = true;
        return (successHandler) => successHandler();
      },
    };
  });

  it('rejected thenable', () => {
    let thenCalled = false;
    return {
      get then() {
        if (thenCalled) throw new Error();
        thenCalled = true;
        return (_, errorHandler) => errorHandler(new Error('custom error'));
      },
    };
  });

  let thenCalled = false;
  return {
    get then() {
      if (thenCalled) throw new Error();
      thenCalled = true;
      return (successHandler) => successHandler();
    },
  };
});

describe('rejected thenable', () => {
  let thenCalled = false;
  return {
    get then() {
      if (thenCalled) throw new Error();
      thenCalled = true;
      return (_, errorHandler) => errorHandler(new Error('custom error'));
    },
  };
});

describe("async describe function", async () => {
  await null;

  await it("it inside describe 1", async () => {
    await null
  });
  await it("it inside describe 2", async () => {
    await null;
  });

  describe("inner describe", async () => {
    await null;

    it("it inside inner describe", async () => {
      await null;
    });
  });
});
                                                                                                                                   node-23.7.0/test/fixtures/test-runner/output/describe_it.snapshot                                   0000664 0000000 0000000 00000044521 14746647661 0025276 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: sync pass todo
ok 1 - sync pass todo # TODO
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync pass todo with message
ok 2 - sync pass todo with message # TODO this is a passing todo
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync todo
not ok 3 - sync todo # TODO
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):4'
  failureType: 'testCodeFailure'
  error: 'should not count as a failure'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: sync todo with message
not ok 4 - sync todo with message # TODO this is a failing todo
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'should not count as a failure'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: sync skip pass
ok 5 - sync skip pass # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync skip pass with message
ok 6 - sync skip pass with message # SKIP this is skipped
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync pass
ok 7 - sync pass
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync throw fail
not ok 8 - sync throw fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from sync throw fail'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: async skip pass
ok 9 - async skip pass # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: async pass
ok 10 - async pass
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: mixing describe/it and test should work
ok 11 - mixing describe/it and test should work
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: async throw fail
not ok 12 - async throw fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from async throw fail'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: async skip fail
not ok 13 - async skip fail # SKIP
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'callbackAndPromisePresent'
  error: 'passed a callback but also returned a Promise'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: async assertion fail
not ok 14 - async assertion fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: |-
    Expected values to be strictly equal:
    
    true !== false
    
  code: 'ERR_ASSERTION'
  name: 'AssertionError'
  expected: false
  actual: true
  operator: 'strictEqual'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: resolve pass
ok 15 - resolve pass
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: reject fail
not ok 16 - reject fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'rejected from reject fail'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: unhandled rejection - passes but warns
ok 17 - unhandled rejection - passes but warns
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: async unhandled rejection - passes but warns
ok 18 - async unhandled rejection - passes but warns
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: immediate throw - passes but warns
ok 19 - immediate throw - passes but warns
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: immediate reject - passes but warns
ok 20 - immediate reject - passes but warns
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: immediate resolve pass
ok 21 - immediate resolve pass
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: subtest sync throw fail
    # Subtest: +sync throw fail
    not ok 1 - +sync throw fail
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'
      failureType: 'testCodeFailure'
      error: 'thrown from subtest sync throw fail'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        new Promise (<anonymous>)
        *
        *
        Array.map (<anonymous>)
      ...
    # Subtest: mixing describe/it and test should work
    ok 2 - mixing describe/it and test should work
      ---
      duration_ms: *
      type: 'test'
      ...
    1..2
not ok 22 - subtest sync throw fail
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '1 subtest failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: sync throw non-error fail
not ok 23 - sync throw non-error fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'Symbol(thrown symbol from sync throw non-error fail)'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: level 0a
    # Subtest: level 1a
    ok 1 - level 1a
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: level 1b
    ok 2 - level 1b
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: level 1c
    ok 3 - level 1c
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: level 1d
    ok 4 - level 1d
      ---
      duration_ms: *
      type: 'test'
      ...
    1..4
ok 24 - level 0a
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: invalid subtest - pass but subtest fails
ok 25 - invalid subtest - pass but subtest fails
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: sync skip option
ok 26 - sync skip option # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync skip option with message
ok 27 - sync skip option with message # SKIP this is skipped
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync skip option is false fail
not ok 28 - sync skip option is false fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'this should be executed'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: <anonymous>
ok 29 - <anonymous>
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: functionOnly
ok 30 - functionOnly
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: <anonymous>
ok 31 - <anonymous>
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: test with only a name provided
ok 32 - test with only a name provided
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: <anonymous>
ok 33 - <anonymous>
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: <anonymous>
ok 34 - <anonymous> # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: test with a name and options provided
ok 35 - test with a name and options provided # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: functionAndOptions
ok 36 - functionAndOptions # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: callback pass
ok 37 - callback pass
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: callback fail
not ok 38 - callback fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'callback failure'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
  ...
# Subtest: sync t is this in test
ok 39 - sync t is this in test
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: async t is this in test
ok 40 - async t is this in test
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: callback t is this in test
ok 41 - callback t is this in test
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: callback also returns a Promise
not ok 42 - callback also returns a Promise
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'callbackAndPromisePresent'
  error: 'passed a callback but also returned a Promise'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: callback throw
not ok 43 - callback throw
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from callback throw'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: callback called twice
not ok 44 - callback called twice
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'multipleCallbackInvocations'
  error: 'callback invoked multiple times'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
  ...
# Subtest: callback called twice in different ticks
ok 45 - callback called twice in different ticks
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: callback called twice in future tick
not ok 46 - callback called twice in future tick
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'uncaughtException'
  error: 'callback invoked multiple times'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
  ...
# Subtest: callback async throw
not ok 47 - callback async throw
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'uncaughtException'
  error: 'thrown from callback async throw'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
  ...
# Subtest: callback async throw after done
ok 48 - callback async throw after done
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: custom inspect symbol fail
not ok 49 - custom inspect symbol fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'customized'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: custom inspect symbol that throws fail
not ok 50 - custom inspect symbol that throws fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: |-
    {
      foo: 1,
      [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]
    }
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: subtest sync throw fails
    # Subtest: sync throw fails at first
    not ok 1 - sync throw fails at first
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'
      failureType: 'testCodeFailure'
      error: 'thrown from subtest sync throw fails at first'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        new Promise (<anonymous>)
        *
        *
        Array.map (<anonymous>)
      ...
    # Subtest: sync throw fails at second
    not ok 2 - sync throw fails at second
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'
      failureType: 'testCodeFailure'
      error: 'thrown from subtest sync throw fails at second'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        async Promise.all (index 0)
        *
        *
      ...
    1..2
not ok 51 - subtest sync throw fails
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '2 subtests failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: describe sync throw fails
    # Subtest: should not run
    not ok 1 - should not run
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    1..1
not ok 52 - describe sync throw fails
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from describe'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: describe async throw fails
    # Subtest: should not run
    not ok 1 - should not run
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    1..1
not ok 53 - describe async throw fails
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from describe'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: timeouts
    # Subtest: timed out async test
    not ok 1 - timed out async test
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'
      failureType: 'testTimeoutFailure'
      error: 'test timed out after 5ms'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        async Promise.all (index 0)
      ...
    # Subtest: timed out callback test
    not ok 2 - timed out callback test
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'
      failureType: 'testTimeoutFailure'
      error: 'test timed out after 5ms'
      code: 'ERR_TEST_FAILURE'
      ...
    # Subtest: large timeout async test is ok
    ok 3 - large timeout async test is ok
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: large timeout callback test is ok
    ok 4 - large timeout callback test is ok
      ---
      duration_ms: *
      type: 'test'
      ...
    1..4
not ok 54 - timeouts
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '2 subtests failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: successful thenable
    # Subtest: successful thenable
    ok 1 - successful thenable
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: rejected thenable
    not ok 2 - rejected thenable
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'
      failureType: 'testCodeFailure'
      error: 'custom error'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
      ...
    1..2
not ok 55 - successful thenable
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '1 subtest failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: rejected thenable
not ok 56 - rejected thenable
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'custom error'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
  ...
# Subtest: async describe function
    # Subtest: it inside describe 1
    ok 1 - it inside describe 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: it inside describe 2
    ok 2 - it inside describe 2
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: inner describe
        # Subtest: it inside inner describe
        ok 1 - it inside inner describe
          ---
          duration_ms: *
          type: 'test'
          ...
        1..1
    ok 3 - inner describe
      ---
      duration_ms: *
      type: 'suite'
      ...
    1..3
ok 57 - async describe function
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: invalid subtest fail
not ok 58 - invalid subtest fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):5'
  failureType: 'parentAlreadyFinished'
  error: 'test could not be started because its parent finished'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
  ...
1..58
# Error: Test "unhandled rejection - passes but warns" at test/fixtures/test-runner/output/describe_it.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from unhandled rejection fail" and would have caused the test to fail, but instead triggered an unhandledRejection event.
# Error: Test "async unhandled rejection - passes but warns" at test/fixtures/test-runner/output/describe_it.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from async unhandled rejection fail" and would have caused the test to fail, but instead triggered an unhandledRejection event.
# Error: Test "immediate throw - passes but warns" at test/fixtures/test-runner/output/describe_it.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error: thrown from immediate throw fail" and would have caused the test to fail, but instead triggered an uncaughtException event.
# Error: Test "immediate reject - passes but warns" at test/fixtures/test-runner/output/describe_it.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from immediate reject fail" and would have caused the test to fail, but instead triggered an unhandledRejection event.
# Error: Test "callback called twice in different ticks" at test/fixtures/test-runner/output/describe_it.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error [ERR_TEST_FAILURE]: callback invoked multiple times" and would have caused the test to fail, but instead triggered an uncaughtException event.
# Error: Test "callback async throw after done" at test/fixtures/test-runner/output/describe_it.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error: thrown from callback async throw after done" and would have caused the test to fail, but instead triggered an uncaughtException event.
# tests 67
# suites 11
# pass 31
# fail 19
# cancelled 4
# skipped 9
# todo 4
# duration_ms *
                                                                                                                                                                               node-23.7.0/test/fixtures/test-runner/output/describe_nested.js                                     0000664 0000000 0000000 00000000303 14746647661 0024707 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const { describe, it } = require('node:test');

describe('nested - no tests', () => {
  describe('nested', () => {
    it('nested', () => {});
  });
});
                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/output/describe_nested.snapshot                               0000664 0000000 0000000 00000000710 14746647661 0026134 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: nested - no tests
    # Subtest: nested
        # Subtest: nested
        ok 1 - nested
          ---
          duration_ms: *
          type: 'test'
          ...
        1..1
    ok 1 - nested
      ---
      duration_ms: *
      type: 'suite'
      ...
    1..1
ok 1 - nested - no tests
  ---
  duration_ms: *
  type: 'suite'
  ...
1..1
# tests 1
# suites 2
# pass 1
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                        node-23.7.0/test/fixtures/test-runner/output/dot_output_custom_columns.js                           0000664 0000000 0000000 00000001011 14746647661 0027122 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-reporter=dot
'use strict';
process.stdout.columns = 30;
process.env.FORCE_COLOR = '1';
delete process.env.NODE_DISABLE_COLORS;
delete process.env.NO_COLOR;

const test = require('node:test');
const { setTimeout } = require('timers/promises');

for (let i = 0; i < 100; i++) {
  test(i + ' example', async () => {
    if (i === 0) {
      // So the reporter will run before all tests has started
      await setTimeout(10);
    }
    // resize
    if (i === 28)
      process.stdout.columns = 41;
  });
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/test-runner/output/dot_output_custom_columns.snapshot                     0000664 0000000 0000000 00000001443 14746647661 0030356 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m
[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m
[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m
                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/output/dot_reporter.js                                        0000664 0000000 0000000 00000000445 14746647661 0024304 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const fixtures = require('../../../common/fixtures');
const spawn = require('node:child_process').spawn;

spawn(process.execPath,
      ['--no-warnings', '--test-reporter', 'dot', fixtures.path('test-runner/output/output.js')], { stdio: 'inherit' });
                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test-runner/output/dot_reporter.snapshot                                  0000664 0000000 0000000 00000010114 14746647661 0025521 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        ..XX...X..XXX.X.....
XXX.....X..X...X....
.....X...XXX.XX.....
XXXXXXX...XXXXX

Failed tests:

✖ sync fail todo (*ms) # TODO
  Error: thrown from sync fail todo
      *
      *
      *
      *
      *
      *
      *
✖ sync fail todo with message (*ms) # this is a failing todo
  Error: thrown from sync fail todo with message
      *
      *
      *
      *
      *
      *
      *
✖ sync throw fail (*ms)
  Error: thrown from sync throw fail
      *
      *
      *
      *
      *
      *
      *
✖ async throw fail (*ms)
  Error: thrown from async throw fail
      *
      *
      *
      *
      *
      *
      *
﹣ async skip fail (*ms) # SKIP
  Error: thrown from async throw fail
      *
      *
      *
      *
      *
      *
      *
✖ async assertion fail (*ms)
  AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:
  
  true !== false
  
      *
      *
      *
      *
      *
      *
      * {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: true,
    expected: false,
    operator: 'strictEqual'
  }
✖ reject fail (*ms)
  Error: rejected from reject fail
      *
      *
      *
      *
      *
      *
      *
✖ +sync throw fail (*ms)
  Error: thrown from subtest sync throw fail
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *
✖ subtest sync throw fail (*ms)
  '1 subtest failed'
✖ sync throw non-error fail (*ms)
  Symbol(thrown symbol from sync throw non-error fail)
✖ +long running (*ms)
  'test did not finish before its parent and was cancelled'
✖ top level (*ms)
  '1 subtest failed'
✖ sync skip option is false fail (*ms)
  Error: this should be executed
      *
      *
      *
      *
      *
      *
      *
✖ callback fail (*ms)
  Error: callback failure
      *
      *
✖ callback also returns a Promise (*ms)
  'passed a callback but also returned a Promise'
✖ callback throw (*ms)
  Error: thrown from callback throw
      *
      *
      *
      *
      *
      *
      *
✖ callback called twice (*ms)
  'callback invoked multiple times'
✖ callback called twice in future tick (*ms)
  Error [ERR_TEST_FAILURE]: callback invoked multiple times
      * {
    code: 'ERR_TEST_FAILURE',
    failureType: 'multipleCallbackInvocations',
    cause: 'callback invoked multiple times'
  }
✖ callback async throw (*ms)
  Error: thrown from callback async throw
      *
      *
✖ custom inspect symbol fail (*ms)
  customized
✖ custom inspect symbol that throws fail (*ms)
  { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }
✖ sync throw fails at first (*ms)
  Error: thrown from subtest sync throw fails at first
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *
✖ sync throw fails at second (*ms)
  Error: thrown from subtest sync throw fails at second
      *
      *
      *
      *
      *
      *
      *
      *
✖ subtest sync throw fails (*ms)
  '2 subtests failed'
✖ timed out async test (*ms)
  'test timed out after *ms'
✖ timed out callback test (*ms)
  'test timed out after *ms'
✖ rejected thenable (*ms)
  'custom error'
✖ unfinished test with uncaughtException (*ms)
  Error: foo
      *
      *
      *
✖ unfinished test with unhandledRejection (*ms)
  Error: bar
      *
      *
      *
✖ assertion errors display actual and expected properly (*ms)
  AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:
  
  {
    bar: 1,
    baz: {
      date: 1970-01-01T00:00:00.000Z,
      null: null,
      number: 1,
      string: 'Hello',
      undefined: undefined
    },
    boo: [
      1
    ],
    foo: 1
  }
  
  should loosely deep-equal
  
  {
    baz: {
      date: 1970-01-01T00:00:00.000Z,
      null: null,
      number: 1,
      string: 'Hello',
      undefined: undefined
    },
    boo: [
      1
    ],
    circular: <ref *1> {
      bar: 2,
      c: [Circular *1]
    }
  }
      * {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: [Object],
    expected: [Object],
    operator: 'deepEqual'
  }
✖ invalid subtest fail (*ms)
  'test could not be started because its parent finished'
                                                                                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/output/eval_dot.js                                            0000664 0000000 0000000 00000000256 14746647661 0023371 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-reporter=dot
'use strict';
eval(`
  const { test } = require('node:test');

  test('passes');
  test('fails', () => {
    throw new Error('fail');
  });
`);
                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test-runner/output/eval_dot.snapshot                                      0000664 0000000 0000000 00000000151 14746647661 0024606 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        .X

Failed tests:

✖ fails (*ms)
  Error: fail
      *
      *
      *
      *
      *
      *
      *
                                                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/test-runner/output/eval_spec.js                                           0000664 0000000 0000000 00000000257 14746647661 0023536 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-reporter=spec
'use strict';
eval(`
  const { test } = require('node:test');

  test('passes');
  test('fails', () => {
    throw new Error('fail');
  });
`);
                                                                                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/test-runner/output/eval_spec.snapshot                                     0000664 0000000 0000000 00000000366 14746647661 0024762 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        ✔ passes (*ms)
✖ fails (*ms)
ℹ tests 2
ℹ suites 0
ℹ pass 1
ℹ fail 1
ℹ cancelled 0
ℹ skipped 0
ℹ todo 0
ℹ duration_ms *

✖ failing tests:

✖ fails (*ms)
  Error: fail
      *
      *
      *
      *
      *
      *
      *
                                                                                                                                                                                                                                                                          node-23.7.0/test/fixtures/test-runner/output/eval_tap.js                                            0000664 0000000 0000000 00000000256 14746647661 0023367 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-reporter=tap
'use strict';
eval(`
  const { test } = require('node:test');

  test('passes');
  test('fails', () => {
    throw new Error('fail');
  });
`);
                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test-runner/output/eval_tap.snapshot                                      0000664 0000000 0000000 00000000612 14746647661 0024606 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: passes
ok 1 - passes
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: fails
not ok 2 - fails
  ---
  duration_ms: *
  type: 'test'
  failureType: 'testCodeFailure'
  error: 'fail'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
1..2
# tests 2
# suites 0
# pass 1
# fail 1
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                                                                                      node-23.7.0/test/fixtures/test-runner/output/filtered-suite-delayed-build.js                        0000664 0000000 0000000 00000000560 14746647661 0027221 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-name-pattern=enabled
'use strict';
const common = require('../../../common');
const { suite, test } = require('node:test');

suite('async suite', async () => {
  await 1;
  test('enabled 1', common.mustCall());
  await 1;
  test('not run', common.mustNotCall());
  await 1;
});

suite('sync suite', () => {
  test('enabled 2', common.mustCall());
});
                                                                                                                                                node-23.7.0/test/fixtures/test-runner/output/filtered-suite-delayed-build.snapshot                  0000664 0000000 0000000 00000001000 14746647661 0030432 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: async suite
    # Subtest: enabled 1
    ok 1 - enabled 1
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 1 - async suite
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: sync suite
    # Subtest: enabled 2
    ok 1 - enabled 2
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 2 - sync suite
  ---
  duration_ms: *
  type: 'suite'
  ...
1..2
# tests 2
# suites 2
# pass 2
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
node-23.7.0/test/fixtures/test-runner/output/filtered-suite-order.mjs                               0000664 0000000 0000000 00000001652 14746647661 0026010 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-only
import { describe, test, after } from 'node:test';

after(() => { console.log('with global after()'); });
await Promise.resolve();

console.log('Execution order was:');
const ll = (t) => { console.log(` * ${t.fullName}`) };

describe('A', () => {
  test.only('A', ll);
  test('B', ll);
  describe.only('C', () => {
    test.only('A', ll);
    test('B', ll);
  });
  describe('D', () => {
    test.only('A', ll);
    test('B', ll);
  });
});
describe.only('B', () => {
  test('A', ll);
  test('B', ll);
  describe('C', () => {
    test('A', ll);
  });
});
describe('C', () => {
  test.only('A', ll);
  test('B', ll);
  describe.only('C', () => {
    test('A', ll);
    test('B', ll);
  });
  describe('D', () => {
    test('A', ll);
    test.only('B', ll);
  });
});
describe('D', () => {
  test('A', ll);
  test.only('B', ll);
});
describe.only('E', () => {
  test('A', ll);
  test('B', ll);
});
test.only('F', ll);
                                                                                      node-23.7.0/test/fixtures/test-runner/output/filtered-suite-order.snapshot                          0000664 0000000 0000000 00000005024 14746647661 0027053 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        Execution order was:
 * A > A
 * A > C > A
 * A > D > A
 * B > A
 * B > B
 * B > C > A
 * C > A
 * C > C > A
 * C > C > B
 * C > D > B
 * D > B
 * E > A
 * E > B
 * F
with global after()
TAP version 13
# Subtest: A
    # Subtest: A
    ok 1 - A
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: C
        # Subtest: A
        ok 1 - A
          ---
          duration_ms: *
          type: 'test'
          ...
        1..1
    ok 2 - C
      ---
      duration_ms: *
      type: 'suite'
      ...
    # Subtest: D
        # Subtest: A
        ok 1 - A
          ---
          duration_ms: *
          type: 'test'
          ...
        1..1
    ok 3 - D
      ---
      duration_ms: *
      type: 'suite'
      ...
    1..3
ok 1 - A
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: B
    # Subtest: A
    ok 1 - A
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: B
    ok 2 - B
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: C
        # Subtest: A
        ok 1 - A
          ---
          duration_ms: *
          type: 'test'
          ...
        1..1
    ok 3 - C
      ---
      duration_ms: *
      type: 'suite'
      ...
    1..3
ok 2 - B
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: C
    # Subtest: A
    ok 1 - A
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: C
        # Subtest: A
        ok 1 - A
          ---
          duration_ms: *
          type: 'test'
          ...
        # Subtest: B
        ok 2 - B
          ---
          duration_ms: *
          type: 'test'
          ...
        1..2
    ok 2 - C
      ---
      duration_ms: *
      type: 'suite'
      ...
    # Subtest: D
        # Subtest: B
        ok 1 - B
          ---
          duration_ms: *
          type: 'test'
          ...
        1..1
    ok 3 - D
      ---
      duration_ms: *
      type: 'suite'
      ...
    1..3
ok 3 - C
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: D
    # Subtest: B
    ok 1 - B
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 4 - D
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: E
    # Subtest: A
    ok 1 - A
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: B
    ok 2 - B
      ---
      duration_ms: *
      type: 'test'
      ...
    1..2
ok 5 - E
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: F
ok 6 - F
  ---
  duration_ms: *
  type: 'test'
  ...
1..6
# tests 14
# suites 10
# pass 14
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            node-23.7.0/test/fixtures/test-runner/output/filtered-suite-throws.js                               0000664 0000000 0000000 00000000575 14746647661 0026051 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-name-pattern=enabled
'use strict';
const common = require('../../../common');
const { suite, test } = require('node:test');

suite('suite 1', () => {
  throw new Error('boom 1');
  test('enabled - should not run', common.mustNotCall());
});

suite('suite 2', () => {
  test('enabled - should get cancelled', common.mustNotCall());
  throw new Error('boom 1');
});
                                                                                                                                   node-23.7.0/test/fixtures/test-runner/output/filtered-suite-throws.snapshot                         0000664 0000000 0000000 00000002150 14746647661 0027263 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: suite 1
not ok 1 - suite 1
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/filtered-suite-throws.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'boom 1'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: suite 2
    # Subtest: enabled - should get cancelled
    not ok 1 - enabled - should get cancelled
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/filtered-suite-throws.js:(LINE):3'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    1..1
not ok 2 - suite 2
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/filtered-suite-throws.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'boom 1'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
    *
    *
  ...
1..2
# tests 1
# suites 2
# pass 0
# fail 0
# cancelled 1
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/output/force_exit.js                                          0000664 0000000 0000000 00000000755 14746647661 0023727 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-force-exit --test-reporter=spec
'use strict';
const { after, afterEach, before, beforeEach, test } = require('node:test');

before(() => {
  console.log('BEFORE');
});

beforeEach(() => {
  console.log('BEFORE EACH');
});

after(() => {
  console.log('AFTER');
});

afterEach(() => {
  console.log('AFTER EACH');
});

test('passes but oops', () => {
  setTimeout(() => {
    throw new Error('this should not have a chance to be thrown');
  }, 1000);
});

test('also passes');
                   node-23.7.0/test/fixtures/test-runner/output/force_exit.snapshot                                    0000664 0000000 0000000 00000000325 14746647661 0025143 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        BEFORE
BEFORE EACH
AFTER EACH
BEFORE EACH
AFTER EACH
AFTER
✔ passes but oops (*ms)
✔ also passes (*ms)
ℹ tests 2
ℹ suites 0
ℹ pass 2
ℹ fail 0
ℹ cancelled 0
ℹ skipped 0
ℹ todo 0
ℹ duration_ms *
                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test-runner/output/global-hooks-with-no-tests.js                          0000664 0000000 0000000 00000000324 14746647661 0026674 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const common = require('../../../common');
const { before, after } = require('node:test');

before(common.mustCall(() => console.log('before')));
after(common.mustCall(() => console.log('after')));
                                                                                                                                                                                                                                                                                                            node-23.7.0/test/fixtures/test-runner/output/global-hooks-with-no-tests.snapshot                    0000664 0000000 0000000 00000000173 14746647661 0030121 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        before
TAP version 13
after
1..0
# tests 0
# suites 0
# pass 0
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test-runner/output/global_after_should_fail_the_test.js                   0000664 0000000 0000000 00000000276 14746647661 0030467 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const { it, after } = require('node:test');

after(() => {
  throw new Error('this should fail the test')
});

it('this is a test', () => {
  console.log('this is a test')
});
                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test-runner/output/global_after_should_fail_the_test.snapshot             0000664 0000000 0000000 00000001076 14746647661 0031711 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        this is a test
TAP version 13
# Subtest: this is a test
ok 1 - this is a test
  ---
  duration_ms: *
  type: 'test'
  ...
not ok 2 - /test/fixtures/test-runner/output/global_after_should_fail_the_test.js
  ---
  duration_ms: *
  location: '/test/fixtures/test-runner/output/global_after_should_fail_the_test.js:(LINE):1'
  failureType: 'hookFailed'
  error: 'this should fail the test'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
  ...
1..1
# tests 1
# suites 0
# pass 1
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test-runner/output/hooks-with-no-global-test.js                           0000664 0000000 0000000 00000003472 14746647661 0026520 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const { test, describe, it, before, after, beforeEach, afterEach } = require('node:test');
const assert = require("assert");

// This file should not have any global tests to reproduce bug #48844
const testArr = [];

before(() => testArr.push('global before'));
after(() => {
  testArr.push('global after');

  assert.deepStrictEqual(testArr, [
    'global before',
    'describe before',

    'describe beforeEach',
    'describe it 1',
    'describe afterEach',

    'describe beforeEach',
    'describe test 2',
    'describe afterEach',

    'describe nested before',

    'describe beforeEach',
    'describe nested beforeEach',
    'describe nested it 1',
    'describe nested afterEach',
    'describe afterEach',

    'describe beforeEach',
    'describe nested beforeEach',
    'describe nested test 2',
    'describe nested afterEach',
    'describe afterEach',

    'describe nested after',
    'describe after',
    'global after',
  ]);
});

describe('describe hooks with no global tests', () => {
  before(() => {
    testArr.push('describe before');
  });
  after(()=> {
    testArr.push('describe after');
  });
  beforeEach(() => {
    testArr.push('describe beforeEach');
  });
  afterEach(() => {
    testArr.push('describe afterEach');
  });

  it('1', () => testArr.push('describe it 1'));
  test('2', () => testArr.push('describe test 2'));

  describe('nested', () => {
    before(() => {
      testArr.push('describe nested before')
    });
    after(() => {
      testArr.push('describe nested after')
    });
    beforeEach(() => {
      testArr.push('describe nested beforeEach')
    });
    afterEach(() => {
      testArr.push('describe nested afterEach')
    });

    it('nested 1', () => testArr.push('describe nested it 1'));
    test('nested 2', () => testArr.push('describe nested test 2'));
  });
});
                                                                                                                                                                                                      node-23.7.0/test/fixtures/test-runner/output/hooks-with-no-global-test.snapshot                     0000664 0000000 0000000 00000001444 14746647661 0027740 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: describe hooks with no global tests
    # Subtest: 1
    ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: 2
    ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: nested
        # Subtest: nested 1
        ok 1 - nested 1
          ---
          duration_ms: *
          type: 'test'
          ...
        # Subtest: nested 2
        ok 2 - nested 2
          ---
          duration_ms: *
          type: 'test'
          ...
        1..2
    ok 3 - nested
      ---
      duration_ms: *
      type: 'suite'
      ...
    1..3
ok 1 - describe hooks with no global tests
  ---
  duration_ms: *
  type: 'suite'
  ...
1..1
# tests 4
# suites 2
# pass 4
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                                                                            node-23.7.0/test/fixtures/test-runner/output/hooks.js                                               0000664 0000000 0000000 00000021507 14746647661 0022721 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const common = require('../../../common');
const assert = require('assert');
const { test, describe, it, before, after, beforeEach, afterEach } = require('node:test');
const { setTimeout } = require('node:timers/promises');

before((t) => t.diagnostic('before 1 called'));
after((t) => t.diagnostic('after 1 called'));

describe('describe hooks', () => {
  const testArr = [];
  before(function() {
    testArr.push('before ' + this.name);
  });
  after(common.mustCall(function() {
    testArr.push('after ' + this.name);
    assert.deepStrictEqual(testArr, [
      'before describe hooks',
      'beforeEach 1', '1', 'afterEach 1',
      'beforeEach 2', '2', 'afterEach 2',
      'before nested',
      'beforeEach nested 1', '+beforeEach nested 1', 'nested 1', '+afterEach nested 1', 'afterEach nested 1',
      'beforeEach nested 2', '+beforeEach nested 2', 'nested 2', '+afterEach nested 2', 'afterEach nested 2',
      'after nested',
      'after describe hooks',
    ]);
  }));
  beforeEach(function() {
    testArr.push('beforeEach ' + this.name);
  });
  afterEach(function() {
    testArr.push('afterEach ' + this.name);
  });

  it('1', () => testArr.push('1'));
  test('2', () => testArr.push('2'));

  describe('nested', () => {
    before(function() {
      testArr.push('before ' + this.name);
    });
    after(function() {
      testArr.push('after ' + this.name);
    });
    beforeEach(function() {
      testArr.push('+beforeEach ' + this.name);
    });
    afterEach(function() {
      testArr.push('+afterEach ' + this.name);
    });
    it('nested 1', () => testArr.push('nested 1'));
    test('nested 2', () => testArr.push('nested 2'));
  });
});

describe('describe hooks - no subtests', () => {
  const testArr = [];
  before(function() {
    testArr.push('before ' + this.name);
  });
  after(common.mustCall(function() {
    testArr.push('after ' + this.name);
    assert.deepStrictEqual(testArr, [
      'before describe hooks - no subtests',
      'after describe hooks - no subtests',
    ]);
  }));
  beforeEach(common.mustNotCall());
  afterEach(common.mustNotCall());
});

describe('before throws', () => {
  before(() => { throw new Error('before'); });
  it('1', () => {});
  test('2', () => {});
});

describe('before throws - no subtests', () => {
  before(() => { throw new Error('before'); });
  after(common.mustCall());
});

describe('after throws', () => {
  after(() => { throw new Error('after'); });
  it('1', () => {});
  test('2', () => {});
});

describe('after throws - no subtests', () => {
  after(() => { throw new Error('after'); });
});

describe('beforeEach throws', () => {
  beforeEach(() => { throw new Error('beforeEach'); });
  it('1', () => {});
  test('2', () => {});
});

describe('afterEach throws', () => {
  afterEach(() => { throw new Error('afterEach'); });
  it('1', () => {});
  test('2', () => {});
});

describe('afterEach when test fails', () => {
  afterEach(common.mustCall(2));
  it('1', () => { throw new Error('test'); });
  test('2', () => {});
});

describe('afterEach throws and test fails', () => {
  afterEach(() => { throw new Error('afterEach'); });
  it('1', () => { throw new Error('test'); });
  test('2', () => {});
});

test('test hooks', async (t) => {
  const testArr = [];

  t.before((t) => testArr.push('before ' + t.name));
  t.after(common.mustCall((t) => testArr.push('after ' + t.name)));
  t.beforeEach((t) => testArr.push('beforeEach ' + t.name));
  t.afterEach((t) => testArr.push('afterEach ' + t.name));
  await t.test('1', () => testArr.push('1'));
  await t.test('2', () => testArr.push('2'));

  await t.test('nested', async (t) => {
    t.before((t) => testArr.push('nested before ' + t.name));
    t.after((t) => testArr.push('nested after ' + t.name));
    t.beforeEach((t) => testArr.push('nested beforeEach ' + t.name));
    t.afterEach((t) => testArr.push('nested afterEach ' + t.name));
    await t.test('nested 1', () => testArr.push('nested1'));
    await t.test('nested 2', () => testArr.push('nested 2'));
  });

  t.after(common.mustCall(() => {
    assert.deepStrictEqual(testArr, [
      'before test hooks',
      'beforeEach 1', '1', 'afterEach 1',
      'beforeEach 2', '2', 'afterEach 2',
      'beforeEach nested',
      'nested before nested',
      'beforeEach nested 1', 'nested beforeEach nested 1', 'nested1', 'nested afterEach nested 1', 'afterEach nested 1',
      'beforeEach nested 2', 'nested beforeEach nested 2', 'nested 2', 'nested afterEach nested 2', 'afterEach nested 2',
      'afterEach nested',
      'nested after nested',
      'after test hooks',
    ]);
  }));
});

test('test hooks - no subtests', async (t) => {
  const testArr = [];

  t.before((t) => testArr.push('before ' + t.name));
  t.after(common.mustCall((t) => testArr.push('after ' + t.name)));
  t.beforeEach(common.mustNotCall());
  t.afterEach(common.mustNotCall());

  t.after(common.mustCall(() => {
    assert.deepStrictEqual(testArr, [
      'before test hooks - no subtests',
      'after test hooks - no subtests',
    ]);
  }));
});

test('t.before throws', async (t) => {
  t.after(common.mustCall());
  t.before(() => { throw new Error('before'); });
  await t.test('1', () => {});
  await t.test('2', () => {});
});

test('t.before throws - no subtests', async (t) => {
  t.after(common.mustCall());
  t.before(() => { throw new Error('before'); });
});

test('t.after throws', async (t) => {
  t.before(common.mustCall());
  t.after(() => { throw new Error('after'); });
  await t.test('1', () => {});
  await t.test('2', () => {});
});

test('t.after throws - no subtests', async (t) => {
  t.before(common.mustCall());
  t.after(() => { throw new Error('after'); });
});


test('t.beforeEach throws', async (t) => {
  t.after(common.mustCall());
  t.beforeEach(() => { throw new Error('beforeEach'); });
  await t.test('1', () => {});
  await t.test('2', () => {});
});

test('t.afterEach throws', async (t) => {
  t.after(common.mustCall());
  t.afterEach(() => { throw new Error('afterEach'); });
  await t.test('1', () => {});
  await t.test('2', () => {});
});


test('afterEach when test fails', async (t) => {
  t.after(common.mustCall());
  t.afterEach(common.mustCall(2));
  await t.test('1', () => { throw new Error('test'); });
  await t.test('2', () => {});
});

test('afterEach context when test passes', async (t) => {
  t.afterEach(common.mustCall((ctx) => {
    assert.strictEqual(ctx.name, '1');
    assert.strictEqual(ctx.passed, true);
    assert.strictEqual(ctx.error, null);
  }));
  await t.test('1', () => {});
});

test('afterEach context when test fails', async (t) => {
  const err = new Error('test');
  t.afterEach(common.mustCall((ctx) => {
    assert.strictEqual(ctx.name, '1');
    assert.strictEqual(ctx.passed, false);
    assert.strictEqual(ctx.error, err);
  }));
  await t.test('1', () => { throw err });
});

test('afterEach throws and test fails', async (t) => {
  t.after(common.mustCall());
  t.afterEach(() => { throw new Error('afterEach'); });
  await t.test('1', () => { throw new Error('test'); });
  await t.test('2', () => {});
});

test('t.after() is called if test body throws', (t) => {
  t.after(() => {
    t.diagnostic('- after() called');
  });
  throw new Error('bye');
});

describe('run after when before throws', () => {
  after(common.mustCall(() => {
    console.log("- after() called")
  }));
  before(() => { throw new Error('before')});
  it('1', () => {});
});


test('test hooks - async', async (t) => {
  const testArr = [];

  t.before(async (t) => {
    testArr.push('before starting ' + t.name);
    await setTimeout(10);
    testArr.push('before ending ' + t.name);
  });
  t.after(async (t) => {
    testArr.push('after starting ' + t.name);
    await setTimeout(10);
    testArr.push('after ending ' + t.name);
  });
  t.beforeEach(async (t) => {
    testArr.push('beforeEach starting ' + t.name);
    await setTimeout(10);
    testArr.push('beforeEach ending ' + t.name);
  });
  t.afterEach(async (t) => {
    testArr.push('afterEach starting ' + t.name);
    await setTimeout(10);
    testArr.push('afterEach ending ' + t.name);
  });
  await t.test('1', async () => {
    testArr.push('1 starting');
    await setTimeout(10);
    testArr.push('1 ending');
  });
  await t.test('2', async () => {
    testArr.push('2 starting');
    await setTimeout(10);
    testArr.push('2 ending');
  });

  t.after(common.mustCall(() => {
    assert.deepStrictEqual(testArr, [
      'before starting test hooks - async', 'before ending test hooks - async',
      'beforeEach starting 1', 'beforeEach ending 1',
      '1 starting', '1 ending',
      'afterEach starting 1', 'afterEach ending 1',
      'beforeEach starting 2', 'beforeEach ending 2',
      '2 starting', '2 ending',
      'afterEach starting 2', 'afterEach ending 2',
      'after starting test hooks - async', 'after ending test hooks - async',
    ]);
  }));
});

before((t) => t.diagnostic('before 2 called'));
after((t) => t.diagnostic('after 2 called'));
                                                                                                                                                                                         node-23.7.0/test/fixtures/test-runner/output/hooks.snapshot                                         0000664 0000000 0000000 00000036677 14746647661 0024162 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        - after() called
TAP version 13
# Subtest: describe hooks
    # Subtest: 1
    ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: 2
    ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: nested
        # Subtest: nested 1
        ok 1 - nested 1
          ---
          duration_ms: *
          type: 'test'
          ...
        # Subtest: nested 2
        ok 2 - nested 2
          ---
          duration_ms: *
          type: 'test'
          ...
        1..2
    ok 3 - nested
      ---
      duration_ms: *
      type: 'suite'
      ...
    1..3
ok 1 - describe hooks
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: describe hooks - no subtests
ok 2 - describe hooks - no subtests
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: before throws
    # Subtest: 1
    not ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    # Subtest: 2
    not ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    1..2
not ok 3 - before throws
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'hookFailed'
  error: 'before'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: before throws - no subtests
not ok 4 - before throws - no subtests
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'hookFailed'
  error: 'before'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: after throws
    # Subtest: 1
    ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: 2
    ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      ...
    1..2
not ok 5 - after throws
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'hookFailed'
  error: 'after'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: after throws - no subtests
not ok 6 - after throws - no subtests
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'hookFailed'
  error: 'after'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: beforeEach throws
    # Subtest: 1
    not ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'
      failureType: 'hookFailed'
      error: 'beforeEach'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        new Promise (<anonymous>)
      ...
    # Subtest: 2
    not ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'
      failureType: 'hookFailed'
      error: 'beforeEach'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        async Promise.all (index 0)
      ...
    1..2
not ok 7 - beforeEach throws
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '2 subtests failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: afterEach throws
    # Subtest: 1
    not ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'
      failureType: 'hookFailed'
      error: 'afterEach'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        async Promise.all (index 0)
        *
      ...
    # Subtest: 2
    not ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'
      failureType: 'hookFailed'
      error: 'afterEach'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    1..2
not ok 8 - afterEach throws
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '2 subtests failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: afterEach when test fails
    # Subtest: 1
    not ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'
      failureType: 'testCodeFailure'
      error: 'test'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        new Promise (<anonymous>)
        *
        *
        Array.map (<anonymous>)
      ...
    # Subtest: 2
    ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      ...
    1..2
not ok 9 - afterEach when test fails
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '1 subtest failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: afterEach throws and test fails
    # Subtest: 1
    not ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'
      failureType: 'testCodeFailure'
      error: 'test'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        new Promise (<anonymous>)
        *
        *
        Array.map (<anonymous>)
      ...
    # Subtest: 2
    not ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'
      failureType: 'hookFailed'
      error: 'afterEach'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    1..2
not ok 10 - afterEach throws and test fails
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '2 subtests failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: test hooks
    # Subtest: 1
    ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: 2
    ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: nested
        # Subtest: nested 1
        ok 1 - nested 1
          ---
          duration_ms: *
          type: 'test'
          ...
        # Subtest: nested 2
        ok 2 - nested 2
          ---
          duration_ms: *
          type: 'test'
          ...
        1..2
    ok 3 - nested
      ---
      duration_ms: *
      type: 'test'
      ...
    1..3
ok 11 - test hooks
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: test hooks - no subtests
ok 12 - test hooks - no subtests
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: t.before throws
    # Subtest: 1
    not ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'
      failureType: 'hookFailed'
      error: 'before'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # Subtest: 2
    not ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'
      failureType: 'hookFailed'
      error: 'before'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    1..2
not ok 13 - t.before throws
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'before'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: t.before throws - no subtests
not ok 14 - t.before throws - no subtests
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'before'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: t.after throws
    # Subtest: 1
    ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: 2
    ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      ...
    1..2
not ok 15 - t.after throws
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'hookFailed'
  error: 'after'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: t.after throws - no subtests
not ok 16 - t.after throws - no subtests
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'hookFailed'
  error: 'after'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: t.beforeEach throws
    # Subtest: 1
    not ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'
      failureType: 'hookFailed'
      error: 'beforeEach'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # Subtest: 2
    not ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'
      failureType: 'hookFailed'
      error: 'beforeEach'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    1..2
not ok 17 - t.beforeEach throws
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '2 subtests failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: t.afterEach throws
    # Subtest: 1
    not ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'
      failureType: 'hookFailed'
      error: 'afterEach'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # Subtest: 2
    not ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'
      failureType: 'hookFailed'
      error: 'afterEach'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    1..2
not ok 18 - t.afterEach throws
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '2 subtests failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: afterEach when test fails
    # Subtest: 1
    not ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'
      failureType: 'testCodeFailure'
      error: 'test'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # Subtest: 2
    ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      ...
    1..2
not ok 19 - afterEach when test fails
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '1 subtest failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: afterEach context when test passes
    # Subtest: 1
    ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 20 - afterEach context when test passes
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: afterEach context when test fails
    # Subtest: 1
    not ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'
      failureType: 'testCodeFailure'
      error: 'test'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
      ...
    1..1
not ok 21 - afterEach context when test fails
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '1 subtest failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: afterEach throws and test fails
    # Subtest: 1
    not ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'
      failureType: 'testCodeFailure'
      error: 'test'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # Subtest: 2
    not ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'
      failureType: 'hookFailed'
      error: 'afterEach'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    1..2
not ok 22 - afterEach throws and test fails
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '2 subtests failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: t.after() is called if test body throws
not ok 23 - t.after() is called if test body throws
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'bye'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
  ...
# - after() called
# Subtest: run after when before throws
    # Subtest: 1
    not ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    1..1
not ok 24 - run after when before throws
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'
  failureType: 'hookFailed'
  error: 'before'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: test hooks - async
    # Subtest: 1
    ok 1 - 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: 2
    ok 2 - 2
      ---
      duration_ms: *
      type: 'test'
      ...
    1..2
ok 25 - test hooks - async
  ---
  duration_ms: *
  type: 'test'
  ...
1..25
# before 1 called
# before 2 called
# after 1 called
# after 2 called
# tests 52
# suites 12
# pass 22
# fail 27
# cancelled 3
# skipped 0
# todo 0
# duration_ms *
                                                                 node-23.7.0/test/fixtures/test-runner/output/hooks_spec_reporter.js                                 0000664 0000000 0000000 00000001040 14746647661 0025643 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const fixtures = require('../../../common/fixtures');
const spawn = require('node:child_process').spawn;

const child = spawn(process.execPath,
                    ['--no-warnings', '--test-reporter', 'spec', fixtures.path('test-runner/output/hooks.js')],
                    { stdio: 'pipe' });
// eslint-disable-next-line no-control-regex
child.stdout.on('data', (d) => process.stdout.write(d.toString().replace(/[^\x00-\x7F]/g, '').replace(/\u001b\[\d+m/g, '')));
child.stderr.pipe(process.stderr);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test-runner/output/hooks_spec_reporter.snapshot                           0000664 0000000 0000000 00000012135 14746647661 0027075 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        - after() called
 describe hooks
   1 (*ms)
   2 (*ms)
   nested
     nested 1 (*ms)
     nested 2 (*ms)
   nested (*ms)
 describe hooks (*ms)
 describe hooks - no subtests (*ms)
 before throws
   1
   2
 before throws (*ms)
 before throws - no subtests (*ms)
 after throws
   1 (*ms)
   2 (*ms)
 after throws (*ms)
 after throws - no subtests (*ms)
 beforeEach throws
   1 (*ms)
   2 (*ms)
 beforeEach throws (*ms)
 afterEach throws
   1 (*ms)
   2 (*ms)
 afterEach throws (*ms)
 afterEach when test fails
   1 (*ms)
   2 (*ms)
 afterEach when test fails (*ms)
 afterEach throws and test fails
   1 (*ms)
   2 (*ms)
 afterEach throws and test fails (*ms)
 test hooks
   1 (*ms)
   2 (*ms)
   nested
     nested 1 (*ms)
     nested 2 (*ms)
   nested (*ms)
 test hooks (*ms)
 test hooks - no subtests (*ms)
 t.before throws
   1 (*ms)
   2 (*ms)
 t.before throws (*ms)
 t.before throws - no subtests (*ms)
 t.after throws
   1 (*ms)
   2 (*ms)
 t.after throws (*ms)
 t.after throws - no subtests (*ms)
 t.beforeEach throws
   1 (*ms)
   2 (*ms)
 t.beforeEach throws (*ms)
 t.afterEach throws
   1 (*ms)
   2 (*ms)
 t.afterEach throws (*ms)
 afterEach when test fails
   1 (*ms)
   2 (*ms)
 afterEach when test fails (*ms)
 afterEach context when test passes
   1 (*ms)
 afterEach context when test passes (*ms)
 afterEach context when test fails
   1 (*ms)
 afterEach context when test fails (*ms)
 afterEach throws and test fails
   1 (*ms)
   2 (*ms)
 afterEach throws and test fails (*ms)
 t.after() is called if test body throws (*ms)
 - after() called
 run after when before throws
   1
 run after when before throws (*ms)
 test hooks - async
   1 (*ms)
   2 (*ms)
 test hooks - async (*ms)
 before 1 called
 before 2 called
 after 1 called
 after 2 called
 tests 52
 suites 12
 pass 22
 fail 27
 cancelled 3
 skipped 0
 todo 0
 duration_ms *

 failing tests:

*
 1
  'test did not finish before its parent and was cancelled'

*
 2
  'test did not finish before its parent and was cancelled'

*
 before throws (*ms)
  Error: before
      *
      *
      *
      *
      *
      *
      *
      *

*
 before throws - no subtests (*ms)
  Error: before
      *
      *
      *
      *
      *
      *
      *
      *

*
 after throws (*ms)
  Error: after
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 after throws - no subtests (*ms)
  Error: after
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 1 (*ms)
  Error: beforeEach
      *
      *
      *
      *
      *
      *
      *
      *
      *
      at new Promise (<anonymous>)

*
 2 (*ms)
  Error: beforeEach
      *
      *
      *
      *
      *
      *
      *
      *
      *
      at async Promise.all (index 0)

*
 1 (*ms)
  Error: afterEach
      *
      *
      *
      *
      *
      *
      *
      *
      at async Promise.all (index 0)
      *

*
 2 (*ms)
  Error: afterEach
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 1 (*ms)
  Error: test
      *
      *
      *
      *
      *
      *
      at new Promise (<anonymous>)
      *
      *
      at Array.map (<anonymous>)

*
 1 (*ms)
  Error: test
      *
      *
      *
      *
      *
      *
      at new Promise (<anonymous>)
      *
      *
      at Array.map (<anonymous>)

*
 2 (*ms)
  Error: afterEach
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 1 (*ms)
  Error: before
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 2 (*ms)
  Error: before
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 t.before throws (*ms)
  Error: before
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 t.before throws - no subtests (*ms)
  Error: before
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 t.after throws (*ms)
  Error: after
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 t.after throws - no subtests (*ms)
  Error: after
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 1 (*ms)
  Error: beforeEach
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 2 (*ms)
  Error: beforeEach
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 1 (*ms)
  Error: afterEach
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 2 (*ms)
  Error: afterEach
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 1 (*ms)
  Error: test
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 1 (*ms)
  Error: test
      *
      *
      *
      *

*
 1 (*ms)
  Error: test
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 2 (*ms)
  Error: afterEach
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 t.after() is called if test body throws (*ms)
  Error: bye
      *
      *
      *
      *

*
 1
  'test did not finish before its parent and was cancelled'

*
 run after when before throws (*ms)
  Error: before
      *
      *
      *
      *
      *
      *
      *
      *
                                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test-runner/output/junit_reporter.js                                      0000664 0000000 0000000 00000000447 14746647661 0024651 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const fixtures = require('../../../common/fixtures');
const spawn = require('node:child_process').spawn;

spawn(process.execPath,
      ['--no-warnings', '--test-reporter', 'junit', fixtures.path('test-runner/output/output.js')], { stdio: 'inherit' });
                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test-runner/output/junit_reporter.snapshot                                0000664 0000000 0000000 00000051135 14746647661 0026074 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        <?xml version="1.0" encoding="utf-8"?>
<testsuites>
	<testcase name="sync pass todo" time="*" classname="test">
		<skipped type="todo" message="true"/>
	</testcase>
	<testcase name="sync pass todo with message" time="*" classname="test">
		<skipped type="todo" message="this is a passing todo"/>
	</testcase>
	<testcase name="sync fail todo" time="*" classname="test" failure="thrown from sync fail todo">
		<skipped type="todo" message="true"/>
		<failure type="testCodeFailure" message="thrown from sync fail todo">
[Error [ERR_TEST_FAILURE]: thrown from sync fail todo] {
  code: 'ERR_TEST_FAILURE',
  failureType: 'testCodeFailure',
  cause: Error: thrown from sync fail todo
      *
      *
      *
      *
      *
      *
      *
}
		</failure>
	</testcase>
	<testcase name="sync fail todo with message" time="*" classname="test" failure="thrown from sync fail todo with message">
		<skipped type="todo" message="this is a failing todo"/>
		<failure type="testCodeFailure" message="thrown from sync fail todo with message">
[Error [ERR_TEST_FAILURE]: thrown from sync fail todo with message] {
  code: 'ERR_TEST_FAILURE',
  failureType: 'testCodeFailure',
  cause: Error: thrown from sync fail todo with message
      *
      *
      *
      *
      *
      *
      *
}
		</failure>
	</testcase>
	<testcase name="sync skip pass" time="*" classname="test">
		<skipped type="skipped" message="true"/>
	</testcase>
	<testcase name="sync skip pass with message" time="*" classname="test">
		<skipped type="skipped" message="this is skipped"/>
	</testcase>
	<testcase name="sync pass" time="*" classname="test"/>
	<!-- this test should pass -->
	<testcase name="sync throw fail" time="*" classname="test" failure="thrown from sync throw fail">
		<failure type="testCodeFailure" message="thrown from sync throw fail">
[Error [ERR_TEST_FAILURE]: thrown from sync throw fail] {
  code: 'ERR_TEST_FAILURE',
  failureType: 'testCodeFailure',
  cause: Error: thrown from sync throw fail
      *
      *
      *
      *
      *
      *
      *
}
		</failure>
	</testcase>
	<testcase name="async skip pass" time="*" classname="test">
		<skipped type="skipped" message="true"/>
	</testcase>
	<testcase name="async pass" time="*" classname="test"/>
	<testcase name="async throw fail" time="*" classname="test" failure="thrown from async throw fail">
		<failure type="testCodeFailure" message="thrown from async throw fail">
[Error [ERR_TEST_FAILURE]: thrown from async throw fail] {
  code: 'ERR_TEST_FAILURE',
  failureType: 'testCodeFailure',
  cause: Error: thrown from async throw fail
      *
      *
      *
      *
      *
      *
      *
}
		</failure>
	</testcase>
	<testcase name="async skip fail" time="*" classname="test" failure="thrown from async throw fail">
		<skipped type="skipped" message="true"/>
		<failure type="testCodeFailure" message="thrown from async throw fail">
[Error [ERR_TEST_FAILURE]: thrown from async throw fail] {
  code: 'ERR_TEST_FAILURE',
  failureType: 'testCodeFailure',
  cause: Error: thrown from async throw fail
      *
      *
      *
      *
      *
      *
      *
}
		</failure>
	</testcase>
	<testcase name="async assertion fail" time="*" classname="test" failure="Expected values to be strictly equal:true !== false">
		<failure type="testCodeFailure" message="Expected values to be strictly equal:true !== false">
[Error [ERR_TEST_FAILURE]: Expected values to be strictly equal:

true !== false
] {
  code: 'ERR_TEST_FAILURE',
  failureType: 'testCodeFailure',
  cause: AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:
  
  true !== false
  
      *
      *
      *
      *
      *
      *
      * {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: true,
    expected: false,
    operator: 'strictEqual'
  }
}
		</failure>
	</testcase>
	<testcase name="resolve pass" time="*" classname="test"/>
	<testcase name="reject fail" time="*" classname="test" failure="rejected from reject fail">
		<failure type="testCodeFailure" message="rejected from reject fail">
[Error [ERR_TEST_FAILURE]: rejected from reject fail] {
  code: 'ERR_TEST_FAILURE',
  failureType: 'testCodeFailure',
  cause: Error: rejected from reject fail
      *
      *
      *
      *
      *
      *
      *
}
		</failure>
	</testcase>
	<testcase name="unhandled rejection - passes but warns" time="*" classname="test"/>
	<testcase name="async unhandled rejection - passes but warns" time="*" classname="test"/>
	<testcase name="immediate throw - passes but warns" time="*" classname="test"/>
	<testcase name="immediate reject - passes but warns" time="*" classname="test"/>
	<testcase name="immediate resolve pass" time="*" classname="test"/>
	<testsuite name="subtest sync throw fail" time="*" disabled="0" errors="0" tests="1" failures="1" skipped="0" hostname="HOSTNAME">
		<testcase name="+sync throw fail" time="*" classname="test" failure="thrown from subtest sync throw fail">
			<failure type="testCodeFailure" message="thrown from subtest sync throw fail">
Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fail
    *
    * {
  code: 'ERR_TEST_FAILURE',
  failureType: 'testCodeFailure',
  cause: Error: thrown from subtest sync throw fail
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *
}
			</failure>
		</testcase>
		<!-- this subtest should make its parent test fail -->
	</testsuite>
	<testcase name="sync throw non-error fail" time="*" classname="test" failure="Symbol(thrown symbol from sync throw non-error fail)">
		<failure type="testCodeFailure" message="Symbol(thrown symbol from sync throw non-error fail)">
[Error [ERR_TEST_FAILURE]: Symbol(thrown symbol from sync throw non-error fail)] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: Symbol(thrown symbol from sync throw non-error fail) }
		</failure>
	</testcase>
	<testsuite name="level 0a" time="*" disabled="0" errors="0" tests="4" failures="0" skipped="0" hostname="HOSTNAME">
		<testcase name="level 1a" time="*" classname="test"/>
		<testcase name="level 1b" time="*" classname="test"/>
		<testcase name="level 1c" time="*" classname="test"/>
		<testcase name="level 1d" time="*" classname="test"/>
	</testsuite>
	<testsuite name="top level" time="*" disabled="0" errors="0" tests="2" failures="1" skipped="0" hostname="HOSTNAME">
		<testcase name="+long running" time="*" classname="test" failure="test did not finish before its parent and was cancelled">
			<failure type="cancelledByParent" message="test did not finish before its parent and was cancelled">
[Error [ERR_TEST_FAILURE]: test did not finish before its parent and was cancelled] { code: 'ERR_TEST_FAILURE', failureType: 'cancelledByParent', cause: 'test did not finish before its parent and was cancelled' }
			</failure>
		</testcase>
		<testsuite name="+short running" time="*" disabled="0" errors="0" tests="1" failures="0" skipped="0" hostname="HOSTNAME">
			<testcase name="++short running" time="*" classname="test"/>
		</testsuite>
	</testsuite>
	<testcase name="invalid subtest - pass but subtest fails" time="*" classname="test"/>
	<testcase name="sync skip option" time="*" classname="test">
		<skipped type="skipped" message="true"/>
	</testcase>
	<testcase name="sync skip option with message" time="*" classname="test">
		<skipped type="skipped" message="this is skipped"/>
	</testcase>
	<testcase name="sync skip option is false fail" time="*" classname="test" failure="this should be executed">
		<failure type="testCodeFailure" message="this should be executed">
[Error [ERR_TEST_FAILURE]: this should be executed] {
  code: 'ERR_TEST_FAILURE',
  failureType: 'testCodeFailure',
  cause: Error: this should be executed
      *
      *
      *
      *
      *
      *
      *
}
		</failure>
	</testcase>
	<testcase name="&lt;anonymous>" time="*" classname="test"/>
	<testcase name="functionOnly" time="*" classname="test"/>
	<testcase name="&lt;anonymous>" time="*" classname="test"/>
	<testcase name="test with only a name provided" time="*" classname="test"/>
	<testcase name="&lt;anonymous>" time="*" classname="test"/>
	<testcase name="&lt;anonymous>" time="*" classname="test">
		<skipped type="skipped" message="true"/>
	</testcase>
	<testcase name="test with a name and options provided" time="*" classname="test">
		<skipped type="skipped" message="true"/>
	</testcase>
	<testcase name="functionAndOptions" time="*" classname="test">
		<skipped type="skipped" message="true"/>
	</testcase>
	<testcase name="callback pass" time="*" classname="test"/>
	<testcase name="callback fail" time="*" classname="test" failure="callback failure">
		<failure type="testCodeFailure" message="callback failure">
[Error [ERR_TEST_FAILURE]: callback failure] {
  code: 'ERR_TEST_FAILURE',
  failureType: 'testCodeFailure',
  cause: Error: callback failure
      *
      *
}
		</failure>
	</testcase>
	<testcase name="sync t is this in test" time="*" classname="test"/>
	<testcase name="async t is this in test" time="*" classname="test"/>
	<testcase name="callback t is this in test" time="*" classname="test"/>
	<testcase name="callback also returns a Promise" time="*" classname="test" failure="passed a callback but also returned a Promise">
		<failure type="callbackAndPromisePresent" message="passed a callback but also returned a Promise">
[Error [ERR_TEST_FAILURE]: passed a callback but also returned a Promise] { code: 'ERR_TEST_FAILURE', failureType: 'callbackAndPromisePresent', cause: 'passed a callback but also returned a Promise' }
		</failure>
	</testcase>
	<testcase name="callback throw" time="*" classname="test" failure="thrown from callback throw">
		<failure type="testCodeFailure" message="thrown from callback throw">
[Error [ERR_TEST_FAILURE]: thrown from callback throw] {
  code: 'ERR_TEST_FAILURE',
  failureType: 'testCodeFailure',
  cause: Error: thrown from callback throw
      *
      *
      *
      *
      *
      *
      *
}
		</failure>
	</testcase>
	<testcase name="callback called twice" time="*" classname="test" failure="callback invoked multiple times">
		<failure type="multipleCallbackInvocations" message="callback invoked multiple times">
Error [ERR_TEST_FAILURE]: callback invoked multiple times
    *
    * {
  code: 'ERR_TEST_FAILURE',
  failureType: 'multipleCallbackInvocations',
  cause: 'callback invoked multiple times'
}
		</failure>
	</testcase>
	<testcase name="callback called twice in different ticks" time="*" classname="test"/>
	<testcase name="callback called twice in future tick" time="*" classname="test" failure="callback invoked multiple times">
		<failure type="uncaughtException" message="callback invoked multiple times">
Error [ERR_TEST_FAILURE]: callback invoked multiple times
    * {
  code: 'ERR_TEST_FAILURE',
  failureType: 'uncaughtException',
  cause: Error [ERR_TEST_FAILURE]: callback invoked multiple times
      * {
    code: 'ERR_TEST_FAILURE',
    failureType: 'multipleCallbackInvocations',
    cause: 'callback invoked multiple times'
  }
}
		</failure>
	</testcase>
	<testcase name="callback async throw" time="*" classname="test" failure="thrown from callback async throw">
		<failure type="uncaughtException" message="thrown from callback async throw">
Error [ERR_TEST_FAILURE]: thrown from callback async throw
    * {
  code: 'ERR_TEST_FAILURE',
  failureType: 'uncaughtException',
  cause: Error: thrown from callback async throw
      *
      *
}
		</failure>
	</testcase>
	<testcase name="callback async throw after done" time="*" classname="test"/>
	<testsuite name="only is set on subtests but not in only mode" time="*" disabled="0" errors="0" tests="3" failures="0" skipped="0" hostname="HOSTNAME">
		<testcase name="running subtest 1" time="*" classname="test"/>
		<testcase name="running subtest 3" time="*" classname="test"/>
		<testcase name="running subtest 4" time="*" classname="test"/>
	</testsuite>
	<testcase name="custom inspect symbol fail" time="*" classname="test" failure="customized">
		<failure type="testCodeFailure" message="customized">
[Error [ERR_TEST_FAILURE]: customized] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: customized }
		</failure>
	</testcase>
	<testcase name="custom inspect symbol that throws fail" time="*" classname="test" failure="{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}">
		<failure type="testCodeFailure" message="{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}">
[Error [ERR_TEST_FAILURE]: {
  foo: 1,
  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]
}] {
  code: 'ERR_TEST_FAILURE',
  failureType: 'testCodeFailure',
  cause: { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }
}
		</failure>
	</testcase>
	<testsuite name="subtest sync throw fails" time="*" disabled="0" errors="0" tests="2" failures="2" skipped="0" hostname="HOSTNAME">
		<testcase name="sync throw fails at first" time="*" classname="test" failure="thrown from subtest sync throw fails at first">
			<failure type="testCodeFailure" message="thrown from subtest sync throw fails at first">
Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at first
    *
    * {
  code: 'ERR_TEST_FAILURE',
  failureType: 'testCodeFailure',
  cause: Error: thrown from subtest sync throw fails at first
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *
}
			</failure>
		</testcase>
		<testcase name="sync throw fails at second" time="*" classname="test" failure="thrown from subtest sync throw fails at second">
			<failure type="testCodeFailure" message="thrown from subtest sync throw fails at second">
Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at second
    * {
  code: 'ERR_TEST_FAILURE',
  failureType: 'testCodeFailure',
  cause: Error: thrown from subtest sync throw fails at second
      *
      *
      *
      *
      *
      *
      *
      *
}
			</failure>
		</testcase>
	</testsuite>
	<testcase name="timed out async test" time="*" classname="test" failure="test timed out after 5ms">
		<failure type="testTimeoutFailure" message="test timed out after 5ms">
[Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }
		</failure>
	</testcase>
	<testcase name="timed out callback test" time="*" classname="test" failure="test timed out after 5ms">
		<failure type="testTimeoutFailure" message="test timed out after 5ms">
[Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }
		</failure>
	</testcase>
	<testcase name="large timeout async test is ok" time="*" classname="test"/>
	<testcase name="large timeout callback test is ok" time="*" classname="test"/>
	<testcase name="successful thenable" time="*" classname="test"/>
	<testcase name="rejected thenable" time="*" classname="test" failure="custom error">
		<failure type="testCodeFailure" message="custom error">
[Error [ERR_TEST_FAILURE]: custom error] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: 'custom error' }
		</failure>
	</testcase>
	<testcase name="unfinished test with uncaughtException" time="*" classname="test" failure="foo">
		<failure type="uncaughtException" message="foo">
Error [ERR_TEST_FAILURE]: foo
    * {
  code: 'ERR_TEST_FAILURE',
  failureType: 'uncaughtException',
  cause: Error: foo
      *
      *
      *
}
		</failure>
	</testcase>
	<testcase name="unfinished test with unhandledRejection" time="*" classname="test" failure="bar">
		<failure type="unhandledRejection" message="bar">
Error [ERR_TEST_FAILURE]: bar
    * {
  code: 'ERR_TEST_FAILURE',
  failureType: 'unhandledRejection',
  cause: Error: bar
      *
      *
      *
}
		</failure>
	</testcase>
	<testcase name="assertion errors display actual and expected properly" time="*" classname="test" failure="Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}">
		<failure type="testCodeFailure" message="Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}">
[Error [ERR_TEST_FAILURE]: Expected values to be loosely deep-equal:

{
  bar: 1,
  baz: {
    date: 1970-01-01T00:00:00.000Z,
    null: null,
    number: 1,
    string: 'Hello',
    undefined: undefined
  },
  boo: [
    1
  ],
  foo: 1
}

should loosely deep-equal

{
  baz: {
    date: 1970-01-01T00:00:00.000Z,
    null: null,
    number: 1,
    string: 'Hello',
    undefined: undefined
  },
  boo: [
    1
  ],
  circular: &lt;ref *1> {
    bar: 2,
    c: [Circular *1]
  }
}] {
  code: 'ERR_TEST_FAILURE',
  failureType: 'testCodeFailure',
  cause: AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:
  
  {
    bar: 1,
    baz: {
      date: 1970-01-01T00:00:00.000Z,
      null: null,
      number: 1,
      string: 'Hello',
      undefined: undefined
    },
    boo: [
      1
    ],
    foo: 1
  }
  
  should loosely deep-equal
  
  {
    baz: {
      date: 1970-01-01T00:00:00.000Z,
      null: null,
      number: 1,
      string: 'Hello',
      undefined: undefined
    },
    boo: [
      1
    ],
    circular: &lt;ref *1> {
      bar: 2,
      c: [Circular *1]
    }
  }
      * {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: [Object],
    expected: [Object],
    operator: 'deepEqual'
  }
}
		</failure>
	</testcase>
	<testcase name="invalid subtest fail" time="*" classname="test" failure="test could not be started because its parent finished">
		<failure type="parentAlreadyFinished" message="test could not be started because its parent finished">
Error [ERR_TEST_FAILURE]: test could not be started because its parent finished
    * {
  code: 'ERR_TEST_FAILURE',
  failureType: 'parentAlreadyFinished',
  cause: 'test could not be started because its parent finished'
}
		</failure>
	</testcase>
	<!-- Error: Test "unhandled rejection - passes but warns" at test/fixtures/test-runner/output/output.js:72:1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from unhandled rejection fail" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->
	<!-- Error: Test "async unhandled rejection - passes but warns" at test/fixtures/test-runner/output/output.js:76:1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from async unhandled rejection fail" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->
	<!-- Error: A resource generated asynchronous activity after the test ended. This activity created the error "Error: uncaught from outside of a test" which triggered an uncaughtException event, caught by the test runner. -->
	<!-- Error: Test "immediate throw - passes but warns" at test/fixtures/test-runner/output/output.js:80:1 generated asynchronous activity after the test ended. This activity created the error "Error: thrown from immediate throw fail" and would have caused the test to fail, but instead triggered an uncaughtException event. -->
	<!-- Error: Test "immediate reject - passes but warns" at test/fixtures/test-runner/output/output.js:86:1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from immediate reject fail" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->
	<!-- Error: Test "callback called twice in different ticks" at test/fixtures/test-runner/output/output.js:251:1 generated asynchronous activity after the test ended. This activity created the error "Error [ERR_TEST_FAILURE]: callback invoked multiple times" and would have caused the test to fail, but instead triggered an uncaughtException event. -->
	<!-- Error: Test "callback async throw after done" at test/fixtures/test-runner/output/output.js:269:1 generated asynchronous activity after the test ended. This activity created the error "Error: thrown from callback async throw after done" and would have caused the test to fail, but instead triggered an uncaughtException event. -->
	<!-- tests 75 -->
	<!-- suites 0 -->
	<!-- pass 34 -->
	<!-- fail 25 -->
	<!-- cancelled 3 -->
	<!-- skipped 9 -->
	<!-- todo 4 -->
	<!-- duration_ms * -->
</testsuites>
                                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test-runner/output/lcov_reporter.js                                       0000664 0000000 0000000 00000000701 14746647661 0024454 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const fixtures = require('../../../common/fixtures');
const spawn = require('node:child_process').spawn;

spawn(process.execPath,
      [
            '--no-warnings',
            '--experimental-test-coverage',
            '--test-coverage-exclude=!test/**',
            '--test-reporter',
            'lcov',
            fixtures.path('test-runner/output/output.js')
      ],
      { stdio: 'inherit' }
);
                                                               node-23.7.0/test/fixtures/test-runner/output/lcov_reporter.snapshot                                 0000664 0000000 0000000 00000022000 14746647661 0025673 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TN:
SF:test/fixtures/test-runner/output/output.js
FN:8,anonymous_0
FN:12,anonymous_1
FN:16,anonymous_2
FN:21,anonymous_3
FN:26,anonymous_4
FN:30,anonymous_5
FN:34,anonymous_6
FN:38,anonymous_7
FN:42,anonymous_8
FN:46,anonymous_9
FN:50,anonymous_10
FN:54,anonymous_11
FN:59,anonymous_12
FN:64,anonymous_13
FN:68,anonymous_14
FN:72,anonymous_15
FN:76,anonymous_16
FN:80,anonymous_17
FN:81,anonymous_18
FN:86,anonymous_19
FN:87,anonymous_20
FN:92,anonymous_21
FN:93,anonymous_22
FN:94,anonymous_23
FN:100,anonymous_24
FN:101,anonymous_25
FN:107,anonymous_26
FN:111,anonymous_27
FN:112,anonymous_28
FN:113,anonymous_29
FN:114,anonymous_30
FN:122,anonymous_31
FN:123,anonymous_32
FN:130,anonymous_33
FN:131,anonymous_34
FN:132,anonymous_35
FN:140,anonymous_36
FN:141,anonymous_37
FN:142,anonymous_38
FN:150,anonymous_39
FN:151,anonymous_40
FN:159,anonymous_41
FN:160,anonymous_42
FN:161,anonymous_43
FN:166,anonymous_44
FN:167,anonymous_45
FN:171,anonymous_46
FN:172,anonymous_47
FN:173,anonymous_48
FN:179,anonymous_49
FN:183,anonymous_50
FN:187,anonymous_51
FN:195,functionOnly
FN:198,anonymous_53
FN:213,functionAndOptions
FN:215,anonymous_55
FN:219,anonymous_56
FN:220,anonymous_57
FN:225,anonymous_58
FN:229,anonymous_59
FN:233,anonymous_60
FN:238,anonymous_61
FN:242,anonymous_62
FN:246,anonymous_63
FN:251,anonymous_64
FN:256,anonymous_65
FN:257,anonymous_66
FN:263,anonymous_67
FN:264,anonymous_68
FN:269,anonymous_69
FN:270,anonymous_70
FN:277,anonymous_71
FN:287,anonymous_72
FN:289,obj
FN:298,anonymous_74
FN:300,obj
FN:309,anonymous_76
FN:310,anonymous_77
FN:313,anonymous_78
FN:318,anonymous_79
FN:319,anonymous_80
FN:320,anonymous_81
FN:327,anonymous_82
FN:328,anonymous_83
FN:335,anonymous_84
FN:336,anonymous_85
FN:341,anonymous_86
FN:345,anonymous_87
FN:348,get then
FN:351,anonymous_89
FN:356,anonymous_90
FN:359,get then
FN:362,anonymous_92
FN:367,anonymous_93
FN:368,anonymous_94
FN:369,anonymous_95
FN:373,anonymous_96
FN:374,anonymous_97
FN:375,anonymous_98
FN:381,anonymous_99
FN:385,anonymous_100
FNDA:1,anonymous_0
FNDA:1,anonymous_1
FNDA:1,anonymous_2
FNDA:1,anonymous_3
FNDA:1,anonymous_4
FNDA:1,anonymous_5
FNDA:1,anonymous_6
FNDA:1,anonymous_7
FNDA:1,anonymous_8
FNDA:1,anonymous_9
FNDA:1,anonymous_10
FNDA:1,anonymous_11
FNDA:1,anonymous_12
FNDA:1,anonymous_13
FNDA:1,anonymous_14
FNDA:1,anonymous_15
FNDA:1,anonymous_16
FNDA:1,anonymous_17
FNDA:1,anonymous_18
FNDA:1,anonymous_19
FNDA:1,anonymous_20
FNDA:1,anonymous_21
FNDA:1,anonymous_22
FNDA:1,anonymous_23
FNDA:1,anonymous_24
FNDA:1,anonymous_25
FNDA:1,anonymous_26
FNDA:1,anonymous_27
FNDA:1,anonymous_28
FNDA:1,anonymous_29
FNDA:1,anonymous_30
FNDA:1,anonymous_31
FNDA:1,anonymous_32
FNDA:1,anonymous_33
FNDA:1,anonymous_34
FNDA:1,anonymous_35
FNDA:1,anonymous_36
FNDA:1,anonymous_37
FNDA:1,anonymous_38
FNDA:1,anonymous_39
FNDA:1,anonymous_40
FNDA:1,anonymous_41
FNDA:1,anonymous_42
FNDA:1,anonymous_43
FNDA:1,anonymous_44
FNDA:1,anonymous_45
FNDA:1,anonymous_46
FNDA:1,anonymous_47
FNDA:1,anonymous_48
FNDA:0,anonymous_49
FNDA:0,anonymous_50
FNDA:1,anonymous_51
FNDA:1,functionOnly
FNDA:1,anonymous_53
FNDA:0,functionAndOptions
FNDA:1,anonymous_55
FNDA:1,anonymous_56
FNDA:1,anonymous_57
FNDA:1,anonymous_58
FNDA:1,anonymous_59
FNDA:1,anonymous_60
FNDA:1,anonymous_61
FNDA:1,anonymous_62
FNDA:1,anonymous_63
FNDA:1,anonymous_64
FNDA:1,anonymous_65
FNDA:1,anonymous_66
FNDA:1,anonymous_67
FNDA:1,anonymous_68
FNDA:1,anonymous_69
FNDA:1,anonymous_70
FNDA:1,anonymous_71
FNDA:1,anonymous_72
FNDA:1,obj
FNDA:1,anonymous_74
FNDA:1,obj
FNDA:1,anonymous_76
FNDA:1,anonymous_77
FNDA:1,anonymous_78
FNDA:1,anonymous_79
FNDA:1,anonymous_80
FNDA:1,anonymous_81
FNDA:1,anonymous_82
FNDA:1,anonymous_83
FNDA:1,anonymous_84
FNDA:1,anonymous_85
FNDA:1,anonymous_86
FNDA:1,anonymous_87
FNDA:1,get then
FNDA:1,anonymous_89
FNDA:1,anonymous_90
FNDA:1,get then
FNDA:1,anonymous_92
FNDA:1,anonymous_93
FNDA:1,anonymous_94
FNDA:1,anonymous_95
FNDA:1,anonymous_96
FNDA:1,anonymous_97
FNDA:1,anonymous_98
FNDA:1,anonymous_99
FNDA:1,anonymous_100
FNF:101
FNH:98
BRDA:1,0,0,1
BRDA:8,1,0,1
BRDA:12,2,0,1
BRDA:16,3,0,1
BRDA:21,4,0,1
BRDA:26,5,0,1
BRDA:30,6,0,1
BRDA:34,7,0,1
BRDA:38,8,0,1
BRDA:42,9,0,1
BRDA:46,10,0,1
BRDA:50,11,0,1
BRDA:54,12,0,1
BRDA:59,13,0,1
BRDA:64,14,0,1
BRDA:68,15,0,1
BRDA:72,16,0,1
BRDA:76,17,0,1
BRDA:80,18,0,1
BRDA:81,19,0,1
BRDA:86,20,0,1
BRDA:87,21,0,1
BRDA:92,22,0,1
BRDA:93,23,0,1
BRDA:94,24,0,1
BRDA:100,25,0,1
BRDA:101,26,0,1
BRDA:107,27,0,1
BRDA:111,28,0,1
BRDA:112,29,0,1
BRDA:113,30,0,1
BRDA:114,31,0,1
BRDA:122,32,0,1
BRDA:123,33,0,1
BRDA:130,34,0,1
BRDA:131,35,0,1
BRDA:132,36,0,1
BRDA:140,37,0,1
BRDA:141,38,0,1
BRDA:142,39,0,1
BRDA:150,40,0,1
BRDA:151,41,0,1
BRDA:159,42,0,1
BRDA:160,43,0,1
BRDA:161,44,0,1
BRDA:166,45,0,1
BRDA:167,46,0,1
BRDA:171,47,0,1
BRDA:172,48,0,1
BRDA:173,49,0,1
BRDA:187,50,0,1
BRDA:195,51,0,1
BRDA:198,52,0,1
BRDA:215,53,0,1
BRDA:219,54,0,1
BRDA:220,55,0,1
BRDA:225,56,0,1
BRDA:229,57,0,1
BRDA:233,58,0,1
BRDA:238,59,0,1
BRDA:242,60,0,1
BRDA:246,61,0,1
BRDA:251,62,0,1
BRDA:256,63,0,1
BRDA:257,64,0,1
BRDA:263,65,0,1
BRDA:264,66,0,1
BRDA:269,67,0,1
BRDA:270,68,0,1
BRDA:277,69,0,1
BRDA:287,70,0,1
BRDA:289,71,0,1
BRDA:298,72,0,1
BRDA:300,73,0,1
BRDA:309,74,0,1
BRDA:310,75,0,1
BRDA:313,76,0,1
BRDA:318,77,0,1
BRDA:319,78,0,1
BRDA:320,79,0,1
BRDA:327,80,0,1
BRDA:328,81,0,1
BRDA:335,82,0,1
BRDA:336,83,0,1
BRDA:341,84,0,1
BRDA:345,85,0,1
BRDA:348,86,0,1
BRDA:349,87,0,0
BRDA:351,88,0,1
BRDA:356,89,0,1
BRDA:359,90,0,1
BRDA:360,91,0,0
BRDA:362,92,0,1
BRDA:367,93,0,1
BRDA:370,94,0,0
BRDA:368,95,0,1
BRDA:369,96,0,1
BRDA:373,97,0,1
BRDA:376,98,0,0
BRDA:374,99,0,1
BRDA:375,100,0,1
BRDA:381,101,0,1
BRDA:385,102,0,1
BRF:103
BRH:99
DA:1,1
DA:2,1
DA:3,1
DA:4,1
DA:5,1
DA:6,1
DA:7,1
DA:8,1
DA:9,1
DA:10,1
DA:11,1
DA:12,1
DA:13,1
DA:14,1
DA:15,1
DA:16,1
DA:17,1
DA:18,1
DA:19,1
DA:20,1
DA:21,1
DA:22,1
DA:23,1
DA:24,1
DA:25,1
DA:26,1
DA:27,1
DA:28,1
DA:29,1
DA:30,1
DA:31,1
DA:32,1
DA:33,1
DA:34,1
DA:35,1
DA:36,1
DA:37,1
DA:38,1
DA:39,1
DA:40,1
DA:41,1
DA:42,1
DA:43,1
DA:44,1
DA:45,1
DA:46,1
DA:47,1
DA:48,1
DA:49,1
DA:50,1
DA:51,1
DA:52,1
DA:53,1
DA:54,1
DA:55,1
DA:56,1
DA:57,1
DA:58,1
DA:59,1
DA:60,1
DA:61,1
DA:62,1
DA:63,1
DA:64,1
DA:65,1
DA:66,1
DA:67,1
DA:68,1
DA:69,1
DA:70,1
DA:71,1
DA:72,1
DA:73,1
DA:74,1
DA:75,1
DA:76,1
DA:77,1
DA:78,1
DA:79,1
DA:80,1
DA:81,1
DA:82,1
DA:83,1
DA:84,1
DA:85,1
DA:86,1
DA:87,1
DA:88,1
DA:89,1
DA:90,1
DA:91,1
DA:92,1
DA:93,1
DA:94,1
DA:95,1
DA:96,1
DA:97,1
DA:98,1
DA:99,1
DA:100,1
DA:101,1
DA:102,1
DA:103,1
DA:104,1
DA:105,1
DA:106,1
DA:107,1
DA:108,1
DA:109,1
DA:110,1
DA:111,1
DA:112,1
DA:113,1
DA:114,1
DA:115,1
DA:116,1
DA:117,1
DA:118,1
DA:119,1
DA:120,1
DA:121,1
DA:122,1
DA:123,1
DA:124,1
DA:125,1
DA:126,1
DA:127,1
DA:128,1
DA:129,1
DA:130,1
DA:131,1
DA:132,1
DA:133,1
DA:134,1
DA:135,1
DA:136,1
DA:137,1
DA:138,1
DA:139,1
DA:140,1
DA:141,1
DA:142,1
DA:143,1
DA:144,1
DA:145,1
DA:146,1
DA:147,1
DA:148,1
DA:149,1
DA:150,1
DA:151,1
DA:152,1
DA:153,1
DA:154,1
DA:155,1
DA:156,1
DA:157,1
DA:158,1
DA:159,1
DA:160,1
DA:161,1
DA:162,1
DA:163,1
DA:164,1
DA:165,1
DA:166,1
DA:167,1
DA:168,1
DA:169,1
DA:170,1
DA:171,1
DA:172,1
DA:173,1
DA:174,1
DA:175,1
DA:176,1
DA:177,1
DA:178,1
DA:179,1
DA:180,0
DA:181,1
DA:182,1
DA:183,1
DA:184,0
DA:185,1
DA:186,1
DA:187,1
DA:188,1
DA:189,1
DA:190,1
DA:191,1
DA:192,1
DA:193,1
DA:194,1
DA:195,1
DA:196,1
DA:197,1
DA:198,1
DA:199,1
DA:200,1
DA:201,1
DA:202,1
DA:203,1
DA:204,1
DA:205,1
DA:206,1
DA:207,1
DA:208,1
DA:209,1
DA:210,1
DA:211,1
DA:212,1
DA:213,1
DA:214,1
DA:215,1
DA:216,1
DA:217,1
DA:218,1
DA:219,1
DA:220,1
DA:221,1
DA:222,1
DA:223,1
DA:224,1
DA:225,1
DA:226,1
DA:227,1
DA:228,1
DA:229,1
DA:230,1
DA:231,1
DA:232,1
DA:233,1
DA:234,1
DA:235,1
DA:236,1
DA:237,1
DA:238,1
DA:239,1
DA:240,1
DA:241,1
DA:242,1
DA:243,1
DA:244,1
DA:245,1
DA:246,1
DA:247,1
DA:248,1
DA:249,1
DA:250,1
DA:251,1
DA:252,1
DA:253,1
DA:254,1
DA:255,1
DA:256,1
DA:257,1
DA:258,1
DA:259,1
DA:260,1
DA:261,1
DA:262,1
DA:263,1
DA:264,1
DA:265,1
DA:266,1
DA:267,1
DA:268,1
DA:269,1
DA:270,1
DA:271,1
DA:272,1
DA:273,1
DA:274,1
DA:275,1
DA:276,1
DA:277,1
DA:278,1
DA:279,1
DA:280,1
DA:281,1
DA:282,1
DA:283,1
DA:284,1
DA:285,1
DA:286,1
DA:287,1
DA:288,1
DA:289,1
DA:290,1
DA:291,1
DA:292,1
DA:293,1
DA:294,1
DA:295,1
DA:296,1
DA:297,1
DA:298,1
DA:299,1
DA:300,1
DA:301,1
DA:302,1
DA:303,1
DA:304,1
DA:305,1
DA:306,1
DA:307,1
DA:308,1
DA:309,1
DA:310,1
DA:311,1
DA:312,1
DA:313,1
DA:314,1
DA:315,1
DA:316,1
DA:317,1
DA:318,1
DA:319,1
DA:320,1
DA:321,1
DA:322,1
DA:323,1
DA:324,1
DA:325,1
DA:326,1
DA:327,1
DA:328,1
DA:329,1
DA:330,1
DA:331,1
DA:332,1
DA:333,1
DA:334,1
DA:335,1
DA:336,1
DA:337,1
DA:338,1
DA:339,1
DA:340,1
DA:341,1
DA:342,1
DA:343,1
DA:344,1
DA:345,1
DA:346,1
DA:347,1
DA:348,1
DA:349,1
DA:350,1
DA:351,1
DA:352,1
DA:353,1
DA:354,1
DA:355,1
DA:356,1
DA:357,1
DA:358,1
DA:359,1
DA:360,1
DA:361,1
DA:362,1
DA:363,1
DA:364,1
DA:365,1
DA:366,1
DA:367,1
DA:368,1
DA:369,1
DA:370,1
DA:371,1
DA:372,1
DA:373,1
DA:374,1
DA:375,1
DA:376,1
DA:377,1
DA:378,1
DA:379,1
DA:380,1
DA:381,1
DA:382,1
DA:383,1
DA:384,1
DA:385,1
DA:386,1
DA:387,1
DA:388,1
DA:389,1
DA:390,1
DA:391,1
DA:392,1
DA:393,1
DA:394,1
DA:395,1
DA:396,1
DA:397,1
DA:398,1
DA:399,1
DA:400,1
DA:401,1
DA:402,1
DA:403,1
DA:404,1
DA:405,1
LH:403
LF:405
end_of_record
node-23.7.0/test/fixtures/test-runner/output/name_and_skip_patterns.js                              0000664 0000000 0000000 00000000443 14746647661 0026302 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-skip-pattern=disabled --test-name-pattern=enabled
'use strict';
const common = require('../../../common');
const {
  test,
} = require('node:test');

test('disabled', common.mustNotCall());
test('enabled', common.mustCall());
test('enabled disabled', common.mustNotCall());
                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/output/name_and_skip_patterns.snapshot                        0000664 0000000 0000000 00000000274 14746647661 0027527 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: enabled
ok 1 - enabled
  ---
  duration_ms: *
  type: 'test'
  ...
1..1
# tests 1
# suites 0
# pass 1
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/output/name_pattern.js                                        0000664 0000000 0000000 00000005052 14746647661 0024250 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-name-pattern=enabled --test-name-pattern=yes --test-name-pattern=/pattern/i --test-name-pattern=/^DescribeForMatchWithAncestors\sNestedDescribeForMatchWithAncestors\sNestedTest$/
'use strict';
const common = require('../../../common');
const {
  after,
  afterEach,
  before,
  beforeEach,
  describe,
  it,
  test,
} = require('node:test');

test('top level test disabled', common.mustNotCall());
test('top level skipped test disabled', { skip: true }, common.mustNotCall());
test('top level skipped test enabled', { skip: true }, common.mustNotCall());
it('top level it enabled', common.mustCall());
it('top level it disabled', common.mustNotCall());
it.skip('top level skipped it disabled', common.mustNotCall());
it.skip('top level skipped it enabled', common.mustNotCall());
describe('top level describe never disabled', common.mustCall());
describe.skip('top level skipped describe disabled', common.mustNotCall());
describe.skip('top level skipped describe enabled', common.mustNotCall());
test('top level runs because name includes PaTtErN', common.mustCall());

test('top level test enabled', common.mustCall(async (t) => {
  t.beforeEach(common.mustCall());
  t.afterEach(common.mustCall());
  await t.test(
    'nested test runs because name includes PATTERN',
    common.mustCall(),
  );
}));

describe('top level describe enabled', () => {
  before(common.mustCall());
  beforeEach(common.mustCall(3));
  afterEach(common.mustCall(3));
  after(common.mustCall());

  it('nested it not disabled', common.mustCall());
  it('nested it enabled', common.mustCall());
  describe('nested describe not disabled', common.mustCall());
  describe('nested describe enabled', common.mustCall(() => {
    it('is enabled', common.mustCall());
  }));
});

describe('yes', function() {
  it('no', () => {});
  it('yes', () => {});

  describe('maybe', function() {
    it('no', () => {});
    it('yes', () => {});
  });
});

describe('no', function() {
  it('no', () => {});
  it('yes', () => {});

  describe('maybe', function() {
    it('no', () => {});
    it('yes', () => {});
  });
});

describe('no with todo', { todo: true }, () => {
  it('no', () => {});
  it('yes', () => {});

  describe('maybe', function() {
    it('no', () => {});
    it('yes', () => {});
  });
});

describe('DescribeForMatchWithAncestors', () => {
  it('NestedTest', () => common.mustNotCall());

  describe('NestedDescribeForMatchWithAncestors', () => {
    it('NestedTest', common.mustCall());
  });
})

describe('DescribeForMatchWithAncestors', () => {
  it('NestedTest', () => common.mustNotCall());
})
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test-runner/output/name_pattern.snapshot                                  0000664 0000000 0000000 00000007247 14746647661 0025503 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: top level skipped test enabled
ok 1 - top level skipped test enabled # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: top level it enabled
ok 2 - top level it enabled
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: top level skipped it enabled
ok 3 - top level skipped it enabled # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: top level skipped describe enabled
ok 4 - top level skipped describe enabled # SKIP
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: top level runs because name includes PaTtErN
ok 5 - top level runs because name includes PaTtErN
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: top level test enabled
    # Subtest: nested test runs because name includes PATTERN
    ok 1 - nested test runs because name includes PATTERN
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 6 - top level test enabled
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: top level describe enabled
    # Subtest: nested it not disabled
    ok 1 - nested it not disabled
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: nested it enabled
    ok 2 - nested it enabled
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: nested describe not disabled
    ok 3 - nested describe not disabled
      ---
      duration_ms: *
      type: 'suite'
      ...
    # Subtest: nested describe enabled
        # Subtest: is enabled
        ok 1 - is enabled
          ---
          duration_ms: *
          type: 'test'
          ...
        1..1
    ok 4 - nested describe enabled
      ---
      duration_ms: *
      type: 'suite'
      ...
    1..4
ok 7 - top level describe enabled
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: yes
    # Subtest: no
    ok 1 - no
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: yes
    ok 2 - yes
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: maybe
        # Subtest: no
        ok 1 - no
          ---
          duration_ms: *
          type: 'test'
          ...
        # Subtest: yes
        ok 2 - yes
          ---
          duration_ms: *
          type: 'test'
          ...
        1..2
    ok 3 - maybe
      ---
      duration_ms: *
      type: 'suite'
      ...
    1..3
ok 8 - yes
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: no
    # Subtest: yes
    ok 1 - yes
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: maybe
        # Subtest: yes
        ok 1 - yes
          ---
          duration_ms: *
          type: 'test'
          ...
        1..1
    ok 2 - maybe
      ---
      duration_ms: *
      type: 'suite'
      ...
    1..2
ok 9 - no
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: no with todo
    # Subtest: yes
    ok 1 - yes
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: maybe
        # Subtest: yes
        ok 1 - yes
          ---
          duration_ms: *
          type: 'test'
          ...
        1..1
    ok 2 - maybe
      ---
      duration_ms: *
      type: 'suite'
      ...
    1..2
ok 10 - no with todo # TODO
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: DescribeForMatchWithAncestors
    # Subtest: NestedDescribeForMatchWithAncestors
        # Subtest: NestedTest
        ok 1 - NestedTest
          ---
          duration_ms: *
          type: 'test'
          ...
        1..1
    ok 1 - NestedDescribeForMatchWithAncestors
      ---
      duration_ms: *
      type: 'suite'
      ...
    1..1
ok 11 - DescribeForMatchWithAncestors
  ---
  duration_ms: *
  type: 'suite'
  ...
1..11
# tests 18
# suites 12
# pass 16
# fail 0
# cancelled 0
# skipped 2
# todo 0
# duration_ms *
                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test-runner/output/name_pattern_with_only.js                              0000664 0000000 0000000 00000001017 14746647661 0026341 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-only --test-name-pattern=enabled
'use strict';
const common = require('../../../common');
const { test } = require('node:test');

test('enabled and only', { only: true }, common.mustCall(async (t) => {
  await t.test('enabled', common.mustCall());
  await t.test('disabled but parent not', common.mustCall());
}));

test('enabled but not only', common.mustNotCall());
test('only does not match pattern', { only: true }, common.mustNotCall());
test('not only and does not match pattern', common.mustNotCall());
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/test-runner/output/name_pattern_with_only.snapshot                        0000664 0000000 0000000 00000000703 14746647661 0027565 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: enabled and only
    # Subtest: enabled
    ok 1 - enabled
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: disabled but parent not
    ok 2 - disabled but parent not
      ---
      duration_ms: *
      type: 'test'
      ...
    1..2
ok 1 - enabled and only
  ---
  duration_ms: *
  type: 'test'
  ...
1..1
# tests 3
# suites 0
# pass 3
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                             node-23.7.0/test/fixtures/test-runner/output/no_refs.js                                             0000664 0000000 0000000 00000000554 14746647661 0023230 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const test = require('node:test');

// When run alone, the test below does not keep the event loop alive.
test('does not keep event loop alive', async (t) => {
  await t.test('+does not keep event loop alive', async (t) => {
    return new Promise((resolve) => {
      setTimeout(resolve, 1000).unref();
    });
  });
});
                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/output/no_refs.snapshot                                       0000664 0000000 0000000 00000001600 14746647661 0024444 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: does not keep event loop alive
    # Subtest: +does not keep event loop alive
    not ok 1 - +does not keep event loop alive
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'
      failureType: 'cancelledByParent'
      error: 'Promise resolution is still pending but the event loop has already resolved'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
      ...
    1..1
not ok 1 - does not keep event loop alive
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'
  failureType: 'cancelledByParent'
  error: 'Promise resolution is still pending but the event loop has already resolved'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
  ...
1..1
# tests 2
# suites 0
# pass 0
# fail 0
# cancelled 2
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                node-23.7.0/test/fixtures/test-runner/output/no_tests.js                                            0000664 0000000 0000000 00000000214 14746647661 0023424 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const test = require('node:test');

// No TAP output should be generated.
console.log(test.name);
                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/output/no_tests.snapshot                                      0000664 0000000 0000000 00000000005 14746647661 0024645 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        test
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test-runner/output/non-tty-forced-color-output.js                         0000664 0000000 0000000 00000000160 14746647661 0027110 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

process.env.FORCE_COLOR = 1;

const test = require('node:test');
test('passing test', () => {});
                                                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test-runner/output/non-tty-forced-color-output.snapshot                   0000664 0000000 0000000 00000000345 14746647661 0030340 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        [32m✔ passing test [90m(*ms)[39m[39m
[34mℹ tests 1[39m
[34mℹ suites 0[39m
[34mℹ pass 1[39m
[34mℹ fail 0[39m
[34mℹ cancelled 0[39m
[34mℹ skipped 0[39m
[34mℹ todo 0[39m
[34mℹ duration_ms *[39m
                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test-runner/output/only_tests.js                                          0000664 0000000 0000000 00000013247 14746647661 0024003 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-only
'use strict';
const common = require('../../../common');
const { test, describe, it } = require('node:test');

// These tests should be skipped based on the 'only' option.
test('only = undefined', common.mustNotCall());
test('only = undefined, skip = string', { skip: 'skip message' }, common.mustNotCall());
test('only = undefined, skip = true', { skip: true }, common.mustNotCall());
test('only = undefined, skip = false', { skip: false }, common.mustNotCall());
test('only = false', { only: false }, common.mustNotCall());
test('only = false, skip = string', { only: false, skip: 'skip message' }, common.mustNotCall());
test('only = false, skip = true', { only: false, skip: true }, common.mustNotCall());
test('only = false, skip = false', { only: false, skip: false }, common.mustNotCall());

// These tests should be skipped based on the 'skip' option.
test('only = true, skip = string', { only: true, skip: 'skip message' }, common.mustNotCall());
test('only = true, skip = true', { only: true, skip: true }, common.mustNotCall());

// An 'only' test with subtests.
test('only = true, with subtests', { only: true }, common.mustCall(async (t) => {
  // These subtests should run.
  await t.test('running subtest 1', common.mustCall());
  await t.test('running subtest 2', common.mustCall());

  // Switch the context to only execute 'only' tests.
  t.runOnly(true);
  await t.test('skipped subtest 1', common.mustNotCall());
  await t.test('skipped subtest 2'), common.mustNotCall();
  await t.test('running subtest 3', { only: true }, common.mustCall());

  // Switch the context back to execute all tests.
  t.runOnly(false);
  await t.test('running subtest 4', common.mustCall(async (t) => {
    // These subtests should run.
    await t.test('running sub-subtest 1', common.mustCall());
    await t.test('running sub-subtest 2', common.mustCall());

    // Switch the context to only execute 'only' tests.
    t.runOnly(true);
    await t.test('skipped sub-subtest 1', common.mustNotCall());
    await t.test('skipped sub-subtest 2', common.mustNotCall());
  }));

  // Explicitly do not run these tests.
  await t.test('skipped subtest 3', { only: false }, common.mustNotCall());
  await t.test('skipped subtest 4', { skip: true }, common.mustNotCall());
}));

describe.only('describe only = true, with subtests', common.mustCall(() => {
  it.only('`it` subtest 1 should run', common.mustCall());

  it('`it` subtest 2 should not run', common.mustNotCall());
}));

describe.only('describe only = true, with a mixture of subtests', common.mustCall(() => {
  it.only('`it` subtest 1', common.mustCall());

  it.only('`it` async subtest 1', common.mustCall(async () => {}));

  it('`it` subtest 2 only=true', { only: true }, common.mustCall());

  it('`it` subtest 2 only=false', { only: false }, common.mustNotCall());

  it.skip('`it` subtest 3 skip', common.mustNotCall());

  it.todo('`it` subtest 4 todo', { only: false }, common.mustNotCall());

  test.only('`test` subtest 1', common.mustCall());

  test.only('`test` async subtest 1', common.mustCall(async () => {}));

  test('`test` subtest 2 only=true', { only: true }, common.mustCall());

  test('`test` subtest 2 only=false', { only: false }, common.mustNotCall());

  test.skip('`test` subtest 3 skip', common.mustNotCall());

  test.todo('`test` subtest 4 todo', { only: false }, common.mustNotCall());
}));

describe.only('describe only = true, with subtests', common.mustCall(() => {
  test.only('subtest should run', common.mustCall());

  test('async subtest should not run', common.mustNotCall());

  test('subtest should be skipped', { only: false }, common.mustNotCall());
}));


describe('describe only = undefined, with nested only subtest', common.mustCall(() => {
  test('subtest should not run', common.mustNotCall());
  describe('nested describe', common.mustCall(() => {
    test('subtest should not run', common.mustNotCall());
    test.only('nested test should run', common.mustCall());
  }));
}));


describe('describe only = undefined, with subtests', common.mustCall(() => {
  test('async subtest should not run', common.mustNotCall());
}));

describe('describe only = false, with subtests', { only: false }, common.mustNotCall(() => {
  test('async subtest should not run', common.mustNotCall());
}));


describe.only('describe only = true, with nested subtests', common.mustCall(() => {
  test('async subtest should run', common.mustCall());
  describe('nested describe', common.mustCall(() => {
    test('nested test should run', common.mustCall());
  }));
}));

describe('describe only = false, with nested only subtests', { only: false }, common.mustNotCall(() => {
  test('async subtest should not run', common.mustNotCall());
  describe('nested describe', common.mustNotCall(() => {
    test.only('nested test should run', common.mustNotCall());
  }));
}));

test('nested tests with run only',{only: true}, common.mustCall(async (t) => {
  // Within this test, all subtests are run by default.
  await t.test('running subtest - 1');

  // The test context can be updated to run subtests with the 'only' option.
  await t.runOnly(true);
  await t.test('this subtest is now skipped - 2', common.mustNotCall());
  await t.test('this subtest is run  - 3', { only: true }, common.mustCall(async (t) => {
    await t.test('this subtest is run - 4', common.mustCall());
    await t.test('this subtest is run - 5', { only: true }, common.mustCall());
  }));

  // Switch the context back to execute all tests.
  await t.runOnly(false);
  await t.test('this subtest is now run - 6');

  // Explicitly do not run these tests.
  await t.test('skipped subtest - 7', { only: false }, common.mustNotCall());
  await t.test('skipped subtest - 8', { skip: true }, common.mustNotCall());
}))
                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test-runner/output/only_tests.snapshot                                    0000664 0000000 0000000 00000011537 14746647661 0025226 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: only = true, skip = string
ok 1 - only = true, skip = string # SKIP skip message
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: only = true, skip = true
ok 2 - only = true, skip = true # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: only = true, with subtests
    # Subtest: running subtest 1
    ok 1 - running subtest 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: running subtest 2
    ok 2 - running subtest 2
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: running subtest 3
    ok 3 - running subtest 3
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: running subtest 4
        # Subtest: running sub-subtest 1
        ok 1 - running sub-subtest 1
          ---
          duration_ms: *
          type: 'test'
          ...
        # Subtest: running sub-subtest 2
        ok 2 - running sub-subtest 2
          ---
          duration_ms: *
          type: 'test'
          ...
        1..2
    ok 4 - running subtest 4
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: skipped subtest 4
    ok 5 - skipped subtest 4 # SKIP
      ---
      duration_ms: *
      type: 'test'
      ...
    1..5
ok 3 - only = true, with subtests
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: describe only = true, with subtests
    # Subtest: `it` subtest 1 should run
    ok 1 - `it` subtest 1 should run
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 4 - describe only = true, with subtests
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: describe only = true, with a mixture of subtests
    # Subtest: `it` subtest 1
    ok 1 - `it` subtest 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: `it` async subtest 1
    ok 2 - `it` async subtest 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: `it` subtest 2 only=true
    ok 3 - `it` subtest 2 only=true
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: `test` subtest 1
    ok 4 - `test` subtest 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: `test` async subtest 1
    ok 5 - `test` async subtest 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: `test` subtest 2 only=true
    ok 6 - `test` subtest 2 only=true
      ---
      duration_ms: *
      type: 'test'
      ...
    1..6
ok 5 - describe only = true, with a mixture of subtests
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: describe only = true, with subtests
    # Subtest: subtest should run
    ok 1 - subtest should run
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 6 - describe only = true, with subtests
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: describe only = undefined, with nested only subtest
    # Subtest: nested describe
        # Subtest: nested test should run
        ok 1 - nested test should run
          ---
          duration_ms: *
          type: 'test'
          ...
        1..1
    ok 1 - nested describe
      ---
      duration_ms: *
      type: 'suite'
      ...
    1..1
ok 7 - describe only = undefined, with nested only subtest
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: describe only = true, with nested subtests
    # Subtest: async subtest should run
    ok 1 - async subtest should run
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: nested describe
        # Subtest: nested test should run
        ok 1 - nested test should run
          ---
          duration_ms: *
          type: 'test'
          ...
        1..1
    ok 2 - nested describe
      ---
      duration_ms: *
      type: 'suite'
      ...
    1..2
ok 8 - describe only = true, with nested subtests
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: nested tests with run only
    # Subtest: running subtest - 1
    ok 1 - running subtest - 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: this subtest is run  - 3
        # Subtest: this subtest is run - 4
        ok 1 - this subtest is run - 4
          ---
          duration_ms: *
          type: 'test'
          ...
        # Subtest: this subtest is run - 5
        ok 2 - this subtest is run - 5
          ---
          duration_ms: *
          type: 'test'
          ...
        1..2
    ok 2 - this subtest is run  - 3
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: this subtest is now run - 6
    ok 3 - this subtest is now run - 6
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: skipped subtest - 8
    ok 4 - skipped subtest - 8 # SKIP
      ---
      duration_ms: *
      type: 'test'
      ...
    1..4
ok 9 - nested tests with run only
  ---
  duration_ms: *
  type: 'test'
  ...
1..9
# tests 28
# suites 7
# pass 24
# fail 0
# cancelled 0
# skipped 4
# todo 0
# duration_ms *
                                                                                                                                                                 node-23.7.0/test/fixtures/test-runner/output/output.js                                              0000664 0000000 0000000 00000022120 14746647661 0023126 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --no-warnings
'use strict';
require('../../../common');
const assert = require('node:assert');
const test = require('node:test');
const util = require('util');

test('sync pass todo', (t) => {
  t.todo();
});

test('sync pass todo with message', (t) => {
  t.todo('this is a passing todo');
});

test('sync fail todo', (t) => {
  t.todo();
  throw new Error('thrown from sync fail todo');
});

test('sync fail todo with message', (t) => {
  t.todo('this is a failing todo');
  throw new Error('thrown from sync fail todo with message');
});

test('sync skip pass', (t) => {
  t.skip();
});

test('sync skip pass with message', (t) => {
  t.skip('this is skipped');
});

test('sync pass', (t) => {
  t.diagnostic('this test should pass');
});

test('sync throw fail', () => {
  throw new Error('thrown from sync throw fail');
});

test('async skip pass', async (t) => {
  t.skip();
});

test('async pass', async () => {

});

test('async throw fail', async () => {
  throw new Error('thrown from async throw fail');
});

test('async skip fail', async (t) => {
  t.skip();
  throw new Error('thrown from async throw fail');
});

test('async assertion fail', async () => {
  // Make sure the assert module is handled.
  assert.strictEqual(true, false);
});

test('resolve pass', () => {
  return Promise.resolve();
});

test('reject fail', () => {
  return Promise.reject(new Error('rejected from reject fail'));
});

test('unhandled rejection - passes but warns', () => {
  Promise.reject(new Error('rejected from unhandled rejection fail'));
});

test('async unhandled rejection - passes but warns', async () => {
  Promise.reject(new Error('rejected from async unhandled rejection fail'));
});

test('immediate throw - passes but warns', () => {
  setImmediate(() => {
    throw new Error('thrown from immediate throw fail');
  });
});

test('immediate reject - passes but warns', () => {
  setImmediate(() => {
    Promise.reject(new Error('rejected from immediate reject fail'));
  });
});

test('immediate resolve pass', () => {
  return new Promise((resolve) => {
    setImmediate(() => {
      resolve();
    });
  });
});

test('subtest sync throw fail', async (t) => {
  await t.test('+sync throw fail', (t) => {
    t.diagnostic('this subtest should make its parent test fail');
    throw new Error('thrown from subtest sync throw fail');
  });
});

test('sync throw non-error fail', async (t) => {
  throw Symbol('thrown symbol from sync throw non-error fail');
});

test('level 0a', { concurrency: 4 }, async (t) => {
  t.test('level 1a', async (t) => {
    const p1a = new Promise((resolve) => {
      setTimeout(() => {
        resolve();
      }, 100);
    });

    return p1a;
  });

  test('level 1b', async (t) => {
    const p1b = new Promise((resolve) => {
      resolve();
    });

    return p1b;
  });

  t.test('level 1c', async (t) => {
    const p1c = new Promise((resolve) => {
      setTimeout(() => {
        resolve();
      }, 200);
    });

    return p1c;
  });

  t.test('level 1d', async (t) => {
    const p1c = new Promise((resolve) => {
      setTimeout(() => {
        resolve();
      }, 150);
    });

    return p1c;
  });

  const p0a = new Promise((resolve) => {
    setTimeout(() => {
      resolve();
    }, 300);
  });

  return p0a;
});

test('top level', { concurrency: 2 }, async (t) => {
  t.test('+long running', async (t) => {
    return new Promise((resolve, reject) => {
      setTimeout(resolve, 300).unref();
    });
  });

  t.test('+short running', async (t) => {
    t.test('++short running', async (t) => {});
  });
});

test('invalid subtest - pass but subtest fails', (t) => {
  setImmediate(() => {
    t.test('invalid subtest fail', () => {
      throw new Error('this should not be thrown');
    });
  });
});

test('sync skip option', { skip: true }, (t) => {
  throw new Error('this should not be executed');
});

test('sync skip option with message', { skip: 'this is skipped' }, (t) => {
  throw new Error('this should not be executed');
});

test('sync skip option is false fail', { skip: false }, (t) => {
  throw new Error('this should be executed');
});

// A test with no arguments provided.
test();

// A test with only a named function provided.
test(function functionOnly() {});

// A test with only an anonymous function provided.
test(() => {});

// A test with only a name provided.
test('test with only a name provided');

// A test with an empty string name.
test('');

// A test with only options provided.
test({ skip: true });

// A test with only a name and options provided.
test('test with a name and options provided', { skip: true });

// A test with only options and a function provided.
test({ skip: true }, function functionAndOptions() {});

test('callback pass', (t, done) => {
  setImmediate(done);
});

test('callback fail', (t, done) => {
  setImmediate(() => {
    done(new Error('callback failure'));
  });
});

test('sync t is this in test', function(t) {
  assert.strictEqual(this, t);
});

test('async t is this in test', async function(t) {
  assert.strictEqual(this, t);
});

test('callback t is this in test', function(t, done) {
  assert.strictEqual(this, t);
  done();
});

test('callback also returns a Promise', async (t, done) => {
  throw new Error('thrown from callback also returns a Promise');
});

test('callback throw', (t, done) => {
  throw new Error('thrown from callback throw');
});

test('callback called twice', (t, done) => {
  done();
  done();
});

test('callback called twice in different ticks', (t, done) => {
  setImmediate(done);
  done();
});

test('callback called twice in future tick', (t, done) => {
  setImmediate(() => {
    done();
    done();
  });
});

test('callback async throw', (t, done) => {
  setImmediate(() => {
    throw new Error('thrown from callback async throw');
  });
});

test('callback async throw after done', (t, done) => {
  setImmediate(() => {
    throw new Error('thrown from callback async throw after done');
  });

  done();
});

test('only is set on subtests but not in only mode', async (t) => {
  // All of these subtests should run.
  await t.test('running subtest 1');
  t.runOnly(true);
  await t.test('running subtest 2');
  await t.test('running subtest 3', { only: true });
  t.runOnly(false);
  await t.test('running subtest 4');
});

test('custom inspect symbol fail', () => {
  const obj = {
    [util.inspect.custom]() {
      return 'customized';
    },
    foo: 1,
  };

  throw obj;
});

test('custom inspect symbol that throws fail', () => {
  const obj = {
    [util.inspect.custom]() {
      throw new Error('bad-inspect');
    },
    foo: 1,
  };

  throw obj;
});

test('subtest sync throw fails', async (t) => {
  await t.test('sync throw fails at first', (t) => {
    throw new Error('thrown from subtest sync throw fails at first');
  });
  await t.test('sync throw fails at second', (t) => {
    throw new Error('thrown from subtest sync throw fails at second');
  });
});

test('timed out async test', { timeout: 5 }, async (t) => {
  return new Promise((resolve) => {
    setTimeout(() => {
      // Empty timer so the process doesn't exit before the timeout triggers.
    }, 5);
    setTimeout(resolve, 30_000_000).unref();
  });
});

test('timed out callback test', { timeout: 5 }, (t, done) => {
  setTimeout(() => {
    // Empty timer so the process doesn't exit before the timeout triggers.
  }, 5);
  setTimeout(done, 30_000_000).unref();
});


test('large timeout async test is ok', { timeout: 30_000_000 }, async (t) => {
  return new Promise((resolve) => {
    setTimeout(resolve, 10);
  });
});

test('large timeout callback test is ok', { timeout: 30_000_000 }, (t, done) => {
  setTimeout(done, 10);
});

test('successful thenable', () => {
  let thenCalled = false;
  return {
    get then() {
      if (thenCalled) throw new Error();
      thenCalled = true;
      return (successHandler) => successHandler();
    },
  };
});

test('rejected thenable', () => {
  let thenCalled = false;
  return {
    get then() {
      if (thenCalled) throw new Error();
      thenCalled = true;
      return (_, errorHandler) => errorHandler('custom error');
    },
  };
});

test('unfinished test with uncaughtException', async () => {
  await new Promise(() => {
    setTimeout(() => { throw new Error('foo'); });
  });
});

test('unfinished test with unhandledRejection', async () => {
  await new Promise(() => {
    setTimeout(() => Promise.reject(new Error('bar')));
  });
});

// Verify that uncaught exceptions outside of any tests are handled after the
// test harness has finished bootstrapping itself.
setImmediate(() => {
  throw new Error('uncaught from outside of a test');
});

test('assertion errors display actual and expected properly', async () => {
  // Make sure the assert module is handled.
  const circular = { bar: 2 };
  circular.c = circular;
  const tmpLimit = Error.stackTraceLimit;
  Error.stackTraceLimit = 1;
  const boo = [1];
  const baz = {
    date: new Date(0),
    null: null,
    number: 1,
    string: 'Hello',
    undefined: undefined,
  }
  try {
    assert.deepEqual({ foo: 1, bar: 1, boo, baz }, { boo, baz, circular }); // eslint-disable-line no-restricted-properties
  } catch (err) {
    Error.stackTraceLimit = tmpLimit;
    throw err;
  }
});
                                                                                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test-runner/output/output.snapshot                                        0000664 0000000 0000000 00000044401 14746647661 0024357 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: sync pass todo
ok 1 - sync pass todo # TODO
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync pass todo with message
ok 2 - sync pass todo with message # TODO this is a passing todo
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync fail todo
not ok 3 - sync fail todo # TODO
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from sync fail todo'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: sync fail todo with message
not ok 4 - sync fail todo with message # TODO this is a failing todo
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from sync fail todo with message'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: sync skip pass
ok 5 - sync skip pass # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync skip pass with message
ok 6 - sync skip pass with message # SKIP this is skipped
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync pass
ok 7 - sync pass
  ---
  duration_ms: *
  type: 'test'
  ...
# this test should pass
# Subtest: sync throw fail
not ok 8 - sync throw fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from sync throw fail'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: async skip pass
ok 9 - async skip pass # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: async pass
ok 10 - async pass
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: async throw fail
not ok 11 - async throw fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from async throw fail'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: async skip fail
not ok 12 - async skip fail # SKIP
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from async throw fail'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: async assertion fail
not ok 13 - async assertion fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: |-
    Expected values to be strictly equal:
    
    true !== false
    
  code: 'ERR_ASSERTION'
  name: 'AssertionError'
  expected: false
  actual: true
  operator: 'strictEqual'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: resolve pass
ok 14 - resolve pass
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: reject fail
not ok 15 - reject fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'rejected from reject fail'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: unhandled rejection - passes but warns
ok 16 - unhandled rejection - passes but warns
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: async unhandled rejection - passes but warns
ok 17 - async unhandled rejection - passes but warns
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: immediate throw - passes but warns
ok 18 - immediate throw - passes but warns
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: immediate reject - passes but warns
ok 19 - immediate reject - passes but warns
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: immediate resolve pass
ok 20 - immediate resolve pass
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: subtest sync throw fail
    # Subtest: +sync throw fail
    not ok 1 - +sync throw fail
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/output.js:(LINE):11'
      failureType: 'testCodeFailure'
      error: 'thrown from subtest sync throw fail'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # this subtest should make its parent test fail
    1..1
not ok 21 - subtest sync throw fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '1 subtest failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: sync throw non-error fail
not ok 22 - sync throw non-error fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'Symbol(thrown symbol from sync throw non-error fail)'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: level 0a
    # Subtest: level 1a
    ok 1 - level 1a
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: level 1b
    ok 2 - level 1b
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: level 1c
    ok 3 - level 1c
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: level 1d
    ok 4 - level 1d
      ---
      duration_ms: *
      type: 'test'
      ...
    1..4
ok 23 - level 0a
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: top level
    # Subtest: +long running
    not ok 1 - +long running
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/output.js:(LINE):5'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    # Subtest: +short running
        # Subtest: ++short running
        ok 1 - ++short running
          ---
          duration_ms: *
          type: 'test'
          ...
        1..1
    ok 2 - +short running
      ---
      duration_ms: *
      type: 'test'
      ...
    1..2
not ok 24 - top level
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '1 subtest failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: invalid subtest - pass but subtest fails
ok 25 - invalid subtest - pass but subtest fails
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync skip option
ok 26 - sync skip option # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync skip option with message
ok 27 - sync skip option with message # SKIP this is skipped
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync skip option is false fail
not ok 28 - sync skip option is false fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'this should be executed'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: <anonymous>
ok 29 - <anonymous>
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: functionOnly
ok 30 - functionOnly
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: <anonymous>
ok 31 - <anonymous>
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: test with only a name provided
ok 32 - test with only a name provided
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: <anonymous>
ok 33 - <anonymous>
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: <anonymous>
ok 34 - <anonymous> # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: test with a name and options provided
ok 35 - test with a name and options provided # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: functionAndOptions
ok 36 - functionAndOptions # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: callback pass
ok 37 - callback pass
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: callback fail
not ok 38 - callback fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'callback failure'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
  ...
# Subtest: sync t is this in test
ok 39 - sync t is this in test
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: async t is this in test
ok 40 - async t is this in test
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: callback t is this in test
ok 41 - callback t is this in test
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: callback also returns a Promise
not ok 42 - callback also returns a Promise
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'callbackAndPromisePresent'
  error: 'passed a callback but also returned a Promise'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: callback throw
not ok 43 - callback throw
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from callback throw'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: callback called twice
not ok 44 - callback called twice
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'multipleCallbackInvocations'
  error: 'callback invoked multiple times'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
  ...
# Subtest: callback called twice in different ticks
ok 45 - callback called twice in different ticks
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: callback called twice in future tick
not ok 46 - callback called twice in future tick
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'uncaughtException'
  error: 'callback invoked multiple times'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
  ...
# Subtest: callback async throw
not ok 47 - callback async throw
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'uncaughtException'
  error: 'thrown from callback async throw'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
  ...
# Subtest: callback async throw after done
ok 48 - callback async throw after done
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: only is set on subtests but not in only mode
    # Subtest: running subtest 1
    ok 1 - running subtest 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: running subtest 3
    ok 2 - running subtest 3
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: running subtest 4
    ok 3 - running subtest 4
      ---
      duration_ms: *
      type: 'test'
      ...
    1..3
ok 49 - only is set on subtests but not in only mode
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: custom inspect symbol fail
not ok 50 - custom inspect symbol fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'customized'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: custom inspect symbol that throws fail
not ok 51 - custom inspect symbol that throws fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: |-
    {
      foo: 1,
      [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]
    }
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: subtest sync throw fails
    # Subtest: sync throw fails at first
    not ok 1 - sync throw fails at first
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/output.js:(LINE):11'
      failureType: 'testCodeFailure'
      error: 'thrown from subtest sync throw fails at first'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # Subtest: sync throw fails at second
    not ok 2 - sync throw fails at second
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/output.js:(LINE):11'
      failureType: 'testCodeFailure'
      error: 'thrown from subtest sync throw fails at second'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    1..2
not ok 52 - subtest sync throw fails
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '2 subtests failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: timed out async test
not ok 53 - timed out async test
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testTimeoutFailure'
  error: 'test timed out after 5ms'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: timed out callback test
not ok 54 - timed out callback test
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testTimeoutFailure'
  error: 'test timed out after 5ms'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: large timeout async test is ok
ok 55 - large timeout async test is ok
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: large timeout callback test is ok
ok 56 - large timeout callback test is ok
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: successful thenable
ok 57 - successful thenable
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: rejected thenable
not ok 58 - rejected thenable
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'custom error'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: unfinished test with uncaughtException
not ok 59 - unfinished test with uncaughtException
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'uncaughtException'
  error: 'foo'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
  ...
# Subtest: unfinished test with unhandledRejection
not ok 60 - unfinished test with unhandledRejection
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'unhandledRejection'
  error: 'bar'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
  ...
# Subtest: assertion errors display actual and expected properly
not ok 61 - assertion errors display actual and expected properly
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: |-
    Expected values to be loosely deep-equal:
    
    {
      bar: 1,
      baz: {
        date: 1970-01-01T00:00:00.000Z,
        null: null,
        number: 1,
        string: 'Hello',
        undefined: undefined
      },
      boo: [
        1
      ],
      foo: 1
    }
    
    should loosely deep-equal
    
    {
      baz: {
        date: 1970-01-01T00:00:00.000Z,
        null: null,
        number: 1,
        string: 'Hello',
        undefined: undefined
      },
      boo: [
        1
      ],
      circular: <ref *1> {
        bar: 2,
        c: [Circular *1]
      }
    }
  code: 'ERR_ASSERTION'
  name: 'AssertionError'
  expected:
    boo:
      0: 1
    baz:
      date: 1970-01-01T00:00:00.000Z
      null: ~
      number: 1
      string: 'Hello'
    circular:
      bar: 2
      c: <Circular>
  actual:
    foo: 1
    bar: 1
    boo:
      0: 1
    baz:
      date: 1970-01-01T00:00:00.000Z
      null: ~
      number: 1
      string: 'Hello'
  operator: 'deepEqual'
  stack: |-
    *
  ...
# Subtest: invalid subtest fail
not ok 62 - invalid subtest fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):7'
  failureType: 'parentAlreadyFinished'
  error: 'test could not be started because its parent finished'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
  ...
1..62
# Error: Test "unhandled rejection - passes but warns" at test/fixtures/test-runner/output/output.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from unhandled rejection fail" and would have caused the test to fail, but instead triggered an unhandledRejection event.
# Error: Test "async unhandled rejection - passes but warns" at test/fixtures/test-runner/output/output.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from async unhandled rejection fail" and would have caused the test to fail, but instead triggered an unhandledRejection event.
# Error: A resource generated asynchronous activity after the test ended. This activity created the error "Error: uncaught from outside of a test" which triggered an uncaughtException event, caught by the test runner.
# Error: Test "immediate throw - passes but warns" at test/fixtures/test-runner/output/output.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error: thrown from immediate throw fail" and would have caused the test to fail, but instead triggered an uncaughtException event.
# Error: Test "immediate reject - passes but warns" at test/fixtures/test-runner/output/output.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from immediate reject fail" and would have caused the test to fail, but instead triggered an unhandledRejection event.
# Error: Test "callback called twice in different ticks" at test/fixtures/test-runner/output/output.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error [ERR_TEST_FAILURE]: callback invoked multiple times" and would have caused the test to fail, but instead triggered an uncaughtException event.
# Error: Test "callback async throw after done" at test/fixtures/test-runner/output/output.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error: thrown from callback async throw after done" and would have caused the test to fail, but instead triggered an uncaughtException event.
# tests 75
# suites 0
# pass 34
# fail 25
# cancelled 3
# skipped 9
# todo 4
# duration_ms *
                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/test-runner/output/output_cli.js                                          0000664 0000000 0000000 00000000544 14746647661 0023763 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const fixtures = require('../../../common/fixtures');
const spawn = require('node:child_process').spawn;

spawn(process.execPath,
      ['--no-warnings', '--test', '--test-reporter', 'tap', fixtures.path('test-runner/output/output.js'), fixtures.path('test-runner/output/single.js')],
      { stdio: 'inherit' });
                                                                                                                                                            node-23.7.0/test/fixtures/test-runner/output/output_cli.snapshot                                    0000664 0000000 0000000 00000045136 14746647661 0025214 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: sync pass todo
ok 1 - sync pass todo # TODO
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync pass todo with message
ok 2 - sync pass todo with message # TODO this is a passing todo
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync fail todo
not ok 3 - sync fail todo # TODO
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from sync fail todo'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: sync fail todo with message
not ok 4 - sync fail todo with message # TODO this is a failing todo
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from sync fail todo with message'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: sync skip pass
ok 5 - sync skip pass # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync skip pass with message
ok 6 - sync skip pass with message # SKIP this is skipped
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync pass
ok 7 - sync pass
  ---
  duration_ms: *
  type: 'test'
  ...
# this test should pass
# Subtest: sync throw fail
not ok 8 - sync throw fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from sync throw fail'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: async skip pass
ok 9 - async skip pass # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: async pass
ok 10 - async pass
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: async throw fail
not ok 11 - async throw fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from async throw fail'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: async skip fail
not ok 12 - async skip fail # SKIP
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from async throw fail'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: async assertion fail
not ok 13 - async assertion fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: |-
    Expected values to be strictly equal:
    
    true !== false
    
  code: 'ERR_ASSERTION'
  name: 'AssertionError'
  expected: false
  actual: true
  operator: 'strictEqual'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: resolve pass
ok 14 - resolve pass
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: reject fail
not ok 15 - reject fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'rejected from reject fail'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: unhandled rejection - passes but warns
ok 16 - unhandled rejection - passes but warns
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: async unhandled rejection - passes but warns
ok 17 - async unhandled rejection - passes but warns
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: immediate throw - passes but warns
ok 18 - immediate throw - passes but warns
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: immediate reject - passes but warns
ok 19 - immediate reject - passes but warns
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: immediate resolve pass
ok 20 - immediate resolve pass
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: subtest sync throw fail
    # Subtest: +sync throw fail
    not ok 1 - +sync throw fail
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/output.js:(LINE):11'
      failureType: 'testCodeFailure'
      error: 'thrown from subtest sync throw fail'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # this subtest should make its parent test fail
    1..1
not ok 21 - subtest sync throw fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '1 subtest failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: sync throw non-error fail
not ok 22 - sync throw non-error fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'Symbol(thrown symbol from sync throw non-error fail)'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: level 0a
    # Subtest: level 1a
    ok 1 - level 1a
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: level 1b
    ok 2 - level 1b
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: level 1c
    ok 3 - level 1c
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: level 1d
    ok 4 - level 1d
      ---
      duration_ms: *
      type: 'test'
      ...
    1..4
ok 23 - level 0a
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: top level
    # Subtest: +long running
    not ok 1 - +long running
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/output.js:(LINE):5'
      failureType: 'cancelledByParent'
      error: 'test did not finish before its parent and was cancelled'
      code: 'ERR_TEST_FAILURE'
      ...
    # Subtest: +short running
        # Subtest: ++short running
        ok 1 - ++short running
          ---
          duration_ms: *
          type: 'test'
          ...
        1..1
    ok 2 - +short running
      ---
      duration_ms: *
      type: 'test'
      ...
    1..2
not ok 24 - top level
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '1 subtest failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: invalid subtest - pass but subtest fails
ok 25 - invalid subtest - pass but subtest fails
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync skip option
ok 26 - sync skip option # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync skip option with message
ok 27 - sync skip option with message # SKIP this is skipped
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: sync skip option is false fail
not ok 28 - sync skip option is false fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'this should be executed'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: <anonymous>
ok 29 - <anonymous>
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: functionOnly
ok 30 - functionOnly
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: <anonymous>
ok 31 - <anonymous>
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: test with only a name provided
ok 32 - test with only a name provided
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: <anonymous>
ok 33 - <anonymous>
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: <anonymous>
ok 34 - <anonymous> # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: test with a name and options provided
ok 35 - test with a name and options provided # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: functionAndOptions
ok 36 - functionAndOptions # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: callback pass
ok 37 - callback pass
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: callback fail
not ok 38 - callback fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'callback failure'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
  ...
# Subtest: sync t is this in test
ok 39 - sync t is this in test
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: async t is this in test
ok 40 - async t is this in test
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: callback t is this in test
ok 41 - callback t is this in test
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: callback also returns a Promise
not ok 42 - callback also returns a Promise
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'callbackAndPromisePresent'
  error: 'passed a callback but also returned a Promise'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: callback throw
not ok 43 - callback throw
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'thrown from callback throw'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
    *
    *
    *
    *
  ...
# Subtest: callback called twice
not ok 44 - callback called twice
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'multipleCallbackInvocations'
  error: 'callback invoked multiple times'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
  ...
# Subtest: callback called twice in different ticks
ok 45 - callback called twice in different ticks
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: callback called twice in future tick
not ok 46 - callback called twice in future tick
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'uncaughtException'
  error: 'callback invoked multiple times'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
  ...
# Subtest: callback async throw
not ok 47 - callback async throw
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'uncaughtException'
  error: 'thrown from callback async throw'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
  ...
# Subtest: callback async throw after done
ok 48 - callback async throw after done
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: only is set on subtests but not in only mode
    # Subtest: running subtest 1
    ok 1 - running subtest 1
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: running subtest 2
    ok 2 - running subtest 2
      ---
      duration_ms: *
      type: 'test'
      ...
    # 'only' and 'runOnly' require the --test-only command-line option.
    # Subtest: running subtest 3
    ok 3 - running subtest 3
      ---
      duration_ms: *
      type: 'test'
      ...
    # 'only' and 'runOnly' require the --test-only command-line option.
    # Subtest: running subtest 4
    ok 4 - running subtest 4
      ---
      duration_ms: *
      type: 'test'
      ...
    1..4
ok 49 - only is set on subtests but not in only mode
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: custom inspect symbol fail
not ok 50 - custom inspect symbol fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'customized'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: custom inspect symbol that throws fail
not ok 51 - custom inspect symbol that throws fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: |-
    {
      foo: 1,
      [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]
    }
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: subtest sync throw fails
    # Subtest: sync throw fails at first
    not ok 1 - sync throw fails at first
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/output.js:(LINE):11'
      failureType: 'testCodeFailure'
      error: 'thrown from subtest sync throw fails at first'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    # Subtest: sync throw fails at second
    not ok 2 - sync throw fails at second
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/output.js:(LINE):11'
      failureType: 'testCodeFailure'
      error: 'thrown from subtest sync throw fails at second'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
        *
        *
        *
        *
        *
        *
      ...
    1..2
not ok 52 - subtest sync throw fails
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '2 subtests failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: timed out async test
not ok 53 - timed out async test
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testTimeoutFailure'
  error: 'test timed out after 5ms'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: timed out callback test
not ok 54 - timed out callback test
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testTimeoutFailure'
  error: 'test timed out after 5ms'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: large timeout async test is ok
ok 55 - large timeout async test is ok
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: large timeout callback test is ok
ok 56 - large timeout callback test is ok
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: successful thenable
ok 57 - successful thenable
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: rejected thenable
not ok 58 - rejected thenable
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'custom error'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: unfinished test with uncaughtException
not ok 59 - unfinished test with uncaughtException
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'uncaughtException'
  error: 'foo'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
  ...
# Subtest: unfinished test with unhandledRejection
not ok 60 - unfinished test with unhandledRejection
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'unhandledRejection'
  error: 'bar'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
    *
    *
  ...
# Subtest: assertion errors display actual and expected properly
not ok 61 - assertion errors display actual and expected properly
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: |-
    Expected values to be loosely deep-equal:
    
    {
      bar: 1,
      baz: {
        date: 1970-01-01T00:00:00.000Z,
        null: null,
        number: 1,
        string: 'Hello',
        undefined: undefined
      },
      boo: [
        1
      ],
      foo: 1
    }
    
    should loosely deep-equal
    
    {
      baz: {
        date: 1970-01-01T00:00:00.000Z,
        null: null,
        number: 1,
        string: 'Hello',
        undefined: undefined
      },
      boo: [
        1
      ],
      circular: <ref *1> {
        bar: 2,
        c: [Circular *1]
      }
    }
  code: 'ERR_ASSERTION'
  name: 'AssertionError'
  expected:
    boo:
      0: 1
    baz:
      date: 1970-01-01T00:00:00.000Z
      null: ~
      number: 1
      string: 'Hello'
    circular:
      bar: 2
      c: <Circular>
  actual:
    foo: 1
    bar: 1
    boo:
      0: 1
    baz:
      date: 1970-01-01T00:00:00.000Z
      null: ~
      number: 1
      string: 'Hello'
  operator: 'deepEqual'
  stack: |-
    *
  ...
# Subtest: invalid subtest fail
not ok 62 - invalid subtest fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/output.js:(LINE):7'
  failureType: 'parentAlreadyFinished'
  error: 'test could not be started because its parent finished'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
  ...
# Error: Test "unhandled rejection - passes but warns" at test/fixtures/test-runner/output/output.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from unhandled rejection fail" and would have caused the test to fail, but instead triggered an unhandledRejection event.
# Error: Test "async unhandled rejection - passes but warns" at test/fixtures/test-runner/output/output.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from async unhandled rejection fail" and would have caused the test to fail, but instead triggered an unhandledRejection event.
# Error: A resource generated asynchronous activity after the test ended. This activity created the error "Error: uncaught from outside of a test" which triggered an uncaughtException event, caught by the test runner.
# Error: Test "immediate throw - passes but warns" at test/fixtures/test-runner/output/output.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error: thrown from immediate throw fail" and would have caused the test to fail, but instead triggered an uncaughtException event.
# Error: Test "immediate reject - passes but warns" at test/fixtures/test-runner/output/output.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from immediate reject fail" and would have caused the test to fail, but instead triggered an unhandledRejection event.
# Error: Test "callback called twice in different ticks" at test/fixtures/test-runner/output/output.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error [ERR_TEST_FAILURE]: callback invoked multiple times" and would have caused the test to fail, but instead triggered an uncaughtException event.
# Error: Test "callback async throw after done" at test/fixtures/test-runner/output/output.js:(LINE):1 generated asynchronous activity after the test ended. This activity created the error "Error: thrown from callback async throw after done" and would have caused the test to fail, but instead triggered an uncaughtException event.
# Subtest: last test
ok 63 - last test
  ---
  duration_ms: *
  type: 'test'
  ...
1..63
# tests 77
# suites 0
# pass 36
# fail 25
# cancelled 3
# skipped 9
# todo 4
# duration_ms *
                                                                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test-runner/output/reset-color-depth.js                                   0000664 0000000 0000000 00000000241 14746647661 0025126 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

// Make tests OS-independent by overriding stdio getColorDepth().
process.stdout.getColorDepth = () => 8;
process.stderr.getColorDepth = () => 8;
                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/test-runner/output/single.js                                              0000664 0000000 0000000 00000000116 14746647661 0023050 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');
test('last test', () => {});
                                                                                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test-runner/output/skip-each-hooks.js                                     0000664 0000000 0000000 00000000543 14746647661 0024560 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-reporter=spec
'use strict';
const { after, afterEach, before, beforeEach, test } = require('node:test');

before(() => {
  console.log('BEFORE');
});

beforeEach(() => {
  console.log('BEFORE EACH');
});

after(() => {
  console.log('AFTER');
});

afterEach(() => {
  console.log('AFTER EACH');
});

test('skipped test', { skip: true });
                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/output/skip-each-hooks.snapshot                               0000664 0000000 0000000 00000000225 14746647661 0026000 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        BEFORE
AFTER
﹣ skipped test (*ms) # SKIP
ℹ tests 1
ℹ suites 0
ℹ pass 0
ℹ fail 0
ℹ cancelled 0
ℹ skipped 1
ℹ todo 0
ℹ duration_ms *
                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test-runner/output/skip_pattern.js                                        0000664 0000000 0000000 00000001550 14746647661 0024275 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-skip-pattern=disabled --test-skip-pattern=/no/i
'use strict';
const common = require('../../../common');
const {
  describe,
  it,
  test,
} = require('node:test');

test('top level test disabled', common.mustNotCall());
test('top level skipped test disabled', { skip: true }, common.mustNotCall());
test('top level skipped test enabled', { skip: true }, common.mustNotCall());
it('top level it enabled', common.mustCall());
it('top level it disabled', common.mustNotCall());
it.skip('top level skipped it disabled', common.mustNotCall());
it.skip('top level skipped it enabled', common.mustNotCall());
describe('top level describe', common.mustCall());
describe.skip('top level skipped describe disabled', common.mustNotCall());
describe.skip('top level skipped describe enabled', common.mustNotCall());
test('this will NOt call', common.mustNotCall());
                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/output/skip_pattern.snapshot                                  0000664 0000000 0000000 00000001311 14746647661 0025513 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: top level skipped test enabled
ok 1 - top level skipped test enabled # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: top level it enabled
ok 2 - top level it enabled
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: top level skipped it enabled
ok 3 - top level skipped it enabled # SKIP
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: top level describe
ok 4 - top level describe
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: top level skipped describe enabled
ok 5 - top level skipped describe enabled # SKIP
  ---
  duration_ms: *
  type: 'suite'
  ...
1..5
# tests 3
# suites 2
# pass 1
# fail 0
# cancelled 0
# skipped 2
# todo 0
# duration_ms *
                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/test-runner/output/source_mapped_locations.mjs                            0000664 0000000 0000000 00000000322 14746647661 0026644 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --enable-source-maps
import { test } from 'node:test';
import { strictEqual } from 'node:assert';
test('fails', () => {
    strictEqual(1, 2);
});
//# sourceMappingURL=source_mapped_locations.mjs.map
                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/output/source_mapped_locations.mjs.map                        0000664 0000000 0000000 00000000504 14746647661 0027422 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {"version":3,"file":"source_mapped_locations.mjs","sourceRoot":"","sources":["source_mapped_locations.ts"],"names":[],"mappings":"AAAA,8BAA8B;AAC9B,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AAE1C,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE;IACjB,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC"}
                                                                                                                                                                                            node-23.7.0/test/fixtures/test-runner/output/source_mapped_locations.snapshot                       0000664 0000000 0000000 00000001007 14746647661 0027713 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: fails
not ok 1 - fails
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/source_mapped_locations.ts:5:1'
  failureType: 'testCodeFailure'
  error: |-
    Expected values to be strictly equal:
    
    1 !== 2
    
  code: 'ERR_ASSERTION'
  name: 'AssertionError'
  expected: 2
  actual: 1
  operator: 'strictEqual'
  stack: |-
    *
    *
    *
    *
    *
  ...
1..1
# tests 1
# suites 0
# pass 0
# fail 1
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test-runner/output/source_mapped_locations.ts                             0000664 0000000 0000000 00000000234 14746647661 0026503 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --enable-source-maps
import { test } from 'node:test';
import { strictEqual } from 'node:assert';

test('fails', () => {
  strictEqual(1, 2);
});
                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/output/spec_reporter.js                                       0000664 0000000 0000000 00000001041 14746647661 0024441 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const fixtures = require('../../../common/fixtures');
const spawn = require('node:child_process').spawn;

const child = spawn(process.execPath,
                    ['--no-warnings', '--test-reporter', 'spec', fixtures.path('test-runner/output/output.js')],
                    { stdio: 'pipe' });
// eslint-disable-next-line no-control-regex
child.stdout.on('data', (d) => process.stdout.write(d.toString().replace(/[^\x00-\x7F]/g, '').replace(/\u001b\[\d+m/g, '')));
child.stderr.pipe(process.stderr);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/test-runner/output/spec_reporter.snapshot                                 0000664 0000000 0000000 00000021235 14746647661 0025673 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                         sync pass todo (*ms) # TODO
 sync pass todo with message (*ms) # this is a passing todo
 sync fail todo (*ms) # TODO
 sync fail todo with message (*ms) # this is a failing todo
 sync skip pass (*ms) # SKIP
 sync skip pass with message (*ms) # this is skipped
 sync pass (*ms)
 this test should pass
 sync throw fail (*ms)
 async skip pass (*ms) # SKIP
 async pass (*ms)
 async throw fail (*ms)
 async skip fail (*ms) # SKIP
 async assertion fail (*ms)
 resolve pass (*ms)
 reject fail (*ms)
 unhandled rejection - passes but warns (*ms)
 async unhandled rejection - passes but warns (*ms)
 immediate throw - passes but warns (*ms)
 immediate reject - passes but warns (*ms)
 immediate resolve pass (*ms)
 subtest sync throw fail
   +sync throw fail (*ms)
   this subtest should make its parent test fail
 subtest sync throw fail (*ms)
 sync throw non-error fail (*ms)
 level 0a
   level 1a (*ms)
   level 1b (*ms)
   level 1c (*ms)
   level 1d (*ms)
 level 0a (*ms)
 top level
   +long running (*ms)
   +short running
     ++short running (*ms)
   +short running (*ms)
 top level (*ms)
 invalid subtest - pass but subtest fails (*ms)
 sync skip option (*ms) # SKIP
 sync skip option with message (*ms) # this is skipped
 sync skip option is false fail (*ms)
 <anonymous> (*ms)
 functionOnly (*ms)
 <anonymous> (*ms)
 test with only a name provided (*ms)
 <anonymous> (*ms)
 <anonymous> (*ms) # SKIP
 test with a name and options provided (*ms) # SKIP
 functionAndOptions (*ms) # SKIP
 callback pass (*ms)
 callback fail (*ms)
 sync t is this in test (*ms)
 async t is this in test (*ms)
 callback t is this in test (*ms)
 callback also returns a Promise (*ms)
 callback throw (*ms)
 callback called twice (*ms)
 callback called twice in different ticks (*ms)
 callback called twice in future tick (*ms)
 callback async throw (*ms)
 callback async throw after done (*ms)
 only is set on subtests but not in only mode
   running subtest 1 (*ms)
   running subtest 3 (*ms)
   running subtest 4 (*ms)
 only is set on subtests but not in only mode (*ms)
 custom inspect symbol fail (*ms)
 custom inspect symbol that throws fail (*ms)
 subtest sync throw fails
   sync throw fails at first (*ms)
   sync throw fails at second (*ms)
 subtest sync throw fails (*ms)
 timed out async test (*ms)
 timed out callback test (*ms)
 large timeout async test is ok (*ms)
 large timeout callback test is ok (*ms)
 successful thenable (*ms)
 rejected thenable (*ms)
 unfinished test with uncaughtException (*ms)
 unfinished test with unhandledRejection (*ms)
 assertion errors display actual and expected properly (*ms)
 invalid subtest fail (*ms)
 Error: Test "unhandled rejection - passes but warns" at test/fixtures/test-runner/output/output.js:72:1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from unhandled rejection fail" and would have caused the test to fail, but instead triggered an unhandledRejection event.
 Error: Test "async unhandled rejection - passes but warns" at test/fixtures/test-runner/output/output.js:76:1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from async unhandled rejection fail" and would have caused the test to fail, but instead triggered an unhandledRejection event.
 Error: A resource generated asynchronous activity after the test ended. This activity created the error "Error: uncaught from outside of a test" which triggered an uncaughtException event, caught by the test runner.
 Error: Test "immediate throw - passes but warns" at test/fixtures/test-runner/output/output.js:80:1 generated asynchronous activity after the test ended. This activity created the error "Error: thrown from immediate throw fail" and would have caused the test to fail, but instead triggered an uncaughtException event.
 Error: Test "immediate reject - passes but warns" at test/fixtures/test-runner/output/output.js:86:1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from immediate reject fail" and would have caused the test to fail, but instead triggered an unhandledRejection event.
 Error: Test "callback called twice in different ticks" at test/fixtures/test-runner/output/output.js:251:1 generated asynchronous activity after the test ended. This activity created the error "Error [ERR_TEST_FAILURE]: callback invoked multiple times" and would have caused the test to fail, but instead triggered an uncaughtException event.
 Error: Test "callback async throw after done" at test/fixtures/test-runner/output/output.js:269:1 generated asynchronous activity after the test ended. This activity created the error "Error: thrown from callback async throw after done" and would have caused the test to fail, but instead triggered an uncaughtException event.
 tests 75
 suites 0
 pass 34
 fail 25
 cancelled 3
 skipped 9
 todo 4
 duration_ms *

 failing tests:

*
 sync fail todo (*ms) # TODO
  Error: thrown from sync fail todo
      *
      *
      *
      *
      *
      *
      *

*
 sync fail todo with message (*ms) # this is a failing todo
  Error: thrown from sync fail todo with message
      *
      *
      *
      *
      *
      *
      *

*
 sync throw fail (*ms)
  Error: thrown from sync throw fail
      *
      *
      *
      *
      *
      *
      *

*
 async throw fail (*ms)
  Error: thrown from async throw fail
      *
      *
      *
      *
      *
      *
      *

*
 async skip fail (*ms) # SKIP
  Error: thrown from async throw fail
      *
      *
      *
      *
      *
      *
      *

*
 async assertion fail (*ms)
  AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:
  
  true !== false
  
      *
      *
      *
      *
      *
      *
      * {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: true,
    expected: false,
    operator: 'strictEqual'
  }

*
 reject fail (*ms)
  Error: rejected from reject fail
      *
      *
      *
      *
      *
      *
      *

*
 +sync throw fail (*ms)
  Error: thrown from subtest sync throw fail
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 sync throw non-error fail (*ms)
  Symbol(thrown symbol from sync throw non-error fail)

*
 +long running (*ms)
  'test did not finish before its parent and was cancelled'

*
 sync skip option is false fail (*ms)
  Error: this should be executed
      *
      *
      *
      *
      *
      *
      *

*
 callback fail (*ms)
  Error: callback failure
      *
      *

*
 callback also returns a Promise (*ms)
  'passed a callback but also returned a Promise'

*
 callback throw (*ms)
  Error: thrown from callback throw
      *
      *
      *
      *
      *
      *
      *

*
 callback called twice (*ms)
  'callback invoked multiple times'

*
 callback called twice in future tick (*ms)
  Error [ERR_TEST_FAILURE]: callback invoked multiple times
      * {
    code: 'ERR_TEST_FAILURE',
    failureType: 'multipleCallbackInvocations',
    cause: 'callback invoked multiple times'
  }

*
 callback async throw (*ms)
  Error: thrown from callback async throw
      *
      *

*
 custom inspect symbol fail (*ms)
  customized

*
 custom inspect symbol that throws fail (*ms)
  { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }

*
 sync throw fails at first (*ms)
  Error: thrown from subtest sync throw fails at first
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 sync throw fails at second (*ms)
  Error: thrown from subtest sync throw fails at second
      *
      *
      *
      *
      *
      *
      *
      *

*
 timed out async test (*ms)
  'test timed out after *ms'

*
 timed out callback test (*ms)
  'test timed out after *ms'

*
 rejected thenable (*ms)
  'custom error'

*
 unfinished test with uncaughtException (*ms)
  Error: foo
      *
      *
      *

*
 unfinished test with unhandledRejection (*ms)
  Error: bar
      *
      *
      *

*
 assertion errors display actual and expected properly (*ms)
  AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:
  
  {
    bar: 1,
    baz: {
      date: 1970-01-01T00:00:00.000Z,
      null: null,
      number: 1,
      string: 'Hello',
      undefined: undefined
    },
    boo: [
      1
    ],
    foo: 1
  }
  
  should loosely deep-equal
  
  {
    baz: {
      date: 1970-01-01T00:00:00.000Z,
      null: null,
      number: 1,
      string: 'Hello',
      undefined: undefined
    },
    boo: [
      1
    ],
    circular: <ref *1> {
      bar: 2,
      c: [Circular *1]
    }
  }
      * {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: [Object],
    expected: [Object],
    operator: 'deepEqual'
  }

*
 invalid subtest fail (*ms)
  'test could not be started because its parent finished'
                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test-runner/output/spec_reporter_cli.js                                   0000664 0000000 0000000 00000001053 14746647661 0025273 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const fixtures = require('../../../common/fixtures');
const spawn = require('node:child_process').spawn;

const child = spawn(process.execPath,
                    ['--no-warnings', '--test', '--test-reporter', 'spec', fixtures.path('test-runner/output/output.js')],
                    { stdio: 'pipe' });
// eslint-disable-next-line no-control-regex
child.stdout.on('data', (d) => process.stdout.write(d.toString().replace(/[^\x00-\x7F]/g, '').replace(/\u001b\[\d+m/g, '')));
child.stderr.pipe(process.stderr);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test-runner/output/spec_reporter_cli.snapshot                             0000664 0000000 0000000 00000022015 14746647661 0026517 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                         sync pass todo (*ms) # TODO
 sync pass todo with message (*ms) # this is a passing todo
 sync fail todo (*ms) # TODO
 sync fail todo with message (*ms) # this is a failing todo
 sync skip pass (*ms) # SKIP
 sync skip pass with message (*ms) # this is skipped
 sync pass (*ms)
 this test should pass
 sync throw fail (*ms)
 async skip pass (*ms) # SKIP
 async pass (*ms)
 async throw fail (*ms)
 async skip fail (*ms) # SKIP
 async assertion fail (*ms)
 resolve pass (*ms)
 reject fail (*ms)
 unhandled rejection - passes but warns (*ms)
 async unhandled rejection - passes but warns (*ms)
 immediate throw - passes but warns (*ms)
 immediate reject - passes but warns (*ms)
 immediate resolve pass (*ms)
 subtest sync throw fail
   +sync throw fail (*ms)
   this subtest should make its parent test fail
 subtest sync throw fail (*ms)
 sync throw non-error fail (*ms)
 level 0a
   level 1a (*ms)
   level 1b (*ms)
   level 1c (*ms)
   level 1d (*ms)
 level 0a (*ms)
 top level
   +long running (*ms)
   +short running
     ++short running (*ms)
   +short running (*ms)
 top level (*ms)
 invalid subtest - pass but subtest fails (*ms)
 sync skip option (*ms) # SKIP
 sync skip option with message (*ms) # this is skipped
 sync skip option is false fail (*ms)
 <anonymous> (*ms)
 functionOnly (*ms)
 <anonymous> (*ms)
 test with only a name provided (*ms)
 <anonymous> (*ms)
 <anonymous> (*ms) # SKIP
 test with a name and options provided (*ms) # SKIP
 functionAndOptions (*ms) # SKIP
 callback pass (*ms)
 callback fail (*ms)
 sync t is this in test (*ms)
 async t is this in test (*ms)
 callback t is this in test (*ms)
 callback also returns a Promise (*ms)
 callback throw (*ms)
 callback called twice (*ms)
 callback called twice in different ticks (*ms)
 callback called twice in future tick (*ms)
 callback async throw (*ms)
 callback async throw after done (*ms)
 only is set on subtests but not in only mode
   running subtest 1 (*ms)
   running subtest 2 (*ms)
   'only' and 'runOnly' require the --test-only command-line option.
   running subtest 3 (*ms)
   'only' and 'runOnly' require the --test-only command-line option.
   running subtest 4 (*ms)
 only is set on subtests but not in only mode (*ms)
 custom inspect symbol fail (*ms)
 custom inspect symbol that throws fail (*ms)
 subtest sync throw fails
   sync throw fails at first (*ms)
   sync throw fails at second (*ms)
 subtest sync throw fails (*ms)
 timed out async test (*ms)
 timed out callback test (*ms)
 large timeout async test is ok (*ms)
 large timeout callback test is ok (*ms)
 successful thenable (*ms)
 rejected thenable (*ms)
 unfinished test with uncaughtException (*ms)
 unfinished test with unhandledRejection (*ms)
 assertion errors display actual and expected properly (*ms)
 invalid subtest fail (*ms)
 Error: Test "unhandled rejection - passes but warns" at test/fixtures/test-runner/output/output.js:72:1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from unhandled rejection fail" and would have caused the test to fail, but instead triggered an unhandledRejection event.
 Error: Test "async unhandled rejection - passes but warns" at test/fixtures/test-runner/output/output.js:76:1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from async unhandled rejection fail" and would have caused the test to fail, but instead triggered an unhandledRejection event.
 Error: A resource generated asynchronous activity after the test ended. This activity created the error "Error: uncaught from outside of a test" which triggered an uncaughtException event, caught by the test runner.
 Error: Test "immediate throw - passes but warns" at test/fixtures/test-runner/output/output.js:80:1 generated asynchronous activity after the test ended. This activity created the error "Error: thrown from immediate throw fail" and would have caused the test to fail, but instead triggered an uncaughtException event.
 Error: Test "immediate reject - passes but warns" at test/fixtures/test-runner/output/output.js:86:1 generated asynchronous activity after the test ended. This activity created the error "Error: rejected from immediate reject fail" and would have caused the test to fail, but instead triggered an unhandledRejection event.
 Error: Test "callback called twice in different ticks" at test/fixtures/test-runner/output/output.js:251:1 generated asynchronous activity after the test ended. This activity created the error "Error [ERR_TEST_FAILURE]: callback invoked multiple times" and would have caused the test to fail, but instead triggered an uncaughtException event.
 Error: Test "callback async throw after done" at test/fixtures/test-runner/output/output.js:269:1 generated asynchronous activity after the test ended. This activity created the error "Error: thrown from callback async throw after done" and would have caused the test to fail, but instead triggered an uncaughtException event.
 tests 76
 suites 0
 pass 35
 fail 25
 cancelled 3
 skipped 9
 todo 4
 duration_ms *

 failing tests:

*
 sync fail todo (*ms) # TODO
  Error: thrown from sync fail todo
      *
      *
      *
      *
      *
      *
      *

*
 sync fail todo with message (*ms) # this is a failing todo
  Error: thrown from sync fail todo with message
      *
      *
      *
      *
      *
      *
      *

*
 sync throw fail (*ms)
  Error: thrown from sync throw fail
      *
      *
      *
      *
      *
      *
      *

*
 async throw fail (*ms)
  Error: thrown from async throw fail
      *
      *
      *
      *
      *
      *
      *

*
 async skip fail (*ms) # SKIP
  Error: thrown from async throw fail
      *
      *
      *
      *
      *
      *
      *

*
 async assertion fail (*ms)
  AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:
  
  true !== false
  
      *
      *
      *
      *
      *
      *
      * {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: true,
    expected: false,
    operator: 'strictEqual'
  }

*
 reject fail (*ms)
  Error: rejected from reject fail
      *
      *
      *
      *
      *
      *
      *

*
 +sync throw fail (*ms)
  Error: thrown from subtest sync throw fail
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 sync throw non-error fail (*ms)
  Symbol(thrown symbol from sync throw non-error fail)

*
 +long running (*ms)
  'test did not finish before its parent and was cancelled'

*
 sync skip option is false fail (*ms)
  Error: this should be executed
      *
      *
      *
      *
      *
      *
      *

*
 callback fail (*ms)
  Error: callback failure
      *
      *

*
 callback also returns a Promise (*ms)
  'passed a callback but also returned a Promise'

*
 callback throw (*ms)
  Error: thrown from callback throw
      *
      *
      *
      *
      *
      *
      *

*
 callback called twice (*ms)
  'callback invoked multiple times'

*
 callback called twice in future tick (*ms)
  Error [ERR_TEST_FAILURE]: callback invoked multiple times
      * {
    code: 'ERR_TEST_FAILURE',
    failureType: 'multipleCallbackInvocations',
    cause: 'callback invoked multiple times'
  }

*
 callback async throw (*ms)
  Error: thrown from callback async throw
      *
      *

*
 custom inspect symbol fail (*ms)
  customized

*
 custom inspect symbol that throws fail (*ms)
  { foo: 1 }

*
 sync throw fails at first (*ms)
  Error: thrown from subtest sync throw fails at first
      *
      *
      *
      *
      *
      *
      *
      *
      *
      *

*
 sync throw fails at second (*ms)
  Error: thrown from subtest sync throw fails at second
      *
      *
      *
      *
      *
      *
      *
      *

*
 timed out async test (*ms)
  'test timed out after *ms'

*
 timed out callback test (*ms)
  'test timed out after *ms'

*
 rejected thenable (*ms)
  'custom error'

*
 unfinished test with uncaughtException (*ms)
  Error: foo
      *
      *
      *

*
 unfinished test with unhandledRejection (*ms)
  Error: bar
      *
      *
      *

*
 assertion errors display actual and expected properly (*ms)
  AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:
  
  {
    bar: 1,
    baz: {
      date: 1970-01-01T00:00:00.000Z,
      null: null,
      number: 1,
      string: 'Hello',
      undefined: undefined
    },
    boo: [
      1
    ],
    foo: 1
  }
  
  should loosely deep-equal
  
  {
    baz: {
      date: 1970-01-01T00:00:00.000Z,
      null: null,
      number: 1,
      string: 'Hello',
      undefined: undefined
    },
    boo: [
      1
    ],
    circular: <ref *1> {
      bar: 2,
      c: [Circular *1]
    }
  }
      * {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: { foo: 1, bar: 1, boo: [ 1 ], baz: { date: 1970-01-01T00:00:00.000Z, null: null, number: 1, string: 'Hello', undefined: undefined } },
    expected: { boo: [ 1 ], baz: { date: 1970-01-01T00:00:00.000Z, null: null, number: 1, string: 'Hello', undefined: undefined }, circular: <ref *1> { bar: 2, c: [Circular *1] } },
    operator: 'deepEqual'
  }

*
 invalid subtest fail (*ms)
  'test could not be started because its parent finished'
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test-runner/output/spec_reporter_successful.js                            0000664 0000000 0000000 00000000214 14746647661 0026701 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-reporter=spec
'use strict';
require('../../../common');
const { it } = require('node:test');

it('should pass', () => {});
                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/output/spec_reporter_successful.snapshot                      0000664 0000000 0000000 00000000200 14746647661 0030117 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        ✔ should pass (*ms)
ℹ tests 1
ℹ suites 0
ℹ pass 1
ℹ fail 0
ℹ cancelled 0
ℹ skipped 0
ℹ todo 0
ℹ duration_ms *
                                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test-runner/output/suite-skip-hooks.js                                    0000664 0000000 0000000 00000001716 14746647661 0025014 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        // Flags: --test-reporter=spec
'use strict';
const {
  after,
  afterEach,
  before,
  beforeEach,
  describe,
  it,
} = require('node:test');

describe('skip all hooks in this suite', { skip: true }, () => {
  before(() => {
    console.log('BEFORE 1');
  });

  beforeEach(() => {
    console.log('BEFORE EACH 1');
  });

  after(() => {
    console.log('AFTER 1');
  });

  afterEach(() => {
    console.log('AFTER EACH 1');
  });

  it('should not run');
});

describe('suite runs with mixture of skipped tests', () => {
  before(() => {
    console.log('BEFORE 2');
  });

  beforeEach(() => {
    console.log('BEFORE EACH 2');
  });

  after(() => {
    console.log('AFTER 2');
  });

  afterEach(() => {
    console.log('AFTER EACH 2');
  });

  it('should not run', { skip: true });

  it('should run 1', () => {
    console.log('should run 1');
  });

  it('should not run', { skip: true });

  it('should run 2', () => {
    console.log('should run 2');
  });
});
                                                  node-23.7.0/test/fixtures/test-runner/output/suite-skip-hooks.snapshot                              0000664 0000000 0000000 00000000717 14746647661 0026237 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        BEFORE 2
BEFORE EACH 2
should run 1
AFTER EACH 2
BEFORE EACH 2
should run 2
AFTER EACH 2
AFTER 2
﹣ skip all hooks in this suite (*ms) # SKIP
▶ suite runs with mixture of skipped tests
  ﹣ should not run (*ms) # SKIP
  ✔ should run 1 (*ms)
  ﹣ should not run (*ms) # SKIP
  ✔ should run 2 (*ms)
✔ suite runs with mixture of skipped tests (*ms)
ℹ tests 4
ℹ suites 2
ℹ pass 2
ℹ fail 0
ℹ cancelled 0
ℹ skipped 2
ℹ todo 0
ℹ duration_ms *
                                                 node-23.7.0/test/fixtures/test-runner/output/tap_escape.js                                          0000664 0000000 0000000 00000001076 14746647661 0023701 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const { test } = require('node:test');

// Do not include any failing tests in this file.

// A test whose description needs to be escaped.
test('escaped description \\ # \\#\\ \n \t \f \v \b \r');

// A test whose skip message needs to be escaped.
test('escaped skip message', { skip: '#skip' });

// A test whose todo message needs to be escaped.
test('escaped todo message', { todo: '#todo' });

// A test with a diagnostic message that needs to be escaped.
test('escaped diagnostic', (t) => {
  t.diagnostic('#diagnostic');
});
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test-runner/output/tap_escape.snapshot                                    0000664 0000000 0000000 00000001175 14746647661 0025124 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: escaped description \\ \# \\\#\\ \\n \\t \\f \\v \\b \\r
ok 1 - escaped description \\ \# \\\#\\ \\n \\t \\f \\v \\b \\r
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: escaped skip message
ok 2 - escaped skip message # SKIP \#skip
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: escaped todo message
ok 3 - escaped todo message # TODO \#todo
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: escaped diagnostic
ok 4 - escaped diagnostic
  ---
  duration_ms: *
  type: 'test'
  ...
# \#diagnostic
1..4
# tests 4
# suites 0
# pass 2
# fail 0
# cancelled 0
# skipped 1
# todo 1
# duration_ms *
                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test-runner/output/test-diagnostic-warning-without-test-only-flag.js      0000664 0000000 0000000 00000002657 14746647661 0032713 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const { test, describe, it } = require('node:test');

describe('should NOT print --test-only diagnostic warning - describe-only-false', {only: false}, () => {
    it('only false in describe');
  });
  
  describe('should NOT print --test-only diagnostic warning - it-only-false', () => {
    it('only false in the subtest', {only: false});
  });
  
  describe('should NOT print --test-only diagnostic warning - no-only', () => {
    it('no only');
  });
  
  test('should NOT print --test-only diagnostic warning - test-only-false', {only: false}, async (t) => {
    await t.test('only false in parent test');
  });
  
  test('should NOT print --test-only diagnostic warning - t.test-only-false', async (t) => {
    await t.test('only false in subtest', {only: false});
  });
  
  test('should NOT print --test-only diagnostic warning - no-only', async (t) => {
    await t.test('no only');
  });
  
  test('should print --test-only diagnostic warning - test-only-true', {only: true}, async (t) => {
    await t.test('only true in parent test');
  })
  
  test('should print --test-only diagnostic warning - t.test-only-true', async (t) => {
    await t.test('only true in subtest', {only: true});
  });
  
  test('should print --test-only diagnostic warning - 2 levels of only', async (t) => {
    await t.test('only true in parent test', {only: false}, async (t) => {
      await t.test('only true in subtest', {only: true});
    });
  })
                                                                                 node-23.7.0/test/fixtures/test-runner/output/test-diagnostic-warning-without-test-only-flag.snapshot0000664 0000000 0000000 00000006533 14746647661 0034133 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: should NOT print --test-only diagnostic warning - describe-only-false
    # Subtest: only false in describe
    ok 1 - only false in describe
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 1 - should NOT print --test-only diagnostic warning - describe-only-false
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: should NOT print --test-only diagnostic warning - it-only-false
    # Subtest: only false in the subtest
    ok 1 - only false in the subtest
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 2 - should NOT print --test-only diagnostic warning - it-only-false
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: should NOT print --test-only diagnostic warning - no-only
    # Subtest: no only
    ok 1 - no only
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 3 - should NOT print --test-only diagnostic warning - no-only
  ---
  duration_ms: *
  type: 'suite'
  ...
# Subtest: should NOT print --test-only diagnostic warning - test-only-false
    # Subtest: only false in parent test
    ok 1 - only false in parent test
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 4 - should NOT print --test-only diagnostic warning - test-only-false
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: should NOT print --test-only diagnostic warning - t.test-only-false
    # Subtest: only false in subtest
    ok 1 - only false in subtest
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 5 - should NOT print --test-only diagnostic warning - t.test-only-false
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: should NOT print --test-only diagnostic warning - no-only
    # Subtest: no only
    ok 1 - no only
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 6 - should NOT print --test-only diagnostic warning - no-only
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: should print --test-only diagnostic warning - test-only-true
    # Subtest: only true in parent test
    ok 1 - only true in parent test
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 7 - should print --test-only diagnostic warning - test-only-true
  ---
  duration_ms: *
  type: 'test'
  ...
# 'only' and 'runOnly' require the --test-only command-line option.
# Subtest: should print --test-only diagnostic warning - t.test-only-true
    # Subtest: only true in subtest
    ok 1 - only true in subtest
      ---
      duration_ms: *
      type: 'test'
      ...
    # 'only' and 'runOnly' require the --test-only command-line option.
    1..1
ok 8 - should print --test-only diagnostic warning - t.test-only-true
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: should print --test-only diagnostic warning - 2 levels of only
    # Subtest: only true in parent test
        # Subtest: only true in subtest
        ok 1 - only true in subtest
          ---
          duration_ms: *
          type: 'test'
          ...
        # 'only' and 'runOnly' require the --test-only command-line option.
        1..1
    ok 1 - only true in parent test
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 9 - should print --test-only diagnostic warning - 2 levels of only
  ---
  duration_ms: *
  type: 'test'
  ...
1..9
# tests 16
# suites 3
# pass 16
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                     node-23.7.0/test/fixtures/test-runner/output/test-runner-plan.js                                    0000664 0000000 0000000 00000002754 14746647661 0025017 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const { test } = require('node:test');
const { Readable } = require('node:stream');

test('test planning basic', (t) => {
  t.plan(2);
  t.assert.ok(true);
  t.assert.ok(true);
});

test('less assertions than planned', (t) => {
  t.plan(1);
});

test('more assertions than planned', (t) => {
  t.plan(1);
  t.assert.ok(true);
  t.assert.ok(true);
});

test('subtesting', (t) => {
  t.plan(1);
  t.test('subtest', () => { });
});

test('subtesting correctly', (t) => {
  t.plan(2);
  t.assert.ok(true);
  t.test('subtest', (st) => {
    st.plan(1);
    st.assert.ok(true);
  });
});

test('correctly ignoring subtesting plan', (t) => {
  t.plan(1);
  t.test('subtest', (st) => {
    st.plan(1);
    st.assert.ok(true);
  });
});

test('failing planning by options', { plan: 1 }, () => {
});

test('not failing planning by options', { plan: 1 }, (t) => {
  t.assert.ok(true);
});

test('subtest planning by options', (t) => {
  t.test('subtest', { plan: 1 }, (st) => {
    st.assert.ok(true);
  });
});

test('failing more assertions than planned', (t) => {
  t.plan(2);
  t.assert.ok(true);
  t.assert.ok(true);
  t.assert.ok(true);
});

test('planning with streams', (t, done) => {
  function* generate() {
    yield 'a';
    yield 'b';
    yield 'c';
  }
  const expected = ['a', 'b', 'c'];
  t.plan(expected.length);
  const stream = Readable.from(generate());
  stream.on('data', (chunk) => {
    t.assert.strictEqual(chunk, expected.shift());
  });

  stream.on('end', () => {
    done();
  });
})
                    node-23.7.0/test/fixtures/test-runner/output/test-runner-plan.snapshot                              0000664 0000000 0000000 00000005051 14746647661 0026233 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: test planning basic
ok 1 - test planning basic
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: less assertions than planned
not ok 2 - less assertions than planned
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/test-runner-plan.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'plan expected 1 assertions but received 0'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: more assertions than planned
not ok 3 - more assertions than planned
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/test-runner-plan.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'plan expected 1 assertions but received 2'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: subtesting
    # Subtest: subtest
    ok 1 - subtest
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 4 - subtesting
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: subtesting correctly
    # Subtest: subtest
    ok 1 - subtest
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 5 - subtesting correctly
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: correctly ignoring subtesting plan
    # Subtest: subtest
    ok 1 - subtest
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 6 - correctly ignoring subtesting plan
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: failing planning by options
not ok 7 - failing planning by options
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/test-runner-plan.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'plan expected 1 assertions but received 0'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: not failing planning by options
ok 8 - not failing planning by options
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: subtest planning by options
    # Subtest: subtest
    ok 1 - subtest
      ---
      duration_ms: *
      type: 'test'
      ...
    1..1
ok 9 - subtest planning by options
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: failing more assertions than planned
not ok 10 - failing more assertions than planned
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/test-runner-plan.js:(LINE):1'
  failureType: 'testCodeFailure'
  error: 'plan expected 2 assertions but received 3'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: planning with streams
ok 11 - planning with streams
  ---
  duration_ms: *
  type: 'test'
  ...
1..11
# tests 15
# suites 0
# pass 11
# fail 4
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       timeout_in_before_each_should_not_affect_further_tests.js                                           0000664 0000000 0000000 00000002017 14746647661 0034717 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/test/fixtures/test-runner/output                                                                                                                           const {describe, test, beforeEach, afterEach} = require("node:test");
const {setTimeout} = require("timers/promises");


describe('before each timeout', () => {
  let i = 0;

  beforeEach(async () => {
    if (i++ === 0) {
      console.log('gonna timeout');
      await setTimeout(700);
      return;
    }
    console.log('not gonna timeout');
  }, {timeout: 500});

  test('first describe first test', () => {
    console.log('before each test first ' + i);
  });

  test('first describe second test', () => {
    console.log('before each test second ' + i);
  });
});


describe('after each timeout', () => {
  let i = 0;

  afterEach(async function afterEach1() {
    if (i++ === 0) {
      console.log('gonna timeout');
      await setTimeout(700);
      return;
    }
    console.log('not gonna timeout');
  }, {timeout: 500});

  test('second describe first test', () => {
    console.log('after each test first ' + i);
  });

  test('second describe second test', () => {
    console.log('after each test second ' + i);
  });
});
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 timeout_in_before_each_should_not_affect_further_tests.snapshot                                     0000664 0000000 0000000 00000003732 14746647661 0036147 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/test/fixtures/test-runner/output                                                                                                                           gonna timeout
TAP version 13
not gonna timeout
before each test second 2
after each test first 0
gonna timeout
# Subtest: before each timeout
    # Subtest: first describe first test
    not ok 1 - first describe first test
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'
      failureType: 'hookFailed'
      error: 'failed running beforeEach hook'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        async Promise.all (index 0)
      ...
    # Subtest: first describe second test
    ok 2 - first describe second test
      ---
      duration_ms: *
      type: 'test'
      ...
    1..2
not ok 1 - before each timeout
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '1 subtest failed'
  code: 'ERR_TEST_FAILURE'
  ...
after each test second 1
not gonna timeout
# Subtest: after each timeout
    # Subtest: second describe first test
    not ok 1 - second describe first test
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'
      failureType: 'hookFailed'
      error: 'failed running afterEach hook'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        async Promise.all (index 0)
      ...
    # Subtest: second describe second test
    ok 2 - second describe second test
      ---
      duration_ms: *
      type: 'test'
      ...
    1..2
not ok 2 - after each timeout
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '1 subtest failed'
  code: 'ERR_TEST_FAILURE'
  ...
1..2
# tests 4
# suites 2
# pass 2
# fail 2
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
                                      node-23.7.0/test/fixtures/test-runner/output/unfinished-suite-async-error.js                        0000664 0000000 0000000 00000000463 14746647661 0027321 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const { describe, it } = require('node:test');

describe('unfinished suite with asynchronous error', () => {
  it('uses callback', (t, done) => {
    setImmediate(() => {
      throw new Error('callback test does not complete');
    });
  });

  it('should pass 1');
});

it('should pass 2');
                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/output/unfinished-suite-async-error.snapshot                  0000664 0000000 0000000 00000001764 14746647661 0030551 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: unfinished suite with asynchronous error
    # Subtest: uses callback
    not ok 1 - uses callback
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/unfinished-suite-async-error.js:(LINE):3'
      failureType: 'uncaughtException'
      error: 'callback test does not complete'
      code: 'ERR_TEST_FAILURE'
      stack: |-
        *
        *
      ...
    # Subtest: should pass 1
    ok 2 - should pass 1
      ---
      duration_ms: *
      type: 'test'
      ...
    1..2
not ok 1 - unfinished suite with asynchronous error
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/unfinished-suite-async-error.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '1 subtest failed'
  code: 'ERR_TEST_FAILURE'
  ...
# Subtest: should pass 2
ok 2 - should pass 2
  ---
  duration_ms: *
  type: 'test'
  ...
1..2
# tests 3
# suites 1
# pass 2
# fail 1
# cancelled 0
# skipped 0
# todo 0
# duration_ms *
            node-23.7.0/test/fixtures/test-runner/output/unresolved_promise.js                                  0000664 0000000 0000000 00000000325 14746647661 0025515 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
require('../../../common');
const test = require('node:test');

test('pass');
test('never resolving promise', () => new Promise(() => {}));
test('fail', () => console.log('this should not appear'));
                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test-runner/output/unresolved_promise.snapshot                            0000664 0000000 0000000 00000001540 14746647661 0026740 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        TAP version 13
# Subtest: pass
ok 1 - pass
  ---
  duration_ms: *
  type: 'test'
  ...
# Subtest: never resolving promise
not ok 2 - never resolving promise
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'
  failureType: 'cancelledByParent'
  error: 'Promise resolution is still pending but the event loop has already resolved'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
  ...
# Subtest: fail
not ok 3 - fail
  ---
  duration_ms: *
  type: 'test'
  location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'
  failureType: 'cancelledByParent'
  error: 'Promise resolution is still pending but the event loop has already resolved'
  code: 'ERR_TEST_FAILURE'
  stack: |-
    *
  ...
1..3
# tests 3
# suites 0
# pass 1
# fail 0
# cancelled 2
# skipped 0
# todo 0
# duration_ms *
                                                                                                                                                                node-23.7.0/test/fixtures/test-runner/print-arguments.js                                            0000664 0000000 0000000 00000000241 14746647661 0023365 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const { test } = require('node:test');

test('process.argv is setup', (t) => {
    t.assert.deepStrictEqual(process.argv.slice(2), ['--a-custom-argument']);
});
                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/test-runner/protoMutation.js                                              0000664 0000000 0000000 00000000055 14746647661 0023115 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

Object.prototype.skip = true;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test-runner/recursive_run.js                                              0000664 0000000 0000000 00000000247 14746647661 0023127 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

const { test, run } = require('node:test');

test('recursive run() calls', async () => {
  for await (const event of run({ files: [__filename] }));
});
                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test-runner/reporters.js                                                  0000664 0000000 0000000 00000000340 14746647661 0022253 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('nested', { concurrency: 4 }, async (t) => {
  t.test('ok', () => {});
  t.test('failing', () => {
    throw new Error('error');
  });
});

test('top level', () => {});
                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test-runner/root-duration.mjs                                             0000664 0000000 0000000 00000000206 14746647661 0023212 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        import { test, after } from 'node:test';

after(() => {});

test('a test with some delay', (t, done) => {
  setTimeout(done, 50);
});
                                                                                                                                                                                                                                                                                                                                                                                          node-23.7.0/test/fixtures/test-runner/run_inspect.js                                                0000664 0000000 0000000 00000002772 14746647661 0022572 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

const common = require('../../common');
const fixtures = require('../../common/fixtures');
const { run } = require('node:test');
const assert = require('node:assert');

const badPortError = { name: 'RangeError', code: 'ERR_SOCKET_BAD_PORT' };
let inspectPort = 'inspectPort' in process.env ? Number(process.env.inspectPort) : undefined;
let expectedError;

if (process.env.inspectPort === 'addTwo') {
  inspectPort = common.mustCall(() => { return process.debugPort += 2; });
} else if (process.env.inspectPort === 'string') {
  inspectPort = 'string';
  expectedError = badPortError;
} else if (process.env.inspectPort === 'null') {
  inspectPort = null;
} else if (process.env.inspectPort === 'bignumber') {
  inspectPort = 1293812;
  expectedError = badPortError;
} else if (process.env.inspectPort === 'negativenumber') {
  inspectPort = -9776;
  expectedError = badPortError;
} else if (process.env.inspectPort === 'bignumberfunc') {
  inspectPort = common.mustCall(() => 123121);
  expectedError = badPortError;
} else if (process.env.inspectPort === 'strfunc') {
  inspectPort = common.mustCall(() => 'invalidPort');
  expectedError = badPortError;
}

const stream = run({ files: [fixtures.path('test-runner/run_inspect_assert.js')], inspectPort });
if (expectedError) {
  stream.on('test:fail', common.mustCall(({ details }) => {
    assert.deepStrictEqual({ name: details.error.cause.name, code: details.error.cause.code }, expectedError);
  }));
} else {
  stream.on('test:fail', common.mustNotCall());
}
      node-23.7.0/test/fixtures/test-runner/run_inspect_assert.js                                         0000664 0000000 0000000 00000001002 14746647661 0024134 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';

const assert = require('node:assert');

const { expectedPort, expectedInitialPort, expectedHost } = process.env;
const debugOptions =
  require('internal/options').getOptionValue('--inspect-port');

if ('expectedPort' in process.env) {
  assert.strictEqual(process.debugPort, +expectedPort);
}

if ('expectedInitialPort' in process.env) {
  assert.strictEqual(debugOptions.port, +expectedInitialPort);
}

if ('expectedHost' in process.env) {
  assert.strictEqual(debugOptions.host, expectedHost);
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/shards/                                                       0000775 0000000 0000000 00000000000 14746647661 0021157 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/shards/a.cjs                                                  0000664 0000000 0000000 00000000122 14746647661 0022073 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('a.cjs this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/shards/b.cjs                                                  0000664 0000000 0000000 00000000122 14746647661 0022074 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('b.cjs this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/shards/c.cjs                                                  0000664 0000000 0000000 00000000122 14746647661 0022075 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('c.cjs this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/shards/d.cjs                                                  0000664 0000000 0000000 00000000122 14746647661 0022076 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('d.cjs this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/shards/e.cjs                                                  0000664 0000000 0000000 00000000122 14746647661 0022077 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('e.cjs this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/shards/f.cjs                                                  0000664 0000000 0000000 00000000122 14746647661 0022100 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('f.cjs this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/shards/g.cjs                                                  0000664 0000000 0000000 00000000122 14746647661 0022101 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('g.cjs this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/shards/h.cjs                                                  0000664 0000000 0000000 00000000122 14746647661 0022102 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('h.cjs this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/shards/i.cjs                                                  0000664 0000000 0000000 00000000122 14746647661 0022103 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('i.cjs this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/shards/j.cjs                                                  0000664 0000000 0000000 00000000122 14746647661 0022104 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('j.cjs this should pass');
                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/snapshots/                                                    0000775 0000000 0000000 00000000000 14746647661 0021715 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/snapshots/file-snapshots.js                                   0000664 0000000 0000000 00000001034 14746647661 0025210 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const { test } = require('node:test');

test('snapshot file path is created', (t) => {
  t.assert.fileSnapshot({ baz: 9 }, './foo/bar/baz/1.json');
});

test('test with plan', (t) => {
  t.plan(2);
  t.assert.fileSnapshot({ foo: 1, bar: 2 }, '2.json');
  t.assert.fileSnapshot(5, '3.txt');
});

test('custom serializers are supported', (t) => {
  t.assert.fileSnapshot({ foo: 1 }, '4.txt', {
    serializers: [
      (value) => { return value + '424242'; },
      (value) => { return JSON.stringify(value); },
    ]
  });
});
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/snapshots/imported-tests.js                                   0000664 0000000 0000000 00000000263 14746647661 0025237 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const { suite, test } = require('node:test');

suite('imported suite', () => {
  test('imported test', (t) => {
    t.assert.snapshot({ foo: 1, bar: 2 });
  });
});
                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/snapshots/malformed-exports.js.snapshot                       0000664 0000000 0000000 00000000020 14746647661 0027551 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        exports = null;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test-runner/snapshots/simple.js.snapshot                                  0000664 0000000 0000000 00000000063 14746647661 0025401 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        exports[`foo 1`] = `
{
  "bar": 1,
  "baz": 2
}
`;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/snapshots/unit-2.js                                           0000664 0000000 0000000 00000000500 14746647661 0023364 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const { snapshot, test } = require('node:test');
const { basename, join } = require('node:path');

snapshot.setResolveSnapshotPath((testFile) => {
  return join(process.cwd(), `${basename(testFile)}.snapshot`);
});

test('has a snapshot', (t) => {
  t.assert.snapshot('a snapshot from ' + __filename);
});
                                                                                                                                                                                                node-23.7.0/test/fixtures/test-runner/snapshots/unit.js                                             0000664 0000000 0000000 00000001323 14746647661 0023231 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const { snapshot, suite, test } = require('node:test');
const { basename, join } = require('node:path');

snapshot.setResolveSnapshotPath((testFile) => {
  return join(process.cwd(), `${basename(testFile)}.snapshot`);
});

suite('suite', () => {
  test('test with plan', (t) => {
    t.plan(2);
    t.assert.snapshot({ foo: 1, bar: 2 });
    t.assert.snapshot(5);
  });
});

test('test', async (t) => {
  t.assert.snapshot({ baz: 9 });
});

test('`${foo}`', async (t) => {
  const options = { serializers: [() => { return '***'; }]};
  t.assert.snapshot('snapshotted string', options);
});

test('escapes in `\\${foo}`\n', async (t) => {
  t.assert.snapshot('`\\${foo}`\n');
});

require('./imported-tests');
                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/source-maps/                                                  0000775 0000000 0000000 00000000000 14746647661 0022131 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/source-maps/invalid-json/                                     0000775 0000000 0000000 00000000000 14746647661 0024526 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/source-maps/invalid-json/index.js                             0000664 0000000 0000000 00000000054 14746647661 0026172 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        export {};
//# sourceMappingURL=index.js.map                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/source-maps/invalid-json/index.js.map                         0000664 0000000 0000000 00000000007 14746647661 0026744 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        invalid                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test-runner/source-maps/line-lengths/                                     0000775 0000000 0000000 00000000000 14746647661 0024522 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/source-maps/line-lengths/index.js                             0000664 0000000 0000000 00000000442 14746647661 0026167 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
function a() {
  console.log(1);
}
a();
//# sourceMappingURL=index.js.map
                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test-runner/source-maps/line-lengths/index.js.map                         0000664 0000000 0000000 00000001517 14746647661 0026747 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sources": ["index.ts"],
  "sourcesContent": ["1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\n1;\nfunction a() {\n  console.log(1);\n}\na();\n"],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACX,UAAQ,IAAI,CAAC;AACf;AACA,EAAE;",
  "names": []
}
                                                                                                                                                                                 node-23.7.0/test/fixtures/test-runner/source-maps/line-lengths/index.ts                             0000664 0000000 0000000 00000000400 14746647661 0026173 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
1;
function a() {
  console.log(1);
}
a();
                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test-runner/source-maps/missing-map.js                                    0000664 0000000 0000000 00000000043 14746647661 0024710 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=missing.js.map                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test-runner/source-maps/missing-sources/                                  0000775 0000000 0000000 00000000000 14746647661 0025263 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/source-maps/missing-sources/index.js                          0000664 0000000 0000000 00000000054 14746647661 0026727 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        export {};
//# sourceMappingURL=index.js.map                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test-runner/source-maps/missing-sources/index.js.map                      0000664 0000000 0000000 00000000220 14746647661 0027476 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {"version":3,"file":"index.js.map","sourceRoot":"","sources":["nonexistent.js"],"names":[],"mappings":"AAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC"}                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test-runner/test_only.js                                                  0000664 0000000 0000000 00000000170 14746647661 0022247 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

test('this should be skipped');
test.only('this should be executed');
                                                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test-runner/throws_sync_and_async.js                                      0000664 0000000 0000000 00000000351 14746647661 0024631 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const { test } = require('node:test');

test('fails and schedules more work', () => {
  setTimeout(() => {
    throw new Error('this should not have a chance to be thrown');
  }, 1000);

  throw new Error('fails');
});
                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/test-runner/todo_exit_code.js                                             0000664 0000000 0000000 00000000614 14746647661 0023222 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        const { describe, test } = require('node:test');

describe('suite should pass', () => {
  test.todo('should fail without harming suite', () => {
    throw new Error('Fail but not badly')
  });
});

test.todo('should fail without effecting exit code', () => {
  throw new Error('Fail but not badly')
});

test('empty string todo', { todo: '' }, () => {
  throw new Error('Fail but not badly')
});
                                                                                                                    node-23.7.0/test/fixtures/test-runner/user-logs.js                                                  0000664 0000000 0000000 00000000704 14746647661 0022152 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        'use strict';
const test = require('node:test');

console.error('stderr', 1);

test('a test', async () => {
  console.error('stderr', 2);
  await new Promise((resolve) => {
    console.log('stdout', 3);
    setTimeout(() => {
      // This should not be sent to the TAP parser.
      console.error('not ok 1 - fake test');
      resolve();
      console.log('stdout', 4);
    }, 2);
  });
  console.error('stderr', 5);
});

console.error('stderr', 6);
                                                            node-23.7.0/test/fixtures/test426/                                                                  0000775 0000000 0000000 00000000000 14746647661 0016620 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test426/LICENSE.md                                                        0000664 0000000 0000000 00000004264 14746647661 0020232 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        The Source Map Tests suite ("Software") is protected by copyright and is being made available under the  "BSD License", included below. This Software may be subject to third party rights (rights from parties other than Ecma International), including patent rights, and no licenses under such third party rights are granted under this license even if the third party concerned is a member of Ecma International. SEE THE ECMA CODE OF CONDUCT IN PATENT MATTERS AVAILABLE AT https://www.ecma-international.org/ipr FOR INFORMATION REGARDING THE LICENSING OF PATENT CLAIMS THAT ARE REQUIRED TO IMPLEMENT ECMA INTERNATIONAL STANDARDS*.

Copyright (c) 2024, Ecma International
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

* Ecma International Standards hereafter means Ecma International Standards as well as Ecma Technical Reports
                                                                                                                                                                                                                                                                                                                                            node-23.7.0/test/fixtures/test426/README.md                                                         0000664 0000000 0000000 00000005204 14746647661 0020100 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        # Source Map Tests

This repository holds testing discussions and tests for the the Source Map debugging format. Specifically, we're looking to encourage discussion around:

- Manual and automated testing strategies for Source Maps
- Gathering a list of Soure Map generators and consumers
- General discussion around deviations between source maps

Open discussion happens in the [GitHub issues](https://github.com/source-map/source-map-tests/issues).

Source Map spec:
  * Repo: https://github.com/tc39/source-map
  * Rendered spec: https://tc39.es/source-map/

## Test cases

This repo also contains cross-implementation test cases that can be run in test
suites for source map implementations, including browser devtool and library test
suites.

### Running the tests

#### Tools

[Source map validator](https://github.com/jkup/source-map-validator):
  * The tests are included in the validator test suite [here](https://github.com/jkup/source-map-validator/blob/main/src/spec-tests.test.ts). You can run them with `npm test`.

#### Browsers

The tests for Firefox are in the Mozilla [source-map](https://github.com/mozilla/source-map) library:
  * The upstream repo has a [test file](https://github.com/mozilla/source-map/blob/master/test/test-spec-tests.js) for running the spec tests from this repo. They can be run with `npm test`.

How to run in WebKit:
  * Check out [WebKit](https://github.com/WebKit/WebKit/)
  * `cd` to the checked out WebKit directory.
  * Run `git am <this-repo>/webkit/0001-Add-harness-for-source-maps-spec-tests.patch`
  * Run `Tools/Scripts/build-webkit` (depending on the platform you may need to pass `--gtk` or other flags)
  * Run `Tools/Scripts/run-webkit-tests LayoutTests/inspector/model/source-map-spec.html` (again, you may need `--gtk` on Linux)

How to run in Chrome Devtools:
1. Setup:
    * Install depot_tools following this [depot_tools guide](https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up)
    * Check out [Chrome Devtools](https://chromium.googlesource.com/devtools/devtools-frontend):
    * Run `gclient config https://chromium.googlesource.com/devtools/devtools-frontend --unmanaged`
    * Run `cd devtools-frontend`
    * Run `gclient sync`
    * Run `gn gen out/Default`
2. Build:
    * Run `autoninja -C out/Default`
3. Test:
    * Run `npm run auto-unittest`
4. Apply patches from this repo:
    * Run `git apply <path to .patch file>` in `devtools-frontend` repo

More information about running Chrome Devtools without building Chromium can be found [here](https://chromium.googlesource.com/devtools/devtools-frontend/+/refs/heads/chromium/3965/README.md)
                                                                                                                                                                                                                                                                                                                                                                                            node-23.7.0/test/fixtures/test426/chrome/                                                           0000775 0000000 0000000 00000000000 14746647661 0020075 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test426/chrome/0001-Add-source-map-specification-tests.patch              0000664 0000000 0000000 00000476377 14746647661 0030243 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        From afa11641db357e524c8f4d5f573945dd15c1f2e9 Mon Sep 17 00:00:00 2001
From: Agata Belkius <abelkius@gmail.com>
Date: Fri, 19 Apr 2024 15:30:48 +0100
Subject: [PATCH 1/2] Add source map specification tests

---
 front_end/BUILD.gn                            |    1 +
 front_end/core/sdk/BUILD.gn                   |    1 +
 front_end/core/sdk/SourceMapSpec.test.ts      |  206 +++
 .../core/sdk/fixtures/sourcemaps/BUILD.gn     |  202 +++
 .../sourcemaps/basic-mapping-as-index-map.js  |    2 +
 .../basic-mapping-as-index-map.js.map         |   15 +
 .../sourcemaps/basic-mapping-original.js      |    8 +
 .../sdk/fixtures/sourcemaps/basic-mapping.js  |    2 +
 .../fixtures/sourcemaps/basic-mapping.js.map  |    6 +
 .../fixtures/sourcemaps/ignore-list-empty.js  |    1 +
 .../sourcemaps/ignore-list-empty.js.map       |    8 +
 .../sourcemaps/ignore-list-out-of-bounds.js   |    1 +
 .../ignore-list-out-of-bounds.js.map          |    8 +
 .../sourcemaps/ignore-list-valid-1.js         |    1 +
 .../sourcemaps/ignore-list-valid-1.js.map     |    8 +
 .../sourcemaps/ignore-list-wrong-type-1.js    |    1 +
 .../ignore-list-wrong-type-1.js.map           |    8 +
 .../sourcemaps/ignore-list-wrong-type-2.js    |    1 +
 .../ignore-list-wrong-type-2.js.map           |    8 +
 .../sourcemaps/ignore-list-wrong-type-3.js    |    1 +
 .../ignore-list-wrong-type-3.js.map           |    8 +
 .../index-map-invalid-base-mappings.js        |    1 +
 .../index-map-invalid-base-mappings.js.map    |   15 +
 .../sourcemaps/index-map-invalid-order.js     |    1 +
 .../sourcemaps/index-map-invalid-order.js.map |   23 +
 .../sourcemaps/index-map-invalid-overlap.js   |    1 +
 .../index-map-invalid-overlap.js.map          |   23 +
 .../sourcemaps/index-map-missing-map.js       |    1 +
 .../sourcemaps/index-map-missing-map.js.map   |    8 +
 .../index-map-missing-offset-column.js        |    1 +
 .../index-map-missing-offset-column.js.map    |   14 +
 .../index-map-missing-offset-line.js          |    1 +
 .../index-map-missing-offset-line.js.map      |   14 +
 .../sourcemaps/index-map-missing-offset.js    |    1 +
 .../index-map-missing-offset.js.map           |   13 +
 .../index-map-offset-column-wrong-type.js     |    1 +
 .../index-map-offset-column-wrong-type.js.map |   14 +
 .../index-map-offset-line-wrong-type.js       |    1 +
 .../index-map-offset-line-wrong-type.js.map   |   14 +
 .../index-map-two-concatenated-sources.js     |    2 +
 .../index-map-two-concatenated-sources.js.map |   24 +
 .../sourcemaps/index-map-wrong-type-map.js    |    1 +
 .../index-map-wrong-type-map.js.map           |    9 +
 .../sourcemaps/index-map-wrong-type-offset.js |    1 +
 .../index-map-wrong-type-offset.js.map        |   14 +
 .../index-map-wrong-type-sections.js          |    1 +
 .../index-map-wrong-type-sections.js.map      |    4 +
 .../invalid-mapping-bad-separator.js          |    2 +
 .../invalid-mapping-bad-separator.js.map      |    6 +
 .../invalid-mapping-not-a-string-1.js         |    1 +
 .../invalid-mapping-not-a-string-1.js.map     |    7 +
 .../invalid-mapping-not-a-string-2.js         |    1 +
 .../invalid-mapping-not-a-string-2.js.map     |    7 +
 ...nvalid-mapping-segment-column-too-large.js |    1 +
 ...id-mapping-segment-column-too-large.js.map |    7 +
 ...apping-segment-name-index-out-of-bounds.js |    1 +
 ...ng-segment-name-index-out-of-bounds.js.map |    7 +
 ...id-mapping-segment-name-index-too-large.js |    1 +
 ...apping-segment-name-index-too-large.js.map |    7 +
 ...invalid-mapping-segment-negative-column.js |    1 +
 ...lid-mapping-segment-negative-column.js.map |    7 +
 ...lid-mapping-segment-negative-name-index.js |    1 +
 ...mapping-segment-negative-name-index.js.map |    7 +
 ...apping-segment-negative-original-column.js |    1 +
 ...ng-segment-negative-original-column.js.map |    7 +
 ...-mapping-segment-negative-original-line.js |    1 +
 ...ping-segment-negative-original-line.js.map |    7 +
 ...apping-segment-negative-relative-column.js |    1 +
 ...ng-segment-negative-relative-column.js.map |    8 +
 ...ng-segment-negative-relative-name-index.js |    1 +
 ...egment-negative-relative-name-index.js.map |    8 +
 ...gment-negative-relative-original-column.js |    1 +
 ...t-negative-relative-original-column.js.map |    8 +
 ...segment-negative-relative-original-line.js |    1 +
 ...ent-negative-relative-original-line.js.map |    8 +
 ...-segment-negative-relative-source-index.js |    1 +
 ...ment-negative-relative-source-index.js.map |    8 +
 ...d-mapping-segment-negative-source-index.js |    1 +
 ...pping-segment-negative-source-index.js.map |    7 +
 ...pping-segment-original-column-too-large.js |    1 +
 ...g-segment-original-column-too-large.js.map |    7 +
 ...mapping-segment-original-line-too-large.js |    1 +
 ...ing-segment-original-line-too-large.js.map |    7 +
 ...ping-segment-source-index-out-of-bounds.js |    1 +
 ...-segment-source-index-out-of-bounds.js.map |    7 +
 ...-mapping-segment-source-index-too-large.js |    1 +
 ...ping-segment-source-index-too-large.js.map |    7 +
 ...valid-mapping-segment-with-three-fields.js |    2 +
 ...d-mapping-segment-with-three-fields.js.map |    6 +
 ...invalid-mapping-segment-with-two-fields.js |    2 +
 ...lid-mapping-segment-with-two-fields.js.map |    6 +
 ...nvalid-mapping-segment-with-zero-fields.js |    1 +
 ...id-mapping-segment-with-zero-fields.js.map |    7 +
 .../invalid-vlq-missing-continuation.js       |    1 +
 .../invalid-vlq-missing-continuation.js.map   |    6 +
 .../sourcemaps/invalid-vlq-non-base64-char.js |    1 +
 .../invalid-vlq-non-base64-char.js.map        |    6 +
 .../sdk/fixtures/sourcemaps/names-missing.js  |    1 +
 .../fixtures/sourcemaps/names-missing.js.map  |    5 +
 .../fixtures/sourcemaps/names-not-a-list-1.js |    1 +
 .../sourcemaps/names-not-a-list-1.js.map      |    6 +
 .../fixtures/sourcemaps/names-not-a-list-2.js |    1 +
 .../sourcemaps/names-not-a-list-2.js.map      |    6 +
 .../fixtures/sourcemaps/names-not-string.js   |    1 +
 .../sourcemaps/names-not-string.js.map        |    6 +
 .../sourcemaps/second-source-original.js      |    4 +
 .../sourcemaps/source-map-spec-tests.json     | 1540 +++++++++++++++++
 .../sources-and-sources-content-both-null.js  |    1 +
 ...urces-and-sources-content-both-null.js.map |    7 +
 .../fixtures/sourcemaps/sources-missing.js    |    1 +
 .../sourcemaps/sources-missing.js.map         |    5 +
 .../sources-non-null-sources-content-null.js  |    2 +
 ...urces-non-null-sources-content-null.js.map |    7 +
 .../sourcemaps/sources-not-a-list-1.js        |    1 +
 .../sourcemaps/sources-not-a-list-1.js.map    |    6 +
 .../sourcemaps/sources-not-a-list-2.js        |    1 +
 .../sourcemaps/sources-not-a-list-2.js.map    |    6 +
 .../sourcemaps/sources-not-string-or-null.js  |    1 +
 .../sources-not-string-or-null.js.map         |    6 +
 .../sources-null-sources-content-non-null.js  |    2 +
 ...urces-null-sources-content-non-null.js.map |    7 +
 .../sourcemaps/transitive-mapping-original.js |    5 +
 .../transitive-mapping-original.js.map        |    8 +
 .../transitive-mapping-three-steps.js         |    6 +
 .../transitive-mapping-three-steps.js.map     |    7 +
 .../fixtures/sourcemaps/transitive-mapping.js |    2 +
 .../sourcemaps/transitive-mapping.js.map      |    6 +
 .../sourcemaps/typescript-original.ts         |    5 +
 .../sourcemaps/unrecognized-property.js       |    1 +
 .../sourcemaps/unrecognized-property.js.map   |    8 +
 .../valid-mapping-boundary-values.js          |    1 +
 .../valid-mapping-boundary-values.js.map      |    7 +
 .../sourcemaps/valid-mapping-empty-groups.js  |    1 +
 .../valid-mapping-empty-groups.js.map         |    8 +
 .../sourcemaps/valid-mapping-large-vlq.js     |    1 +
 .../sourcemaps/valid-mapping-large-vlq.js.map |    6 +
 .../sourcemaps/valid-mapping-null-sources.js  |    2 +
 .../valid-mapping-null-sources.js.map         |    6 +
 .../fixtures/sourcemaps/version-missing.js    |    1 +
 .../sourcemaps/version-missing.js.map         |    5 +
 .../sourcemaps/version-not-a-number.js        |    1 +
 .../sourcemaps/version-not-a-number.js.map    |    6 +
 .../sourcemaps/version-numeric-string.js      |    1 +
 .../sourcemaps/version-numeric-string.js.map  |    6 +
 .../fixtures/sourcemaps/version-too-high.js   |    1 +
 .../sourcemaps/version-too-high.js.map        |    6 +
 .../fixtures/sourcemaps/version-too-low.js    |    1 +
 .../sourcemaps/version-too-low.js.map         |    6 +
 .../sdk/fixtures/sourcemaps/version-valid.js  |    1 +
 .../fixtures/sourcemaps/version-valid.js.map  |    6 +
 150 files changed, 2648 insertions(+)
 create mode 100644 front_end/core/sdk/SourceMapSpec.test.ts
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/BUILD.gn
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/basic-mapping-as-index-map.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/basic-mapping-as-index-map.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/basic-mapping-original.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/basic-mapping.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/basic-mapping.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/ignore-list-empty.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/ignore-list-empty.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/ignore-list-out-of-bounds.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/ignore-list-out-of-bounds.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/ignore-list-valid-1.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/ignore-list-valid-1.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-1.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-1.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-2.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-2.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-3.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-3.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-base-mappings.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-base-mappings.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-order.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-order.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-overlap.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-overlap.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-missing-map.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-missing-map.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-column.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-column.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-line.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-line.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-offset-column-wrong-type.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-offset-column-wrong-type.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-offset-line-wrong-type.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-offset-line-wrong-type.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-two-concatenated-sources.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-two-concatenated-sources.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-map.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-map.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-offset.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-offset.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-sections.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-sections.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-bad-separator.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-bad-separator.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-1.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-1.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-2.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-2.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-column-too-large.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-column-too-large.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-out-of-bounds.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-out-of-bounds.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-too-large.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-too-large.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-column.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-column.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-name-index.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-name-index.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-column.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-column.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-line.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-line.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-column.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-column.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-name-index.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-name-index.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-column.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-column.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-line.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-line.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-source-index.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-source-index.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-source-index.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-source-index.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-column-too-large.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-column-too-large.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-line-too-large.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-line-too-large.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-out-of-bounds.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-out-of-bounds.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-too-large.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-too-large.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-three-fields.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-three-fields.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-two-fields.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-two-fields.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-zero-fields.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-zero-fields.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-missing-continuation.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-missing-continuation.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-non-base64-char.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-non-base64-char.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/names-missing.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/names-missing.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-1.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-1.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-2.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-2.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/names-not-string.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/names-not-string.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/second-source-original.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/source-map-spec-tests.json
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/sources-and-sources-content-both-null.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/sources-and-sources-content-both-null.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/sources-missing.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/sources-missing.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/sources-non-null-sources-content-null.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/sources-non-null-sources-content-null.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-1.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-1.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-2.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-2.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/sources-not-string-or-null.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/sources-not-string-or-null.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/sources-null-sources-content-non-null.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/sources-null-sources-content-non-null.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-original.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-original.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-three-steps.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-three-steps.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/transitive-mapping.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/transitive-mapping.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/typescript-original.ts
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/unrecognized-property.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/unrecognized-property.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/valid-mapping-boundary-values.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/valid-mapping-boundary-values.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/valid-mapping-empty-groups.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/valid-mapping-empty-groups.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/valid-mapping-large-vlq.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/valid-mapping-large-vlq.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/valid-mapping-null-sources.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/valid-mapping-null-sources.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/version-missing.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/version-missing.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/version-not-a-number.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/version-not-a-number.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/version-numeric-string.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/version-numeric-string.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/version-too-high.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/version-too-high.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/version-too-low.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/version-too-low.js.map
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/version-valid.js
 create mode 100644 front_end/core/sdk/fixtures/sourcemaps/version-valid.js.map

diff --git a/front_end/BUILD.gn b/front_end/BUILD.gn
index 863a434cea..125b34ba73 100644
--- a/front_end/BUILD.gn
+++ b/front_end/BUILD.gn
@@ -106,6 +106,7 @@ group("unittests") {
     "core/protocol_client:unittests",
     "core/root:unittests",
     "core/sdk:unittests",
+    "core/sdk/fixtures/sourcemaps",
     "entrypoints/formatter_worker:unittests",
     "entrypoints/heap_snapshot_worker:unittests",
     "entrypoints/inspector_main:unittests",
diff --git a/front_end/core/sdk/BUILD.gn b/front_end/core/sdk/BUILD.gn
index 8d1cf0fa92..f8879365f4 100644
--- a/front_end/core/sdk/BUILD.gn
+++ b/front_end/core/sdk/BUILD.gn
@@ -165,6 +165,7 @@ ts_library("unittests") {
     "SourceMapManager.test.ts",
     "SourceMapScopes.test.ts",
     "SourceMapScopesInfo.test.ts",
+    "SourceMapSpec.test.ts",
     "StorageBucketsModel.test.ts",
     "StorageKeyManager.test.ts",
     "Target.test.ts",
diff --git a/front_end/core/sdk/SourceMapSpec.test.ts b/front_end/core/sdk/SourceMapSpec.test.ts
new file mode 100644
index 0000000000..93b26a2e13
--- /dev/null
+++ b/front_end/core/sdk/SourceMapSpec.test.ts
@@ -0,0 +1,206 @@
+// Copyright 2024 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+
+/**
+ This file tests if devtools sourcemaps implementation is matching the sourcemaps spec.
+ Sourcemap Spec tests are using test data coming from: https://github.com/tc39/source-map-tests
+
+ There is a lot of warnings of invalid source maps passing the validation - this is up to the authors
+ which ones of these could be actually checked in the SourceMaps implementetion and which ones are ok to ignore.
+
+ **/
+
+const {assert} = chai;
+import type * as Platform from '../platform/platform.js';
+import {assertNotNullOrUndefined} from '../platform/platform.js';
+import { SourceMapV3, parseSourceMap } from './SourceMap.js';
+import * as SDK from './sdk.js';
+import {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';
+
+interface TestSpec {
+  name: string;
+  description: string;
+  baseFile: string;
+  sourceMapFile: string;
+  sourceMapIsValid: boolean;
+  testActions?: TestAction[];
+}
+
+interface TestAction {
+  actionType: string;
+  generatedLine: number;
+  generatedColumn: number;
+  originalSource: string;
+  originalLine: number;
+  originalColumn: number;
+  mappedName: null | string;
+  intermediateMaps?:  string[]
+}
+
+// Accept "null", null, or undefined for tests specifying a missing value.
+function nullish(arg : any) {
+  if (arg === "null" || arg === undefined) {
+    return null;
+  }
+  return arg;
+}
+
+describeWithEnvironment('SourceMapSpec', () => {
+  let testCases : TestSpec[] | undefined;
+  let sourceMapContents : SourceMapV3[] = [];
+
+  before(async () => {
+    testCases = await loadTestCasesFromFixture('source-map-spec-tests.json');
+    sourceMapContents = await Promise.all(
+      testCases!.map(
+        async (testCase) => {
+          const { sourceMapFile } = testCase;
+          return loadSourceMapFromFixture(sourceMapFile);
+        }
+      )
+    );
+  });
+
+  it('Spec tests', () => {
+    const consoleErrorSpy = sinon.spy(console, 'error');
+    testCases!.forEach(({
+      baseFile,
+      sourceMapFile,
+      testActions,
+      sourceMapIsValid,
+      name
+    }, index) => {
+      const sourceMapContent = sourceMapContents[index];
+
+      // These test cases are ignored because certain validity checks are
+      // not implemented, such as checking the version number is `3`.
+      const ignoredCasesForBasicValidity = [
+        "fileNotAString1",
+        "fileNotAString2",
+        "versionMissing",
+        "versionNotANumber",
+        "versionNumericString",
+        "versionTooHigh",
+        "versionTooLow",
+        "sourcesNotAList1",
+        "sourcesNotAList2",
+        "sourcesNotStringOrNull",
+        // FIXME: this test should be revised after recent spec changes
+        "namesMissing",
+        "namesNotAList1",
+        "namesNotAList2",
+        "namesNotString",
+        "ignoreListWrongType1",
+        "ignoreListWrongType2",
+        "ignoreListOutOfBounds",
+        "indexMapWrongTypeSections",
+        "indexMapWrongTypeMap",
+        "indexMapMissingOffset",
+        "invalidVLQDueToNonBase64Character",
+      ];
+
+      // 1) check if an invalid sourcemap throws on SourceMap instance creation, or
+      // 2) check if an invalid sourcemap throws on mapping creation
+      if (!sourceMapIsValid) {
+        if (ignoredCasesForBasicValidity.includes(name))
+          return;
+
+        let thrownDuringParse = false;
+        try {
+          const sourceMap = new SDK.SourceMap.SourceMap(
+            baseFile as Platform.DevToolsPath.UrlString,
+            sourceMapFile as Platform.DevToolsPath.UrlString,
+            sourceMapContent);
+          sourceMap.mappings();
+        } catch {
+          thrownDuringParse = true;
+        }
+        assert.equal(
+          thrownDuringParse || consoleErrorSpy.calledWith("Failed to parse source map"),
+          true,
+          `${name}: expected invalid source map to fail to load`
+        );
+
+        return;
+      }
+
+      // 3) check if a valid sourcemap can be parsed and a SourceMap instance created
+      const baseFileUrl = baseFile as Platform.DevToolsPath.UrlString;
+      const sourceMapFileUrl = sourceMapFile as Platform.DevToolsPath.UrlString;
+
+      assert.doesNotThrow(
+        () => parseSourceMap(JSON.stringify(sourceMapContent)),
+        undefined,
+        undefined,
+        `${name}: expected valid source map to parse`
+      );
+      assert.doesNotThrow(() => new SDK.SourceMap.SourceMap(
+        baseFileUrl,
+        sourceMapFileUrl,
+        sourceMapContent
+      ), undefined, undefined, `${name}: expected valid source map to parse`);
+
+      // 4) check if the mappings are valid
+      const sourceMap = new SDK.SourceMap.SourceMap(
+        baseFileUrl,
+        sourceMapFileUrl,
+        sourceMapContent);
+
+      assert.doesNotThrow(() => sourceMap.findEntry(1, 1));
+
+      if (testActions !== undefined) {
+        testActions.forEach(({
+          actionType,
+          originalSource,
+          originalLine,
+          originalColumn,
+          generatedLine,
+          generatedColumn,
+          intermediateMaps
+        }) => {
+
+          if (actionType === "checkMapping" && sourceMapIsValid) {
+            // 4a) check if the mappings are valid for regular sourcemaps
+            // extract to separate function
+            let actual = sourceMap.findEntry(generatedLine, generatedColumn);
+            assertNotNullOrUndefined(actual);
+
+            assert.strictEqual(nullish(actual.sourceURL), originalSource, 'unexpected source URL');
+            assert.strictEqual(nullish(actual.sourceLineNumber), originalLine, 'unexpected source line number');
+            assert.strictEqual(nullish(actual.sourceColumnNumber), originalColumn, 'unexpected source column number');
+          }
+        });
+      }
+    });
+  });
+});
+
+async function loadTestCasesFromFixture(filename: string): Promise<TestSpec[]> {
+  const testSpec = await getFixtureFileContents<{ tests: TestSpec[] }>(filename);
+  return testSpec?.tests ?? [];
+};
+
+async function loadSourceMapFromFixture(filename: string): Promise<SourceMapV3> {
+  return getFixtureFileContents<SourceMapV3>(filename);
+};
+
+async function getFixtureFileContents<T>(filename: string):
+    Promise<T> {
+  const url = new URL(`/front_end/core/sdk/fixtures/sourcemaps/${filename}`, window.location.origin);
+
+  const response = await fetch(url);
+
+  if (response.status !== 200) {
+    throw new Error(`Unable to load ${url}`);
+  }
+
+  const contentType = response.headers.get('content-type');
+  const isGzipEncoded = contentType !== null && contentType.includes('gzip');
+  let buffer = await response.arrayBuffer();
+
+  const decoder = new TextDecoder('utf-8');
+  const contents = JSON.parse(decoder.decode(buffer)) as T;
+  return contents;
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/BUILD.gn b/front_end/core/sdk/fixtures/sourcemaps/BUILD.gn
new file mode 100644
index 0000000000..a82b09a02d
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/BUILD.gn
@@ -0,0 +1,202 @@
+# Copyright 2022 The Chromium Authors. All rights reserved.
+# Use of this source code is governed by a BSD-style license that can be
+# found in the LICENSE file.
+
+import("../../../../../scripts/build/ninja/copy.gni")
+
+copy_to_gen("sourcemaps") {
+  sources = [
+    "basic-mapping-as-index-map.js",
+    "basic-mapping-as-index-map.js.map",
+    "basic-mapping-original.js",
+    "basic-mapping.js",
+    "basic-mapping.js.map",
+    "file-not-a-string-1.js",
+    "file-not-a-string-1.js.map",
+    "file-not-a-string-2.js",
+    "file-not-a-string-2.js.map",
+    "ignore-list-empty.js",
+    "ignore-list-empty.js.map",
+    "ignore-list-out-of-bounds.js",
+    "ignore-list-out-of-bounds.js.map",
+    "ignore-list-valid-1.js",
+    "ignore-list-valid-1.js.map",
+    "ignore-list-wrong-type-1.js",
+    "ignore-list-wrong-type-1.js.map",
+    "ignore-list-wrong-type-2.js",
+    "ignore-list-wrong-type-2.js.map",
+    "ignore-list-wrong-type-3.js",
+    "ignore-list-wrong-type-3.js.map",
+    "index-map-empty-sections.js",
+    "index-map-empty-sections.js.map",
+    "index-map-file-wrong-type-1.js",
+    "index-map-file-wrong-type-1.js.map",
+    "index-map-file-wrong-type-2.js",
+    "index-map-file-wrong-type-2.js.map",
+    "index-map-invalid-base-mappings.js",
+    "index-map-invalid-base-mappings.js.map",
+    "index-map-invalid-order.js",
+    "index-map-invalid-order.js.map",
+    "index-map-invalid-overlap.js",
+    "index-map-invalid-overlap.js.map",
+    "index-map-invalid-sub-map.js",
+    "index-map-invalid-sub-map.js.map",
+    "index-map-missing-file.js",
+    "index-map-missing-file.js.map",
+    "index-map-missing-map.js",
+    "index-map-missing-map.js.map",
+    "index-map-missing-offset-column.js",
+    "index-map-missing-offset-column.js.map",
+    "index-map-missing-offset-line.js",
+    "index-map-missing-offset-line.js.map",
+    "index-map-missing-offset.js",
+    "index-map-missing-offset.js.map",
+    "index-map-offset-column-wrong-type.js",
+    "index-map-offset-column-wrong-type.js.map",
+    "index-map-offset-line-wrong-type.js",
+    "index-map-offset-line-wrong-type.js.map",
+    "index-map-two-concatenated-sources.js",
+    "index-map-two-concatenated-sources.js.map",
+    "index-map-wrong-type-map.js",
+    "index-map-wrong-type-map.js.map",
+    "index-map-wrong-type-offset.js",
+    "index-map-wrong-type-offset.js.map",
+    "index-map-wrong-type-sections.js",
+    "index-map-wrong-type-sections.js.map",
+    "invalid-mapping-bad-separator.js",
+    "invalid-mapping-bad-separator.js.map",
+    "invalid-mapping-not-a-string-1.js",
+    "invalid-mapping-not-a-string-1.js.map",
+    "invalid-mapping-not-a-string-2.js",
+    "invalid-mapping-not-a-string-2.js.map",
+    "invalid-mapping-segment-column-too-large.js",
+    "invalid-mapping-segment-column-too-large.js.map",
+    "invalid-mapping-segment-name-index-out-of-bounds.js",
+    "invalid-mapping-segment-name-index-out-of-bounds.js.map",
+    "invalid-mapping-segment-name-index-too-large.js",
+    "invalid-mapping-segment-name-index-too-large.js.map",
+    "invalid-mapping-segment-negative-column.js",
+    "invalid-mapping-segment-negative-column.js.map",
+    "invalid-mapping-segment-negative-name-index.js",
+    "invalid-mapping-segment-negative-name-index.js.map",
+    "invalid-mapping-segment-negative-original-column.js",
+    "invalid-mapping-segment-negative-original-column.js.map",
+    "invalid-mapping-segment-negative-original-line.js",
+    "invalid-mapping-segment-negative-original-line.js.map",
+    "invalid-mapping-segment-negative-relative-column.js",
+    "invalid-mapping-segment-negative-relative-column.js.map",
+    "invalid-mapping-segment-negative-relative-name-index.js",
+    "invalid-mapping-segment-negative-relative-name-index.js.map",
+    "invalid-mapping-segment-negative-relative-original-column.js",
+    "invalid-mapping-segment-negative-relative-original-column.js.map",
+    "invalid-mapping-segment-negative-relative-original-line.js",
+    "invalid-mapping-segment-negative-relative-original-line.js.map",
+    "invalid-mapping-segment-negative-relative-source-index.js",
+    "invalid-mapping-segment-negative-relative-source-index.js.map",
+    "invalid-mapping-segment-negative-source-index.js",
+    "invalid-mapping-segment-negative-source-index.js.map",
+    "invalid-mapping-segment-original-column-too-large.js",
+    "invalid-mapping-segment-original-column-too-large.js.map",
+    "invalid-mapping-segment-original-line-too-large.js",
+    "invalid-mapping-segment-original-line-too-large.js.map",
+    "invalid-mapping-segment-source-index-out-of-bounds.js",
+    "invalid-mapping-segment-source-index-out-of-bounds.js.map",
+    "invalid-mapping-segment-source-index-too-large.js",
+    "invalid-mapping-segment-source-index-too-large.js.map",
+    "invalid-mapping-segment-with-three-fields.js",
+    "invalid-mapping-segment-with-three-fields.js.map",
+    "invalid-mapping-segment-with-two-fields.js",
+    "invalid-mapping-segment-with-two-fields.js.map",
+    "invalid-mapping-segment-with-zero-fields.js",
+    "invalid-mapping-segment-with-zero-fields.js.map",
+    "invalid-vlq-missing-continuation.js",
+    "invalid-vlq-missing-continuation.js.map",
+    "invalid-vlq-non-base64-char.js",
+    "invalid-vlq-non-base64-char.js.map",
+    "mapping-semantics-column-reset.js",
+    "mapping-semantics-column-reset.js.map",
+    "mapping-semantics-five-field-segment.js",
+    "mapping-semantics-five-field-segment.js.map",
+    "mapping-semantics-four-field-segment.js",
+    "mapping-semantics-four-field-segment.js.map",
+    "mapping-semantics-relative-1.js",
+    "mapping-semantics-relative-1.js.map",
+    "mapping-semantics-relative-2.js",
+    "mapping-semantics-relative-2.js.map",
+    "mapping-semantics-single-field-segment.js",
+    "mapping-semantics-single-field-segment.js.map",
+    "names-missing.js",
+    "names-missing.js.map",
+    "names-not-a-list-1.js",
+    "names-not-a-list-1.js.map",
+    "names-not-a-list-2.js",
+    "names-not-a-list-2.js.map",
+    "names-not-string.js",
+    "names-not-string.js.map",
+    "second-source-original.js",
+    "source-map-spec-tests.json",
+    "source-resolution-absolute-url.js",
+    "source-resolution-absolute-url.js.map",
+    "source-resolution-relative-url.js",
+    "source-resolution-relative-url.js.map",
+    "source-root-not-a-string-1.js",
+    "source-root-not-a-string-1.js.map",
+    "source-root-not-a-string-2.js",
+    "source-root-not-a-string-2.js.map",
+    "source-root-resolution.js",
+    "source-root-resolution.js.map",
+    "sources-and-sources-content-both-null.js",
+    "sources-and-sources-content-both-null.js.map",
+    "sources-missing.js",
+    "sources-missing.js.map",
+    "sources-non-null-sources-content-null.js",
+    "sources-non-null-sources-content-null.js.map",
+    "sources-not-a-list-1.js",
+    "sources-not-a-list-1.js.map",
+    "sources-not-a-list-2.js",
+    "sources-not-a-list-2.js.map",
+    "sources-not-string-or-null.js",
+    "sources-not-string-or-null.js.map",
+    "sources-null-sources-content-non-null.js",
+    "sources-null-sources-content-non-null.js.map",
+    "transitive-mapping-original.js",
+    "transitive-mapping-original.js.map",
+    "transitive-mapping-three-steps.js",
+    "transitive-mapping-three-steps.js.map",
+    "transitive-mapping.js",
+    "transitive-mapping.js.map",
+    "typescript-original.ts",
+    "unrecognized-property.js",
+    "unrecognized-property.js.map",
+    "valid-mapping-boundary-values.js",
+    "valid-mapping-boundary-values.js.map",
+    "valid-mapping-empty-groups.js",
+    "valid-mapping-empty-groups.js.map",
+    "valid-mapping-empty-string.js",
+    "valid-mapping-empty-string.js.map",
+    "valid-mapping-large-vlq.js",
+    "valid-mapping-large-vlq.js.map",
+    "valid-mapping-null-sources.js",
+    "valid-mapping-null-sources.js.map",
+    "version-missing.js",
+    "version-missing.js.map",
+    "version-not-a-number.js",
+    "version-not-a-number.js.map",
+    "version-numeric-string.js",
+    "version-numeric-string.js.map",
+    "version-too-high.js",
+    "version-too-high.js.map",
+    "version-too-low.js",
+    "version-too-low.js.map",
+    "version-valid.js",
+    "version-valid.js.map",
+    "vlq-valid-continuation-bit-present-1.js",
+    "vlq-valid-continuation-bit-present-1.js.map",
+    "vlq-valid-continuation-bit-present-2.js",
+    "vlq-valid-continuation-bit-present-2.js.map",
+    "vlq-valid-negative-digit.js",
+    "vlq-valid-negative-digit.js.map",
+    "vlq-valid-single-digit.js",
+    "vlq-valid-single-digit.js.map",
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/basic-mapping-as-index-map.js b/front_end/core/sdk/fixtures/sourcemaps/basic-mapping-as-index-map.js
new file mode 100644
index 0000000000..b9fae38043
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/basic-mapping-as-index-map.js
@@ -0,0 +1,2 @@
+function foo(){return 42}function bar(){return 24}foo();bar();
+//# sourceMappingURL=basic-mapping-as-index-map.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/basic-mapping-as-index-map.js.map b/front_end/core/sdk/fixtures/sourcemaps/basic-mapping-as-index-map.js.map
new file mode 100644
index 0000000000..c0ad870ed2
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/basic-mapping-as-index-map.js.map
@@ -0,0 +1,15 @@
+{
+  "version": 3,
+  "file": "basic-mapping-as-index-map.js",
+  "sections": [
+    {
+      "offset": { "line": 0, "column": 0 },
+      "map": {
+        "version": 3,
+        "names": ["foo","bar"],
+        "sources": ["basic-mapping-original.js"],
+        "mappings": "AAAA,SAASA,MACP,OAAO,EACT,CACA,SAASC,MACP,OAAO,EACT,CACAD,MACAC"
+      }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/basic-mapping-original.js b/front_end/core/sdk/fixtures/sourcemaps/basic-mapping-original.js
new file mode 100644
index 0000000000..301b186cb1
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/basic-mapping-original.js
@@ -0,0 +1,8 @@
+function foo() {
+  return 42;
+}
+function bar() {
+  return 24;
+}
+foo();
+bar();
diff --git a/front_end/core/sdk/fixtures/sourcemaps/basic-mapping.js b/front_end/core/sdk/fixtures/sourcemaps/basic-mapping.js
new file mode 100644
index 0000000000..2e479a4175
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/basic-mapping.js
@@ -0,0 +1,2 @@
+function foo(){return 42}function bar(){return 24}foo();bar();
+//# sourceMappingURL=basic-mapping.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/basic-mapping.js.map b/front_end/core/sdk/fixtures/sourcemaps/basic-mapping.js.map
new file mode 100644
index 0000000000..12dc9679a4
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/basic-mapping.js.map
@@ -0,0 +1,6 @@
+{
+  "version":3,
+  "names": ["foo","bar"],
+  "sources": ["basic-mapping-original.js"],
+  "mappings":"AAAA,SAASA,MACP,OAAO,EACT,CACA,SAASC,MACP,OAAO,EACT,CACAD,MACAC"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-empty.js b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-empty.js
new file mode 100644
index 0000000000..385a5c3501
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-empty.js
@@ -0,0 +1 @@
+//# sourceMappingURL=ignore-list-empty.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-empty.js.map b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-empty.js.map
new file mode 100644
index 0000000000..7297863a9b
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-empty.js.map
@@ -0,0 +1,8 @@
+{
+  "version" : 3,
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "",
+  "names": [],
+  "ignoreList": []
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-out-of-bounds.js b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-out-of-bounds.js
new file mode 100644
index 0000000000..7a0fbb8833
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-out-of-bounds.js
@@ -0,0 +1 @@
+//# sourceMappingURL=ignore-list-out-of-bounds.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-out-of-bounds.js.map b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-out-of-bounds.js.map
new file mode 100644
index 0000000000..fb2566bb41
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-out-of-bounds.js.map
@@ -0,0 +1,8 @@
+{
+  "version" : 3,
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "",
+  "names": [],
+  "ignoreList": [1]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-valid-1.js b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-valid-1.js
new file mode 100644
index 0000000000..ea64a5565a
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-valid-1.js
@@ -0,0 +1 @@
+//# sourceMappingURL=ignore-list-valid-1.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-valid-1.js.map b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-valid-1.js.map
new file mode 100644
index 0000000000..98eebdf7f6
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-valid-1.js.map
@@ -0,0 +1,8 @@
+{
+  "version" : 3,
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "",
+  "names": [],
+  "ignoreList": [0]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-1.js b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-1.js
new file mode 100644
index 0000000000..8b40bd3847
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-1.js
@@ -0,0 +1 @@
+//# sourceMappingURL=ignore-list-wrong-type-1.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-1.js.map b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-1.js.map
new file mode 100644
index 0000000000..688740aba8
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-1.js.map
@@ -0,0 +1,8 @@
+{
+  "version" : 3,
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "",
+  "names": [],
+  "ignoreList": ["not a number"]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-2.js b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-2.js
new file mode 100644
index 0000000000..35c7791164
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-2.js
@@ -0,0 +1 @@
+//# sourceMappingURL=ignore-list-wrong-type-2.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-2.js.map b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-2.js.map
new file mode 100644
index 0000000000..ca1d30de2d
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-2.js.map
@@ -0,0 +1,8 @@
+{
+  "version" : 3,
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "",
+  "names": [],
+  "ignoreList": ["0"]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-3.js b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-3.js
new file mode 100644
index 0000000000..8735d41758
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-3.js
@@ -0,0 +1 @@
+//# sourceMappingURL=ignore-list-wrong-type-3.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-3.js.map b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-3.js.map
new file mode 100644
index 0000000000..1ac167d56c
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-3.js.map
@@ -0,0 +1,8 @@
+{
+  "version" : 3,
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "",
+  "names": [],
+  "ignoreList": 0
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-base-mappings.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-base-mappings.js
new file mode 100644
index 0000000000..e90bef083c
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-base-mappings.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-invalid-base-mappings.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-base-mappings.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-base-mappings.js.map
new file mode 100644
index 0000000000..b489c1f080
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-base-mappings.js.map
@@ -0,0 +1,15 @@
+{
+  "version": 3,
+  "mappings": "AAAA",
+  "sections": [
+    {
+      "offset": { "line": 0, "column": 0 },
+      "map": {
+        "version": 3,
+        "names": [],
+        "sources": ["empty-original.js"],
+        "mappings": "AAAA"
+      }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-order.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-order.js
new file mode 100644
index 0000000000..263fa3c6e0
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-order.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-invalid-order.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-order.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-order.js.map
new file mode 100644
index 0000000000..82da69df72
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-order.js.map
@@ -0,0 +1,23 @@
+{
+  "version": 3,
+  "sections": [
+    {
+      "offset": { "line": 1, "column": 4 },
+      "map": {
+        "version": 3,
+        "names": [],
+        "sources": ["empty-original.js"],
+        "mappings": "AAAA"
+      }
+    },
+    {
+      "offset": { "line": 0, "column": 0 },
+      "map": {
+        "version": 3,
+        "names": [],
+        "sources": ["empty-original.js"],
+        "mappings": "AAAA"
+      }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-overlap.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-overlap.js
new file mode 100644
index 0000000000..9aff8dc620
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-overlap.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-invalid-overlap.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-overlap.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-overlap.js.map
new file mode 100644
index 0000000000..8d42546fd8
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-overlap.js.map
@@ -0,0 +1,23 @@
+{
+  "version": 3,
+  "sections": [
+    {
+      "offset": { "line": 0, "column": 0 },
+      "map": {
+        "version": 3,
+        "names": [],
+        "sources": ["empty-original.js"],
+        "mappings": "AAAA"
+      }
+    },
+    {
+      "offset": { "line": 0, "column": 0 },
+      "map": {
+        "version": 3,
+        "names": [],
+        "sources": ["empty-original.js"],
+        "mappings": "AAAA"
+      }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-map.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-map.js
new file mode 100644
index 0000000000..86c8e9a253
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-map.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-missing-map.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-map.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-map.js.map
new file mode 100644
index 0000000000..3bce47e852
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-map.js.map
@@ -0,0 +1,8 @@
+{
+  "version": 3,
+  "sections": [
+    {
+      "offset": { "line": 0, "column": 0 }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-column.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-column.js
new file mode 100644
index 0000000000..fe6917403f
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-column.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-missing-offset-column.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-column.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-column.js.map
new file mode 100644
index 0000000000..aa48bbb993
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-column.js.map
@@ -0,0 +1,14 @@
+{
+  "version": 3,
+  "sections": [
+    {
+      "offset": { "line": 0  },
+      "map": {
+        "version": 3,
+        "names": [],
+        "sources": ["empty-original.js"],
+        "mappings": "AAAA"
+      }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-line.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-line.js
new file mode 100644
index 0000000000..ba8614e412
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-line.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-missing-offset-line.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-line.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-line.js.map
new file mode 100644
index 0000000000..3d60444ea7
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset-line.js.map
@@ -0,0 +1,14 @@
+{
+  "version": 3,
+  "sections": [
+    {
+      "offset": { "column": 0 },
+      "map": {
+        "version": 3,
+        "names": [],
+        "sources": ["empty-original.js"],
+        "mappings": "AAAA"
+      }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset.js
new file mode 100644
index 0000000000..9ca2cf3fb5
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-missing-offset.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset.js.map
new file mode 100644
index 0000000000..7285138bf5
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-offset.js.map
@@ -0,0 +1,13 @@
+{
+  "version": 3,
+  "sections": [
+    {
+      "map": {
+        "version": 3,
+        "names": [],
+        "sources": ["empty-original.js"],
+        "mappings": "AAAA"
+      }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-offset-column-wrong-type.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-offset-column-wrong-type.js
new file mode 100644
index 0000000000..ed1e9ec5d5
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-offset-column-wrong-type.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-offset-column-wrong-type.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-offset-column-wrong-type.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-offset-column-wrong-type.js.map
new file mode 100644
index 0000000000..b43e79a9dd
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-offset-column-wrong-type.js.map
@@ -0,0 +1,14 @@
+{
+  "version": 3,
+  "sections": [
+    {
+      "offset": { "line": 0, "column": true },
+      "map": {
+        "version": 3,
+        "names": [],
+        "sources": ["empty-original.js"],
+        "mappings": "AAAA"
+      }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-offset-line-wrong-type.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-offset-line-wrong-type.js
new file mode 100644
index 0000000000..d58f2aff99
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-offset-line-wrong-type.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-offset-line-wrong-type.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-offset-line-wrong-type.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-offset-line-wrong-type.js.map
new file mode 100644
index 0000000000..81dbcd6ec4
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-offset-line-wrong-type.js.map
@@ -0,0 +1,14 @@
+{
+  "version": 3,
+  "sections": [
+    {
+      "offset": { "line": true, "column": 0 },
+      "map": {
+        "version": 3,
+        "names": [],
+        "sources": ["empty-original.js"],
+        "mappings": "AAAA"
+      }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-two-concatenated-sources.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-two-concatenated-sources.js
new file mode 100644
index 0000000000..b8702d7187
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-two-concatenated-sources.js
@@ -0,0 +1,2 @@
+function foo(){return 42}function bar(){return 24}foo();bar();function baz(){return"baz"}baz();
+//# sourceMappingURL=index-map-two-concatenated-sources.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-two-concatenated-sources.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-two-concatenated-sources.js.map
new file mode 100644
index 0000000000..f67f5de3c5
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-two-concatenated-sources.js.map
@@ -0,0 +1,24 @@
+{
+  "version": 3,
+  "file": "index-map-two-concatenated-sources.js",
+  "sections": [
+    {
+      "offset": { "line": 0, "column": 0 },
+      "map": {
+        "version": 3,
+        "names": ["foo","bar"],
+        "sources": ["basic-mapping-original.js"],
+        "mappings": "AAAA,SAASA,MACP,OAAO,EACT,CACA,SAASC,MACP,OAAO,EACT,CACAD,MACAC"
+      }
+    },
+    {
+      "offset": { "line": 0, "column": 62 },
+      "map": {
+        "version": 3,
+        "names": ["baz"],
+        "sources": ["second-source-original.js"],
+        "mappings":"AAAA,SAASA,MACP,MAAO,KACT,CACAA"
+      }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-map.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-map.js
new file mode 100644
index 0000000000..d31d6d6358
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-map.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-wrong-type-map.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-map.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-map.js.map
new file mode 100644
index 0000000000..0963f623d7
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-map.js.map
@@ -0,0 +1,9 @@
+{
+  "version": 3,
+  "sections": [
+    {
+      "offset": { "line": 0, "column": 0 },
+      "map": "not a map"
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-offset.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-offset.js
new file mode 100644
index 0000000000..048e1246f8
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-offset.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-wrong-type-offset.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-offset.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-offset.js.map
new file mode 100644
index 0000000000..fbc6e4e678
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-offset.js.map
@@ -0,0 +1,14 @@
+{
+  "version": 3,
+  "sections": [
+    {
+      "offset": "not an offset",
+      "map": {
+        "version": 3,
+        "names": [],
+        "sources": ["empty-original.js"],
+        "mappings": "AAAA"
+      }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-sections.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-sections.js
new file mode 100644
index 0000000000..011eca806e
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-sections.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-wrong-type-sections.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-sections.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-sections.js.map
new file mode 100644
index 0000000000..dbfb4ead30
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-sections.js.map
@@ -0,0 +1,4 @@
+{
+  "version": 3,
+  "sections": "not a sections list"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-bad-separator.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-bad-separator.js
new file mode 100644
index 0000000000..25338aca30
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-bad-separator.js
@@ -0,0 +1,2 @@
+function foo(){return 42}function bar(){return 24}foo();bar();
+//# sourceMappingURL=invalid-mapping-bad-separator.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-bad-separator.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-bad-separator.js.map
new file mode 100644
index 0000000000..5f4f5b9233
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-bad-separator.js.map
@@ -0,0 +1,6 @@
+{
+  "version": 3,
+  "names": ["foo","bar"],
+  "sources": ["basic-mapping-original.js"],
+  "mappings": "AAAA.SAASA:MACP"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-1.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-1.js
new file mode 100644
index 0000000000..cb38e2fe9d
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-1.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-not-a-string-1.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-1.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-1.js.map
new file mode 100644
index 0000000000..5bf3e2a9d8
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-1.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-not-a-string-1.js",
+  "sources": ["empty-original.js"],
+  "mappings": 5
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-2.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-2.js
new file mode 100644
index 0000000000..3d84abd6c6
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-2.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-not-a-string-2.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-2.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-2.js.map
new file mode 100644
index 0000000000..4527e7f764
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-not-a-string-2.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-not-a-string-2.js",
+  "sources": ["empty-original.js"],
+  "mappings": [1, 2, 3, 4]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-column-too-large.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-column-too-large.js
new file mode 100644
index 0000000000..55591f874b
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-column-too-large.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-column-too-large.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-column-too-large.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-column-too-large.js.map
new file mode 100644
index 0000000000..b4c059e015
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-column-too-large.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-column-too-large.js",
+  "sources": ["empty-original.js"],
+  "mappings": "ggggggE"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-out-of-bounds.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-out-of-bounds.js
new file mode 100644
index 0000000000..2a6b434eff
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-out-of-bounds.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-name-index-out-of-bounds.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-out-of-bounds.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-out-of-bounds.js.map
new file mode 100644
index 0000000000..8dd2ea6c2d
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-out-of-bounds.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": ["foo"],
+  "file": "invalid-mapping-segment-name-index-out-of-bounds.js",
+  "sources": ["empty-original.js"],
+  "mappings": "AAAAC"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-too-large.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-too-large.js
new file mode 100644
index 0000000000..709e34dbd3
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-too-large.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-name-index-too-large.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-too-large.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-too-large.js.map
new file mode 100644
index 0000000000..c7bf5b98d1
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-name-index-too-large.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-name-index-too-large.js",
+  "sources": ["empty-original.js"],
+  "mappings": "AAAAggggggE"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-column.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-column.js
new file mode 100644
index 0000000000..a202152d6f
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-column.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-negative-column.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-column.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-column.js.map
new file mode 100644
index 0000000000..403878bfa4
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-column.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-negative-column.js",
+  "sources": ["empty-original.js"],
+  "mappings": "F"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-name-index.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-name-index.js
new file mode 100644
index 0000000000..3e3f634204
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-name-index.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-negative-name-index.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-name-index.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-name-index.js.map
new file mode 100644
index 0000000000..b94f63646e
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-name-index.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-negative-name-index.js",
+  "sources": ["empty-original.js"],
+  "mappings": "AAAAF"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-column.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-column.js
new file mode 100644
index 0000000000..f21d5342b3
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-column.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-negative-original-column.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-column.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-column.js.map
new file mode 100644
index 0000000000..011c639d3f
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-column.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-negative-original-column.js",
+  "sources": ["empty-original.js"],
+  "mappings": "AAAF"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-line.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-line.js
new file mode 100644
index 0000000000..b37309601c
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-line.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-negative-original-line.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-line.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-line.js.map
new file mode 100644
index 0000000000..e7ec993eeb
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-original-line.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-negative-original-line.js",
+  "sources": ["empty-original.js"],
+  "mappings": "AAFA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-column.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-column.js
new file mode 100644
index 0000000000..94b835d687
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-column.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-negative-relative-column.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-column.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-column.js.map
new file mode 100644
index 0000000000..414884072b
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-column.js.map
@@ -0,0 +1,8 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-negative-relative-column.js",
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "C,F"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-name-index.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-name-index.js
new file mode 100644
index 0000000000..c965c5f011
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-name-index.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-negative-relative-name-index.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-name-index.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-name-index.js.map
new file mode 100644
index 0000000000..1fbbcfcd32
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-name-index.js.map
@@ -0,0 +1,8 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-negative-relative-name-index.js",
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "AAAAC,AAAAF"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-column.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-column.js
new file mode 100644
index 0000000000..493a6ec88a
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-column.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-negative-relative-original-column.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-column.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-column.js.map
new file mode 100644
index 0000000000..7e62895651
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-column.js.map
@@ -0,0 +1,8 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-negative-relative-original-column.js",
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "AAAC,AAAF"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-line.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-line.js
new file mode 100644
index 0000000000..ca8329fb98
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-line.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-negative-relative-original-line.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-line.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-line.js.map
new file mode 100644
index 0000000000..86b0fb3a04
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-line.js.map
@@ -0,0 +1,8 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-negative-relative-original-line.js",
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "AACA,AAFA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-source-index.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-source-index.js
new file mode 100644
index 0000000000..fa92225b09
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-source-index.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-negative-relative-source-index.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-source-index.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-source-index.js.map
new file mode 100644
index 0000000000..2efeb047db
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-source-index.js.map
@@ -0,0 +1,8 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-negative-relative-source-index.js",
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "ACAA,AFAA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-source-index.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-source-index.js
new file mode 100644
index 0000000000..6e05849b6a
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-source-index.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-negative-source-index.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-source-index.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-source-index.js.map
new file mode 100644
index 0000000000..596c2f298b
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-source-index.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-negative-source-index.js",
+  "sources": ["empty-original.js"],
+  "mappings": "AFAA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-column-too-large.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-column-too-large.js
new file mode 100644
index 0000000000..0936ed7ea8
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-column-too-large.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-original-column-too-large.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-column-too-large.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-column-too-large.js.map
new file mode 100644
index 0000000000..ff2103fe24
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-column-too-large.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-original-column-too-large.js",
+  "sources": ["empty-original.js"],
+  "mappings": "AAAggggggE"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-line-too-large.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-line-too-large.js
new file mode 100644
index 0000000000..9b3aa5a361
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-line-too-large.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-original-line-too-large.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-line-too-large.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-line-too-large.js.map
new file mode 100644
index 0000000000..890f1c71fc
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-original-line-too-large.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-original-line-too-large.js",
+  "sources": ["empty-original.js"],
+  "mappings": "AAggggggEA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-out-of-bounds.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-out-of-bounds.js
new file mode 100644
index 0000000000..2e5fbca268
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-out-of-bounds.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-source-index-out-of-bounds.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-out-of-bounds.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-out-of-bounds.js.map
new file mode 100644
index 0000000000..86dedb114f
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-out-of-bounds.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-source-index-out-of-bounds.js",
+  "sources": ["empty-original.js"],
+  "mappings": "ACAA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-too-large.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-too-large.js
new file mode 100644
index 0000000000..3f4943e127
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-too-large.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-source-index-too-large.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-too-large.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-too-large.js.map
new file mode 100644
index 0000000000..e9f858c6e1
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-source-index-too-large.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-source-index-too-large.js",
+  "sources": ["empty-original.js"],
+  "mappings": "AggggggEAA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-three-fields.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-three-fields.js
new file mode 100644
index 0000000000..4b868fac9c
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-three-fields.js
@@ -0,0 +1,2 @@
+function foo(){return 42}function bar(){return 24}foo();bar();
+//# sourceMappingURL=invalid-mapping-segment-with-three-fields.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-three-fields.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-three-fields.js.map
new file mode 100644
index 0000000000..c2af1165ad
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-three-fields.js.map
@@ -0,0 +1,6 @@
+{
+  "version": 3,
+  "names": ["foo","bar"],
+  "sources": ["basic-mapping-original.js"],
+  "mappings": "AAA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-two-fields.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-two-fields.js
new file mode 100644
index 0000000000..96045a7a11
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-two-fields.js
@@ -0,0 +1,2 @@
+function foo(){return 42}function bar(){return 24}foo();bar();
+//# sourceMappingURL=invalid-mapping-segment-with-two-fields.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-two-fields.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-two-fields.js.map
new file mode 100644
index 0000000000..73cf00fa1c
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-two-fields.js.map
@@ -0,0 +1,6 @@
+{
+  "version": 3,
+  "names": ["foo","bar"],
+  "sources": ["basic-mapping-original.js"],
+  "mappings": "AA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-zero-fields.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-zero-fields.js
new file mode 100644
index 0000000000..9d5332a56c
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-zero-fields.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-with-zero-fields.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-zero-fields.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-zero-fields.js.map
new file mode 100644
index 0000000000..5a34d25b64
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-with-zero-fields.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-with-zero-fields.js",
+  "sources": ["empty-original.js"],
+  "mappings": ",,,,"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-missing-continuation.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-missing-continuation.js
new file mode 100644
index 0000000000..2c2a0090ac
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-missing-continuation.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-vlq-missing-continuation.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-missing-continuation.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-missing-continuation.js.map
new file mode 100644
index 0000000000..dd0e363ff4
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-missing-continuation.js.map
@@ -0,0 +1,6 @@
+{
+  "version" : 3,
+  "sources": [],
+  "names": [],
+  "mappings": "g"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-non-base64-char.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-non-base64-char.js
new file mode 100644
index 0000000000..d1b20b41a2
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-non-base64-char.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-vlq-non-base64-char.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-non-base64-char.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-non-base64-char.js.map
new file mode 100644
index 0000000000..4fa1ac5768
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-non-base64-char.js.map
@@ -0,0 +1,6 @@
+{
+  "version" : 3,
+  "sources": [],
+  "names": [],
+  "mappings": "A$%?!"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/names-missing.js b/front_end/core/sdk/fixtures/sourcemaps/names-missing.js
new file mode 100644
index 0000000000..58781fd887
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/names-missing.js
@@ -0,0 +1 @@
+//# sourceMappingURL=names-missing.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/names-missing.js.map b/front_end/core/sdk/fixtures/sourcemaps/names-missing.js.map
new file mode 100644
index 0000000000..82170bf784
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/names-missing.js.map
@@ -0,0 +1,5 @@
+{
+  "version" : 3,
+  "sources": ["empty-original.js"],
+  "mappings": ""
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-1.js b/front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-1.js
new file mode 100644
index 0000000000..dc65f1972b
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-1.js
@@ -0,0 +1 @@
+//# sourceMappingURL=names-not-a-list-1.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-1.js.map b/front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-1.js.map
new file mode 100644
index 0000000000..fe1edaeb96
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-1.js.map
@@ -0,0 +1,6 @@
+{
+  "version" : 3,
+  "sources": ["source.js"],
+  "names": "not a list",
+  "mappings": "AAAAA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-2.js b/front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-2.js
new file mode 100644
index 0000000000..d7251f78da
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-2.js
@@ -0,0 +1 @@
+//# sourceMappingURL=names-not-a-list-2.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-2.js.map b/front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-2.js.map
new file mode 100644
index 0000000000..3388d2bb71
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/names-not-a-list-2.js.map
@@ -0,0 +1,6 @@
+{
+  "version" : 3,
+  "sources": ["source.js"],
+  "names": { "foo": 3 },
+  "mappings": "AAAAA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/names-not-string.js b/front_end/core/sdk/fixtures/sourcemaps/names-not-string.js
new file mode 100644
index 0000000000..8dc7b4811a
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/names-not-string.js
@@ -0,0 +1 @@
+//# sourceMappingURL=names-not-string.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/names-not-string.js.map b/front_end/core/sdk/fixtures/sourcemaps/names-not-string.js.map
new file mode 100644
index 0000000000..c0feb0739a
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/names-not-string.js.map
@@ -0,0 +1,6 @@
+{
+  "version" : 3,
+  "sources": ["source.js"],
+  "names": [null, 3, true, false, {}, []],
+  "mappings": "AAAAA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/second-source-original.js b/front_end/core/sdk/fixtures/sourcemaps/second-source-original.js
new file mode 100644
index 0000000000..c339bc9d15
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/second-source-original.js
@@ -0,0 +1,4 @@
+function baz() {
+  return "baz";
+}
+baz();
diff --git a/front_end/core/sdk/fixtures/sourcemaps/source-map-spec-tests.json b/front_end/core/sdk/fixtures/sourcemaps/source-map-spec-tests.json
new file mode 100644
index 0000000000..0f7a3c1cb1
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/source-map-spec-tests.json
@@ -0,0 +1,1540 @@
+{
+  "tests": [
+    {
+      "name": "versionValid",
+      "description": "Test a simple source map with a valid version number",
+      "baseFile": "version-valid.js",
+      "sourceMapFile": "version-valid.js.map",
+      "sourceMapIsValid": true
+    },
+    {
+      "name": "versionMissing",
+      "description": "Test a source map that is missing a version field",
+      "baseFile": "version-missing.js",
+      "sourceMapFile": "version-missing.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "versionNotANumber",
+      "description": "Test a source map with a version field that is not a number",
+      "baseFile": "version-not-a-number.js",
+      "sourceMapFile": "version-not-a-number.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "versionNumericString",
+      "description": "Test a source map with a version field that is a number as a string",
+      "baseFile": "version-numeric-string.js",
+      "sourceMapFile": "version-numeric-string.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "versionTooHigh",
+      "description": "Test a source map with an integer version field that is too high",
+      "baseFile": "version-too-high.js",
+      "sourceMapFile": "version-too-high.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "versionTooLow",
+      "description": "Test a source map with an integer version field that is too low",
+      "baseFile": "version-too-low.js",
+      "sourceMapFile": "version-too-low.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "sourcesMissing",
+      "description": "Test a source map that is missing a necessary sources field",
+      "baseFile": "sources-missing.js",
+      "sourceMapFile": "sources-missing.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "sourcesNotAList1",
+      "description": "Test a source map with a sources field that is not a valid list (string)",
+      "baseFile": "sources-not-a-list-1.js",
+      "sourceMapFile": "sources-not-a-list-1.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "sourcesNotAList2",
+      "description": "Test a source map with a sources field that is not a valid list (object)",
+      "baseFile": "sources-not-a-list-2.js",
+      "sourceMapFile": "sources-not-a-list-2.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "sourcesNotStringOrNull",
+      "description": "Test a source map with a sources list that has non-string and non-null items",
+      "baseFile": "sources-not-string-or-null.js",
+      "sourceMapFile": "sources-not-string-or-null.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "sourcesAndSourcesContentBothNull",
+      "description": "Test a source map that has both null sources and sourcesContent entries",
+      "baseFile": "sources-and-sources-content-both-null.js",
+      "sourceMapFile": "sources-and-sources-content-both-null.js.map",
+      "sourceMapIsValid": true
+    },
+    {
+      "name": "fileNotAString1",
+      "description": "Test a source map with a file field that is not a valid string",
+      "baseFile": "file-not-a-string-1.js",
+      "sourceMapFile": "file-not-a-string-1.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "fileNotAString2",
+      "description": "Test a source map with a file field that is not a valid string",
+      "baseFile": "file-not-a-string-2.js",
+      "sourceMapFile": "file-not-a-string-2.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "sourceRootNotAString1",
+      "description": "Test a source map with a sourceRoot field that is not a valid string",
+      "baseFile": "source-root-not-a-string-1.js",
+      "sourceMapFile": "source-root-not-a-string-1.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "sourceRootNotAString2",
+      "description": "Test a source map with a sourceRoot field that is not a valid string",
+      "baseFile": "source-root-not-a-string-2.js",
+      "sourceMapFile": "source-root-not-a-string-2.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "namesMissing",
+      "description": "Test a source map that is missing a necessary names field",
+      "baseFile": "names-missing.js",
+      "sourceMapFile": "names-missing.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "namesNotAList1",
+      "description": "Test a source map with a names field that is not a valid list (string)",
+      "baseFile": "names-not-a-list-1.js",
+      "sourceMapFile": "names-not-a-list-1.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "namesNotAList2",
+      "description": "Test a source map with a names field that is not a valid list (object)",
+      "baseFile": "names-not-a-list-2.js",
+      "sourceMapFile": "names-not-a-list-2.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "namesNotString",
+      "description": "Test a source map with a names list that has non-string items",
+      "baseFile": "names-not-string.js",
+      "sourceMapFile": "names-not-string.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "ignoreListEmpty",
+      "description": "Test a source map with an ignore list that has no items",
+      "baseFile": "ignore-list-empty.js",
+      "sourceMapFile": "ignore-list-empty.js.map",
+      "sourceMapIsValid": true
+    },
+    {
+      "name": "ignoreListValid1",
+      "description": "Test a source map with a simple valid ignore list",
+      "baseFile": "ignore-list-valid-1.js",
+      "sourceMapFile": "ignore-list-valid-1.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkIgnoreList",
+          "present": ["empty-original.js"]
+        }
+      ]
+    },
+    {
+      "name": "ignoreListWrongType1",
+      "description": "Test a source map with an ignore list with the wrong type of items",
+      "baseFile": "ignore-list-wrong-type-1.js",
+      "sourceMapFile": "ignore-list-wrong-type-1.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "ignoreListWrongType2",
+      "description": "Test a source map with an ignore list with the wrong type of items",
+      "baseFile": "ignore-list-wrong-type-2.js",
+      "sourceMapFile": "ignore-list-wrong-type-2.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "ignoreListWrongType3",
+      "description": "Test a source map with an ignore list that is not a list",
+      "baseFile": "ignore-list-wrong-type-3.js",
+      "sourceMapFile": "ignore-list-wrong-type-3.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "ignoreListOutOfBounds",
+      "description": "Test a source map with an ignore list with an item with an out-of-bounds index",
+      "baseFile": "ignore-list-out-of-bounds.js",
+      "sourceMapFile": "ignore-list-out-of-bounds.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "unrecognizedProperty",
+      "description": "Test a source map that has an extra field not explicitly encoded in the spec",
+      "baseFile": "unrecognized-property.js",
+      "sourceMapFile": "unrecognized-property.js.map",
+      "sourceMapIsValid": true
+    },
+    {
+      "name": "invalidVLQDueToNonBase64Character",
+      "description": "Test a source map that has a mapping with an invalid non-base64 character",
+      "baseFile": "invalid-vlq-non-base64-char.js",
+      "sourceMapFile": "invalid-vlq-non-base64-char.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidVLQDueToMissingContinuationDigits",
+      "description": "Test a source map that has a mapping with an invalid VLQ that has a continuation bit but no continuing digits",
+      "baseFile": "invalid-vlq-missing-continuation.js",
+      "sourceMapFile": "invalid-vlq-missing-continuation.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingNotAString1",
+      "description": "Test a source map that has an invalid mapping that is not a string (number)",
+      "baseFile": "invalid-mapping-not-a-string-1.js",
+      "sourceMapFile": "invalid-mapping-not-a-string-1.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingNotAString2",
+      "description": "Test a source map that has an invalid mapping that is not a string (array)",
+      "baseFile": "invalid-mapping-not-a-string-2.js",
+      "sourceMapFile": "invalid-mapping-not-a-string-2.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentBadSeparator",
+      "description": "Test a source map that uses separator characters not recognized in the spec",
+      "baseFile": "invalid-mapping-bad-separator.js",
+      "sourceMapFile": "invalid-mapping-bad-separator.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithZeroFields",
+      "description": "Test a source map that has the wrong number (zero) of segments fields",
+      "baseFile": "invalid-mapping-segment-with-zero-fields.js",
+      "sourceMapFile": "invalid-mapping-segment-with-zero-fields.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithTwoFields",
+      "description": "Test a source map that has the wrong number (two) of segments fields",
+      "baseFile": "invalid-mapping-segment-with-two-fields.js",
+      "sourceMapFile": "invalid-mapping-segment-with-two-fields.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithThreeFields",
+      "description": "Test a source map that has the wrong number (three) of segments fields",
+      "baseFile": "invalid-mapping-segment-with-three-fields.js",
+      "sourceMapFile": "invalid-mapping-segment-with-three-fields.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithSourceIndexOutOfBounds",
+      "description": "Test a source map that has a source index field that is out of bounds of the sources field",
+      "baseFile": "invalid-mapping-segment-source-index-out-of-bounds.js",
+      "sourceMapFile": "invalid-mapping-segment-source-index-out-of-bounds.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNameIndexOutOfBounds",
+      "description": "Test a source map that has a name index field that is out of bounds of the names field",
+      "baseFile": "invalid-mapping-segment-name-index-out-of-bounds.js",
+      "sourceMapFile": "invalid-mapping-segment-name-index-out-of-bounds.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNegativeColumn",
+      "description": "Test a source map that has an invalid negative non-relative column field",
+      "baseFile": "invalid-mapping-segment-negative-column.js",
+      "sourceMapFile": "invalid-mapping-segment-negative-column.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNegativeSourceIndex",
+      "description": "Test a source map that has an invalid negative non-relative source index field",
+      "baseFile": "invalid-mapping-segment-negative-source-index.js",
+      "sourceMapFile": "invalid-mapping-segment-negative-source-index.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNegativeOriginalLine",
+      "description": "Test a source map that has an invalid negative non-relative original line field",
+      "baseFile": "invalid-mapping-segment-negative-original-line.js",
+      "sourceMapFile": "invalid-mapping-segment-negative-original-line.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNegativeOriginalColumn",
+      "description": "Test a source map that has an invalid negative non-relative original column field",
+      "baseFile": "invalid-mapping-segment-negative-original-column.js",
+      "sourceMapFile": "invalid-mapping-segment-negative-original-column.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNegativeNameIndex",
+      "description": "Test a source map that has an invalid negative non-relative name index field",
+      "baseFile": "invalid-mapping-segment-negative-name-index.js",
+      "sourceMapFile": "invalid-mapping-segment-negative-name-index.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNegativeRelativeColumn",
+      "description": "Test a source map that has an invalid negative relative column field",
+      "baseFile": "invalid-mapping-segment-negative-relative-column.js",
+      "sourceMapFile": "invalid-mapping-segment-negative-relative-column.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNegativeRelativeSourceIndex",
+      "description": "Test a source map that has an invalid negative relative source index field",
+      "baseFile": "invalid-mapping-segment-negative-relative-source-index.js",
+      "sourceMapFile": "invalid-mapping-segment-negative-relative-source-index.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNegativeRelativeOriginalLine",
+      "description": "Test a source map that has an invalid negative relative original line field",
+      "baseFile": "invalid-mapping-segment-negative-relative-original-line.js",
+      "sourceMapFile": "invalid-mapping-segment-negative-relative-original-line.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNegativeRelativeOriginalColumn",
+      "description": "Test a source map that has an invalid negative relative original column field",
+      "baseFile": "invalid-mapping-segment-negative-relative-original-column.js",
+      "sourceMapFile": "invalid-mapping-segment-negative-relative-original-column.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNegativeRelativeNameIndex",
+      "description": "Test a source map that has an invalid negative relative name index field",
+      "baseFile": "invalid-mapping-segment-negative-relative-name-index.js",
+      "sourceMapFile": "invalid-mapping-segment-negative-relative-name-index.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithColumnExceeding32Bits",
+      "description": "Test a source map that has a column field that exceeds 32 bits",
+      "baseFile": "invalid-mapping-segment-column-too-large.js",
+      "sourceMapFile": "invalid-mapping-segment-column-too-large.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithSourceIndexExceeding32Bits",
+      "description": "Test a source map that has a source index field that exceeds 32 bits",
+      "baseFile": "invalid-mapping-segment-source-index-too-large.js",
+      "sourceMapFile": "invalid-mapping-segment-source-index-too-large.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithOriginalLineExceeding32Bits",
+      "description": "Test a source map that has a original line field that exceeds 32 bits",
+      "baseFile": "invalid-mapping-segment-original-line-too-large.js",
+      "sourceMapFile": "invalid-mapping-segment-original-line-too-large.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithOriginalColumnExceeding32Bits",
+      "description": "Test a source map that has an original column field that exceeds 32 bits",
+      "baseFile": "invalid-mapping-segment-original-column-too-large.js",
+      "sourceMapFile": "invalid-mapping-segment-original-column-too-large.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNameIndexExceeding32Bits",
+      "description": "Test a source map that has a name index field that exceeds 32 bits",
+      "baseFile": "invalid-mapping-segment-name-index-too-large.js",
+      "sourceMapFile": "invalid-mapping-segment-name-index-too-large.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "validMappingFieldsWith32BitMaxValues",
+      "description": "Test a source map that has segment fields with max values representable in 32 bits",
+      "baseFile": "valid-mapping-boundary-values.js",
+      "sourceMapFile": "valid-mapping-boundary-values.js.map",
+      "sourceMapIsValid": true
+    },
+    {
+      "name": "validMappingLargeVLQ",
+      "description": "Test a source map that has a segment field VLQ that is very long but within 32-bits",
+      "baseFile": "valid-mapping-large-vlq.js",
+      "sourceMapFile": "valid-mapping-large-vlq.js.map",
+      "sourceMapIsValid": true
+    },
+    {
+      "name": "validMappingEmptyGroups",
+      "description": "Test a source map with a mapping that has many empty groups",
+      "baseFile": "valid-mapping-empty-groups.js",
+      "sourceMapFile": "valid-mapping-empty-groups.js.map",
+      "sourceMapIsValid": true
+    },
+    {
+      "name": "validMappingEmptyString",
+      "description": "Test a source map with an empty string mapping",
+      "baseFile": "valid-mapping-empty-string.js",
+      "sourceMapFile": "valid-mapping-empty-string.js.map",
+      "sourceMapIsValid": true
+    },
+    {
+      "name": "indexMapWrongTypeSections",
+      "description": "Test an index map with a sections field with the wrong type",
+      "baseFile": "index-map-wrong-type-sections.js",
+      "sourceMapFile": "index-map-wrong-type-sections.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapWrongTypeOffset",
+      "description": "Test an index map with an offset field with the wrong type",
+      "baseFile": "index-map-wrong-type-offset.js",
+      "sourceMapFile": "index-map-wrong-type-offset.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapWrongTypeMap",
+      "description": "Test an index map with a map field with the wrong type",
+      "baseFile": "index-map-wrong-type-map.js",
+      "sourceMapFile": "index-map-wrong-type-map.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapInvalidBaseMappings",
+      "description": "Test that an index map cannot also have a regular mappings field",
+      "baseFile": "index-map-invalid-base-mappings.js",
+      "sourceMapFile": "index-map-invalid-base-mappings.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapInvalidOverlap",
+      "description": "Test that an invalid index map with multiple sections that overlap",
+      "baseFile": "index-map-invalid-overlap.js",
+      "sourceMapFile": "index-map-invalid-overlap.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapInvalidOrder",
+      "description": "Test that an invalid index map with multiple sections in the wrong order",
+      "baseFile": "index-map-invalid-order.js",
+      "sourceMapFile": "index-map-invalid-order.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapMissingMap",
+      "description": "Test that an index map that is missing a section map",
+      "baseFile": "index-map-missing-map.js",
+      "sourceMapFile": "index-map-missing-map.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapInvalidSubMap",
+      "description": "Test that an index map that has an invalid section map",
+      "baseFile": "index-map-invalid-sub-map.js",
+      "sourceMapFile": "index-map-invalid-sub-map.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapMissingOffset",
+      "description": "Test that an index map that is missing a section offset",
+      "baseFile": "index-map-missing-offset.js",
+      "sourceMapFile": "index-map-missing-offset.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapMissingOffsetLine",
+      "description": "Test that an index map that is missing a section offset's line field",
+      "baseFile": "index-map-missing-offset-line.js",
+      "sourceMapFile": "index-map-missing-offset-line.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapMissingOffsetColumn",
+      "description": "Test that an index map that is missing a section offset's column field",
+      "baseFile": "index-map-missing-offset-column.js",
+      "sourceMapFile": "index-map-missing-offset-column.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapOffsetLineWrongType",
+      "description": "Test that an index map that has an offset line field with the wrong type of value",
+      "baseFile": "index-map-offset-line-wrong-type.js",
+      "sourceMapFile": "index-map-offset-line-wrong-type.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapOffsetColumnWrongType",
+      "description": "Test that an index map that has an offset column field with the wrong type of value",
+      "baseFile": "index-map-offset-column-wrong-type.js",
+      "sourceMapFile": "index-map-offset-column-wrong-type.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapEmptySections",
+      "description": "Test a trivial index map with no sections",
+      "baseFile": "index-map-empty-sections.js",
+      "sourceMapFile": "index-map-empty-sections.js.map",
+      "sourceMapIsValid": true
+    },
+    {
+      "name": "indexMapFileWrongType1",
+      "description": "Test an index map with a file field with the wrong type",
+      "baseFile": "index-map-file-wrong-type-1.js",
+      "sourceMapFile": "index-map-file-wrong-type-1.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapFileWrongType2",
+      "description": "Test an index map with a file field with the wrong type",
+      "baseFile": "index-map-file-wrong-type-2.js",
+      "sourceMapFile": "index-map-file-wrong-type-2.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "basicMapping",
+      "description": "Test a simple source map that has several valid mappings",
+      "baseFile": "basic-mapping.js",
+      "sourceMapFile": "basic-mapping.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 0,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 9,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 9,
+          "mappedName": "foo"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 15,
+          "originalLine": 1,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 22,
+          "originalLine": 1,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 24,
+          "originalLine": 2,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 25,
+          "originalLine": 3,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 34,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 3,
+          "originalColumn": 9,
+          "mappedName": "bar"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 40,
+          "originalLine": 4,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 47,
+          "originalLine": 4,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 49,
+          "originalLine": 5,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 50,
+          "originalLine": 6,
+          "originalColumn": 0,
+          "mappedName": "foo"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 56,
+          "originalLine": 7,
+          "originalColumn": 0,
+          "mappedName": "bar"
+        }
+      ]
+    },
+    {
+      "name": "sourceRootResolution",
+      "description": "Similar to basic mapping test, but test resoultion of sources with a sourceRoot field",
+      "baseFile": "source-root-resolution.js",
+      "sourceMapFile": "source-root-resolution.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 0,
+          "originalSource": "theroot/basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 9,
+          "originalSource": "theroot/basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 9,
+          "mappedName": "foo"
+        }
+      ]
+    },
+    {
+      "name": "sourceResolutionAbsoluteURL",
+      "description": "Test resoultion of sources with absolute URLs",
+      "baseFile": "source-resolution-absolute-url.js",
+      "sourceMapFile": "source-resolution-absolute-url.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 0,
+          "originalSource": "/baz/quux/basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 9,
+          "originalSource": "/baz/quux/basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 9,
+          "mappedName": "foo"
+        }
+      ]
+    },
+    {
+      "name": "basicMappingWithIndexMap",
+      "description": "Test a version of basic-mapping.js.map that is split into sections with an index map",
+      "baseFile": "basic-mapping-as-index-map.js",
+      "sourceMapFile": "basic-mapping-as-index-map.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 0,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 9,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 9,
+          "mappedName": "foo"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 15,
+          "originalLine": 1,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 22,
+          "originalLine": 1,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 24,
+          "originalLine": 2,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 25,
+          "originalLine": 3,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 34,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 3,
+          "originalColumn": 9,
+          "mappedName": "bar"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 40,
+          "originalLine": 4,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 47,
+          "originalLine": 4,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 49,
+          "originalLine": 5,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 50,
+          "originalLine": 6,
+          "originalColumn": 0,
+          "mappedName": "foo"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 56,
+          "originalLine": 7,
+          "originalColumn": 0,
+          "mappedName": "bar"
+        }
+      ]
+    },
+    {
+      "name": "indexMapWithMissingFile",
+      "description": "Same as the basic mapping index map test but without the optional file field",
+      "baseFile": "index-map-missing-file.js",
+      "sourceMapFile": "index-map-missing-file.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 0,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 9,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 9,
+          "mappedName": "foo"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 15,
+          "originalLine": 1,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 22,
+          "originalLine": 1,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 24,
+          "originalLine": 2,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 25,
+          "originalLine": 3,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 34,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 3,
+          "originalColumn": 9,
+          "mappedName": "bar"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 40,
+          "originalLine": 4,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 47,
+          "originalLine": 4,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 49,
+          "originalLine": 5,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 50,
+          "originalLine": 6,
+          "originalColumn": 0,
+          "mappedName": "foo"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 56,
+          "originalLine": 7,
+          "originalColumn": 0,
+          "mappedName": "bar"
+        }
+      ]
+    },
+    {
+      "name": "indexMapWithTwoConcatenatedSources",
+      "description": "Test an index map that has two sub-maps for concatenated sources",
+      "baseFile": "index-map-two-concatenated-sources.js",
+      "sourceMapFile": "index-map-two-concatenated-sources.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 0,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 9,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 9,
+          "mappedName": "foo"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 15,
+          "originalLine": 1,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 22,
+          "originalLine": 1,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 24,
+          "originalLine": 2,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 25,
+          "originalLine": 3,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 34,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 3,
+          "originalColumn": 9,
+          "mappedName": "bar"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 40,
+          "originalLine": 4,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 47,
+          "originalLine": 4,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 49,
+          "originalLine": 5,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 50,
+          "originalLine": 6,
+          "originalColumn": 0,
+          "mappedName": "foo"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 56,
+          "originalLine": 7,
+          "originalColumn": 0,
+          "mappedName": "bar"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "second-source-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 62,
+          "originalLine": 0,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "second-source-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 71,
+          "originalLine": 0,
+          "originalColumn": 9,
+          "mappedName": "baz"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "second-source-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 77,
+          "originalLine": 1,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "second-source-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 83,
+          "originalLine": 1,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "second-source-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 88,
+          "originalLine": 2,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "second-source-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 89,
+          "originalLine": 3,
+          "originalColumn": 0,
+          "mappedName": "baz"
+        }
+      ]
+    },
+    {
+      "name": "sourcesNullSourcesContentNonNull",
+      "description": "Test a source map that has a null source but has a sourcesContent",
+      "baseFile": "sources-null-sources-content-non-null.js",
+      "sourceMapFile": "sources-null-sources-content-non-null.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 0,
+          "originalSource": null,
+          "originalLine": 0,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 9,
+          "originalSource": null,
+          "originalLine": 0,
+          "originalColumn": 9,
+          "mappedName": "foo"
+        }
+      ]
+    },
+    {
+      "name": "sourcesNonNullSourcesContentNull",
+      "description": "Test a source map that has a non-null source but has a null sourcesContent",
+      "baseFile": "sources-non-null-sources-content-null.js",
+      "sourceMapFile": "sources-non-null-sources-content-null.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 0,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 9,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 9,
+          "mappedName": "foo"
+        }
+      ]
+    },
+    {
+      "name": "transitiveMapping",
+      "description": "Test a simple two-stage transitive mapping from a minified JS to a TypeScript source",
+      "baseFile": "transitive-mapping.js",
+      "sourceMapFile": "transitive-mapping.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 0,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 1,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 9,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 1,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 13,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 1,
+          "originalColumn": 13,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 16,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 2,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 23,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 2,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 24,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 3,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 25,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 4,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 29,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 4,
+          "originalColumn": 4,
+          "mappedName": null
+        }
+      ]
+    },
+    {
+      "name": "transitiveMappingWithThreeSteps",
+      "description": "Test a three-stage transitive mapping from an un-minified JS to minified JS to a TypeScript source",
+      "baseFile": "transitive-mapping-three-steps.js",
+      "sourceMapFile": "transitive-mapping-three-steps.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 0,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 1,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 9,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 1,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 13,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 1,
+          "originalColumn": 13,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 1,
+          "generatedColumn": 4,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 2,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 1,
+          "generatedColumn": 11,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 2,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 2,
+          "generatedColumn": 0,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 3,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 4,
+          "generatedColumn": 0,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 4,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 4,
+          "generatedColumn": 4,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 4,
+          "originalColumn": 4,
+          "mappedName": null
+        }
+      ]
+    },
+    {
+      "name": "vlqValidSingleDigit",
+      "description": "Test VLQ decoding for a single digit, no continuation VLQ",
+      "baseFile": "vlq-valid-single-digit.js",
+      "sourceMapFile": "vlq-valid-single-digit.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 15,
+          "originalSource": "vlq-valid-single-digit-original.js",
+          "originalLine": 0,
+          "originalColumn": 0,
+          "mappedName": null
+        }
+      ]
+    },
+    {
+      "name": "vlqValidNegativeDigit",
+      "description": "Test VLQ decoding where there's a negative digit, no continuation bit",
+      "baseFile": "vlq-valid-negative-digit.js",
+      "sourceMapFile": "vlq-valid-negative-digit.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 2,
+          "generatedColumn": 15,
+          "originalSource": "vlq-valid-negative-digit-original.js",
+          "originalLine": 1,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 2,
+          "generatedColumn": 2,
+          "originalSource": "vlq-valid-negative-digit-original.js",
+          "originalLine": 1,
+          "originalColumn": 1,
+          "mappedName": null
+        }
+      ]
+    },
+    {
+      "name": "vlqValidContinuationBitPresent1",
+      "description": "Test VLQ decoding where continuation bits are present (continuations are leading zero)",
+      "baseFile": "vlq-valid-continuation-bit-present-1.js",
+      "sourceMapFile": "vlq-valid-continuation-bit-present-1.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 15,
+          "originalSource": "vlq-valid-continuation-bit-present-1-original.js",
+          "originalLine": 0,
+          "originalColumn": 1,
+          "mappedName": null
+        }
+      ]
+    },
+    {
+      "name": "vlqValidContinuationBitPresent2",
+      "description": "Test VLQ decoding where continuation bits are present (continuations have non-zero bits)",
+      "baseFile": "vlq-valid-continuation-bit-present-2.js",
+      "sourceMapFile": "vlq-valid-continuation-bit-present-2.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 2,
+          "generatedColumn": 16,
+          "originalSource": "vlq-valid-continuation-bit-present-2-original.js",
+          "originalLine": 1,
+          "originalColumn": 1,
+          "mappedName": null
+        }
+      ]
+    },
+    {
+      "name": "mappingSemanticsSingleFieldSegment",
+      "description": "Test mapping semantics for a single field segment mapping",
+      "baseFile": "mapping-semantics-single-field-segment.js",
+      "sourceMapFile": "mapping-semantics-single-field-segment.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 0,
+          "originalSource": "mapping-semantics-single-field-segment-original.js",
+          "originalLine": 0,
+          "originalColumn": 1,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 2,
+          "originalSource": null,
+          "originalLine": null,
+          "originalColumn": null,
+          "mappedName": null
+        }
+      ]
+    },
+    {
+      "name": "mappingSemanticsFourFieldSegment",
+      "description": "Test mapping semantics for a four field segment mapping",
+      "baseFile": "mapping-semantics-four-field-segment.js",
+      "sourceMapFile": "mapping-semantics-four-field-segment.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 1,
+          "originalSource": "mapping-semantics-four-field-segment-original.js",
+          "originalLine": 2,
+          "originalColumn": 2,
+          "mappedName": null
+        }
+      ]
+    },
+    {
+      "name": "mappingSemanticsFiveFieldSegment",
+      "description": "Test mapping semantics for a five field segment mapping",
+      "baseFile": "mapping-semantics-five-field-segment.js",
+      "sourceMapFile": "mapping-semantics-five-field-segment.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 1,
+          "originalSource": "mapping-semantics-five-field-segment-original.js",
+          "originalLine": 2,
+          "originalColumn": 2,
+          "mappedName": "foo"
+        }
+      ]
+    },
+    {
+      "name": "mappingSemanticsColumnReset",
+      "description": "Test that the generated column field resets to zero on new lines",
+      "baseFile": "mapping-semantics-column-reset.js",
+      "sourceMapFile": "mapping-semantics-column-reset.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 1,
+          "originalSource": "mapping-semantics-column-reset-original.js",
+          "originalLine": 0,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 1,
+          "generatedColumn": 1,
+          "originalSource": "mapping-semantics-column-reset-original.js",
+          "originalLine": 1,
+          "originalColumn": 0,
+          "mappedName": null
+        }
+      ]
+    },
+    {
+      "name": "mappingSemanticsRelative1",
+      "description": "Test that fields are calculated relative to previous ones",
+      "baseFile": "mapping-semantics-relative-1.js",
+      "sourceMapFile": "mapping-semantics-relative-1.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 1,
+          "originalSource": "mapping-semantics-relative-1-original.js",
+          "originalLine": 0,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 5,
+          "originalSource": "mapping-semantics-relative-1-original.js",
+          "originalLine": 0,
+          "originalColumn": 4,
+          "mappedName": null
+        }
+      ]
+    },
+    {
+      "name": "mappingSemanticsRelative2",
+      "description": "Test that fields are calculated relative to previous ones, across lines",
+      "baseFile": "mapping-semantics-relative-2.js",
+      "sourceMapFile": "mapping-semantics-relative-2.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 1,
+          "originalSource": "mapping-semantics-relative-2-original.js",
+          "originalLine": 0,
+          "originalColumn": 2,
+          "mappedName": "foo"
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 1,
+          "generatedColumn": 2,
+          "originalSource": "mapping-semantics-relative-2-original.js",
+          "originalLine": 1,
+          "originalColumn": 2,
+          "mappedName": "bar"
+        }
+      ]
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-and-sources-content-both-null.js b/front_end/core/sdk/fixtures/sourcemaps/sources-and-sources-content-both-null.js
new file mode 100644
index 0000000000..9263eba549
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-and-sources-content-both-null.js
@@ -0,0 +1 @@
+//# sourceMappingURL=sources-and-sources-content-both-null.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-and-sources-content-both-null.js.map b/front_end/core/sdk/fixtures/sourcemaps/sources-and-sources-content-both-null.js.map
new file mode 100644
index 0000000000..09a7c1f369
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-and-sources-content-both-null.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": ["foo"],
+  "sources": [null],
+  "sourcesContent": [null],
+  "mappings":"AAAA,SAASA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-missing.js b/front_end/core/sdk/fixtures/sourcemaps/sources-missing.js
new file mode 100644
index 0000000000..779b865e27
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-missing.js
@@ -0,0 +1 @@
+//# sourceMappingURL=sources-missing.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-missing.js.map b/front_end/core/sdk/fixtures/sourcemaps/sources-missing.js.map
new file mode 100644
index 0000000000..92aff4fb0e
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-missing.js.map
@@ -0,0 +1,5 @@
+{
+  "version" : 3,
+  "names": ["foo"],
+  "mappings": ""
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-non-null-sources-content-null.js b/front_end/core/sdk/fixtures/sourcemaps/sources-non-null-sources-content-null.js
new file mode 100644
index 0000000000..939b568ba1
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-non-null-sources-content-null.js
@@ -0,0 +1,2 @@
+function foo(){return 42}function bar(){return 24}foo();bar();
+//# sourceMappingURL=sources-non-null-sources-content-null.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-non-null-sources-content-null.js.map b/front_end/core/sdk/fixtures/sourcemaps/sources-non-null-sources-content-null.js.map
new file mode 100644
index 0000000000..e573906b2d
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-non-null-sources-content-null.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": ["foo"],
+  "sources": ["basic-mapping-original.js"],
+  "sourcesContent": [null],
+  "mappings":"AAAA,SAASA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-1.js b/front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-1.js
new file mode 100644
index 0000000000..7e33b7e867
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-1.js
@@ -0,0 +1 @@
+//# sourceMappingURL=sources-not-a-list-1.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-1.js.map b/front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-1.js.map
new file mode 100644
index 0000000000..26330517b9
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-1.js.map
@@ -0,0 +1,6 @@
+{
+  "version" : 3,
+  "sources": "not a list",
+  "names": ["foo"],
+  "mappings": "AAAAA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-2.js b/front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-2.js
new file mode 100644
index 0000000000..4021f763fc
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-2.js
@@ -0,0 +1 @@
+//# sourceMappingURL=sources-not-a-list-2.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-2.js.map b/front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-2.js.map
new file mode 100644
index 0000000000..2ed85962fd
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-not-a-list-2.js.map
@@ -0,0 +1,6 @@
+{
+  "version" : 3,
+  "sources": { "source.js": 3 },
+  "names": ["foo"],
+  "mappings": "AAAAA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-not-string-or-null.js b/front_end/core/sdk/fixtures/sourcemaps/sources-not-string-or-null.js
new file mode 100644
index 0000000000..7dca97a1da
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-not-string-or-null.js
@@ -0,0 +1 @@
+//# sourceMappingURL=sources-not-string-or-null.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-not-string-or-null.js.map b/front_end/core/sdk/fixtures/sourcemaps/sources-not-string-or-null.js.map
new file mode 100644
index 0000000000..db25561966
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-not-string-or-null.js.map
@@ -0,0 +1,6 @@
+{
+  "version" : 3,
+  "sources": [3, {}, true, false, []],
+  "names": ["foo"],
+  "mappings": "AAAAA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-null-sources-content-non-null.js b/front_end/core/sdk/fixtures/sourcemaps/sources-null-sources-content-non-null.js
new file mode 100644
index 0000000000..a760594ee9
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-null-sources-content-non-null.js
@@ -0,0 +1,2 @@
+function foo(){return 42}function bar(){return 24}foo();bar();
+//# sourceMappingURL=sources-null-sources-content-non-null.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-null-sources-content-non-null.js.map b/front_end/core/sdk/fixtures/sourcemaps/sources-null-sources-content-non-null.js.map
new file mode 100644
index 0000000000..43af03903f
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-null-sources-content-non-null.js.map
@@ -0,0 +1,7 @@
+{
+  "version":3,
+  "names": ["foo"],
+  "sources": [null],
+  "sourcesContent": ["function foo()\n{ return 42; }\nfunction bar()\n { return 24; }\nfoo();\nbar();"],
+  "mappings":"AAAA,SAASA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-original.js b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-original.js
new file mode 100644
index 0000000000..0a96699d6e
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-original.js
@@ -0,0 +1,5 @@
+function foo(x) {
+    return x;
+}
+foo("foo");
+//# sourceMappingURL=transitive-mapping-original.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-original.js.map b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-original.js.map
new file mode 100644
index 0000000000..65af25c1eb
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-original.js.map
@@ -0,0 +1,8 @@
+{
+  "version": 3,
+  "file" : "transitive-mapping-original.js",
+  "sourceRoot": "",
+  "sources": ["typescript-original.ts"],
+  "names": [],
+  "mappings": "AACA,SAAS,GAAG,CAAC,CAAU;IACrB,OAAO,CAAC,CAAC;AACX,CAAC;AACD,GAAG,CAAC,KAAK,CAAC,CAAC"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-three-steps.js b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-three-steps.js
new file mode 100644
index 0000000000..fd956164d3
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-three-steps.js
@@ -0,0 +1,6 @@
+function foo(x) {
+    return x;
+}
+
+foo("foo");
+//# sourceMappingURL=transitive-mapping-three-steps.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-three-steps.js.map b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-three-steps.js.map
new file mode 100644
index 0000000000..90459d90f6
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-three-steps.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "file": "transitive-mapping-three-steps.js",
+  "sources": ["transitive-mapping.js"],
+  "names": ["foo", "x"],
+  "mappings": "AAAA,SAASA,IAAIC;IAAG,OAAOA;AAAC;;AAACD,IAAI,KAAK"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping.js b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping.js
new file mode 100644
index 0000000000..183c027f1b
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping.js
@@ -0,0 +1,2 @@
+function foo(x){return x}foo("foo");
+//# sourceMappingURL=transitive-mapping.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping.js.map b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping.js.map
new file mode 100644
index 0000000000..d6a6fa6672
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping.js.map
@@ -0,0 +1,6 @@
+{
+  "version": 3,
+  "names": ["foo","x"],
+  "sources": ["transitive-mapping-original.js"],
+  "mappings":"AAAA,SAASA,IAAIC,GACT,OAAOA,CACX,CACAD,IAAI"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/typescript-original.ts b/front_end/core/sdk/fixtures/sourcemaps/typescript-original.ts
new file mode 100644
index 0000000000..cd51c01ba1
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/typescript-original.ts
@@ -0,0 +1,5 @@
+type FooArg = string | number;
+function foo(x : FooArg) {
+  return x;
+}
+foo("foo");
diff --git a/front_end/core/sdk/fixtures/sourcemaps/unrecognized-property.js b/front_end/core/sdk/fixtures/sourcemaps/unrecognized-property.js
new file mode 100644
index 0000000000..19dfb0e2e6
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/unrecognized-property.js
@@ -0,0 +1 @@
+//# sourceMappingURL=unrecognized-property.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/unrecognized-property.js.map b/front_end/core/sdk/fixtures/sourcemaps/unrecognized-property.js.map
new file mode 100644
index 0000000000..40bee558a4
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/unrecognized-property.js.map
@@ -0,0 +1,8 @@
+{
+  "version" : 3,
+  "sources": [],
+  "names": [],
+  "mappings": "",
+  "foobar": 42,
+  "unusedProperty": [1, 2, 3, 4]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-boundary-values.js b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-boundary-values.js
new file mode 100644
index 0000000000..3c49709e05
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-boundary-values.js
@@ -0,0 +1 @@
+//# sourceMappingURL=valid-mapping-boundary-values.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-boundary-values.js.map b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-boundary-values.js.map
new file mode 100644
index 0000000000..4dd836e63d
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-boundary-values.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": ["foo"],
+  "file": "valid-mapping-boundary-values.js",
+  "sources": ["empty-original.js"],
+  "mappings": "+/////DA+/////D+/////DA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-empty-groups.js b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-empty-groups.js
new file mode 100644
index 0000000000..a2b767b619
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-empty-groups.js
@@ -0,0 +1 @@
+//# sourceMappingURL=valid-mapping-empty-groups.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-empty-groups.js.map b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-empty-groups.js.map
new file mode 100644
index 0000000000..643c9ae784
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-empty-groups.js.map
@@ -0,0 +1,8 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "valid-mapping-empty-groups.js",
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-large-vlq.js b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-large-vlq.js
new file mode 100644
index 0000000000..b0cd897813
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-large-vlq.js
@@ -0,0 +1 @@
+//# sourceMappingURL=valid-mapping-large-vlq.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-large-vlq.js.map b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-large-vlq.js.map
new file mode 100644
index 0000000000..76e18704c4
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-large-vlq.js.map
@@ -0,0 +1,6 @@
+{
+  "version": 3,
+  "names": [],
+  "sources": ["valid-mapping-large-vlq.js"],
+  "mappings": "igggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-null-sources.js b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-null-sources.js
new file mode 100644
index 0000000000..ee2acf0f5b
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-null-sources.js
@@ -0,0 +1,2 @@
+function foo(){return 42}function bar(){return 24}foo();bar();
+//# sourceMappingURL=valid-mapping-null-sources.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-null-sources.js.map b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-null-sources.js.map
new file mode 100644
index 0000000000..199cda9369
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-null-sources.js.map
@@ -0,0 +1,6 @@
+{
+  "version":3,
+  "names": ["foo"],
+  "sources": [null],
+  "mappings":"AAAA,SAASA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/version-missing.js b/front_end/core/sdk/fixtures/sourcemaps/version-missing.js
new file mode 100644
index 0000000000..c32d1f1a1c
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/version-missing.js
@@ -0,0 +1 @@
+//# sourceMappingURL=version-missing.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/version-missing.js.map b/front_end/core/sdk/fixtures/sourcemaps/version-missing.js.map
new file mode 100644
index 0000000000..49d8ce766e
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/version-missing.js.map
@@ -0,0 +1,5 @@
+{
+  "sources": [],
+  "names": [],
+  "mappings": ""
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/version-not-a-number.js b/front_end/core/sdk/fixtures/sourcemaps/version-not-a-number.js
new file mode 100644
index 0000000000..ae2342e2ff
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/version-not-a-number.js
@@ -0,0 +1 @@
+//# sourceMappingURL=version-not-a-number.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/version-not-a-number.js.map b/front_end/core/sdk/fixtures/sourcemaps/version-not-a-number.js.map
new file mode 100644
index 0000000000..a584d6e695
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/version-not-a-number.js.map
@@ -0,0 +1,6 @@
+{
+  "version" : "3foo",
+  "sources": [],
+  "names": [],
+  "mappings": ""
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/version-numeric-string.js b/front_end/core/sdk/fixtures/sourcemaps/version-numeric-string.js
new file mode 100644
index 0000000000..a55170885d
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/version-numeric-string.js
@@ -0,0 +1 @@
+//# sourceMappingURL=version-numeric-string.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/version-numeric-string.js.map b/front_end/core/sdk/fixtures/sourcemaps/version-numeric-string.js.map
new file mode 100644
index 0000000000..dbe52a7d0d
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/version-numeric-string.js.map
@@ -0,0 +1,6 @@
+{
+  "version" : "3",
+  "sources": [],
+  "names": [],
+  "mappings": ""
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/version-too-high.js b/front_end/core/sdk/fixtures/sourcemaps/version-too-high.js
new file mode 100644
index 0000000000..55f4e1a298
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/version-too-high.js
@@ -0,0 +1 @@
+//# sourceMappingURL=version-too-high.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/version-too-high.js.map b/front_end/core/sdk/fixtures/sourcemaps/version-too-high.js.map
new file mode 100644
index 0000000000..ee23be32ff
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/version-too-high.js.map
@@ -0,0 +1,6 @@
+{
+  "version" : 4,
+  "sources": [],
+  "names": [],
+  "mappings": ""
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/version-too-low.js b/front_end/core/sdk/fixtures/sourcemaps/version-too-low.js
new file mode 100644
index 0000000000..d9642920b3
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/version-too-low.js
@@ -0,0 +1 @@
+//# sourceMappingURL=version-too-low.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/version-too-low.js.map b/front_end/core/sdk/fixtures/sourcemaps/version-too-low.js.map
new file mode 100644
index 0000000000..64ca7a6e2e
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/version-too-low.js.map
@@ -0,0 +1,6 @@
+{
+  "version" : 2,
+  "sources": [],
+  "names": [],
+  "mappings": ""
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/version-valid.js b/front_end/core/sdk/fixtures/sourcemaps/version-valid.js
new file mode 100644
index 0000000000..82d0bfa1eb
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/version-valid.js
@@ -0,0 +1 @@
+//# sourceMappingURL=version-valid.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/version-valid.js.map b/front_end/core/sdk/fixtures/sourcemaps/version-valid.js.map
new file mode 100644
index 0000000000..1a163052d8
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/version-valid.js.map
@@ -0,0 +1,6 @@
+{
+  "version" : 3,
+  "sources": [],
+  "names": [],
+  "mappings": ""
+}
-- 
2.39.2

                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/test426/chrome/0002-Add-reverse-mapping-code-to-test.patch                0000664 0000000 0000000 00000003565 14746647661 0027605 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        From bebeda0b8133fc8f44382e59edda9203c980e8f3 Mon Sep 17 00:00:00 2001
From: Asumu Takikawa <asumu@igalia.com>
Date: Thu, 11 Jul 2024 16:44:29 -0700
Subject: [PATCH 2/2] Add reverse mapping code to test

---
 front_end/core/sdk/SourceMapSpec.test.ts | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/front_end/core/sdk/SourceMapSpec.test.ts b/front_end/core/sdk/SourceMapSpec.test.ts
index 93b26a2e13..402b82e4c0 100644
--- a/front_end/core/sdk/SourceMapSpec.test.ts
+++ b/front_end/core/sdk/SourceMapSpec.test.ts
@@ -12,7 +12,6 @@
 
  **/
 
-const {assert} = chai;
 import type * as Platform from '../platform/platform.js';
 import {assertNotNullOrUndefined} from '../platform/platform.js';
 import { SourceMapV3, parseSourceMap } from './SourceMap.js';
@@ -170,6 +169,21 @@ describeWithEnvironment('SourceMapSpec', () => {
             assert.strictEqual(nullish(actual.sourceURL), originalSource, 'unexpected source URL');
             assert.strictEqual(nullish(actual.sourceLineNumber), originalLine, 'unexpected source line number');
             assert.strictEqual(nullish(actual.sourceColumnNumber), originalColumn, 'unexpected source column number');
+
+            if (originalSource != null) {
+              let reverseEntries = sourceMap.findReverseEntries(
+                originalSource as Platform.DevToolsPath.UrlString,
+                originalLine,
+                originalColumn
+              );
+
+              const anyEntryMatched = reverseEntries.some((entry) => {
+                  return entry.sourceURL === originalSource &&
+                    entry.sourceLineNumber === originalLine &&
+                    entry.sourceColumnNumber === originalColumn;
+                });
+              assert.isTrue(anyEntryMatched, `expected any matching reverse lookup entry, got none`);
+            }
           }
         });
       }
-- 
2.39.2

                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/                                                        0000775 0000000 0000000 00000000000 14746647661 0020632 5                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        node-23.7.0/test/fixtures/test426/resources/basic-mapping-as-index-map.js                           0000664 0000000 0000000 00000000166 14746647661 0026166 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function foo(){return 42}function bar(){return 24}foo();bar();
//# sourceMappingURL=basic-mapping-as-index-map.js.map
                                                                                                                                                                                                                                                                                                                                                                                                          node-23.7.0/test/fixtures/test426/resources/basic-mapping-as-index-map.js.map                       0000664 0000000 0000000 00000000540 14746647661 0026736 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "file": "basic-mapping-as-index-map.js",
  "sections": [
    {
      "offset": { "line": 0, "column": 0 },
      "map": {
        "version": 3,
        "names": ["foo","bar"],
        "sources": ["basic-mapping-original.js"],
        "mappings": "AAAA,SAASA,MACP,OAAO,EACT,CACA,SAASC,MACP,OAAO,EACT,CACAD,MACAC"
      }
    }
  ]
}
                                                                                                                                                                node-23.7.0/test/fixtures/test426/resources/basic-mapping-original.js                               0000664 0000000 0000000 00000000116 14746647661 0025502 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function foo() {
  return 42;
}
function bar() {
  return 24;
}
foo();
bar();
                                                                                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test426/resources/basic-mapping.js                                        0000664 0000000 0000000 00000000151 14746647661 0023677 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function foo(){return 42}function bar(){return 24}foo();bar();
//# sourceMappingURL=basic-mapping.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/test426/resources/basic-mapping.js.map                                    0000664 0000000 0000000 00000000250 14746647661 0024453 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version":3,
  "names": ["foo","bar"],
  "sources": ["basic-mapping-original.js"],
  "mappings":"AAAA,SAASA,MACP,OAAO,EACT,CACA,SAASC,MACP,OAAO,EACT,CACAD,MACAC"
}
                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test426/resources/file-not-a-string-1.js                                  0000664 0000000 0000000 00000000060 14746647661 0024561 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=file-not-a-string-1.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test426/resources/file-not-a-string-1.js.map                              0000664 0000000 0000000 00000000201 14746647661 0025332 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version" : 3,
  "file": [],
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "names": [],
  "mappings": ""
}
                                                                                                                                                                                                                                                                                                                                                                                               node-23.7.0/test/fixtures/test426/resources/file-not-a-string-2.js                                  0000664 0000000 0000000 00000000060 14746647661 0024562 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=file-not-a-string-2.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test426/resources/file-not-a-string-2.js.map                              0000664 0000000 0000000 00000000205 14746647661 0025337 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version" : 3,
  "file": 235324,
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "names": [],
  "mappings": ""
}
                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/ignore-list-empty.js                                    0000664 0000000 0000000 00000000056 14746647661 0024561 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=ignore-list-empty.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test426/resources/ignore-list-empty.js.map                                0000664 0000000 0000000 00000000207 14746647661 0025333 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version" : 3,
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "",
  "names": [],
  "ignoreList": []
}
                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test426/resources/ignore-list-out-of-bounds-1.js                          0000664 0000000 0000000 00000000070 14746647661 0026256 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=ignore-list-out-of-bounds-1.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test426/resources/ignore-list-out-of-bounds-1.js.map                      0000664 0000000 0000000 00000000210 14746647661 0027026 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version" : 3,
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "",
  "names": [],
  "ignoreList": [1]
}
                                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test426/resources/ignore-list-out-of-bounds-2.js                          0000664 0000000 0000000 00000000070 14746647661 0026257 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=ignore-list-out-of-bounds-2.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test426/resources/ignore-list-out-of-bounds-2.js.map                      0000664 0000000 0000000 00000000211 14746647661 0027030 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version" : 3,
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "",
  "names": [],
  "ignoreList": [-1]
}
                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/test426/resources/ignore-list-valid-1.js                                  0000664 0000000 0000000 00000000060 14746647661 0024653 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=ignore-list-valid-1.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test426/resources/ignore-list-valid-1.js.map                              0000664 0000000 0000000 00000000210 14746647661 0025424 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version" : 3,
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "",
  "names": [],
  "ignoreList": [0]
}
                                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test426/resources/ignore-list-wrong-type-1.js                             0000664 0000000 0000000 00000000065 14746647661 0025674 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=ignore-list-wrong-type-1.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/ignore-list-wrong-type-1.js.map                         0000664 0000000 0000000 00000000225 14746647661 0026446 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version" : 3,
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "",
  "names": [],
  "ignoreList": ["not a number"]
}
                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/ignore-list-wrong-type-2.js                             0000664 0000000 0000000 00000000065 14746647661 0025675 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=ignore-list-wrong-type-2.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/ignore-list-wrong-type-2.js.map                         0000664 0000000 0000000 00000000212 14746647661 0026443 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version" : 3,
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "",
  "names": [],
  "ignoreList": ["0"]
}
                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test426/resources/ignore-list-wrong-type-3.js                             0000664 0000000 0000000 00000000065 14746647661 0025676 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=ignore-list-wrong-type-3.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/ignore-list-wrong-type-3.js.map                         0000664 0000000 0000000 00000000206 14746647661 0026447 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version" : 3,
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "",
  "names": [],
  "ignoreList": 0
}
                                                                                                                                                                                                                                                                                                                                                                                          node-23.7.0/test/fixtures/test426/resources/ignore-list-wrong-type-4.js                             0000664 0000000 0000000 00000000065 14746647661 0025677 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=ignore-list-wrong-type-4.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/ignore-list-wrong-type-4.js.map                         0000664 0000000 0000000 00000000212 14746647661 0026445 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version" : 3,
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "",
  "names": [],
  "ignoreList": [0.5]
}
                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test426/resources/index-map-empty-sections.js                             0000664 0000000 0000000 00000000065 14746647661 0026034 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=index-map-empty-sections.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/index-map-empty-sections.js.map                         0000664 0000000 0000000 00000000045 14746647661 0026606 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sections": []
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/index-map-file-wrong-type-1.js                          0000664 0000000 0000000 00000000167 14746647661 0026242 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function foo(){return 42}function bar(){return 24}foo();bar();
//# sourceMappingURL=index-map-file-wrong-type-1.js.map
                                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test426/resources/index-map-file-wrong-type-1.js.map                      0000664 0000000 0000000 00000000503 14746647661 0027010 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "file": [],
  "sections": [
    {
      "offset": { "line": 0, "column": 0 },
      "map": {
        "version": 3,
        "names": ["foo","bar"],
        "sources": ["basic-mapping-original.js"],
        "mappings": "AAAA,SAASA,MACP,OAAO,EACT,CACA,SAASC,MACP,OAAO,EACT,CACAD,MACAC"
      }
    }
  ]
}
                                                                                                                                                                                             node-23.7.0/test/fixtures/test426/resources/index-map-file-wrong-type-2.js                          0000664 0000000 0000000 00000000167 14746647661 0026243 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function foo(){return 42}function bar(){return 24}foo();bar();
//# sourceMappingURL=index-map-file-wrong-type-2.js.map
                                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test426/resources/index-map-file-wrong-type-2.js.map                      0000664 0000000 0000000 00000000513 14746647661 0027012 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "file": 2345234234,
  "sections": [
    {
      "offset": { "line": 0, "column": 0 },
      "map": {
        "version": 3,
        "names": ["foo","bar"],
        "sources": ["basic-mapping-original.js"],
        "mappings": "AAAA,SAASA,MACP,OAAO,EACT,CACA,SAASC,MACP,OAAO,EACT,CACAD,MACAC"
      }
    }
  ]
}
                                                                                                                                                                                     node-23.7.0/test/fixtures/test426/resources/index-map-invalid-base-mappings.js                      0000664 0000000 0000000 00000000074 14746647661 0027223 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=index-map-invalid-base-mappings.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test426/resources/index-map-invalid-base-mappings.js.map                  0000664 0000000 0000000 00000000435 14746647661 0030000 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "mappings": "AAAA",
  "sections": [
    {
      "offset": { "line": 0, "column": 0 },
      "map": {
        "version": 3,
        "names": [],
        "sources": ["empty-original.js"],
        "sourcesContnet": [""],
        "mappings": "AAAA"
      }
    }
  ]
}
                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test426/resources/index-map-invalid-order.js                              0000664 0000000 0000000 00000000064 14746647661 0025607 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=index-map-invalid-order.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            node-23.7.0/test/fixtures/test426/resources/index-map-invalid-order.js.map                          0000664 0000000 0000000 00000000753 14746647661 0026370 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sections": [
    {
      "offset": { "line": 1, "column": 4 },
      "map": {
        "version": 3,
        "names": [],
        "sources": ["empty-original-1.js"],
        "sourcesContent": [""],
        "mappings": "AAAA"
      }
    },
    {
      "offset": { "line": 0, "column": 0 },
      "map": {
        "version": 3,
        "names": [],
        "sources": ["empty-original-2.js"],
        "sourcesContent": [""],
        "mappings": "AAAA"
      }
    }
  ]
}
                     node-23.7.0/test/fixtures/test426/resources/index-map-invalid-overlap.js                            0000664 0000000 0000000 00000000066 14746647661 0026146 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=index-map-invalid-overlap.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          node-23.7.0/test/fixtures/test426/resources/index-map-invalid-overlap.js.map                        0000664 0000000 0000000 00000000753 14746647661 0026725 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sections": [
    {
      "offset": { "line": 0, "column": 0 },
      "map": {
        "version": 3,
        "names": [],
        "sources": ["empty-original-1.js"],
        "sourcesContent": [""],
        "mappings": "AAAA"
      }
    },
    {
      "offset": { "line": 0, "column": 0 },
      "map": {
        "version": 3,
        "names": [],
        "sources": ["empty-original-2.js"],
        "sourcesContent": [""],
        "mappings": "AAAA"
      }
    }
  ]
}
                     node-23.7.0/test/fixtures/test426/resources/index-map-invalid-sub-map.js                            0000664 0000000 0000000 00000000066 14746647661 0026042 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=index-map-invalid-sub-map.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          node-23.7.0/test/fixtures/test426/resources/index-map-invalid-sub-map.js.map                        0000664 0000000 0000000 00000000317 14746647661 0026615 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "file": "index-map-invalid-sub-map.js",
  "sections": [
    {
      "offset": { "line": 0, "column": 0 },
      "map": {
        "version": "3",
        "mappings": 7
      }
    }
  ]
}
                                                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/test426/resources/index-map-missing-file.js                               0000664 0000000 0000000 00000000162 14746647661 0025435 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function foo(){return 42}function bar(){return 24}foo();bar();
//# sourceMappingURL=index-map-missing-file.js.map
                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test426/resources/index-map-missing-file.js.map                           0000664 0000000 0000000 00000000465 14746647661 0026217 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sections": [
    {
      "offset": { "line": 0, "column": 0 },
      "map": {
        "version": 3,
        "names": ["foo","bar"],
        "sources": ["basic-mapping-original.js"],
        "mappings": "AAAA,SAASA,MACP,OAAO,EACT,CACA,SAASC,MACP,OAAO,EACT,CACAD,MACAC"
      }
    }
  ]
}
                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/index-map-missing-map.js                                0000664 0000000 0000000 00000000062 14746647661 0025272 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=index-map-missing-map.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test426/resources/index-map-missing-map.js.map                            0000664 0000000 0000000 00000000137 14746647661 0026051 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sections": [
    {
      "offset": { "line": 0, "column": 0 }
    }
  ]
}
                                                                                                                                                                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/test426/resources/index-map-missing-offset-column.js                      0000664 0000000 0000000 00000000074 14746647661 0027301 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=index-map-missing-offset-column.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test426/resources/index-map-missing-offset-column.js.map                  0000664 0000000 0000000 00000000373 14746647661 0030057 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sections": [
    {
      "offset": { "line": 0  },
      "map": {
        "version": 3,
        "names": [],
        "sources": ["empty-original.js"],
        "sourcesContent": [""],
        "mappings": "AAAA"
      }
    }
  ]
}
                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test426/resources/index-map-missing-offset-line.js                        0000664 0000000 0000000 00000000072 14746647661 0026731 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=index-map-missing-offset-line.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test426/resources/index-map-missing-offset-line.js.map                    0000664 0000000 0000000 00000000374 14746647661 0027512 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sections": [
    {
      "offset": { "column": 0 },
      "map": {
        "version": 3,
        "names": [],
        "sources": ["empty-original.js"],
        "sourcesContent": [""],
        "mappings": "AAAA"
      }
    }
  ]
}
                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test426/resources/index-map-missing-offset.js                             0000664 0000000 0000000 00000000065 14746647661 0026006 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=index-map-missing-offset.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/index-map-missing-offset.js.map                         0000664 0000000 0000000 00000000333 14746647661 0026560 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sections": [
    {
      "map": {
        "version": 3,
        "names": [],
        "sources": ["empty-original.js"],
        "sourcesContent": [""],
        "mappings": "AAAA"
      }
    }
  ]
}
                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test426/resources/index-map-offset-column-wrong-type.js                   0000664 0000000 0000000 00000000077 14746647661 0027746 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=index-map-offset-column-wrong-type.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/test426/resources/index-map-offset-column-wrong-type.js.map               0000664 0000000 0000000 00000000412 14746647661 0030513 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sections": [
    {
      "offset": { "line": 0, "column": true },
      "map": {
        "version": 3,
        "names": [],
        "sources": ["empty-original.js"],
        "sourcesContent": [""],
        "mappings": "AAAA"
      }
    }
  ]
}
                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test426/resources/index-map-offset-line-wrong-type.js                     0000664 0000000 0000000 00000000075 14746647661 0027376 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=index-map-offset-line-wrong-type.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test426/resources/index-map-offset-line-wrong-type.js.map                 0000664 0000000 0000000 00000000412 14746647661 0030145 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sections": [
    {
      "offset": { "line": true, "column": 0 },
      "map": {
        "version": 3,
        "names": [],
        "sources": ["empty-original.js"],
        "sourcesContent": [""],
        "mappings": "AAAA"
      }
    }
  ]
}
                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test426/resources/index-map-two-concatenated-sources.js                   0000664 0000000 0000000 00000000237 14746647661 0027772 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function foo(){return 42}function bar(){return 24}foo();bar();function baz(){return"baz"}baz();
//# sourceMappingURL=index-map-two-concatenated-sources.js.map
                                                                                                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/test426/resources/index-map-two-concatenated-sources.js.map               0000664 0000000 0000000 00000001120 14746647661 0030536 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "file": "index-map-two-concatenated-sources.js",
  "sections": [
    {
      "offset": { "line": 0, "column": 0 },
      "map": {
        "version": 3,
        "names": ["foo","bar"],
        "sources": ["basic-mapping-original.js"],
        "mappings": "AAAA,SAASA,MACP,OAAO,EACT,CACA,SAASC,MACP,OAAO,EACT,CACAD,MACAC"
      }
    },
    {
      "offset": { "line": 0, "column": 62 },
      "map": {
        "version": 3,
        "names": ["baz"],
        "sources": ["second-source-original.js"],
        "mappings":"AAAA,SAASA,MACP,MAAO,KACT,CACAA"
      }
    }
  ]
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test426/resources/index-map-wrong-type-map.js                             0000664 0000000 0000000 00000000065 14746647661 0025737 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=index-map-wrong-type-map.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/index-map-wrong-type-map.js.map                         0000664 0000000 0000000 00000000171 14746647661 0026511 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sections": [
    {
      "offset": { "line": 0, "column": 0 },
      "map": "not a map"
    }
  ]
}
                                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/test426/resources/index-map-wrong-type-offset.js                          0000664 0000000 0000000 00000000070 14746647661 0026444 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=index-map-wrong-type-offset.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test426/resources/index-map-wrong-type-offset.js.map                      0000664 0000000 0000000 00000000374 14746647661 0027227 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sections": [
    {
      "offset": "not an offset",
      "map": {
        "version": 3,
        "names": [],
        "sources": ["empty-original.js"],
        "sourcesContent": [""],
        "mappings": "AAAA"
      }
    }
  ]
}
                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test426/resources/index-map-wrong-type-sections.js                        0000664 0000000 0000000 00000000072 14746647661 0027007 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=index-map-wrong-type-sections.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test426/resources/index-map-wrong-type-sections.js.map                    0000664 0000000 0000000 00000000070 14746647661 0027561 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "sections": "not a sections list"
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test426/resources/invalid-mapping-bad-separator.js                        0000664 0000000 0000000 00000000171 14746647661 0026770 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function foo(){return 42}function bar(){return 24}foo();bar();
//# sourceMappingURL=invalid-mapping-bad-separator.js.map
                                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/test426/resources/invalid-mapping-bad-separator.js.map                    0000664 0000000 0000000 00000000172 14746647661 0027545 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": ["foo","bar"],
  "sources": ["basic-mapping-original.js"],
  "mappings": "AAAA.SAASA:MACP"
}
                                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test426/resources/invalid-mapping-not-a-string-1.js                       0000664 0000000 0000000 00000000073 14746647661 0026725 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-not-a-string-1.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test426/resources/invalid-mapping-not-a-string-1.js.map                   0000664 0000000 0000000 00000000240 14746647661 0027475 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-not-a-string-1.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": 5
}
                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test426/resources/invalid-mapping-not-a-string-2.js                       0000664 0000000 0000000 00000000073 14746647661 0026726 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-not-a-string-2.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test426/resources/invalid-mapping-not-a-string-2.js.map                   0000664 0000000 0000000 00000000253 14746647661 0027502 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-not-a-string-2.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": [1, 2, 3, 4]
}
                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-column-too-large.js             0000664 0000000 0000000 00000000105 14746647661 0031065 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-segment-column-too-large.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-column-too-large.js.map         0000664 0000000 0000000 00000000262 14746647661 0031645 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-column-too-large.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "ggggggE"
}
                                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-name-index-out-of-bounds.js     0000664 0000000 0000000 00000000115 14746647661 0032426 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-segment-name-index-out-of-bounds.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-name-index-out-of-bounds.js.map 0000664 0000000 0000000 00000000275 14746647661 0033211 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": ["foo"],
  "file": "invalid-mapping-segment-name-index-out-of-bounds.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "AAAAC"
}
                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-name-index-too-large.js         0000664 0000000 0000000 00000000111 14746647661 0031612 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-segment-name-index-too-large.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-name-index-too-large.js.map     0000664 0000000 0000000 00000000272 14746647661 0032376 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-name-index-too-large.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "AAAAggggggE"
}
                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-negative-column.js              0000664 0000000 0000000 00000000104 14746647661 0030775 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-segment-negative-column.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                            node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-negative-column.js.map          0000664 0000000 0000000 00000000253 14746647661 0031556 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-negative-column.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "F"
}
                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-negative-name-index.js          0000664 0000000 0000000 00000000110 14746647661 0031522 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-segment-negative-name-index.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-negative-name-index.js.map      0000664 0000000 0000000 00000000263 14746647661 0032307 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-negative-name-index.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "AAAAF"
}
                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-negative-original-column.js     0000664 0000000 0000000 00000000115 14746647661 0032601 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-segment-negative-original-column.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-negative-original-column.js.map 0000664 0000000 0000000 00000000267 14746647661 0033365 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-negative-original-column.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "AAAF"
}
                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-negative-original-line.js       0000664 0000000 0000000 00000000113 14746647661 0032231 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-segment-negative-original-line.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-negative-original-line.js.map   0000664 0000000 0000000 00000000265 14746647661 0033015 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-negative-original-line.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "AAFA"
}
                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-negative-relative-column.js     0000664 0000000 0000000 00000000115 14746647661 0032610 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-segment-negative-relative-column.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-negative-relative-column.js.map 0000664 0000000 0000000 00000000266 14746647661 0033373 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-negative-relative-column.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "C,F"
}
                                                                                                                                                                                                                                                                                                                                          node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-negative-relative-name-index.js 0000664 0000000 0000000 00000000121 14746647661 0033335 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-segment-negative-relative-name-index.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                               invalid-mapping-segment-negative-relative-name-index.js.map                                         0000664 0000000 0000000 00000000302 14746647661 0034033 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/test/fixtures/test426/resources                                                                                                                            {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-negative-relative-name-index.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "AAAAC,AAAAF"
}
                                                                                                                                                                                                                                                                                                                              invalid-mapping-segment-negative-relative-original-column.js                                        0000664 0000000 0000000 00000000126 14746647661 0034335 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/test/fixtures/test426/resources                                                                                                                            //# sourceMappingURL=invalid-mapping-segment-negative-relative-original-column.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                          invalid-mapping-segment-negative-relative-original-column.js.map                                    0000664 0000000 0000000 00000000305 14746647661 0035110 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/test/fixtures/test426/resources                                                                                                                            {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-negative-relative-original-column.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "AAAC,AAAF"
}
                                                                                                                                                                                                                                                                                                                           invalid-mapping-segment-negative-relative-original-line.js                                          0000664 0000000 0000000 00000000124 14746647661 0033765 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/test/fixtures/test426/resources                                                                                                                            //# sourceMappingURL=invalid-mapping-segment-negative-relative-original-line.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                            invalid-mapping-segment-negative-relative-original-line.js.map                                      0000664 0000000 0000000 00000000303 14746647661 0034540 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/test/fixtures/test426/resources                                                                                                                            {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-negative-relative-original-line.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "AACA,AAFA"
}
                                                                                                                                                                                                                                                                                                                             invalid-mapping-segment-negative-relative-source-index.js                                           0000664 0000000 0000000 00000000123 14746647661 0033640 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/test/fixtures/test426/resources                                                                                                                            //# sourceMappingURL=invalid-mapping-segment-negative-relative-source-index.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                             invalid-mapping-segment-negative-relative-source-index.js.map                                       0000664 0000000 0000000 00000000302 14746647661 0034413 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/test/fixtures/test426/resources                                                                                                                            {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-negative-relative-source-index.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "ACAA,AFAA"
}
                                                                                                                                                                                                                                                                                                                              node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-negative-source-index.js        0000664 0000000 0000000 00000000112 14746647661 0032104 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-segment-negative-source-index.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                      node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-negative-source-index.js.map    0000664 0000000 0000000 00000000264 14746647661 0032670 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-negative-source-index.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "AFAA"
}
                                                                                                                                                                                                                                                                                                                                            node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-original-column-too-large.js    0000664 0000000 0000000 00000000116 14746647661 0032671 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-segment-original-column-too-large.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-original-column-too-large.js.map0000664 0000000 0000000 00000000276 14746647661 0033454 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-original-column-too-large.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "AAAggggggE"
}
                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-original-line-too-large.js      0000664 0000000 0000000 00000000114 14746647661 0032321 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-segment-original-line-too-large.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-original-line-too-large.js.map  0000664 0000000 0000000 00000000274 14746647661 0033104 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-original-line-too-large.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "AAggggggEA"
}
                                                                                                                                                                                                                                                                                                                                    node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-source-index-out-of-bounds.js   0000664 0000000 0000000 00000000117 14746647661 0033010 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-segment-source-index-out-of-bounds.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                 invalid-mapping-segment-source-index-out-of-bounds.js.map                                           0000664 0000000 0000000 00000000271 14746647661 0033506 0                                                                                                    ustar 00root                            root                            0000000 0000000 node-23.7.0/test/fixtures/test426/resources                                                                                                                            {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-source-index-out-of-bounds.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "ACAA"
}
                                                                                                                                                                                                                                                                                                                                       node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-source-index-too-large.js       0000664 0000000 0000000 00000000113 14746647661 0032174 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-segment-source-index-too-large.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-source-index-too-large.js.map   0000664 0000000 0000000 00000000273 14746647661 0032757 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-source-index-too-large.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": "AggggggEAA"
}
                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-with-three-fields.js            0000664 0000000 0000000 00000000205 14746647661 0031226 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function foo(){return 42}function bar(){return 24}foo();bar();
//# sourceMappingURL=invalid-mapping-segment-with-three-fields.js.map
                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-with-three-fields.js.map        0000664 0000000 0000000 00000000156 14746647661 0032007 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": ["foo","bar"],
  "sources": ["basic-mapping-original.js"],
  "mappings": "AAA"
}
                                                                                                                                                                                                                                                                                                                                                                                                                  node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-with-two-fields.js              0000664 0000000 0000000 00000000203 14746647661 0030726 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        function foo(){return 42}function bar(){return 24}foo();bar();
//# sourceMappingURL=invalid-mapping-segment-with-two-fields.js.map
                                                                                                                                                                                                                                                                                                                                                                                             node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-with-two-fields.js.map          0000664 0000000 0000000 00000000155 14746647661 0031510 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": ["foo","bar"],
  "sources": ["basic-mapping-original.js"],
  "mappings": "AA"
}
                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-with-zero-fields.js             0000664 0000000 0000000 00000000105 14746647661 0031075 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-mapping-segment-with-zero-fields.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/invalid-mapping-segment-with-zero-fields.js.map         0000664 0000000 0000000 00000000257 14746647661 0031661 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": [],
  "file": "invalid-mapping-segment-with-zero-fields.js",
  "sources": ["empty-original.js"],
  "sourcesContent": [""],
  "mappings": ",,,,"
}
                                                                                                                                                                                                                                                                                                                                                 node-23.7.0/test/fixtures/test426/resources/invalid-vlq-missing-continuation.js                     0000664 0000000 0000000 00000000075 14746647661 0027577 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-vlq-missing-continuation.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   node-23.7.0/test/fixtures/test426/resources/invalid-vlq-missing-continuation.js.map                 0000664 0000000 0000000 00000000107 14746647661 0030347 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version" : 3,
  "sources": [],
  "names": [],
  "mappings": "g"
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test426/resources/invalid-vlq-non-base64-char-padding.js                  0000664 0000000 0000000 00000000100 14746647661 0027576 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-vlq-non-base64-char-padding.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                node-23.7.0/test/fixtures/test426/resources/invalid-vlq-non-base64-char-padding.js.map              0000664 0000000 0000000 00000000167 14746647661 0030367 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version" : 3,
  "sources": ["foo.js"],
  "sourcesContent": ["hello world"],
  "names": [],
  "mappings": ";;A="
}
                                                                                                                                                                                                                                                                                                                                                                                                         node-23.7.0/test/fixtures/test426/resources/invalid-vlq-non-base64-char.js                          0000664 0000000 0000000 00000000070 14746647661 0026200 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        //# sourceMappingURL=invalid-vlq-non-base64-char.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        node-23.7.0/test/fixtures/test426/resources/invalid-vlq-non-base64-char.js.map                      0000664 0000000 0000000 00000000113 14746647661 0026752 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version" : 3,
  "sources": [],
  "names": [],
  "mappings": "A$%?!"
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                     node-23.7.0/test/fixtures/test426/resources/mapping-semantics-column-reset.js                       0000664 0000000 0000000 00000000105 14746647661 0027216 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                         foo
 bar
//# sourceMappingURL=mapping-semantics-column-reset.js.map
                                                                                                                                                                                                                                                                                                                                                                                                                                                           node-23.7.0/test/fixtures/test426/resources/mapping-semantics-column-reset.js.map                   0000664 0000000 0000000 00000000234 14746647661 0027775 0                                                                                                    ustar 00root                            root                            0000000 0000000                                                                                                                                                                        {
  "version": 3,
  "names": [],
  "sources": ["mapping-semantics-column-reset-original.js"],
  "sourcesContent": ["foo\nbar"],
  "mappings": "CAAA;CACA"
}
                                                                                                                                                                                                                                                                                                                                                                    